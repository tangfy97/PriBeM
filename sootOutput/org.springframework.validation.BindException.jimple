public class org.springframework.validation.BindException extends java.lang.Exception implements org.springframework.validation.BindingResult
{
    private final org.springframework.validation.BindingResult bindingResult;

    public void <init>(org.springframework.validation.BindingResult)
    {
        org.springframework.validation.BindingResult r1;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        r1 := @parameter0: org.springframework.validation.BindingResult;

        specialinvoke r0.<java.lang.Exception: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "BindingResult must not be null");

        r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult> = r1;

        return;
    }

    public void <init>(java.lang.Object, java.lang.String)
    {
        java.lang.Object r1;
        java.lang.String r3;
        org.springframework.validation.BeanPropertyBindingResult $r2;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Exception: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Target object must not be null");

        $r2 = new org.springframework.validation.BeanPropertyBindingResult;

        specialinvoke $r2.<org.springframework.validation.BeanPropertyBindingResult: void <init>(java.lang.Object,java.lang.String)>(r1, r3);

        r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult> = $r2;

        return;
    }

    public final org.springframework.validation.BindingResult getBindingResult()
    {
        org.springframework.validation.BindingResult $r1;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        $r1 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        return $r1;
    }

    public java.lang.String getObjectName()
    {
        org.springframework.validation.BindingResult $r1;
        java.lang.String $r2;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        $r1 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $r2 = interfaceinvoke $r1.<org.springframework.validation.BindingResult: java.lang.String getObjectName()>();

        return $r2;
    }

    public void setNestedPath(java.lang.String)
    {
        org.springframework.validation.BindingResult $r2;
        java.lang.String r1;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        interfaceinvoke $r2.<org.springframework.validation.BindingResult: void setNestedPath(java.lang.String)>(r1);

        return;
    }

    public java.lang.String getNestedPath()
    {
        org.springframework.validation.BindingResult $r1;
        java.lang.String $r2;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        $r1 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $r2 = interfaceinvoke $r1.<org.springframework.validation.BindingResult: java.lang.String getNestedPath()>();

        return $r2;
    }

    public void pushNestedPath(java.lang.String)
    {
        org.springframework.validation.BindingResult $r2;
        java.lang.String r1;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        interfaceinvoke $r2.<org.springframework.validation.BindingResult: void pushNestedPath(java.lang.String)>(r1);

        return;
    }

    public void popNestedPath() throws java.lang.IllegalStateException
    {
        org.springframework.validation.BindingResult $r1;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        $r1 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        interfaceinvoke $r1.<org.springframework.validation.BindingResult: void popNestedPath()>();

        return;
    }

    public void reject(java.lang.String)
    {
        org.springframework.validation.BindingResult $r2;
        java.lang.String r1;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        interfaceinvoke $r2.<org.springframework.validation.BindingResult: void reject(java.lang.String)>(r1);

        return;
    }

    public void reject(java.lang.String, java.lang.String)
    {
        org.springframework.validation.BindingResult $r3;
        java.lang.String r1, r2;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        interfaceinvoke $r3.<org.springframework.validation.BindingResult: void reject(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void reject(java.lang.String, java.lang.Object[], java.lang.String)
    {
        java.lang.Object[] r2;
        org.springframework.validation.BindingResult $r4;
        java.lang.String r1, r3;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        interfaceinvoke $r4.<org.springframework.validation.BindingResult: void reject(java.lang.String,java.lang.Object[],java.lang.String)>(r1, r2, r3);

        return;
    }

    public void rejectValue(java.lang.String, java.lang.String)
    {
        org.springframework.validation.BindingResult $r3;
        java.lang.String r1, r2;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        interfaceinvoke $r3.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void rejectValue(java.lang.String, java.lang.String, java.lang.String)
    {
        org.springframework.validation.BindingResult $r4;
        java.lang.String r1, r2, r3;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        interfaceinvoke $r4.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        return;
    }

    public void rejectValue(java.lang.String, java.lang.String, java.lang.Object[], java.lang.String)
    {
        java.lang.Object[] r3;
        org.springframework.validation.BindingResult $r5;
        java.lang.String r1, r2, r4;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        r4 := @parameter3: java.lang.String;

        $r5 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        interfaceinvoke $r5.<org.springframework.validation.BindingResult: void rejectValue(java.lang.String,java.lang.String,java.lang.Object[],java.lang.String)>(r1, r2, r3, r4);

        return;
    }

    public void addAllErrors(org.springframework.validation.Errors)
    {
        org.springframework.validation.Errors r1;
        org.springframework.validation.BindingResult $r2;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        r1 := @parameter0: org.springframework.validation.Errors;

        $r2 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        interfaceinvoke $r2.<org.springframework.validation.BindingResult: void addAllErrors(org.springframework.validation.Errors)>(r1);

        return;
    }

    public boolean hasErrors()
    {
        org.springframework.validation.BindingResult $r1;
        org.springframework.validation.BindException r0;
        boolean $z0;

        r0 := @this: org.springframework.validation.BindException;

        $r1 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $z0 = interfaceinvoke $r1.<org.springframework.validation.BindingResult: boolean hasErrors()>();

        return $z0;
    }

    public int getErrorCount()
    {
        int $i0;
        org.springframework.validation.BindingResult $r1;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        $r1 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $i0 = interfaceinvoke $r1.<org.springframework.validation.BindingResult: int getErrorCount()>();

        return $i0;
    }

    public java.util.List getAllErrors()
    {
        org.springframework.validation.BindingResult $r1;
        java.util.List $r2;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        $r1 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $r2 = interfaceinvoke $r1.<org.springframework.validation.BindingResult: java.util.List getAllErrors()>();

        return $r2;
    }

    public boolean hasGlobalErrors()
    {
        org.springframework.validation.BindingResult $r1;
        org.springframework.validation.BindException r0;
        boolean $z0;

        r0 := @this: org.springframework.validation.BindException;

        $r1 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $z0 = interfaceinvoke $r1.<org.springframework.validation.BindingResult: boolean hasGlobalErrors()>();

        return $z0;
    }

    public int getGlobalErrorCount()
    {
        int $i0;
        org.springframework.validation.BindingResult $r1;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        $r1 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $i0 = interfaceinvoke $r1.<org.springframework.validation.BindingResult: int getGlobalErrorCount()>();

        return $i0;
    }

    public java.util.List getGlobalErrors()
    {
        org.springframework.validation.BindingResult $r1;
        java.util.List $r2;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        $r1 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $r2 = interfaceinvoke $r1.<org.springframework.validation.BindingResult: java.util.List getGlobalErrors()>();

        return $r2;
    }

    public org.springframework.validation.ObjectError getGlobalError()
    {
        org.springframework.validation.BindingResult $r1;
        org.springframework.validation.BindException r0;
        org.springframework.validation.ObjectError $r2;

        r0 := @this: org.springframework.validation.BindException;

        $r1 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $r2 = interfaceinvoke $r1.<org.springframework.validation.BindingResult: org.springframework.validation.ObjectError getGlobalError()>();

        return $r2;
    }

    public boolean hasFieldErrors()
    {
        org.springframework.validation.BindingResult $r1;
        org.springframework.validation.BindException r0;
        boolean $z0;

        r0 := @this: org.springframework.validation.BindException;

        $r1 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $z0 = interfaceinvoke $r1.<org.springframework.validation.BindingResult: boolean hasFieldErrors()>();

        return $z0;
    }

    public int getFieldErrorCount()
    {
        int $i0;
        org.springframework.validation.BindingResult $r1;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        $r1 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $i0 = interfaceinvoke $r1.<org.springframework.validation.BindingResult: int getFieldErrorCount()>();

        return $i0;
    }

    public java.util.List getFieldErrors()
    {
        org.springframework.validation.BindingResult $r1;
        java.util.List $r2;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        $r1 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $r2 = interfaceinvoke $r1.<org.springframework.validation.BindingResult: java.util.List getFieldErrors()>();

        return $r2;
    }

    public org.springframework.validation.FieldError getFieldError()
    {
        org.springframework.validation.BindingResult $r1;
        org.springframework.validation.BindException r0;
        org.springframework.validation.FieldError $r2;

        r0 := @this: org.springframework.validation.BindException;

        $r1 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $r2 = interfaceinvoke $r1.<org.springframework.validation.BindingResult: org.springframework.validation.FieldError getFieldError()>();

        return $r2;
    }

    public boolean hasFieldErrors(java.lang.String)
    {
        org.springframework.validation.BindingResult $r2;
        java.lang.String r1;
        org.springframework.validation.BindException r0;
        boolean $z0;

        r0 := @this: org.springframework.validation.BindException;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $z0 = interfaceinvoke $r2.<org.springframework.validation.BindingResult: boolean hasFieldErrors(java.lang.String)>(r1);

        return $z0;
    }

    public int getFieldErrorCount(java.lang.String)
    {
        int $i0;
        org.springframework.validation.BindingResult $r2;
        java.lang.String r1;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $i0 = interfaceinvoke $r2.<org.springframework.validation.BindingResult: int getFieldErrorCount(java.lang.String)>(r1);

        return $i0;
    }

    public java.util.List getFieldErrors(java.lang.String)
    {
        java.util.List $r3;
        org.springframework.validation.BindingResult $r2;
        java.lang.String r1;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $r3 = interfaceinvoke $r2.<org.springframework.validation.BindingResult: java.util.List getFieldErrors(java.lang.String)>(r1);

        return $r3;
    }

    public org.springframework.validation.FieldError getFieldError(java.lang.String)
    {
        org.springframework.validation.FieldError $r3;
        org.springframework.validation.BindingResult $r2;
        java.lang.String r1;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $r3 = interfaceinvoke $r2.<org.springframework.validation.BindingResult: org.springframework.validation.FieldError getFieldError(java.lang.String)>(r1);

        return $r3;
    }

    public java.lang.Object getFieldValue(java.lang.String)
    {
        org.springframework.validation.BindingResult $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $r3 = interfaceinvoke $r2.<org.springframework.validation.BindingResult: java.lang.Object getFieldValue(java.lang.String)>(r1);

        return $r3;
    }

    public java.lang.Class getFieldType(java.lang.String)
    {
        org.springframework.validation.BindingResult $r2;
        java.lang.Class $r3;
        java.lang.String r1;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $r3 = interfaceinvoke $r2.<org.springframework.validation.BindingResult: java.lang.Class getFieldType(java.lang.String)>(r1);

        return $r3;
    }

    public java.lang.Object getTarget()
    {
        org.springframework.validation.BindingResult $r1;
        java.lang.Object $r2;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        $r1 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $r2 = interfaceinvoke $r1.<org.springframework.validation.BindingResult: java.lang.Object getTarget()>();

        return $r2;
    }

    public java.util.Map getModel()
    {
        org.springframework.validation.BindingResult $r1;
        org.springframework.validation.BindException r0;
        java.util.Map $r2;

        r0 := @this: org.springframework.validation.BindException;

        $r1 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $r2 = interfaceinvoke $r1.<org.springframework.validation.BindingResult: java.util.Map getModel()>();

        return $r2;
    }

    public java.lang.Object getRawFieldValue(java.lang.String)
    {
        org.springframework.validation.BindingResult $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $r3 = interfaceinvoke $r2.<org.springframework.validation.BindingResult: java.lang.Object getRawFieldValue(java.lang.String)>(r1);

        return $r3;
    }

    public java.beans.PropertyEditor findEditor(java.lang.String, java.lang.Class)
    {
        java.beans.PropertyEditor $r4;
        java.lang.Class r2;
        org.springframework.validation.BindingResult $r3;
        java.lang.String r1;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        $r3 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $r4 = interfaceinvoke $r3.<org.springframework.validation.BindingResult: java.beans.PropertyEditor findEditor(java.lang.String,java.lang.Class)>(r1, r2);

        return $r4;
    }

    public org.springframework.beans.PropertyEditorRegistry getPropertyEditorRegistry()
    {
        org.springframework.beans.PropertyEditorRegistry $r2;
        org.springframework.validation.BindingResult $r1;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        $r1 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $r2 = interfaceinvoke $r1.<org.springframework.validation.BindingResult: org.springframework.beans.PropertyEditorRegistry getPropertyEditorRegistry()>();

        return $r2;
    }

    public void addError(org.springframework.validation.ObjectError)
    {
        org.springframework.validation.BindingResult $r2;
        org.springframework.validation.BindException r0;
        org.springframework.validation.ObjectError r1;

        r0 := @this: org.springframework.validation.BindException;

        r1 := @parameter0: org.springframework.validation.ObjectError;

        $r2 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        interfaceinvoke $r2.<org.springframework.validation.BindingResult: void addError(org.springframework.validation.ObjectError)>(r1);

        return;
    }

    public java.lang.String[] resolveMessageCodes(java.lang.String, java.lang.String)
    {
        org.springframework.validation.BindingResult $r3;
        java.lang.String[] $r4;
        java.lang.String r1, r2;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $r4 = interfaceinvoke $r3.<org.springframework.validation.BindingResult: java.lang.String[] resolveMessageCodes(java.lang.String,java.lang.String)>(r1, r2);

        return $r4;
    }

    public void recordSuppressedField(java.lang.String)
    {
        org.springframework.validation.BindingResult $r2;
        java.lang.String r1;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        interfaceinvoke $r2.<org.springframework.validation.BindingResult: void recordSuppressedField(java.lang.String)>(r1);

        return;
    }

    public java.lang.String[] getSuppressedFields()
    {
        org.springframework.validation.BindingResult $r1;
        java.lang.String[] $r2;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        $r1 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $r2 = interfaceinvoke $r1.<org.springframework.validation.BindingResult: java.lang.String[] getSuppressedFields()>();

        return $r2;
    }

    public java.lang.String getMessage()
    {
        org.springframework.validation.BindingResult $r1;
        java.lang.String $r2;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        $r1 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r1;
        org.springframework.validation.BindingResult $r2;
        org.springframework.validation.BindException r0;
        boolean $z0;

        r0 := @this: org.springframework.validation.BindException;

        r1 := @parameter0: java.lang.Object;

        if r0 == r1 goto label1;

        $r2 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public int hashCode()
    {
        int $i0;
        org.springframework.validation.BindingResult $r1;
        org.springframework.validation.BindException r0;

        r0 := @this: org.springframework.validation.BindException;

        $r1 = r0.<org.springframework.validation.BindException: org.springframework.validation.BindingResult bindingResult>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }
}
