public abstract class com.sun.lwuit.layouts.Layout extends java.lang.Object
{

    public void <init>()
    {
        com.sun.lwuit.layouts.Layout r0;

        r0 := @this: com.sun.lwuit.layouts.Layout;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract void layoutContainer(com.sun.lwuit.Container);

    public abstract com.sun.lwuit.geom.Dimension getPreferredSize(com.sun.lwuit.Container);

    public void addLayoutComponent(java.lang.Object, com.sun.lwuit.Component, com.sun.lwuit.Container)
    {
        java.lang.IllegalStateException $r1;
        com.sun.lwuit.Container r10;
        com.sun.lwuit.Component r9;
        java.lang.Object r0;
        java.lang.StringBuilder $r2, $r3, $r7;
        java.lang.Class $r5;
        java.lang.String $r6, $r8;
        com.sun.lwuit.layouts.Layout r4;

        r4 := @this: com.sun.lwuit.layouts.Layout;

        r0 := @parameter0: java.lang.Object;

        r9 := @parameter1: com.sun.lwuit.Component;

        r10 := @parameter2: com.sun.lwuit.Container;

        if r0 == null goto label1;

        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Layout doesn\'t support adding with arguments: ");

        $r5 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r1;

     label1:
        return;
    }

    public void removeLayoutComponent(com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r1;
        com.sun.lwuit.layouts.Layout r0;

        r0 := @this: com.sun.lwuit.layouts.Layout;

        r1 := @parameter0: com.sun.lwuit.Component;

        return;
    }

    public java.lang.Object getComponentConstraint(com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r1;
        com.sun.lwuit.layouts.Layout r0;

        r0 := @this: com.sun.lwuit.layouts.Layout;

        r1 := @parameter0: com.sun.lwuit.Component;

        return null;
    }

    public boolean isOverlapSupported()
    {
        com.sun.lwuit.layouts.Layout r0;

        r0 := @this: com.sun.lwuit.layouts.Layout;

        return 0;
    }
}
