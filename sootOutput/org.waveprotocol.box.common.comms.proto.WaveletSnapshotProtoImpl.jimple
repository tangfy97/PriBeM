public final class org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl extends java.lang.Object implements org.waveprotocol.box.common.comms.WaveletSnapshot, org.waveprotocol.wave.communication.gson.GsonSerializable, org.waveprotocol.wave.communication.proto.ProtoWrapper
{
    private org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot proto;
    private org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder protoBuilder;

    public void <init>()
    {
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot proto> = null;

        $r1 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder newBuilder()>();

        r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder protoBuilder> = $r1;

        return;
    }

    public void <init>(org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot)
    {
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder $r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot r2;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        r2 := @parameter0: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot proto> = null;

        $r1 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder newBuilder()>();

        r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder protoBuilder> = $r1;

        r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot proto> = r2;

        return;
    }

    public void <init>(org.waveprotocol.box.common.comms.WaveletSnapshot)
    {
        org.waveprotocol.box.common.comms.WaveletSnapshot r2;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        r2 := @parameter0: org.waveprotocol.box.common.comms.WaveletSnapshot;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot proto> = null;

        $r1 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder newBuilder()>();

        r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder protoBuilder> = $r1;

        virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void copyFrom(org.waveprotocol.box.common.comms.WaveletSnapshot)>(r2);

        return;
    }

    public org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot getPB()
    {
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot proto>;

        return $r1;
    }

    public void setPB(org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot)
    {
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        r1 := @parameter0: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot;

        r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot proto> = r1;

        r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder protoBuilder> = null;

        return;
    }

    public void copyFrom(org.waveprotocol.box.common.comms.WaveletSnapshot)
    {
        org.waveprotocol.box.common.comms.WaveletSnapshot r1;
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r7;
        long $l0, $l1;
        org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl $r11;
        org.waveprotocol.box.common.comms.DocumentSnapshot r14;
        java.lang.String $r2, $r9, r13;
        org.waveprotocol.wave.federation.ProtocolHashedVersion $r8;
        boolean $z0, $z1;
        java.util.Iterator $r4, $r6;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        java.util.List $r3, $r5;
        java.lang.Object $r10, $r12;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        r1 := @parameter0: org.waveprotocol.box.common.comms.WaveletSnapshot;

        $r2 = interfaceinvoke r1.<org.waveprotocol.box.common.comms.WaveletSnapshot: java.lang.String getWaveletId()>();

        virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void setWaveletId(java.lang.String)>($r2);

        virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void clearParticipantId()>();

        $r3 = interfaceinvoke r1.<org.waveprotocol.box.common.comms.WaveletSnapshot: java.util.List getParticipantId()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.lang.String) $r12;

        virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void addParticipantId(java.lang.String)>(r13);

        goto label1;

     label2:
        virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void clearDocument()>();

        $r5 = interfaceinvoke r1.<org.waveprotocol.box.common.comms.WaveletSnapshot: java.util.List getDocument()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r10 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r14 = (org.waveprotocol.box.common.comms.DocumentSnapshot) $r10;

        $r11 = new org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl;

        specialinvoke $r11.<org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl: void <init>(org.waveprotocol.box.common.comms.DocumentSnapshot)>(r14);

        virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void addDocument(org.waveprotocol.box.common.comms.DocumentSnapshot)>($r11);

        goto label3;

     label4:
        $r7 = new org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        $r8 = interfaceinvoke r1.<org.waveprotocol.box.common.comms.WaveletSnapshot: org.waveprotocol.wave.federation.ProtocolHashedVersion getVersion()>();

        specialinvoke $r7.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void <init>(org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r8);

        virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void setVersion(org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r7);

        $l0 = interfaceinvoke r1.<org.waveprotocol.box.common.comms.WaveletSnapshot: long getLastModifiedTime()>();

        virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void setLastModifiedTime(long)>($l0);

        $r9 = interfaceinvoke r1.<org.waveprotocol.box.common.comms.WaveletSnapshot: java.lang.String getCreator()>();

        virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void setCreator(java.lang.String)>($r9);

        $l1 = interfaceinvoke r1.<org.waveprotocol.box.common.comms.WaveletSnapshot: long getCreationTime()>();

        virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void setCreationTime(long)>($l1);

        return;
    }

    public java.lang.String getWaveletId()
    {
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot $r1;
        java.lang.String $r2;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot: java.lang.String getWaveletId()>();

        return $r2;
    }

    public void setWaveletId(java.lang.String)
    {
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        java.lang.String r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder setWaveletId(java.lang.String)>(r1);

        return;
    }

    public java.util.List getParticipantId()
    {
        java.util.List $r2, $r3;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot: java.util.List getParticipantIdList()>();

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r3;
    }

    public void addAllParticipantId(java.util.List)
    {
        java.util.List r1;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder addAllParticipantId(java.lang.Iterable)>(r1);

        return;
    }

    public java.lang.String getParticipantId(int)
    {
        int i0;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot $r1;
        java.lang.String $r2;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        i0 := @parameter0: int;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot: java.lang.String getParticipantId(int)>(i0);

        return $r2;
    }

    public void setParticipantId(int, java.lang.String)
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder $r2;
        int i0;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder setParticipantId(int,java.lang.String)>(i0, r1);

        return;
    }

    public int getParticipantIdSize()
    {
        int $i0;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot proto>;

        $i0 = virtualinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot: int getParticipantIdCount()>();

        return $i0;
    }

    public void addParticipantId(java.lang.String)
    {
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        java.lang.String r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder addParticipantId(java.lang.String)>(r1);

        return;
    }

    public void clearParticipantId()
    {
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder clearParticipantId()>();

        return;
    }

    public java.util.List getDocument()
    {
        int $i0, i1;
        org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl $r2;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot $r3;
        java.util.ArrayList $r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$DocumentSnapshot $r4;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void switchToProto()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: int getDocumentSize()>();

        if i1 >= $i0 goto label2;

        $r2 = new org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl;

        $r3 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot proto>;

        $r4 = virtualinvoke $r3.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot: org.waveprotocol.box.common.comms.WaveClientRpc$DocumentSnapshot getDocument(int)>(i1);

        specialinvoke $r2.<org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl: void <init>(org.waveprotocol.box.common.comms.WaveClientRpc$DocumentSnapshot)>($r4);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public void addAllDocument(java.util.List)
    {
        java.util.List r0;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r4;
        org.waveprotocol.box.common.comms.DocumentSnapshot r3;
        boolean $z0;

        r4 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.waveprotocol.box.common.comms.DocumentSnapshot) $r2;

        virtualinvoke r4.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void addDocument(org.waveprotocol.box.common.comms.DocumentSnapshot)>(r3);

        goto label1;

     label2:
        return;
    }

    public org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl getDocument(int)
    {
        int i0;
        org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl $r1;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot $r2;
        org.waveprotocol.box.common.comms.WaveClientRpc$DocumentSnapshot $r3;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        i0 := @parameter0: int;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void switchToProto()>();

        $r1 = new org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl;

        $r2 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot proto>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot: org.waveprotocol.box.common.comms.WaveClientRpc$DocumentSnapshot getDocument(int)>(i0);

        specialinvoke $r1.<org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl: void <init>(org.waveprotocol.box.common.comms.WaveClientRpc$DocumentSnapshot)>($r3);

        return $r1;
    }

    public void setDocument(int, org.waveprotocol.box.common.comms.DocumentSnapshot)
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder $r2;
        int i0;
        org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl $r3;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.DocumentSnapshot r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$DocumentSnapshot $r4;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: org.waveprotocol.box.common.comms.DocumentSnapshot;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder protoBuilder>;

        $r3 = specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl getOrCreateDocumentSnapshotProtoImpl(org.waveprotocol.box.common.comms.DocumentSnapshot)>(r1);

        $r4 = virtualinvoke $r3.<org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$DocumentSnapshot getPB()>();

        virtualinvoke $r2.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder setDocument(int,org.waveprotocol.box.common.comms.WaveClientRpc$DocumentSnapshot)>(i0, $r4);

        return;
    }

    public int getDocumentSize()
    {
        int $i0;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot proto>;

        $i0 = virtualinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot: int getDocumentCount()>();

        return $i0;
    }

    public void addDocument(org.waveprotocol.box.common.comms.DocumentSnapshot)
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder $r2;
        org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl $r3;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.DocumentSnapshot r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$DocumentSnapshot $r4;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        r1 := @parameter0: org.waveprotocol.box.common.comms.DocumentSnapshot;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder protoBuilder>;

        $r3 = specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl getOrCreateDocumentSnapshotProtoImpl(org.waveprotocol.box.common.comms.DocumentSnapshot)>(r1);

        $r4 = virtualinvoke $r3.<org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$DocumentSnapshot getPB()>();

        virtualinvoke $r2.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder addDocument(org.waveprotocol.box.common.comms.WaveClientRpc$DocumentSnapshot)>($r4);

        return;
    }

    public void clearDocument()
    {
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder clearDocument()>();

        return;
    }

    public org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl getVersion()
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r1;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot $r2;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r3;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void switchToProto()>();

        $r1 = new org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        $r2 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot proto>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion getVersion()>();

        specialinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void <init>(org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion)>($r3);

        return $r1;
    }

    public void setVersion(org.waveprotocol.wave.federation.ProtocolHashedVersion)
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder $r1, $r3;
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r4;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.wave.federation.ProtocolHashedVersion r2;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r5;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolHashedVersion;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder clearVersion()>();

        $r3 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder protoBuilder>;

        $r4 = specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl getOrCreateProtocolHashedVersionProtoImpl(org.waveprotocol.wave.federation.ProtocolHashedVersion)>(r2);

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion getPB()>();

        virtualinvoke $r3.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder setVersion(org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion)>($r5);

        return;
    }

    public long getLastModifiedTime()
    {
        long $l0;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot proto>;

        $l0 = virtualinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot: long getLastModifiedTime()>();

        return $l0;
    }

    public void setLastModifiedTime(long)
    {
        long l0;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        l0 := @parameter0: long;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder setLastModifiedTime(long)>(l0);

        return;
    }

    public java.lang.String getCreator()
    {
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot $r1;
        java.lang.String $r2;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot: java.lang.String getCreator()>();

        return $r2;
    }

    public void setCreator(java.lang.String)
    {
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        java.lang.String r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder setCreator(java.lang.String)>(r1);

        return;
    }

    public long getCreationTime()
    {
        long $l0;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot proto>;

        $l0 = virtualinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot: long getCreationTime()>();

        return $l0;
    }

    public void setCreationTime(long)
    {
        long l0;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        l0 := @parameter0: long;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder setCreationTime(long)>(l0);

        return;
    }

    private org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl getOrCreateDocumentSnapshotProtoImpl(org.waveprotocol.box.common.comms.DocumentSnapshot)
    {
        org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl $r1, $r2;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r3;
        org.waveprotocol.box.common.comms.DocumentSnapshot r0;
        boolean $z0;

        r3 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        r0 := @parameter0: org.waveprotocol.box.common.comms.DocumentSnapshot;

        $z0 = r0 instanceof org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl;

        if $z0 == 0 goto label1;

        $r2 = (org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl) r0;

        return $r2;

     label1:
        $r1 = new org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl;

        specialinvoke $r1.<org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl: void <init>()>();

        virtualinvoke $r1.<org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl: void copyFrom(org.waveprotocol.box.common.comms.DocumentSnapshot)>(r0);

        return $r1;
    }

    private org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl getOrCreateProtocolHashedVersionProtoImpl(org.waveprotocol.wave.federation.ProtocolHashedVersion)
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r1, $r2;
        org.waveprotocol.wave.federation.ProtocolHashedVersion r0;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r3;
        boolean $z0;

        r3 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        r0 := @parameter0: org.waveprotocol.wave.federation.ProtocolHashedVersion;

        $z0 = r0 instanceof org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        if $z0 == 0 goto label1;

        $r2 = (org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl) r0;

        return $r2;

     label1:
        $r1 = new org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        specialinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void <init>()>();

        virtualinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void copyFrom(org.waveprotocol.wave.federation.ProtocolHashedVersion)>(r0);

        return $r1;
    }

    private void switchToProto()
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder $r2;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot $r1, $r3;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot proto>;

        if $r1 != null goto label1;

        $r2 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder protoBuilder>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot build()>();

        r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot proto> = $r3;

        r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder protoBuilder> = null;

     label1:
        return;
    }

    private void switchToProtoBuilder()
    {
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder $r1, $r4;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot $r2, $r3;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder protoBuilder>;

        if $r1 != null goto label3;

        $r2 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot proto>;

        if $r2 != null goto label1;

        $r4 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder newBuilder()>();

        goto label2;

     label1:
        $r3 = r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot proto>;

        $r4 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder newBuilder(org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot)>($r3);

     label2:
        r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder protoBuilder> = $r4;

        r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot proto> = null;

     label3:
        return;
    }

    private void invalidateAll()
    {
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot proto> = null;

        $r1 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder newBuilder()>();

        r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot$Builder protoBuilder> = $r1;

        return;
    }

    public com.google.gson.JsonElement toGson(org.waveprotocol.wave.communication.json.RawStringData, com.google.gson.Gson)
    {
        com.google.gson.JsonObject $r0;
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r6;
        long $l2, $l3;
        org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl $r14;
        com.google.gson.JsonElement $r9, $r15;
        com.google.gson.Gson r8;
        int $i0, $i1, i4, i5;
        com.google.gson.JsonPrimitive $r1, $r11, $r16;
        java.lang.String $r3, $r12, $r17;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r2;
        org.waveprotocol.wave.communication.json.RawStringData r7;
        com.google.gson.JsonArray $r4, $r5, $r10, $r13;

        r2 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        r7 := @parameter0: org.waveprotocol.wave.communication.json.RawStringData;

        r8 := @parameter1: com.google.gson.Gson;

        $r0 = new com.google.gson.JsonObject;

        specialinvoke $r0.<com.google.gson.JsonObject: void <init>()>();

        $r1 = new com.google.gson.JsonPrimitive;

        $r3 = virtualinvoke r2.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: java.lang.String getWaveletId()>();

        specialinvoke $r1.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>($r3);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("1", $r1);

        $r4 = new com.google.gson.JsonArray;

        specialinvoke $r4.<com.google.gson.JsonArray: void <init>()>();

        i4 = 0;

     label1:
        $i0 = virtualinvoke r2.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: int getParticipantIdSize()>();

        if i4 >= $i0 goto label2;

        $r16 = new com.google.gson.JsonPrimitive;

        $r17 = virtualinvoke r2.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: java.lang.String getParticipantId(int)>(i4);

        specialinvoke $r16.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>($r17);

        virtualinvoke $r4.<com.google.gson.JsonArray: void add(com.google.gson.JsonElement)>($r16);

        i4 = i4 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("2", $r4);

        $r5 = new com.google.gson.JsonArray;

        specialinvoke $r5.<com.google.gson.JsonArray: void <init>()>();

        i5 = 0;

     label3:
        $i1 = virtualinvoke r2.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: int getDocumentSize()>();

        if i5 >= $i1 goto label4;

        $r14 = virtualinvoke r2.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl getDocument(int)>(i5);

        $r15 = interfaceinvoke $r14.<org.waveprotocol.wave.communication.gson.GsonSerializable: com.google.gson.JsonElement toGson(org.waveprotocol.wave.communication.json.RawStringData,com.google.gson.Gson)>(r7, r8);

        virtualinvoke $r5.<com.google.gson.JsonArray: void add(com.google.gson.JsonElement)>($r15);

        i5 = i5 + 1;

        goto label3;

     label4:
        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("3", $r5);

        $r6 = virtualinvoke r2.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl getVersion()>();

        $r9 = interfaceinvoke $r6.<org.waveprotocol.wave.communication.gson.GsonSerializable: com.google.gson.JsonElement toGson(org.waveprotocol.wave.communication.json.RawStringData,com.google.gson.Gson)>(r7, r8);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("4", $r9);

        $l2 = virtualinvoke r2.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: long getLastModifiedTime()>();

        $r10 = staticinvoke <org.waveprotocol.wave.communication.gson.GsonUtil: com.google.gson.JsonArray toJson(long)>($l2);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("5", $r10);

        $r11 = new com.google.gson.JsonPrimitive;

        $r12 = virtualinvoke r2.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: java.lang.String getCreator()>();

        specialinvoke $r11.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>($r12);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("6", $r11);

        $l3 = virtualinvoke r2.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: long getCreationTime()>();

        $r13 = staticinvoke <org.waveprotocol.wave.communication.gson.GsonUtil: com.google.gson.JsonArray toJson(long)>($l3);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("7", $r13);

        return $r0;
    }

    public void fromGson(com.google.gson.JsonElement, com.google.gson.Gson, org.waveprotocol.wave.communication.json.RawStringData) throws org.waveprotocol.wave.communication.gson.GsonException
    {
        com.google.gson.JsonObject $r1;
        org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl $r13;
        com.google.gson.Gson r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.google.gson.JsonArray $r12, $r16;
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r8;
        long $l0, $l1;
        com.google.gson.JsonElement r0, $r3, $r4, $r6, $r7, $r11, $r14, $r15, $r17, $r19;
        int $i2, $i3, i4, i5;
        java.lang.String $r5, $r18, $r20;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r2;
        org.waveprotocol.wave.communication.json.RawStringData r10;

        r2 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        r0 := @parameter0: com.google.gson.JsonElement;

        r9 := @parameter1: com.google.gson.Gson;

        r10 := @parameter2: org.waveprotocol.wave.communication.json.RawStringData;

        $r1 = virtualinvoke r0.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>();

        specialinvoke r2.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void invalidateAll()>();

        $z0 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("1");

        if $z0 == 0 goto label1;

        $r19 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("1");

        $r20 = virtualinvoke $r19.<com.google.gson.JsonElement: java.lang.String getAsString()>();

        virtualinvoke r2.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void setWaveletId(java.lang.String)>($r20);

     label1:
        $z1 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("2");

        if $z1 == 0 goto label3;

        $r15 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("2");

        $r16 = virtualinvoke $r15.<com.google.gson.JsonElement: com.google.gson.JsonArray getAsJsonArray()>();

        i4 = 0;

     label2:
        $i3 = virtualinvoke $r16.<com.google.gson.JsonArray: int size()>();

        if i4 >= $i3 goto label3;

        $r17 = virtualinvoke $r16.<com.google.gson.JsonArray: com.google.gson.JsonElement get(int)>(i4);

        $r18 = virtualinvoke $r17.<com.google.gson.JsonElement: java.lang.String getAsString()>();

        virtualinvoke r2.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void addParticipantId(java.lang.String)>($r18);

        i4 = i4 + 1;

        goto label2;

     label3:
        $z2 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("3");

        if $z2 == 0 goto label5;

        $r11 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("3");

        $r12 = virtualinvoke $r11.<com.google.gson.JsonElement: com.google.gson.JsonArray getAsJsonArray()>();

        i5 = 0;

     label4:
        $i2 = virtualinvoke $r12.<com.google.gson.JsonArray: int size()>();

        if i5 >= $i2 goto label5;

        $r13 = new org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl;

        specialinvoke $r13.<org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl: void <init>()>();

        $r14 = virtualinvoke $r12.<com.google.gson.JsonArray: com.google.gson.JsonElement get(int)>(i5);

        staticinvoke <org.waveprotocol.wave.communication.gson.GsonUtil: void extractJsonObject(org.waveprotocol.wave.communication.gson.GsonSerializable,com.google.gson.JsonElement,com.google.gson.Gson,org.waveprotocol.wave.communication.json.RawStringData)>($r13, $r14, r9, r10);

        virtualinvoke r2.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void addDocument(org.waveprotocol.box.common.comms.DocumentSnapshot)>($r13);

        i5 = i5 + 1;

        goto label4;

     label5:
        $z3 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("4");

        if $z3 == 0 goto label6;

        $r7 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("4");

        $r8 = new org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        specialinvoke $r8.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void <init>()>();

        staticinvoke <org.waveprotocol.wave.communication.gson.GsonUtil: void extractJsonObject(org.waveprotocol.wave.communication.gson.GsonSerializable,com.google.gson.JsonElement,com.google.gson.Gson,org.waveprotocol.wave.communication.json.RawStringData)>($r8, $r7, r9, r10);

        virtualinvoke r2.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void setVersion(org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r8);

     label6:
        $z4 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("5");

        if $z4 == 0 goto label7;

        $r6 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("5");

        $l1 = staticinvoke <org.waveprotocol.wave.communication.gson.GsonUtil: long fromJson(com.google.gson.JsonElement)>($r6);

        virtualinvoke r2.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void setLastModifiedTime(long)>($l1);

     label7:
        $z5 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("6");

        if $z5 == 0 goto label8;

        $r4 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("6");

        $r5 = virtualinvoke $r4.<com.google.gson.JsonElement: java.lang.String getAsString()>();

        virtualinvoke r2.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void setCreator(java.lang.String)>($r5);

     label8:
        $z6 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("7");

        if $z6 == 0 goto label9;

        $r3 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("7");

        $l0 = staticinvoke <org.waveprotocol.wave.communication.gson.GsonUtil: long fromJson(com.google.gson.JsonElement)>($r3);

        virtualinvoke r2.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void setCreationTime(long)>($l0);

     label9:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r1;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0, $r3;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot $r2, $r4;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot getPB()>();

        $r3 = (org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl) r1;

        $r4 = virtualinvoke $r3.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot getPB()>();

        $z1 = virtualinvoke $r2.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot: boolean equals(java.lang.Object)>($r4);

        return $z1;

     label2:
        return 0;
    }

    public boolean isEqualTo(java.lang.Object)
    {
        org.waveprotocol.box.common.comms.WaveletSnapshot $r2;
        java.lang.Object r1;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = r1 instanceof org.waveprotocol.box.common.comms.WaveletSnapshot;

        if $z1 == 0 goto label2;

        $r2 = (org.waveprotocol.box.common.comms.WaveletSnapshot) r1;

        $z2 = staticinvoke <org.waveprotocol.box.common.comms.WaveletSnapshotUtil: boolean isEqual(org.waveprotocol.box.common.comms.WaveletSnapshot,org.waveprotocol.box.common.comms.WaveletSnapshot)>(r0, $r2);

        return $z2;

     label2:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot getPB()>();

        $i0 = virtualinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot $r1;
        java.lang.String $r2;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot getPB()>();

        $r2 = virtualinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot: java.lang.String toString()>();

        return $r2;
    }

    public volatile org.waveprotocol.wave.federation.ProtocolHashedVersion getVersion()
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r1;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl getVersion()>();

        return $r1;
    }

    public volatile org.waveprotocol.box.common.comms.DocumentSnapshot getDocument(int)
    {
        int i0;
        org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl $r1;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.proto.DocumentSnapshotProtoImpl getDocument(int)>(i0);

        return $r1;
    }

    public volatile com.google.protobuf.MessageLite getPB()
    {
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot getPB()>();

        return $r1;
    }

    public volatile void setPB(com.google.protobuf.MessageLite)
    {
        com.google.protobuf.MessageLite r1;
        org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot $r2;

        r0 := @this: org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl;

        r1 := @parameter0: com.google.protobuf.MessageLite;

        $r2 = (org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot) r1;

        virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.WaveletSnapshotProtoImpl: void setPB(org.waveprotocol.box.common.comms.WaveClientRpc$WaveletSnapshot)>($r2);

        return;
    }
}
