public class org.mortbay.io.nio.IndirectNIOBuffer extends org.mortbay.io.ByteArrayBuffer implements org.mortbay.io.nio.NIOBuffer
{
    protected java.nio.ByteBuffer _buf;

    public void <init>(int)
    {
        byte[] $r6;
        java.nio.ByteBuffer $r1, $r2, $r3, $r4, $r5;
        int i0, $i1;
        org.mortbay.io.nio.IndirectNIOBuffer r0;

        r0 := @this: org.mortbay.io.nio.IndirectNIOBuffer;

        i0 := @parameter0: int;

        specialinvoke r0.<org.mortbay.io.ByteArrayBuffer: void <init>(int,boolean)>(2, 0);

        $r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i0);

        r0.<org.mortbay.io.nio.IndirectNIOBuffer: java.nio.ByteBuffer _buf> = $r1;

        $r2 = r0.<org.mortbay.io.nio.IndirectNIOBuffer: java.nio.ByteBuffer _buf>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        $r4 = r0.<org.mortbay.io.nio.IndirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $r3 = r0.<org.mortbay.io.nio.IndirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $i1 = virtualinvoke $r3.<java.nio.ByteBuffer: int capacity()>();

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i1);

        $r5 = r0.<org.mortbay.io.nio.IndirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $r6 = virtualinvoke $r5.<java.nio.ByteBuffer: byte[] array()>();

        r0.<org.mortbay.io.nio.IndirectNIOBuffer: byte[] _bytes> = $r6;

        return;
    }

    public void <init>(java.nio.ByteBuffer, boolean)
    {
        byte[] $r3;
        java.lang.IllegalArgumentException $r4;
        java.nio.ByteBuffer r1, $r2;
        byte $b2;
        int $i0, $i1;
        org.mortbay.io.nio.IndirectNIOBuffer r0;
        boolean z0, $z1;

        r0 := @this: org.mortbay.io.nio.IndirectNIOBuffer;

        r1 := @parameter0: java.nio.ByteBuffer;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $b2 = 0;

        goto label2;

     label1:
        $b2 = 2;

     label2:
        specialinvoke r0.<org.mortbay.io.ByteArrayBuffer: void <init>(int,boolean)>($b2, 0);

        $z1 = virtualinvoke r1.<java.nio.ByteBuffer: boolean isDirect()>();

        if $z1 == 0 goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label3:
        r0.<org.mortbay.io.nio.IndirectNIOBuffer: java.nio.ByteBuffer _buf> = r1;

        $i0 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();

        virtualinvoke r0.<org.mortbay.io.nio.IndirectNIOBuffer: void setGetIndex(int)>($i0);

        $i1 = virtualinvoke r1.<java.nio.ByteBuffer: int limit()>();

        virtualinvoke r0.<org.mortbay.io.nio.IndirectNIOBuffer: void setPutIndex(int)>($i1);

        $r2 = r0.<org.mortbay.io.nio.IndirectNIOBuffer: java.nio.ByteBuffer _buf>;

        $r3 = virtualinvoke $r2.<java.nio.ByteBuffer: byte[] array()>();

        r0.<org.mortbay.io.nio.IndirectNIOBuffer: byte[] _bytes> = $r3;

        return;
    }

    public java.nio.ByteBuffer getByteBuffer()
    {
        org.mortbay.io.nio.IndirectNIOBuffer r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: org.mortbay.io.nio.IndirectNIOBuffer;

        $r1 = r0.<org.mortbay.io.nio.IndirectNIOBuffer: java.nio.ByteBuffer _buf>;

        return $r1;
    }

    public boolean isDirect()
    {
        org.mortbay.io.nio.IndirectNIOBuffer r0;

        r0 := @this: org.mortbay.io.nio.IndirectNIOBuffer;

        return 0;
    }
}
