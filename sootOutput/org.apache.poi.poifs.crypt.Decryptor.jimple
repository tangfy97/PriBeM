public abstract class org.apache.poi.poifs.crypt.Decryptor extends java.lang.Object
{
    public static final java.lang.String DEFAULT_PASSWORD;
    protected final org.apache.poi.poifs.crypt.EncryptionInfo info;
    private javax.crypto.SecretKey secretKey;
    private byte[] verifier;
    private byte[] integrityHmacKey;
    private byte[] integrityHmacValue;

    protected void <init>(org.apache.poi.poifs.crypt.EncryptionInfo)
    {
        org.apache.poi.poifs.crypt.Decryptor r0;
        org.apache.poi.poifs.crypt.EncryptionInfo r1;

        r0 := @this: org.apache.poi.poifs.crypt.Decryptor;

        r1 := @parameter0: org.apache.poi.poifs.crypt.EncryptionInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.poifs.crypt.Decryptor: org.apache.poi.poifs.crypt.EncryptionInfo info> = r1;

        return;
    }

    public abstract java.io.InputStream getDataStream(org.apache.poi.poifs.filesystem.DirectoryNode) throws java.io.IOException, java.security.GeneralSecurityException;

    public abstract boolean verifyPassword(java.lang.String) throws java.security.GeneralSecurityException;

    public abstract long getLength();

    public static org.apache.poi.poifs.crypt.Decryptor getInstance(org.apache.poi.poifs.crypt.EncryptionInfo)
    {
        org.apache.poi.poifs.crypt.Decryptor $r1;
        org.apache.poi.poifs.crypt.EncryptionInfo r0;
        org.apache.poi.EncryptedDocumentException $r2;

        r0 := @parameter0: org.apache.poi.poifs.crypt.EncryptionInfo;

        $r1 = virtualinvoke r0.<org.apache.poi.poifs.crypt.EncryptionInfo: org.apache.poi.poifs.crypt.Decryptor getDecryptor()>();

        if $r1 != null goto label1;

        $r2 = new org.apache.poi.EncryptedDocumentException;

        specialinvoke $r2.<org.apache.poi.EncryptedDocumentException: void <init>(java.lang.String)>("Unsupported version");

        throw $r2;

     label1:
        return $r1;
    }

    public java.io.InputStream getDataStream(org.apache.poi.poifs.filesystem.NPOIFSFileSystem) throws java.io.IOException, java.security.GeneralSecurityException
    {
        org.apache.poi.poifs.filesystem.DirectoryNode $r2;
        org.apache.poi.poifs.filesystem.NPOIFSFileSystem r1;
        org.apache.poi.poifs.crypt.Decryptor r0;
        java.io.InputStream $r3;

        r0 := @this: org.apache.poi.poifs.crypt.Decryptor;

        r1 := @parameter0: org.apache.poi.poifs.filesystem.NPOIFSFileSystem;

        $r2 = virtualinvoke r1.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: org.apache.poi.poifs.filesystem.DirectoryNode getRoot()>();

        $r3 = virtualinvoke r0.<org.apache.poi.poifs.crypt.Decryptor: java.io.InputStream getDataStream(org.apache.poi.poifs.filesystem.DirectoryNode)>($r2);

        return $r3;
    }

    public java.io.InputStream getDataStream(org.apache.poi.poifs.filesystem.POIFSFileSystem) throws java.io.IOException, java.security.GeneralSecurityException
    {
        org.apache.poi.poifs.filesystem.DirectoryNode $r2;
        org.apache.poi.poifs.filesystem.POIFSFileSystem r1;
        org.apache.poi.poifs.crypt.Decryptor r0;
        java.io.InputStream $r3;

        r0 := @this: org.apache.poi.poifs.crypt.Decryptor;

        r1 := @parameter0: org.apache.poi.poifs.filesystem.POIFSFileSystem;

        $r2 = virtualinvoke r1.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DirectoryNode getRoot()>();

        $r3 = virtualinvoke r0.<org.apache.poi.poifs.crypt.Decryptor: java.io.InputStream getDataStream(org.apache.poi.poifs.filesystem.DirectoryNode)>($r2);

        return $r3;
    }

    public byte[] getVerifier()
    {
        org.apache.poi.poifs.crypt.Decryptor r0;
        byte[] $r1;

        r0 := @this: org.apache.poi.poifs.crypt.Decryptor;

        $r1 = r0.<org.apache.poi.poifs.crypt.Decryptor: byte[] verifier>;

        return $r1;
    }

    public javax.crypto.SecretKey getSecretKey()
    {
        org.apache.poi.poifs.crypt.Decryptor r0;
        javax.crypto.SecretKey $r1;

        r0 := @this: org.apache.poi.poifs.crypt.Decryptor;

        $r1 = r0.<org.apache.poi.poifs.crypt.Decryptor: javax.crypto.SecretKey secretKey>;

        return $r1;
    }

    public byte[] getIntegrityHmacKey()
    {
        org.apache.poi.poifs.crypt.Decryptor r0;
        byte[] $r1;

        r0 := @this: org.apache.poi.poifs.crypt.Decryptor;

        $r1 = r0.<org.apache.poi.poifs.crypt.Decryptor: byte[] integrityHmacKey>;

        return $r1;
    }

    public byte[] getIntegrityHmacValue()
    {
        org.apache.poi.poifs.crypt.Decryptor r0;
        byte[] $r1;

        r0 := @this: org.apache.poi.poifs.crypt.Decryptor;

        $r1 = r0.<org.apache.poi.poifs.crypt.Decryptor: byte[] integrityHmacValue>;

        return $r1;
    }

    protected void setSecretKey(javax.crypto.SecretKey)
    {
        org.apache.poi.poifs.crypt.Decryptor r0;
        javax.crypto.SecretKey r1;

        r0 := @this: org.apache.poi.poifs.crypt.Decryptor;

        r1 := @parameter0: javax.crypto.SecretKey;

        r0.<org.apache.poi.poifs.crypt.Decryptor: javax.crypto.SecretKey secretKey> = r1;

        return;
    }

    protected void setVerifier(byte[])
    {
        org.apache.poi.poifs.crypt.Decryptor r0;
        byte[] r1;

        r0 := @this: org.apache.poi.poifs.crypt.Decryptor;

        r1 := @parameter0: byte[];

        r0.<org.apache.poi.poifs.crypt.Decryptor: byte[] verifier> = r1;

        return;
    }

    protected void setIntegrityHmacKey(byte[])
    {
        org.apache.poi.poifs.crypt.Decryptor r0;
        byte[] r1;

        r0 := @this: org.apache.poi.poifs.crypt.Decryptor;

        r1 := @parameter0: byte[];

        r0.<org.apache.poi.poifs.crypt.Decryptor: byte[] integrityHmacKey> = r1;

        return;
    }

    protected void setIntegrityHmacValue(byte[])
    {
        org.apache.poi.poifs.crypt.Decryptor r0;
        byte[] r1;

        r0 := @this: org.apache.poi.poifs.crypt.Decryptor;

        r1 := @parameter0: byte[];

        r0.<org.apache.poi.poifs.crypt.Decryptor: byte[] integrityHmacValue> = r1;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.poi.poifs.crypt.Decryptor: java.lang.String DEFAULT_PASSWORD> = "VelvetSweatshop";

        return;
    }
}
