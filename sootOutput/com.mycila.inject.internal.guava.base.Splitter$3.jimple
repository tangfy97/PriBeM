final class com.mycila.inject.internal.guava.base.Splitter$3 extends java.lang.Object implements com.mycila.inject.internal.guava.base.Splitter$Strategy
{
    final java.util.regex.Pattern val$separatorPattern;

    void <init>(java.util.regex.Pattern)
    {
        java.util.regex.Pattern r1;
        com.mycila.inject.internal.guava.base.Splitter$3 r0;

        r0 := @this: com.mycila.inject.internal.guava.base.Splitter$3;

        r1 := @parameter0: java.util.regex.Pattern;

        r0.<com.mycila.inject.internal.guava.base.Splitter$3: java.util.regex.Pattern val$separatorPattern> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.mycila.inject.internal.guava.base.Splitter$SplittingIterator iterator(com.mycila.inject.internal.guava.base.Splitter, java.lang.CharSequence)
    {
        java.util.regex.Matcher $r3;
        java.lang.CharSequence r1;
        com.mycila.inject.internal.guava.base.Splitter$3$1 $r4;
        java.util.regex.Pattern $r2;
        com.mycila.inject.internal.guava.base.Splitter$3 r0;
        com.mycila.inject.internal.guava.base.Splitter r5;

        r0 := @this: com.mycila.inject.internal.guava.base.Splitter$3;

        r5 := @parameter0: com.mycila.inject.internal.guava.base.Splitter;

        r1 := @parameter1: java.lang.CharSequence;

        $r2 = r0.<com.mycila.inject.internal.guava.base.Splitter$3: java.util.regex.Pattern val$separatorPattern>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $r4 = new com.mycila.inject.internal.guava.base.Splitter$3$1;

        specialinvoke $r4.<com.mycila.inject.internal.guava.base.Splitter$3$1: void <init>(com.mycila.inject.internal.guava.base.Splitter$3,com.mycila.inject.internal.guava.base.Splitter,java.lang.CharSequence,java.util.regex.Matcher)>(r0, r5, r1, $r3);

        return $r4;
    }

    public volatile java.util.Iterator iterator(com.mycila.inject.internal.guava.base.Splitter, java.lang.CharSequence)
    {
        java.lang.CharSequence r2;
        com.mycila.inject.internal.guava.base.Splitter$SplittingIterator $r3;
        com.mycila.inject.internal.guava.base.Splitter$3 r0;
        com.mycila.inject.internal.guava.base.Splitter r1;

        r0 := @this: com.mycila.inject.internal.guava.base.Splitter$3;

        r1 := @parameter0: com.mycila.inject.internal.guava.base.Splitter;

        r2 := @parameter1: java.lang.CharSequence;

        $r3 = virtualinvoke r0.<com.mycila.inject.internal.guava.base.Splitter$3: com.mycila.inject.internal.guava.base.Splitter$SplittingIterator iterator(com.mycila.inject.internal.guava.base.Splitter,java.lang.CharSequence)>(r1, r2);

        return $r3;
    }
}
