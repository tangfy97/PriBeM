public class org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream extends javax.swing.JPanel implements org.wiztools.restclient.ui.reqbody.ReqBodyPanel
{
    org.wiztools.restclient.ui.RESTView view;
    org.wiztools.restclient.ui.RESTUserInterface rest_ui;
    org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset;
    private javax.swing.JTextField jtf_url;

    public void <init>()
    {
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream r0;
        javax.swing.JTextField $r1;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream;

        specialinvoke r0.<javax.swing.JPanel: void <init>()>();

        $r1 = new javax.swing.JTextField;

        specialinvoke $r1.<javax.swing.JTextField: void <init>(int)>(26);

        r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream: javax.swing.JTextField jtf_url> = $r1;

        return;
    }

    protected void init()
    {
        java.awt.FlowLayout $r1;
        javax.swing.JTextField $r2, $r13;
        java.awt.Component $r12;
        java.awt.GridLayout $r6, $r10;
        org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent $r11;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream r0;
        javax.swing.JLabel $r7, $r8;
        java.awt.BorderLayout $r4;
        javax.swing.JPanel $r3, $r5, $r9, $r14;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream;

        $r1 = new java.awt.FlowLayout;

        specialinvoke $r1.<java.awt.FlowLayout: void <init>(int)>(0);

        virtualinvoke r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream: void setLayout(java.awt.LayoutManager)>($r1);

        $r2 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream: javax.swing.JTextField jtf_url>;

        virtualinvoke $r2.<javax.swing.JTextField: void setToolTipText(java.lang.String)>("Contents of this URL will be set as request body");

        $r3 = new javax.swing.JPanel;

        $r4 = new java.awt.BorderLayout;

        specialinvoke $r4.<java.awt.BorderLayout: void <init>()>();

        specialinvoke $r3.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r4);

        $r5 = new javax.swing.JPanel;

        $r6 = new java.awt.GridLayout;

        specialinvoke $r6.<java.awt.GridLayout: void <init>(int,int)>(2, 1);

        specialinvoke $r5.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r6);

        $r7 = new javax.swing.JLabel;

        specialinvoke $r7.<javax.swing.JLabel: void <init>(java.lang.String)>(" Content type: ");

        virtualinvoke $r5.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r7);

        $r8 = new javax.swing.JLabel;

        specialinvoke $r8.<javax.swing.JLabel: void <init>(java.lang.String)>(" URL: ");

        virtualinvoke $r5.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r8);

        virtualinvoke $r3.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r5, "West");

        $r9 = new javax.swing.JPanel;

        $r10 = new java.awt.GridLayout;

        specialinvoke $r10.<java.awt.GridLayout: void <init>(int,int)>(2, 1);

        specialinvoke $r9.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r10);

        $r11 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream: org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset>;

        $r12 = interfaceinvoke $r11.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent: java.awt.Component getComponent()>();

        virtualinvoke $r9.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r12);

        $r13 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream: javax.swing.JTextField jtf_url>;

        $r14 = staticinvoke <org.wiztools.restclient.ui.UIUtil: javax.swing.JPanel getFlowLayoutPanelLeftAligned(java.awt.Component)>($r13);

        virtualinvoke $r9.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r14);

        virtualinvoke $r3.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r9, "Center");

        virtualinvoke r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream: java.awt.Component add(java.awt.Component)>($r3);

        return;
    }

    public void enableBody()
    {
        org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent $r1;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream r0;
        javax.swing.JTextField $r2;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream;

        $r1 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream: org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset>;

        interfaceinvoke $r1.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent: void enableComponent()>();

        $r2 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream: javax.swing.JTextField jtf_url>;

        virtualinvoke $r2.<javax.swing.JTextField: void setEnabled(boolean)>(1);

        return;
    }

    public void disableBody()
    {
        org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent $r1;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream r0;
        javax.swing.JTextField $r2;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream;

        $r1 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream: org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset>;

        interfaceinvoke $r1.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent: void disableComponent()>();

        $r2 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream: javax.swing.JTextField jtf_url>;

        virtualinvoke $r2.<javax.swing.JTextField: void setEnabled(boolean)>(0);

        return;
    }

    public void setEntity(org.wiztools.restclient.bean.ReqEntity)
    {
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream r3;
        javax.swing.JTextField $r4;
        java.net.URL $r2;
        org.wiztools.restclient.bean.ReqEntity r0;
        org.wiztools.restclient.bean.ReqEntityUrlStream r1;
        java.lang.String $r5;
        boolean $z0;

        r3 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream;

        r0 := @parameter0: org.wiztools.restclient.bean.ReqEntity;

        $z0 = r0 instanceof org.wiztools.restclient.bean.ReqEntityUrlStream;

        if $z0 == 0 goto label1;

        r1 = (org.wiztools.restclient.bean.ReqEntityUrlStream) r0;

        $r2 = interfaceinvoke r1.<org.wiztools.restclient.bean.ReqEntityUrlStream: java.net.URL getUrl()>();

        $r4 = r3.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream: javax.swing.JTextField jtf_url>;

        $r5 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>();

        virtualinvoke $r4.<javax.swing.JTextField: void setText(java.lang.String)>($r5);

     label1:
        return;
    }

    public org.wiztools.restclient.bean.ReqEntity getEntity()
    {
        java.lang.IllegalStateException $r8;
        org.wiztools.restclient.bean.ReqEntityUrlStreamBean $r4;
        javax.swing.JTextField $r2;
        java.net.MalformedURLException $r7;
        java.net.URL $r0;
        org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent $r5;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream r1;
        java.lang.String $r3;
        org.wiztools.restclient.bean.ContentType $r6;

        r1 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream;

     label1:
        $r0 = new java.net.URL;

        $r2 = r1.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream: javax.swing.JTextField jtf_url>;

        $r3 = virtualinvoke $r2.<javax.swing.JTextField: java.lang.String getText()>();

        specialinvoke $r0.<java.net.URL: void <init>(java.lang.String)>($r3);

        $r4 = new org.wiztools.restclient.bean.ReqEntityUrlStreamBean;

        $r5 = r1.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream: org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset>;

        $r6 = interfaceinvoke $r5.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent: org.wiztools.restclient.bean.ContentType getContentType()>();

        specialinvoke $r4.<org.wiztools.restclient.bean.ReqEntityUrlStreamBean: void <init>(org.wiztools.restclient.bean.ContentType,java.net.URL)>($r6, $r0);

     label2:
        return $r4;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Body Stream URL is malformed!", $r7);

        throw $r8;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    public java.awt.Component getComponent()
    {
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream r0;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream;

        return r0;
    }

    public void clear()
    {
        org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent $r1;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream r0;
        javax.swing.JTextField $r2;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream;

        $r1 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream: org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset>;

        interfaceinvoke $r1.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent: void clear()>();

        $r2 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream: javax.swing.JTextField jtf_url>;

        virtualinvoke $r2.<javax.swing.JTextField: void setText(java.lang.String)>("");

        return;
    }

    public void requestFocus()
    {
        org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent $r1;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream r0;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream;

        $r1 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelUrlStream: org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset>;

        interfaceinvoke $r1.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent: void requestFocus()>();

        return;
    }
}
