public class org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl extends java.lang.Object implements org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component
{
    private org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$AnnotationBoundaryImpl annotationBoundary;
    private java.lang.String characters;
    private org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl elementStart;
    private java.lang.Boolean elementEnd;
    private java.lang.Integer retainItemCount;
    private java.lang.String deleteCharacters;
    private org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl deleteElementStart;
    private java.lang.Boolean deleteElementEnd;
    private org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ReplaceAttributesImpl replaceAttributes;
    private org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$UpdateAttributesImpl updateAttributes;

    public void <init>()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component)
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component r1;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: void copyFrom(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component)>(r1);

        return;
    }

    public void copyFrom(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component)
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r1;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes $r2;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$AnnotationBoundary $r8;
        int $i0;
        java.lang.String $r5, $r7;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ElementStart $r4, $r6;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ReplaceAttributes $r3;

        r1 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        r0 := @parameter0: org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component;

        $z0 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component: boolean hasAnnotationBoundary()>();

        if $z0 == 0 goto label01;

        $r8 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component: org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$AnnotationBoundary getAnnotationBoundary()>();

        virtualinvoke r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: void setAnnotationBoundary(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$AnnotationBoundary)>($r8);

        goto label02;

     label01:
        virtualinvoke r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: void clearAnnotationBoundary()>();

     label02:
        $z1 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component: boolean hasCharacters()>();

        if $z1 == 0 goto label03;

        $r7 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component: java.lang.String getCharacters()>();

        virtualinvoke r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: void setCharacters(java.lang.String)>($r7);

        goto label04;

     label03:
        virtualinvoke r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: void clearCharacters()>();

     label04:
        $z2 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component: boolean hasElementStart()>();

        if $z2 == 0 goto label05;

        $r6 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component: org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ElementStart getElementStart()>();

        virtualinvoke r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: void setElementStart(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ElementStart)>($r6);

        goto label06;

     label05:
        virtualinvoke r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: void clearElementStart()>();

     label06:
        $z3 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component: boolean hasElementEnd()>();

        if $z3 == 0 goto label07;

        $z11 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component: boolean getElementEnd()>();

        virtualinvoke r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: void setElementEnd(boolean)>($z11);

        goto label08;

     label07:
        virtualinvoke r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: void clearElementEnd()>();

     label08:
        $z4 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component: boolean hasRetainItemCount()>();

        if $z4 == 0 goto label09;

        $i0 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component: int getRetainItemCount()>();

        virtualinvoke r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: void setRetainItemCount(int)>($i0);

        goto label10;

     label09:
        virtualinvoke r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: void clearRetainItemCount()>();

     label10:
        $z5 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component: boolean hasDeleteCharacters()>();

        if $z5 == 0 goto label11;

        $r5 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component: java.lang.String getDeleteCharacters()>();

        virtualinvoke r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: void setDeleteCharacters(java.lang.String)>($r5);

        goto label12;

     label11:
        virtualinvoke r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: void clearDeleteCharacters()>();

     label12:
        $z6 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component: boolean hasDeleteElementStart()>();

        if $z6 == 0 goto label13;

        $r4 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component: org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ElementStart getDeleteElementStart()>();

        virtualinvoke r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: void setDeleteElementStart(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ElementStart)>($r4);

        goto label14;

     label13:
        virtualinvoke r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: void clearDeleteElementStart()>();

     label14:
        $z7 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component: boolean hasDeleteElementEnd()>();

        if $z7 == 0 goto label15;

        $z10 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component: boolean getDeleteElementEnd()>();

        virtualinvoke r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: void setDeleteElementEnd(boolean)>($z10);

        goto label16;

     label15:
        virtualinvoke r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: void clearDeleteElementEnd()>();

     label16:
        $z8 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component: boolean hasReplaceAttributes()>();

        if $z8 == 0 goto label17;

        $r3 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component: org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ReplaceAttributes getReplaceAttributes()>();

        virtualinvoke r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: void setReplaceAttributes(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ReplaceAttributes)>($r3);

        goto label18;

     label17:
        virtualinvoke r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: void clearReplaceAttributes()>();

     label18:
        $z9 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component: boolean hasUpdateAttributes()>();

        if $z9 == 0 goto label19;

        $r2 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component: org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes getUpdateAttributes()>();

        virtualinvoke r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: void setUpdateAttributes(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes)>($r2);

        goto label20;

     label19:
        virtualinvoke r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: void clearUpdateAttributes()>();

     label20:
        return;
    }

    public boolean hasAnnotationBoundary()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$AnnotationBoundaryImpl $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$AnnotationBoundaryImpl annotationBoundary>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void clearAnnotationBoundary()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$AnnotationBoundaryImpl annotationBoundary> = null;

        return;
    }

    public org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$AnnotationBoundaryImpl getAnnotationBoundary()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r1;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$AnnotationBoundaryImpl $r0, $r2;

        r1 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $r0 = new org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$AnnotationBoundaryImpl;

        $r2 = r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$AnnotationBoundaryImpl annotationBoundary>;

        specialinvoke $r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$AnnotationBoundaryImpl: void <init>(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$AnnotationBoundary)>($r2);

        return $r0;
    }

    public void setAnnotationBoundary(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$AnnotationBoundary)
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$AnnotationBoundaryImpl $r1;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$AnnotationBoundary r2;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$AnnotationBoundary;

        $r1 = new org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$AnnotationBoundaryImpl;

        specialinvoke $r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$AnnotationBoundaryImpl: void <init>(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$AnnotationBoundary)>(r2);

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$AnnotationBoundaryImpl annotationBoundary> = $r1;

        return;
    }

    public boolean hasCharacters()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: java.lang.String characters>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void clearCharacters()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: java.lang.String characters> = null;

        return;
    }

    public java.lang.String getCharacters()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        java.lang.String $r1;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: java.lang.String characters>;

        return $r1;
    }

    public void setCharacters(java.lang.String)
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        r1 := @parameter0: java.lang.String;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: java.lang.String characters> = r1;

        return;
    }

    public boolean hasElementStart()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl elementStart>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void clearElementStart()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl elementStart> = null;

        return;
    }

    public org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl getElementStart()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r1;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl $r0, $r2;

        r1 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $r0 = new org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl;

        $r2 = r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl elementStart>;

        specialinvoke $r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl: void <init>(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ElementStart)>($r2);

        return $r0;
    }

    public void setElementStart(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ElementStart)
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ElementStart r2;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl $r1;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ElementStart;

        $r1 = new org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl;

        specialinvoke $r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl: void <init>(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ElementStart)>(r2);

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl elementStart> = $r1;

        return;
    }

    public boolean hasElementEnd()
    {
        java.lang.Boolean $r1;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: java.lang.Boolean elementEnd>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void clearElementEnd()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: java.lang.Boolean elementEnd> = null;

        return;
    }

    public boolean getElementEnd()
    {
        java.lang.Boolean $r1;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: java.lang.Boolean elementEnd>;

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public void setElementEnd(boolean)
    {
        java.lang.Boolean $r1;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        boolean z0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: java.lang.Boolean elementEnd> = $r1;

        return;
    }

    public boolean hasRetainItemCount()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        java.lang.Integer $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: java.lang.Integer retainItemCount>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void clearRetainItemCount()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: java.lang.Integer retainItemCount> = null;

        return;
    }

    public int getRetainItemCount()
    {
        int $i0;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        java.lang.Integer $r1;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: java.lang.Integer retainItemCount>;

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public void setRetainItemCount(int)
    {
        int i0;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        java.lang.Integer $r1;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: java.lang.Integer retainItemCount> = $r1;

        return;
    }

    public boolean hasDeleteCharacters()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: java.lang.String deleteCharacters>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void clearDeleteCharacters()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: java.lang.String deleteCharacters> = null;

        return;
    }

    public java.lang.String getDeleteCharacters()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        java.lang.String $r1;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: java.lang.String deleteCharacters>;

        return $r1;
    }

    public void setDeleteCharacters(java.lang.String)
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        r1 := @parameter0: java.lang.String;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: java.lang.String deleteCharacters> = r1;

        return;
    }

    public boolean hasDeleteElementStart()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl deleteElementStart>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void clearDeleteElementStart()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl deleteElementStart> = null;

        return;
    }

    public org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl getDeleteElementStart()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r1;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl $r0, $r2;

        r1 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $r0 = new org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl;

        $r2 = r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl deleteElementStart>;

        specialinvoke $r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl: void <init>(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ElementStart)>($r2);

        return $r0;
    }

    public void setDeleteElementStart(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ElementStart)
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ElementStart r2;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl $r1;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ElementStart;

        $r1 = new org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl;

        specialinvoke $r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl: void <init>(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ElementStart)>(r2);

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl deleteElementStart> = $r1;

        return;
    }

    public boolean hasDeleteElementEnd()
    {
        java.lang.Boolean $r1;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: java.lang.Boolean deleteElementEnd>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void clearDeleteElementEnd()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: java.lang.Boolean deleteElementEnd> = null;

        return;
    }

    public boolean getDeleteElementEnd()
    {
        java.lang.Boolean $r1;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: java.lang.Boolean deleteElementEnd>;

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public void setDeleteElementEnd(boolean)
    {
        java.lang.Boolean $r1;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        boolean z0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: java.lang.Boolean deleteElementEnd> = $r1;

        return;
    }

    public boolean hasReplaceAttributes()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ReplaceAttributesImpl $r1;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ReplaceAttributesImpl replaceAttributes>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void clearReplaceAttributes()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ReplaceAttributesImpl replaceAttributes> = null;

        return;
    }

    public org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ReplaceAttributesImpl getReplaceAttributes()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ReplaceAttributesImpl $r0, $r2;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r1;

        r1 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $r0 = new org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ReplaceAttributesImpl;

        $r2 = r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ReplaceAttributesImpl replaceAttributes>;

        specialinvoke $r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ReplaceAttributesImpl: void <init>(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ReplaceAttributes)>($r2);

        return $r0;
    }

    public void setReplaceAttributes(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ReplaceAttributes)
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ReplaceAttributesImpl $r1;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ReplaceAttributes r2;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ReplaceAttributes;

        $r1 = new org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ReplaceAttributesImpl;

        specialinvoke $r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ReplaceAttributesImpl: void <init>(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ReplaceAttributes)>(r2);

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ReplaceAttributesImpl replaceAttributes> = $r1;

        return;
    }

    public boolean hasUpdateAttributes()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$UpdateAttributesImpl $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$UpdateAttributesImpl updateAttributes>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void clearUpdateAttributes()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$UpdateAttributesImpl updateAttributes> = null;

        return;
    }

    public org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$UpdateAttributesImpl getUpdateAttributes()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r1;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$UpdateAttributesImpl $r0, $r2;

        r1 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $r0 = new org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$UpdateAttributesImpl;

        $r2 = r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$UpdateAttributesImpl updateAttributes>;

        specialinvoke $r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$UpdateAttributesImpl: void <init>(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes)>($r2);

        return $r0;
    }

    public void setUpdateAttributes(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes)
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$UpdateAttributesImpl $r1;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes r2;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes;

        $r1 = new org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$UpdateAttributesImpl;

        specialinvoke $r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$UpdateAttributesImpl: void <init>(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes)>(r2);

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$UpdateAttributesImpl updateAttributes> = $r1;

        return;
    }

    protected void reset()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$AnnotationBoundaryImpl annotationBoundary> = null;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: java.lang.String characters> = null;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl elementStart> = null;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: java.lang.Boolean elementEnd> = null;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: java.lang.Integer retainItemCount> = null;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: java.lang.String deleteCharacters> = null;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl deleteElementStart> = null;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: java.lang.Boolean deleteElementEnd> = null;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ReplaceAttributesImpl replaceAttributes> = null;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$UpdateAttributesImpl updateAttributes> = null;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r1;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: boolean isEqualTo(java.lang.Object)>(r0);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean isEqualTo(java.lang.Object)
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r1;
        java.lang.Object r0;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component $r2;
        boolean $z0, $z1;

        r1 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component;

        if $z0 == 0 goto label2;

        $r2 = (org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component) r0;

        $z1 = staticinvoke <org.waveprotocol.wave.federation.ProtocolDocumentOperationUtil$ComponentUtil: boolean isEqual(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component,org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component)>(r1, $r2);

        return $z1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $i0 = staticinvoke <org.waveprotocol.wave.federation.ProtocolDocumentOperationUtil$ComponentUtil: int getHashCode(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component)>(r0);

        return $i0;
    }

    public volatile org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes getUpdateAttributes()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$UpdateAttributesImpl $r1;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$UpdateAttributesImpl getUpdateAttributes()>();

        return $r1;
    }

    public volatile org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ReplaceAttributes getReplaceAttributes()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ReplaceAttributesImpl $r1;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ReplaceAttributesImpl getReplaceAttributes()>();

        return $r1;
    }

    public volatile org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ElementStart getDeleteElementStart()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl $r1;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl getDeleteElementStart()>();

        return $r1;
    }

    public volatile org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$ElementStart getElementStart()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl $r1;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$ElementStartImpl getElementStart()>();

        return $r1;
    }

    public volatile org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$AnnotationBoundary getAnnotationBoundary()
    {
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl r0;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$AnnotationBoundaryImpl $r1;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl$ComponentImpl$AnnotationBoundaryImpl getAnnotationBoundary()>();

        return $r1;
    }
}
