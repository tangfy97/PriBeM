class org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1 extends java.lang.Object implements org.waveprotocol.wave.model.document.operation.DocOpCursor
{
    final org.waveprotocol.wave.model.document.operation.DocOpCursor val$target;
    final org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp this$0;

    void <init>(org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp, org.waveprotocol.wave.model.document.operation.DocOpCursor)
    {
        org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1 r0;
        org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp r1;
        org.waveprotocol.wave.model.document.operation.DocOpCursor r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.DocOpCursor;

        r0.<org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1: org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp this$0> = r1;

        r0.<org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1: org.waveprotocol.wave.model.document.operation.DocOpCursor val$target> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void deleteCharacters(java.lang.String)
    {
        org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1 r1;
        org.waveprotocol.wave.model.document.operation.DocOpCursor $r2;
        int $i0, $i1, i2;
        java.lang.String r0, $r3;

        r1 := @this: org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1;

        r0 := @parameter0: java.lang.String;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 >= $i0 goto label2;

        $r2 = r1.<org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1: org.waveprotocol.wave.model.document.operation.DocOpCursor val$target>;

        $i1 = i2 + 1;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i2, $i1);

        interfaceinvoke $r2.<org.waveprotocol.wave.model.document.operation.DocOpCursor: void deleteCharacters(java.lang.String)>($r3);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void deleteElementEnd()
    {
        org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1 r0;
        org.waveprotocol.wave.model.document.operation.DocOpCursor $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1: org.waveprotocol.wave.model.document.operation.DocOpCursor val$target>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.document.operation.DocOpCursor: void deleteElementEnd()>();

        return;
    }

    public void deleteElementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1 r0;
        org.waveprotocol.wave.model.document.operation.DocOpCursor $r3;
        java.lang.String r1;
        org.waveprotocol.wave.model.document.operation.Attributes r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1: org.waveprotocol.wave.model.document.operation.DocOpCursor val$target>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.operation.DocOpCursor: void deleteElementStart(java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>(r1, r2);

        return;
    }

    public void replaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1 r0;
        org.waveprotocol.wave.model.document.operation.DocOpCursor $r3;
        org.waveprotocol.wave.model.document.operation.Attributes r1, r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.Attributes;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1: org.waveprotocol.wave.model.document.operation.DocOpCursor val$target>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.operation.DocOpCursor: void replaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes,org.waveprotocol.wave.model.document.operation.Attributes)>(r1, r2);

        return;
    }

    public void retain(int)
    {
        org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1 r0;
        org.waveprotocol.wave.model.document.operation.DocOpCursor $r1;
        int i0, i1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1;

        i0 := @parameter0: int;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1: org.waveprotocol.wave.model.document.operation.DocOpCursor val$target>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.document.operation.DocOpCursor: void retain(int)>(1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void updateAttributes(org.waveprotocol.wave.model.document.operation.AttributesUpdate)
    {
        org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1 r0;
        org.waveprotocol.wave.model.document.operation.DocOpCursor $r2;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.AttributesUpdate;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1: org.waveprotocol.wave.model.document.operation.DocOpCursor val$target>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.document.operation.DocOpCursor: void updateAttributes(org.waveprotocol.wave.model.document.operation.AttributesUpdate)>(r1);

        return;
    }

    public void annotationBoundary(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)
    {
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap r1;
        org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1 r0;
        org.waveprotocol.wave.model.document.operation.DocOpCursor $r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1: org.waveprotocol.wave.model.document.operation.DocOpCursor val$target>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.document.operation.DocOpCursor: void annotationBoundary(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)>(r1);

        return;
    }

    public void characters(java.lang.String)
    {
        org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1 r1;
        org.waveprotocol.wave.model.document.operation.DocOpCursor $r2;
        int $i0, $i1, i2;
        java.lang.String r0, $r3;

        r1 := @this: org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1;

        r0 := @parameter0: java.lang.String;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 >= $i0 goto label2;

        $r2 = r1.<org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1: org.waveprotocol.wave.model.document.operation.DocOpCursor val$target>;

        $i1 = i2 + 1;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i2, $i1);

        interfaceinvoke $r2.<org.waveprotocol.wave.model.document.operation.DocOpCursor: void characters(java.lang.String)>($r3);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void elementEnd()
    {
        org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1 r0;
        org.waveprotocol.wave.model.document.operation.DocOpCursor $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1: org.waveprotocol.wave.model.document.operation.DocOpCursor val$target>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.document.operation.DocOpCursor: void elementEnd()>();

        return;
    }

    public void elementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1 r0;
        org.waveprotocol.wave.model.document.operation.DocOpCursor $r3;
        java.lang.String r1;
        org.waveprotocol.wave.model.document.operation.Attributes r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.util.ExplodedDocOp$1: org.waveprotocol.wave.model.document.operation.DocOpCursor val$target>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.operation.DocOpCursor: void elementStart(java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>(r1, r2);

        return;
    }
}
