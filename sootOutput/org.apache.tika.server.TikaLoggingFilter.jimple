public class org.apache.tika.server.TikaLoggingFilter extends java.lang.Object implements javax.ws.rs.container.ContainerRequestFilter
{
    private static final org.apache.commons.logging.Log logger;
    private boolean infoLevel;

    public void <init>(boolean)
    {
        org.apache.tika.server.TikaLoggingFilter r0;
        boolean z0;

        r0 := @this: org.apache.tika.server.TikaLoggingFilter;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.tika.server.TikaLoggingFilter: boolean infoLevel> = z0;

        return;
    }

    public void filter(javax.ws.rs.container.ContainerRequestContext) throws java.io.IOException
    {
        org.apache.tika.server.TikaLoggingFilter r8;
        javax.ws.rs.container.ContainerRequestContext r0;
        java.lang.StringBuilder $r4, $r5, $r6;
        org.apache.commons.logging.Log $r9, $r10;
        javax.ws.rs.core.UriInfo $r1;
        java.net.URI $r2;
        java.lang.String $r3, $r7;
        boolean $z0;

        r8 := @this: org.apache.tika.server.TikaLoggingFilter;

        r0 := @parameter0: javax.ws.rs.container.ContainerRequestContext;

        $r1 = interfaceinvoke r0.<javax.ws.rs.container.ContainerRequestContext: javax.ws.rs.core.UriInfo getUriInfo()>();

        $r2 = interfaceinvoke $r1.<javax.ws.rs.core.UriInfo: java.net.URI getRequestUri()>();

        $r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request URI: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = r8.<org.apache.tika.server.TikaLoggingFilter: boolean infoLevel>;

        if $z0 == 0 goto label1;

        $r10 = <org.apache.tika.server.TikaLoggingFilter: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r10.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r7);

        goto label2;

     label1:
        $r9 = <org.apache.tika.server.TikaLoggingFilter: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r7);

     label2:
        return;
    }

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/tika/server/TikaLoggingFilter;");

        <org.apache.tika.server.TikaLoggingFilter: org.apache.commons.logging.Log logger> = $r0;

        return;
    }
}
