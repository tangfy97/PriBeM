public class ucar.nc2.iosp.misc.NmcObsLegacy extends ucar.nc2.iosp.AbstractIOServiceProvider
{
    private static org.slf4j.Logger log;
    private ucar.unidata.io.RandomAccessFile raf;
    private ucar.nc2.NetcdfFile ncfile;
    private java.util.List stations;
    private java.util.List reports;
    private java.util.Calendar cal;
    private ucar.nc2.units.DateFormatter dateFormatter;
    private java.util.Date refDate;
    private java.lang.String refString;
    private java.util.List catStructures;
    private boolean showObs;
    private boolean showSkip;
    private boolean showOverflow;
    private boolean showData;
    private boolean showHeader;
    private boolean showTime;
    private boolean readData;
    private boolean summarizeData;
    private boolean showTimes;
    private boolean checkType;
    private boolean checkSort;
    private boolean checkPositions;
    private ucar.nc2.iosp.misc.NmcObsLegacy$Report firstReport;
    private java.lang.String[] catNames;
    private static float[] mandPressureLevel;

    public void <init>()
    {
        ucar.nc2.iosp.misc.NmcObsLegacy r0;
        java.lang.String[] $r5;
        java.util.ArrayList $r1, $r2, $r4;
        ucar.nc2.units.DateFormatter $r3;

        r0 := @this: ucar.nc2.iosp.misc.NmcObsLegacy;

        specialinvoke r0.<ucar.nc2.iosp.AbstractIOServiceProvider: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.iosp.misc.NmcObsLegacy: java.util.List stations> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.iosp.misc.NmcObsLegacy: java.util.List reports> = $r2;

        r0.<ucar.nc2.iosp.misc.NmcObsLegacy: java.util.Calendar cal> = null;

        $r3 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r3.<ucar.nc2.units.DateFormatter: void <init>()>();

        r0.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.units.DateFormatter dateFormatter> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(10);

        r0.<ucar.nc2.iosp.misc.NmcObsLegacy: java.util.List catStructures> = $r4;

        r0.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean showObs> = 0;

        r0.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean showSkip> = 0;

        r0.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean showOverflow> = 0;

        r0.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean showData> = 0;

        r0.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean showHeader> = 0;

        r0.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean showTime> = 0;

        r0.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean readData> = 0;

        r0.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean summarizeData> = 0;

        r0.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean showTimes> = 0;

        r0.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean checkType> = 0;

        r0.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean checkSort> = 0;

        r0.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean checkPositions> = 0;

        r0.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.iosp.misc.NmcObsLegacy$Report firstReport> = null;

        $r5 = newarray (java.lang.String)[13];

        $r5[0] = "";

        $r5[1] = "Category 01: mandatory constant-pressure data";

        $r5[2] = "Category 02: temperature/dewpoint at variable pressure-levels ";

        $r5[3] = "Category 03: wind at variable pressure-levels ";

        $r5[4] = "Category 04: wind at variable height-levels ";

        $r5[5] = "Category 05: tropopause data";

        $r5[6] = "";

        $r5[7] = "Category 07: cloud cover";

        $r5[8] = "Category 08: additional data";

        $r5[9] = "";

        $r5[10] = "";

        $r5[11] = "Category 51: surface Data";

        $r5[12] = "Category 52: ship surface Data";

        r0.<ucar.nc2.iosp.misc.NmcObsLegacy: java.lang.String[] catNames> = $r5;

        return;
    }

    public boolean isValidFile(ucar.unidata.io.RandomAccessFile) throws java.io.IOException
    {
        byte[] $r1;
        ucar.unidata.io.RandomAccessFile r0;
        long $l0;
        short $s2, $s3, $s4, $s5, $s6;
        byte $b1, $b7;
        int i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        java.lang.String $r9, $r10, $r11, $r12, $r13;
        ucar.nc2.iosp.misc.NmcObsLegacy r8;
        java.lang.Exception $r7;

        r8 := @this: ucar.nc2.iosp.misc.NmcObsLegacy;

        r0 := @parameter0: ucar.unidata.io.RandomAccessFile;

        virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: void seek(long)>(0L);

        $l0 = virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: long length()>();

        $b1 = $l0 cmp 60L;

        $i9 = (int) $b1;

        if $i9 >= 0 goto label01;

        return 0;

     label01:
        $r1 = virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: byte[] readBytes(int)>(60);

        i8 = 32;

     label02:
        if i8 >= 56 goto label04;

        $b7 = $r1[i8];

        $i10 = (int) $b7;

        if $i10 == 88 goto label03;

        return 0;

     label03:
        i8 = i8 + 1;

        goto label02;

     label04:
        $r9 = new java.lang.String;

        specialinvoke $r9.<java.lang.String: void <init>(byte[],int,int)>($r1, 0, 2);

        $s2 = staticinvoke <java.lang.Short: short parseShort(java.lang.String)>($r9);

        $r10 = new java.lang.String;

        specialinvoke $r10.<java.lang.String: void <init>(byte[],int,int)>($r1, 2, 2);

        $s3 = staticinvoke <java.lang.Short: short parseShort(java.lang.String)>($r10);

        $r11 = new java.lang.String;

        specialinvoke $r11.<java.lang.String: void <init>(byte[],int,int)>($r1, 4, 2);

        $s4 = staticinvoke <java.lang.Short: short parseShort(java.lang.String)>($r11);

        $r12 = new java.lang.String;

        specialinvoke $r12.<java.lang.String: void <init>(byte[],int,int)>($r1, 6, 2);

        $s5 = staticinvoke <java.lang.Short: short parseShort(java.lang.String)>($r12);

        $r13 = new java.lang.String;

        specialinvoke $r13.<java.lang.String: void <init>(byte[],int,int)>($r1, 8, 2);

        $s6 = staticinvoke <java.lang.Short: short parseShort(java.lang.String)>($r13);

        $i11 = (int) $s2;

        if $i11 < 0 goto label05;

        $i12 = (int) $s2;

        if $i12 <= 24 goto label06;

     label05:
        return 0;

     label06:
        $i13 = (int) $s3;

        if $i13 < 0 goto label07;

        $i14 = (int) $s3;

        if $i14 <= 60 goto label08;

     label07:
        return 0;

     label08:
        $i15 = (int) $s4;

        if $i15 < 0 goto label09;

        $i16 = (int) $s4;

        if $i16 <= 100 goto label10;

     label09:
        return 0;

     label10:
        $i17 = (int) $s5;

        if $i17 < 0 goto label11;

        $i18 = (int) $s5;

        if $i18 <= 12 goto label12;

     label11:
        return 0;

     label12:
        $i19 = (int) $s6;

        if $i19 < 0 goto label13;

        $i20 = (int) $s6;

        if $i20 <= 31 goto label14;

     label13:
        return 0;

     label14:
        goto label16;

     label15:
        $r7 := @caughtexception;

        return 0;

     label16:
        return 1;

        catch java.lang.Exception from label04 to label05 with label15;
        catch java.lang.Exception from label06 to label07 with label15;
        catch java.lang.Exception from label08 to label09 with label15;
        catch java.lang.Exception from label10 to label11 with label15;
        catch java.lang.Exception from label12 to label13 with label15;
    }

    public java.lang.String getFileTypeId()
    {
        ucar.nc2.iosp.misc.NmcObsLegacy r0;

        r0 := @this: ucar.nc2.iosp.misc.NmcObsLegacy;

        return "NMCon29";
    }

    public java.lang.String getFileTypeDescription()
    {
        ucar.nc2.iosp.misc.NmcObsLegacy r0;

        r0 := @this: ucar.nc2.iosp.misc.NmcObsLegacy;

        return "NMC Office Note 29";
    }

    public void open(ucar.unidata.io.RandomAccessFile, ucar.nc2.NetcdfFile, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.lang.IllegalStateException $r17;
        ucar.unidata.io.RandomAccessFile r1;
        ucar.nc2.Structure $r10, $r13, $r14;
        ucar.nc2.util.CancelTask r19;
        int $i0, $i1;
        java.lang.String $r7, $r18;
        ucar.nc2.constants.FeatureType $r6;
        org.slf4j.Logger $r16;
        ucar.nc2.iosp.misc.NmcObsLegacy r0;
        java.util.List $r9, $r12;
        ucar.ma2.InvalidRangeException $r15;
        ucar.nc2.Attribute $r3, $r4, $r5;
        ucar.nc2.Dimension $r8, $r11;
        ucar.nc2.NetcdfFile r2;

        r0 := @this: ucar.nc2.iosp.misc.NmcObsLegacy;

        r1 := @parameter0: ucar.unidata.io.RandomAccessFile;

        r2 := @parameter1: ucar.nc2.NetcdfFile;

        r19 := @parameter2: ucar.nc2.util.CancelTask;

        r0.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.unidata.io.RandomAccessFile raf> = r1;

        r0.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.NetcdfFile ncfile> = r2;

        specialinvoke r0.<ucar.nc2.iosp.misc.NmcObsLegacy: void init()>();

        $r3 = new ucar.nc2.Attribute;

        specialinvoke $r3.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("history", "Direct read of NMC ON29 by CDM");

        virtualinvoke r2.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r3);

        $r4 = new ucar.nc2.Attribute;

        specialinvoke $r4.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("Conventions", "Unidata");

        virtualinvoke r2.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r4);

        $r5 = new ucar.nc2.Attribute;

        $r6 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType STATION_PROFILE>;

        $r7 = virtualinvoke $r6.<ucar.nc2.constants.FeatureType: java.lang.String toString()>();

        specialinvoke $r5.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("cdm_data_type", $r7);

        virtualinvoke r2.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r5);

     label1:
        $r8 = new ucar.nc2.Dimension;

        $r9 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: java.util.List stations>;

        $i0 = interfaceinvoke $r9.<java.util.List: int size()>();

        specialinvoke $r8.<ucar.nc2.Dimension: void <init>(java.lang.String,int)>("station", $i0);

        virtualinvoke r2.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r8);

        $r10 = specialinvoke r0.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.Structure makeStationStructure()>();

        virtualinvoke r2.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r10);

        $r11 = new ucar.nc2.Dimension;

        $r12 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: java.util.List reports>;

        $i1 = interfaceinvoke $r12.<java.util.List: int size()>();

        specialinvoke $r11.<ucar.nc2.Dimension: void <init>(java.lang.String,int)>("report", $i1);

        virtualinvoke r2.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r11);

        $r13 = specialinvoke r0.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.Structure makeReportIndexStructure()>();

        virtualinvoke r2.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r13);

        $r14 = specialinvoke r0.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.Structure makeReportStructure()>();

        virtualinvoke r2.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r14);

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

        $r16 = <ucar.nc2.iosp.misc.NmcObsLegacy: org.slf4j.Logger log>;

        interfaceinvoke $r16.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("open ON29 File", $r15);

        $r17 = new java.lang.IllegalStateException;

        $r18 = virtualinvoke $r15.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18);

        throw $r17;

     label4:
        return;

        catch ucar.ma2.InvalidRangeException from label1 to label2 with label3;
    }

    public void close() throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r1;
        ucar.nc2.iosp.misc.NmcObsLegacy r0;

        r0 := @this: ucar.nc2.iosp.misc.NmcObsLegacy;

        $r1 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r1.<ucar.unidata.io.RandomAccessFile: void close()>();

        return;
    }

    public ucar.ma2.Array readData(ucar.nc2.Variable, ucar.ma2.Section) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.ma2.Section r11;
        ucar.nc2.Variable r0;
        java.lang.String $r1, $r2, $r3, $r7, $r9;
        boolean $z0, $z1, $z2;
        ucar.nc2.iosp.misc.NmcObsLegacy r10;
        java.lang.IllegalArgumentException $r4;
        ucar.ma2.Array $r12, $r13, $r14;
        java.lang.StringBuilder $r5, $r6, $r8;

        r10 := @this: ucar.nc2.iosp.misc.NmcObsLegacy;

        r0 := @parameter0: ucar.nc2.Variable;

        r11 := @parameter1: ucar.ma2.Section;

        $r1 = virtualinvoke r0.<ucar.nc2.Variable: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("station");

        if $z0 == 0 goto label1;

        $r14 = specialinvoke r10.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.ma2.Array readStation(ucar.nc2.Variable,ucar.ma2.Section)>(r0, r11);

        return $r14;

     label1:
        $r2 = virtualinvoke r0.<ucar.nc2.Variable: java.lang.String getName()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("report");

        if $z1 == 0 goto label2;

        $r13 = virtualinvoke r10.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.ma2.Array readReport(ucar.nc2.Variable,ucar.ma2.Section)>(r0, r11);

        return $r13;

     label2:
        $r3 = virtualinvoke r0.<ucar.nc2.Variable: java.lang.String getName()>();

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("reportIndex");

        if $z2 == 0 goto label3;

        $r12 = virtualinvoke r10.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.ma2.Array readReportIndex(ucar.nc2.Variable,ucar.ma2.Section)>(r0, r11);

        return $r12;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown variable name= ");

        $r7 = virtualinvoke r0.<ucar.nc2.Variable: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;
    }

    private ucar.nc2.Structure makeStationStructure() throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        int[] $r8;
        ucar.nc2.constants.AxisType $r20, $r31, $r41;
        ucar.ma2.DataType $r5, $r13, $r24, $r35, $r45;
        ucar.nc2.Attribute $r3, $r9, $r10, $r16, $r17, $r18, $r19, $r27, $r28, $r29, $r30, $r38, $r39, $r40, $r48, $r49;
        ucar.nc2.NetcdfFile $r2, $r6, $r14, $r25, $r36, $r46;
        ucar.nc2.Structure $r0;
        ucar.nc2.Variable $r4, $r7, $r12, $r15, $r23, $r26, $r34, $r37, $r44, $r47;
        java.lang.String $r21, $r32, $r42;
        ucar.nc2.iosp.misc.NmcObsLegacy r1;
        ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo $r11, $r22, $r33, $r43, $r50;

        r1 := @this: ucar.nc2.iosp.misc.NmcObsLegacy;

        $r0 = new ucar.nc2.Structure;

        $r2 = r1.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.NetcdfFile ncfile>;

        specialinvoke $r0.<ucar.nc2.Structure: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>($r2, null, null, "station");

        virtualinvoke $r0.<ucar.nc2.Structure: void setDimensions(java.lang.String)>("station");

        $r3 = new ucar.nc2.Attribute;

        specialinvoke $r3.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "unique stations within this file");

        virtualinvoke $r0.<ucar.nc2.Structure: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r3);

        $r4 = new ucar.nc2.Variable;

        $r6 = r1.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.NetcdfFile ncfile>;

        $r5 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        specialinvoke $r4.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String)>($r6, null, $r0, "stationName", $r5, "");

        $r7 = virtualinvoke $r0.<ucar.nc2.Structure: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r4);

        $r8 = newarray (int)[1];

        $r8[0] = 6;

        virtualinvoke $r7.<ucar.nc2.Variable: void setDimensionsAnonymous(int[])>($r8);

        $r9 = new ucar.nc2.Attribute;

        specialinvoke $r9.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "name of station");

        virtualinvoke $r7.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r9);

        $r10 = new ucar.nc2.Attribute;

        specialinvoke $r10.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "station_name");

        virtualinvoke $r7.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r10);

        $r11 = new ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo;

        specialinvoke $r11.<ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo: void <init>(ucar.nc2.iosp.misc.NmcObsLegacy,int)>(r1, 0);

        virtualinvoke $r7.<ucar.nc2.Variable: void setSPobject(java.lang.Object)>($r11);

        $r12 = new ucar.nc2.Variable;

        $r14 = r1.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.NetcdfFile ncfile>;

        $r13 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        specialinvoke $r12.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String)>($r14, null, $r0, "lat", $r13, "");

        $r15 = virtualinvoke $r0.<ucar.nc2.Structure: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r12);

        $r16 = new ucar.nc2.Attribute;

        specialinvoke $r16.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_north");

        virtualinvoke $r15.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r16);

        $r17 = new ucar.nc2.Attribute;

        specialinvoke $r17.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "geographic latitude");

        virtualinvoke $r15.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r17);

        $r18 = new ucar.nc2.Attribute;

        specialinvoke $r18.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("accuracy", "degree/100");

        virtualinvoke $r15.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r18);

        $r19 = new ucar.nc2.Attribute;

        $r20 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r21 = virtualinvoke $r20.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r19.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r21);

        virtualinvoke $r15.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r19);

        $r22 = new ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo;

        specialinvoke $r22.<ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo: void <init>(ucar.nc2.iosp.misc.NmcObsLegacy,int)>(r1, 6);

        virtualinvoke $r15.<ucar.nc2.Variable: void setSPobject(java.lang.Object)>($r22);

        $r23 = new ucar.nc2.Variable;

        $r25 = r1.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.NetcdfFile ncfile>;

        $r24 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        specialinvoke $r23.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String)>($r25, null, $r0, "lon", $r24, "");

        $r26 = virtualinvoke $r0.<ucar.nc2.Structure: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r23);

        $r27 = new ucar.nc2.Attribute;

        specialinvoke $r27.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_east");

        virtualinvoke $r26.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r27);

        $r28 = new ucar.nc2.Attribute;

        specialinvoke $r28.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "geographic longitude");

        virtualinvoke $r26.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r28);

        $r29 = new ucar.nc2.Attribute;

        specialinvoke $r29.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("accuracy", "degree/100");

        virtualinvoke $r26.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r29);

        $r30 = new ucar.nc2.Attribute;

        $r31 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r32 = virtualinvoke $r31.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r30.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r32);

        virtualinvoke $r26.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r30);

        $r33 = new ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo;

        specialinvoke $r33.<ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo: void <init>(ucar.nc2.iosp.misc.NmcObsLegacy,int)>(r1, 10);

        virtualinvoke $r26.<ucar.nc2.Variable: void setSPobject(java.lang.Object)>($r33);

        $r34 = new ucar.nc2.Variable;

        $r36 = r1.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.NetcdfFile ncfile>;

        $r35 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        specialinvoke $r34.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String)>($r36, null, $r0, "elev", $r35, "");

        $r37 = virtualinvoke $r0.<ucar.nc2.Structure: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r34);

        $r38 = new ucar.nc2.Attribute;

        specialinvoke $r38.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "meters");

        virtualinvoke $r37.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r38);

        $r39 = new ucar.nc2.Attribute;

        specialinvoke $r39.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "station elevation above MSL");

        virtualinvoke $r37.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r39);

        $r40 = new ucar.nc2.Attribute;

        $r41 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        $r42 = virtualinvoke $r41.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r40.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r42);

        virtualinvoke $r37.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r40);

        $r43 = new ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo;

        specialinvoke $r43.<ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo: void <init>(ucar.nc2.iosp.misc.NmcObsLegacy,int)>(r1, 14);

        virtualinvoke $r37.<ucar.nc2.Variable: void setSPobject(java.lang.Object)>($r43);

        $r44 = new ucar.nc2.Variable;

        $r46 = r1.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.NetcdfFile ncfile>;

        $r45 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        specialinvoke $r44.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String)>($r46, null, $r0, "nrecords", $r45, "");

        $r47 = virtualinvoke $r0.<ucar.nc2.Structure: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r44);

        $r48 = new ucar.nc2.Attribute;

        specialinvoke $r48.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "number of records");

        virtualinvoke $r47.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r48);

        $r49 = new ucar.nc2.Attribute;

        specialinvoke $r49.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "npts");

        virtualinvoke $r47.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r49);

        $r50 = new ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo;

        specialinvoke $r50.<ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo: void <init>(ucar.nc2.iosp.misc.NmcObsLegacy,int)>(r1, 18);

        virtualinvoke $r47.<ucar.nc2.Variable: void setSPobject(java.lang.Object)>($r50);

        return $r0;
    }

    private ucar.nc2.Structure makeReportIndexStructure() throws ucar.ma2.InvalidRangeException, java.io.IOException
    {
        ucar.nc2.Structure $r0;
        int[] $r8;
        ucar.nc2.Variable $r4, $r7, $r12, $r15;
        ucar.nc2.iosp.misc.NmcObsLegacy r1;
        ucar.ma2.DataType $r5, $r13;
        ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo $r11, $r18;
        ucar.nc2.Attribute $r3, $r9, $r10, $r16, $r17;
        ucar.nc2.NetcdfFile $r2, $r6, $r14;

        r1 := @this: ucar.nc2.iosp.misc.NmcObsLegacy;

        $r0 = new ucar.nc2.Structure;

        $r2 = r1.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.NetcdfFile ncfile>;

        specialinvoke $r0.<ucar.nc2.Structure: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>($r2, null, null, "reportIndex");

        virtualinvoke $r0.<ucar.nc2.Structure: void setDimensions(java.lang.String)>("report");

        $r3 = new ucar.nc2.Attribute;

        specialinvoke $r3.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "index on report - in memory");

        virtualinvoke $r0.<ucar.nc2.Structure: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r3);

        $r4 = new ucar.nc2.Variable;

        $r6 = r1.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.NetcdfFile ncfile>;

        $r5 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        specialinvoke $r4.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String)>($r6, null, $r0, "stationName", $r5, "");

        $r7 = virtualinvoke $r0.<ucar.nc2.Structure: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r4);

        $r8 = newarray (int)[1];

        $r8[0] = 6;

        virtualinvoke $r7.<ucar.nc2.Variable: void setDimensionsAnonymous(int[])>($r8);

        $r9 = new ucar.nc2.Attribute;

        specialinvoke $r9.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "name of station");

        virtualinvoke $r7.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r9);

        $r10 = new ucar.nc2.Attribute;

        specialinvoke $r10.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "station_name");

        virtualinvoke $r7.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r10);

        $r11 = new ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo;

        specialinvoke $r11.<ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo: void <init>(ucar.nc2.iosp.misc.NmcObsLegacy,int)>(r1, 0);

        virtualinvoke $r7.<ucar.nc2.Variable: void setSPobject(java.lang.Object)>($r11);

        $r12 = new ucar.nc2.Variable;

        $r14 = r1.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.NetcdfFile ncfile>;

        $r13 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        specialinvoke $r12.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String)>($r14, null, $r0, "time", $r13, "");

        $r15 = virtualinvoke $r0.<ucar.nc2.Structure: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r12);

        $r16 = new ucar.nc2.Attribute;

        specialinvoke $r16.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "secs since 1970-01-01 00:00");

        virtualinvoke $r15.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r16);

        $r17 = new ucar.nc2.Attribute;

        specialinvoke $r17.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "observation time");

        virtualinvoke $r15.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r17);

        $r18 = new ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo;

        specialinvoke $r18.<ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo: void <init>(ucar.nc2.iosp.misc.NmcObsLegacy,int)>(r1, 6);

        virtualinvoke $r15.<ucar.nc2.Variable: void setSPobject(java.lang.Object)>($r18);

        return $r0;
    }

    private ucar.nc2.Structure makeReportStructure() throws ucar.ma2.InvalidRangeException, java.io.IOException
    {
        int[] $r18, $r37;
        ucar.nc2.constants.AxisType $r11;
        ucar.ma2.DataType $r5, $r15, $r22, $r28, $r34;
        java.util.List $r41;
        ucar.nc2.Attribute $r3, $r8, $r9, $r10, $r19, $r25, $r31, $r38;
        ucar.nc2.NetcdfFile $r2, $r6, $r16, $r23, $r29, $r35;
        ucar.nc2.iosp.misc.NmcObsLegacy$Report $r40;
        ucar.nc2.Structure $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        ucar.nc2.Variable $r4, $r7, $r14, $r17, $r21, $r24, $r27, $r30, $r33, $r36;
        java.lang.String $r12;
        ucar.nc2.iosp.misc.NmcObsLegacy r1;
        ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo $r13, $r20, $r26, $r32, $r39;

        r1 := @this: ucar.nc2.iosp.misc.NmcObsLegacy;

        $r0 = new ucar.nc2.Structure;

        $r2 = r1.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.NetcdfFile ncfile>;

        specialinvoke $r0.<ucar.nc2.Structure: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>($r2, null, null, "report");

        virtualinvoke $r0.<ucar.nc2.Structure: void setDimensions(java.lang.String)>("report");

        $r3 = new ucar.nc2.Attribute;

        specialinvoke $r3.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "ON29 observation report");

        virtualinvoke $r0.<ucar.nc2.Structure: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r3);

        $r4 = new ucar.nc2.Variable;

        $r6 = r1.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.NetcdfFile ncfile>;

        $r5 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        specialinvoke $r4.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String)>($r6, null, $r0, "time", $r5, "");

        $r7 = virtualinvoke $r0.<ucar.nc2.Structure: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r4);

        $r8 = new ucar.nc2.Attribute;

        specialinvoke $r8.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "secs since 1970-01-01 00:00");

        virtualinvoke $r7.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r8);

        $r9 = new ucar.nc2.Attribute;

        specialinvoke $r9.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "observation time");

        virtualinvoke $r7.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r9);

        $r10 = new ucar.nc2.Attribute;

        $r11 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r12 = virtualinvoke $r11.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r10.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r12);

        virtualinvoke $r7.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r10);

        $r13 = new ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo;

        specialinvoke $r13.<ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo: void <init>(ucar.nc2.iosp.misc.NmcObsLegacy,int)>(r1, 0);

        virtualinvoke $r7.<ucar.nc2.Variable: void setSPobject(java.lang.Object)>($r13);

        $r14 = new ucar.nc2.Variable;

        $r16 = r1.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.NetcdfFile ncfile>;

        $r15 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        specialinvoke $r14.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String)>($r16, null, $r0, "timeISO", $r15, "");

        $r17 = virtualinvoke $r0.<ucar.nc2.Structure: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r14);

        $r18 = newarray (int)[1];

        $r18[0] = 20;

        virtualinvoke $r17.<ucar.nc2.Variable: void setDimensionsAnonymous(int[])>($r18);

        $r19 = new ucar.nc2.Attribute;

        specialinvoke $r19.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "ISO formatted date/time");

        virtualinvoke $r17.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r19);

        $r20 = new ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo;

        specialinvoke $r20.<ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo: void <init>(ucar.nc2.iosp.misc.NmcObsLegacy,int)>(r1, 4);

        virtualinvoke $r17.<ucar.nc2.Variable: void setSPobject(java.lang.Object)>($r20);

        $r21 = new ucar.nc2.Variable;

        $r23 = r1.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.NetcdfFile ncfile>;

        $r22 = <ucar.ma2.DataType: ucar.ma2.DataType SHORT>;

        specialinvoke $r21.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String)>($r23, null, $r0, "reportType", $r22, "");

        $r24 = virtualinvoke $r0.<ucar.nc2.Structure: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r21);

        $r25 = new ucar.nc2.Attribute;

        specialinvoke $r25.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "report type from Table R.1");

        virtualinvoke $r24.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r25);

        $r26 = new ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo;

        specialinvoke $r26.<ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo: void <init>(ucar.nc2.iosp.misc.NmcObsLegacy,int)>(r1, 24);

        virtualinvoke $r24.<ucar.nc2.Variable: void setSPobject(java.lang.Object)>($r26);

        $r27 = new ucar.nc2.Variable;

        $r29 = r1.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.NetcdfFile ncfile>;

        $r28 = <ucar.ma2.DataType: ucar.ma2.DataType SHORT>;

        specialinvoke $r27.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String)>($r29, null, $r0, "instType", $r28, "");

        $r30 = virtualinvoke $r0.<ucar.nc2.Structure: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r27);

        $r31 = new ucar.nc2.Attribute;

        specialinvoke $r31.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "instrument type from Table R.2");

        virtualinvoke $r30.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r31);

        $r32 = new ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo;

        specialinvoke $r32.<ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo: void <init>(ucar.nc2.iosp.misc.NmcObsLegacy,int)>(r1, 26);

        virtualinvoke $r30.<ucar.nc2.Variable: void setSPobject(java.lang.Object)>($r32);

        $r33 = new ucar.nc2.Variable;

        $r35 = r1.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.NetcdfFile ncfile>;

        $r34 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        specialinvoke $r33.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String)>($r35, null, $r0, "reserved", $r34, "");

        $r36 = virtualinvoke $r0.<ucar.nc2.Structure: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r33);

        $r37 = newarray (int)[1];

        $r37[0] = 7;

        virtualinvoke $r36.<ucar.nc2.Variable: void setDimensionsAnonymous(int[])>($r37);

        $r38 = new ucar.nc2.Attribute;

        specialinvoke $r38.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "reserved characters");

        virtualinvoke $r36.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r38);

        $r39 = new ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo;

        specialinvoke $r39.<ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo: void <init>(ucar.nc2.iosp.misc.NmcObsLegacy,int)>(r1, 28);

        virtualinvoke $r36.<ucar.nc2.Variable: void setSPobject(java.lang.Object)>($r39);

        $r40 = r1.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.iosp.misc.NmcObsLegacy$Report firstReport>;

        $r41 = virtualinvoke $r40.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: java.util.List readData()>();

        $i0 = specialinvoke r1.<ucar.nc2.iosp.misc.NmcObsLegacy: int makeInnerSequence(ucar.nc2.Structure,java.util.List,int,int)>($r0, $r41, 1, 35);

        $i1 = specialinvoke r1.<ucar.nc2.iosp.misc.NmcObsLegacy: int makeInnerSequence(ucar.nc2.Structure,java.util.List,int,int)>($r0, $r41, 2, $i0);

        $i2 = specialinvoke r1.<ucar.nc2.iosp.misc.NmcObsLegacy: int makeInnerSequence(ucar.nc2.Structure,java.util.List,int,int)>($r0, $r41, 3, $i1);

        $i3 = specialinvoke r1.<ucar.nc2.iosp.misc.NmcObsLegacy: int makeInnerSequence(ucar.nc2.Structure,java.util.List,int,int)>($r0, $r41, 4, $i2);

        $i4 = specialinvoke r1.<ucar.nc2.iosp.misc.NmcObsLegacy: int makeInnerSequence(ucar.nc2.Structure,java.util.List,int,int)>($r0, $r41, 5, $i3);

        $i5 = specialinvoke r1.<ucar.nc2.iosp.misc.NmcObsLegacy: int makeInnerSequence(ucar.nc2.Structure,java.util.List,int,int)>($r0, $r41, 7, $i4);

        $i6 = specialinvoke r1.<ucar.nc2.iosp.misc.NmcObsLegacy: int makeInnerSequence(ucar.nc2.Structure,java.util.List,int,int)>($r0, $r41, 8, $i5);

        $i7 = specialinvoke r1.<ucar.nc2.iosp.misc.NmcObsLegacy: int makeInnerSequence(ucar.nc2.Structure,java.util.List,int,int)>($r0, $r41, 51, $i6);

        specialinvoke r1.<ucar.nc2.iosp.misc.NmcObsLegacy: int makeInnerSequence(ucar.nc2.Structure,java.util.List,int,int)>($r0, $r41, 52, $i7);

        virtualinvoke $r0.<ucar.nc2.Structure: void calcElementSize()>();

        return $r0;
    }

    private int makeInnerSequence(ucar.nc2.Structure, java.util.List, int, int) throws ucar.ma2.InvalidRangeException
    {
        ucar.nc2.Structure r6, $r7;
        int i0, $i1, i2;
        ucar.nc2.iosp.misc.NmcObsLegacy$Entry[] $r4;
        boolean $z0;
        java.util.Iterator $r1;
        ucar.nc2.iosp.misc.NmcObsLegacy r9;
        ucar.nc2.iosp.misc.NmcObsLegacy$Entry r5;
        ucar.nc2.iosp.misc.NmcObsLegacy$StructureCode $r10;
        ucar.nc2.iosp.misc.NmcObsLegacy$Record r3;
        java.util.List r0, $r11;
        ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo $r8;
        java.lang.Object $r2;

        r9 := @this: ucar.nc2.iosp.misc.NmcObsLegacy;

        r6 := @parameter0: ucar.nc2.Structure;

        r0 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (ucar.nc2.iosp.misc.NmcObsLegacy$Record) $r2;

        $i1 = r3.<ucar.nc2.iosp.misc.NmcObsLegacy$Record: int code>;

        if $i1 != i0 goto label2;

        $r4 = r3.<ucar.nc2.iosp.misc.NmcObsLegacy$Record: ucar.nc2.iosp.misc.NmcObsLegacy$Entry[] entries>;

        r5 = $r4[0];

        $r7 = virtualinvoke r5.<ucar.nc2.iosp.misc.NmcObsLegacy$Entry: ucar.nc2.Structure makeStructure(ucar.nc2.Structure)>(r6);

        $r8 = new ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo;

        specialinvoke $r8.<ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo: void <init>(ucar.nc2.iosp.misc.NmcObsLegacy,int)>(r9, i2);

        virtualinvoke $r7.<ucar.nc2.Structure: void setSPobject(java.lang.Object)>($r8);

        i2 = i2 + 4;

        virtualinvoke r6.<ucar.nc2.Structure: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r7);

        $r11 = r9.<ucar.nc2.iosp.misc.NmcObsLegacy: java.util.List catStructures>;

        $r10 = new ucar.nc2.iosp.misc.NmcObsLegacy$StructureCode;

        specialinvoke $r10.<ucar.nc2.iosp.misc.NmcObsLegacy$StructureCode: void <init>(ucar.nc2.iosp.misc.NmcObsLegacy,ucar.nc2.Structure,int)>(r9, $r7, i0);

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label3;

     label2:
        goto label1;

     label3:
        return i2;
    }

    private ucar.ma2.Array readStation(ucar.nc2.Variable, ucar.ma2.Section) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        byte[] $r16;
        java.nio.ByteBuffer $r8;
        ucar.ma2.StructureMembers$Member $r23;
        ucar.ma2.ArrayStructureBB $r6;
        int[] $r7;
        boolean $z0;
        ucar.ma2.Range $r9;
        ucar.nc2.iosp.misc.NmcObsLegacy$Station r13;
        java.util.List $r3, $r11;
        ucar.ma2.StructureMembers $r2;
        float $f0, $f1, $f2;
        ucar.ma2.Section r5;
        ucar.nc2.iosp.misc.NmcObsLegacy$Report $r14, $r17, $r18, $r19;
        long $l0;
        ucar.nc2.Structure r1;
        int $i1, $i2, $i3, $i4, i5, i6;
        ucar.nc2.Variable r0, r24;
        java.lang.String $r15, $r22;
        java.util.Iterator $r4;
        ucar.nc2.iosp.misc.NmcObsLegacy r10;
        ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo r25;
        java.lang.Object $r12, $r20, $r21;

        r10 := @this: ucar.nc2.iosp.misc.NmcObsLegacy;

        r0 := @parameter0: ucar.nc2.Variable;

        r5 := @parameter1: ucar.ma2.Section;

        r1 = (ucar.nc2.Structure) r0;

        $r2 = virtualinvoke r1.<ucar.nc2.Structure: ucar.ma2.StructureMembers makeStructureMembers()>();

        $r3 = virtualinvoke r1.<ucar.nc2.Structure: java.util.List getVariables()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r20 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r24 = (ucar.nc2.Variable) $r20;

        $r21 = virtualinvoke r24.<ucar.nc2.Variable: java.lang.Object getSPobject()>();

        r25 = (ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo) $r21;

        $r22 = virtualinvoke r24.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r23 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r22);

        if r25 == null goto label2;

        $i4 = r25.<ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo: int offset>;

        virtualinvoke $r23.<ucar.ma2.StructureMembers$Member: void setDataParam(int)>($i4);

     label2:
        goto label1;

     label3:
        $l0 = virtualinvoke r5.<ucar.ma2.Section: long computeSize()>();

        i5 = (int) $l0;

        $r6 = new ucar.ma2.ArrayStructureBB;

        $r7 = newarray (int)[1];

        $r7[0] = i5;

        specialinvoke $r6.<ucar.ma2.ArrayStructureBB: void <init>(ucar.ma2.StructureMembers,int[])>($r2, $r7);

        $r8 = virtualinvoke $r6.<ucar.ma2.ArrayStructureBB: java.nio.ByteBuffer getByteBuffer()>();

        $r9 = virtualinvoke r5.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(0);

        i6 = virtualinvoke $r9.<ucar.ma2.Range: int first()>();

     label4:
        $i1 = virtualinvoke $r9.<ucar.ma2.Range: int last()>();

        if i6 > $i1 goto label5;

        $r11 = r10.<ucar.nc2.iosp.misc.NmcObsLegacy: java.util.List stations>;

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i6);

        r13 = (ucar.nc2.iosp.misc.NmcObsLegacy$Station) $r12;

        $r14 = r13.<ucar.nc2.iosp.misc.NmcObsLegacy$Station: ucar.nc2.iosp.misc.NmcObsLegacy$Report r>;

        $r15 = $r14.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: java.lang.String stationId>;

        $r16 = virtualinvoke $r15.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r16);

        $r17 = r13.<ucar.nc2.iosp.misc.NmcObsLegacy$Station: ucar.nc2.iosp.misc.NmcObsLegacy$Report r>;

        $f0 = $r17.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: float lat>;

        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.ByteBuffer putFloat(float)>($f0);

        $r18 = r13.<ucar.nc2.iosp.misc.NmcObsLegacy$Station: ucar.nc2.iosp.misc.NmcObsLegacy$Report r>;

        $f1 = $r18.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: float lon>;

        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.ByteBuffer putFloat(float)>($f1);

        $r19 = r13.<ucar.nc2.iosp.misc.NmcObsLegacy$Station: ucar.nc2.iosp.misc.NmcObsLegacy$Report r>;

        $f2 = $r19.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: float elevMeters>;

        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.ByteBuffer putFloat(float)>($f2);

        $i2 = r13.<ucar.nc2.iosp.misc.NmcObsLegacy$Station: int nreports>;

        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i2);

        $i3 = virtualinvoke $r9.<ucar.ma2.Range: int stride()>();

        i6 = i6 + $i3;

        goto label4;

     label5:
        return $r6;
    }

    public ucar.ma2.Array readReportIndex(ucar.nc2.Variable, ucar.ma2.Section) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.ma2.Section r5;
        ucar.nc2.iosp.misc.NmcObsLegacy$Report r13;
        long $l0;
        ucar.nc2.Structure r1;
        java.nio.ByteBuffer $r8;
        ucar.ma2.StructureMembers$Member $r17;
        ucar.ma2.ArrayStructureBB $r6;
        int[] $r7;
        int $i1, $i2, $i3, i4, i5;
        ucar.nc2.Variable r0, r18;
        java.lang.String $r16;
        boolean $z0;
        ucar.ma2.Range $r9;
        java.util.Iterator $r4;
        ucar.nc2.iosp.misc.NmcObsLegacy r10;
        java.util.List $r3, $r11;
        ucar.ma2.StructureMembers $r2;
        ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo r19;
        java.lang.Object $r12, $r14, $r15;

        r10 := @this: ucar.nc2.iosp.misc.NmcObsLegacy;

        r0 := @parameter0: ucar.nc2.Variable;

        r5 := @parameter1: ucar.ma2.Section;

        r1 = (ucar.nc2.Structure) r0;

        $r2 = virtualinvoke r1.<ucar.nc2.Structure: ucar.ma2.StructureMembers makeStructureMembers()>();

        $r3 = virtualinvoke r1.<ucar.nc2.Structure: java.util.List getVariables()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r14 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r18 = (ucar.nc2.Variable) $r14;

        $r15 = virtualinvoke r18.<ucar.nc2.Variable: java.lang.Object getSPobject()>();

        r19 = (ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo) $r15;

        $r16 = virtualinvoke r18.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r17 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r16);

        $i3 = r19.<ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo: int offset>;

        virtualinvoke $r17.<ucar.ma2.StructureMembers$Member: void setDataParam(int)>($i3);

        goto label1;

     label2:
        $l0 = virtualinvoke r5.<ucar.ma2.Section: long computeSize()>();

        i4 = (int) $l0;

        $r6 = new ucar.ma2.ArrayStructureBB;

        $r7 = newarray (int)[1];

        $r7[0] = i4;

        specialinvoke $r6.<ucar.ma2.ArrayStructureBB: void <init>(ucar.ma2.StructureMembers,int[])>($r2, $r7);

        $r8 = virtualinvoke $r6.<ucar.ma2.ArrayStructureBB: java.nio.ByteBuffer getByteBuffer()>();

        $r9 = virtualinvoke r5.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(0);

        i5 = virtualinvoke $r9.<ucar.ma2.Range: int first()>();

     label3:
        $i1 = virtualinvoke $r9.<ucar.ma2.Range: int last()>();

        if i5 > $i1 goto label4;

        $r11 = r10.<ucar.nc2.iosp.misc.NmcObsLegacy: java.util.List reports>;

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i5);

        r13 = (ucar.nc2.iosp.misc.NmcObsLegacy$Report) $r12;

        virtualinvoke r13.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: void loadIndexData(java.nio.ByteBuffer)>($r8);

        $i2 = virtualinvoke $r9.<ucar.ma2.Range: int stride()>();

        i5 = i5 + $i2;

        goto label3;

     label4:
        return $r6;
    }

    public ucar.ma2.Array readReport(ucar.nc2.Variable, ucar.ma2.Section) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.ma2.Section r5;
        ucar.nc2.iosp.misc.NmcObsLegacy$Report r13;
        long $l0;
        ucar.nc2.Structure r1;
        java.nio.ByteBuffer $r8;
        ucar.ma2.StructureMembers$Member $r17;
        ucar.ma2.ArrayStructureBB $r6;
        int[] $r7;
        int $i1, $i2, $i3, i4, i5;
        ucar.nc2.Variable r0, r18;
        java.lang.String $r16;
        boolean $z0;
        ucar.ma2.Range $r9;
        java.util.Iterator $r4;
        ucar.nc2.iosp.misc.NmcObsLegacy r10;
        java.util.List $r3, $r11;
        ucar.ma2.StructureMembers $r2;
        ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo r19;
        java.lang.Object $r12, $r14, $r15;

        r10 := @this: ucar.nc2.iosp.misc.NmcObsLegacy;

        r0 := @parameter0: ucar.nc2.Variable;

        r5 := @parameter1: ucar.ma2.Section;

        r1 = (ucar.nc2.Structure) r0;

        $r2 = virtualinvoke r1.<ucar.nc2.Structure: ucar.ma2.StructureMembers makeStructureMembers()>();

        $r3 = virtualinvoke r1.<ucar.nc2.Structure: java.util.List getVariables()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r14 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r18 = (ucar.nc2.Variable) $r14;

        $r15 = virtualinvoke r18.<ucar.nc2.Variable: java.lang.Object getSPobject()>();

        r19 = (ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo) $r15;

        $r16 = virtualinvoke r18.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r17 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r16);

        $i3 = r19.<ucar.nc2.iosp.misc.NmcObsLegacy$Vinfo: int offset>;

        virtualinvoke $r17.<ucar.ma2.StructureMembers$Member: void setDataParam(int)>($i3);

        goto label1;

     label2:
        $l0 = virtualinvoke r5.<ucar.ma2.Section: long computeSize()>();

        i4 = (int) $l0;

        $r6 = new ucar.ma2.ArrayStructureBB;

        $r7 = newarray (int)[1];

        $r7[0] = i4;

        specialinvoke $r6.<ucar.ma2.ArrayStructureBB: void <init>(ucar.ma2.StructureMembers,int[])>($r2, $r7);

        $r8 = virtualinvoke $r6.<ucar.ma2.ArrayStructureBB: java.nio.ByteBuffer getByteBuffer()>();

        $r9 = virtualinvoke r5.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(0);

        i5 = virtualinvoke $r9.<ucar.ma2.Range: int first()>();

     label3:
        $i1 = virtualinvoke $r9.<ucar.ma2.Range: int last()>();

        if i5 > $i1 goto label4;

        $r11 = r10.<ucar.nc2.iosp.misc.NmcObsLegacy: java.util.List reports>;

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i5);

        r13 = (ucar.nc2.iosp.misc.NmcObsLegacy$Report) $r12;

        virtualinvoke r13.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: void loadStructureData(ucar.ma2.ArrayStructureBB,java.nio.ByteBuffer)>($r6, $r8);

        $i2 = virtualinvoke $r9.<ucar.ma2.Range: int stride()>();

        i5 = i5 + $i2;

        goto label3;

     label4:
        return $r6;
    }

    private void init() throws java.io.IOException
    {
        byte $b2, $b3, $b4;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r17, $r22, $r23, $r24, $r25, $r26, $r31, $r32, $r33, $r34, $r35, $r43, $r44, $r45, $r46, $r47, $r53, $r54, $r58, $r59, $r67, $r69, $r70, $r71, $r72, $r73;
        short $s5, $s6, s9;
        java.lang.String $r12, $r18, $r21, $r27, $r30, $r36, $r38, $r42, $r48, $r55, $r60, $r61;
        ucar.nc2.iosp.misc.NmcObsLegacy r0;
        ucar.unidata.io.RandomAccessFile $r1, $r2, $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        ucar.nc2.iosp.misc.NmcObsLegacy$Station $r63, $r68;
        java.util.List $r7, $r39, $r50, $r64;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        ucar.nc2.iosp.misc.NmcObsLegacy$Report $r6, r9, $r49, $r66;
        java.util.HashMap $r65;
        int $i0, $i1, i7, i8, $i10, $i11;
        java.io.PrintStream $r11, $r20, $r29, $r41, $r52, $r57;
        java.lang.Object $r8, $r62;

        r0 := @this: ucar.nc2.iosp.misc.NmcObsLegacy;

        i7 = 0;

        i8 = 0;

        s9 = -1;

        $r1 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r1.<ucar.unidata.io.RandomAccessFile: void seek(long)>(0L);

        $r2 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.unidata.io.RandomAccessFile raf>;

        specialinvoke r0.<ucar.nc2.iosp.misc.NmcObsLegacy: void readHeader(ucar.unidata.io.RandomAccessFile)>($r2);

        $r65 = new java.util.HashMap;

        specialinvoke $r65.<java.util.HashMap: void <init>()>();

     label01:
        $r66 = new ucar.nc2.iosp.misc.NmcObsLegacy$Report;

        specialinvoke $r66.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: void <init>(ucar.nc2.iosp.misc.NmcObsLegacy,ucar.nc2.iosp.misc.NmcObsLegacy$1)>(r0, null);

        $r5 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.unidata.io.RandomAccessFile raf>;

        $z0 = virtualinvoke $r66.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: boolean readId(ucar.unidata.io.RandomAccessFile)>($r5);

        if $z0 != 0 goto label02;

        goto label09;

     label02:
        $r6 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.iosp.misc.NmcObsLegacy$Report firstReport>;

        if $r6 != null goto label03;

        r0.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.iosp.misc.NmcObsLegacy$Report firstReport> = $r66;

        $r49 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.iosp.misc.NmcObsLegacy$Report firstReport>;

        s9 = $r49.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: short reportType>;

     label03:
        $z1 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean checkType>;

        if $z1 == 0 goto label04;

        $s5 = $r66.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: short reportType>;

        $i10 = (int) $s5;

        if $i10 == s9 goto label04;

        $r41 = <java.lang.System: java.io.PrintStream out>;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r42 = $r66.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: java.lang.String stationId>;

        $r43 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type: ");

        $s6 = $r66.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: short reportType>;

        $i11 = (int) $s6;

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s9);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>($r48);

        i8 = i8 + 1;

     label04:
        $r61 = $r66.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: java.lang.String stationId>;

        $r62 = interfaceinvoke $r65.<java.util.Map: java.lang.Object get(java.lang.Object)>($r61);

        $r63 = (ucar.nc2.iosp.misc.NmcObsLegacy$Station) $r62;

        if $r63 != null goto label05;

        $r68 = new ucar.nc2.iosp.misc.NmcObsLegacy$Station;

        specialinvoke $r68.<ucar.nc2.iosp.misc.NmcObsLegacy$Station: void <init>(ucar.nc2.iosp.misc.NmcObsLegacy,ucar.nc2.iosp.misc.NmcObsLegacy$Report)>(r0, $r66);

        $r38 = $r66.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: java.lang.String stationId>;

        interfaceinvoke $r65.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r38, $r68);

        $r39 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: java.util.List stations>;

        interfaceinvoke $r39.<java.util.List: boolean add(java.lang.Object)>($r68);

        goto label08;

     label05:
        $i0 = $r63.<ucar.nc2.iosp.misc.NmcObsLegacy$Station: int nreports>;

        $i1 = $i0 + 1;

        $r63.<ucar.nc2.iosp.misc.NmcObsLegacy$Station: int nreports> = $i1;

        $z2 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean checkPositions>;

        if $z2 == 0 goto label08;

        $r7 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: java.util.List reports>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(0);

        r9 = (ucar.nc2.iosp.misc.NmcObsLegacy$Report) $r8;

        $f1 = r9.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: float lat>;

        $f0 = $r66.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: float lat>;

        $b2 = $f1 cmpl $f0;

        if $b2 == 0 goto label06;

        $r29 = <java.lang.System: java.io.PrintStream out>;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r30 = $r66.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: java.lang.String stationId>;

        $r31 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lat: ");

        $f10 = r9.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: float lat>;

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f10);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" !=");

        $f11 = $r66.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: float lat>;

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f11);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r36);

        i7 = i7 + 1;

     label06:
        $f3 = r9.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: float lon>;

        $f2 = $r66.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: float lon>;

        $b3 = $f3 cmpl $f2;

        if $b3 == 0 goto label07;

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r21 = $r66.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: java.lang.String stationId>;

        $r22 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lon: ");

        $f8 = r9.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: float lon>;

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f8);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" !=");

        $f9 = $r66.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: float lon>;

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f9);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r27);

     label07:
        $f5 = r9.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: float elevMeters>;

        $f4 = $r66.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: float elevMeters>;

        $b4 = $f5 cmpl $f4;

        if $b4 == 0 goto label08;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r12 = $r66.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: java.lang.String stationId>;

        $r13 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" elev: ");

        $f6 = r9.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: float elevMeters>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f6);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" !=");

        $f7 = $r66.<ucar.nc2.iosp.misc.NmcObsLegacy$Report: float elevMeters>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f7);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r18);

     label08:
        $r64 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: java.util.List reports>;

        interfaceinvoke $r64.<java.util.List: boolean add(java.lang.Object)>($r66);

        goto label01;

     label09:
        $r50 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: java.util.List stations>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r50);

        $z3 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean checkPositions>;

        if $z3 == 0 goto label10;

        $r57 = <java.lang.System: java.io.PrintStream out>;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nnon matching lats= ");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r57.<java.io.PrintStream: void println(java.lang.String)>($r60);

     label10:
        $z4 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean checkType>;

        if $z4 == 0 goto label11;

        $r52 = <java.lang.System: java.io.PrintStream out>;

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nnon matching reportTypes= ");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>($r55);

     label11:
        return;
    }

    private int readIntWithOverflow(byte[], int, int)
    {
        java.io.PrintStream $r5;
        byte[] r1;
        ucar.nc2.iosp.misc.NmcObsLegacy r3;
        java.lang.Exception $r2;
        int i0, i1, $i2;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.lang.String $r0, $r8;
        boolean $z0;

        r3 := @this: ucar.nc2.iosp.misc.NmcObsLegacy;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(byte[],int,int)>(r1, i0, i1);

     label1:
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

     label2:
        return $i2;

     label3:
        $r2 := @caughtexception;

        $z0 = r3.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean showOverflow>;

        if $z0 == 0 goto label4;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OVERFLOW=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label4:
        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private boolean endRecord(ucar.unidata.io.RandomAccessFile) throws java.io.IOException
    {
        byte[] $r3, $r12;
        ucar.unidata.io.RandomAccessFile r2;
        long $l0;
        int i1;
        java.lang.String $r1, $r10, $r11, $r17, r18;
        boolean $z0, $z1, $z2;
        java.io.PrintStream $r5, $r14;
        ucar.nc2.iosp.misc.NmcObsLegacy r0;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9, $r13, $r15, $r16;

        r0 := @this: ucar.nc2.iosp.misc.NmcObsLegacy;

        r2 := @parameter0: ucar.unidata.io.RandomAccessFile;

        $z0 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean showSkip>;

        if $z0 == 0 goto label1;

        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" endRecord start at ");

        $l0 = virtualinvoke r2.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void print(java.lang.String)>($r17);

     label1:
        i1 = 0;

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<ucar.unidata.io.RandomAccessFile: byte[] readBytes(int)>(10);

        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r3);

        r18 = $r1;

     label2:
        $z2 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("END RECORD");

        if $z2 == 0 goto label3;

        $r11 = new java.lang.String;

        $r12 = virtualinvoke r2.<ucar.unidata.io.RandomAccessFile: byte[] readBytes(int)>(10);

        specialinvoke $r11.<java.lang.String: void <init>(byte[])>($r12);

        r18 = $r11;

        i1 = i1 + 1;

        goto label2;

     label3:
        $z1 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean showSkip>;

        if $z1 == 0 goto label4;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" last 10 chars= ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" skipped= ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r10);

     label4:
        return 1;
    }

    private boolean endFile(ucar.unidata.io.RandomAccessFile) throws java.io.IOException
    {
        byte[] $r3, $r5;
        ucar.unidata.io.RandomAccessFile r2;
        long $l2;
        int $i0, $i1, $i4;
        java.lang.String $r10, r12, $r14, $r15;
        boolean $z0, $z1;
        java.io.PrintStream $r7;
        ucar.nc2.iosp.misc.NmcObsLegacy r0;
        java.io.EOFException $r11;
        java.lang.StringBuilder $r8, $r9, $r13;

        r0 := @this: ucar.nc2.iosp.misc.NmcObsLegacy;

        r2 := @parameter0: ucar.unidata.io.RandomAccessFile;

        $z0 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean showSkip>;

        if $z0 == 0 goto label1;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" endFile start at ");

        $l2 = virtualinvoke r2.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);

     label1:
        $r14 = new java.lang.String;

        $r3 = virtualinvoke r2.<ucar.unidata.io.RandomAccessFile: byte[] readBytes(int)>(10);

        specialinvoke $r14.<java.lang.String: void <init>(byte[])>($r3);

        r12 = $r14;

     label2:
        $z1 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("ENDOF FILE");

        if $z1 == 0 goto label3;

        $r15 = new java.lang.String;

        $r5 = virtualinvoke r2.<ucar.unidata.io.RandomAccessFile: byte[] readBytes(int)>(10);

        specialinvoke $r15.<java.lang.String: void <init>(byte[])>($r5);

        r12 = $r15;

        goto label2;

     label3:
        $i0 = virtualinvoke r2.<ucar.unidata.io.RandomAccessFile: int read()>();

        if $i0 == 88 goto label4;

        goto label3;

     label4:
        $i1 = virtualinvoke r2.<ucar.unidata.io.RandomAccessFile: int read()>();

        if $i1 != 88 goto label5;

        goto label4;

     label5:
        $i4 = (int) -1;

        virtualinvoke r2.<ucar.unidata.io.RandomAccessFile: int skipBytes(int)>($i4);

        specialinvoke r0.<ucar.nc2.iosp.misc.NmcObsLegacy: void readHeader(ucar.unidata.io.RandomAccessFile)>(r2);

     label6:
        return 1;

     label7:
        $r11 := @caughtexception;

        return 0;

        catch java.io.EOFException from label3 to label6 with label7;
    }

    private void readHeader(ucar.unidata.io.RandomAccessFile) throws java.io.IOException
    {
        byte[] $r1;
        ucar.unidata.io.RandomAccessFile r0;
        java.util.Date $r12, $r31;
        boolean $z0, $z1;
        java.util.TimeZone $r38;
        java.lang.StringBuilder $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r27, $r29, $r30, $r34, $r45, $r47;
        ucar.nc2.units.DateFormatter $r32;
        long $l8;
        short $s0, $s1, $s2, $s3, $s4;
        java.util.Calendar $r8, $r9, $r10, $r11, $r36, $r37;
        int i5, $i6, $i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20;
        java.lang.String $r24, $r33, $r35, $r39, $r40, $r41, $r42, $r43, $r44, $r46;
        java.io.PrintStream $r15, $r26;
        ucar.nc2.iosp.misc.NmcObsLegacy r7;
        char c7;

        r7 := @this: ucar.nc2.iosp.misc.NmcObsLegacy;

        r0 := @parameter0: ucar.unidata.io.RandomAccessFile;

        $r1 = virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: byte[] readBytes(int)>(60);

        $r39 = new java.lang.String;

        specialinvoke $r39.<java.lang.String: void <init>(byte[],int,int)>($r1, 0, 2);

        $s0 = staticinvoke <java.lang.Short: short parseShort(java.lang.String)>($r39);

        $r40 = new java.lang.String;

        specialinvoke $r40.<java.lang.String: void <init>(byte[],int,int)>($r1, 2, 2);

        $s1 = staticinvoke <java.lang.Short: short parseShort(java.lang.String)>($r40);

        $r41 = new java.lang.String;

        specialinvoke $r41.<java.lang.String: void <init>(byte[],int,int)>($r1, 4, 2);

        $s2 = staticinvoke <java.lang.Short: short parseShort(java.lang.String)>($r41);

        $r42 = new java.lang.String;

        specialinvoke $r42.<java.lang.String: void <init>(byte[],int,int)>($r1, 6, 2);

        $s3 = staticinvoke <java.lang.Short: short parseShort(java.lang.String)>($r42);

        $r43 = new java.lang.String;

        specialinvoke $r43.<java.lang.String: void <init>(byte[],int,int)>($r1, 8, 2);

        $s4 = staticinvoke <java.lang.Short: short parseShort(java.lang.String)>($r43);

        $i12 = (int) $s2;

        if $i12 <= 30 goto label1;

        $i13 = (int) $s2;

        $i9 = 1900 + $i13;

        goto label2;

     label1:
        $i14 = (int) $s2;

        $i9 = 2000 + $i14;

     label2:
        i5 = $i9;

        $r8 = r7.<ucar.nc2.iosp.misc.NmcObsLegacy: java.util.Calendar cal>;

        if $r8 != null goto label3;

        $r36 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r7.<ucar.nc2.iosp.misc.NmcObsLegacy: java.util.Calendar cal> = $r36;

        $r37 = r7.<ucar.nc2.iosp.misc.NmcObsLegacy: java.util.Calendar cal>;

        $r38 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        virtualinvoke $r37.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r38);

     label3:
        $r9 = r7.<ucar.nc2.iosp.misc.NmcObsLegacy: java.util.Calendar cal>;

        virtualinvoke $r9.<java.util.Calendar: void clear()>();

        $r10 = r7.<ucar.nc2.iosp.misc.NmcObsLegacy: java.util.Calendar cal>;

        $i15 = (int) $s3;

        $i6 = $i15 - 1;

        $i16 = (int) $s4;

        $i17 = (int) $s0;

        $i18 = (int) $s1;

        virtualinvoke $r10.<java.util.Calendar: void set(int,int,int,int,int)>(i5, $i6, $i16, $i17, $i18);

        $r11 = r7.<ucar.nc2.iosp.misc.NmcObsLegacy: java.util.Calendar cal>;

        $r12 = virtualinvoke $r11.<java.util.Calendar: java.util.Date getTime()>();

        r7.<ucar.nc2.iosp.misc.NmcObsLegacy: java.util.Date refDate> = $r12;

        $r44 = new java.lang.String;

        specialinvoke $r44.<java.lang.String: void <init>(byte[],int,int)>($r1, 0, 10);

        r7.<ucar.nc2.iosp.misc.NmcObsLegacy: java.lang.String refString> = $r44;

        $z0 = r7.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean showHeader>;

        if $z0 == 0 goto label4;

        $r26 = <java.lang.System: java.io.PrintStream out>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nhead=");

        $r46 = new java.lang.String;

        specialinvoke $r46.<java.lang.String: void <init>(byte[])>($r1);

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" date= ");

        $r32 = r7.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.units.DateFormatter dateFormatter>;

        $r31 = r7.<ucar.nc2.iosp.misc.NmcObsLegacy: java.util.Date refDate>;

        $r33 = virtualinvoke $r32.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeString(java.util.Date)>($r31);

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r35);

     label4:
        i10 = 0;

     label5:
        $i11 = virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: int read()>();

        if $i11 != 88 goto label6;

        i10 = i10 + 1;

        goto label5;

     label6:
        c7 = (char) $i11;

        $z1 = r7.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean showSkip>;

        if $z1 == 0 goto label7;

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" b=");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" c=");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c7);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $l8 = virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" skipped= ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r24);

     label7:
        $i20 = (int) -1;

        virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: int skipBytes(int)>($i20);

        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.unidata.io.RandomAccessFile $r1;
        ucar.ma2.Section $r9, $r10, $r15, $r16;
        ucar.nc2.iosp.misc.NmcObsLegacy$MyNetcdfFile $r2;
        java.lang.String[] r24;
        ucar.nc2.Variable $r8, $r14, $r20;
        java.lang.String $r7, $r13, $r19, $r23;
        java.io.PrintStream $r4, $r12, $r18, $r22;
        ucar.nc2.iosp.misc.NmcObsLegacy $r0;
        ucar.ma2.Array $r11, $r17, $r21;
        java.lang.StringBuilder $r3, $r5, $r6;

        r24 := @parameter0: java.lang.String[];

        $r0 = new ucar.nc2.iosp.misc.NmcObsLegacy;

        specialinvoke $r0.<ucar.nc2.iosp.misc.NmcObsLegacy: void <init>()>();

        $r1 = new ucar.unidata.io.RandomAccessFile;

        specialinvoke $r1.<ucar.unidata.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>("C:/data/cadis/tempting", "r");

        $r2 = new ucar.nc2.iosp.misc.NmcObsLegacy$MyNetcdfFile;

        specialinvoke $r2.<ucar.nc2.iosp.misc.NmcObsLegacy$MyNetcdfFile: void <init>(ucar.nc2.iosp.misc.NmcObsLegacy)>($r0);

        virtualinvoke $r2.<ucar.nc2.NetcdfFile: void setLocation(java.lang.String)>("C:/data/cadis/tempting");

        virtualinvoke $r0.<ucar.nc2.iosp.misc.NmcObsLegacy: void open(ucar.unidata.io.RandomAccessFile,ucar.nc2.NetcdfFile,ucar.nc2.util.CancelTask)>($r1, $r2, null);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r7);

        $r8 = virtualinvoke $r2.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("station");

        $r9 = new ucar.ma2.Section;

        specialinvoke $r9.<ucar.ma2.Section: void <init>()>();

        $r10 = virtualinvoke $r9.<ucar.ma2.Section: ucar.ma2.Section appendRange(int,int)>(0, 1);

        $r11 = virtualinvoke $r8.<ucar.nc2.Variable: ucar.ma2.Array read(ucar.ma2.Section)>($r10);

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r13 = staticinvoke <ucar.nc2.NCdumpW: java.lang.String printArray(ucar.ma2.Array,java.lang.String,ucar.nc2.util.CancelTask)>($r11, "station", null);

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r13);

        $r14 = virtualinvoke $r2.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("report");

        $r15 = new ucar.ma2.Section;

        specialinvoke $r15.<ucar.ma2.Section: void <init>()>();

        $r16 = virtualinvoke $r15.<ucar.ma2.Section: ucar.ma2.Section appendRange(int,int)>(0, 0);

        $r17 = virtualinvoke $r14.<ucar.nc2.Variable: ucar.ma2.Array read(ucar.ma2.Section)>($r16);

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r19 = staticinvoke <ucar.nc2.NCdumpW: java.lang.String printArray(ucar.ma2.Array,java.lang.String,ucar.nc2.util.CancelTask)>($r17, "report", null);

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r19);

        $r20 = virtualinvoke $r2.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("reportIndex");

        $r21 = virtualinvoke $r20.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r23 = staticinvoke <ucar.nc2.NCdumpW: java.lang.String printArray(ucar.ma2.Array,java.lang.String,ucar.nc2.util.CancelTask)>($r21, "reportIndex", null);

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r23);

        virtualinvoke $r0.<ucar.nc2.iosp.misc.NmcObsLegacy: void close()>();

        return;
    }

    static boolean access$100(ucar.nc2.iosp.misc.NmcObsLegacy, ucar.unidata.io.RandomAccessFile) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile r1;
        ucar.nc2.iosp.misc.NmcObsLegacy r0;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.iosp.misc.NmcObsLegacy;

        r1 := @parameter1: ucar.unidata.io.RandomAccessFile;

        $z0 = specialinvoke r0.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean endRecord(ucar.unidata.io.RandomAccessFile)>(r1);

        return $z0;
    }

    static boolean access$200(ucar.nc2.iosp.misc.NmcObsLegacy, ucar.unidata.io.RandomAccessFile) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile r1;
        ucar.nc2.iosp.misc.NmcObsLegacy r0;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.iosp.misc.NmcObsLegacy;

        r1 := @parameter1: ucar.unidata.io.RandomAccessFile;

        $z0 = specialinvoke r0.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean endFile(ucar.unidata.io.RandomAccessFile)>(r1);

        return $z0;
    }

    static java.util.Date access$300(ucar.nc2.iosp.misc.NmcObsLegacy)
    {
        ucar.nc2.iosp.misc.NmcObsLegacy r0;
        java.util.Date $r1;

        r0 := @parameter0: ucar.nc2.iosp.misc.NmcObsLegacy;

        $r1 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: java.util.Date refDate>;

        return $r1;
    }

    static java.util.Calendar access$400(ucar.nc2.iosp.misc.NmcObsLegacy)
    {
        java.util.Calendar $r1;
        ucar.nc2.iosp.misc.NmcObsLegacy r0;

        r0 := @parameter0: ucar.nc2.iosp.misc.NmcObsLegacy;

        $r1 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: java.util.Calendar cal>;

        return $r1;
    }

    static java.lang.String access$500(ucar.nc2.iosp.misc.NmcObsLegacy)
    {
        java.lang.String $r1;
        ucar.nc2.iosp.misc.NmcObsLegacy r0;

        r0 := @parameter0: ucar.nc2.iosp.misc.NmcObsLegacy;

        $r1 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: java.lang.String refString>;

        return $r1;
    }

    static boolean access$600(ucar.nc2.iosp.misc.NmcObsLegacy)
    {
        ucar.nc2.iosp.misc.NmcObsLegacy r0;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.iosp.misc.NmcObsLegacy;

        $z0 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean showObs>;

        return $z0;
    }

    static boolean access$700(ucar.nc2.iosp.misc.NmcObsLegacy)
    {
        ucar.nc2.iosp.misc.NmcObsLegacy r0;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.iosp.misc.NmcObsLegacy;

        $z0 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean showTime>;

        return $z0;
    }

    static ucar.nc2.units.DateFormatter access$800(ucar.nc2.iosp.misc.NmcObsLegacy)
    {
        ucar.nc2.iosp.misc.NmcObsLegacy r0;
        ucar.nc2.units.DateFormatter $r1;

        r0 := @parameter0: ucar.nc2.iosp.misc.NmcObsLegacy;

        $r1 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.units.DateFormatter dateFormatter>;

        return $r1;
    }

    static ucar.unidata.io.RandomAccessFile access$900(ucar.nc2.iosp.misc.NmcObsLegacy)
    {
        ucar.unidata.io.RandomAccessFile $r1;
        ucar.nc2.iosp.misc.NmcObsLegacy r0;

        r0 := @parameter0: ucar.nc2.iosp.misc.NmcObsLegacy;

        $r1 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.unidata.io.RandomAccessFile raf>;

        return $r1;
    }

    static boolean access$1000(ucar.nc2.iosp.misc.NmcObsLegacy)
    {
        ucar.nc2.iosp.misc.NmcObsLegacy r0;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.iosp.misc.NmcObsLegacy;

        $z0 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: boolean showData>;

        return $z0;
    }

    static java.util.List access$1200(ucar.nc2.iosp.misc.NmcObsLegacy)
    {
        java.util.List $r1;
        ucar.nc2.iosp.misc.NmcObsLegacy r0;

        r0 := @parameter0: ucar.nc2.iosp.misc.NmcObsLegacy;

        $r1 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: java.util.List catStructures>;

        return $r1;
    }

    static int access$1300(ucar.nc2.iosp.misc.NmcObsLegacy, byte[], int, int)
    {
        byte[] r1;
        ucar.nc2.iosp.misc.NmcObsLegacy r0;
        int i0, i1, $i2;

        r0 := @parameter0: ucar.nc2.iosp.misc.NmcObsLegacy;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $i2 = specialinvoke r0.<ucar.nc2.iosp.misc.NmcObsLegacy: int readIntWithOverflow(byte[],int,int)>(r1, i0, i1);

        return $i2;
    }

    static java.lang.String[] access$1400(ucar.nc2.iosp.misc.NmcObsLegacy)
    {
        java.lang.String[] $r1;
        ucar.nc2.iosp.misc.NmcObsLegacy r0;

        r0 := @parameter0: ucar.nc2.iosp.misc.NmcObsLegacy;

        $r1 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: java.lang.String[] catNames>;

        return $r1;
    }

    static float[] access$1600()
    {
        float[] $r0;

        $r0 = <ucar.nc2.iosp.misc.NmcObsLegacy: float[] mandPressureLevel>;

        return $r0;
    }

    static ucar.nc2.NetcdfFile access$1700(ucar.nc2.iosp.misc.NmcObsLegacy)
    {
        ucar.nc2.NetcdfFile $r1;
        ucar.nc2.iosp.misc.NmcObsLegacy r0;

        r0 := @parameter0: ucar.nc2.iosp.misc.NmcObsLegacy;

        $r1 = r0.<ucar.nc2.iosp.misc.NmcObsLegacy: ucar.nc2.NetcdfFile ncfile>;

        return $r1;
    }

    static void <clinit>()
    {
        float[] $r1;
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/iosp/misc/NmcObsLegacy;");

        <ucar.nc2.iosp.misc.NmcObsLegacy: org.slf4j.Logger log> = $r0;

        $r1 = newarray (float)[20];

        $r1[0] = 1000.0F;

        $r1[1] = 850.0F;

        $r1[2] = 700.0F;

        $r1[3] = 500.0F;

        $r1[4] = 400.0F;

        $r1[5] = 300.0F;

        $r1[6] = 250.0F;

        $r1[7] = 200.0F;

        $r1[8] = 150.0F;

        $r1[9] = 100.0F;

        $r1[10] = 70.0F;

        $r1[11] = 50.0F;

        $r1[12] = 30.0F;

        $r1[13] = 20.0F;

        $r1[14] = 10.0F;

        $r1[15] = 7.0F;

        $r1[16] = 5.0F;

        $r1[17] = 3.0F;

        $r1[18] = 2.0F;

        $r1[19] = 1.0F;

        <ucar.nc2.iosp.misc.NmcObsLegacy: float[] mandPressureLevel> = $r1;

        return;
    }
}
