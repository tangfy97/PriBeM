class com.pff.PSTTableItem extends java.lang.Object
{
    public static final int VALUE_TYPE_PT_UNICODE;
    public static final int VALUE_TYPE_PT_STRING8;
    public static final int VALUE_TYPE_PT_BIN;
    public int itemIndex;
    public int entryType;
    public int entryValueType;
    public int entryValueReference;
    public byte[] data;
    public boolean isExternalValueReference;
    private java.text.SimpleDateFormat dateFormatter;
    private static java.util.SimpleTimeZone utcTimeZone;

    void <init>()
    {
        byte[] $r1;
        java.text.SimpleDateFormat $r2;
        com.pff.PSTTableItem r0;

        r0 := @this: com.pff.PSTTableItem;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.pff.PSTTableItem: int itemIndex> = 0;

        r0.<com.pff.PSTTableItem: int entryType> = 0;

        r0.<com.pff.PSTTableItem: int entryValueType> = 0;

        r0.<com.pff.PSTTableItem: int entryValueReference> = 0;

        $r1 = newarray (byte)[0];

        r0.<com.pff.PSTTableItem: byte[] data> = $r1;

        r0.<com.pff.PSTTableItem: boolean isExternalValueReference> = 0;

        $r2 = new java.text.SimpleDateFormat;

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyyMMdd\'T\'HHmmss\'Z\'");

        r0.<com.pff.PSTTableItem: java.text.SimpleDateFormat dateFormatter> = $r2;

        return;
    }

    public long getLongValue()
    {
        byte[] $r1, $r2;
        com.pff.PSTTableItem r0;
        int $i0;
        long $l1;

        r0 := @this: com.pff.PSTTableItem;

        $r1 = r0.<com.pff.PSTTableItem: byte[] data>;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $r2 = r0.<com.pff.PSTTableItem: byte[] data>;

        $l1 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[])>($r2);

        return $l1;

     label1:
        return -1L;
    }

    public java.lang.String getStringValue()
    {
        int $i0;
        com.pff.PSTTableItem r0;
        java.lang.String $r1;

        r0 := @this: com.pff.PSTTableItem;

        $i0 = r0.<com.pff.PSTTableItem: int entryValueType>;

        $r1 = virtualinvoke r0.<com.pff.PSTTableItem: java.lang.String getStringValue(int)>($i0);

        return $r1;
    }

    public java.lang.String getStringValue(int)
    {
        byte[] $r3, $r5, $r8, $r12, $r18;
        byte $b2;
        boolean $z0, $z1;
        java.lang.StringBuilder $r17, $r20, $r23;
        java.io.UnsupportedEncodingException $r14;
        long $l5;
        short s3, $s9;
        java.nio.charset.Charset $r9;
        java.lang.StringBuffer $r25, $r26;
        int i0, $i1, $i6, i8;
        java.lang.String $r6, $r10, $r13, $r19, $r21, $r22, $r24, $r27;
        java.io.PrintStream $r16;
        char $c4, $c7;
        com.pff.PSTTableItem r2;

        r2 := @this: com.pff.PSTTableItem;

        i0 := @parameter0: int;

        if i0 != 31 goto label06;

     label01:
        $z1 = r2.<com.pff.PSTTableItem: boolean isExternalValueReference>;

        if $z1 == 0 goto label03;

     label02:
        return "External string reference!";

     label03:
        $r22 = new java.lang.String;

        $r12 = r2.<com.pff.PSTTableItem: byte[] data>;

        specialinvoke $r22.<java.lang.String: void <init>(byte[],java.lang.String)>($r12, "UTF-16LE");

        $r13 = virtualinvoke $r22.<java.lang.String: java.lang.String trim()>();

     label04:
        return $r13;

     label05:
        $r14 := @caughtexception;

        $r16 = <java.lang.System: java.io.PrintStream err>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error decoding string: ");

        $r18 = r2.<com.pff.PSTTableItem: byte[] data>;

        $r19 = virtualinvoke $r18.<java.lang.Object: java.lang.String toString()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r21);

        return "";

     label06:
        if i0 != 30 goto label07;

        $r24 = new java.lang.String;

        $r8 = r2.<com.pff.PSTTableItem: byte[] data>;

        $r9 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        specialinvoke $r24.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r8, $r9);

        $r10 = virtualinvoke $r24.<java.lang.String: java.lang.String trim()>();

        return $r10;

     label07:
        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        i8 = 0;

     label08:
        $r3 = r2.<com.pff.PSTTableItem: byte[] data>;

        $i1 = lengthof $r3;

        if i8 >= $i1 goto label12;

        $r5 = r2.<com.pff.PSTTableItem: byte[] data>;

        $b2 = $r5[i8];

        $s9 = (short) $b2;

        s3 = $s9 & 255;

        $c4 = (char) s3;

        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c4);

        if $z0 == 0 goto label09;

        $c7 = (char) s3;

        virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c7);

        virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        goto label10;

     label09:
        virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(". ");

     label10:
        $l5 = (long) s3;

        $r6 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l5);

        virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i6 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i6 <= 1 goto label11;

        virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

     label11:
        i8 = i8 + 1;

        goto label08;

     label12:
        virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t");

        virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>($r26);

        $r27 = new java.lang.String;

        specialinvoke $r27.<java.lang.String: void <init>(java.lang.StringBuffer)>($r25);

        return $r27;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label05;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label05;
    }

    public java.lang.String toString()
    {
        byte[] $r2, $r3, $r5, $r8, $r23, $r33, $r34, $r60;
        java.lang.Integer $r6, $r47, $r48;
        java.lang.Long $r10, $r11;
        java.lang.StringBuilder $r13, $r14, $r15, $r17, $r18, $r20, $r24, $r25, $r26, $r38, $r39, $r42, $r44, $r45, $r50, $r52, $r53, $r54, $r57, $r59, $r62;
        java.lang.Object[] $r4, $r9, $r28, $r46;
        java.text.SimpleDateFormat $r37, $r40;
        long $l6, $l16, $l17;
        short $s13, $s15;
        java.lang.String $r1, $r7, $r12, $r16, $r19, $r21, $r22, $r27, $r31, $r32, $r41, $r43, $r49, $r51, $r55, $r61, $r63, $r64, r65;
        java.util.Date $r35;
        java.lang.Short $r29, $r30;
        boolean $z0;
        java.util.SimpleTimeZone $r36;
        java.io.UnsupportedEncodingException $r56;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i18, $i19, $i20, i21, i22;
        java.io.PrintStream $r58;
        char $c11, $c12, $c14;
        com.pff.PSTTableItem r0;

        r0 := @this: com.pff.PSTTableItem;

        $i1 = r0.<com.pff.PSTTableItem: int entryType>;

        $i0 = r0.<com.pff.PSTTableItem: int entryValueType>;

        $r1 = staticinvoke <com.pff.PSTFile: java.lang.String getPropertyDescription(int,int)>($i1, $i0);

        $i2 = r0.<com.pff.PSTTableItem: int entryValueType>;

        if $i2 != 11 goto label03;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $i20 = r0.<com.pff.PSTTableItem: int entryValueReference>;

        if $i20 != 0 goto label01;

        $r64 = "false";

        goto label02;

     label01:
        $r64 = "true";

     label02:
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r55;

     label03:
        $z0 = r0.<com.pff.PSTTableItem: boolean isExternalValueReference>;

        if $z0 == 0 goto label04;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r46 = newarray (java.lang.Object)[2];

        $i18 = r0.<com.pff.PSTTableItem: int entryValueReference>;

        $r47 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i18);

        $r46[0] = $r47;

        $i19 = r0.<com.pff.PSTTableItem: int entryValueReference>;

        $r48 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19);

        $r46[1] = $r48;

        $r49 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("0x%08X (%d)", $r46);

        $r50 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r51;

     label04:
        $i3 = r0.<com.pff.PSTTableItem: int entryValueType>;

        if $i3 == 5 goto label05;

        $i7 = r0.<com.pff.PSTTableItem: int entryValueType>;

        if $i7 != 20 goto label08;

     label05:
        $r2 = r0.<com.pff.PSTTableItem: byte[] data>;

        if $r2 != null goto label06;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no data");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;

     label06:
        $r3 = r0.<com.pff.PSTTableItem: byte[] data>;

        $i4 = lengthof $r3;

        if $i4 != 8 goto label07;

        $r8 = r0.<com.pff.PSTTableItem: byte[] data>;

        $l6 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>($r8, 0, 8);

        $r9 = newarray (java.lang.Object)[3];

        $r9[0] = $r1;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        $r9[1] = $r10;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        $r9[2] = $r11;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s0x%016X (%d)", $r9);

        return $r12;

     label07:
        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = $r1;

        $r5 = r0.<com.pff.PSTTableItem: byte[] data>;

        $i5 = lengthof $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r4[1] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s invalid data length: %d", $r4);

        return $r7;

     label08:
        $i8 = r0.<com.pff.PSTTableItem: int entryValueType>;

        if $i8 != 64 goto label09;

        $r33 = r0.<com.pff.PSTTableItem: byte[] data>;

        $l16 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>($r33, 4, 8);

        i21 = (int) $l16;

        $r34 = r0.<com.pff.PSTTableItem: byte[] data>;

        $l17 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>($r34, 0, 4);

        i22 = (int) $l17;

        $r35 = staticinvoke <com.pff.PSTObject: java.util.Date filetimeToDate(int,int)>(i21, i22);

        $r37 = r0.<com.pff.PSTTableItem: java.text.SimpleDateFormat dateFormatter>;

        $r36 = <com.pff.PSTTableItem: java.util.SimpleTimeZone utcTimeZone>;

        virtualinvoke $r37.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r36);

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r40 = r0.<com.pff.PSTTableItem: java.text.SimpleDateFormat dateFormatter>;

        $r41 = virtualinvoke $r40.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r35);

        $r42 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r43;

     label09:
        $i9 = r0.<com.pff.PSTTableItem: int entryValueType>;

        if $i9 != 31 goto label15;

     label10:
        $r22 = new java.lang.String;

        $r23 = r0.<com.pff.PSTTableItem: byte[] data>;

        specialinvoke $r22.<java.lang.String: void <init>(byte[],java.lang.String)>($r23, "UTF-16LE");

        r65 = $r22;

     label11:
        goto label13;

     label12:
        $r56 := @caughtexception;

        $r58 = <java.lang.System: java.io.PrintStream err>;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error decoding string: ");

        $r60 = r0.<com.pff.PSTTableItem: byte[] data>;

        $r61 = virtualinvoke $r60.<java.lang.Object: java.lang.String toString()>();

        $r62 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r58.<java.io.PrintStream: void println(java.lang.String)>($r63);

        r65 = "";

     label13:
        $i10 = virtualinvoke r65.<java.lang.String: int length()>();

        if $i10 < 2 goto label14;

        $c11 = virtualinvoke r65.<java.lang.String: char charAt(int)>(0);

        if $c11 != 1 goto label14;

        $r28 = newarray (java.lang.Object)[4];

        $r28[0] = $r1;

        $c12 = virtualinvoke r65.<java.lang.String: char charAt(int)>(0);

        $s13 = (short) $c12;

        $r29 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s13);

        $r28[1] = $r29;

        $c14 = virtualinvoke r65.<java.lang.String: char charAt(int)>(1);

        $s15 = (short) $c14;

        $r30 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s15);

        $r28[2] = $r30;

        $r31 = virtualinvoke r65.<java.lang.String: java.lang.String substring(int)>(2);

        $r28[3] = $r31;

        $r32 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s [%04X][%04X]%s", $r28);

        return $r32;

     label14:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r65);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r27;

     label15:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r19 = virtualinvoke r0.<com.pff.PSTTableItem: java.lang.String getStringValue()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r21;

        catch java.io.UnsupportedEncodingException from label10 to label11 with label12;
    }

    static void <clinit>()
    {
        java.util.SimpleTimeZone $r0;

        <com.pff.PSTTableItem: int VALUE_TYPE_PT_BIN> = 258;

        <com.pff.PSTTableItem: int VALUE_TYPE_PT_STRING8> = 30;

        <com.pff.PSTTableItem: int VALUE_TYPE_PT_UNICODE> = 31;

        $r0 = new java.util.SimpleTimeZone;

        specialinvoke $r0.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(0, "UTC");

        <com.pff.PSTTableItem: java.util.SimpleTimeZone utcTimeZone> = $r0;

        return;
    }
}
