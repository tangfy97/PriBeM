public class org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild extends java.lang.Object
{
    private static final org.waveprotocol.wave.model.util.StringMap typeMap;
    private final org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type type;
    private final org.waveprotocol.wave.client.editor.content.ContentElement element;
    private java.lang.String value;

    private static org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type getElementType(java.lang.String)
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type $r4;
        java.lang.Object $r3;
        java.lang.String r0;
        org.waveprotocol.wave.model.util.StringMap $r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: org.waveprotocol.wave.model.util.StringMap typeMap>;

        $z0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.util.StringMap: boolean containsKey(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r2 = <org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: org.waveprotocol.wave.model.util.StringMap typeMap>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.util.StringMap: java.lang.Object get(java.lang.String)>(r0);

        $r4 = (org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type) $r3;

        goto label2;

     label1:
        $r4 = <org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type UNKNOWN>;

     label2:
        return $r4;
    }

    private void <init>(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild r0;
        org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type $r5;
        org.waveprotocol.wave.client.editor.content.ContentElement r1;
        java.lang.String $r2, $r3, $r4;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: java.lang.String value> = "";

        r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: org.waveprotocol.wave.client.editor.content.ContentElement element> = r1;

        $r2 = virtualinvoke r1.<org.waveprotocol.wave.client.editor.content.ContentElement: java.lang.String getAttribute(java.lang.String)>("value");

        r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: java.lang.String value> = $r2;

        $r3 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: java.lang.String value>;

        if $r3 != null goto label1;

        r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: java.lang.String value> = "";

     label1:
        $r4 = virtualinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: java.lang.String getTag()>();

        $r5 = staticinvoke <org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type getElementType(java.lang.String)>($r4);

        r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type type> = $r5;

        return;
    }

    public static org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild create(org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode r0;
        org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild $r2;
        org.waveprotocol.wave.client.editor.content.ContentElement $r1;
        boolean $z0;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentNode;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentNode: boolean isElement()>();

        if $z0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentNode: org.waveprotocol.wave.client.editor.content.ContentElement asElement()>();

        $r2 = new org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild;

        specialinvoke $r2.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: void <init>(org.waveprotocol.wave.client.editor.content.ContentElement)>($r1);

        return $r2;
    }

    public java.lang.String getValue()
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild r0;
        java.lang.String $r1;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild;

        $r1 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: java.lang.String value>;

        return $r1;
    }

    public org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type getType()
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild r0;
        org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type $r1;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild;

        $r1 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type type>;

        return $r1;
    }

    public java.lang.String getTag()
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild r0;
        org.waveprotocol.wave.client.editor.content.ContentElement $r1;
        java.lang.String $r2;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild;

        $r1 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: org.waveprotocol.wave.client.editor.content.ContentElement element>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.client.editor.content.ContentElement: java.lang.String getTagName()>();

        return $r2;
    }

    public org.waveprotocol.wave.client.editor.content.ContentElement getElement()
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild r0;
        org.waveprotocol.wave.client.editor.content.ContentElement $r1;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild;

        $r1 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: org.waveprotocol.wave.client.editor.content.ContentElement element>;

        return $r1;
    }

    public java.lang.String getKey()
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild r0;
        org.waveprotocol.wave.client.editor.content.ContentElement $r1;
        java.lang.String $r2;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild;

        $r1 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: org.waveprotocol.wave.client.editor.content.ContentElement element>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.client.editor.content.ContentElement: java.lang.String getName()>();

        return $r2;
    }

    public boolean updateValueFromElement()
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild r0;
        org.waveprotocol.wave.client.editor.content.ContentElement $r1;
        java.lang.String $r2, $r3, r4;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild;

        $r1 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: org.waveprotocol.wave.client.editor.content.ContentElement element>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.client.editor.content.ContentElement: java.lang.String getAttribute(java.lang.String)>("value");

        r4 = $r2;

        if $r2 != null goto label1;

        r4 = "";

     label1:
        $r3 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: java.lang.String value>;

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label2;

        r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: java.lang.String value> = r4;

        return 1;

     label2:
        return 0;
    }

    public void setValue(java.lang.String)
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild r0;
        org.waveprotocol.wave.client.editor.content.ContentElement $r3, $r5;
        java.lang.String r1, $r2;
        org.waveprotocol.wave.client.editor.content.CMutableDocument $r4;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: java.lang.String value>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: org.waveprotocol.wave.client.editor.content.ContentElement element>;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.client.editor.content.ContentElement: org.waveprotocol.wave.client.editor.content.CMutableDocument getMutableDoc()>();

        $r5 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: org.waveprotocol.wave.client.editor.content.ContentElement element>;

        virtualinvoke $r4.<org.waveprotocol.wave.client.editor.content.CMutableDocument: void setElementAttribute(java.lang.Object,java.lang.String,java.lang.String)>($r5, "value", r1);

        return;
    }

    public boolean isDuplicate(org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild)
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild r0, r2;
        org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type $r1, $r3;
        java.lang.String $r4, $r5, $r6;
        boolean $z0, $z1;

        r2 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild;

        r0 := @parameter0: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type getType()>();

        $r3 = virtualinvoke r2.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type getType()>();

        if $r1 == $r3 goto label2;

     label1:
        return 0;

     label2:
        $r4 = virtualinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: java.lang.String getKey()>();

        $r5 = virtualinvoke r2.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: java.lang.String getKey()>();

        if $r4 == $r5 goto label3;

        if $r4 == null goto label4;

        $r6 = virtualinvoke r2.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: java.lang.String getKey()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label4;

     label3:
        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1, $r4, $r13, $r16, $r17;
        org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild r0;
        org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type $r9;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r14, $r15;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: java.lang.String getKey()>();

        if $r1 != null goto label1;

        $r17 = "";

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", key \'");

        $r4 = virtualinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: java.lang.String getKey()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r17 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Gadget child ");

        $r9 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild$Type type>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", value \'");

        $r13 = virtualinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: java.lang.String getValue()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }

    static org.waveprotocol.wave.model.util.StringMap access$000()
    {
        org.waveprotocol.wave.model.util.StringMap $r0;

        $r0 = <org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: org.waveprotocol.wave.model.util.StringMap typeMap>;

        return $r0;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.util.StringMap $r0;

        $r0 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: org.waveprotocol.wave.model.util.StringMap createStringMap()>();

        <org.waveprotocol.wave.client.gadget.renderer.GadgetElementChild: org.waveprotocol.wave.model.util.StringMap typeMap> = $r0;

        return;
    }
}
