public abstract class org.apache.commons.codec.language.AbstractCaverphone extends java.lang.Object implements org.apache.commons.codec.StringEncoder
{

    public void <init>()
    {
        org.apache.commons.codec.language.AbstractCaverphone r0;

        r0 := @this: org.apache.commons.codec.language.AbstractCaverphone;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object encode(java.lang.Object) throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.EncoderException $r4;
        java.lang.Object r0;
        org.apache.commons.codec.language.AbstractCaverphone r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r1 := @this: org.apache.commons.codec.language.AbstractCaverphone;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.String;

        if $z0 != 0 goto label1;

        $r4 = new org.apache.commons.codec.EncoderException;

        specialinvoke $r4.<org.apache.commons.codec.EncoderException: void <init>(java.lang.String)>("Parameter supplied to Caverphone encode is not of type java.lang.String");

        throw $r4;

     label1:
        $r2 = (java.lang.String) r0;

        $r3 = virtualinvoke r1.<org.apache.commons.codec.language.AbstractCaverphone: java.lang.String encode(java.lang.String)>($r2);

        return $r3;
    }

    public boolean isEncodeEqual(java.lang.String, java.lang.String) throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.language.AbstractCaverphone r0;
        java.lang.String r1, $r2, r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.codec.language.AbstractCaverphone;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.codec.language.AbstractCaverphone: java.lang.String encode(java.lang.String)>(r1);

        $r4 = virtualinvoke r0.<org.apache.commons.codec.language.AbstractCaverphone: java.lang.String encode(java.lang.String)>(r3);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        return $z0;
    }
}
