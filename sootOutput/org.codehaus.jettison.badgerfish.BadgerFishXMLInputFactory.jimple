public class org.codehaus.jettison.badgerfish.BadgerFishXMLInputFactory extends org.codehaus.jettison.AbstractXMLInputFactory
{

    public void <init>()
    {
        org.codehaus.jettison.badgerfish.BadgerFishXMLInputFactory r0;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLInputFactory;

        specialinvoke r0.<org.codehaus.jettison.AbstractXMLInputFactory: void <init>()>();

        return;
    }

    public javax.xml.stream.XMLStreamReader createXMLStreamReader(org.codehaus.jettison.json.JSONTokener) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.json.JSONException $r3;
        javax.xml.stream.XMLStreamException $r4;
        org.codehaus.jettison.json.JSONTokener r1;
        org.codehaus.jettison.json.JSONObject $r0;
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader $r2;
        org.codehaus.jettison.badgerfish.BadgerFishXMLInputFactory r5;

        r5 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLInputFactory;

        r1 := @parameter0: org.codehaus.jettison.json.JSONTokener;

     label1:
        $r0 = new org.codehaus.jettison.json.JSONObject;

        specialinvoke $r0.<org.codehaus.jettison.json.JSONObject: void <init>(org.codehaus.jettison.json.JSONTokener)>(r1);

        $r2 = new org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader;

        specialinvoke $r2.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: void <init>(org.codehaus.jettison.json.JSONObject)>($r0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r4.<javax.xml.stream.XMLStreamException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch org.codehaus.jettison.json.JSONException from label1 to label2 with label3;
    }
}
