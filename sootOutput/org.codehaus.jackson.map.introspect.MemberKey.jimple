public final class org.codehaus.jackson.map.introspect.MemberKey extends java.lang.Object
{
    static final java.lang.Class[] NO_CLASSES;
    final java.lang.String _name;
    final java.lang.Class[] _argTypes;

    public void <init>(java.lang.reflect.Method)
    {
        java.lang.Class[] $r3;
        java.lang.String $r2;
        java.lang.reflect.Method r1;
        org.codehaus.jackson.map.introspect.MemberKey r0;

        r0 := @this: org.codehaus.jackson.map.introspect.MemberKey;

        r1 := @parameter0: java.lang.reflect.Method;

        $r2 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.String getName()>();

        $r3 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        specialinvoke r0.<org.codehaus.jackson.map.introspect.MemberKey: void <init>(java.lang.String,java.lang.Class[])>($r2, $r3);

        return;
    }

    public void <init>(java.lang.reflect.Constructor)
    {
        java.lang.Class[] $r2;
        java.lang.reflect.Constructor r1;
        org.codehaus.jackson.map.introspect.MemberKey r0;

        r0 := @this: org.codehaus.jackson.map.introspect.MemberKey;

        r1 := @parameter0: java.lang.reflect.Constructor;

        $r2 = virtualinvoke r1.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        specialinvoke r0.<org.codehaus.jackson.map.introspect.MemberKey: void <init>(java.lang.String,java.lang.Class[])>("", $r2);

        return;
    }

    public void <init>(java.lang.String, java.lang.Class[])
    {
        java.lang.Class[] r2, $r3;
        java.lang.String r1;
        org.codehaus.jackson.map.introspect.MemberKey r0;

        r0 := @this: org.codehaus.jackson.map.introspect.MemberKey;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.introspect.MemberKey: java.lang.String _name> = r1;

        if r2 != null goto label1;

        $r3 = <org.codehaus.jackson.map.introspect.MemberKey: java.lang.Class[] NO_CLASSES>;

        goto label2;

     label1:
        $r3 = r2;

     label2:
        r0.<org.codehaus.jackson.map.introspect.MemberKey: java.lang.Class[] _argTypes> = $r3;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.Class[] $r5;
        org.codehaus.jackson.map.introspect.MemberKey r1;
        int $i0;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7;
        java.lang.String $r2, $r8;

        r1 := @this: org.codehaus.jackson.map.introspect.MemberKey;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.codehaus.jackson.map.introspect.MemberKey: java.lang.String _name>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r5 = r1.<org.codehaus.jackson.map.introspect.MemberKey: java.lang.Class[] _argTypes>;

        $i0 = lengthof $r5;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-args)");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public int hashCode()
    {
        int $i0, $i1, $i2;
        java.lang.Class[] $r2;
        java.lang.String $r1;
        org.codehaus.jackson.map.introspect.MemberKey r0;

        r0 := @this: org.codehaus.jackson.map.introspect.MemberKey;

        $r1 = r0.<org.codehaus.jackson.map.introspect.MemberKey: java.lang.String _name>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $r2 = r0.<org.codehaus.jackson.map.introspect.MemberKey: java.lang.Class[] _argTypes>;

        $i1 = lengthof $r2;

        $i2 = $i0 + $i1;

        return $i2;
    }

    public boolean equals(java.lang.Object)
    {
        int i0, $i1, i2;
        java.lang.String $r5, $r6;
        boolean $z0, $z1, $z2;
        java.lang.Class[] r7, $r8, $r10;
        org.codehaus.jackson.map.introspect.MemberKey r1, r4;
        java.lang.Object r0;
        java.lang.Class $r2, $r3, r9, r11;

        r1 := @this: org.codehaus.jackson.map.introspect.MemberKey;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        if r0 != null goto label02;

        return 0;

     label02:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label03;

        return 0;

     label03:
        r4 = (org.codehaus.jackson.map.introspect.MemberKey) r0;

        $r6 = r1.<org.codehaus.jackson.map.introspect.MemberKey: java.lang.String _name>;

        $r5 = r4.<org.codehaus.jackson.map.introspect.MemberKey: java.lang.String _name>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label04;

        return 0;

     label04:
        r7 = r4.<org.codehaus.jackson.map.introspect.MemberKey: java.lang.Class[] _argTypes>;

        $r8 = r1.<org.codehaus.jackson.map.introspect.MemberKey: java.lang.Class[] _argTypes>;

        i0 = lengthof $r8;

        $i1 = lengthof r7;

        if $i1 == i0 goto label05;

        return 0;

     label05:
        i2 = 0;

     label06:
        if i2 >= i0 goto label10;

        r9 = r7[i2];

        $r10 = r1.<org.codehaus.jackson.map.introspect.MemberKey: java.lang.Class[] _argTypes>;

        r11 = $r10[i2];

        if r9 != r11 goto label07;

        goto label09;

     label07:
        $z1 = virtualinvoke r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r11);

        if $z1 != 0 goto label09;

        $z2 = virtualinvoke r11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r9);

        if $z2 == 0 goto label08;

        goto label09;

     label08:
        return 0;

     label09:
        i2 = i2 + 1;

        goto label06;

     label10:
        return 1;
    }

    static void <clinit>()
    {
        java.lang.Class[] $r0;

        $r0 = newarray (java.lang.Class)[0];

        <org.codehaus.jackson.map.introspect.MemberKey: java.lang.Class[] NO_CLASSES> = $r0;

        return;
    }
}
