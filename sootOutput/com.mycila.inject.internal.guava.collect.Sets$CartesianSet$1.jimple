class com.mycila.inject.internal.guava.collect.Sets$CartesianSet$1 extends com.mycila.inject.internal.guava.collect.UnmodifiableIterator
{
    int index;
    final com.mycila.inject.internal.guava.collect.Sets$CartesianSet this$0;

    void <init>(com.mycila.inject.internal.guava.collect.Sets$CartesianSet)
    {
        com.mycila.inject.internal.guava.collect.Sets$CartesianSet$1 r0;
        com.mycila.inject.internal.guava.collect.Sets$CartesianSet r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Sets$CartesianSet$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.Sets$CartesianSet;

        r0.<com.mycila.inject.internal.guava.collect.Sets$CartesianSet$1: com.mycila.inject.internal.guava.collect.Sets$CartesianSet this$0> = r1;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.UnmodifiableIterator: void <init>()>();

        return;
    }

    public boolean hasNext()
    {
        com.mycila.inject.internal.guava.collect.Sets$CartesianSet $r1;
        com.mycila.inject.internal.guava.collect.Sets$CartesianSet$1 r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Sets$CartesianSet$1;

        $i1 = r0.<com.mycila.inject.internal.guava.collect.Sets$CartesianSet$1: int index>;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Sets$CartesianSet$1: com.mycila.inject.internal.guava.collect.Sets$CartesianSet this$0>;

        $i0 = $r1.<com.mycila.inject.internal.guava.collect.Sets$CartesianSet: int size>;

        if $i1 >= $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.util.List next()
    {
        java.lang.Object[] r3;
        com.mycila.inject.internal.guava.collect.Sets$CartesianSet$Axis $r8;
        com.mycila.inject.internal.guava.collect.Sets$CartesianSet$1 r0;
        com.mycila.inject.internal.guava.collect.ImmutableList $r2, $r4, $r6;
        com.mycila.inject.internal.guava.collect.Sets$CartesianSet $r1, $r5;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.util.NoSuchElementException $r10;
        boolean $z0;
        java.lang.Object $r7, $r9;

        r0 := @this: com.mycila.inject.internal.guava.collect.Sets$CartesianSet$1;

        $z0 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.Sets$CartesianSet$1: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r10 = new java.util.NoSuchElementException;

        specialinvoke $r10.<java.util.NoSuchElementException: void <init>()>();

        throw $r10;

     label1:
        $r1 = r0.<com.mycila.inject.internal.guava.collect.Sets$CartesianSet$1: com.mycila.inject.internal.guava.collect.Sets$CartesianSet this$0>;

        $r2 = $r1.<com.mycila.inject.internal.guava.collect.Sets$CartesianSet: com.mycila.inject.internal.guava.collect.ImmutableList axes>;

        $i0 = virtualinvoke $r2.<com.mycila.inject.internal.guava.collect.ImmutableList: int size()>();

        r3 = newarray (java.lang.Object)[$i0];

        i5 = 0;

     label2:
        $i1 = lengthof r3;

        if i5 >= $i1 goto label3;

        $r5 = r0.<com.mycila.inject.internal.guava.collect.Sets$CartesianSet$1: com.mycila.inject.internal.guava.collect.Sets$CartesianSet this$0>;

        $r6 = $r5.<com.mycila.inject.internal.guava.collect.Sets$CartesianSet: com.mycila.inject.internal.guava.collect.ImmutableList axes>;

        $r7 = virtualinvoke $r6.<com.mycila.inject.internal.guava.collect.ImmutableList: java.lang.Object get(int)>(i5);

        $r8 = (com.mycila.inject.internal.guava.collect.Sets$CartesianSet$Axis) $r7;

        $i4 = r0.<com.mycila.inject.internal.guava.collect.Sets$CartesianSet$1: int index>;

        $r9 = virtualinvoke $r8.<com.mycila.inject.internal.guava.collect.Sets$CartesianSet$Axis: java.lang.Object getForIndex(int)>($i4);

        r3[i5] = $r9;

        i5 = i5 + 1;

        goto label2;

     label3:
        $i2 = r0.<com.mycila.inject.internal.guava.collect.Sets$CartesianSet$1: int index>;

        $i3 = $i2 + 1;

        r0.<com.mycila.inject.internal.guava.collect.Sets$CartesianSet$1: int index> = $i3;

        $r4 = staticinvoke <com.mycila.inject.internal.guava.collect.ImmutableList: com.mycila.inject.internal.guava.collect.ImmutableList copyOf(java.lang.Object[])>(r3);

        return $r4;
    }

    public volatile java.lang.Object next()
    {
        com.mycila.inject.internal.guava.collect.Sets$CartesianSet$1 r0;
        java.util.List $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Sets$CartesianSet$1;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.Sets$CartesianSet$1: java.util.List next()>();

        return $r1;
    }
}
