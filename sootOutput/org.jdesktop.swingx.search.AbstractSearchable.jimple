public abstract class org.jdesktop.swingx.search.AbstractSearchable extends java.lang.Object implements org.jdesktop.swingx.search.Searchable
{
    protected final org.jdesktop.swingx.search.AbstractSearchable$SearchResult lastSearchResult;
    private org.jdesktop.swingx.decorator.AbstractHighlighter matchHighlighter;
    public static final java.lang.String MATCH_HIGHLIGHTER;

    public void <init>()
    {
        org.jdesktop.swingx.search.AbstractSearchable$SearchResult $r1;
        org.jdesktop.swingx.search.AbstractSearchable r0;

        r0 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.jdesktop.swingx.search.AbstractSearchable$SearchResult;

        specialinvoke $r1.<org.jdesktop.swingx.search.AbstractSearchable$SearchResult: void <init>()>();

        r0.<org.jdesktop.swingx.search.AbstractSearchable: org.jdesktop.swingx.search.AbstractSearchable$SearchResult lastSearchResult> = $r1;

        return;
    }

    public int search(java.lang.String)
    {
        org.jdesktop.swingx.search.AbstractSearchable r0;
        int $i0, $i2;
        java.lang.String r1;

        r0 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        r1 := @parameter0: java.lang.String;

        $i2 = (int) -1;

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: int search(java.lang.String,int)>(r1, $i2);

        return $i0;
    }

    public int search(java.lang.String, int)
    {
        org.jdesktop.swingx.search.AbstractSearchable r0;
        int i0, $i1;
        java.lang.String r1;

        r0 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: int search(java.lang.String,int,boolean)>(r1, i0, 0);

        return $i1;
    }

    public int search(java.lang.String, int, boolean)
    {
        org.jdesktop.swingx.search.AbstractSearchable r0;
        int i0, $i1;
        java.lang.String r1;
        java.util.regex.Pattern r2;
        boolean $z0, z1;

        r0 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z1 := @parameter2: boolean;

        r2 = null;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: boolean isEmpty(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(r1, 0);

     label1:
        $i1 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: int search(java.util.regex.Pattern,int,boolean)>(r2, i0, z1);

        return $i1;
    }

    public int search(java.util.regex.Pattern)
    {
        org.jdesktop.swingx.search.AbstractSearchable r0;
        int $i0, $i2;
        java.util.regex.Pattern r1;

        r0 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        r1 := @parameter0: java.util.regex.Pattern;

        $i2 = (int) -1;

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: int search(java.util.regex.Pattern,int)>(r1, $i2);

        return $i0;
    }

    public int search(java.util.regex.Pattern, int)
    {
        org.jdesktop.swingx.search.AbstractSearchable r0;
        int i0, $i1;
        java.util.regex.Pattern r1;

        r0 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        r1 := @parameter0: java.util.regex.Pattern;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: int search(java.util.regex.Pattern,int,boolean)>(r1, i0, 0);

        return $i1;
    }

    public int search(java.util.regex.Pattern, int, boolean)
    {
        org.jdesktop.swingx.search.AbstractSearchable r0;
        int i0, $i1;
        java.util.regex.Pattern r1;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        r1 := @parameter0: java.util.regex.Pattern;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $i1 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: int doSearch(java.util.regex.Pattern,int,boolean)>(r1, i0, z0);

        virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: void moveMatchMarker()>();

        return $i1;
    }

    protected int doSearch(java.util.regex.Pattern, int, boolean)
    {
        org.jdesktop.swingx.search.AbstractSearchable r0;
        org.jdesktop.swingx.search.AbstractSearchable$SearchResult $r2, $r3, $r4, $r5;
        int i0, $i1, $i2, $i3, i4;
        java.util.regex.Pattern r1;
        boolean $z0, $z1, z2, $z3;

        r0 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        r1 := @parameter0: java.util.regex.Pattern;

        i0 := @parameter1: int;

        z2 := @parameter2: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: boolean isTrivialNoMatch(java.util.regex.Pattern,int)>(r1, i0);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: void updateState(org.jdesktop.swingx.search.AbstractSearchable$SearchResult)>(null);

        $r5 = r0.<org.jdesktop.swingx.search.AbstractSearchable: org.jdesktop.swingx.search.AbstractSearchable$SearchResult lastSearchResult>;

        $i3 = $r5.<org.jdesktop.swingx.search.AbstractSearchable$SearchResult: int foundRow>;

        return $i3;

     label1:
        $z1 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: boolean isEqualStartIndex(int)>(i0);

        if $z1 == 0 goto label3;

        $z3 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: boolean isEqualPattern(java.util.regex.Pattern)>(r1);

        if $z3 != 0 goto label2;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: org.jdesktop.swingx.search.AbstractSearchable$SearchResult findExtendedMatch(java.util.regex.Pattern,int)>(r1, i0);

        if $r3 == null goto label2;

        virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: void updateState(org.jdesktop.swingx.search.AbstractSearchable$SearchResult)>($r3);

        $r4 = r0.<org.jdesktop.swingx.search.AbstractSearchable: org.jdesktop.swingx.search.AbstractSearchable$SearchResult lastSearchResult>;

        $i2 = $r4.<org.jdesktop.swingx.search.AbstractSearchable$SearchResult: int foundRow>;

        return $i2;

     label2:
        i4 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: int moveStartPosition(int,boolean)>(i0, z2);

        goto label4;

     label3:
        i4 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: int adjustStartPosition(int,boolean)>(i0, z2);

     label4:
        virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: void findMatchAndUpdateState(java.util.regex.Pattern,int,boolean)>(r1, i4, z2);

        $r2 = r0.<org.jdesktop.swingx.search.AbstractSearchable: org.jdesktop.swingx.search.AbstractSearchable$SearchResult lastSearchResult>;

        $i1 = $r2.<org.jdesktop.swingx.search.AbstractSearchable$SearchResult: int foundRow>;

        return $i1;
    }

    protected abstract void findMatchAndUpdateState(java.util.regex.Pattern, int, boolean);

    protected boolean isTrivialNoMatch(java.util.regex.Pattern, int)
    {
        org.jdesktop.swingx.search.AbstractSearchable r1;
        int i0, $i1;
        java.util.regex.Pattern r0;
        boolean $z0;

        r1 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        r0 := @parameter0: java.util.regex.Pattern;

        i0 := @parameter1: int;

        if r0 == null goto label1;

        $i1 = virtualinvoke r1.<org.jdesktop.swingx.search.AbstractSearchable: int getSize()>();

        if i0 < $i1 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    protected int adjustStartPosition(int, boolean)
    {
        org.jdesktop.swingx.search.AbstractSearchable r0;
        int i0, $i1, $i2;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if i0 >= 0 goto label2;

        if z0 == 0 goto label1;

        $i1 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: int getSize()>();

        $i2 = $i1 - 1;

        return $i2;

     label1:
        return 0;

     label2:
        return i0;
    }

    protected int moveStartPosition(int, boolean)
    {
        org.jdesktop.swingx.search.AbstractSearchable r0;
        int i0, i1, $i3;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $i3 = (int) -1;

        i1 = i0 + $i3;

        goto label2;

     label1:
        i1 = i0 + 1;

     label2:
        return i1;
    }

    protected boolean isEqualPattern(java.util.regex.Pattern)
    {
        org.jdesktop.swingx.search.AbstractSearchable$SearchResult $r3;
        org.jdesktop.swingx.search.AbstractSearchable r2;
        java.util.regex.Pattern r0;
        java.lang.String $r1, $r4;
        boolean $z0;

        r2 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        r0 := @parameter0: java.util.regex.Pattern;

        $r1 = virtualinvoke r0.<java.util.regex.Pattern: java.lang.String pattern()>();

        $r3 = r2.<org.jdesktop.swingx.search.AbstractSearchable: org.jdesktop.swingx.search.AbstractSearchable$SearchResult lastSearchResult>;

        $r4 = virtualinvoke $r3.<org.jdesktop.swingx.search.AbstractSearchable$SearchResult: java.lang.String getRegEx()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        return $z0;
    }

    protected boolean isEqualStartIndex(int)
    {
        org.jdesktop.swingx.search.AbstractSearchable$SearchResult $r1;
        org.jdesktop.swingx.search.AbstractSearchable r0;
        int i0, $i1;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: boolean isValidIndex(int)>(i0);

        if $z0 == 0 goto label1;

        $r1 = r0.<org.jdesktop.swingx.search.AbstractSearchable: org.jdesktop.swingx.search.AbstractSearchable$SearchResult lastSearchResult>;

        $i1 = $r1.<org.jdesktop.swingx.search.AbstractSearchable$SearchResult: int foundRow>;

        if i0 != $i1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    protected boolean isEmpty(java.lang.String)
    {
        org.jdesktop.swingx.search.AbstractSearchable r1;
        int $i0;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    protected abstract org.jdesktop.swingx.search.AbstractSearchable$SearchResult findExtendedMatch(java.util.regex.Pattern, int);

    protected org.jdesktop.swingx.search.AbstractSearchable$SearchResult createSearchResult(java.util.regex.Matcher, int, int)
    {
        org.jdesktop.swingx.search.AbstractSearchable$SearchResult $r0;
        org.jdesktop.swingx.search.AbstractSearchable r4;
        java.util.regex.Matcher r1;
        java.util.regex.MatchResult $r3;
        int i0, i1;
        java.util.regex.Pattern $r2;

        r4 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        r1 := @parameter0: java.util.regex.Matcher;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = new org.jdesktop.swingx.search.AbstractSearchable$SearchResult;

        $r2 = virtualinvoke r1.<java.util.regex.Matcher: java.util.regex.Pattern pattern()>();

        $r3 = virtualinvoke r1.<java.util.regex.Matcher: java.util.regex.MatchResult toMatchResult()>();

        specialinvoke $r0.<org.jdesktop.swingx.search.AbstractSearchable$SearchResult: void <init>(java.util.regex.Pattern,java.util.regex.MatchResult,int,int)>($r2, $r3, i0, i1);

        return $r0;
    }

    protected boolean isValidIndex(int)
    {
        org.jdesktop.swingx.search.AbstractSearchable r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: int getSize()>();

        if i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected abstract int getSize();

    protected void updateState(org.jdesktop.swingx.search.AbstractSearchable$SearchResult)
    {
        org.jdesktop.swingx.search.AbstractSearchable$SearchResult r1, $r2;
        org.jdesktop.swingx.search.AbstractSearchable r0;

        r0 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        r1 := @parameter0: org.jdesktop.swingx.search.AbstractSearchable$SearchResult;

        $r2 = r0.<org.jdesktop.swingx.search.AbstractSearchable: org.jdesktop.swingx.search.AbstractSearchable$SearchResult lastSearchResult>;

        virtualinvoke $r2.<org.jdesktop.swingx.search.AbstractSearchable$SearchResult: void updateFrom(org.jdesktop.swingx.search.AbstractSearchable$SearchResult)>(r1);

        return;
    }

    protected abstract void moveMatchMarker();

    public abstract javax.swing.JComponent getTarget();

    protected abstract void removeHighlighter(org.jdesktop.swingx.decorator.Highlighter);

    protected abstract org.jdesktop.swingx.decorator.Highlighter[] getHighlighters();

    protected abstract void addHighlighter(org.jdesktop.swingx.decorator.Highlighter);

    protected void ensureInsertedSearchHighlighters(org.jdesktop.swingx.decorator.Highlighter)
    {
        org.jdesktop.swingx.decorator.Highlighter r1;
        org.jdesktop.swingx.search.AbstractSearchable r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        r1 := @parameter0: org.jdesktop.swingx.decorator.Highlighter;

        $z0 = specialinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: boolean isInPipeline(org.jdesktop.swingx.decorator.Highlighter)>(r1);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: void addHighlighter(org.jdesktop.swingx.decorator.Highlighter)>(r1);

     label1:
        return;
    }

    private boolean isInPipeline(org.jdesktop.swingx.decorator.Highlighter)
    {
        org.jdesktop.swingx.search.AbstractSearchable r0;
        org.jdesktop.swingx.decorator.Highlighter[] $r1;
        org.jdesktop.swingx.decorator.Highlighter r2, $r3;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        r2 := @parameter0: org.jdesktop.swingx.decorator.Highlighter;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: org.jdesktop.swingx.decorator.Highlighter[] getHighlighters()>();

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $i1 = lengthof $r1;

        $i2 = $i1 - 1;

        $r3 = $r1[$i2];

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: void removeHighlighter(org.jdesktop.swingx.decorator.Highlighter)>(r2);

        return 0;
    }

    protected int convertColumnIndexToModel(int)
    {
        int i0;
        org.jdesktop.swingx.search.AbstractSearchable r0;

        r0 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        i0 := @parameter0: int;

        return i0;
    }

    private boolean hasMatch(org.jdesktop.swingx.search.AbstractSearchable$SearchResult)
    {
        org.jdesktop.swingx.search.AbstractSearchable$SearchResult r0;
        org.jdesktop.swingx.search.AbstractSearchable r1;
        int $i0, $i1;
        boolean $z0, $z1;

        r1 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        r0 := @parameter0: org.jdesktop.swingx.search.AbstractSearchable$SearchResult;

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable$SearchResult: int getFoundRow()>();

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable$SearchResult: int getFoundColumn()>();

        if $i1 >= 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        if $z0 != 0 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    protected boolean hasMatch()
    {
        org.jdesktop.swingx.search.AbstractSearchable$SearchResult $r1;
        org.jdesktop.swingx.search.AbstractSearchable r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        $r1 = r0.<org.jdesktop.swingx.search.AbstractSearchable: org.jdesktop.swingx.search.AbstractSearchable$SearchResult lastSearchResult>;

        $z0 = specialinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: boolean hasMatch(org.jdesktop.swingx.search.AbstractSearchable$SearchResult)>($r1);

        return $z0;
    }

    protected boolean markByHighlighter()
    {
        javax.swing.JComponent $r2;
        org.jdesktop.swingx.search.AbstractSearchable r0;
        java.lang.Boolean $r1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: javax.swing.JComponent getTarget()>();

        $r3 = virtualinvoke $r2.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("match.highlighter");

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    public void setMatchHighlighter(org.jdesktop.swingx.decorator.AbstractHighlighter)
    {
        org.jdesktop.swingx.search.AbstractSearchable r0;
        org.jdesktop.swingx.decorator.AbstractHighlighter $r1, r2;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        r2 := @parameter0: org.jdesktop.swingx.decorator.AbstractHighlighter;

        $r1 = r0.<org.jdesktop.swingx.search.AbstractSearchable: org.jdesktop.swingx.decorator.AbstractHighlighter matchHighlighter>;

        virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: void removeHighlighter(org.jdesktop.swingx.decorator.Highlighter)>($r1);

        r0.<org.jdesktop.swingx.search.AbstractSearchable: org.jdesktop.swingx.decorator.AbstractHighlighter matchHighlighter> = r2;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: boolean markByHighlighter()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: void moveMatchMarker()>();

     label1:
        return;
    }

    protected org.jdesktop.swingx.decorator.AbstractHighlighter getMatchHighlighter()
    {
        org.jdesktop.swingx.search.AbstractSearchable r0;
        org.jdesktop.swingx.decorator.AbstractHighlighter $r1, $r2, $r3;

        r0 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        $r1 = r0.<org.jdesktop.swingx.search.AbstractSearchable: org.jdesktop.swingx.decorator.AbstractHighlighter matchHighlighter>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: org.jdesktop.swingx.decorator.AbstractHighlighter createMatchHighlighter()>();

        r0.<org.jdesktop.swingx.search.AbstractSearchable: org.jdesktop.swingx.decorator.AbstractHighlighter matchHighlighter> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.search.AbstractSearchable: org.jdesktop.swingx.decorator.AbstractHighlighter matchHighlighter>;

        return $r2;
    }

    protected org.jdesktop.swingx.decorator.AbstractHighlighter createMatchHighlighter()
    {
        java.awt.Color $r1, $r3, $r4, $r5;
        org.jdesktop.swingx.search.AbstractSearchable r6;
        org.jdesktop.swingx.decorator.HighlightPredicate $r2;
        org.jdesktop.swingx.decorator.ColorHighlighter $r0;

        r6 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        $r0 = new org.jdesktop.swingx.decorator.ColorHighlighter;

        $r2 = <org.jdesktop.swingx.decorator.HighlightPredicate: org.jdesktop.swingx.decorator.HighlightPredicate NEVER>;

        $r1 = <java.awt.Color: java.awt.Color YELLOW>;

        $r3 = virtualinvoke $r1.<java.awt.Color: java.awt.Color brighter()>();

        $r4 = <java.awt.Color: java.awt.Color YELLOW>;

        $r5 = virtualinvoke $r4.<java.awt.Color: java.awt.Color brighter()>();

        specialinvoke $r0.<org.jdesktop.swingx.decorator.ColorHighlighter: void <init>(org.jdesktop.swingx.decorator.HighlightPredicate,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color)>($r2, $r3, null, $r5, null);

        return $r0;
    }

    protected org.jdesktop.swingx.decorator.AbstractHighlighter getConfiguredMatchHighlighter()
    {
        org.jdesktop.swingx.search.AbstractSearchable r0;
        org.jdesktop.swingx.decorator.HighlightPredicate $r2;
        org.jdesktop.swingx.decorator.AbstractHighlighter $r1;

        r0 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: org.jdesktop.swingx.decorator.AbstractHighlighter getMatchHighlighter()>();

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: org.jdesktop.swingx.decorator.HighlightPredicate createMatchPredicate()>();

        virtualinvoke $r1.<org.jdesktop.swingx.decorator.AbstractHighlighter: void setHighlightPredicate(org.jdesktop.swingx.decorator.HighlightPredicate)>($r2);

        return $r1;
    }

    protected org.jdesktop.swingx.decorator.HighlightPredicate createMatchPredicate()
    {
        org.jdesktop.swingx.search.AbstractSearchable r0;
        org.jdesktop.swingx.decorator.HighlightPredicate $r5;
        org.jdesktop.swingx.search.AbstractSearchable$SearchResult $r1, $r2, $r3;
        org.jdesktop.swingx.decorator.SearchPredicate $r6;
        int $i0, $i1, $i2;
        java.util.regex.Pattern $r4;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.search.AbstractSearchable;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: boolean hasMatch()>();

        if $z0 == 0 goto label1;

        $r6 = new org.jdesktop.swingx.decorator.SearchPredicate;

        $r5 = $r6;

        $r1 = r0.<org.jdesktop.swingx.search.AbstractSearchable: org.jdesktop.swingx.search.AbstractSearchable$SearchResult lastSearchResult>;

        $r4 = $r1.<org.jdesktop.swingx.search.AbstractSearchable$SearchResult: java.util.regex.Pattern pattern>;

        $r2 = r0.<org.jdesktop.swingx.search.AbstractSearchable: org.jdesktop.swingx.search.AbstractSearchable$SearchResult lastSearchResult>;

        $i1 = $r2.<org.jdesktop.swingx.search.AbstractSearchable$SearchResult: int foundRow>;

        $r3 = r0.<org.jdesktop.swingx.search.AbstractSearchable: org.jdesktop.swingx.search.AbstractSearchable$SearchResult lastSearchResult>;

        $i0 = $r3.<org.jdesktop.swingx.search.AbstractSearchable$SearchResult: int foundColumn>;

        $i2 = virtualinvoke r0.<org.jdesktop.swingx.search.AbstractSearchable: int convertColumnIndexToModel(int)>($i0);

        specialinvoke $r6.<org.jdesktop.swingx.decorator.SearchPredicate: void <init>(java.util.regex.Pattern,int,int)>($r4, $i1, $i2);

        goto label2;

     label1:
        $r5 = <org.jdesktop.swingx.decorator.HighlightPredicate: org.jdesktop.swingx.decorator.HighlightPredicate NEVER>;

     label2:
        return $r5;
    }

    public static void <clinit>()
    {
        <org.jdesktop.swingx.search.AbstractSearchable: java.lang.String MATCH_HIGHLIGHTER> = "match.highlighter";

        return;
    }
}
