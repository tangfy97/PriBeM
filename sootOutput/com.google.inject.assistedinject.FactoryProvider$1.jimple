class com.google.inject.assistedinject.FactoryProvider$1 extends java.lang.Object implements java.lang.reflect.InvocationHandler
{
    final com.google.inject.assistedinject.FactoryProvider this$0;

    void <init>(com.google.inject.assistedinject.FactoryProvider)
    {
        com.google.inject.assistedinject.FactoryProvider$1 r0;
        com.google.inject.assistedinject.FactoryProvider r1;

        r0 := @this: com.google.inject.assistedinject.FactoryProvider$1;

        r1 := @parameter0: com.google.inject.assistedinject.FactoryProvider;

        r0.<com.google.inject.assistedinject.FactoryProvider$1: com.google.inject.assistedinject.FactoryProvider this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable
    {
        java.lang.Object[] r7, $r8;
        com.google.inject.assistedinject.FactoryProvider $r3, $r10;
        com.google.inject.assistedinject.AssistedConstructor r6;
        com.google.inject.Injector $r11;
        java.util.Map $r4;
        com.google.inject.assistedinject.FactoryProvider$1 r2;
        java.lang.Class $r1;
        java.lang.Object $r5, $r9, $r12, r13;
        java.lang.reflect.Method r0;
        boolean $z0;

        r2 := @this: com.google.inject.assistedinject.FactoryProvider$1;

        r13 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.reflect.Method;

        r7 := @parameter2: java.lang.Object[];

        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/Object;");

        if $z0 == 0 goto label1;

        $r12 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, r7);

        return $r12;

     label1:
        $r3 = r2.<com.google.inject.assistedinject.FactoryProvider$1: com.google.inject.assistedinject.FactoryProvider this$0>;

        $r4 = staticinvoke <com.google.inject.assistedinject.FactoryProvider: java.util.Map access$000(com.google.inject.assistedinject.FactoryProvider)>($r3);

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r6 = (com.google.inject.assistedinject.AssistedConstructor) $r5;

        $r8 = virtualinvoke r2.<com.google.inject.assistedinject.FactoryProvider$1: java.lang.Object[] gatherArgsForConstructor(com.google.inject.assistedinject.AssistedConstructor,java.lang.Object[])>(r6, r7);

        $r9 = virtualinvoke r6.<com.google.inject.assistedinject.AssistedConstructor: java.lang.Object newInstance(java.lang.Object[])>($r8);

        $r10 = r2.<com.google.inject.assistedinject.FactoryProvider$1: com.google.inject.assistedinject.FactoryProvider this$0>;

        $r11 = staticinvoke <com.google.inject.assistedinject.FactoryProvider: com.google.inject.Injector access$100(com.google.inject.assistedinject.FactoryProvider)>($r10);

        interfaceinvoke $r11.<com.google.inject.Injector: void injectMembers(java.lang.Object)>($r9);

        return $r9;
    }

    public java.lang.Object[] gatherArgsForConstructor(com.google.inject.assistedinject.AssistedConstructor, java.lang.Object[])
    {
        java.lang.Object[] r2, r10;
        com.google.inject.assistedinject.FactoryProvider $r7;
        int $i0, i1, i2;
        boolean $z0;
        com.google.inject.assistedinject.Parameter r5;
        com.google.inject.assistedinject.AssistedConstructor r0;
        com.google.inject.Injector $r8;
        java.util.List $r1, $r3;
        com.google.inject.assistedinject.FactoryProvider$1 r6;
        java.lang.Object $r4, $r9, $r11;

        r6 := @this: com.google.inject.assistedinject.FactoryProvider$1;

        r0 := @parameter0: com.google.inject.assistedinject.AssistedConstructor;

        r10 := @parameter1: java.lang.Object[];

        $r1 = virtualinvoke r0.<com.google.inject.assistedinject.AssistedConstructor: java.util.List getAllParameters()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        i1 = 0;

        r2 = newarray (java.lang.Object)[$i0];

        i2 = 0;

     label1:
        if i2 >= $i0 goto label4;

        $r3 = virtualinvoke r0.<com.google.inject.assistedinject.AssistedConstructor: java.util.List getAllParameters()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i2);

        r5 = (com.google.inject.assistedinject.Parameter) $r4;

        $z0 = virtualinvoke r5.<com.google.inject.assistedinject.Parameter: boolean isProvidedByFactory()>();

        if $z0 == 0 goto label2;

        $r11 = r10[i1];

        r2[i2] = $r11;

        i1 = i1 + 1;

        goto label3;

     label2:
        $r7 = r6.<com.google.inject.assistedinject.FactoryProvider$1: com.google.inject.assistedinject.FactoryProvider this$0>;

        $r8 = staticinvoke <com.google.inject.assistedinject.FactoryProvider: com.google.inject.Injector access$100(com.google.inject.assistedinject.FactoryProvider)>($r7);

        $r9 = virtualinvoke r5.<com.google.inject.assistedinject.Parameter: java.lang.Object getValue(com.google.inject.Injector)>($r8);

        r2[i2] = $r9;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return r2;
    }
}
