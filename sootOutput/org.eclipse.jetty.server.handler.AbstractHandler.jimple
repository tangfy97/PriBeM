public abstract class org.eclipse.jetty.server.handler.AbstractHandler extends org.eclipse.jetty.util.component.AggregateLifeCycle implements org.eclipse.jetty.server.Handler
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    private org.eclipse.jetty.server.Server _server;

    public void <init>()
    {
        org.eclipse.jetty.server.handler.AbstractHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.AbstractHandler;

        specialinvoke r0.<org.eclipse.jetty.util.component.AggregateLifeCycle: void <init>()>();

        return;
    }

    protected void doStart() throws java.lang.Exception
    {
        java.lang.Object[] $r0;
        org.eclipse.jetty.util.log.Logger $r2;
        org.eclipse.jetty.server.handler.AbstractHandler r1;

        r1 := @this: org.eclipse.jetty.server.handler.AbstractHandler;

        $r2 = <org.eclipse.jetty.server.handler.AbstractHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r0 = newarray (java.lang.Object)[1];

        $r0[0] = r1;

        interfaceinvoke $r2.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("starting {}", $r0);

        specialinvoke r1.<org.eclipse.jetty.util.component.AggregateLifeCycle: void doStart()>();

        return;
    }

    protected void doStop() throws java.lang.Exception
    {
        java.lang.Object[] $r0;
        org.eclipse.jetty.util.log.Logger $r2;
        org.eclipse.jetty.server.handler.AbstractHandler r1;

        r1 := @this: org.eclipse.jetty.server.handler.AbstractHandler;

        $r2 = <org.eclipse.jetty.server.handler.AbstractHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r0 = newarray (java.lang.Object)[1];

        $r0[0] = r1;

        interfaceinvoke $r2.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("stopping {}", $r0);

        specialinvoke r1.<org.eclipse.jetty.util.component.AggregateLifeCycle: void doStop()>();

        return;
    }

    public void setServer(org.eclipse.jetty.server.Server)
    {
        org.eclipse.jetty.server.handler.AbstractHandler r0;
        org.eclipse.jetty.util.component.Container $r5, $r6;
        org.eclipse.jetty.server.Server r1, r2, $r3, $r4, $r7;

        r0 := @this: org.eclipse.jetty.server.handler.AbstractHandler;

        r2 := @parameter0: org.eclipse.jetty.server.Server;

        r1 = r0.<org.eclipse.jetty.server.handler.AbstractHandler: org.eclipse.jetty.server.Server _server>;

        if r1 == null goto label1;

        if r1 == r2 goto label1;

        $r6 = virtualinvoke r1.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        virtualinvoke $r6.<org.eclipse.jetty.util.component.Container: void removeBean(java.lang.Object)>(r0);

     label1:
        r0.<org.eclipse.jetty.server.handler.AbstractHandler: org.eclipse.jetty.server.Server _server> = r2;

        $r7 = r0.<org.eclipse.jetty.server.handler.AbstractHandler: org.eclipse.jetty.server.Server _server>;

        if $r7 == null goto label2;

        $r3 = r0.<org.eclipse.jetty.server.handler.AbstractHandler: org.eclipse.jetty.server.Server _server>;

        if $r3 == r1 goto label2;

        $r4 = r0.<org.eclipse.jetty.server.handler.AbstractHandler: org.eclipse.jetty.server.Server _server>;

        $r5 = virtualinvoke $r4.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        virtualinvoke $r5.<org.eclipse.jetty.util.component.Container: void addBean(java.lang.Object)>(r0);

     label2:
        return;
    }

    public org.eclipse.jetty.server.Server getServer()
    {
        org.eclipse.jetty.server.Server $r1;
        org.eclipse.jetty.server.handler.AbstractHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.AbstractHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.AbstractHandler: org.eclipse.jetty.server.Server _server>;

        return $r1;
    }

    public void destroy()
    {
        org.eclipse.jetty.util.component.Container $r3;
        java.lang.IllegalStateException $r4;
        org.eclipse.jetty.server.handler.AbstractHandler r0;
        org.eclipse.jetty.server.Server $r1, $r2;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.handler.AbstractHandler;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.server.handler.AbstractHandler: boolean isStopped()>();

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("!STOPPED");

        throw $r4;

     label1:
        specialinvoke r0.<org.eclipse.jetty.util.component.AggregateLifeCycle: void destroy()>();

        $r1 = r0.<org.eclipse.jetty.server.handler.AbstractHandler: org.eclipse.jetty.server.Server _server>;

        if $r1 == null goto label2;

        $r2 = r0.<org.eclipse.jetty.server.handler.AbstractHandler: org.eclipse.jetty.server.Server _server>;

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        virtualinvoke $r3.<org.eclipse.jetty.util.component.Container: void removeBean(java.lang.Object)>(r0);

     label2:
        return;
    }

    public void dumpThis(java.lang.Appendable) throws java.io.IOException
    {
        java.lang.Appendable r0, $r3, $r4, $r6;
        org.eclipse.jetty.server.handler.AbstractHandler r1;
        java.lang.String $r2, $r5;

        r1 := @this: org.eclipse.jetty.server.handler.AbstractHandler;

        r0 := @parameter0: java.lang.Appendable;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r2);

        $r4 = interfaceinvoke $r3.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(" - ");

        $r5 = virtualinvoke r1.<org.eclipse.jetty.server.handler.AbstractHandler: java.lang.String getState()>();

        $r6 = interfaceinvoke $r4.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r5);

        interfaceinvoke $r6.<java.lang.Appendable: java.lang.Appendable append(char)>(10);

        return;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/server/handler/AbstractHandler;");

        <org.eclipse.jetty.server.handler.AbstractHandler: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
