class com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries$1 extends com.mycila.inject.internal.guava.collect.ForwardingIterator
{
    final java.util.Iterator val$iterator;
    final com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries this$0;

    void <init>(com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries, java.util.Iterator)
    {
        com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries r1;
        com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries$1 r0;
        java.util.Iterator r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries;

        r2 := @parameter1: java.util.Iterator;

        r0.<com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries$1: com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries this$0> = r1;

        r0.<com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries$1: java.util.Iterator val$iterator> = r2;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingIterator: void <init>()>();

        return;
    }

    public java.util.Map$Entry next()
    {
        com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries$1 r0;
        java.util.Map$Entry $r5, $r6;
        java.util.Iterator $r1;
        com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries $r3;
        java.lang.Object $r2;
        com.mycila.inject.internal.guava.collect.MapConstraint $r4;

        r0 := @this: com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries$1;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries$1: java.util.Iterator val$iterator>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r2;

        $r3 = r0.<com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries$1: com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries this$0>;

        $r4 = $r3.<com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries: com.mycila.inject.internal.guava.collect.MapConstraint constraint>;

        $r6 = staticinvoke <com.mycila.inject.internal.guava.collect.MapConstraints: java.util.Map$Entry access$500(java.util.Map$Entry,com.mycila.inject.internal.guava.collect.MapConstraint)>($r5, $r4);

        return $r6;
    }

    protected java.util.Iterator delegate()
    {
        com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries$1 r0;
        java.util.Iterator $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries$1;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries$1: java.util.Iterator val$iterator>;

        return $r1;
    }

    public volatile java.lang.Object next()
    {
        com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries$1 r0;
        java.util.Map$Entry $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries$1;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries$1: java.util.Map$Entry next()>();

        return $r1;
    }

    protected volatile java.lang.Object delegate()
    {
        com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries$1 r0;
        java.util.Iterator $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries$1;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.MapConstraints$ConstrainedEntries$1: java.util.Iterator delegate()>();

        return $r1;
    }
}
