public class com.hp.hpl.jena.sparql.function.library.eval extends java.lang.Object implements com.hp.hpl.jena.sparql.function.Function
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.function.library.eval r0;

        r0 := @this: com.hp.hpl.jena.sparql.function.library.eval;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void build(java.lang.String, com.hp.hpl.jena.sparql.expr.ExprList)
    {
        com.hp.hpl.jena.sparql.function.library.eval r2;
        com.hp.hpl.jena.sparql.expr.ExprList r0;
        int $i0;
        com.hp.hpl.jena.query.QueryBuildException $r1;
        java.lang.String r3;

        r2 := @this: com.hp.hpl.jena.sparql.function.library.eval;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: com.hp.hpl.jena.sparql.expr.ExprList;

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprList: int size()>();

        if $i0 == 1 goto label1;

        $r1 = new com.hp.hpl.jena.query.QueryBuildException;

        specialinvoke $r1.<com.hp.hpl.jena.query.QueryBuildException: void <init>(java.lang.String)>("\'eval\' takes one argument");

        throw $r1;

     label1:
        return;
    }

    public com.hp.hpl.jena.sparql.expr.NodeValue exec(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.expr.ExprList, java.lang.String, com.hp.hpl.jena.sparql.function.FunctionEnv)
    {
        com.hp.hpl.jena.sparql.expr.NodeValue $r4, $r8;
        com.hp.hpl.jena.sparql.engine.binding.Binding r2;
        com.hp.hpl.jena.sparql.function.library.eval r9;
        com.hp.hpl.jena.sparql.ARQInternalErrorException $r5, $r6;
        com.hp.hpl.jena.sparql.expr.Expr $r1;
        com.hp.hpl.jena.sparql.expr.ExprList r0;
        com.hp.hpl.jena.sparql.expr.ExprEvalException $r7;
        int $i0;
        java.lang.String r10;
        com.hp.hpl.jena.sparql.function.FunctionEnv r3;

        r9 := @this: com.hp.hpl.jena.sparql.function.library.eval;

        r2 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r0 := @parameter1: com.hp.hpl.jena.sparql.expr.ExprList;

        r10 := @parameter2: java.lang.String;

        r3 := @parameter3: com.hp.hpl.jena.sparql.function.FunctionEnv;

        if r0 != null goto label1;

        $r6 = new com.hp.hpl.jena.sparql.ARQInternalErrorException;

        specialinvoke $r6.<com.hp.hpl.jena.sparql.ARQInternalErrorException: void <init>(java.lang.String)>("function eval: Null args list");

        throw $r6;

     label1:
        $i0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprList: int size()>();

        if $i0 == 1 goto label2;

        $r5 = new com.hp.hpl.jena.sparql.ARQInternalErrorException;

        specialinvoke $r5.<com.hp.hpl.jena.sparql.ARQInternalErrorException: void <init>(java.lang.String)>("function eval: Arg list not of size 1");

        throw $r5;

     label2:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprList: com.hp.hpl.jena.sparql.expr.Expr get(int)>(0);

     label3:
        $r4 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.expr.Expr: com.hp.hpl.jena.sparql.expr.NodeValue eval(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.function.FunctionEnv)>(r2, r3);

     label4:
        return $r4;

     label5:
        $r7 := @caughtexception;

        $r8 = <com.hp.hpl.jena.sparql.expr.NodeValue: com.hp.hpl.jena.sparql.expr.NodeValue FALSE>;

        return $r8;

        catch com.hp.hpl.jena.sparql.expr.ExprEvalException from label3 to label4 with label5;
    }
}
