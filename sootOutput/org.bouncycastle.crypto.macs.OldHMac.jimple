public class org.bouncycastle.crypto.macs.OldHMac extends java.lang.Object implements org.bouncycastle.crypto.Mac
{
    private static final int BLOCK_LENGTH;
    private static final byte IPAD;
    private static final byte OPAD;
    private org.bouncycastle.crypto.Digest digest;
    private int digestSize;
    private byte[] inputPad;
    private byte[] outputPad;

    public void <init>(org.bouncycastle.crypto.Digest)
    {
        byte[] $r1, $r2;
        int $i0;
        org.bouncycastle.crypto.Digest r3;
        org.bouncycastle.crypto.macs.OldHMac r0;

        r0 := @this: org.bouncycastle.crypto.macs.OldHMac;

        r3 := @parameter0: org.bouncycastle.crypto.Digest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[64];

        r0.<org.bouncycastle.crypto.macs.OldHMac: byte[] inputPad> = $r1;

        $r2 = newarray (byte)[64];

        r0.<org.bouncycastle.crypto.macs.OldHMac: byte[] outputPad> = $r2;

        r0.<org.bouncycastle.crypto.macs.OldHMac: org.bouncycastle.crypto.Digest digest> = r3;

        $i0 = interfaceinvoke r3.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        r0.<org.bouncycastle.crypto.macs.OldHMac: int digestSize> = $i0;

        return;
    }

    public java.lang.String getAlgorithmName()
    {
        java.lang.StringBuilder $r0, $r4, $r5;
        org.bouncycastle.crypto.Digest $r2;
        java.lang.String $r3, $r6;
        org.bouncycastle.crypto.macs.OldHMac r1;

        r1 := @this: org.bouncycastle.crypto.macs.OldHMac;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.bouncycastle.crypto.macs.OldHMac: org.bouncycastle.crypto.Digest digest>;

        $r3 = interfaceinvoke $r2.<org.bouncycastle.crypto.Digest: java.lang.String getAlgorithmName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/HMAC");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public org.bouncycastle.crypto.Digest getUnderlyingDigest()
    {
        org.bouncycastle.crypto.Digest $r1;
        org.bouncycastle.crypto.macs.OldHMac r0;

        r0 := @this: org.bouncycastle.crypto.macs.OldHMac;

        $r1 = r0.<org.bouncycastle.crypto.macs.OldHMac: org.bouncycastle.crypto.Digest digest>;

        return $r1;
    }

    public void init(org.bouncycastle.crypto.CipherParameters)
    {
        byte[] $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r20, $r22, $r23, $r24;
        byte $b7, $b8, $b9, $b10, $b11, $b12;
        org.bouncycastle.crypto.macs.OldHMac r0;
        org.bouncycastle.crypto.CipherParameters r2;
        org.bouncycastle.crypto.Digest $r1, $r15, $r19, $r21;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i13, $i14, i15, i16, i17, $i18, i19;
        org.bouncycastle.crypto.params.KeyParameter $r3;

        r0 := @this: org.bouncycastle.crypto.macs.OldHMac;

        r2 := @parameter0: org.bouncycastle.crypto.CipherParameters;

        $r1 = r0.<org.bouncycastle.crypto.macs.OldHMac: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r1.<org.bouncycastle.crypto.Digest: void reset()>();

        $r3 = (org.bouncycastle.crypto.params.KeyParameter) r2;

        $r4 = virtualinvoke $r3.<org.bouncycastle.crypto.params.KeyParameter: byte[] getKey()>();

        $i0 = lengthof $r4;

        if $i0 <= 64 goto label3;

        $r19 = r0.<org.bouncycastle.crypto.macs.OldHMac: org.bouncycastle.crypto.Digest digest>;

        $i13 = lengthof $r4;

        interfaceinvoke $r19.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>($r4, 0, $i13);

        $r21 = r0.<org.bouncycastle.crypto.macs.OldHMac: org.bouncycastle.crypto.Digest digest>;

        $r20 = r0.<org.bouncycastle.crypto.macs.OldHMac: byte[] inputPad>;

        interfaceinvoke $r21.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>($r20, 0);

        i15 = r0.<org.bouncycastle.crypto.macs.OldHMac: int digestSize>;

     label1:
        $r22 = r0.<org.bouncycastle.crypto.macs.OldHMac: byte[] inputPad>;

        $i14 = lengthof $r22;

        if i15 >= $i14 goto label2;

        $r23 = r0.<org.bouncycastle.crypto.macs.OldHMac: byte[] inputPad>;

        $r23[i15] = 0;

        i15 = i15 + 1;

        goto label1;

     label2:
        goto label5;

     label3:
        $r5 = r0.<org.bouncycastle.crypto.macs.OldHMac: byte[] inputPad>;

        $i1 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r5, 0, $i1);

        i16 = lengthof $r4;

     label4:
        $r6 = r0.<org.bouncycastle.crypto.macs.OldHMac: byte[] inputPad>;

        $i2 = lengthof $r6;

        if i16 >= $i2 goto label5;

        $r18 = r0.<org.bouncycastle.crypto.macs.OldHMac: byte[] inputPad>;

        $r18[i16] = 0;

        i16 = i16 + 1;

        goto label4;

     label5:
        $r7 = r0.<org.bouncycastle.crypto.macs.OldHMac: byte[] inputPad>;

        $i3 = lengthof $r7;

        $r8 = newarray (byte)[$i3];

        r0.<org.bouncycastle.crypto.macs.OldHMac: byte[] outputPad> = $r8;

        $r11 = r0.<org.bouncycastle.crypto.macs.OldHMac: byte[] inputPad>;

        $r10 = r0.<org.bouncycastle.crypto.macs.OldHMac: byte[] outputPad>;

        $r9 = r0.<org.bouncycastle.crypto.macs.OldHMac: byte[] inputPad>;

        $i4 = lengthof $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, $r10, 0, $i4);

        i17 = 0;

     label6:
        $r24 = r0.<org.bouncycastle.crypto.macs.OldHMac: byte[] inputPad>;

        $i18 = lengthof $r24;

        if i17 >= $i18 goto label7;

        $r17 = r0.<org.bouncycastle.crypto.macs.OldHMac: byte[] inputPad>;

        $b10 = $r17[i17];

        $b11 = $b10 ^ 54;

        $b12 = (byte) $b11;

        $r17[i17] = $b12;

        i17 = i17 + 1;

        goto label6;

     label7:
        i19 = 0;

     label8:
        $r12 = r0.<org.bouncycastle.crypto.macs.OldHMac: byte[] outputPad>;

        $i5 = lengthof $r12;

        if i19 >= $i5 goto label9;

        $r16 = r0.<org.bouncycastle.crypto.macs.OldHMac: byte[] outputPad>;

        $b7 = $r16[i19];

        $b8 = $b7 ^ 92;

        $b9 = (byte) $b8;

        $r16[i19] = $b9;

        i19 = i19 + 1;

        goto label8;

     label9:
        $r15 = r0.<org.bouncycastle.crypto.macs.OldHMac: org.bouncycastle.crypto.Digest digest>;

        $r14 = r0.<org.bouncycastle.crypto.macs.OldHMac: byte[] inputPad>;

        $r13 = r0.<org.bouncycastle.crypto.macs.OldHMac: byte[] inputPad>;

        $i6 = lengthof $r13;

        interfaceinvoke $r15.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>($r14, 0, $i6);

        return;
    }

    public int getMacSize()
    {
        int $i0;
        org.bouncycastle.crypto.macs.OldHMac r0;

        r0 := @this: org.bouncycastle.crypto.macs.OldHMac;

        $i0 = r0.<org.bouncycastle.crypto.macs.OldHMac: int digestSize>;

        return $i0;
    }

    public void update(byte)
    {
        org.bouncycastle.crypto.Digest $r1;
        byte b0;
        org.bouncycastle.crypto.macs.OldHMac r0;

        r0 := @this: org.bouncycastle.crypto.macs.OldHMac;

        b0 := @parameter0: byte;

        $r1 = r0.<org.bouncycastle.crypto.macs.OldHMac: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r1.<org.bouncycastle.crypto.Digest: void update(byte)>(b0);

        return;
    }

    public void update(byte[], int, int)
    {
        byte[] r1;
        int i0, i1;
        org.bouncycastle.crypto.Digest $r2;
        org.bouncycastle.crypto.macs.OldHMac r0;

        r0 := @this: org.bouncycastle.crypto.macs.OldHMac;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.bouncycastle.crypto.macs.OldHMac: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r2.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public int doFinal(byte[], int)
    {
        byte[] r1, $r3, $r4, r7;
        org.bouncycastle.crypto.Digest $r2, $r5, $r6, $r8;
        int $i0, $i1, $i2, i3, $i4;
        org.bouncycastle.crypto.macs.OldHMac r0;

        r0 := @this: org.bouncycastle.crypto.macs.OldHMac;

        r7 := @parameter0: byte[];

        i3 := @parameter1: int;

        $i0 = r0.<org.bouncycastle.crypto.macs.OldHMac: int digestSize>;

        r1 = newarray (byte)[$i0];

        $r2 = r0.<org.bouncycastle.crypto.macs.OldHMac: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r2.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>(r1, 0);

        $r5 = r0.<org.bouncycastle.crypto.macs.OldHMac: org.bouncycastle.crypto.Digest digest>;

        $r4 = r0.<org.bouncycastle.crypto.macs.OldHMac: byte[] outputPad>;

        $r3 = r0.<org.bouncycastle.crypto.macs.OldHMac: byte[] outputPad>;

        $i1 = lengthof $r3;

        interfaceinvoke $r5.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>($r4, 0, $i1);

        $r6 = r0.<org.bouncycastle.crypto.macs.OldHMac: org.bouncycastle.crypto.Digest digest>;

        $i2 = lengthof r1;

        interfaceinvoke $r6.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r1, 0, $i2);

        $r8 = r0.<org.bouncycastle.crypto.macs.OldHMac: org.bouncycastle.crypto.Digest digest>;

        $i4 = interfaceinvoke $r8.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>(r7, i3);

        virtualinvoke r0.<org.bouncycastle.crypto.macs.OldHMac: void reset()>();

        return $i4;
    }

    public void reset()
    {
        byte[] $r2, $r3;
        int $i0;
        org.bouncycastle.crypto.Digest $r1, $r4;
        org.bouncycastle.crypto.macs.OldHMac r0;

        r0 := @this: org.bouncycastle.crypto.macs.OldHMac;

        $r1 = r0.<org.bouncycastle.crypto.macs.OldHMac: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r1.<org.bouncycastle.crypto.Digest: void reset()>();

        $r4 = r0.<org.bouncycastle.crypto.macs.OldHMac: org.bouncycastle.crypto.Digest digest>;

        $r3 = r0.<org.bouncycastle.crypto.macs.OldHMac: byte[] inputPad>;

        $r2 = r0.<org.bouncycastle.crypto.macs.OldHMac: byte[] inputPad>;

        $i0 = lengthof $r2;

        interfaceinvoke $r4.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>($r3, 0, $i0);

        return;
    }

    public static void <clinit>()
    {
        <org.bouncycastle.crypto.macs.OldHMac: byte OPAD> = 92;

        <org.bouncycastle.crypto.macs.OldHMac: byte IPAD> = 54;

        <org.bouncycastle.crypto.macs.OldHMac: int BLOCK_LENGTH> = 64;

        return;
    }
}
