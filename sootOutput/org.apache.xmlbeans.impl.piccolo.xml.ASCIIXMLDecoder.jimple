public final class org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder extends java.lang.Object implements org.apache.xmlbeans.impl.piccolo.xml.XMLDecoder
{
    private boolean sawCR;

    public void <init>()
    {
        org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder: boolean sawCR> = 0;

        return;
    }

    public org.apache.xmlbeans.impl.piccolo.io.CharsetDecoder newCharsetDecoder()
    {
        org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder r0;
        org.apache.xmlbeans.impl.piccolo.xml.XMLDecoder $r1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder: org.apache.xmlbeans.impl.piccolo.xml.XMLDecoder newXMLDecoder()>();

        return $r1;
    }

    public org.apache.xmlbeans.impl.piccolo.xml.XMLDecoder newXMLDecoder()
    {
        org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder $r0, r1;

        r1 := @this: org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder;

        $r0 = new org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder;

        specialinvoke $r0.<org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder: void <init>()>();

        return $r0;
    }

    public int minBytesPerChar()
    {
        org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder;

        return 1;
    }

    public int maxBytesPerChar()
    {
        org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder;

        return 1;
    }

    public void reset()
    {
        org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder: boolean sawCR> = 0;

        return;
    }

    public void decode(byte[], int, int, char[], int, int, int[]) throws java.io.CharConversionException
    {
        byte[] r1;
        int[] r3;
        int i0, i1, i2, i3;
        char[] r2;
        org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: char[];

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        r3 := @parameter6: int[];

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder: void internalDecode(byte[],int,int,char[],int,int,int[],boolean)>(r1, i0, i1, r2, i2, i3, r3, 0);

        return;
    }

    public void decodeXMLDecl(byte[], int, int, char[], int, int, int[]) throws java.io.CharConversionException
    {
        byte[] r1;
        int[] r3;
        int i0, i1, i2, i3;
        char[] r2;
        org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: char[];

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        r3 := @parameter6: int[];

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder: void internalDecode(byte[],int,int,char[],int,int,int[],boolean)>(r1, i0, i1, r2, i2, i3, r3, 1);

        return;
    }

    private void internalDecode(byte[], int, int, char[], int, int, int[], boolean) throws java.io.CharConversionException
    {
        byte[] r1;
        byte $b4, $b5;
        int[] r0;
        boolean $z0, z1;
        java.lang.StringBuffer $r6, $r8, $r10;
        int i0, i1, i2, $i3, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, $i18, $i19, $i20;
        org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder r2;
        java.lang.String $r7, $r9;
        char c6;
        org.apache.xmlbeans.impl.piccolo.io.IllegalCharException $r11;
        char[] r3;

        r2 := @this: org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder;

        r1 := @parameter0: byte[];

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        r3 := @parameter3: char[];

        i7 := @parameter4: int;

        i1 := @parameter5: int;

        r0 := @parameter6: int[];

        z1 := @parameter7: boolean;

        i16 = 0;

        i17 = 0;

     label01:
        if i17 >= i0 goto label10;

        if i16 >= i1 goto label10;

        $i3 = i2 + i17;

        $b4 = r1[$i3];

        $b5 = 127 & $b4;

        c6 = (char) $b5;

        $i18 = (int) c6;

        if $i18 < 32 goto label02;

        r2.<org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder: boolean sawCR> = 0;

        $i14 = i16;

        i16 = i16 + 1;

        $i15 = i7 + $i14;

        r3[$i15] = c6;

        goto label09;

     label02:
        $i19 = (int) c6;

        tableswitch($i19)
        {
            case 9: goto label06;
            case 10: goto label03;
            case 11: goto label07;
            case 12: goto label07;
            case 13: goto label05;
            default: goto label07;
        };

     label03:
        $z0 = r2.<org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder: boolean sawCR>;

        if $z0 == 0 goto label04;

        r2.<org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder: boolean sawCR> = 0;

        goto label09;

     label04:
        $i10 = i16;

        i16 = i16 + 1;

        $i11 = i7 + $i10;

        r3[$i11] = 10;

        goto label09;

     label05:
        r2.<org.apache.xmlbeans.impl.piccolo.xml.ASCIIXMLDecoder: boolean sawCR> = 1;

        $i8 = i16;

        i16 = i16 + 1;

        $i9 = i7 + $i8;

        r3[$i9] = 10;

        goto label09;

     label06:
        $i12 = i16;

        i16 = i16 + 1;

        $i13 = i7 + $i12;

        r3[$i13] = 9;

        goto label09;

     label07:
        if z1 == 0 goto label08;

        goto label10;

     label08:
        $r11 = new org.apache.xmlbeans.impl.piccolo.io.IllegalCharException;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal XML character: 0x");

        $i20 = (int) c6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i20);

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r11.<org.apache.xmlbeans.impl.piccolo.io.IllegalCharException: void <init>(java.lang.String)>($r9);

        throw $r11;

     label09:
        i17 = i17 + 1;

        goto label01;

     label10:
        r0[0] = i17;

        r0[1] = i16;

        return;
    }
}
