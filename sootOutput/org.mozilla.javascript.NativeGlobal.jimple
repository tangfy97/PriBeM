public class org.mozilla.javascript.NativeGlobal extends java.lang.Object implements java.io.Serializable, org.mozilla.javascript.IdFunctionCall
{
    static final long serialVersionUID;
    private static final java.lang.String URI_DECODE_RESERVED;
    private static final java.lang.Object FTAG;
    private static final int Id_decodeURI;
    private static final int Id_decodeURIComponent;
    private static final int Id_encodeURI;
    private static final int Id_encodeURIComponent;
    private static final int Id_escape;
    private static final int Id_eval;
    private static final int Id_isFinite;
    private static final int Id_isNaN;
    private static final int Id_isXMLName;
    private static final int Id_parseFloat;
    private static final int Id_parseInt;
    private static final int Id_unescape;
    private static final int Id_uneval;
    private static final int LAST_SCOPE_FUNCTION_ID;
    private static final int Id_new_CommonError;

    public void <init>()
    {
        org.mozilla.javascript.NativeGlobal r0;

        r0 := @this: org.mozilla.javascript.NativeGlobal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void init(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, boolean)
    {
        java.lang.Object[] $r7;
        java.lang.Double $r2;
        java.lang.String[] $r5;
        org.mozilla.javascript.IdFunctionObject $r12, $r15;
        byte b2;
        int $i0, i1, i3;
        java.lang.String r11, r14;
        java.lang.Number $r3;
        boolean z0, $z1;
        org.mozilla.javascript.Context r6;
        java.lang.RuntimeException $r10;
        org.mozilla.javascript.Scriptable r1, $r8;
        org.mozilla.javascript.ScriptableObject $r9;
        org.mozilla.javascript.NativeGlobal $r0;
        java.lang.Object $r4, $r13, $r16;

        r6 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        z0 := @parameter2: boolean;

        $r0 = new org.mozilla.javascript.NativeGlobal;

        specialinvoke $r0.<org.mozilla.javascript.NativeGlobal: void <init>()>();

        i1 = 1;

     label01:
        if i1 > 13 goto label18;

        b2 = 1;

        tableswitch(i1)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label08;
            case 8: goto label09;
            case 9: goto label10;
            case 10: goto label11;
            case 11: goto label12;
            case 12: goto label13;
            case 13: goto label14;
            default: goto label15;
        };

     label02:
        r11 = "decodeURI";

        goto label16;

     label03:
        r11 = "decodeURIComponent";

        goto label16;

     label04:
        r11 = "encodeURI";

        goto label16;

     label05:
        r11 = "encodeURIComponent";

        goto label16;

     label06:
        r11 = "escape";

        goto label16;

     label07:
        r11 = "eval";

        goto label16;

     label08:
        r11 = "isFinite";

        goto label16;

     label09:
        r11 = "isNaN";

        goto label16;

     label10:
        r11 = "isXMLName";

        goto label16;

     label11:
        r11 = "parseFloat";

        goto label16;

     label12:
        r11 = "parseInt";

        b2 = 2;

        goto label16;

     label13:
        r11 = "unescape";

        goto label16;

     label14:
        r11 = "uneval";

        goto label16;

     label15:
        $r10 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r10;

     label16:
        $r12 = new org.mozilla.javascript.IdFunctionObject;

        $r13 = <org.mozilla.javascript.NativeGlobal: java.lang.Object FTAG>;

        specialinvoke $r12.<org.mozilla.javascript.IdFunctionObject: void <init>(org.mozilla.javascript.IdFunctionCall,java.lang.Object,int,java.lang.String,int,org.mozilla.javascript.Scriptable)>($r0, $r13, i1, r11, b2, r1);

        if z0 == 0 goto label17;

        virtualinvoke $r12.<org.mozilla.javascript.IdFunctionObject: void sealObject()>();

     label17:
        virtualinvoke $r12.<org.mozilla.javascript.IdFunctionObject: void exportAsScopeProperty()>();

        i1 = i1 + 1;

        goto label01;

     label18:
        $r2 = <org.mozilla.javascript.ScriptRuntime: java.lang.Double NaNobj>;

        staticinvoke <org.mozilla.javascript.ScriptableObject: void defineProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object,int)>(r1, "NaN", $r2, 2);

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>(#Infinity);

        staticinvoke <org.mozilla.javascript.ScriptableObject: void defineProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object,int)>(r1, "Infinity", $r3, 2);

        $r4 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        staticinvoke <org.mozilla.javascript.ScriptableObject: void defineProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object,int)>(r1, "undefined", $r4, 2);

        $r5 = staticinvoke <org.mozilla.javascript.Kit: java.lang.String[] semicolonSplit(java.lang.String)>("ConversionError;EvalError;RangeError;ReferenceError;SyntaxError;TypeError;URIError;InternalError;JavaException;");

        i3 = 0;

     label19:
        $i0 = lengthof $r5;

        if i3 >= $i0 goto label22;

        r14 = $r5[i3];

        $r7 = <org.mozilla.javascript.ScriptRuntime: java.lang.Object[] emptyArgs>;

        $r8 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable newObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object[])>(r6, r1, "Error", $r7);

        interfaceinvoke $r8.<org.mozilla.javascript.Scriptable: void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object)>("name", $r8, r14);

        if z0 == 0 goto label20;

        $z1 = $r8 instanceof org.mozilla.javascript.ScriptableObject;

        if $z1 == 0 goto label20;

        $r9 = (org.mozilla.javascript.ScriptableObject) $r8;

        virtualinvoke $r9.<org.mozilla.javascript.ScriptableObject: void sealObject()>();

     label20:
        $r15 = new org.mozilla.javascript.IdFunctionObject;

        $r16 = <org.mozilla.javascript.NativeGlobal: java.lang.Object FTAG>;

        specialinvoke $r15.<org.mozilla.javascript.IdFunctionObject: void <init>(org.mozilla.javascript.IdFunctionCall,java.lang.Object,int,java.lang.String,int,org.mozilla.javascript.Scriptable)>($r0, $r16, 14, r14, 1, r1);

        virtualinvoke $r15.<org.mozilla.javascript.IdFunctionObject: void markAsConstructor(org.mozilla.javascript.Scriptable)>($r8);

        if z0 == 0 goto label21;

        virtualinvoke $r15.<org.mozilla.javascript.IdFunctionObject: void sealObject()>();

     label21:
        virtualinvoke $r15.<org.mozilla.javascript.IdFunctionObject: void exportAsScopeProperty()>();

        i3 = i3 + 1;

        goto label19;

     label22:
        return;
    }

    public java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        byte $b4, $b6, $b7, $b8;
        org.mozilla.javascript.NativeError $r6;
        boolean $z0, $z1, $z2, $z3, z4, $z5, z6, $z7;
        org.mozilla.javascript.Scriptable r4, r22;
        java.lang.Object[] r5;
        org.mozilla.javascript.IdFunctionObject r0;
        int $i0, $i1, $i2, $i3, $i5;
        java.lang.Boolean $r13, $r23, $r24;
        java.lang.String $r7, $r18, $r19, $r20, $r21;
        double $d0, $d1;
        org.mozilla.javascript.xml.XMLLib $r12;
        org.mozilla.javascript.Context r3;
        java.lang.RuntimeException $r2;
        org.mozilla.javascript.NativeGlobal r8;
        java.lang.Object $r1, $r9, $r10, $r11, $r14, $r15, $r16, $r17, $r25, $r26;

        r8 := @this: org.mozilla.javascript.NativeGlobal;

        r0 := @parameter0: org.mozilla.javascript.IdFunctionObject;

        r3 := @parameter1: org.mozilla.javascript.Context;

        r4 := @parameter2: org.mozilla.javascript.Scriptable;

        r22 := @parameter3: org.mozilla.javascript.Scriptable;

        r5 := @parameter4: java.lang.Object[];

        $r1 = <org.mozilla.javascript.NativeGlobal: java.lang.Object FTAG>;

        $z0 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: boolean hasTag(java.lang.Object)>($r1);

        if $z0 == 0 goto label29;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: int methodId()>();

        tableswitch($i0)
        {
            case 1: goto label01;
            case 2: goto label01;
            case 3: goto label04;
            case 4: goto label04;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label09;
            case 8: goto label14;
            case 9: goto label19;
            case 10: goto label22;
            case 11: goto label23;
            case 12: goto label24;
            case 13: goto label25;
            case 14: goto label28;
            default: goto label29;
        };

     label01:
        $r20 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object[],int)>(r5, 0);

        if $i0 != 1 goto label02;

        $z2 = 1;

        goto label03;

     label02:
        $z2 = 0;

     label03:
        $r21 = staticinvoke <org.mozilla.javascript.NativeGlobal: java.lang.String decode(java.lang.String,boolean)>($r20, $z2);

        return $r21;

     label04:
        $r18 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object[],int)>(r5, 0);

        if $i0 != 3 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        $r19 = staticinvoke <org.mozilla.javascript.NativeGlobal: java.lang.String encode(java.lang.String,boolean)>($r18, $z3);

        return $r19;

     label07:
        $r17 = specialinvoke r8.<org.mozilla.javascript.NativeGlobal: java.lang.Object js_escape(java.lang.Object[])>(r5);

        return $r17;

     label08:
        $r16 = specialinvoke r8.<org.mozilla.javascript.NativeGlobal: java.lang.Object js_eval(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r3, r4, r5);

        return $r16;

     label09:
        $i5 = lengthof r5;

        if $i5 >= 1 goto label10;

        z4 = 0;

        goto label13;

     label10:
        $r15 = r5[0];

        $d1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>($r15);

        $b6 = $d1 cmpl $d1;

        if $b6 != 0 goto label11;

        $b7 = $d1 cmpl #Infinity;

        if $b7 == 0 goto label11;

        $b8 = $d1 cmpl #-Infinity;

        if $b8 == 0 goto label11;

        $z5 = 1;

        goto label12;

     label11:
        $z5 = 0;

     label12:
        z4 = $z5;

     label13:
        $r23 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Boolean wrapBoolean(boolean)>(z4);

        return $r23;

     label14:
        $i3 = lengthof r5;

        if $i3 >= 1 goto label15;

        z6 = 1;

        goto label18;

     label15:
        $r14 = r5[0];

        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>($r14);

        $b4 = $d0 cmpl $d0;

        if $b4 == 0 goto label16;

        $z7 = 1;

        goto label17;

     label16:
        $z7 = 0;

     label17:
        z6 = $z7;

     label18:
        $r24 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Boolean wrapBoolean(boolean)>(z6);

        return $r24;

     label19:
        $i2 = lengthof r5;

        if $i2 != 0 goto label20;

        $r25 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        goto label21;

     label20:
        $r25 = r5[0];

     label21:
        $r12 = staticinvoke <org.mozilla.javascript.xml.XMLLib: org.mozilla.javascript.xml.XMLLib extractFromScope(org.mozilla.javascript.Scriptable)>(r4);

        $z1 = virtualinvoke $r12.<org.mozilla.javascript.xml.XMLLib: boolean isXMLName(org.mozilla.javascript.Context,java.lang.Object)>(r3, $r25);

        $r13 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Boolean wrapBoolean(boolean)>($z1);

        return $r13;

     label22:
        $r11 = specialinvoke r8.<org.mozilla.javascript.NativeGlobal: java.lang.Object js_parseFloat(java.lang.Object[])>(r5);

        return $r11;

     label23:
        $r10 = specialinvoke r8.<org.mozilla.javascript.NativeGlobal: java.lang.Object js_parseInt(java.lang.Object[])>(r5);

        return $r10;

     label24:
        $r9 = specialinvoke r8.<org.mozilla.javascript.NativeGlobal: java.lang.Object js_unescape(java.lang.Object[])>(r5);

        return $r9;

     label25:
        $i1 = lengthof r5;

        if $i1 == 0 goto label26;

        $r26 = r5[0];

        goto label27;

     label26:
        $r26 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

     label27:
        $r7 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String uneval(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object)>(r3, r4, $r26);

        return $r7;

     label28:
        $r6 = staticinvoke <org.mozilla.javascript.NativeError: org.mozilla.javascript.NativeError make(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.IdFunctionObject,java.lang.Object[])>(r3, r4, r0, r5);

        return $r6;

     label29:
        $r2 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: java.lang.RuntimeException 'unknown'()>();

        throw $r2;
    }

    private java.lang.Object js_parseInt(java.lang.Object[])
    {
        boolean $z0, z1, $z3, $z4;
        java.lang.Object[] r0;
        java.lang.Double $r2, $r4;
        int $i0, $i1, $i3, $i5, $i7, $i9, i11, i12, $i13, $i14, $i16, $i17, $i18, $i19, $i21, $i22, $i23, $i24, $i25, $i26;
        java.lang.String $r1;
        java.lang.Number $r3;
        double $d0, $d1;
        char $c2, $c4, $c6, $c8, $c10;
        org.mozilla.javascript.NativeGlobal r5;

        r5 := @this: org.mozilla.javascript.NativeGlobal;

        r0 := @parameter0: java.lang.Object[];

        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object[],int)>(r0, 0);

        $i0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: int toInt32(java.lang.Object[],int)>(r0, 1);

        i11 = $i0;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 != 0 goto label01;

        $r4 = <org.mozilla.javascript.ScriptRuntime: java.lang.Double NaNobj>;

        return $r4;

     label01:
        z1 = 0;

        i12 = 0;

     label02:
        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i12);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c2);

        if $z0 != 0 goto label03;

        goto label04;

     label03:
        i12 = i12 + 1;

        if i12 < $i1 goto label02;

     label04:
        $i13 = (int) $c2;

        if $i13 == 43 goto label07;

        $i14 = (int) $c2;

        if $i14 != 45 goto label05;

        $z4 = 1;

        $z3 = 1;

        goto label06;

     label05:
        $z4 = 0;

        $z3 = 0;

     label06:
        z1 = $z3;

        if $z4 == 0 goto label08;

     label07:
        i12 = i12 + 1;

     label08:
        if $i0 != 0 goto label09;

        $i16 = (int) -1;

        i11 = $i16;

        goto label13;

     label09:
        if $i0 < 2 goto label10;

        if $i0 <= 36 goto label11;

     label10:
        $r2 = <org.mozilla.javascript.ScriptRuntime: java.lang.Double NaNobj>;

        return $r2;

     label11:
        if $i0 != 16 goto label13;

        $i7 = $i1 - i12;

        if $i7 <= 1 goto label13;

        $c8 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i12);

        $i17 = (int) $c8;

        if $i17 != 48 goto label13;

        $i9 = i12 + 1;

        $c10 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i9);

        $i18 = (int) $c10;

        if $i18 == 120 goto label12;

        $i19 = (int) $c10;

        if $i19 != 88 goto label13;

     label12:
        i12 = i12 + 2;

     label13:
        $i21 = (int) -1;

        if i11 != $i21 goto label16;

        i11 = 10;

        $i3 = $i1 - i12;

        if $i3 <= 1 goto label16;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i12);

        $i22 = (int) $c4;

        if $i22 != 48 goto label16;

        $i5 = i12 + 1;

        $c6 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i5);

        $i23 = (int) $c6;

        if $i23 == 120 goto label14;

        $i24 = (int) $c6;

        if $i24 != 88 goto label15;

     label14:
        i11 = 16;

        i12 = i12 + 2;

        goto label16;

     label15:
        $i25 = (int) $c6;

        if 48 > $i25 goto label16;

        $i26 = (int) $c6;

        if $i26 > 57 goto label16;

        i11 = 8;

        i12 = i12 + 1;

     label16:
        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double stringToNumber(java.lang.String,int,int)>($r1, i12, i11);

        if z1 == 0 goto label17;

        $d1 = neg $d0;

        goto label18;

     label17:
        $d1 = $d0;

     label18:
        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d1);

        return $r3;
    }

    private java.lang.Object js_parseFloat(java.lang.Object[])
    {
        boolean $z0, $z1;
        java.lang.Object[] r0;
        java.lang.Double $r3, $r5, $r6, $r7, $r9, $r12;
        int $i0, $i1, $i4, $i5, i7, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i18, $i20, $i21, $i23, $i25;
        java.lang.String $r2, $r11;
        java.lang.Number $r4;
        double d0;
        char $c2, $c3, $c6, c8;
        java.lang.NumberFormatException $r8;
        org.mozilla.javascript.NativeGlobal r10;
        java.lang.Object $r1;

        r10 := @this: org.mozilla.javascript.NativeGlobal;

        r0 := @parameter0: java.lang.Object[];

        $i0 = lengthof r0;

        if $i0 >= 1 goto label01;

        $r7 = <org.mozilla.javascript.ScriptRuntime: java.lang.Double NaNobj>;

        return $r7;

     label01:
        $r1 = r0[0];

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>($r1);

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        i7 = 0;

     label02:
        if i7 != $i1 goto label03;

        $r6 = <org.mozilla.javascript.ScriptRuntime: java.lang.Double NaNobj>;

        return $r6;

     label03:
        $c2 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i7);

        c8 = $c2;

        $i12 = (int) $c2;

        $z0 = staticinvoke <org.mozilla.javascript.TokenStream: boolean isJSSpace(int)>($i12);

        if $z0 != 0 goto label04;

        goto label05;

     label04:
        i7 = i7 + 1;

        goto label02;

     label05:
        i9 = i7;

        $i13 = (int) $c2;

        if $i13 == 43 goto label06;

        $i14 = (int) $c2;

        if $i14 != 45 goto label08;

     label06:
        i9 = i9 + 1;

        if i9 != $i1 goto label07;

        $r5 = <org.mozilla.javascript.ScriptRuntime: java.lang.Double NaNobj>;

        return $r5;

     label07:
        c8 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i9);

     label08:
        $i15 = (int) c8;

        if $i15 != 73 goto label12;

        $i5 = i9 + 8;

        if $i5 > $i1 goto label11;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(i9, "Infinity", 0, 8);

        if $z1 == 0 goto label11;

        $c6 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i7);

        $i16 = (int) $c6;

        if $i16 != 45 goto label09;

        d0 = #-Infinity;

        goto label10;

     label09:
        d0 = #Infinity;

     label10:
        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>(d0);

        return $r4;

     label11:
        $r3 = <org.mozilla.javascript.ScriptRuntime: java.lang.Double NaNobj>;

        return $r3;

     label12:
        $i18 = (int) -1;

        i10 = $i18;

        $i20 = (int) -1;

        i11 = $i20;

     label13:
        if i9 >= $i1 goto label22;

        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i9);

        $i21 = (int) $c3;

        tableswitch($i21)
        {
            case 43: goto label18;
            case 44: goto label20;
            case 45: goto label18;
            case 46: goto label14;
            case 47: goto label20;
            case 48: goto label19;
            case 49: goto label19;
            case 50: goto label19;
            case 51: goto label19;
            case 52: goto label19;
            case 53: goto label19;
            case 54: goto label19;
            case 55: goto label19;
            case 56: goto label19;
            case 57: goto label19;
            case 58: goto label20;
            case 59: goto label20;
            case 60: goto label20;
            case 61: goto label20;
            case 62: goto label20;
            case 63: goto label20;
            case 64: goto label20;
            case 65: goto label20;
            case 66: goto label20;
            case 67: goto label20;
            case 68: goto label20;
            case 69: goto label16;
            case 70: goto label20;
            case 71: goto label20;
            case 72: goto label20;
            case 73: goto label20;
            case 74: goto label20;
            case 75: goto label20;
            case 76: goto label20;
            case 77: goto label20;
            case 78: goto label20;
            case 79: goto label20;
            case 80: goto label20;
            case 81: goto label20;
            case 82: goto label20;
            case 83: goto label20;
            case 84: goto label20;
            case 85: goto label20;
            case 86: goto label20;
            case 87: goto label20;
            case 88: goto label20;
            case 89: goto label20;
            case 90: goto label20;
            case 91: goto label20;
            case 92: goto label20;
            case 93: goto label20;
            case 94: goto label20;
            case 95: goto label20;
            case 96: goto label20;
            case 97: goto label20;
            case 98: goto label20;
            case 99: goto label20;
            case 100: goto label20;
            case 101: goto label16;
            default: goto label20;
        };

     label14:
        $i23 = (int) -1;

        if i10 == $i23 goto label15;

        goto label22;

     label15:
        i10 = i9;

        goto label21;

     label16:
        $i25 = (int) -1;

        if i11 == $i25 goto label17;

        goto label22;

     label17:
        i11 = i9;

        goto label21;

     label18:
        $i4 = i9 - 1;

        if i11 == $i4 goto label21;

        goto label22;

     label19:
        goto label21;

     label20:
        goto label22;

     label21:
        i9 = i9 + 1;

        goto label13;

     label22:
        $r11 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(i7, i9);

     label23:
        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r11);

     label24:
        return $r12;

     label25:
        $r8 := @caughtexception;

        $r9 = <org.mozilla.javascript.ScriptRuntime: java.lang.Double NaNobj>;

        return $r9;

        catch java.lang.NumberFormatException from label23 to label24 with label25;
    }

    private java.lang.Object js_escape(java.lang.Object[])
    {
        byte $b10, $b12, b16;
        java.lang.Object[] r0;
        java.lang.StringBuffer r6, $r8;
        int $i0, $i1, $i3, $i4, i5, $i7, $i9, $i11, $i13, i14, i15, i17, $i18, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i38;
        java.lang.String $r1, $r7;
        double $d0, $d1;
        org.mozilla.javascript.EvaluatorException $r5;
        char $c2, $c6, $c8;
        org.mozilla.javascript.NativeGlobal r4;
        java.lang.Object $r3;

        r4 := @this: org.mozilla.javascript.NativeGlobal;

        r0 := @parameter0: java.lang.Object[];

        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object[],int)>(r0, 0);

        i14 = 7;

        $i0 = lengthof r0;

        if $i0 <= 1 goto label02;

        $r3 = r0[1];

        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>($r3);

        $b10 = $d0 cmpl $d0;

        if $b10 != 0 goto label01;

        $i11 = (int) $d0;

        i14 = $i11;

        $d1 = (double) $i11;

        $b12 = $d1 cmpl $d0;

        if $b12 != 0 goto label01;

        $i20 = (int) -8;

        $i13 = $i11 & $i20;

        if 0 == $i13 goto label02;

     label01:
        $r5 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError0(java.lang.String)>("msg.bad.esc.mask");

        throw $r5;

     label02:
        r6 = null;

        i15 = 0;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

     label03:
        if i15 == $i1 goto label17;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i15);

        if i14 == 0 goto label08;

        $i21 = (int) $c2;

        if $i21 < 48 goto label04;

        $i22 = (int) $c2;

        if $i22 <= 57 goto label07;

     label04:
        $i23 = (int) $c2;

        if $i23 < 65 goto label05;

        $i24 = (int) $c2;

        if $i24 <= 90 goto label07;

     label05:
        $i25 = (int) $c2;

        if $i25 < 97 goto label06;

        $i26 = (int) $c2;

        if $i26 <= 122 goto label07;

     label06:
        $i27 = (int) $c2;

        if $i27 == 64 goto label07;

        $i28 = (int) $c2;

        if $i28 == 42 goto label07;

        $i29 = (int) $c2;

        if $i29 == 95 goto label07;

        $i30 = (int) $c2;

        if $i30 == 45 goto label07;

        $i31 = (int) $c2;

        if $i31 == 46 goto label07;

        $i9 = i14 & 4;

        if 0 == $i9 goto label08;

        $i32 = (int) $c2;

        if $i32 == 47 goto label07;

        $i33 = (int) $c2;

        if $i33 != 43 goto label08;

     label07:
        if r6 == null goto label16;

        $c8 = (char) $c2;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c8);

        goto label16;

     label08:
        if r6 != null goto label09;

        $r8 = new java.lang.StringBuffer;

        $i7 = $i1 + 3;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>(int)>($i7);

        r6 = $r8;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        virtualinvoke $r8.<java.lang.StringBuffer: void setLength(int)>(i15);

     label09:
        $i34 = (int) $c2;

        if $i34 >= 256 goto label11;

        $i35 = (int) $c2;

        if $i35 != 32 goto label10;

        if i14 != 2 goto label10;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(43);

        goto label16;

     label10:
        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(37);

        b16 = 2;

        goto label12;

     label11:
        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(37);

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(117);

        b16 = 4;

     label12:
        $i3 = b16 - 1;

        i17 = $i3 * 4;

     label13:
        if i17 < 0 goto label16;

        $i36 = (int) $c2;

        $i4 = $i36 >> i17;

        i5 = 15 & $i4;

        if i5 >= 10 goto label14;

        $i18 = 48 + i5;

        goto label15;

     label14:
        $i18 = 55 + i5;

     label15:
        $c6 = (char) $i18;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);

        $i38 = (int) -4;

        i17 = i17 + $i38;

        goto label13;

     label16:
        i15 = i15 + 1;

        goto label03;

     label17:
        if r6 != null goto label18;

        $r7 = $r1;

        goto label19;

     label18:
        $r7 = virtualinvoke r6.<java.lang.StringBuffer: java.lang.String toString()>();

     label19:
        return $r7;
    }

    private java.lang.Object js_unescape(java.lang.Object[])
    {
        java.lang.Object[] r0;
        int $i0, $i1, i4, i5, i7, i8, i9, i10, $i11, $i12, $i13;
        java.lang.String $r1, r5, $r6;
        char $c2, $c3, c6;
        org.mozilla.javascript.NativeGlobal r4;
        char[] $r2;

        r4 := @this: org.mozilla.javascript.NativeGlobal;

        r0 := @parameter0: java.lang.Object[];

        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object[],int)>(r0, 0);

        r5 = $r1;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(37);

        if $i0 < 0 goto label8;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        i4 = $i0;

        i5 = $i0;

     label1:
        if i5 == $i1 goto label7;

        c6 = $r2[i5];

        i5 = i5 + 1;

        $i11 = (int) c6;

        if $i11 != 37 goto label6;

        if i5 == $i1 goto label6;

        $c2 = $r2[i5];

        $i12 = (int) $c2;

        if $i12 != 117 goto label2;

        i7 = i5 + 1;

        i8 = i5 + 5;

        goto label3;

     label2:
        i7 = i5;

        i8 = i5 + 2;

     label3:
        if i8 > $i1 goto label6;

        i9 = 0;

        i10 = i7;

     label4:
        if i10 == i8 goto label5;

        $c3 = $r2[i10];

        $i13 = (int) $c3;

        i9 = staticinvoke <org.mozilla.javascript.Kit: int xDigitToInt(int,int)>($i13, i9);

        i10 = i10 + 1;

        goto label4;

     label5:
        if i9 < 0 goto label6;

        c6 = (char) i9;

        i5 = i8;

     label6:
        $r2[i4] = c6;

        i4 = i4 + 1;

        goto label1;

     label7:
        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(char[],int,int)>($r2, 0, i4);

        r5 = $r6;

     label8:
        return r5;
    }

    private java.lang.Object js_eval(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        org.mozilla.javascript.EcmaError $r3;
        org.mozilla.javascript.Scriptable r2;
        java.lang.Object[] r5;
        org.mozilla.javascript.Context r1;
        org.mozilla.javascript.NativeGlobal r4;
        java.lang.String $r0;

        r4 := @this: org.mozilla.javascript.NativeGlobal;

        r1 := @parameter0: org.mozilla.javascript.Context;

        r2 := @parameter1: org.mozilla.javascript.Scriptable;

        r5 := @parameter2: java.lang.Object[];

        $r0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String getMessage1(java.lang.String,java.lang.Object)>("msg.cant.call.indirect", "eval");

        $r3 = staticinvoke <org.mozilla.javascript.NativeGlobal: org.mozilla.javascript.EcmaError constructError(org.mozilla.javascript.Context,java.lang.String,java.lang.String,org.mozilla.javascript.Scriptable)>(r1, "EvalError", $r0, r2);

        throw $r3;
    }

    static boolean isEvalFunction(java.lang.Object)
    {
        org.mozilla.javascript.IdFunctionObject r1;
        int $i0;
        java.lang.Object r0, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.mozilla.javascript.IdFunctionObject;

        if $z0 == 0 goto label1;

        r1 = (org.mozilla.javascript.IdFunctionObject) r0;

        $r2 = <org.mozilla.javascript.NativeGlobal: java.lang.Object FTAG>;

        $z1 = virtualinvoke r1.<org.mozilla.javascript.IdFunctionObject: boolean hasTag(java.lang.Object)>($r2);

        if $z1 == 0 goto label1;

        $i0 = virtualinvoke r1.<org.mozilla.javascript.IdFunctionObject: int methodId()>();

        if $i0 != 6 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static org.mozilla.javascript.EcmaError constructError(org.mozilla.javascript.Context, java.lang.String, java.lang.String, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.EcmaError $r2;
        org.mozilla.javascript.Scriptable r4;
        org.mozilla.javascript.Context r3;
        java.lang.String r0, r1;

        r3 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r4 := @parameter3: org.mozilla.javascript.Scriptable;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError constructError(java.lang.String,java.lang.String)>(r0, r1);

        return $r2;
    }

    public static org.mozilla.javascript.EcmaError constructError(org.mozilla.javascript.Context, java.lang.String, java.lang.String, org.mozilla.javascript.Scriptable, java.lang.String, int, int, java.lang.String)
    {
        org.mozilla.javascript.EcmaError $r4;
        org.mozilla.javascript.Context r5;
        org.mozilla.javascript.Scriptable r6;
        int i0, i1;
        java.lang.String r0, r1, r2, r3;

        r5 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r6 := @parameter3: org.mozilla.javascript.Scriptable;

        r2 := @parameter4: java.lang.String;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        r3 := @parameter7: java.lang.String;

        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError constructError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int)>(r0, r1, r2, i0, r3, i1);

        return $r4;
    }

    private static java.lang.String encode(java.lang.String, boolean)
    {
        byte[] r5;
        byte $b3;
        boolean z0, $z1;
        short s4, $s7, $s43;
        java.lang.StringBuffer r6, $r8;
        int $i0, $i2, $i5, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, $i19, $i20, $i21, $i23, $i24, $i26, $i28, $i29, $i30, $i32, $i33, $i34, $i36, $i37, $i39, $i40, $i42, $i44, $i45;
        java.lang.String r0, $r7;
        org.mozilla.javascript.EvaluatorException $r1, $r2, $r3;
        char $c1, $c6, $c8, $c9;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r5 = null;

        r6 = null;

        i15 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

     label01:
        if i15 == $i0 goto label13;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i15);

        $z1 = staticinvoke <org.mozilla.javascript.NativeGlobal: boolean encodeUnescaped(char,boolean)>($c1, z0);

        if $z1 == 0 goto label02;

        if r6 == null goto label12;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        goto label12;

     label02:
        if r6 != null goto label03;

        $r8 = new java.lang.StringBuffer;

        $i14 = $i0 + 3;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>(int)>($i14);

        r6 = $r8;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        virtualinvoke $r8.<java.lang.StringBuffer: void setLength(int)>(i15);

        r5 = newarray (byte)[6];

     label03:
        $i19 = (int) 56320;

        $i20 = (int) $c1;

        if $i19 > $i20 goto label04;

        $i21 = (int) $c1;

        $i23 = (int) 57343;

        if $i21 > $i23 goto label04;

        $r3 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError0(java.lang.String)>("msg.bad.uri");

        throw $r3;

     label04:
        $i24 = (int) $c1;

        $i26 = (int) 55296;

        if $i24 < $i26 goto label05;

        $i28 = (int) 56319;

        $i29 = (int) $c1;

        if $i28 >= $i29 goto label06;

     label05:
        $i30 = (int) $c1;

        i16 = $i30;

        goto label10;

     label06:
        i15 = i15 + 1;

        if i15 != $i0 goto label07;

        $r2 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError0(java.lang.String)>("msg.bad.uri");

        throw $r2;

     label07:
        $c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i15);

        $i32 = (int) 56320;

        $i33 = (int) $c9;

        if $i32 > $i33 goto label08;

        $i34 = (int) $c9;

        $i36 = (int) 57343;

        if $i34 <= $i36 goto label09;

     label08:
        $r1 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError0(java.lang.String)>("msg.bad.uri");

        throw $r1;

     label09:
        $i37 = (int) $c1;

        $i39 = (int) 55296;

        $i10 = $i37 - $i39;

        $i12 = $i10 << 10;

        $i40 = (int) $c9;

        $i42 = (int) 56320;

        $i11 = $i40 - $i42;

        $i13 = $i12 + $i11;

        i16 = $i13 + 65536;

     label10:
        $i2 = staticinvoke <org.mozilla.javascript.NativeGlobal: int oneUcs4ToUtf8Char(byte[],int)>(r5, i16);

        i17 = 0;

     label11:
        if i17 >= $i2 goto label12;

        $b3 = r5[i17];

        $s43 = (short) $b3;

        s4 = 255 & $s43;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(37);

        $i44 = (int) s4;

        $i5 = $i44 >>> 4;

        $c6 = staticinvoke <org.mozilla.javascript.NativeGlobal: char toHexChar(int)>($i5);

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);

        $s7 = s4 & 15;

        $i45 = (int) $s7;

        $c8 = staticinvoke <org.mozilla.javascript.NativeGlobal: char toHexChar(int)>($i45);

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c8);

        i17 = i17 + 1;

        goto label11;

     label12:
        i15 = i15 + 1;

        goto label01;

     label13:
        if r6 != null goto label14;

        $r7 = r0;

        goto label15;

     label14:
        $r7 = virtualinvoke r6.<java.lang.StringBuffer: java.lang.String toString()>();

     label15:
        return $r7;
    }

    private static char toHexChar(int)
    {
        int i0, $i1, $i2, $i5, $i6;
        char $c3, $c4;

        i0 := @parameter0: int;

        $i1 = i0 >> 4;

        if $i1 == 0 goto label1;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label1:
        if i0 >= 10 goto label2;

        $i5 = i0 + 48;

        $c4 = (char) $i5;

        return $c4;

     label2:
        $i2 = i0 - 10;

        $i6 = $i2 + 97;

        $c3 = (char) $i6;

        return $c3;
    }

    private static int unHex(char)
    {
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16;
        char c0;

        c0 := @parameter0: char;

        $i6 = (int) c0;

        if 65 > $i6 goto label1;

        $i7 = (int) c0;

        if $i7 > 70 goto label1;

        $i8 = (int) c0;

        $i4 = $i8 - 65;

        $i5 = $i4 + 10;

        return $i5;

     label1:
        $i9 = (int) c0;

        if 97 > $i9 goto label2;

        $i10 = (int) c0;

        if $i10 > 102 goto label2;

        $i11 = (int) c0;

        $i2 = $i11 - 97;

        $i3 = $i2 + 10;

        return $i3;

     label2:
        $i12 = (int) c0;

        if 48 > $i12 goto label3;

        $i13 = (int) c0;

        if $i13 > 57 goto label3;

        $i14 = (int) c0;

        $i1 = $i14 - 48;

        return $i1;

     label3:
        $i16 = (int) -1;

        return $i16;
    }

    private static int unHex(char, char)
    {
        int $i1, $i3, $i4, $i5, $i7;
        char c0, c2;

        c0 := @parameter0: char;

        c2 := @parameter1: char;

        $i1 = staticinvoke <org.mozilla.javascript.NativeGlobal: int unHex(char)>(c0);

        $i3 = staticinvoke <org.mozilla.javascript.NativeGlobal: int unHex(char)>(c2);

        if $i1 < 0 goto label1;

        if $i3 < 0 goto label1;

        $i4 = $i1 << 4;

        $i5 = $i4 | $i3;

        return $i5;

     label1:
        $i7 = (int) -1;

        return $i7;
    }

    private static java.lang.String decode(java.lang.String, boolean)
    {
        byte b38, b47, b48;
        java.lang.String r0, $r2, $r11, $r12;
        org.mozilla.javascript.EvaluatorException $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        char[] r10;
        boolean z0;
        int $i0, i2, $i3, $i4, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i23, $i24, $i26, $i28, $i30, $i31, $i32, $i33, $i34, i35, i36, i39, i40, $i41, $i42, i43, i44, i46, $i49, $i50, $i52, $i54, $i56, $i58, $i60, $i61;
        char $c1, $c5, $c7, $c19, $c25, $c27, $c29, c37, c45;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r10 = null;

        i35 = 0;

        i36 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

     label01:
        if i36 == $i0 goto label28;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i36);

        $i49 = (int) $c1;

        if $i49 == 37 goto label03;

        if r10 == null goto label02;

        $i34 = i35;

        i35 = i35 + 1;

        r10[$i34] = $c1;

     label02:
        i36 = i36 + 1;

        goto label01;

     label03:
        if r10 != null goto label04;

        r10 = newarray (char)[$i0];

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, i36, r10, 0);

        i35 = i36;

     label04:
        i2 = i36;

        $i3 = i36 + 3;

        if $i3 <= $i0 goto label05;

        $r9 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError0(java.lang.String)>("msg.bad.uri");

        throw $r9;

     label05:
        $i4 = i36 + 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $i6 = i36 + 2;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        $i8 = staticinvoke <org.mozilla.javascript.NativeGlobal: int unHex(char,char)>($c5, $c7);

        if $i8 >= 0 goto label06;

        $r8 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError0(java.lang.String)>("msg.bad.uri");

        throw $r8;

     label06:
        i36 = i36 + 3;

        $i9 = $i8 & 128;

        if $i9 != 0 goto label07;

        c37 = (char) $i8;

        goto label25;

     label07:
        $i10 = $i8 & 192;

        if $i10 != 128 goto label08;

        $r7 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError0(java.lang.String)>("msg.bad.uri");

        throw $r7;

     label08:
        $i11 = $i8 & 32;

        if $i11 != 0 goto label09;

        b38 = 1;

        b48 = 1;

        b47 = 1;

        i39 = $i8 & 31;

        i40 = 128;

        goto label14;

     label09:
        $i12 = $i8 & 16;

        if $i12 != 0 goto label10;

        b38 = 2;

        b48 = 2;

        b47 = 2;

        i39 = $i8 & 15;

        i40 = 2048;

        goto label14;

     label10:
        $i13 = $i8 & 8;

        if $i13 != 0 goto label11;

        b38 = 3;

        b48 = 3;

        b47 = 3;

        i39 = $i8 & 7;

        i40 = 65536;

        goto label14;

     label11:
        $i14 = $i8 & 4;

        if $i14 != 0 goto label12;

        b38 = 4;

        b48 = 4;

        b47 = 4;

        i39 = $i8 & 3;

        i40 = 2097152;

        goto label14;

     label12:
        $i15 = $i8 & 2;

        if $i15 != 0 goto label13;

        b38 = 5;

        b48 = 5;

        b47 = 5;

        i39 = $i8 & 1;

        i40 = 67108864;

        goto label14;

     label13:
        $r1 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError0(java.lang.String)>("msg.bad.uri");

        throw $r1;

     label14:
        $i41 = 3 * b47;

        $i42 = i36 + $i41;

        if $i42 <= $i0 goto label15;

        $r6 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError0(java.lang.String)>("msg.bad.uri");

        throw $r6;

     label15:
        i43 = 0;

     label16:
        if i43 == b48 goto label20;

        $c25 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i36);

        $i50 = (int) $c25;

        if $i50 == 37 goto label17;

        $r5 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError0(java.lang.String)>("msg.bad.uri");

        throw $r5;

     label17:
        $i26 = i36 + 1;

        $c27 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i26);

        $i28 = i36 + 2;

        $c29 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i28);

        $i30 = staticinvoke <org.mozilla.javascript.NativeGlobal: int unHex(char,char)>($c27, $c29);

        if $i30 < 0 goto label18;

        $i31 = $i30 & 192;

        if $i31 == 128 goto label19;

     label18:
        $r4 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError0(java.lang.String)>("msg.bad.uri");

        throw $r4;

     label19:
        $i33 = i39 << 6;

        $i32 = $i30 & 63;

        i39 = $i33 | $i32;

        i36 = i36 + 3;

        i43 = i43 + 1;

        goto label16;

     label20:
        if i39 < i40 goto label21;

        $i52 = (int) 65534;

        if i39 == $i52 goto label21;

        $i54 = (int) 65535;

        if i39 != $i54 goto label22;

     label21:
        $i56 = (int) 65533;

        i39 = $i56;

     label22:
        if i39 < 65536 goto label24;

        i44 = i39 - 65536;

        if i44 <= 1048575 goto label23;

        $r3 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError0(java.lang.String)>("msg.bad.uri");

        throw $r3;

     label23:
        $i20 = i44 >>> 10;

        $i58 = (int) 55296;

        $i21 = $i20 + $i58;

        c45 = (char) $i21;

        $i22 = i44 & 1023;

        $i60 = (int) 56320;

        $i23 = $i22 + $i60;

        c37 = (char) $i23;

        $i24 = i35;

        i35 = i35 + 1;

        r10[$i24] = c45;

        goto label25;

     label24:
        c37 = (char) i39;

     label25:
        if z0 == 0 goto label27;

        $r2 = ";/?:@&=+$,#";

        $i61 = (int) c37;

        $i17 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>($i61);

        if $i17 < 0 goto label27;

        i46 = i2;

     label26:
        if i46 == i36 goto label01;

        $i18 = i35;

        i35 = i35 + 1;

        $c19 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i46);

        r10[$i18] = $c19;

        i46 = i46 + 1;

        goto label26;

     label27:
        $i16 = i35;

        i35 = i35 + 1;

        r10[$i16] = c37;

        goto label01;

     label28:
        if r10 != null goto label29;

        $r11 = r0;

        goto label30;

     label29:
        $r12 = new java.lang.String;

        $r11 = $r12;

        specialinvoke $r12.<java.lang.String: void <init>(char[],int,int)>(r10, 0, i35);

     label30:
        return $r11;
    }

    private static boolean encodeUnescaped(char, boolean)
    {
        char c0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.String $r0, $r1;
        boolean z0, $z1;

        c0 := @parameter0: char;

        z0 := @parameter1: boolean;

        $i3 = (int) c0;

        if 65 > $i3 goto label1;

        $i4 = (int) c0;

        if $i4 <= 90 goto label3;

     label1:
        $i5 = (int) c0;

        if 97 > $i5 goto label2;

        $i6 = (int) c0;

        if $i6 <= 122 goto label3;

     label2:
        $i7 = (int) c0;

        if 48 > $i7 goto label4;

        $i8 = (int) c0;

        if $i8 > 57 goto label4;

     label3:
        return 1;

     label4:
        $r0 = "-_.!~*\'()";

        $i9 = (int) c0;

        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>($i9);

        if $i1 < 0 goto label5;

        return 1;

     label5:
        if z0 == 0 goto label8;

        $r1 = ";/?:@&=+$,#";

        $i10 = (int) c0;

        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($i10);

        if $i2 < 0 goto label6;

        $z1 = 1;

        goto label7;

     label6:
        $z1 = 0;

     label7:
        return $z1;

     label8:
        return 0;
    }

    private static int oneUcs4ToUtf8Char(byte[], int)
    {
        byte[] r0;
        byte $b5, $b8, $b9;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, i10, i11, i12, i13, $i15, $i17;

        r0 := @parameter0: byte[];

        i10 := @parameter1: int;

        i11 = 1;

        $i15 = (int) -128;

        $i0 = i10 & $i15;

        if $i0 != 0 goto label1;

        $b9 = (byte) i10;

        r0[0] = $b9;

        goto label6;

     label1:
        i12 = i10 >>> 11;

        i11 = 2;

     label2:
        if i12 == 0 goto label3;

        i12 = i12 >>> 5;

        i11 = i11 + 1;

        goto label2;

     label3:
        i13 = i11;

     label4:
        $i17 = (int) -1;

        i13 = i13 + $i17;

        if i13 <= 0 goto label5;

        $i6 = i10 & 63;

        $i7 = $i6 | 128;

        $b8 = (byte) $i7;

        r0[i13] = $b8;

        i10 = i10 >>> 6;

        goto label4;

     label5:
        $i1 = 8 - i11;

        $i2 = 1 << $i1;

        $i3 = 256 - $i2;

        $i4 = $i3 + i10;

        $b5 = (byte) $i4;

        r0[0] = $b5;

     label6:
        return i11;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        <org.mozilla.javascript.NativeGlobal: int Id_new_CommonError> = 14;

        <org.mozilla.javascript.NativeGlobal: int LAST_SCOPE_FUNCTION_ID> = 13;

        <org.mozilla.javascript.NativeGlobal: int Id_uneval> = 13;

        <org.mozilla.javascript.NativeGlobal: int Id_unescape> = 12;

        <org.mozilla.javascript.NativeGlobal: int Id_parseInt> = 11;

        <org.mozilla.javascript.NativeGlobal: int Id_parseFloat> = 10;

        <org.mozilla.javascript.NativeGlobal: int Id_isXMLName> = 9;

        <org.mozilla.javascript.NativeGlobal: int Id_isNaN> = 8;

        <org.mozilla.javascript.NativeGlobal: int Id_isFinite> = 7;

        <org.mozilla.javascript.NativeGlobal: int Id_eval> = 6;

        <org.mozilla.javascript.NativeGlobal: int Id_escape> = 5;

        <org.mozilla.javascript.NativeGlobal: int Id_encodeURIComponent> = 4;

        <org.mozilla.javascript.NativeGlobal: int Id_encodeURI> = 3;

        <org.mozilla.javascript.NativeGlobal: int Id_decodeURIComponent> = 2;

        <org.mozilla.javascript.NativeGlobal: int Id_decodeURI> = 1;

        <org.mozilla.javascript.NativeGlobal: java.lang.String URI_DECODE_RESERVED> = ";/?:@&=+$,#";

        <org.mozilla.javascript.NativeGlobal: long serialVersionUID> = 6080442165748707530L;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <org.mozilla.javascript.NativeGlobal: java.lang.Object FTAG> = $r0;

        return;
    }
}
