public class org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator extends java.lang.Object implements org.apache.cxf.policy.PolicyCalculator
{

    public void <init>()
    {
        org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator r0;

        r0 := @this: org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.cxf.transports.http.configuration.HTTPServerPolicy intersect(org.apache.cxf.transports.http.configuration.HTTPServerPolicy, org.apache.cxf.transports.http.configuration.HTTPServerPolicy)
    {
        org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        org.apache.cxf.transports.http.configuration.HTTPServerPolicy r1, r2, $r3;
        long $l0, $l1, $l2;
        java.lang.String $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;

        r0 := @this: org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator;

        r1 := @parameter0: org.apache.cxf.transports.http.configuration.HTTPServerPolicy;

        r2 := @parameter1: org.apache.cxf.transports.http.configuration.HTTPServerPolicy;

        $z0 = virtualinvoke r0.<org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator: boolean compatible(org.apache.cxf.transports.http.configuration.HTTPServerPolicy,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)>(r1, r2);

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r3 = new org.apache.cxf.transports.http.configuration.HTTPServerPolicy;

        specialinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: void <init>()>();

        $z1 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSetCacheControl()>();

        if $z1 == 0 goto label02;

        $r9 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getCacheControl()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: void setCacheControl(java.lang.String)>($r9);

        goto label03;

     label02:
        $z2 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSetCacheControl()>();

        if $z2 == 0 goto label03;

        $r8 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getCacheControl()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: void setCacheControl(java.lang.String)>($r8);

     label03:
        $r10 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getContentEncoding()>();

        $r11 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getContentEncoding()>();

        $r12 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: java.lang.String combine(java.lang.String,java.lang.String)>($r10, $r11);

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: void setContentEncoding(java.lang.String)>($r12);

        $r13 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getContentLocation()>();

        $r14 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getContentLocation()>();

        $r15 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: java.lang.String combine(java.lang.String,java.lang.String)>($r13, $r14);

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: void setContentLocation(java.lang.String)>($r15);

        $z15 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSetContentType()>();

        if $z15 == 0 goto label04;

        $r7 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getContentType()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: void setContentType(java.lang.String)>($r7);

        goto label05;

     label04:
        $z3 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSetContentType()>();

        if $z3 == 0 goto label05;

        $r6 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getContentType()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: void setContentType(java.lang.String)>($r6);

     label05:
        $z16 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSetHonorKeepAlive()>();

        if $z16 == 0 goto label06;

        $z14 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isHonorKeepAlive()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: void setHonorKeepAlive(boolean)>($z14);

        goto label07;

     label06:
        $z4 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSetHonorKeepAlive()>();

        if $z4 == 0 goto label07;

        $z13 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isHonorKeepAlive()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: void setHonorKeepAlive(boolean)>($z13);

     label07:
        $z17 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSetKeepAliveParameters()>();

        if $z17 == 0 goto label08;

        $r5 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getKeepAliveParameters()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: void setKeepAliveParameters(java.lang.String)>($r5);

        goto label09;

     label08:
        $z5 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSetKeepAliveParameters()>();

        if $z5 == 0 goto label09;

        $r4 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getKeepAliveParameters()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: void setKeepAliveParameters(java.lang.String)>($r4);

     label09:
        $z18 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSetReceiveTimeout()>();

        if $z18 != 0 goto label10;

        $z12 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSetReceiveTimeout()>();

        if $z12 == 0 goto label11;

     label10:
        $l0 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: long getReceiveTimeout()>();

        $l1 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: long getReceiveTimeout()>();

        $l2 = staticinvoke <java.lang.Math: long min(long,long)>($l0, $l1);

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: void setReceiveTimeout(long)>($l2);

     label11:
        $r16 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getRedirectURL()>();

        $r17 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getRedirectURL()>();

        $r18 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: java.lang.String combine(java.lang.String,java.lang.String)>($r16, $r17);

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: void setRedirectURL(java.lang.String)>($r18);

        $r19 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getServerType()>();

        $r20 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getServerType()>();

        $r21 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: java.lang.String combine(java.lang.String,java.lang.String)>($r19, $r20);

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: void setServerType(java.lang.String)>($r21);

        $z19 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSetSuppressClientReceiveErrors()>();

        if $z19 == 0 goto label12;

        $z11 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSuppressClientReceiveErrors()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: void setSuppressClientReceiveErrors(boolean)>($z11);

        goto label13;

     label12:
        $z6 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSetSuppressClientReceiveErrors()>();

        if $z6 == 0 goto label13;

        $z10 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSuppressClientReceiveErrors()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: void setSuppressClientReceiveErrors(boolean)>($z10);

     label13:
        $z20 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSetSuppressClientSendErrors()>();

        if $z20 == 0 goto label14;

        $z9 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSuppressClientSendErrors()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: void setSuppressClientSendErrors(boolean)>($z9);

        goto label15;

     label14:
        $z7 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSetSuppressClientSendErrors()>();

        if $z7 == 0 goto label15;

        $z8 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSuppressClientSendErrors()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: void setSuppressClientSendErrors(boolean)>($z8);

     label15:
        return $r3;
    }

    public boolean compatible(org.apache.cxf.transports.http.configuration.HTTPServerPolicy, org.apache.cxf.transports.http.configuration.HTTPServerPolicy)
    {
        org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, z19, $z20, $z21, $z22, $z23;
        org.apache.cxf.transports.http.configuration.HTTPServerPolicy r0, r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        r16 := @this: org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator;

        r0 := @parameter0: org.apache.cxf.transports.http.configuration.HTTPServerPolicy;

        r1 := @parameter1: org.apache.cxf.transports.http.configuration.HTTPServerPolicy;

        if r0 == r1 goto label01;

        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label02;

     label01:
        return 1;

     label02:
        z19 = 1;

        if 1 == 0 goto label06;

        $z16 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSetCacheControl()>();

        if $z16 == 0 goto label03;

        $z17 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSetCacheControl()>();

        if $z17 == 0 goto label03;

        $r14 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getCacheControl()>();

        $r15 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getCacheControl()>();

        $z18 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z18 == 0 goto label04;

     label03:
        $z20 = 1;

        goto label05;

     label04:
        $z20 = 0;

     label05:
        z19 = 1 & $z20;

     label06:
        if z19 == 0 goto label07;

        $r12 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getContentEncoding()>();

        $r13 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getContentEncoding()>();

        $z15 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean compatible(java.lang.String,java.lang.String)>($r12, $r13);

        z19 = z19 & $z15;

     label07:
        if z19 == 0 goto label08;

        $r10 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getContentLocation()>();

        $r11 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getContentLocation()>();

        $z14 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean compatible(java.lang.String,java.lang.String)>($r10, $r11);

        z19 = z19 & $z14;

     label08:
        if z19 == 0 goto label09;

        $r8 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getContentType()>();

        $r9 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getContentType()>();

        $z13 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean compatible(java.lang.String,java.lang.String)>($r8, $r9);

        z19 = z19 & $z13;

     label09:
        if z19 == 0 goto label10;

        $r6 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getRedirectURL()>();

        $r7 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getRedirectURL()>();

        $z12 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean compatible(java.lang.String,java.lang.String)>($r6, $r7);

        z19 = z19 & $z12;

     label10:
        if z19 == 0 goto label11;

        $r4 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getServerType()>();

        $r5 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getServerType()>();

        $z11 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean compatible(java.lang.String,java.lang.String)>($r4, $r5);

        z19 = z19 & $z11;

     label11:
        if z19 == 0 goto label14;

        $z10 = z19;

        $z8 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isHonorKeepAlive()>();

        $z9 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isHonorKeepAlive()>();

        if $z8 != $z9 goto label12;

        $z21 = 1;

        goto label13;

     label12:
        $z21 = 0;

     label13:
        z19 = $z10 & $z21;

     label14:
        if z19 == 0 goto label17;

        $z7 = z19;

        $z5 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSuppressClientReceiveErrors()>();

        $z6 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSuppressClientReceiveErrors()>();

        if $z5 != $z6 goto label15;

        $z22 = 1;

        goto label16;

     label15:
        $z22 = 0;

     label16:
        z19 = $z7 & $z22;

     label17:
        if z19 == 0 goto label20;

        $z4 = z19;

        $z2 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSuppressClientSendErrors()>();

        $z3 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSuppressClientSendErrors()>();

        if $z2 != $z3 goto label18;

        $z23 = 1;

        goto label19;

     label18:
        $z23 = 0;

     label19:
        z19 = $z4 & $z23;

     label20:
        if z19 == 0 goto label21;

        $r2 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getKeepAliveParameters()>();

        $r3 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getKeepAliveParameters()>();

        $z1 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean compatible(java.lang.String,java.lang.String)>($r2, $r3);

        z19 = z19 & $z1;

     label21:
        return z19;
    }

    public boolean equals(org.apache.cxf.transports.http.configuration.HTTPServerPolicy, org.apache.cxf.transports.http.configuration.HTTPServerPolicy)
    {
        org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator r18;
        byte $b2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        org.apache.cxf.transports.http.configuration.HTTPServerPolicy r0, r1;
        long $l0, $l1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;

        r18 := @this: org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator;

        r0 := @parameter0: org.apache.cxf.transports.http.configuration.HTTPServerPolicy;

        r1 := @parameter1: org.apache.cxf.transports.http.configuration.HTTPServerPolicy;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isHonorKeepAlive()>();

        $z1 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isHonorKeepAlive()>();

        if $z0 != $z1 goto label4;

        $r6 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getCacheControl()>();

        if $r6 != null goto label2;

        $r17 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getCacheControl()>();

        if $r17 != null goto label4;

        goto label3;

     label2:
        $r7 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getCacheControl()>();

        $r8 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getCacheControl()>();

        $z8 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z8 == 0 goto label4;

     label3:
        $r9 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getContentEncoding()>();

        $r10 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getContentEncoding()>();

        $z9 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r9, $r10);

        if $z9 == 0 goto label4;

        $r11 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getContentLocation()>();

        $r12 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getContentLocation()>();

        $z10 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r11, $r12);

        if $z10 == 0 goto label4;

        $r13 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getContentType()>();

        $r14 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getContentType()>();

        $z11 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r13, $r14);

        if $z11 == 0 goto label4;

        $r15 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getKeepAliveParameters()>();

        $r16 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getKeepAliveParameters()>();

        $z12 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r15, $r16);

        if $z12 == 0 goto label4;

        $z13 = 1;

        goto label5;

     label4:
        $z13 = 0;

     label5:
        $z14 = 1 & $z13;

        if $z14 != 0 goto label6;

        return 0;

     label6:
        $l0 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: long getReceiveTimeout()>();

        $l1 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: long getReceiveTimeout()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label7;

        $r2 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getRedirectURL()>();

        $r3 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getRedirectURL()>();

        $z2 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r2, $r3);

        if $z2 == 0 goto label7;

        $r4 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getServerType()>();

        $r5 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getServerType()>();

        $z3 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r4, $r5);

        if $z3 == 0 goto label7;

        $z4 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSuppressClientReceiveErrors()>();

        $z5 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSuppressClientReceiveErrors()>();

        if $z4 != $z5 goto label7;

        $z6 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSuppressClientSendErrors()>();

        $z7 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: boolean isSuppressClientSendErrors()>();

        if $z6 != $z7 goto label7;

        $z15 = 1;

        goto label8;

     label7:
        $z15 = 0;

     label8:
        $z16 = $z14 & $z15;

        return $z16;
    }

    public boolean isAsserted(org.apache.cxf.message.Message, org.apache.cxf.transports.http.configuration.HTTPServerPolicy, org.apache.cxf.transports.http.configuration.HTTPServerPolicy)
    {
        org.apache.cxf.message.Message r0;
        org.apache.cxf.transports.http.configuration.HTTPServerPolicy r2, r3;
        org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator r1;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r2 := @parameter1: org.apache.cxf.transports.http.configuration.HTTPServerPolicy;

        r3 := @parameter2: org.apache.cxf.transports.http.configuration.HTTPServerPolicy;

        $z0 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isOutbound(org.apache.cxf.message.Message)>(r0);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator: boolean equals(org.apache.cxf.transports.http.configuration.HTTPServerPolicy,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)>(r2, r3);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public java.lang.Class getDataClass()
    {
        org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator r0;

        r0 := @this: org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator;

        return class "Lorg/apache/cxf/transports/http/configuration/HTTPServerPolicy;";
    }

    public javax.xml.namespace.QName getDataClassName()
    {
        javax.xml.bind.JAXBElement $r1;
        org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator r3;
        org.apache.cxf.transports.http.configuration.ObjectFactory $r0;
        javax.xml.namespace.QName $r2;

        r3 := @this: org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator;

        $r0 = new org.apache.cxf.transports.http.configuration.ObjectFactory;

        specialinvoke $r0.<org.apache.cxf.transports.http.configuration.ObjectFactory: void <init>()>();

        $r1 = virtualinvoke $r0.<org.apache.cxf.transports.http.configuration.ObjectFactory: javax.xml.bind.JAXBElement createServer(org.apache.cxf.transports.http.configuration.HTTPServerPolicy)>(null);

        $r2 = virtualinvoke $r1.<javax.xml.bind.JAXBElement: javax.xml.namespace.QName getName()>();

        return $r2;
    }

    public static java.lang.String toString(org.apache.cxf.transports.http.configuration.HTTPServerPolicy)
    {
        org.apache.cxf.transports.http.configuration.HTTPServerPolicy r1;
        java.lang.StringBuilder $r0;
        long $l0;
        java.lang.String $r2, $r3;

        r1 := @parameter0: org.apache.cxf.transports.http.configuration.HTTPServerPolicy;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[ContentType=\"");

        $r2 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: java.lang.String getContentType()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", ReceiveTimeout=");

        $l0 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPServerPolicy: long getReceiveTimeout()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("])");

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public volatile boolean isAsserted(org.apache.cxf.message.Message, java.lang.Object, java.lang.Object)
    {
        org.apache.cxf.message.Message r1;
        org.apache.cxf.transports.http.configuration.HTTPServerPolicy $r4, $r5;
        org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator r0;
        java.lang.Object r2, r3;
        boolean $z0;

        r0 := @this: org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator;

        r1 := @parameter0: org.apache.cxf.message.Message;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r5 = (org.apache.cxf.transports.http.configuration.HTTPServerPolicy) r2;

        $r4 = (org.apache.cxf.transports.http.configuration.HTTPServerPolicy) r3;

        $z0 = virtualinvoke r0.<org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator: boolean isAsserted(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)>(r1, $r5, $r4);

        return $z0;
    }

    public volatile java.lang.Object intersect(java.lang.Object, java.lang.Object)
    {
        org.apache.cxf.transports.http.configuration.HTTPServerPolicy $r3, $r4, $r5;
        org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator r0;
        java.lang.Object r1, r2;

        r0 := @this: org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.apache.cxf.transports.http.configuration.HTTPServerPolicy) r1;

        $r3 = (org.apache.cxf.transports.http.configuration.HTTPServerPolicy) r2;

        $r5 = virtualinvoke r0.<org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator: org.apache.cxf.transports.http.configuration.HTTPServerPolicy intersect(org.apache.cxf.transports.http.configuration.HTTPServerPolicy,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)>($r4, $r3);

        return $r5;
    }
}
