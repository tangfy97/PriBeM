public class groovy.lang.Tuple extends java.util.AbstractList
{
    private java.lang.Object[] contents;
    private int hashCode;

    public void <init>(java.lang.Object[])
    {
        groovy.lang.Tuple r0;
        java.lang.Object[] r1;

        r0 := @this: groovy.lang.Tuple;

        r1 := @parameter0: java.lang.Object[];

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        r0.<groovy.lang.Tuple: java.lang.Object[] contents> = r1;

        return;
    }

    public java.lang.Object get(int)
    {
        java.lang.Object[] $r1;
        int i0;
        groovy.lang.Tuple r0;
        java.lang.Object $r2;

        r0 := @this: groovy.lang.Tuple;

        i0 := @parameter0: int;

        $r1 = r0.<groovy.lang.Tuple: java.lang.Object[] contents>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int size()
    {
        int $i0;
        groovy.lang.Tuple r0;
        java.lang.Object[] $r1;

        r0 := @this: groovy.lang.Tuple;

        $r1 = r0.<groovy.lang.Tuple: java.lang.Object[] contents>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        groovy.lang.Tuple r1, $r2;
        java.lang.Object r0;
        boolean $z0, $z1;

        r1 := @this: groovy.lang.Tuple;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof groovy.lang.Tuple;

        if $z0 == 0 goto label1;

        $r2 = (groovy.lang.Tuple) r0;

        $z1 = virtualinvoke r1.<groovy.lang.Tuple: boolean equals(groovy.lang.Tuple)>($r2);

        return $z1;

     label1:
        return 0;
    }

    public boolean equals(groovy.lang.Tuple)
    {
        java.lang.Object[] $r1, $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, i3;
        groovy.lang.Tuple r0, r2;
        java.lang.Object $r7, $r8;
        boolean $z0;

        r0 := @this: groovy.lang.Tuple;

        r2 := @parameter0: groovy.lang.Tuple;

        $r1 = r0.<groovy.lang.Tuple: java.lang.Object[] contents>;

        $i1 = lengthof $r1;

        $r3 = r2.<groovy.lang.Tuple: java.lang.Object[] contents>;

        $i0 = lengthof $r3;

        if $i1 != $i0 goto label4;

        i3 = 0;

     label1:
        $r4 = r0.<groovy.lang.Tuple: java.lang.Object[] contents>;

        $i2 = lengthof $r4;

        if i3 >= $i2 goto label3;

        $r5 = r0.<groovy.lang.Tuple: java.lang.Object[] contents>;

        $r8 = $r5[i3];

        $r6 = r2.<groovy.lang.Tuple: java.lang.Object[] contents>;

        $r7 = $r6[i3];

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean compareEqual(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 1;

     label4:
        return 0;
    }

    public int hashCode()
    {
        java.lang.Object[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i9, $i11;
        groovy.lang.Tuple r0;
        java.lang.Object r3;

        r0 := @this: groovy.lang.Tuple;

        $i0 = r0.<groovy.lang.Tuple: int hashCode>;

        if $i0 != 0 goto label5;

        i5 = 0;

     label1:
        $r1 = r0.<groovy.lang.Tuple: java.lang.Object[] contents>;

        $i1 = lengthof $r1;

        if i5 >= $i1 goto label4;

        $r2 = r0.<groovy.lang.Tuple: java.lang.Object[] contents>;

        r3 = $r2[i5];

        if r3 == null goto label2;

        $i6 = virtualinvoke r3.<java.lang.Object: int hashCode()>();

        goto label3;

     label2:
        $i9 = (int) 47806;

        $i6 = $i9;

     label3:
        $i3 = r0.<groovy.lang.Tuple: int hashCode>;

        $i4 = $i3 ^ $i6;

        r0.<groovy.lang.Tuple: int hashCode> = $i4;

        i5 = i5 + 1;

        goto label1;

     label4:
        $i2 = r0.<groovy.lang.Tuple: int hashCode>;

        if $i2 != 0 goto label5;

        $i11 = (int) 47806;

        r0.<groovy.lang.Tuple: int hashCode> = $i11;

     label5:
        $i7 = r0.<groovy.lang.Tuple: int hashCode>;

        return $i7;
    }

    public java.util.List subList(int, int)
    {
        java.lang.Object[] r0, $r2;
        int i0, i1, i2;
        groovy.lang.Tuple r1, $r3;

        r1 := @this: groovy.lang.Tuple;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        i2 = i0 - i1;

        r0 = newarray (java.lang.Object)[i2];

        $r2 = r1.<groovy.lang.Tuple: java.lang.Object[] contents>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, i1, r0, 0, i2);

        $r3 = new groovy.lang.Tuple;

        specialinvoke $r3.<groovy.lang.Tuple: void <init>(java.lang.Object[])>(r0);

        return $r3;
    }
}
