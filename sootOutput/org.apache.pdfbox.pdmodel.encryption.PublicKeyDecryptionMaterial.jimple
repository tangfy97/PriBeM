public class org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial extends org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial
{
    private java.lang.String password;
    private java.security.KeyStore keyStore;
    private java.lang.String alias;

    public void <init>(java.security.KeyStore, java.lang.String, java.lang.String)
    {
        java.security.KeyStore r1;
        java.lang.String r2, r3;
        org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial r0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial;

        r1 := @parameter0: java.security.KeyStore;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.lang.String password> = null;

        r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.KeyStore keyStore> = null;

        r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.lang.String alias> = null;

        r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.KeyStore keyStore> = r1;

        r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.lang.String alias> = r2;

        r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.lang.String password> = r3;

        return;
    }

    public java.security.cert.X509Certificate getCertificate() throws java.security.KeyStoreException
    {
        java.security.cert.X509Certificate $r8, $r15;
        java.util.Enumeration $r10;
        java.security.KeyStoreException $r4;
        int $i0;
        java.lang.String $r2, $r5, r12;
        org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial r0;
        boolean $z0;
        java.security.KeyStore $r1, $r3, $r6, $r9, $r13;
        java.security.cert.Certificate $r7, $r14;
        java.lang.Object $r11;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial;

        $r1 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.KeyStore keyStore>;

        $i0 = virtualinvoke $r1.<java.security.KeyStore: int size()>();

        if $i0 != 1 goto label1;

        $r9 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.KeyStore keyStore>;

        $r10 = virtualinvoke $r9.<java.security.KeyStore: java.util.Enumeration aliases()>();

        $r11 = interfaceinvoke $r10.<java.util.Enumeration: java.lang.Object nextElement()>();

        r12 = (java.lang.String) $r11;

        $r13 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.KeyStore keyStore>;

        $r14 = virtualinvoke $r13.<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>(r12);

        $r15 = (java.security.cert.X509Certificate) $r14;

        return $r15;

     label1:
        $r3 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.KeyStore keyStore>;

        $r2 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.lang.String alias>;

        $z0 = virtualinvoke $r3.<java.security.KeyStore: boolean containsAlias(java.lang.String)>($r2);

        if $z0 == 0 goto label2;

        $r6 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.KeyStore keyStore>;

        $r5 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.lang.String alias>;

        $r7 = virtualinvoke $r6.<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>($r5);

        $r8 = (java.security.cert.X509Certificate) $r7;

        return $r8;

     label2:
        $r4 = new java.security.KeyStoreException;

        specialinvoke $r4.<java.security.KeyStoreException: void <init>(java.lang.String)>("the keystore does not contain the given alias");

        throw $r4;
    }

    public java.lang.String getPassword()
    {
        java.lang.String $r1;
        org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial r0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial;

        $r1 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.lang.String password>;

        return $r1;
    }

    public java.security.Key getPrivateKey() throws java.security.KeyStoreException
    {
        java.util.Enumeration $r11;
        java.security.KeyStoreException $r4, $r19, $r21;
        java.security.UnrecoverableKeyException $r20;
        int $i0;
        java.lang.String $r2, $r5, $r7, r13, $r14;
        org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial r0;
        boolean $z0;
        java.security.KeyStore $r1, $r3, $r6, $r10, $r15;
        java.security.Key $r9, $r17;
        java.security.NoSuchAlgorithmException $r18;
        char[] $r8, $r16;
        java.lang.Object $r12;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial;

     label1:
        $r1 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.KeyStore keyStore>;

        $i0 = virtualinvoke $r1.<java.security.KeyStore: int size()>();

        if $i0 != 1 goto label3;

        $r10 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.KeyStore keyStore>;

        $r11 = virtualinvoke $r10.<java.security.KeyStore: java.util.Enumeration aliases()>();

        $r12 = interfaceinvoke $r11.<java.util.Enumeration: java.lang.Object nextElement()>();

        r13 = (java.lang.String) $r12;

        $r15 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.KeyStore keyStore>;

        $r14 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.lang.String password>;

        $r16 = virtualinvoke $r14.<java.lang.String: char[] toCharArray()>();

        $r17 = virtualinvoke $r15.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(r13, $r16);

     label2:
        return $r17;

     label3:
        $r3 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.KeyStore keyStore>;

        $r2 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.lang.String alias>;

        $z0 = virtualinvoke $r3.<java.security.KeyStore: boolean containsAlias(java.lang.String)>($r2);

        if $z0 == 0 goto label5;

        $r6 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.KeyStore keyStore>;

        $r7 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.lang.String alias>;

        $r5 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.lang.String password>;

        $r8 = virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

        $r9 = virtualinvoke $r6.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r7, $r8);

     label4:
        return $r9;

     label5:
        $r4 = new java.security.KeyStoreException;

        specialinvoke $r4.<java.security.KeyStoreException: void <init>(java.lang.String)>("the keystore does not contain the given alias");

        throw $r4;

     label6:
        $r20 := @caughtexception;

        $r21 = new java.security.KeyStoreException;

        specialinvoke $r21.<java.security.KeyStoreException: void <init>(java.lang.String)>("the private key is not recoverable");

        throw $r21;

     label7:
        $r18 := @caughtexception;

        $r19 = new java.security.KeyStoreException;

        specialinvoke $r19.<java.security.KeyStoreException: void <init>(java.lang.String)>("the algorithm necessary to recover the key is not available");

        throw $r19;

        catch java.security.UnrecoverableKeyException from label1 to label2 with label6;
        catch java.security.UnrecoverableKeyException from label3 to label4 with label6;
        catch java.security.UnrecoverableKeyException from label5 to label6 with label6;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label7;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label7;
        catch java.security.NoSuchAlgorithmException from label5 to label6 with label7;
    }
}
