final class org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache extends org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$RangeCache
{
    private final java.lang.String type;
    private final org.waveprotocol.wave.model.document.operation.Attributes attributes;
    final org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target this$1;

    void <init>(org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target, java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target r1;
        java.lang.String r2;
        org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache r0;
        org.waveprotocol.wave.model.document.operation.Attributes r3;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.waveprotocol.wave.model.document.operation.Attributes;

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target this$1> = r1;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$RangeCache: void <init>(org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$1)>(null);

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache: java.lang.String type> = r2;

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache: org.waveprotocol.wave.model.document.operation.Attributes attributes> = r3;

        return;
    }

    void resolveRetain(int)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target $r3, $r4;
        int i0;
        java.lang.String $r2;
        org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache r0;
        org.waveprotocol.wave.model.document.operation.Attributes $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache;

        i0 := @parameter0: int;

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target this$1>;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache: java.lang.String type>;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache: org.waveprotocol.wave.model.document.operation.Attributes attributes>;

        staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target: void access$200(org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target,java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>($r3, $r2, $r1);

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target this$1>;

        staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target: int access$304(org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target)>($r4);

        return;
    }

    void resolveDeleteElementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target $r1, $r2, $r3;
        java.lang.String r4;
        org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache r0;
        org.waveprotocol.wave.model.document.operation.Attributes r5;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target this$1>;

        staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target: int access$304(org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target)>($r1);

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target this$1>;

        $r3 = staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target access$400(org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target)>($r2);

        staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target: int access$304(org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target)>($r3);

        return;
    }

    void resolveReplaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target $r3, $r4;
        java.lang.String $r2;
        org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache r0;
        org.waveprotocol.wave.model.document.operation.Attributes r1, r5;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache;

        r5 := @parameter0: org.waveprotocol.wave.model.document.operation.Attributes;

        r1 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target this$1>;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache: java.lang.String type>;

        staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target: void access$200(org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target,java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>($r3, $r2, r1);

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target this$1>;

        staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target: int access$304(org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target)>($r4);

        return;
    }

    void resolveUpdateAttributes(org.waveprotocol.wave.model.document.operation.AttributesUpdate)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target $r3, $r6;
        java.lang.String $r4;
        org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache r0;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate r1;
        org.waveprotocol.wave.model.document.operation.Attributes $r2, $r5;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.AttributesUpdate;

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target this$1>;

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache: java.lang.String type>;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache: org.waveprotocol.wave.model.document.operation.Attributes attributes>;

        $r5 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.operation.Attributes: org.waveprotocol.wave.model.document.operation.Attributes updateWith(org.waveprotocol.wave.model.document.operation.AttributesUpdate)>(r1);

        staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target: void access$200(org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target,java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>($r3, $r4, $r5);

        $r6 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target$DeleteElementStartCache: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target this$1>;

        staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target: int access$304(org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$Target)>($r6);

        return;
    }
}
