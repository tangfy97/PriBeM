public class org.apache.xalan.processor.StylesheetHandler extends org.xml.sax.helpers.DefaultHandler implements javax.xml.transform.sax.TemplatesHandler, org.apache.xml.utils.PrefixResolver, org.apache.xml.utils.NodeConsumer
{
    private int m_stylesheetLevel;
    private boolean m_parsingComplete;
    private java.util.Vector m_prefixMappings;
    private boolean m_shouldProcess;
    private java.lang.String m_fragmentIDString;
    private int m_elementID;
    private int m_fragmentID;
    private org.apache.xalan.processor.TransformerFactoryImpl m_stylesheetProcessor;
    static final int STYPE_ROOT;
    static final int STYPE_INCLUDE;
    static final int STYPE_IMPORT;
    private int m_stylesheetType;
    private java.util.Stack m_stylesheets;
    org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot;
    org.apache.xalan.templates.Stylesheet m_lastPoppedStylesheet;
    private java.util.Stack m_processors;
    private org.apache.xalan.processor.XSLTSchema m_schema;
    private java.util.Stack m_elems;
    private int m_docOrderCount;
    java.util.Stack m_baseIdentifiers;
    private java.util.Stack m_stylesheetLocatorStack;
    private java.util.Stack m_importStack;
    private boolean warnedAboutOldXSLTNamespace;
    java.util.Stack m_nsSupportStack;
    private org.w3c.dom.Node m_originatingNode;
    private org.apache.xml.utils.BoolStack m_spacePreserveStack;

    public void <init>(org.apache.xalan.processor.TransformerFactoryImpl) throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.XSLTSchema $r15;
        org.apache.xalan.processor.TransformerFactoryImpl r11;
        java.util.Stack $r13, $r14, $r16, $r17, $r18, $r19, $r20;
        java.util.Vector $r12;
        org.apache.xalan.processor.StylesheetHandler r0;
        int $i1;
        org.apache.xml.utils.BoolStack $r21;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r11 := @parameter0: org.apache.xalan.processor.TransformerFactoryImpl;

        specialinvoke r0.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        $i1 = (int) -1;

        r0.<org.apache.xalan.processor.StylesheetHandler: int m_stylesheetLevel> = $i1;

        r0.<org.apache.xalan.processor.StylesheetHandler: boolean m_parsingComplete> = 0;

        $r12 = new java.util.Vector;

        specialinvoke $r12.<java.util.Vector: void <init>()>();

        r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Vector m_prefixMappings> = $r12;

        r0.<org.apache.xalan.processor.StylesheetHandler: boolean m_shouldProcess> = 1;

        r0.<org.apache.xalan.processor.StylesheetHandler: int m_elementID> = 0;

        r0.<org.apache.xalan.processor.StylesheetHandler: int m_fragmentID> = 0;

        r0.<org.apache.xalan.processor.StylesheetHandler: int m_stylesheetType> = 1;

        $r13 = new java.util.Stack;

        specialinvoke $r13.<java.util.Stack: void <init>()>();

        r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_stylesheets> = $r13;

        $r14 = new java.util.Stack;

        specialinvoke $r14.<java.util.Stack: void <init>()>();

        r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_processors> = $r14;

        $r15 = new org.apache.xalan.processor.XSLTSchema;

        specialinvoke $r15.<org.apache.xalan.processor.XSLTSchema: void <init>()>();

        r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTSchema m_schema> = $r15;

        $r16 = new java.util.Stack;

        specialinvoke $r16.<java.util.Stack: void <init>()>();

        r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_elems> = $r16;

        r0.<org.apache.xalan.processor.StylesheetHandler: int m_docOrderCount> = 0;

        $r17 = new java.util.Stack;

        specialinvoke $r17.<java.util.Stack: void <init>()>();

        r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_baseIdentifiers> = $r17;

        $r18 = new java.util.Stack;

        specialinvoke $r18.<java.util.Stack: void <init>()>();

        r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_stylesheetLocatorStack> = $r18;

        $r19 = new java.util.Stack;

        specialinvoke $r19.<java.util.Stack: void <init>()>();

        r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_importStack> = $r19;

        r0.<org.apache.xalan.processor.StylesheetHandler: boolean warnedAboutOldXSLTNamespace> = 0;

        $r20 = new java.util.Stack;

        specialinvoke $r20.<java.util.Stack: void <init>()>();

        r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_nsSupportStack> = $r20;

        $r21 = new org.apache.xml.utils.BoolStack;

        specialinvoke $r21.<org.apache.xml.utils.BoolStack: void <init>()>();

        r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xml.utils.BoolStack m_spacePreserveStack> = $r21;

        virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: void init(org.apache.xalan.processor.TransformerFactoryImpl)>(r11);

        return;
    }

    void init(org.apache.xalan.processor.TransformerFactoryImpl)
    {
        org.apache.xalan.processor.XSLTSchema $r2;
        org.apache.xalan.processor.StylesheetHandler r0;
        org.apache.xalan.processor.XSLTElementProcessor $r4;
        org.apache.xalan.processor.TransformerFactoryImpl r1;
        java.util.Stack $r3;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r1 := @parameter0: org.apache.xalan.processor.TransformerFactoryImpl;

        r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.TransformerFactoryImpl m_stylesheetProcessor> = r1;

        $r3 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_processors>;

        $r2 = r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTSchema m_schema>;

        $r4 = virtualinvoke $r2.<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementProcessor getElementProcessor()>();

        virtualinvoke $r3.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r4);

        virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: void pushNewNamespaceSupport()>();

        return;
    }

    public org.apache.xpath.XPath createXPath(java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.XPath $r3;
        org.apache.xalan.templates.ElemTemplateElement r5;
        javax.xml.transform.ErrorListener $r2;
        org.apache.xalan.processor.TransformerFactoryImpl $r1;
        org.apache.xalan.templates.StylesheetRoot $r7;
        org.apache.xalan.processor.StylesheetHandler r0;
        java.lang.String r4;
        org.apache.xalan.extensions.ExpressionVisitor $r6;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.TransformerFactoryImpl m_stylesheetProcessor>;

        $r2 = virtualinvoke $r1.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener getErrorListener()>();

        $r3 = new org.apache.xpath.XPath;

        specialinvoke $r3.<org.apache.xpath.XPath: void <init>(java.lang.String,javax.xml.transform.SourceLocator,org.apache.xml.utils.PrefixResolver,int,javax.xml.transform.ErrorListener)>(r4, r5, r0, 0, $r2);

        $r6 = new org.apache.xalan.extensions.ExpressionVisitor;

        $r7 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()>();

        specialinvoke $r6.<org.apache.xalan.extensions.ExpressionVisitor: void <init>(org.apache.xalan.templates.StylesheetRoot)>($r7);

        virtualinvoke $r3.<org.apache.xpath.XPath: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>($r3, $r6);

        return $r3;
    }

    org.apache.xpath.XPath createMatchPatternXPath(java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.XPath $r3;
        org.apache.xalan.templates.ElemTemplateElement r5;
        javax.xml.transform.ErrorListener $r2;
        org.apache.xalan.processor.TransformerFactoryImpl $r1;
        org.apache.xalan.templates.StylesheetRoot $r7;
        org.apache.xalan.processor.StylesheetHandler r0;
        java.lang.String r4;
        org.apache.xalan.extensions.ExpressionVisitor $r6;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.TransformerFactoryImpl m_stylesheetProcessor>;

        $r2 = virtualinvoke $r1.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener getErrorListener()>();

        $r3 = new org.apache.xpath.XPath;

        specialinvoke $r3.<org.apache.xpath.XPath: void <init>(java.lang.String,javax.xml.transform.SourceLocator,org.apache.xml.utils.PrefixResolver,int,javax.xml.transform.ErrorListener)>(r4, r5, r0, 1, $r2);

        $r6 = new org.apache.xalan.extensions.ExpressionVisitor;

        $r7 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()>();

        specialinvoke $r6.<org.apache.xalan.extensions.ExpressionVisitor: void <init>(org.apache.xalan.templates.StylesheetRoot)>($r7);

        virtualinvoke $r3.<org.apache.xpath.XPath: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>($r3, $r6);

        return $r3;
    }

    public java.lang.String getNamespaceForPrefix(java.lang.String)
    {
        org.xml.sax.helpers.NamespaceSupport $r1;
        org.apache.xalan.processor.StylesheetHandler r0;
        java.lang.String r2, $r3;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.xml.sax.helpers.NamespaceSupport getNamespaceSupport()>();

        $r3 = virtualinvoke $r1.<org.xml.sax.helpers.NamespaceSupport: java.lang.String getURI(java.lang.String)>(r2);

        return $r3;
    }

    public java.lang.String getNamespaceForPrefix(java.lang.String, org.w3c.dom.Node)
    {
        java.lang.String r1;
        org.apache.xalan.processor.StylesheetHandler r0;
        org.w3c.dom.Node r2;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.w3c.dom.Node;

        specialinvoke r0.<org.apache.xalan.processor.StylesheetHandler: void assertion(boolean,java.lang.String)>(1, "can\'t process a context node in StylesheetHandler!");

        return null;
    }

    private boolean stackContains(java.util.Stack, java.lang.String)
    {
        java.util.Stack r0;
        org.apache.xalan.processor.StylesheetHandler r4;
        int $i0, i1;
        java.lang.Object $r1;
        java.lang.String r2, r3;
        boolean $z0, z1;

        r4 := @this: org.apache.xalan.processor.StylesheetHandler;

        r0 := @parameter0: java.util.Stack;

        r3 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.util.Vector: int size()>();

        z1 = 0;

        i1 = 0;

        goto label3;

     label1:
        $r1 = virtualinvoke r0.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r2 = (java.lang.String) $r1;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label2;

        z1 = 1;

        goto label4;

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < $i0 goto label1;

     label4:
        return z1;
    }

    public javax.xml.transform.Templates getTemplates()
    {
        org.apache.xalan.templates.StylesheetRoot $r1;
        org.apache.xalan.processor.StylesheetHandler r0;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $r1 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()>();

        return $r1;
    }

    public void setSystemId(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xalan.processor.StylesheetHandler r0;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: void pushBaseIndentifier(java.lang.String)>(r1);

        return;
    }

    public java.lang.String getSystemId()
    {
        java.lang.String $r1;
        org.apache.xalan.processor.StylesheetHandler r0;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $r1 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: java.lang.String getBaseIdentifier()>();

        return $r1;
    }

    public org.xml.sax.InputSource resolveEntity(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.xml.sax.InputSource $r4;
        org.apache.xalan.processor.StylesheetHandler r0;
        org.apache.xalan.processor.XSLTElementProcessor $r1;
        java.lang.String r2, r3;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor getCurrentProcessor()>();

        $r4 = virtualinvoke $r1.<org.apache.xalan.processor.XSLTElementProcessor: org.xml.sax.InputSource resolveEntity(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String)>(r0, r2, r3);

        return $r4;
    }

    public void notationDecl(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.xalan.processor.StylesheetHandler r0;
        org.apache.xalan.processor.XSLTElementProcessor $r1;
        java.lang.String r2, r3, r4;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor getCurrentProcessor()>();

        virtualinvoke $r1.<org.apache.xalan.processor.XSLTElementProcessor: void notationDecl(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)>(r0, r2, r3, r4);

        return;
    }

    public void unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.xalan.processor.StylesheetHandler r0;
        org.apache.xalan.processor.XSLTElementProcessor $r1;
        java.lang.String r2, r3, r4, r5;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor getCurrentProcessor()>();

        virtualinvoke $r1.<org.apache.xalan.processor.XSLTElementProcessor: void unparsedEntityDecl(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r0, r2, r3, r4, r5);

        return;
    }

    org.apache.xalan.processor.XSLTElementProcessor getProcessorFor(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTElementDef $r2;
        java.lang.Object[] $r6;
        java.lang.Double $r12;
        org.apache.xalan.templates.Stylesheet $r9, $r10;
        org.apache.xalan.processor.StylesheetHandler r0;
        byte $b0, $b1;
        int $i2, $i3;
        java.lang.String r3, r4, r7, $r8, $r11;
        boolean $z0, $z1, $z2;
        double $d0, $d1;
        org.apache.xalan.processor.XSLTElementProcessor $r1, $r5, r13;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor getCurrentProcessor()>();

        $r2 = virtualinvoke $r1.<org.apache.xalan.processor.XSLTElementProcessor: org.apache.xalan.processor.XSLTElementDef getElemDef()>();

        $r5 = virtualinvoke $r2.<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementProcessor getProcessorFor(java.lang.String,java.lang.String)>(r3, r4);

        r13 = $r5;

        if null != $r5 goto label3;

        $z0 = $r1 instanceof org.apache.xalan.processor.ProcessorStylesheetDoc;

        if $z0 != 0 goto label3;

        $r9 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.Stylesheet getStylesheet()>();

        if null == $r9 goto label2;

        $r10 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.Stylesheet getStylesheet()>();

        $r11 = virtualinvoke $r10.<org.apache.xalan.templates.Stylesheet: java.lang.String getVersion()>();

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r11);

        $d0 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        $b0 = $d0 cmpl 1.0;

        $i2 = (int) $b0;

        if $i2 > 0 goto label2;

        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/1999/XSL/Transform");

        if $z1 != 0 goto label1;

        $z2 = $r1 instanceof org.apache.xalan.processor.ProcessorStylesheetElement;

        if $z2 != 0 goto label2;

     label1:
        $d1 = specialinvoke r0.<org.apache.xalan.processor.StylesheetHandler: double getElemVersion()>();

        $b1 = $d1 cmpl 1.0;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label3;

     label2:
        r13 = virtualinvoke $r2.<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementProcessor getProcessorForUnknown(java.lang.String,java.lang.String)>(r3, r4);

     label3:
        if null != r13 goto label4;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r7;

        $r8 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_NOT_ALLOWED_IN_POSITION", $r6);

        virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: void error(java.lang.String,java.lang.Exception)>($r8, null);

     label4:
        return r13;
    }

    public void setDocumentLocator(org.xml.sax.Locator)
    {
        org.apache.xalan.processor.StylesheetHandler r0;
        org.xml.sax.Locator r2;
        java.util.Stack $r3;
        org.apache.xml.utils.SAXSourceLocator $r1;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter0: org.xml.sax.Locator;

        $r3 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_stylesheetLocatorStack>;

        $r1 = new org.apache.xml.utils.SAXSourceLocator;

        specialinvoke $r1.<org.apache.xml.utils.SAXSourceLocator: void <init>(org.xml.sax.Locator)>(r2);

        virtualinvoke $r3.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r1);

        return;
    }

    public void startDocument() throws org.xml.sax.SAXException
    {
        int $i0, $i1;
        org.apache.xalan.processor.StylesheetHandler r0;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $i0 = r0.<org.apache.xalan.processor.StylesheetHandler: int m_stylesheetLevel>;

        $i1 = $i0 + 1;

        r0.<org.apache.xalan.processor.StylesheetHandler: int m_stylesheetLevel> = $i1;

        virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: void pushSpaceHandling(boolean)>(0);

        return;
    }

    public boolean isStylesheetParsingComplete()
    {
        org.apache.xalan.processor.StylesheetHandler r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $z0 = r0.<org.apache.xalan.processor.StylesheetHandler: boolean m_parsingComplete>;

        return $z0;
    }

    public void endDocument() throws org.xml.sax.SAXException
    {
        javax.xml.transform.TransformerException $r2, $r6;
        org.apache.xalan.processor.XSLTElementProcessor $r4;
        org.apache.xalan.templates.StylesheetRoot $r1, $r5;
        org.apache.xalan.processor.StylesheetHandler r0;
        org.xml.sax.SAXException $r7;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

     label1:
        $r1 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()>();

        if null == $r1 goto label2;

        $i0 = r0.<org.apache.xalan.processor.StylesheetHandler: int m_stylesheetLevel>;

        if 0 != $i0 goto label3;

        $r5 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()>();

        virtualinvoke $r5.<org.apache.xalan.templates.StylesheetRoot: void recompose()>();

        goto label3;

     label2:
        $r2 = new javax.xml.transform.TransformerException;

        $r3 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_NO_STYLESHEETROOT", null);

        specialinvoke $r2.<javax.xml.transform.TransformerException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label3:
        $r4 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor getCurrentProcessor()>();

        if null == $r4 goto label4;

        virtualinvoke $r4.<org.apache.xalan.processor.XSLTElementProcessor: void startNonText(org.apache.xalan.processor.StylesheetHandler)>(r0);

     label4:
        $i1 = r0.<org.apache.xalan.processor.StylesheetHandler: int m_stylesheetLevel>;

        $i2 = $i1 - 1;

        r0.<org.apache.xalan.processor.StylesheetHandler: int m_stylesheetLevel> = $i2;

        virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: void popSpaceHandling()>();

        $i3 = r0.<org.apache.xalan.processor.StylesheetHandler: int m_stylesheetLevel>;

        if $i3 >= 0 goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        r0.<org.apache.xalan.processor.StylesheetHandler: boolean m_parsingComplete> = $z0;

     label7:
        goto label9;

     label8:
        $r6 := @caughtexception;

        $r7 = new org.xml.sax.SAXException;

        specialinvoke $r7.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r6);

        throw $r7;

     label9:
        return;

        catch javax.xml.transform.TransformerException from label1 to label7 with label8;
    }

    public void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        java.util.Vector $r2, $r4;
        org.apache.xalan.processor.StylesheetHandler r0;
        java.lang.String r1, r3;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Vector m_prefixMappings>;

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>(r1);

        $r4 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Vector m_prefixMappings>;

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>(r3);

        return;
    }

    public void endPrefixMapping(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String r1;
        org.apache.xalan.processor.StylesheetHandler r0;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r1 := @parameter0: java.lang.String;

        return;
    }

    private void flushCharacters() throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTElementProcessor $r1;
        org.apache.xalan.processor.StylesheetHandler r0;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $r1 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor getCurrentProcessor()>();

        if null == $r1 goto label1;

        virtualinvoke $r1.<org.apache.xalan.processor.XSLTElementProcessor: void startNonText(org.apache.xalan.processor.StylesheetHandler)>(r0);

     label1:
        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        java.util.Vector $r2, $r3, $r5, $r8;
        org.apache.xalan.processor.StylesheetHandler r0;
        int $i0, $i1, $i2, i3, i4;
        org.xml.sax.Attributes r9;
        java.lang.String r7, r10, r11, r12, r14;
        boolean $z0;
        org.xml.sax.helpers.NamespaceSupport $r1;
        org.apache.xalan.processor.XSLTElementProcessor $r13;
        java.lang.Object $r4, $r6;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r10 := @parameter0: java.lang.String;

        r11 := @parameter1: java.lang.String;

        r12 := @parameter2: java.lang.String;

        r9 := @parameter3: org.xml.sax.Attributes;

        $r1 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.xml.sax.helpers.NamespaceSupport getNamespaceSupport()>();

        virtualinvoke $r1.<org.xml.sax.helpers.NamespaceSupport: void pushContext()>();

        $r2 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Vector m_prefixMappings>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        i3 = 0;

        goto label2;

     label1:
        $r3 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Vector m_prefixMappings>;

        i4 = i3 + 1;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>(i3);

        r14 = (java.lang.String) $r4;

        $r5 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Vector m_prefixMappings>;

        $r6 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>(i4);

        r7 = (java.lang.String) $r6;

        virtualinvoke $r1.<org.xml.sax.helpers.NamespaceSupport: boolean declarePrefix(java.lang.String,java.lang.String)>(r14, r7);

        i3 = i4 + 1;

     label2:
        if i3 < $i0 goto label1;

        $r8 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Vector m_prefixMappings>;

        virtualinvoke $r8.<java.util.Vector: void removeAllElements()>();

        $i1 = r0.<org.apache.xalan.processor.StylesheetHandler: int m_elementID>;

        $i2 = $i1 + 1;

        r0.<org.apache.xalan.processor.StylesheetHandler: int m_elementID> = $i2;

        specialinvoke r0.<org.apache.xalan.processor.StylesheetHandler: void checkForFragmentID(org.xml.sax.Attributes)>(r9);

        $z0 = r0.<org.apache.xalan.processor.StylesheetHandler: boolean m_shouldProcess>;

        if $z0 != 0 goto label3;

        return;

     label3:
        specialinvoke r0.<org.apache.xalan.processor.StylesheetHandler: void flushCharacters()>();

        virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: void pushSpaceHandling(org.xml.sax.Attributes)>(r9);

        $r13 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor getProcessorFor(java.lang.String,java.lang.String,java.lang.String)>(r10, r11, r12);

        if null == $r13 goto label4;

        virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: void pushProcessor(org.apache.xalan.processor.XSLTElementProcessor)>($r13);

        virtualinvoke $r13.<org.apache.xalan.processor.XSLTElementProcessor: void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r0, r10, r11, r12, r9);

        goto label5;

     label4:
        r0.<org.apache.xalan.processor.StylesheetHandler: boolean m_shouldProcess> = 0;

        virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: void popSpaceHandling()>();

     label5:
        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.xml.sax.helpers.NamespaceSupport $r5;
        org.apache.xalan.processor.XSLTElementProcessor $r1;
        org.apache.xalan.processor.StylesheetHandler r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String r2, r3, r4;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $i0 = r0.<org.apache.xalan.processor.StylesheetHandler: int m_elementID>;

        $i1 = $i0 - 1;

        r0.<org.apache.xalan.processor.StylesheetHandler: int m_elementID> = $i1;

        $z0 = r0.<org.apache.xalan.processor.StylesheetHandler: boolean m_shouldProcess>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $i2 = r0.<org.apache.xalan.processor.StylesheetHandler: int m_elementID>;

        $i4 = $i2 + 1;

        $i3 = r0.<org.apache.xalan.processor.StylesheetHandler: int m_fragmentID>;

        if $i4 != $i3 goto label2;

        r0.<org.apache.xalan.processor.StylesheetHandler: boolean m_shouldProcess> = 0;

     label2:
        specialinvoke r0.<org.apache.xalan.processor.StylesheetHandler: void flushCharacters()>();

        virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: void popSpaceHandling()>();

        $r1 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor getCurrentProcessor()>();

        virtualinvoke $r1.<org.apache.xalan.processor.XSLTElementProcessor: void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)>(r0, r2, r3, r4);

        virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor popProcessor()>();

        $r5 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.xml.sax.helpers.NamespaceSupport getNamespaceSupport()>();

        virtualinvoke $r5.<org.xml.sax.helpers.NamespaceSupport: void popContext()>();

        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTElementDef $r2;
        org.apache.xalan.processor.XSLTElementProcessor $r1, r5;
        org.apache.xalan.processor.StylesheetHandler r0;
        int $i0, i1, i2;
        char[] r3;
        java.lang.String $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r3 := @parameter0: char[];

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $z0 = r0.<org.apache.xalan.processor.StylesheetHandler: boolean m_shouldProcess>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor getCurrentProcessor()>();

        r5 = $r1;

        $r2 = virtualinvoke $r1.<org.apache.xalan.processor.XSLTElementProcessor: org.apache.xalan.processor.XSLTElementDef getElemDef()>();

        $i0 = virtualinvoke $r2.<org.apache.xalan.processor.XSLTElementDef: int getType()>();

        if $i0 == 2 goto label2;

        r5 = virtualinvoke $r2.<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementProcessor getProcessorFor(java.lang.String,java.lang.String)>(null, "text()");

     label2:
        if null != r5 goto label3;

        $z1 = staticinvoke <org.apache.xml.utils.XMLCharacterRecognizer: boolean isWhiteSpace(char[],int,int)>(r3, i1, i2);

        if $z1 != 0 goto label4;

        $r4 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_NONWHITESPACE_NOT_ALLOWED_IN_POSITION", null);

        virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: void error(java.lang.String,java.lang.Exception)>($r4, null);

        goto label4;

     label3:
        virtualinvoke r5.<org.apache.xalan.processor.XSLTElementProcessor: void characters(org.apache.xalan.processor.StylesheetHandler,char[],int,int)>(r0, r3, i1, i2);

     label4:
        return;
    }

    public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.StylesheetHandler r0;
        int i0, i1;
        char[] r2;
        org.apache.xalan.processor.XSLTElementProcessor $r1;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<org.apache.xalan.processor.StylesheetHandler: boolean m_shouldProcess>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor getCurrentProcessor()>();

        virtualinvoke $r1.<org.apache.xalan.processor.XSLTElementProcessor: void ignorableWhitespace(org.apache.xalan.processor.StylesheetHandler,char[],int,int)>(r0, r2, i0, i1);

        return;
    }

    public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        javax.xml.transform.TransformerException $r7;
        java.util.Stack $r3, $r15;
        org.apache.xalan.processor.StylesheetHandler r0;
        int $i0, $i1;
        java.lang.String r1, $r2, r6, $r9, $r10, $r11, r13, r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.xalan.templates.ElemForEach r17;
        org.apache.xalan.processor.XSLTElementProcessor $r5;
        java.lang.Exception $r12;
        org.apache.xml.utils.SAXSourceLocator $r8;
        java.lang.Object $r4, $r16;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $z0 = r0.<org.apache.xalan.processor.StylesheetHandler: boolean m_shouldProcess>;

        if $z0 != 0 goto label1;

        return;

     label1:
        r13 = "";

        r14 = r1;

        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(58);

        if $i0 < 0 goto label2;

        $r11 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r13 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: java.lang.String getNamespaceForPrefix(java.lang.String)>($r11);

        $i1 = $i0 + 1;

        r14 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

     label2:
        $r2 = "xalan-doc-cache-off";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label3;

        $r9 = "xalan:doc-cache-off";

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 != 0 goto label3;

        $r10 = "doc-cache-off";

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r14);

        if $z3 == 0 goto label5;

        $z4 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("org.apache.xalan.xslt.extensions.Redirect");

        if $z4 == 0 goto label5;

     label3:
        $r15 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_elems>;

        $r16 = virtualinvoke $r15.<java.util.Stack: java.lang.Object peek()>();

        $z5 = $r16 instanceof org.apache.xalan.templates.ElemForEach;

        if $z5 != 0 goto label4;

        $r7 = new javax.xml.transform.TransformerException;

        $r8 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xml.utils.SAXSourceLocator getLocator()>();

        specialinvoke $r7.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator)>("xalan:doc-cache-off not allowed here!", $r8);

        throw $r7;

     label4:
        $r3 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_elems>;

        $r4 = virtualinvoke $r3.<java.util.Stack: java.lang.Object peek()>();

        r17 = (org.apache.xalan.templates.ElemForEach) $r4;

        r17.<org.apache.xalan.templates.ElemForEach: boolean m_doc_cache_off> = 1;

     label5:
        goto label7;

     label6:
        $r12 := @caughtexception;

     label7:
        specialinvoke r0.<org.apache.xalan.processor.StylesheetHandler: void flushCharacters()>();

        $r5 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor getCurrentProcessor()>();

        virtualinvoke $r5.<org.apache.xalan.processor.XSLTElementProcessor: void processingInstruction(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String)>(r0, r1, r6);

        return;

        catch java.lang.Exception from label2 to label5 with label6;
    }

    public void skippedEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.StylesheetHandler r0;
        org.apache.xalan.processor.XSLTElementProcessor $r1;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.xalan.processor.StylesheetHandler: boolean m_shouldProcess>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor getCurrentProcessor()>();

        virtualinvoke $r1.<org.apache.xalan.processor.XSLTElementProcessor: void skippedEntity(org.apache.xalan.processor.StylesheetHandler,java.lang.String)>(r0, r2);

        return;
    }

    public void warn(java.lang.String, java.lang.Object[]) throws org.xml.sax.SAXException
    {
        java.lang.Object[] r1;
        javax.xml.transform.TransformerException $r7, $r8;
        javax.xml.transform.ErrorListener $r6;
        org.apache.xalan.processor.TransformerFactoryImpl $r5;
        org.apache.xml.utils.SAXSourceLocator $r4;
        org.apache.xalan.processor.StylesheetHandler r3;
        org.xml.sax.SAXException $r9;
        java.lang.String r0, $r2;

        r3 := @this: org.apache.xalan.processor.StylesheetHandler;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        $r2 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createWarning(java.lang.String,java.lang.Object[])>(r0, r1);

        $r4 = virtualinvoke r3.<org.apache.xalan.processor.StylesheetHandler: org.apache.xml.utils.SAXSourceLocator getLocator()>();

        $r5 = r3.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.TransformerFactoryImpl m_stylesheetProcessor>;

        $r6 = virtualinvoke $r5.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener getErrorListener()>();

     label1:
        if null == $r6 goto label2;

        $r7 = new javax.xml.transform.TransformerException;

        specialinvoke $r7.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator)>($r2, $r4);

        interfaceinvoke $r6.<javax.xml.transform.ErrorListener: void warning(javax.xml.transform.TransformerException)>($r7);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new org.xml.sax.SAXException;

        specialinvoke $r9.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r8);

        throw $r9;

     label4:
        return;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
    }

    private void assertion(boolean, java.lang.String) throws java.lang.RuntimeException
    {
        org.apache.xalan.processor.StylesheetHandler r2;
        java.lang.RuntimeException $r0;
        java.lang.String r1;
        boolean z0;

        r2 := @this: org.apache.xalan.processor.StylesheetHandler;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        if z0 != 0 goto label1;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(r1);

        throw $r0;

     label1:
        return;
    }

    protected void error(java.lang.String, java.lang.Exception) throws org.xml.sax.SAXException
    {
        javax.xml.transform.TransformerException $r7, $r9, r10;
        javax.xml.transform.ErrorListener $r3;
        org.apache.xalan.processor.TransformerFactoryImpl $r2;
        java.lang.Exception r4;
        org.apache.xml.utils.SAXSourceLocator $r1;
        org.apache.xalan.processor.StylesheetHandler r0;
        org.xml.sax.SAXException $r5, $r8;
        java.lang.String r6;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r6 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Exception;

        $r1 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xml.utils.SAXSourceLocator getLocator()>();

        $r2 = r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.TransformerFactoryImpl m_stylesheetProcessor>;

        $r3 = virtualinvoke $r2.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener getErrorListener()>();

        $z0 = r4 instanceof javax.xml.transform.TransformerException;

        if $z0 != 0 goto label03;

        if null != r4 goto label01;

        $r9 = new javax.xml.transform.TransformerException;

        specialinvoke $r9.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator)>(r6, $r1);

        goto label02;

     label01:
        $r9 = new javax.xml.transform.TransformerException;

        specialinvoke $r9.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator,java.lang.Throwable)>(r6, $r1, r4);

     label02:
        r10 = $r9;

        goto label04;

     label03:
        r10 = (javax.xml.transform.TransformerException) r4;

     label04:
        if null == $r3 goto label09;

     label05:
        interfaceinvoke $r3.<javax.xml.transform.ErrorListener: void error(javax.xml.transform.TransformerException)>(r10);

     label06:
        goto label08;

     label07:
        $r7 := @caughtexception;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r7);

        throw $r8;

     label08:
        goto label10;

     label09:
        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r10);

        throw $r5;

     label10:
        return;

        catch javax.xml.transform.TransformerException from label05 to label06 with label07;
    }

    protected void error(java.lang.String, java.lang.Object[], java.lang.Exception) throws org.xml.sax.SAXException
    {
        java.lang.Object[] r1;
        org.apache.xalan.processor.StylesheetHandler r3;
        java.lang.String r0, $r2;
        java.lang.Exception r4;

        r3 := @this: org.apache.xalan.processor.StylesheetHandler;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        r4 := @parameter2: java.lang.Exception;

        $r2 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>(r0, r1);

        virtualinvoke r3.<org.apache.xalan.processor.StylesheetHandler: void error(java.lang.String,java.lang.Exception)>($r2, r4);

        return;
    }

    public void warning(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException
    {
        javax.xml.transform.TransformerException $r6, $r7;
        javax.xml.transform.ErrorListener $r5;
        org.apache.xalan.processor.TransformerFactoryImpl $r4;
        org.apache.xml.utils.SAXSourceLocator $r3;
        org.xml.sax.SAXParseException r0;
        org.apache.xalan.processor.StylesheetHandler r2;
        org.xml.sax.SAXException $r8;
        java.lang.String $r1;

        r2 := @this: org.apache.xalan.processor.StylesheetHandler;

        r0 := @parameter0: org.xml.sax.SAXParseException;

        $r1 = virtualinvoke r0.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        $r3 = virtualinvoke r2.<org.apache.xalan.processor.StylesheetHandler: org.apache.xml.utils.SAXSourceLocator getLocator()>();

        $r4 = r2.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.TransformerFactoryImpl m_stylesheetProcessor>;

        $r5 = virtualinvoke $r4.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener getErrorListener()>();

     label1:
        $r6 = new javax.xml.transform.TransformerException;

        specialinvoke $r6.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator)>($r1, $r3);

        interfaceinvoke $r5.<javax.xml.transform.ErrorListener: void warning(javax.xml.transform.TransformerException)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r7);

        throw $r8;

     label4:
        return;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
    }

    public void error(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException
    {
        javax.xml.transform.TransformerException $r6, $r7;
        javax.xml.transform.ErrorListener $r5;
        org.apache.xalan.processor.TransformerFactoryImpl $r4;
        org.apache.xml.utils.SAXSourceLocator $r3;
        org.xml.sax.SAXParseException r0;
        org.apache.xalan.processor.StylesheetHandler r2;
        org.xml.sax.SAXException $r8;
        java.lang.String $r1;

        r2 := @this: org.apache.xalan.processor.StylesheetHandler;

        r0 := @parameter0: org.xml.sax.SAXParseException;

        $r1 = virtualinvoke r0.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        $r3 = virtualinvoke r2.<org.apache.xalan.processor.StylesheetHandler: org.apache.xml.utils.SAXSourceLocator getLocator()>();

        $r4 = r2.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.TransformerFactoryImpl m_stylesheetProcessor>;

        $r5 = virtualinvoke $r4.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener getErrorListener()>();

     label1:
        $r6 = new javax.xml.transform.TransformerException;

        specialinvoke $r6.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator)>($r1, $r3);

        interfaceinvoke $r5.<javax.xml.transform.ErrorListener: void error(javax.xml.transform.TransformerException)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r7);

        throw $r8;

     label4:
        return;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
    }

    public void fatalError(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException
    {
        javax.xml.transform.TransformerException $r6, $r7;
        javax.xml.transform.ErrorListener $r5;
        org.apache.xalan.processor.TransformerFactoryImpl $r4;
        org.apache.xml.utils.SAXSourceLocator $r3;
        org.xml.sax.SAXParseException r0;
        org.apache.xalan.processor.StylesheetHandler r2;
        org.xml.sax.SAXException $r8;
        java.lang.String $r1;

        r2 := @this: org.apache.xalan.processor.StylesheetHandler;

        r0 := @parameter0: org.xml.sax.SAXParseException;

        $r1 = virtualinvoke r0.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        $r3 = virtualinvoke r2.<org.apache.xalan.processor.StylesheetHandler: org.apache.xml.utils.SAXSourceLocator getLocator()>();

        $r4 = r2.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.TransformerFactoryImpl m_stylesheetProcessor>;

        $r5 = virtualinvoke $r4.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener getErrorListener()>();

     label1:
        $r6 = new javax.xml.transform.TransformerException;

        specialinvoke $r6.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator)>($r1, $r3);

        interfaceinvoke $r5.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r7);

        throw $r8;

     label4:
        return;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
    }

    private void checkForFragmentID(org.xml.sax.Attributes)
    {
        org.apache.xalan.processor.StylesheetHandler r0;
        org.xml.sax.Attributes r1;
        int $i0, $i1, i2;
        java.lang.String $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r1 := @parameter0: org.xml.sax.Attributes;

        $z0 = r0.<org.apache.xalan.processor.StylesheetHandler: boolean m_shouldProcess>;

        if $z0 != 0 goto label4;

        if null == r1 goto label4;

        $r2 = r0.<org.apache.xalan.processor.StylesheetHandler: java.lang.String m_fragmentIDString>;

        if null == $r2 goto label4;

        $i0 = interfaceinvoke r1.<org.xml.sax.Attributes: int getLength()>();

        i2 = 0;

        goto label3;

     label1:
        $r3 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getQName(int)>(i2);

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("id");

        if $z1 == 0 goto label2;

        $r4 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i2);

        $r5 = r0.<org.apache.xalan.processor.StylesheetHandler: java.lang.String m_fragmentIDString>;

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        if $z2 == 0 goto label2;

        r0.<org.apache.xalan.processor.StylesheetHandler: boolean m_shouldProcess> = 1;

        $i1 = r0.<org.apache.xalan.processor.StylesheetHandler: int m_elementID>;

        r0.<org.apache.xalan.processor.StylesheetHandler: int m_fragmentID> = $i1;

     label2:
        i2 = i2 + 1;

     label3:
        if i2 < $i0 goto label1;

     label4:
        return;
    }

    org.apache.xalan.processor.TransformerFactoryImpl getStylesheetProcessor()
    {
        org.apache.xalan.processor.StylesheetHandler r0;
        org.apache.xalan.processor.TransformerFactoryImpl $r1;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $r1 = r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.TransformerFactoryImpl m_stylesheetProcessor>;

        return $r1;
    }

    int getStylesheetType()
    {
        int $i0;
        org.apache.xalan.processor.StylesheetHandler r0;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $i0 = r0.<org.apache.xalan.processor.StylesheetHandler: int m_stylesheetType>;

        return $i0;
    }

    void setStylesheetType(int)
    {
        int i0;
        org.apache.xalan.processor.StylesheetHandler r0;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        i0 := @parameter0: int;

        r0.<org.apache.xalan.processor.StylesheetHandler: int m_stylesheetType> = i0;

        return;
    }

    org.apache.xalan.templates.Stylesheet getStylesheet()
    {
        org.apache.xalan.processor.StylesheetHandler r0;
        int $i0;
        java.lang.Object $r3;
        java.util.Stack $r1, $r2;
        org.apache.xalan.templates.Stylesheet $r4;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $r1 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_stylesheets>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 != 0 goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_stylesheets>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object peek()>();

        $r4 = (org.apache.xalan.templates.Stylesheet) $r3;

     label2:
        return $r4;
    }

    org.apache.xalan.templates.Stylesheet getLastPoppedStylesheet()
    {
        org.apache.xalan.processor.StylesheetHandler r0;
        org.apache.xalan.templates.Stylesheet $r1;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $r1 = r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.Stylesheet m_lastPoppedStylesheet>;

        return $r1;
    }

    public org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()
    {
        org.apache.xalan.templates.StylesheetRoot $r1;
        org.apache.xalan.processor.StylesheetHandler r0;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $r1 = r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot>;

        return $r1;
    }

    public void pushStylesheet(org.apache.xalan.templates.Stylesheet)
    {
        org.apache.xalan.templates.StylesheetRoot $r4;
        org.apache.xalan.processor.StylesheetHandler r0;
        int $i0;
        java.util.Stack $r1, $r3;
        org.apache.xalan.templates.Stylesheet r2;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter0: org.apache.xalan.templates.Stylesheet;

        $r1 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_stylesheets>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 != 0 goto label1;

        $r4 = (org.apache.xalan.templates.StylesheetRoot) r2;

        r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot> = $r4;

     label1:
        $r3 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_stylesheets>;

        virtualinvoke $r3.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r2);

        return;
    }

    org.apache.xalan.templates.Stylesheet popStylesheet()
    {
        java.util.Stack $r1, $r2, $r4, $r7;
        org.apache.xalan.templates.Stylesheet $r3, $r6;
        org.apache.xalan.processor.StylesheetHandler r0;
        java.lang.Object $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $r1 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_stylesheetLocatorStack>;

        $z0 = virtualinvoke $r1.<java.util.Vector: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r7 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_stylesheetLocatorStack>;

        virtualinvoke $r7.<java.util.Stack: java.lang.Object pop()>();

     label1:
        $r2 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_stylesheets>;

        $z1 = virtualinvoke $r2.<java.util.Vector: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $r4 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_stylesheets>;

        $r5 = virtualinvoke $r4.<java.util.Stack: java.lang.Object pop()>();

        $r6 = (org.apache.xalan.templates.Stylesheet) $r5;

        r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.Stylesheet m_lastPoppedStylesheet> = $r6;

     label2:
        $r3 = r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.Stylesheet m_lastPoppedStylesheet>;

        return $r3;
    }

    org.apache.xalan.processor.XSLTElementProcessor getCurrentProcessor()
    {
        org.apache.xalan.processor.StylesheetHandler r0;
        java.lang.Object $r2;
        org.apache.xalan.processor.XSLTElementProcessor $r3;
        java.util.Stack $r1;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $r1 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_processors>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object peek()>();

        $r3 = (org.apache.xalan.processor.XSLTElementProcessor) $r2;

        return $r3;
    }

    void pushProcessor(org.apache.xalan.processor.XSLTElementProcessor)
    {
        org.apache.xalan.processor.XSLTElementProcessor r1;
        org.apache.xalan.processor.StylesheetHandler r0;
        java.util.Stack $r2;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r1 := @parameter0: org.apache.xalan.processor.XSLTElementProcessor;

        $r2 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_processors>;

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r1);

        return;
    }

    org.apache.xalan.processor.XSLTElementProcessor popProcessor()
    {
        org.apache.xalan.processor.StylesheetHandler r0;
        java.lang.Object $r2;
        org.apache.xalan.processor.XSLTElementProcessor $r3;
        java.util.Stack $r1;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $r1 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_processors>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        $r3 = (org.apache.xalan.processor.XSLTElementProcessor) $r2;

        return $r3;
    }

    org.apache.xalan.processor.XSLTSchema getSchema()
    {
        org.apache.xalan.processor.XSLTSchema $r1;
        org.apache.xalan.processor.StylesheetHandler r0;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $r1 = r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTSchema m_schema>;

        return $r1;
    }

    org.apache.xalan.templates.ElemTemplateElement getElemTemplateElement()
    {
        java.util.EmptyStackException $r4;
        org.apache.xalan.processor.StylesheetHandler r0;
        org.apache.xalan.templates.ElemTemplateElement $r3;
        java.lang.Object $r2;
        java.util.Stack $r1;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

     label1:
        $r1 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_elems>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object peek()>();

        $r3 = (org.apache.xalan.templates.ElemTemplateElement) $r2;

        return $r3;

     label2:
        $r4 := @caughtexception;

        return null;

        catch java.util.EmptyStackException from label1 to label2 with label2;
    }

    int nextUid()
    {
        int $i0, $i1;
        org.apache.xalan.processor.StylesheetHandler r0;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $i0 = r0.<org.apache.xalan.processor.StylesheetHandler: int m_docOrderCount>;

        $i1 = $i0 + 1;

        r0.<org.apache.xalan.processor.StylesheetHandler: int m_docOrderCount> = $i1;

        return $i0;
    }

    void pushElemTemplateElement(org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        int $i0, $i1, $i3;
        java.util.Stack $r2;

        r1 := @this: org.apache.xalan.processor.StylesheetHandler;

        r0 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        $i0 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: int getUid()>();

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $i1 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: int nextUid()>();

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void setUid(int)>($i1);

     label1:
        $r2 = r1.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_elems>;

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r0);

        return;
    }

    org.apache.xalan.templates.ElemTemplateElement popElemTemplateElement()
    {
        org.apache.xalan.processor.StylesheetHandler r0;
        org.apache.xalan.templates.ElemTemplateElement $r3;
        java.lang.Object $r2;
        java.util.Stack $r1;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $r1 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_elems>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        $r3 = (org.apache.xalan.templates.ElemTemplateElement) $r2;

        return $r3;
    }

    void pushBaseIndentifier(java.lang.String)
    {
        org.apache.xalan.processor.StylesheetHandler r1;
        int $i0, $i1, $i3;
        java.lang.String r0, $r3;
        java.util.Stack $r2;

        r1 := @this: org.apache.xalan.processor.StylesheetHandler;

        r0 := @parameter0: java.lang.String;

        if null == r0 goto label3;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(35);

        $i3 = (int) -1;

        if $i0 <= $i3 goto label1;

        $i1 = $i0 + 1;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        r1.<org.apache.xalan.processor.StylesheetHandler: java.lang.String m_fragmentIDString> = $r3;

        r1.<org.apache.xalan.processor.StylesheetHandler: boolean m_shouldProcess> = 0;

        goto label2;

     label1:
        r1.<org.apache.xalan.processor.StylesheetHandler: boolean m_shouldProcess> = 1;

     label2:
        goto label4;

     label3:
        r1.<org.apache.xalan.processor.StylesheetHandler: boolean m_shouldProcess> = 1;

     label4:
        $r2 = r1.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_baseIdentifiers>;

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r0);

        return;
    }

    java.lang.String popBaseIndentifier()
    {
        org.apache.xalan.processor.StylesheetHandler r0;
        java.lang.Object $r2;
        java.lang.String $r3;
        java.util.Stack $r1;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $r1 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_baseIdentifiers>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public java.lang.String getBaseIdentifier()
    {
        java.util.Stack $r1, $r2;
        org.apache.xml.utils.SAXSourceLocator $r3;
        org.apache.xalan.processor.StylesheetHandler r0;
        java.lang.Object $r5;
        java.lang.String $r4, r6, $r7;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $r1 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_baseIdentifiers>;

        $z0 = virtualinvoke $r1.<java.util.Vector: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_baseIdentifiers>;

        $r5 = virtualinvoke $r2.<java.util.Stack: java.lang.Object peek()>();

     label2:
        $r4 = (java.lang.String) $r5;

        r6 = $r4;

        if null != $r4 goto label5;

        $r3 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xml.utils.SAXSourceLocator getLocator()>();

        if null != $r3 goto label3;

        $r7 = "";

        goto label4;

     label3:
        $r7 = interfaceinvoke $r3.<javax.xml.transform.SourceLocator: java.lang.String getSystemId()>();

     label4:
        r6 = $r7;

     label5:
        return r6;
    }

    public org.apache.xml.utils.SAXSourceLocator getLocator()
    {
        org.apache.xalan.processor.TransformerFactoryImpl $r6;
        java.util.Stack $r1, $r2;
        org.apache.xml.utils.SAXSourceLocator $r4, $r5;
        org.apache.xalan.processor.StylesheetHandler r0;
        java.lang.Object $r3;
        java.lang.String $r7;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $r1 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_stylesheetLocatorStack>;

        $z0 = virtualinvoke $r1.<java.util.Vector: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r5 = new org.apache.xml.utils.SAXSourceLocator;

        specialinvoke $r5.<org.apache.xml.utils.SAXSourceLocator: void <init>()>();

        $r6 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.TransformerFactoryImpl getStylesheetProcessor()>();

        $r7 = virtualinvoke $r6.<org.apache.xalan.processor.TransformerFactoryImpl: java.lang.String getDOMsystemID()>();

        virtualinvoke $r5.<org.xml.sax.helpers.LocatorImpl: void setSystemId(java.lang.String)>($r7);

        return $r5;

     label1:
        $r2 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_stylesheetLocatorStack>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object peek()>();

        $r4 = (org.apache.xml.utils.SAXSourceLocator) $r3;

        return $r4;
    }

    void pushImportURL(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xalan.processor.StylesheetHandler r0;
        java.util.Stack $r2;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_importStack>;

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r1);

        return;
    }

    boolean importStackContains(java.lang.String)
    {
        org.apache.xalan.processor.StylesheetHandler r0;
        java.lang.String r1;
        java.util.Stack $r2;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_importStack>;

        $z0 = specialinvoke r0.<org.apache.xalan.processor.StylesheetHandler: boolean stackContains(java.util.Stack,java.lang.String)>($r2, r1);

        return $z0;
    }

    java.lang.String popImportURL()
    {
        org.apache.xalan.processor.StylesheetHandler r0;
        java.lang.Object $r2;
        java.lang.String $r3;
        java.util.Stack $r1;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $r1 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_importStack>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    void pushNewNamespaceSupport()
    {
        org.apache.xalan.processor.StylesheetHandler r0;
        org.apache.xml.utils.NamespaceSupport2 $r1;
        java.util.Stack $r2;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $r2 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_nsSupportStack>;

        $r1 = new org.apache.xml.utils.NamespaceSupport2;

        specialinvoke $r1.<org.apache.xml.utils.NamespaceSupport2: void <init>()>();

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r1);

        return;
    }

    void popNamespaceSupport()
    {
        org.apache.xalan.processor.StylesheetHandler r0;
        java.util.Stack $r1;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $r1 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_nsSupportStack>;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        return;
    }

    org.xml.sax.helpers.NamespaceSupport getNamespaceSupport()
    {
        org.xml.sax.helpers.NamespaceSupport $r3;
        org.apache.xalan.processor.StylesheetHandler r0;
        java.lang.Object $r2;
        java.util.Stack $r1;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $r1 = r0.<org.apache.xalan.processor.StylesheetHandler: java.util.Stack m_nsSupportStack>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object peek()>();

        $r3 = (org.xml.sax.helpers.NamespaceSupport) $r2;

        return $r3;
    }

    public void setOriginatingNode(org.w3c.dom.Node)
    {
        org.apache.xalan.processor.StylesheetHandler r0;
        org.w3c.dom.Node r1;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r1 := @parameter0: org.w3c.dom.Node;

        r0.<org.apache.xalan.processor.StylesheetHandler: org.w3c.dom.Node m_originatingNode> = r1;

        return;
    }

    public org.w3c.dom.Node getOriginatingNode()
    {
        org.apache.xalan.processor.StylesheetHandler r0;
        org.w3c.dom.Node $r1;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $r1 = r0.<org.apache.xalan.processor.StylesheetHandler: org.w3c.dom.Node m_originatingNode>;

        return $r1;
    }

    boolean isSpacePreserve()
    {
        org.apache.xalan.processor.StylesheetHandler r0;
        org.apache.xml.utils.BoolStack $r1;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $r1 = r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xml.utils.BoolStack m_spacePreserveStack>;

        $z0 = virtualinvoke $r1.<org.apache.xml.utils.BoolStack: boolean peek()>();

        return $z0;
    }

    void popSpaceHandling()
    {
        org.apache.xalan.processor.StylesheetHandler r0;
        org.apache.xml.utils.BoolStack $r1;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        $r1 = r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xml.utils.BoolStack m_spacePreserveStack>;

        virtualinvoke $r1.<org.apache.xml.utils.BoolStack: boolean pop()>();

        return;
    }

    void pushSpaceHandling(boolean) throws org.xml.sax.SAXParseException
    {
        org.apache.xalan.processor.StylesheetHandler r0;
        boolean z0;
        org.apache.xml.utils.BoolStack $r1;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xml.utils.BoolStack m_spacePreserveStack>;

        virtualinvoke $r1.<org.apache.xml.utils.BoolStack: boolean push(boolean)>(z0);

        return;
    }

    void pushSpaceHandling(org.xml.sax.Attributes) throws org.xml.sax.SAXParseException
    {
        javax.xml.transform.TransformerException $r6, $r14;
        javax.xml.transform.ErrorListener $r5;
        org.apache.xalan.processor.TransformerFactoryImpl $r4;
        org.apache.xalan.processor.StylesheetHandler r2;
        org.xml.sax.Attributes r0;
        java.lang.String $r1, $r7, $r16;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xml.utils.SAXSourceLocator $r3;
        org.xml.sax.SAXParseException $r15;
        org.apache.xml.utils.BoolStack $r8, $r9, $r10, $r11, $r12, $r13;

        r2 := @this: org.apache.xalan.processor.StylesheetHandler;

        r0 := @parameter0: org.xml.sax.Attributes;

        $r1 = interfaceinvoke r0.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("xml:space");

        if null != $r1 goto label1;

        $r13 = r2.<org.apache.xalan.processor.StylesheetHandler: org.apache.xml.utils.BoolStack m_spacePreserveStack>;

        $r12 = r2.<org.apache.xalan.processor.StylesheetHandler: org.apache.xml.utils.BoolStack m_spacePreserveStack>;

        $z3 = virtualinvoke $r12.<org.apache.xml.utils.BoolStack: boolean peekOrFalse()>();

        virtualinvoke $r13.<org.apache.xml.utils.BoolStack: boolean push(boolean)>($z3);

        goto label8;

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("preserve");

        if $z0 == 0 goto label2;

        $r11 = r2.<org.apache.xalan.processor.StylesheetHandler: org.apache.xml.utils.BoolStack m_spacePreserveStack>;

        virtualinvoke $r11.<org.apache.xml.utils.BoolStack: boolean push(boolean)>(1);

        goto label8;

     label2:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $z1 == 0 goto label3;

        $r10 = r2.<org.apache.xalan.processor.StylesheetHandler: org.apache.xml.utils.BoolStack m_spacePreserveStack>;

        virtualinvoke $r10.<org.apache.xml.utils.BoolStack: boolean push(boolean)>(0);

        goto label8;

     label3:
        $r3 = virtualinvoke r2.<org.apache.xalan.processor.StylesheetHandler: org.apache.xml.utils.SAXSourceLocator getLocator()>();

        $r4 = r2.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.TransformerFactoryImpl m_stylesheetProcessor>;

        $r5 = virtualinvoke $r4.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener getErrorListener()>();

     label4:
        $r6 = new javax.xml.transform.TransformerException;

        $r7 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_ILLEGAL_XMLSPACE_VALUE", null);

        specialinvoke $r6.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator)>($r7, $r3);

        interfaceinvoke $r5.<javax.xml.transform.ErrorListener: void error(javax.xml.transform.TransformerException)>($r6);

     label5:
        goto label7;

     label6:
        $r14 := @caughtexception;

        $r15 = new org.xml.sax.SAXParseException;

        $r16 = virtualinvoke $r14.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r15.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r16, $r3, $r14);

        throw $r15;

     label7:
        $r9 = r2.<org.apache.xalan.processor.StylesheetHandler: org.apache.xml.utils.BoolStack m_spacePreserveStack>;

        $r8 = r2.<org.apache.xalan.processor.StylesheetHandler: org.apache.xml.utils.BoolStack m_spacePreserveStack>;

        $z2 = virtualinvoke $r8.<org.apache.xml.utils.BoolStack: boolean peek()>();

        virtualinvoke $r9.<org.apache.xml.utils.BoolStack: boolean push(boolean)>($z2);

     label8:
        return;

        catch javax.xml.transform.TransformerException from label4 to label5 with label6;
    }

    private double getElemVersion()
    {
        org.apache.xalan.templates.ElemTemplateElement r4;
        java.lang.Double $r2;
        java.lang.Exception $r3;
        org.apache.xalan.processor.StylesheetHandler r0;
        byte $b0, $b1, $b2;
        java.lang.String $r1;
        double d0, $d1;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        r4 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.ElemTemplateElement getElemTemplateElement()>();

        d0 = -1.0;

        goto label5;

     label1:
        $r1 = virtualinvoke r4.<org.apache.xml.utils.UnImplNode: java.lang.String getVersion()>();

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r1);

        d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        d0 = -1.0;

     label4:
        r4 = virtualinvoke r4.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getParentElem()>();

     label5:
        $b2 = d0 cmpl -1.0;

        if $b2 == 0 goto label6;

        $b1 = d0 cmpl 1.0;

        if $b1 != 0 goto label7;

     label6:
        if r4 != null goto label1;

     label7:
        $b0 = d0 cmpl -1.0;

        if $b0 != 0 goto label8;

        $d1 = 1.0;

        goto label9;

     label8:
        $d1 = d0;

     label9:
        return $d1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public boolean handlesNullPrefixes()
    {
        org.apache.xalan.processor.StylesheetHandler r0;

        r0 := @this: org.apache.xalan.processor.StylesheetHandler;

        return 0;
    }

    static void <clinit>()
    {
        org.apache.xalan.templates.FuncDocument $r0;
        org.apache.xalan.templates.FuncFormatNumb $r1;

        <org.apache.xalan.processor.StylesheetHandler: int STYPE_IMPORT> = 3;

        <org.apache.xalan.processor.StylesheetHandler: int STYPE_INCLUDE> = 2;

        <org.apache.xalan.processor.StylesheetHandler: int STYPE_ROOT> = 1;

        $r0 = new org.apache.xalan.templates.FuncDocument;

        specialinvoke $r0.<org.apache.xalan.templates.FuncDocument: void <init>()>();

        staticinvoke <org.apache.xpath.compiler.FunctionTable: int installFunction(java.lang.String,org.apache.xpath.Expression)>("document", $r0);

        $r1 = new org.apache.xalan.templates.FuncFormatNumb;

        specialinvoke $r1.<org.apache.xalan.templates.FuncFormatNumb: void <init>()>();

        staticinvoke <org.apache.xpath.compiler.FunctionTable: int installFunction(java.lang.String,org.apache.xpath.Expression)>("format-number", $r1);

        return;
    }
}
