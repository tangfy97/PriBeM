public class org.apache.commons.httpclient.auth.DigestScheme extends org.apache.commons.httpclient.auth.RFC2617Scheme
{
    private static final org.apache.commons.logging.Log LOG;
    private static final char[] HEXADECIMAL;
    private boolean complete;
    private static final java.lang.String NC;
    private static final int QOP_MISSING;
    private static final int QOP_AUTH_INT;
    private static final int QOP_AUTH;
    private int qopVariant;
    private java.lang.String cnonce;
    private final org.apache.commons.httpclient.util.ParameterFormatter formatter;
    static java.lang.Class class$org$apache$commons$httpclient$auth$DigestScheme;

    public void <init>()
    {
        org.apache.commons.httpclient.util.ParameterFormatter $r1;
        org.apache.commons.httpclient.auth.DigestScheme r0;

        r0 := @this: org.apache.commons.httpclient.auth.DigestScheme;

        specialinvoke r0.<org.apache.commons.httpclient.auth.RFC2617Scheme: void <init>()>();

        r0.<org.apache.commons.httpclient.auth.DigestScheme: int qopVariant> = 0;

        r0.<org.apache.commons.httpclient.auth.DigestScheme: boolean complete> = 0;

        $r1 = new org.apache.commons.httpclient.util.ParameterFormatter;

        specialinvoke $r1.<org.apache.commons.httpclient.util.ParameterFormatter: void <init>()>();

        r0.<org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.httpclient.util.ParameterFormatter formatter> = $r1;

        return;
    }

    public java.lang.String getID()
    {
        org.apache.commons.httpclient.auth.DigestScheme r0;
        java.lang.StringBuffer $r3, $r4, $r5, $r6;
        java.lang.String $r1, $r2, r7;

        r0 := @this: org.apache.commons.httpclient.auth.DigestScheme;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getRealm()>();

        r7 = $r1;

        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("nonce");

        if $r2 == null goto label1;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        return r7;
    }

    public void <init>(java.lang.String) throws org.apache.commons.httpclient.auth.MalformedChallengeException
    {
        java.lang.String r1;
        org.apache.commons.httpclient.auth.DigestScheme r0;

        r0 := @this: org.apache.commons.httpclient.auth.DigestScheme;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: void <init>()>();

        virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: void processChallenge(java.lang.String)>(r1);

        return;
    }

    public void processChallenge(java.lang.String) throws org.apache.commons.httpclient.auth.MalformedChallengeException
    {
        java.util.StringTokenizer $r7;
        java.lang.StringBuffer $r10, $r12, $r13;
        int $i0;
        java.lang.String r1, $r2, $r3, $r4, $r5, $r8, $r9, $r14;
        boolean $z0, $z1, $z2, z3;
        org.apache.commons.httpclient.auth.DigestScheme r0;
        org.apache.commons.httpclient.auth.MalformedChallengeException $r6, $r15, $r16;
        org.apache.commons.logging.Log $r11;

        r0 := @this: org.apache.commons.httpclient.auth.DigestScheme;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.auth.RFC2617Scheme: void processChallenge(java.lang.String)>(r1);

        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("realm");

        if $r2 != null goto label1;

        $r16 = new org.apache.commons.httpclient.auth.MalformedChallengeException;

        specialinvoke $r16.<org.apache.commons.httpclient.auth.MalformedChallengeException: void <init>(java.lang.String)>("missing realm in challange");

        throw $r16;

     label1:
        $r3 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("nonce");

        if $r3 != null goto label2;

        $r15 = new org.apache.commons.httpclient.auth.MalformedChallengeException;

        specialinvoke $r15.<org.apache.commons.httpclient.auth.MalformedChallengeException: void <init>(java.lang.String)>("missing nonce in challange");

        throw $r15;

     label2:
        z3 = 0;

        $r4 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("qop");

        if $r4 == null goto label7;

        $r7 = new java.util.StringTokenizer;

        specialinvoke $r7.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r4, ",");

     label3:
        $z0 = virtualinvoke $r7.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label7;

        $r8 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("auth");

        if $z1 == 0 goto label4;

        r0.<org.apache.commons.httpclient.auth.DigestScheme: int qopVariant> = 2;

        goto label7;

     label4:
        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("auth-int");

        if $z2 == 0 goto label5;

        r0.<org.apache.commons.httpclient.auth.DigestScheme: int qopVariant> = 1;

        goto label6;

     label5:
        z3 = 1;

        $r11 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unsupported qop detected: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r11.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r14);

     label6:
        goto label3;

     label7:
        if z3 == 0 goto label8;

        $i0 = r0.<org.apache.commons.httpclient.auth.DigestScheme: int qopVariant>;

        if $i0 != 0 goto label8;

        $r6 = new org.apache.commons.httpclient.auth.MalformedChallengeException;

        specialinvoke $r6.<org.apache.commons.httpclient.auth.MalformedChallengeException: void <init>(java.lang.String)>("None of the qop methods is supported");

        throw $r6;

     label8:
        $r5 = staticinvoke <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createCnonce()>();

        r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String cnonce> = $r5;

        r0.<org.apache.commons.httpclient.auth.DigestScheme: boolean complete> = 1;

        return;
    }

    public boolean isComplete()
    {
        org.apache.commons.httpclient.auth.DigestScheme r0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.httpclient.auth.DigestScheme;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("stale");

        $r2 = "true";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = r0.<org.apache.commons.httpclient.auth.DigestScheme: boolean complete>;

        return $z1;
    }

    public java.lang.String getSchemeName()
    {
        org.apache.commons.httpclient.auth.DigestScheme r0;

        r0 := @this: org.apache.commons.httpclient.auth.DigestScheme;

        return "digest";
    }

    public boolean isConnectionBased()
    {
        org.apache.commons.httpclient.auth.DigestScheme r0;

        r0 := @this: org.apache.commons.httpclient.auth.DigestScheme;

        return 0;
    }

    public java.lang.String authenticate(org.apache.commons.httpclient.Credentials, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.auth.AuthenticationException
    {
        java.lang.ClassCastException $r16;
        org.apache.commons.httpclient.UsernamePasswordCredentials r24;
        java.lang.StringBuffer $r10, $r11, $r14, $r18, $r19, $r22;
        java.util.Map $r3, $r5;
        java.lang.String r4, r6, $r7, $r8, $r9, $r12, $r13, $r15, $r21, $r23;
        org.apache.commons.httpclient.auth.DigestScheme r2;
        org.apache.commons.httpclient.auth.InvalidCredentialsException $r17;
        org.apache.commons.httpclient.Credentials r1;
        org.apache.commons.logging.Log $r0;
        java.lang.Class $r20;

        r2 := @this: org.apache.commons.httpclient.auth.DigestScheme;

        r1 := @parameter0: org.apache.commons.httpclient.Credentials;

        r4 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        $r0 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter DigestScheme.authenticate(Credentials, String, String)");

     label1:
        r24 = (org.apache.commons.httpclient.UsernamePasswordCredentials) r1;

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

        $r17 = new org.apache.commons.httpclient.auth.InvalidCredentialsException;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Credentials cannot be used for digest authentication: ");

        $r20 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r21 = virtualinvoke $r20.<java.lang.Class: java.lang.String getName()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r17.<org.apache.commons.httpclient.auth.InvalidCredentialsException: void <init>(java.lang.String)>($r23);

        throw $r17;

     label4:
        $r3 = virtualinvoke r2.<org.apache.commons.httpclient.auth.DigestScheme: java.util.Map getParameters()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("methodname", r4);

        $r5 = virtualinvoke r2.<org.apache.commons.httpclient.auth.DigestScheme: java.util.Map getParameters()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("uri", r6);

        $r7 = virtualinvoke r24.<org.apache.commons.httpclient.UsernamePasswordCredentials: java.lang.String getUserName()>();

        $r8 = virtualinvoke r24.<org.apache.commons.httpclient.UsernamePasswordCredentials: java.lang.String getPassword()>();

        $r9 = specialinvoke r2.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>($r7, $r8);

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Digest ");

        $r12 = virtualinvoke r24.<org.apache.commons.httpclient.UsernamePasswordCredentials: java.lang.String getUserName()>();

        $r13 = specialinvoke r2.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigestHeader(java.lang.String,java.lang.String)>($r12, $r9);

        $r14 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r15;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public java.lang.String authenticate(org.apache.commons.httpclient.Credentials, org.apache.commons.httpclient.HttpMethod) throws org.apache.commons.httpclient.auth.AuthenticationException
    {
        org.apache.commons.httpclient.params.HttpMethodParams $r19;
        org.apache.commons.httpclient.UsernamePasswordCredentials r30;
        java.util.Map $r3, $r18, $r31;
        org.apache.commons.httpclient.auth.InvalidCredentialsException $r23;
        java.lang.ClassCastException $r22;
        java.lang.StringBuffer $r6, $r12, $r13, $r16, $r24, $r25, $r28;
        int $i0;
        java.lang.String $r5, $r7, $r8, $r9, $r10, $r11, $r14, $r15, $r17, $r20, $r21, $r27, $r29, $r32, $r33;
        org.apache.commons.httpclient.auth.DigestScheme r2;
        org.apache.commons.httpclient.Credentials r1;
        org.apache.commons.httpclient.HttpMethod r4;
        org.apache.commons.logging.Log $r0;
        java.lang.Class $r26;

        r2 := @this: org.apache.commons.httpclient.auth.DigestScheme;

        r1 := @parameter0: org.apache.commons.httpclient.Credentials;

        r4 := @parameter1: org.apache.commons.httpclient.HttpMethod;

        $r0 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter DigestScheme.authenticate(Credentials, HttpMethod)");

     label1:
        r30 = (org.apache.commons.httpclient.UsernamePasswordCredentials) r1;

     label2:
        goto label4;

     label3:
        $r22 := @caughtexception;

        $r23 = new org.apache.commons.httpclient.auth.InvalidCredentialsException;

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Credentials cannot be used for digest authentication: ");

        $r26 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r27 = virtualinvoke $r26.<java.lang.Class: java.lang.String getName()>();

        $r28 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r23.<org.apache.commons.httpclient.auth.InvalidCredentialsException: void <init>(java.lang.String)>($r29);

        throw $r23;

     label4:
        $r3 = virtualinvoke r2.<org.apache.commons.httpclient.auth.DigestScheme: java.util.Map getParameters()>();

        $r5 = interfaceinvoke r4.<org.apache.commons.httpclient.HttpMethod: java.lang.String getName()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("methodname", $r5);

        $r6 = new java.lang.StringBuffer;

        $r7 = interfaceinvoke r4.<org.apache.commons.httpclient.HttpMethod: java.lang.String getPath()>();

        specialinvoke $r6.<java.lang.StringBuffer: void <init>(java.lang.String)>($r7);

        $r8 = interfaceinvoke r4.<org.apache.commons.httpclient.HttpMethod: java.lang.String getQueryString()>();

        if $r8 == null goto label6;

        $i0 = virtualinvoke $r8.<java.lang.String: int indexOf(java.lang.String)>("?");

        if $i0 == 0 goto label5;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("?");

     label5:
        $r21 = interfaceinvoke r4.<org.apache.commons.httpclient.HttpMethod: java.lang.String getQueryString()>();

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

     label6:
        $r31 = virtualinvoke r2.<org.apache.commons.httpclient.auth.DigestScheme: java.util.Map getParameters()>();

        $r32 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("uri", $r32);

        $r33 = virtualinvoke r2.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("charset");

        if $r33 != null goto label7;

        $r18 = virtualinvoke r2.<org.apache.commons.httpclient.auth.DigestScheme: java.util.Map getParameters()>();

        $r19 = interfaceinvoke r4.<org.apache.commons.httpclient.HttpMethod: org.apache.commons.httpclient.params.HttpMethodParams getParams()>();

        $r20 = virtualinvoke $r19.<org.apache.commons.httpclient.params.HttpMethodParams: java.lang.String getCredentialCharset()>();

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("charset", $r20);

     label7:
        $r9 = virtualinvoke r30.<org.apache.commons.httpclient.UsernamePasswordCredentials: java.lang.String getUserName()>();

        $r10 = virtualinvoke r30.<org.apache.commons.httpclient.UsernamePasswordCredentials: java.lang.String getPassword()>();

        $r11 = specialinvoke r2.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>($r9, $r10);

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Digest ");

        $r14 = virtualinvoke r30.<org.apache.commons.httpclient.UsernamePasswordCredentials: java.lang.String getUserName()>();

        $r15 = specialinvoke r2.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigestHeader(java.lang.String,java.lang.String)>($r14, $r11);

        $r16 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r17;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    private java.lang.String createDigest(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.auth.AuthenticationException
    {
        byte[] $r18, $r19, $r41, $r42, $r54, $r55, $r59, $r60;
        java.lang.Exception $r49;
        java.lang.StringBuffer $r10, $r14, $r15, $r16, $r17, $r23, $r27, $r29, $r30, $r33, $r35, $r37, $r38, $r39, $r44;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, r11, r12, $r13, $r20, $r22, $r24, $r25, $r26, $r31, $r40, $r43, $r45, $r46, r51, r52, r53, $r56, r57, r58, $r61;
        boolean $z0, $z1, $z2;
        java.security.MessageDigest $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        org.apache.commons.httpclient.auth.DigestScheme r1;
        org.apache.commons.httpclient.auth.AuthenticationException $r48, $r50;
        org.apache.commons.logging.Log $r0, $r21, $r28, $r32, $r34, $r36, $r47;

        r1 := @this: org.apache.commons.httpclient.auth.DigestScheme;

        r11 := @parameter0: java.lang.String;

        r12 := @parameter1: java.lang.String;

        $r0 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter DigestScheme.createDigest(String, String, Map)");

        $r2 = virtualinvoke r1.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("uri");

        $r3 = virtualinvoke r1.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("realm");

        $r4 = virtualinvoke r1.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("nonce");

        $r5 = virtualinvoke r1.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("qop");

        $r6 = virtualinvoke r1.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("methodname");

        $r7 = virtualinvoke r1.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("algorithm");

        r51 = $r7;

        if $r7 != null goto label01;

        r51 = "MD5";

     label01:
        $r8 = virtualinvoke r1.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("charset");

        r52 = $r8;

        if $r8 != null goto label02;

        r52 = "ISO-8859-1";

     label02:
        $i0 = r1.<org.apache.commons.httpclient.auth.DigestScheme: int qopVariant>;

        if $i0 != 1 goto label03;

        $r47 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r47.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("qop=auth-int is not supported");

        $r48 = new org.apache.commons.httpclient.auth.AuthenticationException;

        specialinvoke $r48.<org.apache.commons.httpclient.auth.AuthenticationException: void <init>(java.lang.String)>("Unsupported qop in HTTP Digest authentication");

        throw $r48;

     label03:
        $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

     label04:
        goto label06;

     label05:
        $r49 := @caughtexception;

        $r50 = new org.apache.commons.httpclient.auth.AuthenticationException;

        specialinvoke $r50.<org.apache.commons.httpclient.auth.AuthenticationException: void <init>(java.lang.String)>("Unsupported algorithm in HTTP Digest authentication: MD5");

        throw $r50;

     label06:
        $r10 = new java.lang.StringBuffer;

        $i1 = virtualinvoke r11.<java.lang.String: int length()>();

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i3 = $i1 + $i2;

        $i4 = virtualinvoke r12.<java.lang.String: int length()>();

        $i5 = $i3 + $i4;

        $i6 = $i5 + 2;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>(int)>($i6);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r11);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r12);

        $r13 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        r53 = $r13;

        $z0 = virtualinvoke r51.<java.lang.String: boolean equals(java.lang.Object)>("MD5-sess");

        if $z0 == 0 goto label07;

        $r41 = staticinvoke <org.apache.commons.httpclient.util.EncodingUtil: byte[] getBytes(java.lang.String,java.lang.String)>($r13, r52);

        $r42 = virtualinvoke $r9.<java.security.MessageDigest: byte[] digest(byte[])>($r41);

        $r43 = staticinvoke <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String encode(byte[])>($r42);

        $r44 = new java.lang.StringBuffer;

        $i25 = virtualinvoke $r43.<java.lang.String: int length()>();

        $i26 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i27 = $i25 + $i26;

        $r45 = r1.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String cnonce>;

        $i28 = virtualinvoke $r45.<java.lang.String: int length()>();

        $i29 = $i27 + $i28;

        $i30 = $i29 + 2;

        specialinvoke $r44.<java.lang.StringBuffer: void <init>(int)>($i30);

        virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r43);

        virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $r46 = r1.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String cnonce>;

        virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r46);

        r53 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label08;

     label07:
        $z1 = virtualinvoke r51.<java.lang.String: boolean equals(java.lang.Object)>("MD5");

        if $z1 != 0 goto label08;

        $r36 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        $r35 = new java.lang.StringBuffer;

        specialinvoke $r35.<java.lang.StringBuffer: void <init>()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unhandled algorithm ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r51);

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" requested");

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r36.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r40);

     label08:
        $r54 = staticinvoke <org.apache.commons.httpclient.util.EncodingUtil: byte[] getBytes(java.lang.String,java.lang.String)>(r53, r52);

        $r55 = virtualinvoke $r9.<java.security.MessageDigest: byte[] digest(byte[])>($r54);

        $r56 = staticinvoke <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String encode(byte[])>($r55);

        r57 = null;

        $i31 = r1.<org.apache.commons.httpclient.auth.DigestScheme: int qopVariant>;

        if $i31 != 1 goto label09;

        $r34 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r34.<org.apache.commons.logging.Log: void error(java.lang.Object)>("Unhandled qop auth-int");

        goto label10;

     label09:
        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        r57 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

     label10:
        $r18 = staticinvoke <org.apache.commons.httpclient.util.EncodingUtil: byte[] getAsciiBytes(java.lang.String)>(r57);

        $r19 = virtualinvoke $r9.<java.security.MessageDigest: byte[] digest(byte[])>($r18);

        $r20 = staticinvoke <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String encode(byte[])>($r19);

        $i7 = r1.<org.apache.commons.httpclient.auth.DigestScheme: int qopVariant>;

        if $i7 != 0 goto label11;

        $r32 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r32.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Using null qop method");

        $r33 = new java.lang.StringBuffer;

        $i20 = virtualinvoke $r56.<java.lang.String: int length()>();

        $i21 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i22 = $i20 + $i21;

        $i23 = virtualinvoke $r20.<java.lang.String: int length()>();

        $i24 = $i22 + $i23;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>(int)>($i24);

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r56);

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        r58 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label13;

     label11:
        $r21 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        $z2 = interfaceinvoke $r21.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z2 == 0 goto label12;

        $r28 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Using qop method ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r28.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r31);

     label12:
        $r22 = specialinvoke r1.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getQopVariantString()>();

        $r23 = new java.lang.StringBuffer;

        $i8 = virtualinvoke $r56.<java.lang.String: int length()>();

        $i9 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i10 = $i8 + $i9;

        $r24 = "00000001";

        $i11 = virtualinvoke $r24.<java.lang.String: int length()>();

        $i12 = $i10 + $i11;

        $r25 = r1.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String cnonce>;

        $i13 = virtualinvoke $r25.<java.lang.String: int length()>();

        $i14 = $i12 + $i13;

        $i15 = virtualinvoke $r22.<java.lang.String: int length()>();

        $i16 = $i14 + $i15;

        $i17 = virtualinvoke $r20.<java.lang.String: int length()>();

        $i18 = $i16 + $i17;

        $i19 = $i18 + 5;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>(int)>($i19);

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r56);

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("00000001");

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $r26 = r1.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String cnonce>;

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        r58 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

     label13:
        $r59 = staticinvoke <org.apache.commons.httpclient.util.EncodingUtil: byte[] getAsciiBytes(java.lang.String)>(r58);

        $r60 = virtualinvoke $r9.<java.security.MessageDigest: byte[] digest(byte[])>($r59);

        $r61 = staticinvoke <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String encode(byte[])>($r60);

        return $r61;

        catch java.lang.Exception from label03 to label04 with label05;
    }

    private java.lang.String createDigestHeader(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.auth.AuthenticationException
    {
        boolean $z0, $z1, $z2, $z3;
        java.util.ArrayList $r8;
        java.lang.StringBuffer $r15;
        org.apache.commons.httpclient.NameValuePair $r9, $r11, $r12, $r13, $r14, r18, $r25, $r26, $r27, $r29, $r30;
        int $i0, i1, $i2;
        java.lang.String $r2, $r3, $r4, $r5, r6, $r7, r10, $r16, $r19, $r20, $r23, $r24, $r28, $r31;
        org.apache.commons.httpclient.util.ParameterFormatter $r21, $r22;
        org.apache.commons.httpclient.auth.DigestScheme r1;
        org.apache.commons.logging.Log $r0;
        java.lang.Object $r17;

        r1 := @this: org.apache.commons.httpclient.auth.DigestScheme;

        r10 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $r0 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter DigestScheme.createDigestHeader(String, Map, String)");

        $r2 = virtualinvoke r1.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("uri");

        $r3 = virtualinvoke r1.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("realm");

        $r4 = virtualinvoke r1.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("nonce");

        $r5 = virtualinvoke r1.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("opaque");

        $r7 = virtualinvoke r1.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("algorithm");

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(20);

        $r9 = new org.apache.commons.httpclient.NameValuePair;

        specialinvoke $r9.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("username", r10);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r11 = new org.apache.commons.httpclient.NameValuePair;

        specialinvoke $r11.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("realm", $r3);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r12 = new org.apache.commons.httpclient.NameValuePair;

        specialinvoke $r12.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("nonce", $r4);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r13 = new org.apache.commons.httpclient.NameValuePair;

        specialinvoke $r13.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("uri", $r2);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r14 = new org.apache.commons.httpclient.NameValuePair;

        specialinvoke $r14.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("response", r6);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r14);

        $i0 = r1.<org.apache.commons.httpclient.auth.DigestScheme: int qopVariant>;

        if $i0 == 0 goto label01;

        $r27 = new org.apache.commons.httpclient.NameValuePair;

        $r28 = specialinvoke r1.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getQopVariantString()>();

        specialinvoke $r27.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("qop", $r28);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r27);

        $r29 = new org.apache.commons.httpclient.NameValuePair;

        specialinvoke $r29.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("nc", "00000001");

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r29);

        $r30 = new org.apache.commons.httpclient.NameValuePair;

        $r31 = r1.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String cnonce>;

        specialinvoke $r30.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("cnonce", $r31);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r30);

     label01:
        if $r7 == null goto label02;

        $r26 = new org.apache.commons.httpclient.NameValuePair;

        specialinvoke $r26.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("algorithm", $r7);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r26);

     label02:
        if $r5 == null goto label03;

        $r25 = new org.apache.commons.httpclient.NameValuePair;

        specialinvoke $r25.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("opaque", $r5);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r25);

     label03:
        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        i1 = 0;

     label04:
        $i2 = interfaceinvoke $r8.<java.util.List: int size()>();

        if i1 >= $i2 goto label11;

        $r17 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i1);

        r18 = (org.apache.commons.httpclient.NameValuePair) $r17;

        if i1 <= 0 goto label05;

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label05:
        $r19 = "nc";

        $r20 = virtualinvoke r18.<org.apache.commons.httpclient.NameValuePair: java.lang.String getName()>();

        $z0 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z0 != 0 goto label06;

        $r23 = "qop";

        $r24 = virtualinvoke r18.<org.apache.commons.httpclient.NameValuePair: java.lang.String getName()>();

        $z1 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z1 == 0 goto label07;

     label06:
        $z2 = 1;

        goto label08;

     label07:
        $z2 = 0;

     label08:
        $r21 = r1.<org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.httpclient.util.ParameterFormatter formatter>;

        if $z2 != 0 goto label09;

        $z3 = 1;

        goto label10;

     label09:
        $z3 = 0;

     label10:
        virtualinvoke $r21.<org.apache.commons.httpclient.util.ParameterFormatter: void setAlwaysUseQuotes(boolean)>($z3);

        $r22 = r1.<org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.httpclient.util.ParameterFormatter formatter>;

        virtualinvoke $r22.<org.apache.commons.httpclient.util.ParameterFormatter: void format(java.lang.StringBuffer,org.apache.commons.httpclient.NameValuePair)>($r15, r18);

        i1 = i1 + 1;

        goto label04;

     label11:
        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r16;
    }

    private java.lang.String getQopVariantString()
    {
        int $i0;
        java.lang.String r1;
        org.apache.commons.httpclient.auth.DigestScheme r0;

        r0 := @this: org.apache.commons.httpclient.auth.DigestScheme;

        $i0 = r0.<org.apache.commons.httpclient.auth.DigestScheme: int qopVariant>;

        if $i0 != 1 goto label1;

        r1 = "auth-int";

        goto label2;

     label1:
        r1 = "auth";

     label2:
        return r1;
    }

    private static java.lang.String encode(byte[])
    {
        byte[] r1;
        short $s4, $s12;
        byte $b1, b2, $b3;
        int $i0, i5, $i7, $i8, $i10, i11, $i13, $i14;
        java.lang.String $r6;
        char $c6, $c9;
        char[] r2, $r4, $r5;
        org.apache.commons.logging.Log $r0;

        r1 := @parameter0: byte[];

        $r0 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter DigestScheme.encode(byte[])");

        $i0 = lengthof r1;

        if $i0 == 16 goto label1;

        return null;

     label1:
        r2 = newarray (char)[32];

        i11 = 0;

     label2:
        if i11 >= 16 goto label3;

        $b1 = r1[i11];

        b2 = $b1 & 15;

        $b3 = r1[i11];

        $s12 = (short) $b3;

        $s4 = $s12 & 240;

        $i13 = (int) $s4;

        i5 = $i13 >> 4;

        $i7 = i11 * 2;

        $r4 = <org.apache.commons.httpclient.auth.DigestScheme: char[] HEXADECIMAL>;

        $c6 = $r4[i5];

        r2[$i7] = $c6;

        $i8 = i11 * 2;

        $i10 = $i8 + 1;

        $r5 = <org.apache.commons.httpclient.auth.DigestScheme: char[] HEXADECIMAL>;

        $i14 = (int) b2;

        $c9 = $r5[$i14];

        r2[$i10] = $c9;

        i11 = i11 + 1;

        goto label2;

     label3:
        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>(r2);

        return $r6;
    }

    public static java.lang.String createCnonce()
    {
        byte[] $r3, $r4;
        java.security.MessageDigest $r1;
        long $l0;
        org.apache.commons.httpclient.HttpClientError $r7;
        java.security.NoSuchAlgorithmException $r6;
        org.apache.commons.logging.Log $r0;
        java.lang.String $r2, $r5;

        $r0 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter DigestScheme.createCnonce()");

     label1:
        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new org.apache.commons.httpclient.HttpClientError;

        specialinvoke $r7.<org.apache.commons.httpclient.HttpClientError: void <init>(java.lang.String)>("Unsupported algorithm in HTTP Digest authentication: MD5");

        throw $r7;

     label4:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r3 = staticinvoke <org.apache.commons.httpclient.util.EncodingUtil: byte[] getAsciiBytes(java.lang.String)>($r2);

        $r4 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r3);

        $r5 = staticinvoke <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String encode(byte[])>($r4);

        return $r5;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        char[] $r2;
        java.lang.Class $r0, $r3;
        org.apache.commons.logging.Log $r1;

        <org.apache.commons.httpclient.auth.DigestScheme: int QOP_AUTH> = 2;

        <org.apache.commons.httpclient.auth.DigestScheme: int QOP_AUTH_INT> = 1;

        <org.apache.commons.httpclient.auth.DigestScheme: int QOP_MISSING> = 0;

        <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String NC> = "00000001";

        $r0 = <org.apache.commons.httpclient.auth.DigestScheme: java.lang.Class class$org$apache$commons$httpclient$auth$DigestScheme>;

        if $r0 != null goto label1;

        $r3 = staticinvoke <org.apache.commons.httpclient.auth.DigestScheme: java.lang.Class class$(java.lang.String)>("org.apache.commons.httpclient.auth.DigestScheme");

        <org.apache.commons.httpclient.auth.DigestScheme: java.lang.Class class$org$apache$commons$httpclient$auth$DigestScheme> = $r3;

        goto label2;

     label1:
        $r3 = <org.apache.commons.httpclient.auth.DigestScheme: java.lang.Class class$org$apache$commons$httpclient$auth$DigestScheme>;

     label2:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r3);

        <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG> = $r1;

        $r2 = newarray (char)[16];

        $r2[0] = 48;

        $r2[1] = 49;

        $r2[2] = 50;

        $r2[3] = 51;

        $r2[4] = 52;

        $r2[5] = 53;

        $r2[6] = 54;

        $r2[7] = 55;

        $r2[8] = 56;

        $r2[9] = 57;

        $r2[10] = 97;

        $r2[11] = 98;

        $r2[12] = 99;

        $r2[13] = 100;

        $r2[14] = 101;

        $r2[15] = 102;

        <org.apache.commons.httpclient.auth.DigestScheme: char[] HEXADECIMAL> = $r2;

        return;
    }
}
