public class org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader extends org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct implements org.eclipse.jdt.internal.compiler.env.IBinaryType
{
    private int accessFlags;
    private char[] classFileName;
    private char[] className;
    private int classNameIndex;
    private int constantPoolCount;
    private org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] annotations;
    private org.eclipse.jdt.internal.compiler.classfmt.FieldInfo[] fields;
    private int fieldsCount;
    private org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo innerInfo;
    private int innerInfoIndex;
    private org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo[] innerInfos;
    private char[][] interfaceNames;
    private int interfacesCount;
    private org.eclipse.jdt.internal.compiler.classfmt.MethodInfo[] methods;
    private int methodsCount;
    private char[] signature;
    private char[] sourceName;
    private char[] sourceFileName;
    private char[] superclassName;
    private long tagBits;
    private long version;
    private char[] enclosingTypeName;
    private char[][][] missingTypeNames;

    private static java.lang.String printTypeModifiers(int)
    {
        java.io.PrintWriter $r1;
        java.io.ByteArrayOutputStream $r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r2;

        i0 := @parameter0: int;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new java.io.PrintWriter;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r0);

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        virtualinvoke $r1.<java.io.PrintWriter: void print(java.lang.String)>("public ");

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        virtualinvoke $r1.<java.io.PrintWriter: void print(java.lang.String)>("private ");

     label2:
        $i3 = i0 & 16;

        if $i3 == 0 goto label3;

        virtualinvoke $r1.<java.io.PrintWriter: void print(java.lang.String)>("final ");

     label3:
        $i4 = i0 & 32;

        if $i4 == 0 goto label4;

        virtualinvoke $r1.<java.io.PrintWriter: void print(java.lang.String)>("super ");

     label4:
        $i5 = i0 & 512;

        if $i5 == 0 goto label5;

        virtualinvoke $r1.<java.io.PrintWriter: void print(java.lang.String)>("interface ");

     label5:
        $i6 = i0 & 1024;

        if $i6 == 0 goto label6;

        virtualinvoke $r1.<java.io.PrintWriter: void print(java.lang.String)>("abstract ");

     label6:
        virtualinvoke $r1.<java.io.PrintWriter: void flush()>();

        $r2 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        return $r2;
    }

    public static org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader read(java.io.File) throws org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException, java.io.IOException
    {
        java.io.File r0;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader $r1;

        r0 := @parameter0: java.io.File;

        $r1 = staticinvoke <org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader read(java.io.File,boolean)>(r0, 0);

        return $r1;
    }

    public static org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader read(java.io.File, boolean) throws org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException, java.io.IOException
    {
        byte[] $r1;
        char[] $r4;
        java.lang.String $r3;
        java.io.File r0;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader $r2;
        boolean z0;

        r0 := @parameter0: java.io.File;

        z0 := @parameter1: boolean;

        $r1 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: byte[] getFileByteContent(java.io.File)>(r0);

        $r2 = new org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $r3 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r4 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: void <init>(byte[],char[])>($r1, $r4);

        if z0 == 0 goto label1;

        specialinvoke $r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: void initialize()>();

     label1:
        return $r2;
    }

    public static org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader read(java.io.InputStream, java.lang.String) throws org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException, java.io.IOException
    {
        java.lang.String r1;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader $r2;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader read(java.io.InputStream,java.lang.String,boolean)>(r0, r1, 0);

        return $r2;
    }

    public static org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader read(java.io.InputStream, java.lang.String, boolean) throws org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException, java.io.IOException
    {
        byte[] $r1;
        int $i1;
        char[] $r4;
        java.lang.String r3;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader $r5;
        java.io.InputStream r0;
        boolean z0;

        r0 := @parameter0: java.io.InputStream;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $i1 = (int) -1;

        $r1 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: byte[] getInputStreamAsByteArray(java.io.InputStream,int)>(r0, $i1);

        $r5 = new org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $r4 = virtualinvoke r3.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r5.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: void <init>(byte[],char[])>($r1, $r4);

        if z0 == 0 goto label1;

        specialinvoke $r5.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: void initialize()>();

     label1:
        return $r5;
    }

    public static org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader read(java.util.zip.ZipFile, java.lang.String) throws org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException, java.io.IOException
    {
        java.util.zip.ZipFile r0;
        java.lang.String r1;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader $r2;

        r0 := @parameter0: java.util.zip.ZipFile;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader read(java.util.zip.ZipFile,java.lang.String,boolean)>(r0, r1, 0);

        return $r2;
    }

    public static org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader read(java.util.zip.ZipFile, java.lang.String, boolean) throws org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException, java.io.IOException
    {
        byte[] $r3;
        char[] $r5;
        java.util.zip.ZipFile r0;
        java.lang.String r1;
        java.util.zip.ZipEntry $r2;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader $r4;
        boolean z0;

        r0 := @parameter0: java.util.zip.ZipFile;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = virtualinvoke r0.<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: byte[] getZipEntryByteContent(java.util.zip.ZipEntry,java.util.zip.ZipFile)>($r2, r0);

        $r4 = new org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $r5 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r4.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: void <init>(byte[],char[])>($r3, $r5);

        if z0 == 0 goto label2;

        specialinvoke $r4.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: void initialize()>();

     label2:
        return $r4;
    }

    public static org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader read(java.lang.String) throws org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException, java.io.IOException
    {
        java.lang.String r0;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader read(java.lang.String,boolean)>(r0, 0);

        return $r1;
    }

    public static org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader read(java.lang.String, boolean) throws org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException, java.io.IOException
    {
        java.lang.String r1;
        java.io.File $r0;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader $r2;
        boolean z0;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        $r2 = staticinvoke <org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader read(java.io.File,boolean)>($r0, z0);

        return $r2;
    }

    public void <init>(byte[], char[]) throws org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException
    {
        byte[] r1;
        char[] r2;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        r1 := @parameter0: byte[];

        r2 := @parameter1: char[];

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: void <init>(byte[],char[],boolean)>(r1, r2, 0);

        return;
    }

    public void <init>(byte[], char[], boolean) throws org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException
    {
        byte[] r1, $r39, $r55, $r60, $r63;
        long $l1, $l2, $l4, $l5, $l50, $l51, $l70, $l71, $l72, $l73, $l105, $l107, $l108, $l109;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;
        int[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r20, $r23, $r29, $r30, $r38, $r49, $r50, $r54, $r59, $r62;
        org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo $r42, $r44, $r45, $r46, $r74;
        int $i0, $i3, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i28, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, i85, i86, i87, $i88, i89, i90, i91, $i92, i93, i94, i95, i96, i97, i98, i99, i100, i101, i102, i103, i104, $i106, $i110, $i111;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo[] $r53, $r56, $r57;
        char[][] $r33, $r66, $r67;
        char[][][] $r28, $r32;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo $r64;
        java.lang.Exception $r70;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo[] $r61, $r65;
        org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo[] $r36, $r40, $r41, $r43;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException $r72, $r75;
        char[] r2, $r15, $r17, $r18, $r19, $r21, $r22, $r24, $r25, $r26, $r27, $r31, $r34, $r35, $r47, $r48, $r51, $r52, $r68, $r69;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo $r58, $r73;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, $z11, z12;
        char $c27, $c29;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        r1 := @parameter0: byte[];

        r2 := @parameter1: char[];

        z10 := @parameter2: boolean;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct: void <init>(byte[],int[],int)>(r1, null, 0);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] classFileName> = r2;

        i85 = 10;

     label01:
        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>(6);

        $l1 = (long) $i0;

        $l2 = $l1 << 16;

        $i3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>(4);

        $l4 = (long) $i3;

        $l5 = $l2 + $l4;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: long version> = $l5;

        $i6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>(8);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int constantPoolCount> = $i6;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int constantPoolCount>;

        $r3 = newarray (int)[$i7];

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets> = $r3;

        i86 = 1;

        goto label15;

     label02:
        $i8 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u1At(int)>(i85);

        tableswitch($i8)
        {
            case 1: goto label03;
            case 2: goto label14;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label08;
            case 8: goto label09;
            case 9: goto label10;
            case 10: goto label11;
            case 11: goto label12;
            case 12: goto label13;
            default: goto label14;
        };

     label03:
        $r14 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        $r14[i86] = i85;

        $i9 = i85 + 1;

        $i10 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>($i9);

        i87 = i85 + $i10;

        i85 = i87 + 3;

        goto label14;

     label04:
        $r13 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        $r13[i86] = i85;

        i85 = i85 + 5;

        goto label14;

     label05:
        $r12 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        $r12[i86] = i85;

        i85 = i85 + 5;

        goto label14;

     label06:
        $r11 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        $r11[i86] = i85;

        i85 = i85 + 9;

        i86 = i86 + 1;

        goto label14;

     label07:
        $r10 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        $r10[i86] = i85;

        i85 = i85 + 9;

        i86 = i86 + 1;

        goto label14;

     label08:
        $r9 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        $r9[i86] = i85;

        i85 = i85 + 3;

        goto label14;

     label09:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        $r8[i86] = i85;

        i85 = i85 + 3;

        goto label14;

     label10:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        $r7[i86] = i85;

        i85 = i85 + 5;

        goto label14;

     label11:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        $r6[i86] = i85;

        i85 = i85 + 5;

        goto label14;

     label12:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        $r5[i86] = i85;

        i85 = i85 + 5;

        goto label14;

     label13:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        $r4[i86] = i85;

        i85 = i85 + 5;

     label14:
        i86 = i86 + 1;

     label15:
        $i88 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int constantPoolCount>;

        if i86 < $i88 goto label02;

        $i11 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>(i85);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int accessFlags> = $i11;

        i85 = i85 + 2;

        $i12 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>(i85);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int classNameIndex> = $i12;

        $i13 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int classNameIndex>;

        $r15 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] getConstantClassNameAt(int)>($i13);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] className> = $r15;

        i85 = i85 + 2;

        $i14 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>(i85);

        i85 = i85 + 2;

        if $i14 == 0 goto label16;

        $r69 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] getConstantClassNameAt(int)>($i14);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] superclassName> = $r69;

     label16:
        $i15 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>(i85);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int interfacesCount> = $i15;

        i85 = i85 + 2;

        $i16 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int interfacesCount>;

        if $i16 == 0 goto label19;

        $i82 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int interfacesCount>;

        $r66 = newarray (char[])[$i82];

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[][] interfaceNames> = $r66;

        i89 = 0;

        goto label18;

     label17:
        $r67 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[][] interfaceNames>;

        $i84 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>(i85);

        $r68 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] getConstantClassNameAt(int)>($i84);

        $r67[i89] = $r68;

        i85 = i85 + 2;

        i89 = i89 + 1;

     label18:
        $i83 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int interfacesCount>;

        if i89 < $i83 goto label17;

     label19:
        $i17 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>(i85);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int fieldsCount> = $i17;

        i85 = i85 + 2;

        $i18 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int fieldsCount>;

        if $i18 == 0 goto label22;

        $i79 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int fieldsCount>;

        $r61 = newarray (org.eclipse.jdt.internal.compiler.classfmt.FieldInfo)[$i79];

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo[] fields> = $r61;

        i90 = 0;

        goto label21;

     label20:
        $r63 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: byte[] reference>;

        $r62 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        $r64 = staticinvoke <org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo createField(byte[],int[],int)>($r63, $r62, i85);

        $r65 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo[] fields>;

        $r65[i90] = $r64;

        $i81 = virtualinvoke $r64.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int sizeInBytes()>();

        i85 = i85 + $i81;

        i90 = i90 + 1;

     label21:
        $i80 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int fieldsCount>;

        if i90 < $i80 goto label20;

     label22:
        $i19 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>(i85);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int methodsCount> = $i19;

        i85 = i85 + 2;

        $i20 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int methodsCount>;

        if $i20 == 0 goto label29;

        $i74 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int methodsCount>;

        $r53 = newarray (org.eclipse.jdt.internal.compiler.classfmt.MethodInfo)[$i74];

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo[] methods> = $r53;

        $i75 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int accessFlags>;

        $i76 = $i75 & 8192;

        if $i76 == 0 goto label23;

        $z11 = 1;

        goto label24;

     label23:
        $z11 = 0;

     label24:
        z12 = $z11;

        i91 = 0;

        goto label28;

     label25:
        $r56 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo[] methods>;

        $i78 = i91;

        if z12 == 0 goto label26;

        $r60 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: byte[] reference>;

        $r59 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        $r73 = staticinvoke <org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfo: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo createAnnotationMethod(byte[],int[],int)>($r60, $r59, i85);

        goto label27;

     label26:
        $r55 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: byte[] reference>;

        $r54 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        $r73 = staticinvoke <org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo createMethod(byte[],int[],int)>($r55, $r54, i85);

     label27:
        $r56[$i78] = $r73;

        $r57 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo[] methods>;

        $r58 = $r57[i91];

        $i77 = virtualinvoke $r58.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int sizeInBytes()>();

        i85 = i85 + $i77;

        i91 = i91 + 1;

     label28:
        $i92 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int methodsCount>;

        if i91 < $i92 goto label25;

     label29:
        $i21 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>(i85);

        i85 = i85 + 2;

        i93 = 0;

        goto label51;

     label30:
        $r16 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        $i22 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>(i85);

        i94 = $r16[$i22];

        $i24 = i94 + 3;

        $i23 = i94 + 1;

        $i25 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>($i23);

        $r17 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] utf8At(int,int)>($i24, $i25);

        $i26 = lengthof $r17;

        if $i26 != 0 goto label31;

        $l70 = (long) i85;

        $i69 = i85 + 2;

        $l71 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: long u4At(int)>($i69);

        $l72 = 6L + $l71;

        $l73 = $l70 + $l72;

        i85 = (int) $l73;

        goto label50;

     label31:
        $c27 = $r17[0];

        $i110 = (int) $c27;

        lookupswitch($i110)
        {
            case 68: goto label33;
            case 69: goto label32;
            case 73: goto label34;
            case 77: goto label46;
            case 82: goto label44;
            case 83: goto label39;
            default: goto label49;
        };

     label32:
        $r48 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] EnclosingMethodName>;

        $z8 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r17, $r48);

        if $z8 == 0 goto label49;

        $r49 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        $r50 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        $i55 = i85 + 6;

        $i56 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>($i55);

        $i58 = $r50[$i56];

        $i57 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int structOffset>;

        $i59 = $i58 - $i57;

        $i60 = $i59 + 1;

        $i61 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>($i60);

        $i63 = $r49[$i61];

        $i62 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int structOffset>;

        i95 = $i63 - $i62;

        $i65 = i95 + 3;

        $i64 = i95 + 1;

        $i66 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>($i64);

        $r51 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] utf8At(int,int)>($i65, $i66);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] enclosingTypeName> = $r51;

        goto label49;

     label33:
        $r52 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] DeprecatedName>;

        $z9 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r17, $r52);

        if $z9 == 0 goto label49;

        $i67 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int accessFlags>;

        $i68 = $i67 | 1048576;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int accessFlags> = $i68;

        goto label49;

     label34:
        $r34 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] InnerClassName>;

        $z6 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r17, $r34);

        if $z6 == 0 goto label38;

        i96 = i85 + 6;

        $i52 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>(i96);

        if $i52 == 0 goto label49;

        i97 = i96 + 2;

        $r36 = newarray (org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo)[$i52];

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo[] innerInfos> = $r36;

        i98 = 0;

        goto label37;

     label35:
        $r40 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo[] innerInfos>;

        $r74 = new org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo;

        $r39 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: byte[] reference>;

        $r38 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        specialinvoke $r74.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: void <init>(byte[],int[],int)>($r39, $r38, i97);

        $r40[i98] = $r74;

        $i54 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int classNameIndex>;

        $r41 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo[] innerInfos>;

        $r42 = $r41[i98];

        $i53 = $r42.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int innerClassNameIndex>;

        if $i54 != $i53 goto label36;

        $r43 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo[] innerInfos>;

        $r44 = $r43[i98];

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo innerInfo> = $r44;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int innerInfoIndex> = i98;

     label36:
        i97 = i97 + 8;

        i98 = i98 + 1;

     label37:
        if i98 < $i52 goto label35;

        $r45 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo innerInfo>;

        if $r45 == null goto label49;

        $r46 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo innerInfo>;

        $r47 = virtualinvoke $r46.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] getEnclosingTypeName()>();

        if $r47 == null goto label49;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] enclosingTypeName> = $r47;

        goto label49;

     label38:
        $r35 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] InconsistentHierarchy>;

        $z7 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r17, $r35);

        if $z7 == 0 goto label49;

        $l50 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: long tagBits>;

        $l51 = $l50 | 131072L;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: long tagBits> = $l51;

        goto label49;

     label39:
        $i28 = lengthof $r17;

        if $i28 <= 2 goto label49;

        $c29 = $r17[1];

        $i111 = (int) $c29;

        lookupswitch($i111)
        {
            case 105: goto label42;
            case 111: goto label40;
            case 121: goto label41;
            default: goto label43;
        };

     label40:
        $r19 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] SourceName>;

        $z1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r17, $r19);

        if $z1 == 0 goto label49;

        $r20 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        $i32 = i85 + 6;

        $i33 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>($i32);

        i99 = $r20[$i33];

        $i35 = i99 + 3;

        $i34 = i99 + 1;

        $i36 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>($i34);

        $r21 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] utf8At(int,int)>($i35, $i36);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] sourceFileName> = $r21;

        goto label49;

     label41:
        $r18 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] SyntheticName>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r17, $r18);

        if $z0 == 0 goto label49;

        $i30 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int accessFlags>;

        $i31 = $i30 | 4096;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int accessFlags> = $i31;

        goto label49;

     label42:
        $r22 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] SignatureName>;

        $z2 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r17, $r22);

        if $z2 == 0 goto label49;

        $r23 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        $i37 = i85 + 6;

        $i38 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>($i37);

        i100 = $r23[$i38];

        $i40 = i100 + 3;

        $i39 = i100 + 1;

        $i41 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>($i39);

        $r24 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] utf8At(int,int)>($i40, $i41);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] signature> = $r24;

     label43:
        goto label49;

     label44:
        $r25 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] RuntimeVisibleAnnotationsName>;

        $z3 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r17, $r25);

        if $z3 == 0 goto label45;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: void decodeAnnotations(int,boolean)>(i85, 1);

        goto label49;

     label45:
        $r26 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] RuntimeInvisibleAnnotationsName>;

        $z4 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r17, $r26);

        if $z4 == 0 goto label49;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: void decodeAnnotations(int,boolean)>(i85, 0);

        goto label49;

     label46:
        $r27 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] MissingTypesName>;

        $z5 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r17, $r27);

        if $z5 == 0 goto label49;

        i101 = i85 + 6;

        $i42 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>(i101);

        if $i42 == 0 goto label49;

        $r28 = newarray (char[][])[$i42];

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[][][] missingTypeNames> = $r28;

        i102 = i101 + 2;

        i103 = 0;

        goto label48;

     label47:
        $r29 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        $r30 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        $i43 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>(i102);

        $i44 = $r30[$i43];

        $i45 = $i44 + 1;

        $i46 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>($i45);

        i104 = $r29[$i46];

        $i48 = i104 + 3;

        $i47 = i104 + 1;

        $i49 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>($i47);

        $r31 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] utf8At(int,int)>($i48, $i49);

        $r32 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[][][] missingTypeNames>;

        $r33 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[][] splitOn(char,char[])>(47, $r31);

        $r32[i103] = $r33;

        i102 = i102 + 2;

        i103 = i103 + 1;

     label48:
        if i103 < $i42 goto label47;

     label49:
        $l105 = (long) i85;

        $i106 = i85 + 2;

        $l107 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: long u4At(int)>($i106);

        $l108 = 6L + $l107;

        $l109 = $l105 + $l108;

        i85 = (int) $l109;

     label50:
        i93 = i93 + 1;

     label51:
        if i93 < $i21 goto label30;

        if z10 == 0 goto label55;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: void initialize()>();

     label52:
        goto label55;

     label53:
        $r72 := @caughtexception;

        throw $r72;

     label54:
        $r70 := @caughtexception;

        $r75 = new org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException;

        specialinvoke $r75.<org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException: void <init>(int,int)>(21, i85);

        throw $r75;

     label55:
        return;

        catch org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException from label01 to label52 with label53;
        catch java.lang.Exception from label01 to label52 with label54;
    }

    public int accessFlags()
    {
        int $i0;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int accessFlags>;

        return $i0;
    }

    private void decodeAnnotations(int, boolean)
    {
        byte[] $r3;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] $r4, $r5, $r6, $r7, $r8, r9, r10;
        long l4, $l8, $l9;
        byte $b5;
        int[] $r2;
        int i0, $i1, $i2, $i3, $i6, $i7, $i10, $i11, i12, i13, i14, i15;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;
        boolean z0;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i1 = i0 + 6;

        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>($i1);

        if $i2 <= 0 goto label9;

        i12 = i0 + 8;

        r9 = (org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[]) null;

        i13 = 0;

        i14 = 0;

        goto label5;

     label1:
        $r1 = new org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: byte[] reference>;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        specialinvoke $r1.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: void <init>(byte[],int[],int,boolean,boolean)>($r3, $r2, i12, z0, 0);

        $i3 = $r1.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        i12 = i12 + $i3;

        l4 = $r1.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: long standardAnnotationTagBits>;

        $b5 = l4 cmp 0L;

        if $b5 == 0 goto label2;

        $l8 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: long tagBits>;

        $l9 = $l8 | l4;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: long tagBits> = $l9;

        goto label4;

     label2:
        if r9 != null goto label3;

        $i7 = $i2 - i14;

        r9 = newarray (org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo)[$i7];

     label3:
        $i6 = i13;

        i13 = i13 + 1;

        r9[$i6] = $r1;

     label4:
        i14 = i14 + 1;

     label5:
        if i14 < $i2 goto label1;

        if r9 != null goto label6;

        return;

     label6:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] annotations>;

        if $r4 != null goto label8;

        $i11 = lengthof r9;

        if i13 == $i11 goto label7;

        $r8 = r9;

        $r7 = newarray (org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo)[i13];

        r9 = $r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r7, 0, i13);

     label7:
        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] annotations> = r9;

        goto label9;

     label8:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] annotations>;

        i15 = lengthof $r5;

        $i10 = i15 + i13;

        r10 = newarray (org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo)[$i10];

        $r6 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] annotations>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r10, 0, i15);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r9, 0, r10, i15, i13);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] annotations> = r10;

     label9:
        return;
    }

    public org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation[] getAnnotations()
    {
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] $r1;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] annotations>;

        return $r1;
    }

    private char[] getConstantClassNameAt(int)
    {
        int[] $r1, $r2;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7;
        char[] $r3;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        i0 := @parameter0: int;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        $i1 = $r1[i0];

        $i2 = $i1 + 1;

        $i3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>($i2);

        i4 = $r2[$i3];

        $i6 = i4 + 3;

        $i5 = i4 + 1;

        $i7 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int u2At(int)>($i5);

        $r3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] utf8At(int,int)>($i6, $i7);

        return $r3;
    }

    public int[] getConstantPoolOffsets()
    {
        int[] $r1;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int[] constantPoolOffsets>;

        return $r1;
    }

    public char[] getEnclosingTypeName()
    {
        char[] $r1;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] enclosingTypeName>;

        return $r1;
    }

    public org.eclipse.jdt.internal.compiler.env.IBinaryField[] getFields()
    {
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo[] $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo[] fields>;

        return $r1;
    }

    public char[] getFileName()
    {
        char[] $r1;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] classFileName>;

        return $r1;
    }

    public char[] getGenericSignature()
    {
        char[] $r1;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] signature>;

        return $r1;
    }

    public char[] getInnerSourceName()
    {
        org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo $r1, $r2;
        char[] $r3;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo innerInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo innerInfo>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] getSourceName()>();

        return $r3;

     label1:
        return null;
    }

    public char[][] getInterfaceNames()
    {
        char[][] $r1;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[][] interfaceNames>;

        return $r1;
    }

    public org.eclipse.jdt.internal.compiler.env.IBinaryNestedType[] getMemberTypes()
    {
        org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo[] $r1, $r2, $r4;
        org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo $r3, r5;
        int i0, $i1, $i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;
        org.eclipse.jdt.internal.compiler.env.IBinaryNestedType[] $r7, $r8, r9;
        char[] $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo[] innerInfos>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo[] innerInfos>;

        i0 = lengthof $r2;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo innerInfo>;

        if $r3 == null goto label2;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int innerInfoIndex>;

        $i10 = $i9 + 1;

        goto label3;

     label2:
        $i10 = 0;

     label3:
        if i0 == $i10 goto label9;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int innerInfoIndex>;

        $i2 = i0 - $i1;

        r9 = newarray (org.eclipse.jdt.internal.compiler.env.IBinaryNestedType)[$i2];

        i11 = 0;

        i12 = $i10;

        goto label6;

     label4:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo[] innerInfos>;

        r5 = $r4[i12];

        i3 = r5.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int outerClassNameIndex>;

        i4 = r5.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int innerNameIndex>;

        if i3 == 0 goto label5;

        if i4 == 0 goto label5;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int classNameIndex>;

        if i3 != $i5 goto label5;

        $r6 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] getSourceName()>();

        $i6 = lengthof $r6;

        if $i6 == 0 goto label5;

        $i7 = i11;

        i11 = i11 + 1;

        r9[$i7] = r5;

     label5:
        i12 = i12 + 1;

     label6:
        if i12 < i0 goto label4;

        if i11 != 0 goto label7;

        return null;

     label7:
        $i8 = lengthof r9;

        if i11 == $i8 goto label8;

        $r8 = r9;

        $r7 = newarray (org.eclipse.jdt.internal.compiler.env.IBinaryNestedType)[i11];

        r9 = $r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r7, 0, i11);

     label8:
        return r9;

     label9:
        return null;
    }

    public org.eclipse.jdt.internal.compiler.env.IBinaryMethod[] getMethods()
    {
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo[] $r1;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo[] methods>;

        return $r1;
    }

    public char[][][] getMissingTypeNames()
    {
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;
        char[][][] $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[][][] missingTypeNames>;

        return $r1;
    }

    public int getModifiers()
    {
        org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo innerInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo innerInfo>;

        $i1 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int getModifiers()>();

        $i2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int accessFlags>;

        $i3 = $i2 & 1048576;

        $i4 = $i1 | $i3;

        return $i4;

     label1:
        $i0 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int accessFlags>;

        return $i0;
    }

    public char[] getName()
    {
        char[] $r1;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] className>;

        return $r1;
    }

    public char[] getSourceName()
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;
        boolean $z0;
        char[] $r1, $r2, $r3, r4, $r5, r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] sourceName>;

        if $r1 == null goto label1;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] sourceName>;

        return $r5;

     label1:
        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] getInnerSourceName()>();

        r6 = $r2;

        if $r2 != null goto label4;

        $r3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] getName()>();

        r6 = $r3;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: boolean isAnonymous()>();

        if $z0 == 0 goto label2;

        $i4 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int lastIndexOf(char,char[])>(47, $r3);

        $i5 = $i4 + 1;

        $i6 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int indexOf(char,char[],int)>(36, $r3, $i5);

        i7 = $i6 + 1;

        goto label3;

     label2:
        $i0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int lastIndexOf(char,char[])>(47, $r3);

        i7 = $i0 + 1;

     label3:
        if i7 <= 0 goto label4;

        $i1 = lengthof $r3;

        $i2 = $i1 - i7;

        r4 = newarray (char)[$i2];

        $i3 = lengthof r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, i7, r4, 0, $i3);

        r6 = r4;

     label4:
        r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] sourceName> = r6;

        return r6;
    }

    public char[] getSuperclassName()
    {
        char[] $r1;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] superclassName>;

        return $r1;
    }

    public long getTagBits()
    {
        long $l0;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $l0 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: long tagBits>;

        return $l0;
    }

    public long getVersion()
    {
        long $l0;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $l0 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: long version>;

        return $l0;
    }

    private boolean hasNonSyntheticFieldChanges(org.eclipse.jdt.internal.compiler.classfmt.FieldInfo[], org.eclipse.jdt.internal.compiler.classfmt.FieldInfo[])
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo $r2, $r3, $r4, $r5, $r7, $r8;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo[] r0, r1;

        r6 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo[];

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo[];

        if r0 != null goto label01;

        $i6 = 0;

        goto label02;

     label01:
        $i6 = lengthof r0;

     label02:
        i0 = $i6;

        if r1 != null goto label03;

        $i7 = 0;

        goto label04;

     label03:
        $i7 = lengthof r1;

     label04:
        i1 = $i7;

        i8 = 0;

        i9 = 0;

        goto label09;

     label05:
        i8 = i8 + 1;

        if i8 < i0 goto label06;

        goto label11;

     label06:
        $r4 = r0[i8];

        $z2 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: boolean isSynthetic()>();

        if $z2 != 0 goto label05;

        goto label08;

     label07:
        i9 = i9 + 1;

        if i9 < i1 goto label08;

        goto label11;

     label08:
        $r5 = r1[i9];

        $z3 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: boolean isSynthetic()>();

        if $z3 != 0 goto label07;

        $i4 = i8;

        i8 = i8 + 1;

        $r8 = r0[$i4];

        $i5 = i9;

        i9 = i9 + 1;

        $r7 = r1[$i5];

        $z4 = specialinvoke r6.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: boolean hasStructuralFieldChanges(org.eclipse.jdt.internal.compiler.classfmt.FieldInfo,org.eclipse.jdt.internal.compiler.classfmt.FieldInfo)>($r8, $r7);

        if $z4 == 0 goto label09;

        return 1;

     label09:
        if i8 >= i0 goto label11;

        if i9 < i1 goto label06;

        goto label11;

     label10:
        $i2 = i8;

        i8 = i8 + 1;

        $r2 = r0[$i2];

        $z0 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: boolean isSynthetic()>();

        if $z0 != 0 goto label11;

        return 1;

     label11:
        if i8 < i0 goto label10;

        goto label13;

     label12:
        $i3 = i9;

        i9 = i9 + 1;

        $r3 = r1[$i3];

        $z1 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: boolean isSynthetic()>();

        if $z1 != 0 goto label13;

        return 1;

     label13:
        if i9 < i1 goto label12;

        return 0;
    }

    private boolean hasNonSyntheticMethodChanges(org.eclipse.jdt.internal.compiler.classfmt.MethodInfo[], org.eclipse.jdt.internal.compiler.classfmt.MethodInfo[])
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo[] r0, r1;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo $r2, $r3, $r4, $r5, $r7, $r8;

        r6 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo[];

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo[];

        if r0 != null goto label01;

        $i6 = 0;

        goto label02;

     label01:
        $i6 = lengthof r0;

     label02:
        i0 = $i6;

        if r1 != null goto label03;

        $i7 = 0;

        goto label04;

     label03:
        $i7 = lengthof r1;

     label04:
        i1 = $i7;

        i8 = 0;

        i9 = 0;

        goto label09;

     label05:
        i8 = i8 + 1;

        if i8 < i0 goto label06;

        goto label11;

     label06:
        $r4 = r0[i8];

        $z4 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: boolean isSynthetic()>();

        if $z4 != 0 goto label05;

        $z5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: boolean isClinit()>();

        if $z5 != 0 goto label05;

        goto label08;

     label07:
        i9 = i9 + 1;

        if i9 < i1 goto label08;

        goto label11;

     label08:
        $r5 = r1[i9];

        $z6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: boolean isSynthetic()>();

        if $z6 != 0 goto label07;

        $z7 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: boolean isClinit()>();

        if $z7 != 0 goto label07;

        $i4 = i8;

        i8 = i8 + 1;

        $r8 = r0[$i4];

        $i5 = i9;

        i9 = i9 + 1;

        $r7 = r1[$i5];

        $z8 = specialinvoke r6.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: boolean hasStructuralMethodChanges(org.eclipse.jdt.internal.compiler.classfmt.MethodInfo,org.eclipse.jdt.internal.compiler.classfmt.MethodInfo)>($r8, $r7);

        if $z8 == 0 goto label09;

        return 1;

     label09:
        if i8 >= i0 goto label11;

        if i9 < i1 goto label06;

        goto label11;

     label10:
        $i2 = i8;

        i8 = i8 + 1;

        $r2 = r0[$i2];

        $z0 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: boolean isSynthetic()>();

        if $z0 != 0 goto label11;

        $z1 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: boolean isClinit()>();

        if $z1 != 0 goto label11;

        return 1;

     label11:
        if i8 < i0 goto label10;

        goto label13;

     label12:
        $i3 = i9;

        i9 = i9 + 1;

        $r3 = r1[$i3];

        $z2 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: boolean isSynthetic()>();

        if $z2 != 0 goto label13;

        $z3 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: boolean isClinit()>();

        if $z3 != 0 goto label13;

        return 1;

     label13:
        if i9 < i1 goto label12;

        return 0;
    }

    public boolean hasStructuralChanges(byte[])
    {
        byte[] r1;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        r1 := @parameter0: byte[];

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: boolean hasStructuralChanges(byte[],boolean,boolean)>(r1, 1, 1);

        return $z0;
    }

    public boolean hasStructuralChanges(byte[], boolean, boolean)
    {
        byte[] r1;
        char[][] $r8, $r9, $r13, $r14, $r38;
        byte $b6;
        char[][][] $r44, $r45;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo $r24, $r25, $r29, $r30;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo[] $r23, $r26, $r27, $r28, $r37;
        org.eclipse.jdt.internal.compiler.env.IBinaryMethod[] $r42;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException $r41;
        long $l2, $l3, $l4, $l5;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader $r0, r2;
        char[] $r3, $r4, $r5, $r6, $r7, $r32, $r34, $r39, $r40;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo $r16, $r17, $r21, $r22;
        org.eclipse.jdt.internal.compiler.env.IBinaryNestedType $r31, $r33, $r35, $r36;
        boolean $z0, $z1, $z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13, z15, $z17, $z18, $z19, $z20;
        org.eclipse.jdt.internal.compiler.env.IBinaryNestedType[] $r10, $r11;
        org.eclipse.jdt.internal.compiler.env.IBinaryField[] $r12;
        int $i0, $i1, $i7, i8, $i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26, i27, $i28, i29, $i30, i31, $i32, i33, i34, i35, $i36, i37, i38, i39;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo[] $r15, $r18, $r19, $r20, $r43;

        r2 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        r1 := @parameter0: byte[];

        z3 := @parameter1: boolean;

        z4 := @parameter2: boolean;

     label01:
        $r0 = new org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] classFileName>;

        specialinvoke $r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: void <init>(byte[],char[])>(r1, $r3);

        $i0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int getModifiers()>();

        $i1 = virtualinvoke $r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int getModifiers()>();

        if $i0 == $i1 goto label03;

     label02:
        return 1;

     label03:
        $l2 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: long getTagBits()>();

        $l3 = $l2 & 140703128748032L;

        $l4 = virtualinvoke $r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: long getTagBits()>();

        $l5 = $l4 & 140703128748032L;

        $b6 = $l3 cmp $l5;

        if $b6 == 0 goto label05;

     label04:
        return 1;

     label05:
        $r4 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] getGenericSignature()>();

        $r5 = virtualinvoke $r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] getGenericSignature()>();

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r4, $r5);

        if $z0 != 0 goto label07;

     label06:
        return 1;

     label07:
        $r6 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] getSuperclassName()>();

        $r7 = virtualinvoke $r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] getSuperclassName()>();

        $z1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r6, $r7);

        if $z1 != 0 goto label09;

     label08:
        return 1;

     label09:
        $r8 = virtualinvoke $r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[][] getInterfaceNames()>();

        $r9 = r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[][] interfaceNames>;

        if $r9 == $r8 goto label18;

        if $r8 != null goto label10;

        $i25 = 0;

        goto label11;

     label10:
        $i25 = lengthof $r8;

     label11:
        $i24 = r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int interfacesCount>;

        if $i25 == $i24 goto label13;

     label12:
        return 1;

     label13:
        i26 = 0;

        i27 = r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int interfacesCount>;

        goto label17;

     label14:
        $r38 = r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[][] interfaceNames>;

        $r40 = $r38[i26];

        $r39 = $r8[i26];

        $z12 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r40, $r39);

        if $z12 != 0 goto label16;

     label15:
        return 1;

     label16:
        i26 = i26 + 1;

     label17:
        if i26 < i27 goto label14;

     label18:
        $r10 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.env.IBinaryNestedType[] getMemberTypes()>();

        $r11 = virtualinvoke $r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.env.IBinaryNestedType[] getMemberTypes()>();

        if $r10 == $r11 goto label29;

        if $r10 != null goto label19;

        $i28 = 0;

        goto label20;

     label19:
        $i28 = lengthof $r10;

     label20:
        i29 = $i28;

        if $r11 != null goto label21;

        $i30 = 0;

        goto label22;

     label21:
        $i30 = lengthof $r11;

     label22:
        if i29 == $i30 goto label24;

     label23:
        return 1;

     label24:
        i31 = 0;

        goto label28;

     label25:
        $r31 = $r10[i31];

        $r32 = interfaceinvoke $r31.<org.eclipse.jdt.internal.compiler.env.IBinaryNestedType: char[] getName()>();

        $r33 = $r11[i31];

        $r34 = interfaceinvoke $r33.<org.eclipse.jdt.internal.compiler.env.IBinaryNestedType: char[] getName()>();

        $z11 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r32, $r34);

        if $z11 == 0 goto label26;

        $r35 = $r10[i31];

        $i22 = interfaceinvoke $r35.<org.eclipse.jdt.internal.compiler.env.IBinaryNestedType: int getModifiers()>();

        $r36 = $r11[i31];

        $i23 = interfaceinvoke $r36.<org.eclipse.jdt.internal.compiler.env.IBinaryNestedType: int getModifiers()>();

        if $i22 == $i23 goto label27;

     label26:
        return 1;

     label27:
        i31 = i31 + 1;

     label28:
        if i31 < i29 goto label25;

     label29:
        $r12 = virtualinvoke $r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.env.IBinaryField[] getFields()>();

        $r37 = (org.eclipse.jdt.internal.compiler.classfmt.FieldInfo[]) $r12;

        if $r37 != null goto label30;

        $i32 = 0;

        goto label31;

     label30:
        $i32 = lengthof $r37;

     label31:
        i33 = $i32;

        z13 = 1;

        $i7 = r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int fieldsCount>;

        if $i7 != $i32 goto label39;

        i34 = 0;

        goto label34;

     label32:
        $r28 = r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo[] fields>;

        $r30 = $r28[i34];

        $r29 = $r37[i34];

        $z10 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: boolean hasStructuralFieldChanges(org.eclipse.jdt.internal.compiler.classfmt.FieldInfo,org.eclipse.jdt.internal.compiler.classfmt.FieldInfo)>($r30, $r29);

        if $z10 == 0 goto label33;

        goto label35;

     label33:
        i34 = i34 + 1;

     label34:
        $i20 = r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int fieldsCount>;

        if i34 < $i20 goto label32;

     label35:
        $i21 = r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int fieldsCount>;

        if i34 == $i21 goto label36;

        $z20 = 1;

        $z19 = 1;

        goto label37;

     label36:
        $z20 = 0;

        $z19 = 0;

     label37:
        z13 = $z19;

        if $z20 == 0 goto label39;

        if z3 != 0 goto label39;

        if z4 != 0 goto label39;

     label38:
        return 1;

     label39:
        if z13 == 0 goto label50;

        $i17 = r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int fieldsCount>;

        if $i17 == i33 goto label41;

        if z4 != 0 goto label41;

     label40:
        return 1;

     label41:
        if z3 == 0 goto label43;

        $i19 = r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int fieldsCount>;

        if $i19 == 0 goto label42;

        $r27 = r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo[] fields>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>($r27);

     label42:
        if i33 == 0 goto label43;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>($r37);

     label43:
        if z4 == 0 goto label45;

        $r26 = r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo[] fields>;

        $z9 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: boolean hasNonSyntheticFieldChanges(org.eclipse.jdt.internal.compiler.classfmt.FieldInfo[],org.eclipse.jdt.internal.compiler.classfmt.FieldInfo[])>($r26, $r37);

        if $z9 == 0 goto label50;

     label44:
        return 1;

     label45:
        i35 = 0;

        goto label49;

     label46:
        $r23 = r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo[] fields>;

        $r25 = $r23[i35];

        $r24 = $r37[i35];

        $z8 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: boolean hasStructuralFieldChanges(org.eclipse.jdt.internal.compiler.classfmt.FieldInfo,org.eclipse.jdt.internal.compiler.classfmt.FieldInfo)>($r25, $r24);

        if $z8 == 0 goto label48;

     label47:
        return 1;

     label48:
        i35 = i35 + 1;

     label49:
        $i18 = r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int fieldsCount>;

        if i35 < $i18 goto label46;

     label50:
        $r42 = virtualinvoke $r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.env.IBinaryMethod[] getMethods()>();

        $r43 = (org.eclipse.jdt.internal.compiler.classfmt.MethodInfo[]) $r42;

        if $r43 != null goto label51;

        $i36 = 0;

        goto label52;

     label51:
        $i36 = lengthof $r43;

     label52:
        i8 = $i36;

        z15 = 1;

        $i9 = r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int methodsCount>;

        if $i9 != $i36 goto label60;

        i37 = 0;

        goto label55;

     label53:
        $r20 = r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo[] methods>;

        $r22 = $r20[i37];

        $r21 = $r43[i37];

        $z7 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: boolean hasStructuralMethodChanges(org.eclipse.jdt.internal.compiler.classfmt.MethodInfo,org.eclipse.jdt.internal.compiler.classfmt.MethodInfo)>($r22, $r21);

        if $z7 == 0 goto label54;

        goto label56;

     label54:
        i37 = i37 + 1;

     label55:
        $i15 = r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int methodsCount>;

        if i37 < $i15 goto label53;

     label56:
        $i16 = r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int methodsCount>;

        if i37 == $i16 goto label57;

        $z18 = 1;

        $z17 = 1;

        goto label58;

     label57:
        $z18 = 0;

        $z17 = 0;

     label58:
        z15 = $z17;

        if $z18 == 0 goto label60;

        if z3 != 0 goto label60;

        if z4 != 0 goto label60;

     label59:
        return 1;

     label60:
        if z15 == 0 goto label71;

        $i12 = r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int methodsCount>;

        if $i12 == i8 goto label62;

        if z4 != 0 goto label62;

     label61:
        return 1;

     label62:
        if z3 == 0 goto label64;

        $i14 = r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int methodsCount>;

        if $i14 == 0 goto label63;

        $r19 = r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo[] methods>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>($r19);

     label63:
        if i8 == 0 goto label64;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>($r43);

     label64:
        if z4 == 0 goto label66;

        $r18 = r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo[] methods>;

        $z6 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: boolean hasNonSyntheticMethodChanges(org.eclipse.jdt.internal.compiler.classfmt.MethodInfo[],org.eclipse.jdt.internal.compiler.classfmt.MethodInfo[])>($r18, $r43);

        if $z6 == 0 goto label71;

     label65:
        return 1;

     label66:
        i38 = 0;

        goto label70;

     label67:
        $r15 = r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo[] methods>;

        $r17 = $r15[i38];

        $r16 = $r43[i38];

        $z5 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: boolean hasStructuralMethodChanges(org.eclipse.jdt.internal.compiler.classfmt.MethodInfo,org.eclipse.jdt.internal.compiler.classfmt.MethodInfo)>($r17, $r16);

        if $z5 == 0 goto label69;

     label68:
        return 1;

     label69:
        i38 = i38 + 1;

     label70:
        $i13 = r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int methodsCount>;

        if i38 < $i13 goto label67;

     label71:
        $r44 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[][][] getMissingTypeNames()>();

        $r45 = virtualinvoke $r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[][][] getMissingTypeNames()>();

        if $r44 == null goto label80;

        if $r45 != null goto label73;

     label72:
        return 1;

     label73:
        i10 = lengthof $r44;

        $i11 = lengthof $r45;

        if i10 == $i11 goto label75;

     label74:
        return 1;

     label75:
        i39 = 0;

        goto label79;

     label76:
        $r14 = $r44[i39];

        $r13 = $r45[i39];

        $z2 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[][],char[][])>($r14, $r13);

        if $z2 != 0 goto label78;

     label77:
        return 1;

     label78:
        i39 = i39 + 1;

     label79:
        if i39 < i10 goto label76;

        goto label82;

     label80:
        if $r45 == null goto label82;

     label81:
        return 1;

     label82:
        return 0;

     label83:
        $r41 := @caughtexception;

        return 1;

        catch org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException from label01 to label02 with label83;
        catch org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException from label03 to label04 with label83;
        catch org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException from label05 to label06 with label83;
        catch org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException from label07 to label08 with label83;
        catch org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException from label09 to label12 with label83;
        catch org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException from label13 to label15 with label83;
        catch org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException from label16 to label23 with label83;
        catch org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException from label24 to label26 with label83;
        catch org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException from label27 to label38 with label83;
        catch org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException from label39 to label40 with label83;
        catch org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException from label41 to label44 with label83;
        catch org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException from label45 to label47 with label83;
        catch org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException from label48 to label59 with label83;
        catch org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException from label60 to label61 with label83;
        catch org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException from label62 to label65 with label83;
        catch org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException from label66 to label68 with label83;
        catch org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException from label69 to label72 with label83;
        catch org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException from label73 to label74 with label83;
        catch org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException from label75 to label77 with label83;
        catch org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException from label78 to label81 with label83;
    }

    private boolean hasStructuralFieldChanges(org.eclipse.jdt.internal.compiler.classfmt.FieldInfo, org.eclipse.jdt.internal.compiler.classfmt.FieldInfo)
    {
        byte $b6, $b12, $b13, $b16, $b19, $b20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo r0, r2;
        org.eclipse.jdt.internal.compiler.impl.Constant $r8, $r9;
        float $f0, $f1;
        long $l2, $l3, $l4, $l5, $l14, $l15;
        short $s17, $s18;
        int $i0, $i1, $i7, $i8, $i9, $i10, $i11, $i23, $i24, $i25, $i26, $i27, $i28;
        java.lang.String $r12, $r13;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r14;
        double $d0, $d1;
        char $c21, $c22;
        char[] $r1, $r3, $r4, $r5, $r6, $r7;
        java.lang.Class $r10, $r11;

        r14 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] getGenericSignature()>();

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] getGenericSignature()>();

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r1, $r3);

        if $z0 != 0 goto label01;

        return 1;

     label01:
        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int getModifiers()>();

        $i1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int getModifiers()>();

        if $i0 == $i1 goto label02;

        return 1;

     label02:
        $l2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: long getTagBits()>();

        $l3 = $l2 & 70368744177664L;

        $l4 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: long getTagBits()>();

        $l5 = $l4 & 70368744177664L;

        $b6 = $l3 cmp $l5;

        if $b6 == 0 goto label03;

        return 1;

     label03:
        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] getName()>();

        $r5 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] getName()>();

        $z1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r4, $r5);

        if $z1 != 0 goto label04;

        return 1;

     label04:
        $r6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] getTypeName()>();

        $r7 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] getTypeName()>();

        $z2 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r6, $r7);

        if $z2 != 0 goto label05;

        return 1;

     label05:
        $z3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: boolean hasConstant()>();

        $z4 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: boolean hasConstant()>();

        if $z3 == $z4 goto label06;

        return 1;

     label06:
        $z5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: boolean hasConstant()>();

        if $z5 == 0 goto label27;

        $r8 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: org.eclipse.jdt.internal.compiler.impl.Constant getConstant()>();

        $r9 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: org.eclipse.jdt.internal.compiler.impl.Constant getConstant()>();

        $i7 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.impl.Constant: int typeID()>();

        $i8 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.impl.Constant: int typeID()>();

        if $i7 == $i8 goto label07;

        return 1;

     label07:
        $r10 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r9.<java.lang.Object: java.lang.Class getClass()>();

        $z6 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>($r11);

        if $z6 != 0 goto label08;

        return 1;

     label08:
        $i9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.impl.Constant: int typeID()>();

        tableswitch($i9)
        {
            case 2: goto label15;
            case 3: goto label11;
            case 4: goto label13;
            case 5: goto label23;
            case 6: goto label27;
            case 7: goto label17;
            case 8: goto label21;
            case 9: goto label19;
            case 10: goto label09;
            case 11: goto label24;
            default: goto label27;
        };

     label09:
        $i10 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.impl.Constant: int intValue()>();

        $i11 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.impl.Constant: int intValue()>();

        if $i10 == $i11 goto label10;

        return 1;

     label10:
        return 0;

     label11:
        $b19 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.impl.Constant: byte byteValue()>();

        $b20 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.impl.Constant: byte byteValue()>();

        $i23 = (int) $b19;

        $i24 = (int) $b20;

        if $i23 == $i24 goto label12;

        return 1;

     label12:
        return 0;

     label13:
        $s17 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.impl.Constant: short shortValue()>();

        $s18 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.impl.Constant: short shortValue()>();

        $i25 = (int) $s17;

        $i26 = (int) $s18;

        if $i25 == $i26 goto label14;

        return 1;

     label14:
        return 0;

     label15:
        $c21 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.impl.Constant: char charValue()>();

        $c22 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.impl.Constant: char charValue()>();

        $i27 = (int) $c21;

        $i28 = (int) $c22;

        if $i27 == $i28 goto label16;

        return 1;

     label16:
        return 0;

     label17:
        $l14 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.impl.Constant: long longValue()>();

        $l15 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.impl.Constant: long longValue()>();

        $b16 = $l14 cmp $l15;

        if $b16 == 0 goto label18;

        return 1;

     label18:
        return 0;

     label19:
        $f0 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.impl.Constant: float floatValue()>();

        $f1 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.impl.Constant: float floatValue()>();

        $b12 = $f0 cmpl $f1;

        if $b12 == 0 goto label20;

        return 1;

     label20:
        return 0;

     label21:
        $d0 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.impl.Constant: double doubleValue()>();

        $d1 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.impl.Constant: double doubleValue()>();

        $b13 = $d0 cmpl $d1;

        if $b13 == 0 goto label22;

        return 1;

     label22:
        return 0;

     label23:
        $z8 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        $z9 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        $z10 = $z8 ^ $z9;

        return $z10;

     label24:
        $r12 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.impl.Constant: java.lang.String stringValue()>();

        $r13 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.impl.Constant: java.lang.String stringValue()>();

        $z7 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z7 == 0 goto label25;

        $z11 = 0;

        goto label26;

     label25:
        $z11 = 1;

     label26:
        return $z11;

     label27:
        return 0;
    }

    private boolean hasStructuralMethodChanges(org.eclipse.jdt.internal.compiler.classfmt.MethodInfo, org.eclipse.jdt.internal.compiler.classfmt.MethodInfo)
    {
        long $l2, $l3, $l4, $l5;
        char[][] $r10, $r11;
        byte $b6;
        int $i0, $i1, i7, $i8, $i9, i10;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r14;
        boolean $z0, $z1, $z2, $z3, $z4;
        char[] $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r12, $r13;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0, r2;

        r14 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getGenericSignature()>();

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getGenericSignature()>();

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r1, $r3);

        if $z0 != 0 goto label01;

        return 1;

     label01:
        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int getModifiers()>();

        $i1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int getModifiers()>();

        if $i0 == $i1 goto label02;

        return 1;

     label02:
        $l2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: long getTagBits()>();

        $l3 = $l2 & 70368744177664L;

        $l4 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: long getTagBits()>();

        $l5 = $l4 & 70368744177664L;

        $b6 = $l3 cmp $l5;

        if $b6 == 0 goto label03;

        return 1;

     label03:
        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getSelector()>();

        $r5 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getSelector()>();

        $z1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r4, $r5);

        if $z1 != 0 goto label04;

        return 1;

     label04:
        $r6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getMethodDescriptor()>();

        $r7 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getMethodDescriptor()>();

        $z2 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r6, $r7);

        if $z2 != 0 goto label05;

        return 1;

     label05:
        $r8 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getGenericSignature()>();

        $r9 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getGenericSignature()>();

        $z3 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r8, $r9);

        if $z3 != 0 goto label06;

        return 1;

     label06:
        $r10 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] getExceptionTypeNames()>();

        $r11 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] getExceptionTypeNames()>();

        if $r10 == $r11 goto label15;

        if $r10 != null goto label07;

        $i8 = 0;

        goto label08;

     label07:
        $i8 = lengthof $r10;

     label08:
        i7 = $i8;

        if $r11 != null goto label09;

        $i9 = 0;

        goto label10;

     label09:
        $i9 = lengthof $r11;

     label10:
        if i7 == $i9 goto label11;

        return 1;

     label11:
        i10 = 0;

        goto label14;

     label12:
        $r13 = $r10[i10];

        $r12 = $r11[i10];

        $z4 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r13, $r12);

        if $z4 != 0 goto label13;

        return 1;

     label13:
        i10 = i10 + 1;

     label14:
        if i10 < i7 goto label12;

     label15:
        return 0;
    }

    private void initialize() throws org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException
    {
        org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo[] $r5, $r10, $r11;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException $r14;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] $r6, $r7, $r8;
        org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo $r12;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo[] $r3;
        java.lang.RuntimeException $r13;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo $r2;
        char[] $r15;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo $r4;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo $r9;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo[] $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

     label01:
        i0 = 0;

        i1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int fieldsCount>;

        goto label03;

     label02:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo[] fields>;

        $r2 = $r1[i0];

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: void initialize()>();

        i0 = i0 + 1;

     label03:
        if i0 < i1 goto label02;

        i2 = 0;

        i3 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int methodsCount>;

        goto label05;

     label04:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo[] methods>;

        $r4 = $r3[i2];

        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: void initialize()>();

        i2 = i2 + 1;

     label05:
        if i2 < i3 goto label04;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo[] innerInfos>;

        if $r5 == null goto label08;

        i4 = 0;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo[] innerInfos>;

        i5 = lengthof $r10;

        goto label07;

     label06:
        $r11 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo[] innerInfos>;

        $r12 = $r11[i4];

        virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: void initialize()>();

        i4 = i4 + 1;

     label07:
        if i4 < i5 goto label06;

     label08:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] annotations>;

        if $r6 == null goto label11;

        i6 = 0;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] annotations>;

        i7 = lengthof $r7;

        goto label10;

     label09:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] annotations>;

        $r9 = $r8[i6];

        virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: void initialize()>();

        i6 = i6 + 1;

     label10:
        if i6 < i7 goto label09;

     label11:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: void reset()>();

     label12:
        goto label14;

     label13:
        $r13 := @caughtexception;

        $r14 = new org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] classFileName>;

        specialinvoke $r14.<org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException: void <init>(java.lang.RuntimeException,char[])>($r13, $r15);

        throw $r14;

     label14:
        return;

        catch java.lang.RuntimeException from label01 to label12 with label13;
    }

    public boolean isAnonymous()
    {
        org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo $r1, $r2;
        int $i0;
        char[] $r3;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo innerInfo>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo innerInfo>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] getSourceName()>();

        if $r3 == null goto label2;

        $i0 = lengthof $r3;

        if $i0 == 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public boolean isBinaryType()
    {
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        return 1;
    }

    public boolean isLocal()
    {
        org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo $r1, $r2, $r4;
        int $i0;
        char[] $r3, $r5;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo innerInfo>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo innerInfo>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] getEnclosingTypeName()>();

        if $r3 == null goto label2;

        return 0;

     label2:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo innerInfo>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] getSourceName()>();

        if $r5 == null goto label3;

        $i0 = lengthof $r5;

        if $i0 <= 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public boolean isMember()
    {
        org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo $r1, $r2, $r4;
        int $i0;
        char[] $r3, $r5;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo innerInfo>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo innerInfo>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] getEnclosingTypeName()>();

        if $r3 != null goto label2;

        return 0;

     label2:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo innerInfo>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] getSourceName()>();

        if $r5 == null goto label3;

        $i0 = lengthof $r5;

        if $i0 <= 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public boolean isNestedType()
    {
        org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo $r1;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo innerInfo>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public char[] sourceFileName()
    {
        char[] $r1;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] sourceFileName>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.io.ByteArrayOutputStream $r0;
        java.lang.StringBuffer $r2, $r7, $r9, $r12, $r14, $r17, $r19, $r21, $r22, $r23, $r24;
        int $i0, $i1;
        java.lang.String $r5, $r6, $r8, $r10, $r13, $r18, $r20, $r25, $r26, $r27;
        org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader r3;
        java.io.PrintWriter $r1;
        char[] $r11, $r15, $r16;
        java.lang.Class $r4;

        r3 := @this: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new java.io.PrintWriter;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r0);

        $r2 = new java.lang.StringBuffer;

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>(java.lang.String)>(" this.className: ");

        $r10 = new java.lang.String;

        $r11 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] getName()>();

        specialinvoke $r10.<java.lang.String: void <init>(char[])>($r11);

        $r12 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>(java.lang.String)>(" this.superclassName: ");

        $r15 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] getSuperclassName()>();

        if $r15 != null goto label1;

        $r27 = "null";

        goto label2;

     label1:
        $r27 = new java.lang.String;

        $r16 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: char[] getSuperclassName()>();

        specialinvoke $r27.<java.lang.String: void <init>(char[])>($r16);

     label2:
        $r17 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>(java.lang.String)>(" access_flags: ");

        $i0 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int accessFlags()>();

        $r20 = staticinvoke <org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: java.lang.String printTypeModifiers(int)>($i0);

        $r21 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $i1 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader: int accessFlags()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r25);

        virtualinvoke $r1.<java.io.PrintWriter: void flush()>();

        $r26 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        return $r26;
    }
}
