public class org.codehaus.jackson.map.ser.std.TimeZoneSerializer extends org.codehaus.jackson.map.ser.std.ScalarSerializerBase
{
    public static final org.codehaus.jackson.map.ser.std.TimeZoneSerializer instance;

    public void <init>()
    {
        org.codehaus.jackson.map.ser.std.TimeZoneSerializer r0;

        r0 := @this: org.codehaus.jackson.map.ser.std.TimeZoneSerializer;

        specialinvoke r0.<org.codehaus.jackson.map.ser.std.ScalarSerializerBase: void <init>(java.lang.Class)>(class "Ljava/util/TimeZone;");

        return;
    }

    public void serialize(java.util.TimeZone, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.JsonGenerator r0;
        java.util.TimeZone r1;
        org.codehaus.jackson.map.SerializerProvider r4;
        java.lang.String $r2;
        org.codehaus.jackson.map.ser.std.TimeZoneSerializer r3;

        r3 := @this: org.codehaus.jackson.map.ser.std.TimeZoneSerializer;

        r1 := @parameter0: java.util.TimeZone;

        r0 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r4 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r2 = virtualinvoke r1.<java.util.TimeZone: java.lang.String getID()>();

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeString(java.lang.String)>($r2);

        return;
    }

    public void serializeWithType(java.util.TimeZone, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider, org.codehaus.jackson.map.TypeSerializer) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.map.TypeSerializer r0;
        java.util.TimeZone r1;
        org.codehaus.jackson.JsonGenerator r2;
        org.codehaus.jackson.map.SerializerProvider r4;
        org.codehaus.jackson.map.ser.std.TimeZoneSerializer r3;

        r3 := @this: org.codehaus.jackson.map.ser.std.TimeZoneSerializer;

        r1 := @parameter0: java.util.TimeZone;

        r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r4 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        r0 := @parameter3: org.codehaus.jackson.map.TypeSerializer;

        virtualinvoke r0.<org.codehaus.jackson.map.TypeSerializer: void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class)>(r1, r2, class "Ljava/util/TimeZone;");

        virtualinvoke r3.<org.codehaus.jackson.map.ser.std.TimeZoneSerializer: void serialize(java.util.TimeZone,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>(r1, r2, r4);

        virtualinvoke r0.<org.codehaus.jackson.map.TypeSerializer: void writeTypeSuffixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator)>(r1, r2);

        return;
    }

    public volatile void serializeWithType(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider, org.codehaus.jackson.map.TypeSerializer) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.JsonGenerator r2;
        org.codehaus.jackson.map.TypeSerializer r4;
        java.util.TimeZone $r5;
        org.codehaus.jackson.map.SerializerProvider r3;
        java.lang.Object r1;
        org.codehaus.jackson.map.ser.std.TimeZoneSerializer r0;

        r0 := @this: org.codehaus.jackson.map.ser.std.TimeZoneSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r3 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        r4 := @parameter3: org.codehaus.jackson.map.TypeSerializer;

        $r5 = (java.util.TimeZone) r1;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.std.TimeZoneSerializer: void serializeWithType(java.util.TimeZone,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>($r5, r2, r3, r4);

        return;
    }

    public volatile void serialize(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.JsonGenerator r2;
        java.util.TimeZone $r4;
        org.codehaus.jackson.map.SerializerProvider r3;
        java.lang.Object r1;
        org.codehaus.jackson.map.ser.std.TimeZoneSerializer r0;

        r0 := @this: org.codehaus.jackson.map.ser.std.TimeZoneSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r3 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r4 = (java.util.TimeZone) r1;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.std.TimeZoneSerializer: void serialize(java.util.TimeZone,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r4, r2, r3);

        return;
    }

    static void <clinit>()
    {
        org.codehaus.jackson.map.ser.std.TimeZoneSerializer $r0;

        $r0 = new org.codehaus.jackson.map.ser.std.TimeZoneSerializer;

        specialinvoke $r0.<org.codehaus.jackson.map.ser.std.TimeZoneSerializer: void <init>()>();

        <org.codehaus.jackson.map.ser.std.TimeZoneSerializer: org.codehaus.jackson.map.ser.std.TimeZoneSerializer instance> = $r0;

        return;
    }
}
