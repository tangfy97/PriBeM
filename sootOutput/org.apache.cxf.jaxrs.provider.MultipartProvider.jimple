public class org.apache.cxf.jaxrs.provider.MultipartProvider extends org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider implements javax.ws.rs.ext.MessageBodyReader, javax.ws.rs.ext.MessageBodyWriter
{
    private static final java.lang.String ACTIVE_JAXRS_PROVIDER_KEY;
    private static final java.util.logging.Logger LOG;
    private static final java.util.ResourceBundle BUNDLE;
    private org.apache.cxf.jaxrs.ext.MessageContext mc;
    private java.lang.String attachmentDir;
    private java.lang.String attachmentThreshold;
    private java.lang.String attachmentMaxSize;

    public void <init>()
    {
        org.apache.cxf.jaxrs.provider.MultipartProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider: void <init>()>();

        return;
    }

    public void setMessageContext(org.apache.cxf.jaxrs.ext.MessageContext)
    {
        org.apache.cxf.jaxrs.ext.MessageContext r1;
        org.apache.cxf.jaxrs.provider.MultipartProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        r1 := @parameter0: org.apache.cxf.jaxrs.ext.MessageContext;

        r0.<org.apache.cxf.jaxrs.provider.MultipartProvider: org.apache.cxf.jaxrs.ext.MessageContext mc> = r1;

        return;
    }

    public void setAttachmentDirectory(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.jaxrs.provider.MultipartProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.provider.MultipartProvider: java.lang.String attachmentDir> = r1;

        return;
    }

    public void setAttachmentThreshold(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.jaxrs.provider.MultipartProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.provider.MultipartProvider: java.lang.String attachmentThreshold> = r1;

        return;
    }

    public void setAttachmentMaxSize(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.jaxrs.provider.MultipartProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.provider.MultipartProvider: java.lang.String attachmentMaxSize> = r1;

        return;
    }

    public boolean isReadable(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r4;
        java.lang.reflect.Type r2;
        org.apache.cxf.jaxrs.provider.MultipartProvider r0;
        java.lang.Class r1;
        java.lang.'annotation'.Annotation[] r3;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.reflect.Type;

        r3 := @parameter2: java.lang.'annotation'.Annotation[];

        r4 := @parameter3: javax.ws.rs.core.MediaType;

        $z0 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.MultipartProvider: boolean isSupported(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)>(r1, r2, r3, r4);

        return $z0;
    }

    private boolean isSupported(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        java.lang.'annotation'.Annotation[] r2;
        javax.ws.rs.core.MediaType r10;
        org.apache.cxf.jaxrs.ext.MessageContext $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.reflect.Type r11;
        org.apache.cxf.jaxrs.provider.MultipartProvider r4;
        java.lang.Class r0, $r1, $r7, $r8, $r9;
        java.lang.Object $r3, $r6;

        r4 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        r0 := @parameter0: java.lang.Class;

        r11 := @parameter1: java.lang.reflect.Type;

        r2 := @parameter2: java.lang.'annotation'.Annotation[];

        r10 := @parameter3: javax.ws.rs.core.MediaType;

        $r1 = class "Ljavax/activation/DataHandler;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 != 0 goto label1;

        $r7 = class "Ljavax/activation/DataSource;";

        $z2 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z2 != 0 goto label1;

        $r8 = class "Lorg/apache/cxf/jaxrs/ext/multipart/Attachment;";

        $z3 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z3 != 0 goto label1;

        $r9 = class "Lorg/apache/cxf/jaxrs/ext/multipart/MultipartBody;";

        $z4 = virtualinvoke $r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z4 != 0 goto label1;

        $z5 = specialinvoke r4.<org.apache.cxf.jaxrs.provider.MultipartProvider: boolean mediaTypeSupported(javax.ws.rs.core.MediaType)>(r10);

        if $z5 != 0 goto label1;

        $z6 = specialinvoke r4.<org.apache.cxf.jaxrs.provider.MultipartProvider: boolean isSupportedFormDataType(java.lang.Class,javax.ws.rs.core.MediaType)>(r0, r10);

        if $z6 == 0 goto label3;

     label1:
        if r0 != class "Ljava/io/InputStream;" goto label2;

        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.Object getAnnotation(java.lang.'annotation'.Annotation[],java.lang.Class)>(r2, class "Lorg/apache/cxf/jaxrs/ext/multipart/Multipart;");

        if $r3 != null goto label2;

        $r5 = r4.<org.apache.cxf.jaxrs.provider.MultipartProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        $r6 = interfaceinvoke $r5.<org.apache.cxf.jaxrs.ext.MessageContext: java.lang.Object getContextualProperty(java.lang.Object)>("defaultProviders.for.simpleTypes");

        $z1 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isTrue(java.lang.Object)>($r6);

        if $z1 == 0 goto label2;

        return 0;

     label2:
        return 1;

     label3:
        return 0;
    }

    private boolean isSupportedFormDataType(java.lang.Class, javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r0;
        org.apache.cxf.jaxrs.provider.MultipartProvider r6;
        java.lang.Class r3, $r4, $r5;
        java.lang.String $r1, $r2;
        boolean $z0, $z1, $z2, $z3, $z4;

        r6 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        r3 := @parameter0: java.lang.Class;

        r0 := @parameter1: javax.ws.rs.core.MediaType;

        $r1 = virtualinvoke r0.<javax.ws.rs.core.MediaType: java.lang.String getType()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("multipart");

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<javax.ws.rs.core.MediaType: java.lang.String getSubtype()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("form-data");

        if $z1 == 0 goto label1;

        $r4 = class "Ljavax/ws/rs/core/MultivaluedMap;";

        $z2 = virtualinvoke $r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r3);

        if $z2 != 0 goto label1;

        $r5 = class "Lorg/apache/cxf/jaxrs/ext/form/Form;";

        $z3 = virtualinvoke $r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r3);

        if $z3 != 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        return $z4;
    }

    protected void checkContentLength()
    {
        java.lang.Object[] $r5;
        org.apache.cxf.common.i18n.Message $r4;
        java.util.logging.Logger $r8;
        javax.ws.rs.core.HttpHeaders $r3;
        org.apache.cxf.jaxrs.ext.MessageContext $r1, $r2;
        java.util.ResourceBundle $r6;
        org.apache.cxf.jaxrs.provider.MultipartProvider r0;
        javax.ws.rs.WebApplicationException $r9;
        java.lang.String $r7;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.MultipartProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.cxf.jaxrs.provider.MultipartProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        $r3 = interfaceinvoke $r2.<org.apache.cxf.jaxrs.ext.MessageContext: javax.ws.rs.core.HttpHeaders getHttpHeaders()>();

        $z0 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.MultipartProvider: boolean isPayloadEmpty(javax.ws.rs.core.HttpHeaders)>($r3);

        if $z0 == 0 goto label1;

        $r4 = new org.apache.cxf.common.i18n.Message;

        $r6 = <org.apache.cxf.jaxrs.provider.MultipartProvider: java.util.ResourceBundle BUNDLE>;

        $r5 = newarray (java.lang.Object)[0];

        specialinvoke $r4.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("EMPTY_BODY", $r6, $r5);

        $r7 = virtualinvoke $r4.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        $r8 = <org.apache.cxf.jaxrs.provider.MultipartProvider: java.util.logging.Logger LOG>;

        virtualinvoke $r8.<java.util.logging.Logger: void warning(java.lang.String)>($r7);

        $r9 = new javax.ws.rs.WebApplicationException;

        specialinvoke $r9.<javax.ws.rs.WebApplicationException: void <init>(int)>(400);

        throw $r9;

     label1:
        return;
    }

    public java.lang.Object readFrom(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.InputStream) throws java.io.IOException, javax.ws.rs.WebApplicationException
    {
        javax.ws.rs.core.MediaType r11, $r16, $r25;
        org.apache.cxf.jaxrs.ext.multipart.Multipart r32;
        javax.ws.rs.BadRequestException $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.List $r5, $r17;
        java.lang.reflect.Type r14;
        org.apache.cxf.jaxrs.provider.MultipartProvider r0;
        org.apache.cxf.jaxrs.ext.multipart.Attachment $r12, r24;
        java.lang.'annotation'.Annotation[] r9;
        java.util.LinkedHashMap $r20;
        org.apache.cxf.jaxrs.ext.MessageContext $r4;
        int $i0;
        java.lang.String $r1, $r2, $r3, $r26;
        java.util.Iterator $r22;
        org.apache.cxf.jaxrs.ext.multipart.MultipartBody $r19;
        javax.ws.rs.core.MultivaluedMap r30;
        java.lang.Class r6, $r7, $r8, $r21;
        java.lang.Object $r10, $r15, $r18, $r23, $r27, $r28, $r29;
        java.io.InputStream r31;

        r0 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        r6 := @parameter0: java.lang.Class;

        r14 := @parameter1: java.lang.reflect.Type;

        r9 := @parameter2: java.lang.'annotation'.Annotation[];

        r11 := @parameter3: javax.ws.rs.core.MediaType;

        r30 := @parameter4: javax.ws.rs.core.MultivaluedMap;

        r31 := @parameter5: java.io.InputStream;

        virtualinvoke r0.<org.apache.cxf.jaxrs.provider.MultipartProvider: void checkContentLength()>();

        $r4 = r0.<org.apache.cxf.jaxrs.provider.MultipartProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        $r3 = r0.<org.apache.cxf.jaxrs.provider.MultipartProvider: java.lang.String attachmentDir>;

        $r2 = r0.<org.apache.cxf.jaxrs.provider.MultipartProvider: java.lang.String attachmentThreshold>;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.MultipartProvider: java.lang.String attachmentMaxSize>;

        $r5 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: java.util.List getAttachments(org.apache.cxf.jaxrs.ext.MessageContext,java.lang.String,java.lang.String,java.lang.String)>($r4, $r3, $r2, $r1);

        $r7 = class "Ljava/util/Collection;";

        $z0 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r6);

        if $z0 == 0 goto label1;

        $r28 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.Object getAnnotation(java.lang.'annotation'.Annotation[],java.lang.Class)>(r9, class "Lorg/apache/cxf/jaxrs/ext/multipart/Multipart;");

        if $r28 != null goto label1;

        $r29 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.MultipartProvider: java.lang.Object getAttachmentCollection(java.lang.reflect.Type,java.util.List,java.lang.'annotation'.Annotation[])>(r14, $r5, r9);

        return $r29;

     label1:
        $z1 = virtualinvoke r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/util/Map;");

        if $z1 == 0 goto label4;

        $r20 = new java.util.LinkedHashMap;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        specialinvoke $r20.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $r21 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.MultipartProvider: java.lang.Class getActualType(java.lang.reflect.Type,int)>(r14, 1);

        $r22 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z5 = interfaceinvoke $r22.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label3;

        $r23 = interfaceinvoke $r22.<java.util.Iterator: java.lang.Object next()>();

        r24 = (org.apache.cxf.jaxrs.ext.multipart.Attachment) $r23;

        $r25 = virtualinvoke r24.<org.apache.cxf.jaxrs.ext.multipart.Attachment: javax.ws.rs.core.MediaType getContentType()>();

        $r26 = virtualinvoke $r25.<javax.ws.rs.core.MediaType: java.lang.String toString()>();

        $r27 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.MultipartProvider: java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])>(r24, $r21, $r21, r9);

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, $r27);

        goto label2;

     label3:
        return $r20;

     label4:
        $r8 = class "Lorg/apache/cxf/jaxrs/ext/multipart/MultipartBody;";

        $z2 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r6);

        if $z2 == 0 goto label5;

        $r19 = new org.apache.cxf.jaxrs.ext.multipart.MultipartBody;

        specialinvoke $r19.<org.apache.cxf.jaxrs.ext.multipart.MultipartBody: void <init>(java.util.List)>($r5);

        return $r19;

     label5:
        $r10 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.Object getAnnotation(java.lang.'annotation'.Annotation[],java.lang.Class)>(r9, class "Lorg/apache/cxf/jaxrs/ext/multipart/Multipart;");

        r32 = (org.apache.cxf.jaxrs.ext.multipart.Multipart) $r10;

        $r12 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: org.apache.cxf.jaxrs.ext.multipart.Attachment getMultipart(org.apache.cxf.jaxrs.ext.multipart.Multipart,javax.ws.rs.core.MediaType,java.util.List)>(r32, r11, $r5);

        if $r12 == null goto label7;

        if $z0 == 0 goto label6;

        $r16 = virtualinvoke $r12.<org.apache.cxf.jaxrs.ext.multipart.Attachment: javax.ws.rs.core.MediaType getContentType()>();

        $z4 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.MultipartProvider: boolean mediaTypeSupported(javax.ws.rs.core.MediaType)>($r16);

        if $z4 != 0 goto label6;

        $r17 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: java.util.List getMatchingAttachments(org.apache.cxf.jaxrs.ext.multipart.Multipart,java.util.List)>(r32, $r5);

        $r18 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.MultipartProvider: java.lang.Object getAttachmentCollection(java.lang.reflect.Type,java.util.List,java.lang.'annotation'.Annotation[])>(r14, $r17, r9);

        return $r18;

     label6:
        $r15 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.MultipartProvider: java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])>($r12, r6, r14, r9);

        return $r15;

     label7:
        if r32 == null goto label8;

        $z3 = interfaceinvoke r32.<org.apache.cxf.jaxrs.ext.multipart.Multipart: boolean required()>();

        if $z3 != 0 goto label8;

        return null;

     label8:
        $r13 = new javax.ws.rs.BadRequestException;

        specialinvoke $r13.<javax.ws.rs.BadRequestException: void <init>()>();

        throw $r13;
    }

    private java.lang.Object getAttachmentCollection(java.lang.reflect.Type, java.util.List, java.lang.'annotation'.Annotation[]) throws java.io.IOException
    {
        java.util.Iterator $r6;
        org.apache.cxf.jaxrs.ext.multipart.Attachment r8;
        java.lang.'annotation'.Annotation[] r9;
        java.util.ArrayList $r4;
        java.util.List r5;
        java.lang.reflect.Type r1;
        org.apache.cxf.jaxrs.provider.MultipartProvider r0;
        java.lang.Class $r2, $r3;
        java.lang.Object $r7, $r10;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        r1 := @parameter0: java.lang.reflect.Type;

        r5 := @parameter1: java.util.List;

        r9 := @parameter2: java.lang.'annotation'.Annotation[];

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.MultipartProvider: java.lang.Class getActualType(java.lang.reflect.Type,int)>(r1, 0);

        $r3 = class "Lorg/apache/cxf/jaxrs/ext/multipart/Attachment;";

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2);

        if $z0 == 0 goto label1;

        return r5;

     label1:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.cxf.jaxrs.ext.multipart.Attachment) $r7;

        $r10 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.MultipartProvider: java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])>(r8, $r2, $r2, r9);

        interfaceinvoke $r4.<java.util.Collection: boolean add(java.lang.Object)>($r10);

        goto label2;

     label3:
        return $r4;
    }

    private java.lang.Class getActualType(java.lang.reflect.Type, int)
    {
        java.lang.reflect.Type r0;
        org.apache.cxf.jaxrs.provider.MultipartProvider r2;
        int i0;
        java.lang.Class r3, $r4;
        java.lang.Exception $r1;

        r2 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        r0 := @parameter0: java.lang.reflect.Type;

        i0 := @parameter1: int;

        r3 = null;

     label1:
        r3 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.Class getActualType(java.lang.reflect.Type,int)>(r0, i0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

     label4:
        if r3 == null goto label5;

        if r3 == class "Ljava/lang/Object;" goto label5;

        $r4 = r3;

        goto label6;

     label5:
        $r4 = class "Lorg/apache/cxf/jaxrs/ext/multipart/Attachment;";

     label6:
        return $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[]) throws java.io.IOException
    {
        javax.ws.rs.core.MediaType $r6, $r10, $r15, $r21;
        boolean $z0, $z1, $z2, $z3;
        javax.ws.rs.ext.Providers $r8;
        java.lang.reflect.Type r9;
        org.apache.cxf.jaxrs.provider.MultipartProvider r4;
        org.apache.cxf.jaxrs.ext.multipart.Attachment r5;
        java.lang.'annotation'.Annotation[] r28;
        javax.activation.DataHandler $r12, $r23, $r25, $r27;
        org.apache.cxf.jaxrs.ext.MessageContext $r7, $r18, $r20, $r22;
        java.lang.Boolean $r19;
        javax.ws.rs.core.MultivaluedMap $r16;
        javax.activation.DataSource $r26;
        java.lang.Class r0, $r1, $r2, $r3;
        java.lang.Object $r17;
        javax.ws.rs.ext.MessageBodyReader $r11;
        java.io.InputStream $r13, $r14, $r24;

        r4 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        r5 := @parameter0: org.apache.cxf.jaxrs.ext.multipart.Attachment;

        r0 := @parameter1: java.lang.Class;

        r9 := @parameter2: java.lang.reflect.Type;

        r28 := @parameter3: java.lang.'annotation'.Annotation[];

        $r1 = class "Ljavax/activation/DataHandler;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 == 0 goto label1;

        $r27 = virtualinvoke r5.<org.apache.cxf.jaxrs.ext.multipart.Attachment: javax.activation.DataHandler getDataHandler()>();

        return $r27;

     label1:
        $r2 = class "Ljavax/activation/DataSource;";

        $z1 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z1 == 0 goto label2;

        $r25 = virtualinvoke r5.<org.apache.cxf.jaxrs.ext.multipart.Attachment: javax.activation.DataHandler getDataHandler()>();

        $r26 = virtualinvoke $r25.<javax.activation.DataHandler: javax.activation.DataSource getDataSource()>();

        return $r26;

     label2:
        $r3 = class "Lorg/apache/cxf/jaxrs/ext/multipart/Attachment;";

        $z2 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z2 == 0 goto label3;

        return r5;

     label3:
        $r6 = virtualinvoke r5.<org.apache.cxf.jaxrs.ext.multipart.Attachment: javax.ws.rs.core.MediaType getContentType()>();

        $z3 = specialinvoke r4.<org.apache.cxf.jaxrs.provider.MultipartProvider: boolean mediaTypeSupported(javax.ws.rs.core.MediaType)>($r6);

        if $z3 == 0 goto label4;

        $r18 = r4.<org.apache.cxf.jaxrs.provider.MultipartProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r18.<org.apache.cxf.jaxrs.ext.MessageContext: void put(java.lang.Object,java.lang.Object)>("org.apache.cxf.multipart.embedded", $r19);

        $r20 = r4.<org.apache.cxf.jaxrs.provider.MultipartProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        $r21 = virtualinvoke r5.<org.apache.cxf.jaxrs.ext.multipart.Attachment: javax.ws.rs.core.MediaType getContentType()>();

        interfaceinvoke $r20.<org.apache.cxf.jaxrs.ext.MessageContext: void put(java.lang.Object,java.lang.Object)>("org.apache.cxf.multipart.embedded.ctype", $r21);

        $r22 = r4.<org.apache.cxf.jaxrs.provider.MultipartProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        $r23 = virtualinvoke r5.<org.apache.cxf.jaxrs.ext.multipart.Attachment: javax.activation.DataHandler getDataHandler()>();

        $r24 = virtualinvoke $r23.<javax.activation.DataHandler: java.io.InputStream getInputStream()>();

        interfaceinvoke $r22.<org.apache.cxf.jaxrs.ext.MessageContext: void put(java.lang.Object,java.lang.Object)>("org.apache.cxf.multipart.embedded.input", $r24);

        r28 = newarray (java.lang.'annotation'.Annotation)[0];

     label4:
        $r7 = r4.<org.apache.cxf.jaxrs.provider.MultipartProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        $r8 = interfaceinvoke $r7.<org.apache.cxf.jaxrs.ext.MessageContext: javax.ws.rs.ext.Providers getProviders()>();

        $r10 = virtualinvoke r5.<org.apache.cxf.jaxrs.ext.multipart.Attachment: javax.ws.rs.core.MediaType getContentType()>();

        $r11 = interfaceinvoke $r8.<javax.ws.rs.ext.Providers: javax.ws.rs.ext.MessageBodyReader getMessageBodyReader(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)>(r0, r9, r28, $r10);

        if $r11 == null goto label5;

        $r12 = virtualinvoke r5.<org.apache.cxf.jaxrs.ext.multipart.Attachment: javax.activation.DataHandler getDataHandler()>();

        $r13 = virtualinvoke $r12.<javax.activation.DataHandler: java.io.InputStream getInputStream()>();

        $r14 = specialinvoke r4.<org.apache.cxf.jaxrs.provider.MultipartProvider: java.io.InputStream decodeIfNeeded(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.io.InputStream)>(r5, $r13);

        $r15 = virtualinvoke r5.<org.apache.cxf.jaxrs.ext.multipart.Attachment: javax.ws.rs.core.MediaType getContentType()>();

        $r16 = virtualinvoke r5.<org.apache.cxf.jaxrs.ext.multipart.Attachment: javax.ws.rs.core.MultivaluedMap getHeaders()>();

        $r17 = interfaceinvoke $r11.<javax.ws.rs.ext.MessageBodyReader: java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)>(r0, r9, r28, $r15, $r16, $r14);

        return $r17;

     label5:
        return null;
    }

    private java.io.InputStream decodeIfNeeded(org.apache.cxf.jaxrs.ext.multipart.Attachment, java.io.InputStream)
    {
        org.apache.cxf.jaxrs.ext.multipart.Attachment r0;
        java.util.logging.Logger $r6;
        java.lang.Exception $r4;
        org.apache.cxf.jaxrs.provider.MultipartProvider r10;
        java.lang.StringBuilder $r5, $r7, $r8;
        java.lang.String $r1, $r2, $r3, $r9;
        boolean $z0, $z1;
        java.io.InputStream r11;

        r10 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        r0 := @parameter0: org.apache.cxf.jaxrs.ext.multipart.Attachment;

        r11 := @parameter1: java.io.InputStream;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.ext.multipart.Attachment: java.lang.String getHeader(java.lang.String)>("Content-Transfer-Encoding");

        $r2 = "base64";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r3 = "quoted-printable";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label4;

     label1:
        r11 = staticinvoke <javax.mail.internet.MimeUtility: java.io.InputStream decode(java.io.InputStream,java.lang.String)>(r11, $r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r6 = <org.apache.cxf.jaxrs.provider.MultipartProvider: java.util.logging.Logger LOG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem with decoding an input stream, encoding : ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.util.logging.Logger: void warning(java.lang.String)>($r9);

     label4:
        return r11;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private boolean mediaTypeSupported(javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r0;
        org.apache.cxf.jaxrs.provider.MultipartProvider r5;
        java.lang.String $r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4;

        r5 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        r0 := @parameter0: javax.ws.rs.core.MediaType;

        $r1 = virtualinvoke r0.<javax.ws.rs.core.MediaType: java.lang.String getType()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("multipart");

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<javax.ws.rs.core.MediaType: java.lang.String getSubtype()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("related");

        if $z1 != 0 goto label1;

        $r3 = virtualinvoke r0.<javax.ws.rs.core.MediaType: java.lang.String getSubtype()>();

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("mixed");

        if $z2 != 0 goto label1;

        $r4 = virtualinvoke r0.<javax.ws.rs.core.MediaType: java.lang.String getSubtype()>();

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("alternative");

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    public long getSize(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r5;
        java.lang.reflect.Type r3;
        org.apache.cxf.jaxrs.provider.MultipartProvider r0;
        java.lang.Object r1;
        java.lang.Class r2;
        java.lang.'annotation'.Annotation[] r4;

        r0 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.reflect.Type;

        r4 := @parameter3: java.lang.'annotation'.Annotation[];

        r5 := @parameter4: javax.ws.rs.core.MediaType;

        return -1L;
    }

    public boolean isWriteable(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r4;
        java.lang.reflect.Type r2;
        org.apache.cxf.jaxrs.provider.MultipartProvider r0;
        java.lang.Class r1;
        java.lang.'annotation'.Annotation[] r3;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.reflect.Type;

        r3 := @parameter2: java.lang.'annotation'.Annotation[];

        r4 := @parameter3: javax.ws.rs.core.MediaType;

        $z0 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.MultipartProvider: boolean isSupported(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)>(r1, r2, r3, r4);

        return $z0;
    }

    public void writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream) throws java.io.IOException, javax.ws.rs.WebApplicationException
    {
        java.io.OutputStream r11;
        org.apache.cxf.jaxrs.ext.multipart.Attachment $r9;
        java.lang.'annotation'.Annotation[] r4;
        javax.activation.DataHandler $r10;
        javax.ws.rs.core.MultivaluedMap r12;
        javax.ws.rs.core.MediaType r5;
        java.util.List $r6;
        org.apache.cxf.jaxrs.ext.MessageContext $r7;
        java.lang.reflect.Type r3;
        org.apache.cxf.jaxrs.provider.MultipartProvider r0;
        java.lang.Object r1, $r8;
        java.lang.Class r2;

        r0 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.reflect.Type;

        r4 := @parameter3: java.lang.'annotation'.Annotation[];

        r5 := @parameter4: javax.ws.rs.core.MediaType;

        r12 := @parameter5: javax.ws.rs.core.MultivaluedMap;

        r11 := @parameter6: java.io.OutputStream;

        $r6 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.MultipartProvider: java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)>(r1, r2, r3, r4, r5);

        $r7 = r0.<org.apache.cxf.jaxrs.provider.MultipartProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        interfaceinvoke $r7.<org.apache.cxf.jaxrs.ext.MessageContext: void put(java.lang.Object,java.lang.Object)>("org.apache.cxf.jaxrs.attachments.outbound", $r6);

        $r8 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (org.apache.cxf.jaxrs.ext.multipart.Attachment) $r8;

        $r10 = virtualinvoke $r9.<org.apache.cxf.jaxrs.ext.multipart.Attachment: javax.activation.DataHandler getDataHandler()>();

        virtualinvoke $r10.<javax.activation.DataHandler: void writeTo(java.io.OutputStream)>(r11);

        return;
    }

    private java.util.List convertToDataHandlers(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType) throws java.io.IOException
    {
        javax.ws.rs.core.MediaType r5;
        java.util.Map $r20, $r21;
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r23;
        java.util.List $r14, $r16, $r17, $r18, $r19;
        java.lang.reflect.Type r11;
        org.apache.cxf.jaxrs.provider.MultipartProvider r3;
        org.apache.cxf.jaxrs.ext.multipart.Attachment $r13, $r33;
        java.lang.'annotation'.Annotation[] r4, $r29;
        java.util.ArrayList $r22;
        int $i0, $i1, i2;
        java.lang.String $r6, $r12, $r31, $r32;
        java.util.Map$Entry r26;
        java.util.Iterator $r24;
        org.apache.cxf.jaxrs.ext.multipart.MultipartBody $r15;
        java.lang.Object r0, $r25, $r27, $r30;
        java.lang.Class $r1, $r2, $r7, $r8, r9, $r10, $r28;

        r3 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        r0 := @parameter0: java.lang.Object;

        r9 := @parameter1: java.lang.Class;

        r11 := @parameter2: java.lang.reflect.Type;

        r4 := @parameter3: java.lang.'annotation'.Annotation[];

        r5 := @parameter4: javax.ws.rs.core.MediaType;

        $r1 = class "Ljava/util/Map;";

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2);

        if $z0 == 0 goto label3;

        $r20 = (java.util.Map) r0;

        $r21 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Map cast(java.util.Map)>($r20);

        $r22 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r21.<java.util.Map: int size()>();

        specialinvoke $r22.<java.util.ArrayList: void <init>(int)>($i0);

        i2 = 0;

        $r23 = interfaceinvoke $r21.<java.util.Map: java.util.Set entrySet()>();

        $r24 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        $r25 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        r26 = (java.util.Map$Entry) $r25;

        $r27 = interfaceinvoke r26.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r28 = virtualinvoke $r27.<java.lang.Object: java.lang.Class getClass()>();

        $r29 = newarray (java.lang.'annotation'.Annotation)[0];

        $r30 = interfaceinvoke r26.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r31 = virtualinvoke $r30.<java.lang.Object: java.lang.String toString()>();

        $r32 = virtualinvoke r5.<javax.ws.rs.core.MediaType: java.lang.String toString()>();

        $i1 = i2;

        i2 = i2 + 1;

        $r33 = specialinvoke r3.<org.apache.cxf.jaxrs.provider.MultipartProvider: org.apache.cxf.jaxrs.ext.multipart.Attachment createDataHandler(java.lang.Object,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,java.lang.String,int)>($r27, $r28, $r29, $r31, $r32, $i1);

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>($r33);

        goto label1;

     label2:
        return $r22;

     label3:
        $r6 = specialinvoke r3.<org.apache.cxf.jaxrs.provider.MultipartProvider: java.lang.String getRootMediaType(java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)>(r4, r5);

        $r7 = class "Ljava/util/List;";

        $r8 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r8);

        if $z1 == 0 goto label4;

        $r18 = (java.util.List) r0;

        $r19 = specialinvoke r3.<org.apache.cxf.jaxrs.provider.MultipartProvider: java.util.List getAttachments(java.util.List,java.lang.String)>($r18, $r6);

        return $r19;

     label4:
        $r10 = class "Lorg/apache/cxf/jaxrs/ext/multipart/MultipartBody;";

        $z2 = virtualinvoke $r10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r9);

        if $z2 == 0 goto label5;

        $r15 = (org.apache.cxf.jaxrs.ext.multipart.MultipartBody) r0;

        $r16 = virtualinvoke $r15.<org.apache.cxf.jaxrs.ext.multipart.MultipartBody: java.util.List getAllAttachments()>();

        $r17 = specialinvoke r3.<org.apache.cxf.jaxrs.provider.MultipartProvider: java.util.List getAttachments(java.util.List,java.lang.String)>($r16, $r6);

        return $r17;

     label5:
        $r12 = virtualinvoke r5.<javax.ws.rs.core.MediaType: java.lang.String toString()>();

        $r13 = specialinvoke r3.<org.apache.cxf.jaxrs.provider.MultipartProvider: org.apache.cxf.jaxrs.ext.multipart.Attachment createDataHandler(java.lang.Object,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,java.lang.String,int)>(r0, r11, r4, $r6, $r12, 1);

        $r14 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r13);

        return $r14;
    }

    private java.util.List getAttachments(java.util.List, java.lang.String) throws java.io.IOException
    {
        org.apache.cxf.jaxrs.ext.multipart.Attachment $r7;
        java.lang.'annotation'.Annotation[] $r6;
        java.util.ArrayList $r0;
        java.util.List r1;
        org.apache.cxf.jaxrs.provider.MultipartProvider r3;
        int $i0, $i1, i2;
        java.lang.Object $r2;
        java.lang.Class $r4;
        java.lang.String r5;

        r3 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        r1 := @parameter0: java.util.List;

        r5 := @parameter1: java.lang.String;

        $r0 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        i2 = 0;

     label1:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if i2 >= $i1 goto label2;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = newarray (java.lang.'annotation'.Annotation)[0];

        $r7 = specialinvoke r3.<org.apache.cxf.jaxrs.provider.MultipartProvider: org.apache.cxf.jaxrs.ext.multipart.Attachment createDataHandler(java.lang.Object,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,java.lang.String,int)>($r2, $r4, $r6, r5, r5, i2);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r7);

        i2 = i2 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private org.apache.cxf.jaxrs.ext.multipart.Attachment createDataHandler(java.lang.Object, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], java.lang.String, java.lang.String, int) throws java.io.IOException
    {
        org.apache.cxf.jaxrs.ext.multipart.Attachment $r7;
        java.lang.'annotation'.Annotation[] r4;
        java.lang.reflect.Type r3;
        org.apache.cxf.jaxrs.provider.MultipartProvider r2;
        int i0;
        java.lang.Object r0;
        java.lang.Class $r1;
        java.lang.String r5, r6;

        r2 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        r0 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.reflect.Type;

        r4 := @parameter2: java.lang.'annotation'.Annotation[];

        r5 := @parameter3: java.lang.String;

        r6 := @parameter4: java.lang.String;

        i0 := @parameter5: int;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = specialinvoke r2.<org.apache.cxf.jaxrs.provider.MultipartProvider: org.apache.cxf.jaxrs.ext.multipart.Attachment createDataHandler(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,java.lang.String,int)>(r0, $r1, r3, r4, r5, r6, i0);

        return $r7;
    }

    private org.apache.cxf.jaxrs.ext.multipart.Attachment createDataHandler(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], java.lang.String, java.lang.String, int) throws java.io.IOException
    {
        byte[] $r19, $r20;
        org.apache.cxf.jaxrs.ext.multipart.ContentDisposition $r46;
        org.apache.cxf.jaxrs.impl.MetadataMap $r50;
        org.apache.cxf.attachment.ByteDataSource $r18;
        javax.ws.rs.core.MediaType $r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.reflect.Type r15;
        org.apache.cxf.jaxrs.provider.MultipartProvider r13;
        java.lang.StringBuilder $r36, $r37, $r39;
        org.apache.cxf.jaxrs.ext.multipart.Attachment $r30, $r34, r47, $r49;
        java.lang.'annotation'.Annotation[] r16, $r26;
        javax.activation.DataHandler $r21, $r29, $r41, r44;
        int i0;
        java.lang.String r17, $r28, $r31, r33, $r38, $r40, $r48;
        java.io.FileInputStream $r35;
        java.io.File r45;
        javax.ws.rs.core.MultivaluedMap $r32;
        javax.activation.DataSource $r42;
        java.lang.Object r0, $r22, $r23, $r24;
        java.lang.Class $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, r14, $r25;
        java.io.InputStream $r43;

        r13 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        r0 := @parameter0: java.lang.Object;

        r14 := @parameter1: java.lang.Class;

        r15 := @parameter2: java.lang.reflect.Type;

        r16 := @parameter3: java.lang.'annotation'.Annotation[];

        r17 := @parameter4: java.lang.String;

        r33 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        $r1 = class "Ljava/io/InputStream;";

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2);

        if $z0 == 0 goto label01;

        $r43 = (java.io.InputStream) r0;

        r44 = specialinvoke r13.<org.apache.cxf.jaxrs.provider.MultipartProvider: javax.activation.DataHandler createInputStreamDH(java.io.InputStream,java.lang.String)>($r43, r17);

        goto label10;

     label01:
        $r3 = class "Ljavax/activation/DataHandler;";

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z1 == 0 goto label02;

        r44 = (javax.activation.DataHandler) r0;

        goto label10;

     label02:
        $r5 = class "Ljavax/activation/DataSource;";

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z2 = virtualinvoke $r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r6);

        if $z2 == 0 goto label03;

        $r41 = new javax.activation.DataHandler;

        $r42 = (javax.activation.DataSource) r0;

        specialinvoke $r41.<javax.activation.DataHandler: void <init>(javax.activation.DataSource)>($r42);

        r44 = $r41;

        goto label10;

     label03:
        $r7 = class "Ljava/io/File;";

        $r8 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z3 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r8);

        if $z3 == 0 goto label06;

        r45 = (java.io.File) r0;

        $z6 = virtualinvoke r33.<java.lang.String: boolean startsWith(java.lang.String)>("multipart/form-data");

        if $z6 == 0 goto label04;

        $r46 = new org.apache.cxf.jaxrs.ext.multipart.ContentDisposition;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("form-data;name=file;filename=");

        $r38 = virtualinvoke r45.<java.io.File: java.lang.String getName()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<org.apache.cxf.jaxrs.ext.multipart.ContentDisposition: void <init>(java.lang.String)>($r40);

        goto label05;

     label04:
        $r46 = null;

     label05:
        $r34 = new org.apache.cxf.jaxrs.ext.multipart.Attachment;

        $r35 = new java.io.FileInputStream;

        specialinvoke $r35.<java.io.FileInputStream: void <init>(java.io.File)>(r45);

        specialinvoke $r34.<org.apache.cxf.jaxrs.ext.multipart.Attachment: void <init>(java.lang.String,java.io.InputStream,org.apache.cxf.jaxrs.ext.multipart.ContentDisposition)>("root.message@cxf.apache.org", $r35, $r46);

        return $r34;

     label06:
        $r9 = class "Lorg/apache/cxf/jaxrs/ext/multipart/Attachment;";

        $r10 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z4 = virtualinvoke $r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r10);

        if $z4 == 0 goto label08;

        r47 = (org.apache.cxf.jaxrs.ext.multipart.Attachment) r0;

        $r22 = virtualinvoke r47.<org.apache.cxf.jaxrs.ext.multipart.Attachment: java.lang.Object getObject()>();

        if $r22 != null goto label07;

        return r47;

     label07:
        $r23 = virtualinvoke r47.<org.apache.cxf.jaxrs.ext.multipart.Attachment: java.lang.Object getObject()>();

        $r24 = virtualinvoke r47.<org.apache.cxf.jaxrs.ext.multipart.Attachment: java.lang.Object getObject()>();

        $r25 = virtualinvoke $r24.<java.lang.Object: java.lang.Class getClass()>();

        $r26 = newarray (java.lang.'annotation'.Annotation)[0];

        $r27 = virtualinvoke r47.<org.apache.cxf.jaxrs.ext.multipart.Attachment: javax.ws.rs.core.MediaType getContentType()>();

        $r28 = virtualinvoke $r27.<javax.ws.rs.core.MediaType: java.lang.String toString()>();

        $r29 = specialinvoke r13.<org.apache.cxf.jaxrs.provider.MultipartProvider: javax.activation.DataHandler getHandlerForObject(java.lang.Object,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,int)>($r23, $r25, $r26, $r28, i0);

        $r30 = new org.apache.cxf.jaxrs.ext.multipart.Attachment;

        $r31 = virtualinvoke r47.<org.apache.cxf.jaxrs.ext.multipart.Attachment: java.lang.String getContentId()>();

        $r32 = virtualinvoke r47.<org.apache.cxf.jaxrs.ext.multipart.Attachment: javax.ws.rs.core.MultivaluedMap getHeaders()>();

        specialinvoke $r30.<org.apache.cxf.jaxrs.ext.multipart.Attachment: void <init>(java.lang.String,javax.activation.DataHandler,javax.ws.rs.core.MultivaluedMap)>($r31, $r29, $r32);

        return $r30;

     label08:
        $r11 = class "[B";

        $r12 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z5 = virtualinvoke $r11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r12);

        if $z5 == 0 goto label09;

        $r18 = new org.apache.cxf.attachment.ByteDataSource;

        $r19 = (byte[]) r0;

        $r20 = (byte[]) $r19;

        specialinvoke $r18.<org.apache.cxf.attachment.ByteDataSource: void <init>(byte[])>($r20);

        virtualinvoke $r18.<org.apache.cxf.attachment.ByteDataSource: void setContentType(java.lang.String)>(r17);

        $r21 = new javax.activation.DataHandler;

        specialinvoke $r21.<javax.activation.DataHandler: void <init>(javax.activation.DataSource)>($r18);

        r44 = $r21;

        goto label10;

     label09:
        r44 = specialinvoke r13.<org.apache.cxf.jaxrs.provider.MultipartProvider: javax.activation.DataHandler getHandlerForObject(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,int)>(r0, r14, r15, r16, r17, i0);

     label10:
        $r48 = specialinvoke r13.<org.apache.cxf.jaxrs.provider.MultipartProvider: java.lang.String getContentId(java.lang.'annotation'.Annotation[],int)>(r16, i0);

        $r49 = new org.apache.cxf.jaxrs.ext.multipart.Attachment;

        $r50 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r50.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>()>();

        specialinvoke $r49.<org.apache.cxf.jaxrs.ext.multipart.Attachment: void <init>(java.lang.String,javax.activation.DataHandler,javax.ws.rs.core.MultivaluedMap)>($r48, r44, $r50);

        return $r49;
    }

    private java.lang.String getContentId(java.lang.'annotation'.Annotation[], int)
    {
        java.lang.'annotation'.Annotation[] r0;
        org.apache.cxf.jaxrs.ext.multipart.Multipart r2;
        org.apache.cxf.jaxrs.provider.MultipartProvider r6;
        int i0;
        java.lang.Object $r1;
        java.lang.String $r3, $r4, $r5, $r7;
        boolean $z0;

        r6 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        r0 := @parameter0: java.lang.'annotation'.Annotation[];

        i0 := @parameter1: int;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.Object getAnnotation(java.lang.'annotation'.Annotation[],java.lang.Class)>(r0, class "Lorg/apache/cxf/jaxrs/ext/multipart/Multipart;");

        r2 = (org.apache.cxf.jaxrs.ext.multipart.Multipart) $r1;

        if r2 == null goto label1;

        $r3 = "";

        $r4 = interfaceinvoke r2.<org.apache.cxf.jaxrs.ext.multipart.Multipart: java.lang.String value()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r5 = interfaceinvoke r2.<org.apache.cxf.jaxrs.ext.multipart.Multipart: java.lang.String value()>();

        return $r5;

     label1:
        if i0 != 0 goto label2;

        $r7 = "root.message@cxf.apache.org";

        goto label3;

     label2:
        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

     label3:
        return $r7;
    }

    private javax.activation.DataHandler getHandlerForObject(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], java.lang.String, int)
    {
        java.lang.Throwable $r19;
        java.lang.Object[] $r14;
        javax.ws.rs.ext.MessageBodyWriter $r9;
        java.lang.'annotation'.Annotation[] r8;
        org.apache.cxf.common.i18n.Message $r13;
        org.apache.cxf.jaxrs.provider.MultipartProvider$MessageBodyWriterDataHandler $r11;
        javax.ws.rs.core.MediaType $r1;
        org.apache.cxf.jaxrs.ext.MessageContext $r3, $r4, $r10, $r20;
        java.util.ResourceBundle $r15;
        int i0;
        java.lang.String r0, $r17;
        javax.ws.rs.ext.Providers $r5;
        javax.ws.rs.InternalServerErrorException $r18;
        java.util.logging.Logger $r16;
        java.lang.reflect.Type r7;
        org.apache.cxf.jaxrs.provider.MultipartProvider r2;
        java.lang.Class r6;
        java.lang.Object r12;

        r2 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        r12 := @parameter0: java.lang.Object;

        r6 := @parameter1: java.lang.Class;

        r7 := @parameter2: java.lang.reflect.Type;

        r8 := @parameter3: java.lang.'annotation'.Annotation[];

        r0 := @parameter4: java.lang.String;

        i0 := @parameter5: int;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MediaType toMediaType(java.lang.String)>(r0);

        $r3 = r2.<org.apache.cxf.jaxrs.provider.MultipartProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        interfaceinvoke $r3.<org.apache.cxf.jaxrs.ext.MessageContext: void put(java.lang.Object,java.lang.Object)>("active.jaxrs.provider", r2);

     label1:
        $r4 = r2.<org.apache.cxf.jaxrs.provider.MultipartProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        $r5 = interfaceinvoke $r4.<org.apache.cxf.jaxrs.ext.MessageContext: javax.ws.rs.ext.Providers getProviders()>();

        $r9 = interfaceinvoke $r5.<javax.ws.rs.ext.Providers: javax.ws.rs.ext.MessageBodyWriter getMessageBodyWriter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)>(r6, r7, r8, $r1);

     label2:
        $r10 = r2.<org.apache.cxf.jaxrs.provider.MultipartProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        interfaceinvoke $r10.<org.apache.cxf.jaxrs.ext.MessageContext: void put(java.lang.Object,java.lang.Object)>("active.jaxrs.provider", null);

        goto label5;

     label3:
        $r19 := @caughtexception;

     label4:
        $r20 = r2.<org.apache.cxf.jaxrs.provider.MultipartProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        interfaceinvoke $r20.<org.apache.cxf.jaxrs.ext.MessageContext: void put(java.lang.Object,java.lang.Object)>("active.jaxrs.provider", null);

        throw $r19;

     label5:
        if $r9 != null goto label6;

        $r13 = new org.apache.cxf.common.i18n.Message;

        $r15 = <org.apache.cxf.jaxrs.provider.MultipartProvider: java.util.ResourceBundle BUNDLE>;

        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = r6;

        specialinvoke $r13.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("NO_MSG_WRITER", $r15, $r14);

        $r16 = <org.apache.cxf.jaxrs.provider.MultipartProvider: java.util.logging.Logger LOG>;

        $r17 = virtualinvoke $r13.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r16.<java.util.logging.Logger: void severe(java.lang.String)>($r17);

        $r18 = new javax.ws.rs.InternalServerErrorException;

        specialinvoke $r18.<javax.ws.rs.InternalServerErrorException: void <init>()>();

        throw $r18;

     label6:
        $r11 = new org.apache.cxf.jaxrs.provider.MultipartProvider$MessageBodyWriterDataHandler;

        specialinvoke $r11.<org.apache.cxf.jaxrs.provider.MultipartProvider$MessageBodyWriterDataHandler: void <init>(javax.ws.rs.ext.MessageBodyWriter,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)>($r9, r12, r6, r7, r8, $r1);

        return $r11;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private javax.activation.DataHandler getHandlerForObject(java.lang.Object, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], java.lang.String, int)
    {
        java.lang.'annotation'.Annotation[] r4;
        javax.activation.DataHandler $r6;
        java.lang.reflect.Type r3;
        org.apache.cxf.jaxrs.provider.MultipartProvider r2;
        int i0;
        java.lang.Object r0;
        java.lang.Class $r1;
        java.lang.String r5;

        r2 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        r0 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.reflect.Type;

        r4 := @parameter2: java.lang.'annotation'.Annotation[];

        r5 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = specialinvoke r2.<org.apache.cxf.jaxrs.provider.MultipartProvider: javax.activation.DataHandler getHandlerForObject(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,int)>(r0, $r1, r3, r4, r5, i0);

        return $r6;
    }

    private javax.activation.DataHandler createInputStreamDH(java.io.InputStream, java.lang.String)
    {
        org.apache.cxf.jaxrs.ext.multipart.InputStreamDataSource $r1;
        org.apache.cxf.jaxrs.provider.MultipartProvider r4;
        java.lang.String r3;
        javax.activation.DataHandler $r0;
        java.io.InputStream r2;

        r4 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        r2 := @parameter0: java.io.InputStream;

        r3 := @parameter1: java.lang.String;

        $r0 = new javax.activation.DataHandler;

        $r1 = new org.apache.cxf.jaxrs.ext.multipart.InputStreamDataSource;

        specialinvoke $r1.<org.apache.cxf.jaxrs.ext.multipart.InputStreamDataSource: void <init>(java.io.InputStream,java.lang.String)>(r2, r3);

        specialinvoke $r0.<javax.activation.DataHandler: void <init>(javax.activation.DataSource)>($r1);

        return $r0;
    }

    private java.lang.String getRootMediaType(java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        java.lang.'annotation'.Annotation[] r3;
        javax.ws.rs.core.MediaType r0;
        org.apache.cxf.jaxrs.ext.MessageContext $r7;
        java.util.Map $r1;
        org.apache.cxf.jaxrs.ext.multipart.Multipart r5;
        org.apache.cxf.jaxrs.provider.MultipartProvider r6;
        java.lang.Object $r2, $r4, $r8;
        java.lang.String $r9, $r10, r11;
        boolean $z0, $z1;

        r6 := @this: org.apache.cxf.jaxrs.provider.MultipartProvider;

        r3 := @parameter0: java.lang.'annotation'.Annotation[];

        r0 := @parameter1: javax.ws.rs.core.MediaType;

        $r1 = virtualinvoke r0.<javax.ws.rs.core.MediaType: java.util.Map getParameters()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("type");

        r11 = (java.lang.String) $r2;

        if r11 == null goto label1;

        return r11;

     label1:
        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.Object getAnnotation(java.lang.'annotation'.Annotation[],java.lang.Class)>(r3, class "Lorg/apache/cxf/jaxrs/ext/multipart/Multipart;");

        r5 = (org.apache.cxf.jaxrs.ext.multipart.Multipart) $r4;

        if r5 == null goto label2;

        $r9 = "*/*";

        $r10 = interfaceinvoke r5.<org.apache.cxf.jaxrs.ext.multipart.Multipart: java.lang.String type()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 != 0 goto label2;

        r11 = interfaceinvoke r5.<org.apache.cxf.jaxrs.ext.multipart.Multipart: java.lang.String type()>();

     label2:
        if r11 != null goto label4;

        $r7 = r6.<org.apache.cxf.jaxrs.provider.MultipartProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        $r8 = interfaceinvoke $r7.<org.apache.cxf.jaxrs.ext.MessageContext: java.lang.Object getContextualProperty(java.lang.Object)>("mtom-enabled");

        $z0 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isTrue(java.lang.Object)>($r8);

        if $z0 == 0 goto label3;

        r11 = "text/xml";

        goto label4;

     label3:
        r11 = "application/octet-stream";

     label4:
        return r11;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;
        java.util.ResourceBundle $r1;

        <org.apache.cxf.jaxrs.provider.MultipartProvider: java.lang.String ACTIVE_JAXRS_PROVIDER_KEY> = "active.jaxrs.provider";

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/provider/MultipartProvider;");

        <org.apache.cxf.jaxrs.provider.MultipartProvider: java.util.logging.Logger LOG> = $r0;

        $r1 = staticinvoke <org.apache.cxf.common.i18n.BundleUtils: java.util.ResourceBundle getBundle(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/provider/MultipartProvider;");

        <org.apache.cxf.jaxrs.provider.MultipartProvider: java.util.ResourceBundle BUNDLE> = $r1;

        return;
    }
}
