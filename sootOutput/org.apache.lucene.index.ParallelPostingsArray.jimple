class org.apache.lucene.index.ParallelPostingsArray extends java.lang.Object
{
    static final int BYTES_PER_POSTING;
    final int size;
    final int[] textStarts;
    final int[] intStarts;
    final int[] byteStarts;

    void <init>(int)
    {
        int[] $r1, $r2, $r3;
        int i0;
        org.apache.lucene.index.ParallelPostingsArray r0;

        r0 := @this: org.apache.lucene.index.ParallelPostingsArray;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.index.ParallelPostingsArray: int size> = i0;

        $r1 = newarray (int)[i0];

        r0.<org.apache.lucene.index.ParallelPostingsArray: int[] textStarts> = $r1;

        $r2 = newarray (int)[i0];

        r0.<org.apache.lucene.index.ParallelPostingsArray: int[] intStarts> = $r2;

        $r3 = newarray (int)[i0];

        r0.<org.apache.lucene.index.ParallelPostingsArray: int[] byteStarts> = $r3;

        return;
    }

    int bytesPerPosting()
    {
        org.apache.lucene.index.ParallelPostingsArray r0;

        r0 := @this: org.apache.lucene.index.ParallelPostingsArray;

        return 12;
    }

    org.apache.lucene.index.ParallelPostingsArray newInstance(int)
    {
        int i0;
        org.apache.lucene.index.ParallelPostingsArray $r0, r1;

        r1 := @this: org.apache.lucene.index.ParallelPostingsArray;

        i0 := @parameter0: int;

        $r0 = new org.apache.lucene.index.ParallelPostingsArray;

        specialinvoke $r0.<org.apache.lucene.index.ParallelPostingsArray: void <init>(int)>(i0);

        return $r0;
    }

    final org.apache.lucene.index.ParallelPostingsArray grow()
    {
        int $i0, $i1, $i2, $i3, $i4;
        org.apache.lucene.index.ParallelPostingsArray r0, $r1;

        r0 := @this: org.apache.lucene.index.ParallelPostingsArray;

        $i0 = r0.<org.apache.lucene.index.ParallelPostingsArray: int size>;

        $i1 = $i0 + 1;

        $i2 = virtualinvoke r0.<org.apache.lucene.index.ParallelPostingsArray: int bytesPerPosting()>();

        $i3 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>($i1, $i2);

        $r1 = virtualinvoke r0.<org.apache.lucene.index.ParallelPostingsArray: org.apache.lucene.index.ParallelPostingsArray newInstance(int)>($i3);

        $i4 = r0.<org.apache.lucene.index.ParallelPostingsArray: int size>;

        virtualinvoke r0.<org.apache.lucene.index.ParallelPostingsArray: void copyTo(org.apache.lucene.index.ParallelPostingsArray,int)>($r1, $i4);

        return $r1;
    }

    void copyTo(org.apache.lucene.index.ParallelPostingsArray, int)
    {
        org.apache.lucene.index.ParallelPostingsArray r0, r1;
        int[] $r2, $r3, $r4, $r5, $r6, $r7;
        int i0;

        r0 := @this: org.apache.lucene.index.ParallelPostingsArray;

        r1 := @parameter0: org.apache.lucene.index.ParallelPostingsArray;

        i0 := @parameter1: int;

        $r3 = r0.<org.apache.lucene.index.ParallelPostingsArray: int[] textStarts>;

        $r2 = r1.<org.apache.lucene.index.ParallelPostingsArray: int[] textStarts>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r2, 0, i0);

        $r5 = r0.<org.apache.lucene.index.ParallelPostingsArray: int[] intStarts>;

        $r4 = r1.<org.apache.lucene.index.ParallelPostingsArray: int[] intStarts>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r4, 0, i0);

        $r7 = r0.<org.apache.lucene.index.ParallelPostingsArray: int[] byteStarts>;

        $r6 = r1.<org.apache.lucene.index.ParallelPostingsArray: int[] byteStarts>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, $r6, 0, i0);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.index.ParallelPostingsArray: int BYTES_PER_POSTING> = 12;

        return;
    }
}
