public final class com.ctc.wstx.sw.BufferingXmlWriter extends com.ctc.wstx.sw.XmlWriter implements javax.xml.stream.XMLStreamConstants
{
    static final int DEFAULT_BUFFER_SIZE;
    static final int DEFAULT_SMALL_SIZE;
    protected static final int HIGHEST_ENCODABLE_ATTR_CHAR;
    protected static final int HIGHEST_ENCODABLE_TEXT_CHAR;
    protected java.io.Writer mOut;
    protected char[] mOutputBuffer;
    protected final int mSmallWriteSize;
    protected int mOutputPtr;
    protected int mOutputBufLen;
    protected java.io.OutputStream mUnderlyingStream;
    private final int mEncHighChar;
    final char mEncQuoteChar;
    final java.lang.String mEncQuoteEntity;

    public void <init>(java.io.Writer, com.ctc.wstx.api.WriterConfig, java.lang.String, boolean, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r6;
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        com.ctc.wstx.api.WriterConfig r1;
        java.io.Writer r3;
        int $i0, $i1, $i2, $i4;
        char[] $r4, $r5;
        java.lang.String r2;
        boolean z0;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r3 := @parameter0: java.io.Writer;

        r1 := @parameter1: com.ctc.wstx.api.WriterConfig;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r6 := @parameter4: java.io.OutputStream;

        specialinvoke r0.<com.ctc.wstx.sw.XmlWriter: void <init>(com.ctc.wstx.api.WriterConfig,java.lang.String,boolean)>(r1, r2, z0);

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mOut> = r3;

        $r4 = virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: char[] allocFullCBuffer(int)>(1000);

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer> = $r4;

        $r5 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer>;

        $i0 = lengthof $r5;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputBufLen> = $i0;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mSmallWriteSize> = 256;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr> = 0;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.OutputStream mUnderlyingStream> = r6;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: char mEncQuoteChar> = 34;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.lang.String mEncQuoteEntity> = "&quot;";

        $i1 = staticinvoke <com.ctc.wstx.sw.BufferingXmlWriter: int guessEncodingBitSize(java.lang.String)>(r2);

        if $i1 >= 16 goto label1;

        $i2 = 1 << $i1;

        goto label2;

     label1:
        $i4 = (int) 65534;

        $i2 = $i4;

     label2:
        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mEncHighChar> = $i2;

        return;
    }

    protected int getOutputPtr()
    {
        int $i0;
        com.ctc.wstx.sw.BufferingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        $i0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        return $i0;
    }

    protected final java.io.OutputStream getOutputStream()
    {
        java.io.OutputStream $r1;
        com.ctc.wstx.sw.BufferingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        $r1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.OutputStream mUnderlyingStream>;

        return $r1;
    }

    protected final java.io.Writer getWriter()
    {
        java.io.Writer $r1;
        com.ctc.wstx.sw.BufferingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        $r1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mOut>;

        return $r1;
    }

    public void close() throws java.io.IOException
    {
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        com.ctc.wstx.api.WriterConfig $r4;
        java.io.Writer $r1, r2;
        char[] r3;
        boolean $z0;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        $r1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mOut>;

        if $r1 == null goto label1;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void flush()>();

        r2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mOut>;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mOut> = null;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.OutputStream mUnderlyingStream> = null;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mTextWriter> = null;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mAttrValueWriter> = null;

        r3 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer>;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer> = null;

        $r4 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: com.ctc.wstx.api.WriterConfig mConfig>;

        virtualinvoke $r4.<com.ctc.wstx.api.WriterConfig: void freeFullCBuffer(char[])>(r3);

        $z0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mAutoCloseOutput>;

        if $z0 == 0 goto label1;

        virtualinvoke r2.<java.io.Writer: void close()>();

     label1:
        return;
    }

    public final void flush() throws java.io.IOException
    {
        java.io.Writer $r1, $r2;
        com.ctc.wstx.sw.BufferingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        $r1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mOut>;

        if $r1 == null goto label1;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void flushBuffer()>();

        $r2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mOut>;

        virtualinvoke $r2.<java.io.Writer: void flush()>();

     label1:
        return;
    }

    public void writeRaw(char[], int, int) throws java.io.IOException
    {
        int $i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13;
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        java.io.Writer $r1, $r5;
        char[] r2, $r3, $r4;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r2 := @parameter0: char[];

        i12 := @parameter1: int;

        i13 := @parameter2: int;

        $r1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mOut>;

        if $r1 != null goto label1;

        return;

     label1:
        $i0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mSmallWriteSize>;

        if i13 >= $i0 goto label3;

        $i6 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i8 = $i6 + i13;

        $i7 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputBufLen>;

        if $i8 <= $i7 goto label2;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void flushBuffer()>();

     label2:
        $r4 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer>;

        $i9 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i12, $r4, $i9, i13);

        $i10 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i11 = $i10 + i13;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr> = $i11;

        return;

     label3:
        i1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        if i1 <= 0 goto label5;

        $i2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mSmallWriteSize>;

        if i1 >= $i2 goto label4;

        $i3 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mSmallWriteSize>;

        i4 = $i3 - i1;

        $r3 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i12, $r3, i1, i4);

        $i5 = i1 + i4;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr> = $i5;

        i13 = i13 - i4;

        i12 = i12 + i4;

     label4:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void flushBuffer()>();

     label5:
        $r5 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mOut>;

        virtualinvoke $r5.<java.io.Writer: void write(char[],int,int)>(r2, i12, i13);

        return;
    }

    public void writeRaw(java.lang.String) throws java.io.IOException
    {
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        java.io.Writer $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        char[] $r3;
        java.lang.String r2;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mOut>;

        if $r1 != null goto label1;

        return;

     label1:
        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        $i1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mSmallWriteSize>;

        if $i0 >= $i1 goto label3;

        $i2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i4 = $i2 + $i0;

        $i3 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputBufLen>;

        if $i4 < $i3 goto label2;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void flushBuffer()>();

     label2:
        $r3 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer>;

        $i5 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        virtualinvoke r2.<java.lang.String: void getChars(int,int,char[],int)>(0, $i0, $r3, $i5);

        $i6 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i7 = $i6 + $i0;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr> = $i7;

        return;

     label3:
        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeRaw(java.lang.String,int,int)>(r2, 0, $i0);

        return;
    }

    public void writeRaw(java.lang.String, int, int) throws java.io.IOException
    {
        int $i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15;
        java.lang.String r2;
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        java.io.Writer $r1, $r5;
        char[] $r3, $r4;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r2 := @parameter0: java.lang.String;

        i14 := @parameter1: int;

        i15 := @parameter2: int;

        $r1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mOut>;

        if $r1 != null goto label1;

        return;

     label1:
        $i0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mSmallWriteSize>;

        if i15 >= $i0 goto label3;

        $i7 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i9 = $i7 + i15;

        $i8 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputBufLen>;

        if $i9 < $i8 goto label2;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void flushBuffer()>();

     label2:
        $i11 = i14 + i15;

        $r4 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer>;

        $i10 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        virtualinvoke r2.<java.lang.String: void getChars(int,int,char[],int)>(i14, $i11, $r4, $i10);

        $i12 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i13 = $i12 + i15;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr> = $i13;

        return;

     label3:
        i1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        if i1 <= 0 goto label5;

        $i2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mSmallWriteSize>;

        if i1 >= $i2 goto label4;

        $i3 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mSmallWriteSize>;

        i4 = $i3 - i1;

        $i5 = i14 + i4;

        $r3 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer>;

        virtualinvoke r2.<java.lang.String: void getChars(int,int,char[],int)>(i14, $i5, $r3, i1);

        $i6 = i1 + i4;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr> = $i6;

        i15 = i15 - i4;

        i14 = i14 + i4;

     label4:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void flushBuffer()>();

     label5:
        $r5 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mOut>;

        virtualinvoke $r5.<java.io.Writer: void write(java.lang.String,int,int)>(r2, i14, i15);

        return;
    }

    public final void writeCDataStart() throws java.io.IOException
    {
        com.ctc.wstx.sw.BufferingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>("<![CDATA[");

        return;
    }

    public final void writeCDataEnd() throws java.io.IOException
    {
        com.ctc.wstx.sw.BufferingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>("]]>");

        return;
    }

    public final void writeCommentStart() throws java.io.IOException
    {
        com.ctc.wstx.sw.BufferingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>("<!--");

        return;
    }

    public final void writeCommentEnd() throws java.io.IOException
    {
        com.ctc.wstx.sw.BufferingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>("-->");

        return;
    }

    public final void writePIStart(java.lang.String, boolean) throws java.io.IOException
    {
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char,char)>(60, 63);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(r1);

        if z0 == 0 goto label1;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(32);

     label1:
        return;
    }

    public final void writePIEnd() throws java.io.IOException
    {
        com.ctc.wstx.sw.BufferingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char,char)>(63, 62);

        return;
    }

    public int writeCData(java.lang.String) throws java.io.IOException
    {
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        int $i0, $i1, $i3, $i5;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mCheckContent>;

        if $z0 == 0 goto label2;

        $i1 = virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: int verifyCDataContent(java.lang.String)>(r1);

        if $i1 < 0 goto label2;

        $z1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mFixContent>;

        if $z1 != 0 goto label1;

        return $i1;

     label1:
        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeSegmentedCData(java.lang.String,int)>(r1, $i1);

        $i3 = (int) -1;

        return $i3;

     label2:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>("<![CDATA[");

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeRaw(java.lang.String,int,int)>(r1, 0, $i0);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>("]]>");

        $i5 = (int) -1;

        return $i5;
    }

    public int writeCData(char[], int, int) throws java.io.IOException
    {
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        int i0, i1, $i2, $i4, $i6;
        char[] r1;
        boolean $z0, $z1;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mCheckContent>;

        if $z0 == 0 goto label2;

        $i2 = virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: int verifyCDataContent(char[],int,int)>(r1, i0, i1);

        if $i2 < 0 goto label2;

        $z1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mFixContent>;

        if $z1 != 0 goto label1;

        return $i2;

     label1:
        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeSegmentedCData(char[],int,int,int)>(r1, i0, i1, $i2);

        $i4 = (int) -1;

        return $i4;

     label2:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>("<![CDATA[");

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeRaw(char[],int,int)>(r1, i0, i1);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>("]]>");

        $i6 = (int) -1;

        return $i6;
    }

    public void writeCharacters(java.lang.String) throws java.io.IOException
    {
        boolean $z0, $z1;
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        java.io.Writer $r1, $r2, $r5;
        int $i0, i1, $i2, $i4, $i5, $i6, $i8, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25;
        java.lang.String r3, r6, r7, r8;
        char $c3, $c7, $c9;
        char[] $r4;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mOut>;

        if $r1 != null goto label01;

        return;

     label01:
        $r2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mTextWriter>;

        if $r2 == null goto label02;

        $r5 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mTextWriter>;

        virtualinvoke $r5.<java.io.Writer: void write(java.lang.String)>(r3);

        return;

     label02:
        i10 = 0;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        i1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mEncHighChar>;

     label03:
        r6 = null;

        r8 = null;

        r7 = null;

     label04:
        if i10 < $i0 goto label05;

        goto label18;

     label05:
        $i2 = i10;

        i10 = i10 + 1;

        $c3 = virtualinvoke r3.<java.lang.String: char charAt(int)>($i2);

        $i13 = (int) $c3;

        if $i13 > 62 goto label12;

        $i14 = (int) $c3;

        if $i14 > 32 goto label08;

        $i15 = (int) $c3;

        if $i15 == 32 goto label13;

        $i16 = (int) $c3;

        if $i16 == 10 goto label13;

        $i17 = (int) $c3;

        if $i17 == 9 goto label13;

        $i18 = (int) $c3;

        if $i18 != 13 goto label06;

        $z1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mEscapeCR>;

        if $z1 == 0 goto label13;

        goto label15;

     label06:
        $z0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mXml11>;

        if $z0 == 0 goto label07;

        if $c3 != 0 goto label15;

     label07:
        $i19 = (int) $c3;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void throwInvalidChar(int)>($i19);

        goto label15;

     label08:
        $i20 = (int) $c3;

        if $i20 != 60 goto label09;

        r6 = "&lt;";

        r8 = "&lt;";

        r7 = "&lt;";

        goto label15;

     label09:
        $i21 = (int) $c3;

        if $i21 != 38 goto label10;

        r6 = "&amp;";

        r8 = "&amp;";

        r7 = "&amp;";

        goto label15;

     label10:
        $i22 = (int) $c3;

        if $i22 != 62 goto label13;

        if i10 < 2 goto label11;

        $i8 = i10 - 2;

        $c9 = virtualinvoke r3.<java.lang.String: char charAt(int)>($i8);

        $i23 = (int) $c9;

        if $i23 != 93 goto label13;

     label11:
        r6 = "&gt;";

        r8 = "&gt;";

        r7 = "&gt;";

        goto label15;

     label12:
        $i24 = (int) $c3;

        if $i24 < i1 goto label13;

        goto label15;

     label13:
        $i11 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i12 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputBufLen>;

        if $i11 < $i12 goto label14;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void flushBuffer()>();

     label14:
        $r4 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer>;

        $i4 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i5 = $i4 + 1;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr> = $i5;

        $r4[$i4] = $c3;

        goto label04;

     label15:
        if r7 == null goto label16;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeRaw(java.lang.String)>(r8);

        goto label17;

     label16:
        $i6 = i10 - 1;

        $c7 = virtualinvoke r3.<java.lang.String: char charAt(int)>($i6);

        $i25 = (int) $c7;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeAsEntity(int)>($i25);

     label17:
        goto label03;

     label18:
        return;
    }

    public void writeCharacters(char[], int, int) throws java.io.IOException
    {
        int i0, $i1, $i2, i4, i5, i6, i7, $i8, $i9;
        java.lang.String r5, r6, r7;
        boolean $z0, $z1;
        char $c3;
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        java.io.Writer $r1, $r2, $r4;
        char[] r3;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r3 := @parameter0: char[];

        i4 := @parameter1: int;

        i5 := @parameter2: int;

        $r1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mOut>;

        if $r1 != null goto label01;

        return;

     label01:
        $r2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mTextWriter>;

        if $r2 == null goto label02;

        $r4 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mTextWriter>;

        virtualinvoke $r4.<java.io.Writer: void write(char[],int,int)>(r3, i4, i5);

        goto label18;

     label02:
        i6 = i5 + i4;

     label03:
        i7 = 0;

        $i1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mEncHighChar>;

        i0 = i4;

        r5 = null;

        r7 = null;

        r6 = null;

     label04:
        if i4 >= i6 goto label14;

        i7 = r3[i4];

        if i7 > 62 goto label12;

        if i7 != 60 goto label05;

        r5 = "&lt;";

        r7 = "&lt;";

        r6 = "&lt;";

        goto label14;

     label05:
        if i7 != 38 goto label06;

        r5 = "&amp;";

        r7 = "&amp;";

        r6 = "&amp;";

        goto label14;

     label06:
        if i7 != 62 goto label08;

        if i4 == i0 goto label07;

        $i2 = i4 - 1;

        $c3 = r3[$i2];

        $i9 = (int) $c3;

        if $i9 != 93 goto label13;

     label07:
        r5 = "&gt;";

        r7 = "&gt;";

        r6 = "&gt;";

        goto label14;

     label08:
        if i7 >= 32 goto label13;

        if i7 == 10 goto label13;

        if i7 != 9 goto label09;

        goto label13;

     label09:
        if i7 != 13 goto label10;

        $z1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mEscapeCR>;

        if $z1 == 0 goto label13;

        goto label14;

     label10:
        $z0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mXml11>;

        if $z0 == 0 goto label11;

        if i7 != 0 goto label14;

     label11:
        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void throwInvalidChar(int)>(i7);

        goto label14;

     label12:
        if i7 < $i1 goto label13;

        goto label14;

     label13:
        i4 = i4 + 1;

        goto label04;

     label14:
        $i8 = i4 - i0;

        if $i8 <= 0 goto label15;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeRaw(char[],int,int)>(r3, i0, $i8);

     label15:
        if r6 == null goto label16;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeRaw(java.lang.String)>(r7);

        goto label17;

     label16:
        if i4 >= i6 goto label17;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeAsEntity(int)>(i7);

     label17:
        i4 = i4 + 1;

        if i4 < i6 goto label03;

     label18:
        return;
    }

    public int writeComment(java.lang.String) throws java.io.IOException
    {
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        int $i0, $i2, $i4;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mCheckContent>;

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: int verifyCommentContent(java.lang.String)>(r1);

        if $i0 < 0 goto label2;

        $z1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mFixContent>;

        if $z1 != 0 goto label1;

        return $i0;

     label1:
        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeSegmentedComment(java.lang.String,int)>(r1, $i0);

        $i2 = (int) -1;

        return $i2;

     label2:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>("<!--");

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeRaw(java.lang.String)>(r1);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>("-->");

        $i4 = (int) -1;

        return $i4;
    }

    public void writeDTD(java.lang.String) throws java.io.IOException
    {
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeRaw(java.lang.String)>(r1);

        return;
    }

    public void writeDTD(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        int $i0;
        java.lang.String r1, r2, r3, r4;
        boolean $z0;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>("<!DOCTYPE ");

        $z0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mCheckNames>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void verifyNameValidity(java.lang.String,boolean)>(r1, 0);

     label1:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(r1);

        if r2 == null goto label4;

        if r4 == null goto label2;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(" PUBLIC \"");

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(r4);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>("\" \"");

        goto label3;

     label2:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(" SYSTEM \"");

     label3:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(r2);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(34);

     label4:
        if r3 == null goto label5;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label5;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char,char)>(32, 91);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(r3);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(93);

     label5:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(62);

        return;
    }

    public void writeEntityReference(java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mCheckNames>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mNsAware>;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void verifyNameValidity(java.lang.String,boolean)>(r1, $z1);

     label1:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(38);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(r1);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(59);

        return;
    }

    public void writeXmlDeclaration(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        int $i0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>("<?xml version=\'");

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(r1);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(39);

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(" encoding=\'");

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(r2);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(39);

     label1:
        if r3 == null goto label2;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(" standalone=\'");

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(r3);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(39);

     label2:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char,char)>(63, 62);

        return;
    }

    public int writePI(java.lang.String, java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        int $i0, $i1, $i2, $i4;
        java.lang.String r1, r2;
        boolean $z0, $z1, $z2;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mCheckNames>;

        if $z0 == 0 goto label1;

        $z2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mNsAware>;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void verifyNameValidity(java.lang.String,boolean)>(r1, $z2);

     label1:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char,char)>(60, 63);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(r1);

        if r2 == null goto label3;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        $z1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mCheckContent>;

        if $z1 == 0 goto label2;

        $i1 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(63);

        if $i1 < 0 goto label2;

        $i2 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String,int)>("?>", $i1);

        if $i2 < 0 goto label2;

        return $i2;

     label2:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(32);

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeRaw(java.lang.String)>(r2);

     label3:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char,char)>(63, 62);

        $i4 = (int) -1;

        return $i4;
    }

    public void writeStartTagStart(java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        char[] r2;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mCheckNames>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mNsAware>;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void verifyNameValidity(java.lang.String,boolean)>(r1, $z1);

     label1:
        $i6 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputBufLen>;

        $i1 = $i0 - $i6;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $i3 = 1 + $i2;

        $i7 = $i1 - $i3;

        if $i7 >= 0 goto label2;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(60);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(r1);

        goto label3;

     label2:
        r2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer>;

        i8 = $i6 + 1;

        r2[$i6] = 60;

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(0, $i4, r2, i8);

        $i5 = i8 + $i4;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr> = $i5;

     label3:
        return;
    }

    public void writeStartTagStart(java.lang.String, java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13;
        java.lang.String r0, r2;
        boolean $z0, $z1, $z2;
        com.ctc.wstx.sw.BufferingXmlWriter r1;
        char[] r3;

        r1 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        virtualinvoke r1.<com.ctc.wstx.sw.BufferingXmlWriter: void writeStartTagStart(java.lang.String)>(r2);

        return;

     label2:
        $z0 = r1.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mCheckNames>;

        if $z0 == 0 goto label3;

        $z1 = r1.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mNsAware>;

        virtualinvoke r1.<com.ctc.wstx.sw.BufferingXmlWriter: void verifyNameValidity(java.lang.String,boolean)>(r0, $z1);

        $z2 = r1.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mNsAware>;

        virtualinvoke r1.<com.ctc.wstx.sw.BufferingXmlWriter: void verifyNameValidity(java.lang.String,boolean)>(r2, $z2);

     label3:
        $i9 = r1.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = r1.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputBufLen>;

        $i3 = $i2 - $i9;

        $i4 = virtualinvoke r2.<java.lang.String: int length()>();

        $i5 = 2 + $i4;

        $i6 = $i5 + $i1;

        $i10 = $i3 - $i6;

        if $i10 >= 0 goto label4;

        specialinvoke r1.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(60);

        specialinvoke r1.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(r0);

        specialinvoke r1.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(58);

        specialinvoke r1.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(r2);

        goto label5;

     label4:
        r3 = r1.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer>;

        i11 = $i9 + 1;

        r3[$i9] = 60;

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, $i1, r3, i11);

        i12 = i11 + $i1;

        i13 = i12 + 1;

        r3[i12] = 58;

        $i7 = virtualinvoke r2.<java.lang.String: int length()>();

        virtualinvoke r2.<java.lang.String: void getChars(int,int,char[],int)>(0, $i7, r3, i13);

        $i8 = i13 + $i7;

        r1.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr> = $i8;

     label5:
        return;
    }

    public void writeStartTagEnd() throws java.io.IOException
    {
        com.ctc.wstx.sw.BufferingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(62);

        return;
    }

    public void writeStartTagEmptyEnd() throws java.io.IOException
    {
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        int $i0, $i1, i2, i3, i4, i5;
        java.io.Writer $r1;
        char[] $r2;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        i2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i1 = i2 + 3;

        $i0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputBufLen>;

        if $i1 < $i0 goto label2;

        $r1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mOut>;

        if $r1 != null goto label1;

        return;

     label1:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void flushBuffer()>();

        i2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

     label2:
        $r2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer>;

        i3 = i2 + 1;

        $r2[i2] = 32;

        i4 = i3 + 1;

        $r2[i3] = 47;

        i5 = i4 + 1;

        $r2[i4] = 62;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr> = i5;

        return;
    }

    public void writeEndTag(java.lang.String) throws java.io.IOException
    {
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        int $i0, $i1, $i2, $i3, i4, $i5, i6, i7, i8, i9, i10;
        char[] r2;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r1 := @parameter0: java.lang.String;

        i6 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputBufLen>;

        $i1 = $i0 - i6;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $i3 = 3 + $i2;

        i4 = $i1 - $i3;

        if i4 >= 0 goto label1;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char,char)>(60, 47);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(r1);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(62);

        goto label2;

     label1:
        r2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer>;

        i7 = i6 + 1;

        r2[i6] = 60;

        i8 = i7 + 1;

        r2[i7] = 47;

        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(0, $i5, r2, i8);

        i9 = i8 + $i5;

        i10 = i9 + 1;

        r2[i9] = 62;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr> = i10;

     label2:
        return;
    }

    public void writeEndTag(java.lang.String, java.lang.String) throws java.io.IOException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, i9, i10, i11, i12, i13, i14, i15;
        java.lang.String r0, r2;
        com.ctc.wstx.sw.BufferingXmlWriter r1;
        char[] r3;

        r1 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        virtualinvoke r1.<com.ctc.wstx.sw.BufferingXmlWriter: void writeEndTag(java.lang.String)>(r2);

        return;

     label2:
        i9 = r1.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = r1.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputBufLen>;

        $i3 = $i2 - i9;

        $i4 = virtualinvoke r2.<java.lang.String: int length()>();

        $i5 = 4 + $i4;

        $i6 = $i5 + $i1;

        i7 = $i3 - $i6;

        if i7 >= 0 goto label3;

        specialinvoke r1.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char,char)>(60, 47);

        specialinvoke r1.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(r0);

        specialinvoke r1.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(58);

        specialinvoke r1.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(r2);

        specialinvoke r1.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(62);

        goto label4;

     label3:
        r3 = r1.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer>;

        i10 = i9 + 1;

        r3[i9] = 60;

        i11 = i10 + 1;

        r3[i10] = 47;

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, $i1, r3, i11);

        i12 = i11 + $i1;

        i13 = i12 + 1;

        r3[i12] = 58;

        $i8 = virtualinvoke r2.<java.lang.String: int length()>();

        virtualinvoke r2.<java.lang.String: void getChars(int,int,char[],int)>(0, $i8, r3, i13);

        i14 = i13 + $i8;

        i15 = i14 + 1;

        r3[i14] = 62;

        r1.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr> = i15;

     label4:
        return;
    }

    public void writeAttribute(java.lang.String, java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10, $i11;
        java.lang.String r2, r4;
        boolean $z0, $z1;
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        java.io.Writer $r1, $r5, $r6;
        char[] r3;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mOut>;

        if $r1 != null goto label1;

        return;

     label1:
        $z0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mCheckNames>;

        if $z0 == 0 goto label2;

        $z1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mNsAware>;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void verifyNameValidity(java.lang.String,boolean)>(r2, $z1);

     label2:
        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        $i2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputBufLen>;

        $i1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i4 = $i2 - $i1;

        $i3 = 3 + $i0;

        $i5 = $i4 - $i3;

        if $i5 >= 0 goto label3;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(32);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(r2);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char,char)>(61, 34);

        goto label4;

     label3:
        i6 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        r3 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer>;

        i7 = i6 + 1;

        r3[i6] = 32;

        virtualinvoke r2.<java.lang.String: void getChars(int,int,char[],int)>(0, $i0, r3, i7);

        i8 = i7 + $i0;

        i9 = i8 + 1;

        r3[i8] = 61;

        i10 = i9 + 1;

        r3[i9] = 34;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr> = i10;

     label4:
        if r4 != null goto label5;

        $i11 = 0;

        goto label6;

     label5:
        $i11 = virtualinvoke r4.<java.lang.String: int length()>();

     label6:
        if $i11 <= 0 goto label8;

        $r5 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mAttrValueWriter>;

        if $r5 == null goto label7;

        $r6 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mAttrValueWriter>;

        virtualinvoke $r6.<java.io.Writer: void write(java.lang.String,int,int)>(r4, 0, $i11);

        goto label8;

     label7:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeAttrValue(java.lang.String,int)>(r4, $i11);

     label8:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(34);

        return;
    }

    public void writeAttribute(java.lang.String, char[], int, int) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10, i11, i12;
        java.lang.String r2;
        boolean $z0, $z1;
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        java.io.Writer $r1, $r4, $r6;
        char[] r3, r5;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: char[];

        i7 := @parameter2: int;

        i6 := @parameter3: int;

        $r1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mOut>;

        if $r1 != null goto label1;

        return;

     label1:
        $z0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mCheckNames>;

        if $z0 == 0 goto label2;

        $z1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mNsAware>;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void verifyNameValidity(java.lang.String,boolean)>(r2, $z1);

     label2:
        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        $i2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputBufLen>;

        $i1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i4 = $i2 - $i1;

        $i3 = 3 + $i0;

        $i5 = $i4 - $i3;

        if $i5 >= 0 goto label3;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(32);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(r2);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char,char)>(61, 34);

        goto label4;

     label3:
        i8 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        r3 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer>;

        i9 = i8 + 1;

        r3[i8] = 32;

        virtualinvoke r2.<java.lang.String: void getChars(int,int,char[],int)>(0, $i0, r3, i9);

        i10 = i9 + $i0;

        i11 = i10 + 1;

        r3[i10] = 61;

        i12 = i11 + 1;

        r3[i11] = 34;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr> = i12;

     label4:
        if i6 <= 0 goto label6;

        $r4 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mAttrValueWriter>;

        if $r4 == null goto label5;

        $r6 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mAttrValueWriter>;

        virtualinvoke $r6.<java.io.Writer: void write(char[],int,int)>(r5, i7, i6);

        goto label6;

     label5:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeAttrValue(char[],int,int)>(r5, i7, i6);

     label6:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(34);

        return;
    }

    public void writeAttribute(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14, i15, i16, $i17;
        java.lang.String r2, r3, r5;
        boolean $z0, $z1, $z2;
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        java.io.Writer $r1, $r6, $r7;
        char[] r4;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        $r1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mOut>;

        if $r1 != null goto label1;

        return;

     label1:
        $z0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mCheckNames>;

        if $z0 == 0 goto label2;

        $z1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mNsAware>;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void verifyNameValidity(java.lang.String,boolean)>(r2, $z1);

        $z2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mNsAware>;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void verifyNameValidity(java.lang.String,boolean)>(r3, $z2);

     label2:
        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        $i2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputBufLen>;

        $i1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i3 = $i2 - $i1;

        $i4 = virtualinvoke r3.<java.lang.String: int length()>();

        $i5 = 4 + $i4;

        $i6 = $i5 + $i0;

        $i7 = $i3 - $i6;

        if $i7 >= 0 goto label4;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(32);

        if r2 == null goto label3;

        $i9 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i9 <= 0 goto label3;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(r2);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(58);

     label3:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(r3);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char,char)>(61, 34);

        goto label5;

     label4:
        i10 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        r4 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer>;

        i11 = i10 + 1;

        r4[i10] = 32;

        virtualinvoke r2.<java.lang.String: void getChars(int,int,char[],int)>(0, $i0, r4, i11);

        i12 = i11 + $i0;

        i13 = i12 + 1;

        r4[i12] = 58;

        $i8 = virtualinvoke r3.<java.lang.String: int length()>();

        virtualinvoke r3.<java.lang.String: void getChars(int,int,char[],int)>(0, $i8, r4, i13);

        i14 = i13 + $i8;

        i15 = i14 + 1;

        r4[i14] = 61;

        i16 = i15 + 1;

        r4[i15] = 34;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr> = i16;

     label5:
        if r5 != null goto label6;

        $i17 = 0;

        goto label7;

     label6:
        $i17 = virtualinvoke r5.<java.lang.String: int length()>();

     label7:
        if $i17 <= 0 goto label9;

        $r6 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mAttrValueWriter>;

        if $r6 == null goto label8;

        $r7 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mAttrValueWriter>;

        virtualinvoke $r7.<java.io.Writer: void write(java.lang.String,int,int)>(r5, 0, $i17);

        goto label9;

     label8:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeAttrValue(java.lang.String,int)>(r5, $i17);

     label9:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(34);

        return;
    }

    public void writeAttribute(java.lang.String, java.lang.String, char[], int, int) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, $i11, i12, i13, i14, i15, i16, i17, i18;
        java.lang.String r2, r3;
        boolean $z0, $z1, $z2;
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        java.io.Writer $r1, $r5, $r7;
        char[] r4, r6;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r6 := @parameter2: char[];

        i10 := @parameter3: int;

        i9 := @parameter4: int;

        $r1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mOut>;

        if $r1 != null goto label1;

        return;

     label1:
        $z0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mCheckNames>;

        if $z0 == 0 goto label2;

        $z1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mNsAware>;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void verifyNameValidity(java.lang.String,boolean)>(r2, $z1);

        $z2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mNsAware>;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void verifyNameValidity(java.lang.String,boolean)>(r3, $z2);

     label2:
        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        $i2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputBufLen>;

        $i1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i3 = $i2 - $i1;

        $i4 = virtualinvoke r3.<java.lang.String: int length()>();

        $i5 = 4 + $i4;

        $i6 = $i5 + $i0;

        $i7 = $i3 - $i6;

        if $i7 >= 0 goto label4;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(32);

        if r2 == null goto label3;

        $i11 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i11 <= 0 goto label3;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(r2);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(58);

     label3:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(r3);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char,char)>(61, 34);

        goto label5;

     label4:
        i12 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        r4 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer>;

        i13 = i12 + 1;

        r4[i12] = 32;

        virtualinvoke r2.<java.lang.String: void getChars(int,int,char[],int)>(0, $i0, r4, i13);

        i14 = i13 + $i0;

        i15 = i14 + 1;

        r4[i14] = 58;

        $i8 = virtualinvoke r3.<java.lang.String: int length()>();

        virtualinvoke r3.<java.lang.String: void getChars(int,int,char[],int)>(0, $i8, r4, i15);

        i16 = i15 + $i8;

        i17 = i16 + 1;

        r4[i16] = 61;

        i18 = i17 + 1;

        r4[i17] = 34;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr> = i18;

     label5:
        if i9 <= 0 goto label7;

        $r5 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mAttrValueWriter>;

        if $r5 == null goto label6;

        $r7 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mAttrValueWriter>;

        virtualinvoke $r7.<java.io.Writer: void write(char[],int,int)>(r6, i10, i9);

        goto label7;

     label6:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeAttrValue(char[],int,int)>(r6, i10, i9);

     label7:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(34);

        return;
    }

    private final void writeAttrValue(java.lang.String, int) throws java.io.IOException
    {
        int i1, i2, $i3, $i5, $i6, $i7, $i8, $i9, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        java.lang.String r1, r3;
        boolean $z0;
        char c0, $c4, $c10;
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        char[] $r2;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r1 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        i11 = 0;

        c0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: char mEncQuoteChar>;

        i1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mEncHighChar>;

     label01:
        r3 = null;

     label02:
        if i11 < i2 goto label03;

        goto label14;

     label03:
        $i3 = i11;

        i11 = i11 + 1;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i3);

        $i12 = (int) $c4;

        if $i12 > 60 goto label08;

        $i13 = (int) $c4;

        if $i13 >= 32 goto label05;

        $i14 = (int) $c4;

        if $i14 == 10 goto label11;

        $i15 = (int) $c4;

        if $i15 == 13 goto label11;

        $i16 = (int) $c4;

        if $i16 == 9 goto label11;

        $z0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mXml11>;

        if $z0 == 0 goto label04;

        if $c4 != 0 goto label11;

     label04:
        $i17 = (int) $c4;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void throwInvalidChar(int)>($i17);

        goto label11;

     label05:
        $i18 = (int) $c4;

        $i19 = (int) c0;

        if $i18 != $i19 goto label06;

        r3 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.lang.String mEncQuoteEntity>;

        goto label11;

     label06:
        $i20 = (int) $c4;

        if $i20 != 60 goto label07;

        r3 = "&lt;";

        goto label11;

     label07:
        $i21 = (int) $c4;

        if $i21 != 38 goto label09;

        r3 = "&amp;";

        goto label11;

     label08:
        $i22 = (int) $c4;

        if $i22 < i1 goto label09;

        goto label11;

     label09:
        $i6 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i5 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputBufLen>;

        if $i6 < $i5 goto label10;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void flushBuffer()>();

     label10:
        $r2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer>;

        $i7 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i8 = $i7 + 1;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr> = $i8;

        $r2[$i7] = $c4;

        goto label02;

     label11:
        if r3 == null goto label12;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeRaw(java.lang.String)>(r3);

        goto label13;

     label12:
        $i9 = i11 - 1;

        $c10 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i9);

        $i23 = (int) $c10;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeAsEntity(int)>($i23);

     label13:
        goto label01;

     label14:
        return;
    }

    private final void writeAttrValue(char[], int, int) throws java.io.IOException
    {
        int i1, $i2, $i4, $i5, $i6, $i7, $i8, i10, i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        java.lang.String r3;
        boolean $z0;
        char c0, c3, $c9;
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        char[] r1, $r2;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r1 := @parameter0: char[];

        i10 := @parameter1: int;

        i11 := @parameter2: int;

        i12 = i11 + i10;

        c0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: char mEncQuoteChar>;

        i1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mEncHighChar>;

     label01:
        r3 = null;

     label02:
        if i10 < i12 goto label03;

        goto label14;

     label03:
        $i2 = i10;

        i10 = i10 + 1;

        c3 = r1[$i2];

        $i13 = (int) c3;

        if $i13 > 60 goto label08;

        $i14 = (int) c3;

        if $i14 >= 32 goto label05;

        $i15 = (int) c3;

        if $i15 == 10 goto label11;

        $i16 = (int) c3;

        if $i16 == 13 goto label11;

        $i17 = (int) c3;

        if $i17 == 9 goto label11;

        $z0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: boolean mXml11>;

        if $z0 == 0 goto label04;

        if c3 != 0 goto label11;

     label04:
        $i18 = (int) c3;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void throwInvalidChar(int)>($i18);

        goto label11;

     label05:
        $i19 = (int) c3;

        $i20 = (int) c0;

        if $i19 != $i20 goto label06;

        r3 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.lang.String mEncQuoteEntity>;

        goto label11;

     label06:
        $i21 = (int) c3;

        if $i21 != 60 goto label07;

        r3 = "&lt;";

        goto label11;

     label07:
        $i22 = (int) c3;

        if $i22 != 38 goto label09;

        r3 = "&amp;";

        goto label11;

     label08:
        $i23 = (int) c3;

        if $i23 < i1 goto label09;

        goto label11;

     label09:
        $i5 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i4 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputBufLen>;

        if $i5 < $i4 goto label10;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void flushBuffer()>();

     label10:
        $r2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer>;

        $i6 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i7 = $i6 + 1;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr> = $i7;

        $r2[$i6] = c3;

        goto label02;

     label11:
        if r3 == null goto label12;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeRaw(java.lang.String)>(r3);

        goto label13;

     label12:
        $i8 = i10 - 1;

        $c9 = r1[$i8];

        $i24 = (int) $c9;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeAsEntity(int)>($i24);

     label13:
        goto label01;

     label14:
        return;
    }

    private final void flushBuffer() throws java.io.IOException
    {
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        int $i0, i1, $i2, $i3, $i4, $i5;
        java.io.Writer $r1, $r3;
        char[] $r2;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        $i0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        if $i0 <= 0 goto label1;

        $r1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mOut>;

        if $r1 == null goto label1;

        i1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mLocPastChars>;

        $i3 = $i2 + i1;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mLocPastChars> = $i3;

        $i4 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mLocRowStartOffset>;

        $i5 = $i4 - i1;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mLocRowStartOffset> = $i5;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr> = 0;

        $r3 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mOut>;

        $r2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer>;

        virtualinvoke $r3.<java.io.Writer: void write(char[],int,int)>($r2, 0, i1);

     label1:
        return;
    }

    private final void fastWriteRaw(char) throws java.io.IOException
    {
        char c4;
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        int $i0, $i1, $i2, $i3;
        java.io.Writer $r2;
        char[] $r1;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        c4 := @parameter0: char;

        $i1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputBufLen>;

        if $i1 < $i0 goto label2;

        $r2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mOut>;

        if $r2 != null goto label1;

        return;

     label1:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void flushBuffer()>();

     label2:
        $r1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer>;

        $i2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i3 = $i2 + 1;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr> = $i3;

        $r1[$i2] = c4;

        return;
    }

    private final void fastWriteRaw(char, char) throws java.io.IOException
    {
        char c5, c8;
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7;
        java.io.Writer $r3;
        char[] $r1, $r2;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        c5 := @parameter0: char;

        c8 := @parameter1: char;

        $i0 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i2 = $i0 + 1;

        $i1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputBufLen>;

        if $i2 < $i1 goto label2;

        $r3 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mOut>;

        if $r3 != null goto label1;

        return;

     label1:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void flushBuffer()>();

     label2:
        $r1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer>;

        $i3 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i4 = $i3 + 1;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr> = $i4;

        $r1[$i3] = c5;

        $r2 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer>;

        $i6 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i7 = $i6 + 1;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr> = $i7;

        $r2[$i6] = c8;

        return;
    }

    private final void fastWriteRaw(java.lang.String) throws java.io.IOException
    {
        com.ctc.wstx.sw.BufferingXmlWriter r1;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.io.Writer $r3;
        char[] $r2;
        java.lang.String r0;

        r1 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i5 = r1.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i2 = i5 + $i0;

        $i1 = r1.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputBufLen>;

        if $i2 < $i1 goto label3;

        $r3 = r1.<com.ctc.wstx.sw.BufferingXmlWriter: java.io.Writer mOut>;

        if $r3 != null goto label1;

        return;

     label1:
        $i4 = r1.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputBufLen>;

        if $i0 <= $i4 goto label2;

        virtualinvoke r1.<com.ctc.wstx.sw.BufferingXmlWriter: void writeRaw(java.lang.String)>(r0);

        return;

     label2:
        specialinvoke r1.<com.ctc.wstx.sw.BufferingXmlWriter: void flushBuffer()>();

        i5 = r1.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

     label3:
        $r2 = r1.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer>;

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, $i0, $r2, i5);

        $i3 = i5 + $i0;

        r1.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr> = $i3;

        return;
    }

    protected int verifyCDataContent(java.lang.String)
    {
        com.ctc.wstx.sw.BufferingXmlWriter r1;
        int $i0, $i1, $i2, $i4;
        java.lang.String r0;

        r1 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 < 3 goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(93);

        if $i1 < 0 goto label1;

        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("]]>", $i1);

        return $i2;

     label1:
        $i4 = (int) -1;

        return $i4;
    }

    protected int verifyCDataContent(char[], int, int)
    {
        int i0, $i2, $i4, $i6, i7, i8, $i9, $i10, $i11, $i12, $i14;
        char c1, $c3, $c5;
        com.ctc.wstx.sw.BufferingXmlWriter r1;
        char[] r0;

        r1 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r0 := @parameter0: char[];

        i7 := @parameter1: int;

        i0 := @parameter2: int;

        if r0 == null goto label4;

        i8 = i7 + 2;

     label1:
        if i8 >= i0 goto label4;

        c1 = r0[i8];

        $i9 = (int) c1;

        if $i9 != 93 goto label2;

        i8 = i8 + 1;

        goto label1;

     label2:
        $i10 = (int) c1;

        if $i10 != 62 goto label3;

        $i2 = i8 - 1;

        $c3 = r0[$i2];

        $i11 = (int) $c3;

        if $i11 != 93 goto label3;

        $i4 = i8 - 2;

        $c5 = r0[$i4];

        $i12 = (int) $c5;

        if $i12 != 93 goto label3;

        $i6 = i8 - 2;

        return $i6;

     label3:
        i8 = i8 + 2;

        goto label1;

     label4:
        $i14 = (int) -1;

        return $i14;
    }

    protected int verifyCommentContent(java.lang.String)
    {
        com.ctc.wstx.sw.BufferingXmlWriter r1;
        int $i0, $i1, $i2, i3;
        java.lang.String r0;

        r1 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(45);

        i3 = $i0;

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        if $i0 >= $i2 goto label1;

        i3 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("--", $i0);

     label1:
        return i3;
    }

    protected void writeSegmentedCData(java.lang.String, int) throws java.io.IOException
    {
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r1 := @parameter0: java.lang.String;

        i4 := @parameter1: int;

        i5 = 0;

     label1:
        if i4 < 0 goto label2;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>("<![CDATA[");

        $i2 = i4 + 2;

        $i3 = $i2 - i5;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeRaw(java.lang.String,int,int)>(r1, i5, $i3);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>("]]>");

        i5 = i4 + 2;

        i4 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String,int)>("]]>", i5);

        goto label1;

     label2:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>("<![CDATA[");

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = $i0 - i5;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeRaw(java.lang.String,int,int)>(r1, i5, $i1);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>("]]>");

        return;
    }

    protected void writeSegmentedCData(char[], int, int, int) throws java.io.IOException
    {
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        char[] r1;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r1 := @parameter0: char[];

        i5 := @parameter1: int;

        i0 := @parameter2: int;

        i6 := @parameter3: int;

        i1 = i5 + i0;

     label1:
        if i6 < 0 goto label2;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>("<![CDATA[");

        $i3 = i6 + 2;

        $i4 = $i3 - i5;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeRaw(char[],int,int)>(r1, i5, $i4);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>("]]>");

        i5 = i6 + 2;

        i6 = virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: int verifyCDataContent(char[],int,int)>(r1, i5, i1);

        goto label1;

     label2:
        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>("<![CDATA[");

        $i2 = i1 - i5;

        virtualinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void writeRaw(char[],int,int)>(r1, i5, $i2);

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>("]]>");

        return;
    }

    protected void writeSegmentedComment(java.lang.String, int) throws java.io.IOException
    {
        char $c4;
        com.ctc.wstx.sw.BufferingXmlWriter r1;
        int $i0, $i1, $i2, $i3, $i5, $i6, i7, i8, $i9;
        java.lang.String r0;

        r1 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        r0 := @parameter0: java.lang.String;

        i7 := @parameter1: int;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        if i7 != $i1 goto label1;

        specialinvoke r1.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>("<!--");

        virtualinvoke r1.<com.ctc.wstx.sw.BufferingXmlWriter: void writeRaw(java.lang.String)>(r0);

        specialinvoke r1.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>(" -->");

        return;

     label1:
        specialinvoke r1.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>("<!--");

        i8 = 0;

     label2:
        if i7 < 0 goto label3;

        $i5 = i7 + 1;

        $i6 = $i5 - i8;

        virtualinvoke r1.<com.ctc.wstx.sw.BufferingXmlWriter: void writeRaw(java.lang.String,int,int)>(r0, i8, $i6);

        specialinvoke r1.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(32);

        i8 = i7 + 1;

        i7 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("--", i8);

        goto label2;

     label3:
        $i2 = $i0 - i8;

        virtualinvoke r1.<com.ctc.wstx.sw.BufferingXmlWriter: void writeRaw(java.lang.String,int,int)>(r0, i8, $i2);

        $i3 = $i0 - 1;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        $i9 = (int) $c4;

        if $i9 != 45 goto label4;

        specialinvoke r1.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(char)>(32);

     label4:
        specialinvoke r1.<com.ctc.wstx.sw.BufferingXmlWriter: void fastWriteRaw(java.lang.String)>("-->");

        return;
    }

    public static int guessEncodingBitSize(java.lang.String)
    {
        int $i0;
        java.lang.String $r0, r1;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return 16;

     label2:
        $r0 = staticinvoke <com.ctc.wstx.io.CharsetNames: java.lang.String normalize(java.lang.String)>(r1);

        if $r0 != "UTF-8" goto label3;

        return 16;

     label3:
        if $r0 != "ISO-8859-1" goto label4;

        return 8;

     label4:
        if $r0 != "US-ASCII" goto label5;

        return 7;

     label5:
        if $r0 == "UTF-16" goto label6;

        if $r0 == "UTF-16BE" goto label6;

        if $r0 == "UTF-16LE" goto label6;

        if $r0 == "UTF-32BE" goto label6;

        if $r0 != "UTF-32LE" goto label7;

     label6:
        return 16;

     label7:
        return 8;
    }

    protected final void writeAsEntity(int) throws java.io.IOException
    {
        com.ctc.wstx.sw.BufferingXmlWriter r0;
        int $i0, $i1, i2, $i3, $i4, $i6, $i7, $i9, $i11, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, $i30, $i31, i32, i33, i34, $i35, i36, $i37, i38, $i40;
        char $c5, $c8, $c10, $c12;
        char[] r1;

        r0 := @this: com.ctc.wstx.sw.BufferingXmlWriter;

        i13 := @parameter0: int;

        r1 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: char[] mOutputBuffer>;

        i14 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

        $i1 = i14 + 10;

        $i0 = lengthof r1;

        if $i1 < $i0 goto label01;

        specialinvoke r0.<com.ctc.wstx.sw.BufferingXmlWriter: void flushBuffer()>();

        i14 = r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr>;

     label01:
        i15 = i14 + 1;

        r1[i14] = 38;

        if i13 >= 256 goto label12;

        if i13 != 38 goto label02;

        i16 = i15 + 1;

        r1[i15] = 97;

        i17 = i16 + 1;

        r1[i16] = 109;

        i18 = i17 + 1;

        r1[i17] = 112;

        goto label20;

     label02:
        if i13 != 60 goto label03;

        i19 = i15 + 1;

        r1[i15] = 108;

        i18 = i19 + 1;

        r1[i19] = 116;

        goto label20;

     label03:
        if i13 != 62 goto label04;

        i20 = i15 + 1;

        r1[i15] = 103;

        i18 = i20 + 1;

        r1[i20] = 116;

        goto label20;

     label04:
        if i13 != 39 goto label05;

        i21 = i15 + 1;

        r1[i15] = 97;

        i22 = i21 + 1;

        r1[i21] = 112;

        i23 = i22 + 1;

        r1[i22] = 111;

        i18 = i23 + 1;

        r1[i23] = 115;

        goto label20;

     label05:
        if i13 != 34 goto label06;

        i24 = i15 + 1;

        r1[i15] = 113;

        i25 = i24 + 1;

        r1[i24] = 117;

        i26 = i25 + 1;

        r1[i25] = 111;

        i18 = i26 + 1;

        r1[i26] = 116;

        goto label20;

     label06:
        i27 = i15 + 1;

        r1[i15] = 35;

        i28 = i27 + 1;

        r1[i27] = 120;

        if i13 < 16 goto label09;

        i29 = i13 >> 4;

        $i11 = i28;

        i28 = i28 + 1;

        if i29 >= 10 goto label07;

        $i30 = 48 + i29;

        goto label08;

     label07:
        $i30 = 87 + i29;

     label08:
        $c12 = (char) $i30;

        r1[$i11] = $c12;

        i13 = i13 & 15;

     label09:
        $i9 = i28;

        i18 = i28 + 1;

        if i13 >= 10 goto label10;

        $i31 = 48 + i13;

        goto label11;

     label10:
        $i31 = 87 + i13;

     label11:
        $c10 = (char) $i31;

        r1[$i9] = $c10;

        goto label20;

     label12:
        i32 = i15 + 1;

        r1[i15] = 35;

        i33 = i32 + 1;

        r1[i32] = 120;

        i34 = 20;

        i2 = i33;

     label13:
        $i3 = i13 >> i34;

        $i6 = $i3 & 15;

        if $i6 > 0 goto label14;

        if i33 == i2 goto label17;

     label14:
        $i4 = i33;

        i33 = i33 + 1;

        if $i6 >= 10 goto label15;

        $i35 = 48 + $i6;

        goto label16;

     label15:
        $i35 = 87 + $i6;

     label16:
        $c5 = (char) $i35;

        r1[$i4] = $c5;

     label17:
        $i40 = (int) -4;

        i34 = i34 + $i40;

        if i34 > 0 goto label13;

        i36 = i13 & 15;

        $i7 = i33;

        i18 = i33 + 1;

        if i36 >= 10 goto label18;

        $i37 = 48 + i36;

        goto label19;

     label18:
        $i37 = 87 + i36;

     label19:
        $c8 = (char) $i37;

        r1[$i7] = $c8;

     label20:
        i38 = i18 + 1;

        r1[i18] = 59;

        r0.<com.ctc.wstx.sw.BufferingXmlWriter: int mOutputPtr> = i38;

        return;
    }

    public static void <clinit>()
    {
        <com.ctc.wstx.sw.BufferingXmlWriter: int HIGHEST_ENCODABLE_TEXT_CHAR> = 62;

        <com.ctc.wstx.sw.BufferingXmlWriter: int HIGHEST_ENCODABLE_ATTR_CHAR> = 60;

        <com.ctc.wstx.sw.BufferingXmlWriter: int DEFAULT_SMALL_SIZE> = 256;

        <com.ctc.wstx.sw.BufferingXmlWriter: int DEFAULT_BUFFER_SIZE> = 1000;

        return;
    }
}
