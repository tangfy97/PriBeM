public final class org.apache.xmlbeans.GDate extends java.lang.Object implements org.apache.xmlbeans.GDateSpecification, java.io.Serializable
{
    private static final long serialVersionUID;
    static final int MAX_YEAR;
    static final int MIN_YEAR;
    private transient java.lang.String _canonicalString;
    private transient java.lang.String _string;
    private int _bits;
    private int _CY;
    private int _M;
    private int _D;
    private int _h;
    private int _m;
    private int _s;
    private java.math.BigDecimal _fs;
    private int _tzsign;
    private int _tzh;
    private int _tzm;
    static final java.math.BigDecimal _zero;
    static final java.math.BigDecimal _one;
    private static final char[] _tensDigit;
    private static final char[] _onesDigit;
    private static final java.util.TimeZone GMTZONE;
    private static final java.util.TimeZone[] MINUSZONE;
    private static final java.util.TimeZone[] PLUSZONE;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$apache$xmlbeans$GDate;

    public void <init>(java.lang.CharSequence)
    {
        org.apache.xmlbeans.GDateBuilder $r58;
        byte b74;
        java.lang.CharSequence r1, $r8;
        java.lang.StringBuffer $r18, $r19, $r38;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i23, $i25, $i26, $i27, $i28, $i29, $i31, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i51, $i53, $i55, $i57, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i67, $i68, $i70, i72, i73, i75, $i76, i79, $i80, $i81, $i82, i84, i85, $i86, $i87, $i89, $i90, $i92, $i93, $i94, $i96, $i97, $i98, $i99, $i100, $i101, $i102;
        java.math.BigDecimal $r3, $r4, $r6, r34, $r55;
        java.lang.Throwable $r30;
        java.lang.String $r9, $r20;
        org.apache.xmlbeans.GDate r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13, $z14, z15, $z16, $z17, $z18, z19, z20;
        char $c22, $c24, $c30, $c32, $c50, $c52, $c54, $c56, $c58, $c66, $c69, $c71, $c77, c78, $c83;
        java.lang.IllegalArgumentException $r36, $r37, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r56, $r57, $r59;

        r0 := @this: org.apache.xmlbeans.GDate;

        r1 := @parameter0: java.lang.CharSequence;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        i72 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        i73 = 0;

     label01:
        if i72 <= 0 goto label02;

        $i70 = i72 - 1;

        $c71 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i70);

        $z12 = staticinvoke <org.apache.xmlbeans.GDate: boolean isSpace(char)>($c71);

        if $z12 == 0 goto label02;

        $i89 = (int) -1;

        i72 = i72 + $i89;

        goto label01;

     label02:
        if i73 >= i72 goto label03;

        $c69 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i73);

        $z11 = staticinvoke <org.apache.xmlbeans.GDate: boolean isSpace(char)>($c69);

        if $z11 == 0 goto label03;

        i73 = i73 + 1;

        goto label02;

     label03:
        $i0 = i72 - i73;

        if $i0 < 1 goto label04;

        $i65 = i72 - 1;

        $c66 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i65);

        $i90 = (int) $c66;

        if $i90 != 90 goto label04;

        $i67 = r0.<org.apache.xmlbeans.GDate: int _bits>;

        $i68 = $i67 | 1;

        r0.<org.apache.xmlbeans.GDate: int _bits> = $i68;

        $i92 = (int) -1;

        i72 = i72 + $i92;

        goto label12;

     label04:
        $i1 = i72 - i73;

        if $i1 < 6 goto label12;

        $i55 = i72 - 3;

        $c56 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i55);

        $i93 = (int) $c56;

        if $i93 == 58 goto label05;

        goto label12;

     label05:
        $i57 = i72 - 6;

        $c58 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i57);

        $i94 = (int) $c58;

        lookupswitch($i94)
        {
            case 43: goto label07;
            case 45: goto label06;
            default: goto label08;
        };

     label06:
        b74 = -1;

        goto label09;

     label07:
        b74 = 1;

        goto label09;

     label08:
        goto label12;

     label09:
        $i59 = i72 - 5;

        $i60 = staticinvoke <org.apache.xmlbeans.GDate: int twoDigit(java.lang.CharSequence,int)>(r1, $i59);

        $i61 = i72 - 2;

        $i62 = staticinvoke <org.apache.xmlbeans.GDate: int twoDigit(java.lang.CharSequence,int)>(r1, $i61);

        if $i60 <= 14 goto label10;

        $r36 = new java.lang.IllegalArgumentException;

        specialinvoke $r36.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("time zone hour must be two digits between -14 and +14");

        throw $r36;

     label10:
        if $i62 <= 59 goto label11;

        $r37 = new java.lang.IllegalArgumentException;

        specialinvoke $r37.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("time zone minute must be two digits between 00 and 59");

        throw $r37;

     label11:
        $i63 = r0.<org.apache.xmlbeans.GDate: int _bits>;

        $i64 = $i63 | 1;

        r0.<org.apache.xmlbeans.GDate: int _bits> = $i64;

        r0.<org.apache.xmlbeans.GDate: int _tzsign> = b74;

        r0.<org.apache.xmlbeans.GDate: int _tzh> = $i60;

        r0.<org.apache.xmlbeans.GDate: int _tzm> = $i62;

        $i96 = (int) -6;

        i72 = i72 + $i96;

     label12:
        if i73 >= i72 goto label39;

        $i33 = i73 + 2;

        if $i33 >= i72 goto label13;

        $i53 = i73 + 2;

        $c54 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i53);

        $i97 = (int) $c54;

        if $i97 == 58 goto label39;

     label13:
        z13 = 0;

        z20 = 0;

        z19 = 0;

        if i73 >= i72 goto label14;

        $c52 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i73);

        $i98 = (int) $c52;

        if $i98 != 45 goto label14;

        z13 = 1;

        z20 = 1;

        z19 = 1;

        i73 = i73 + 1;

     label14:
        i75 = 0;

        $i76 = neg i73;

        if i73 >= i72 goto label15;

        $c50 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i73);

        $i51 = staticinvoke <org.apache.xmlbeans.GDate: int digitVal(char)>($c50);

        if $i51 != 0 goto label15;

        $z14 = 1;

        goto label16;

     label15:
        $z14 = 0;

     label16:
        z15 = $z14;

     label17:
        if i73 >= i72 goto label18;

        $c77 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i73);

        goto label19;

     label18:
        $c77 = 0;

     label19:
        c78 = $c77;

        $z6 = staticinvoke <org.apache.xmlbeans.GDate: boolean isDigit(char)>($c77);

        if $z6 != 0 goto label20;

        goto label22;

     label20:
        if z15 == 0 goto label21;

        $i36 = i73 + $i76;

        if $i36 < 4 goto label21;

        $r39 = new java.lang.IllegalArgumentException;

        $r38 = new java.lang.StringBuffer;

        specialinvoke $r38.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("year value starting with zero must be 4 or less digits: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r39.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r39;

     label21:
        $i34 = i75 * 10;

        $i35 = staticinvoke <org.apache.xmlbeans.GDate: int digitVal(char)>(c78);

        i75 = $i34 + $i35;

        i73 = i73 + 1;

        goto label17;

     label22:
        i79 = $i76 + i73;

        if i79 <= 9 goto label23;

        $r40 = new java.lang.IllegalArgumentException;

        specialinvoke $r40.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("year too long (up to 9 digits)");

        throw $r40;

     label23:
        if i79 < 4 goto label26;

        $i47 = r0.<org.apache.xmlbeans.GDate: int _bits>;

        $i48 = $i47 | 2;

        r0.<org.apache.xmlbeans.GDate: int _bits> = $i48;

        if z19 == 0 goto label24;

        $i80 = neg i75;

        goto label25;

     label24:
        $i80 = i75;

     label25:
        r0.<org.apache.xmlbeans.GDate: int _CY> = $i80;

        $i49 = r0.<org.apache.xmlbeans.GDate: int _CY>;

        if $i49 != 0 goto label27;

        $r41 = new java.lang.IllegalArgumentException;

        specialinvoke $r41.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("year must not be zero");

        throw $r41;

     label26:
        if i79 <= 0 goto label27;

        $r42 = new java.lang.IllegalArgumentException;

        specialinvoke $r42.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("year must be four digits (may pad with zeroes, e.g., 0560)");

        throw $r42;

     label27:
        $i37 = r0.<org.apache.xmlbeans.GDate: int _CY>;

        if $i37 <= 292277265 goto label28;

        $r43 = new java.lang.IllegalArgumentException;

        specialinvoke $r43.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("year value not supported: too big, must be less than 292277265");

        throw $r43;

     label28:
        $i38 = r0.<org.apache.xmlbeans.GDate: int _CY>;

        if $i38 >= -292275295 goto label29;

        $r44 = new java.lang.IllegalArgumentException;

        specialinvoke $r44.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("year values not supported: too small, must be bigger than -292275295");

        throw $r44;

     label29:
        if c78 == 45 goto label30;

        if z20 == 0 goto label39;

        $z10 = virtualinvoke r0.<org.apache.xmlbeans.GDate: boolean hasYear()>();

        if $z10 != 0 goto label39;

        $r45 = new java.lang.IllegalArgumentException;

        specialinvoke $r45.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r45;

     label30:
        i73 = i73 + 1;

        $i39 = i72 - i73;

        if $i39 < 2 goto label31;

        $i44 = staticinvoke <org.apache.xmlbeans.GDate: int twoDigit(java.lang.CharSequence,int)>(r1, i73);

        if $i44 < 1 goto label31;

        if $i44 > 12 goto label31;

        $i45 = r0.<org.apache.xmlbeans.GDate: int _bits>;

        $i46 = $i45 | 4;

        r0.<org.apache.xmlbeans.GDate: int _bits> = $i46;

        r0.<org.apache.xmlbeans.GDate: int _M> = $i44;

        i73 = i73 + 2;

     label31:
        if i73 >= i72 goto label32;

        $i81 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i73);

        goto label33;

     label32:
        $i81 = 0;

     label33:
        if $i81 == 45 goto label34;

        $z9 = virtualinvoke r0.<org.apache.xmlbeans.GDate: boolean hasMonth()>();

        if $z9 != 0 goto label39;

        $r46 = new java.lang.IllegalArgumentException;

        specialinvoke $r46.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r46;

     label34:
        i73 = i73 + 1;

        $i40 = i72 - i73;

        if $i40 < 2 goto label35;

        $i41 = staticinvoke <org.apache.xmlbeans.GDate: int twoDigit(java.lang.CharSequence,int)>(r1, i73);

        if $i41 < 1 goto label35;

        if $i41 > 31 goto label35;

        $i42 = r0.<org.apache.xmlbeans.GDate: int _bits>;

        $i43 = $i42 | 8;

        r0.<org.apache.xmlbeans.GDate: int _bits> = $i43;

        r0.<org.apache.xmlbeans.GDate: int _D> = $i41;

        i73 = i73 + 2;

     label35:
        $z16 = virtualinvoke r0.<org.apache.xmlbeans.GDate: boolean hasDay()>();

        if $z16 != 0 goto label39;

        $z7 = virtualinvoke r0.<org.apache.xmlbeans.GDate: boolean hasMonth()>();

        if $z7 == 0 goto label38;

        $z8 = virtualinvoke r0.<org.apache.xmlbeans.GDate: boolean hasYear()>();

        if $z8 != 0 goto label38;

        if i73 >= i72 goto label36;

        $i82 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i73);

        goto label37;

     label36:
        $i82 = 0;

     label37:
        if $i82 != 45 goto label38;

        i73 = i73 + 1;

        goto label39;

     label38:
        $r47 = new java.lang.IllegalArgumentException;

        specialinvoke $r47.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r47;

     label39:
        if i73 >= i72 goto label55;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.GDate: boolean hasYear()>();

        if $z2 != 0 goto label40;

        $z4 = virtualinvoke r0.<org.apache.xmlbeans.GDate: boolean hasMonth()>();

        if $z4 != 0 goto label40;

        $z5 = virtualinvoke r0.<org.apache.xmlbeans.GDate: boolean hasDay()>();

        if $z5 == 0 goto label42;

     label40:
        $c83 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i73);

        $i99 = (int) $c83;

        if $i99 == 84 goto label41;

        $r48 = new java.lang.IllegalArgumentException;

        specialinvoke $r48.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("date and time must be separated by \'T\'");

        throw $r48;

     label41:
        i73 = i73 + 1;

     label42:
        $i20 = i73 + 8;

        if i72 < $i20 goto label43;

        $i21 = i73 + 2;

        $c22 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i21);

        $i100 = (int) $c22;

        if $i100 != 58 goto label43;

        $i23 = i73 + 5;

        $c24 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i23);

        $i101 = (int) $c24;

        if $i101 == 58 goto label44;

     label43:
        $r49 = new java.lang.IllegalArgumentException;

        specialinvoke $r49.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r49;

     label44:
        $i25 = staticinvoke <org.apache.xmlbeans.GDate: int twoDigit(java.lang.CharSequence,int)>(r1, i73);

        if $i25 <= 24 goto label45;

        $r50 = new java.lang.IllegalArgumentException;

        specialinvoke $r50.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("hour must be between 00 and 23");

        throw $r50;

     label45:
        $i26 = i73 + 3;

        $i27 = staticinvoke <org.apache.xmlbeans.GDate: int twoDigit(java.lang.CharSequence,int)>(r1, $i26);

        if $i27 < 60 goto label46;

        $r51 = new java.lang.IllegalArgumentException;

        specialinvoke $r51.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("minute must be between 00 and 59");

        throw $r51;

     label46:
        $i28 = i73 + 6;

        $i29 = staticinvoke <org.apache.xmlbeans.GDate: int twoDigit(java.lang.CharSequence,int)>(r1, $i28);

        if $i29 < 60 goto label47;

        $r52 = new java.lang.IllegalArgumentException;

        specialinvoke $r52.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("second must be between 00 and 59");

        throw $r52;

     label47:
        i84 = i73 + 8;

        r34 = <org.apache.xmlbeans.GDate: java.math.BigDecimal _zero>;

        if i84 >= i72 goto label54;

        $c30 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i84);

        $i102 = (int) $c30;

        if $i102 == 46 goto label48;

        $r53 = new java.lang.IllegalArgumentException;

        specialinvoke $r53.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r53;

     label48:
        $i31 = i84 + 1;

        if $i31 >= i72 goto label54;

        i85 = i84 + 1;

     label49:
        if i85 >= i72 goto label51;

        $c32 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i85);

        $z3 = staticinvoke <org.apache.xmlbeans.GDate: boolean isDigit(char)>($c32);

        if $z3 != 0 goto label50;

        $r54 = new java.lang.IllegalArgumentException;

        specialinvoke $r54.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r54;

     label50:
        i85 = i85 + 1;

        goto label49;

     label51:
        $r55 = new java.math.BigDecimal;

        $r8 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i84, i72);

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r55.<java.math.BigDecimal: void <init>(java.lang.String)>($r9);

        r34 = $r55;

     label52:
        goto label54;

     label53:
        $r30 := @caughtexception;

        $r56 = new java.lang.IllegalArgumentException;

        specialinvoke $r56.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r56;

     label54:
        $i86 = r0.<org.apache.xmlbeans.GDate: int _bits>;

        $i87 = $i86 | 16;

        r0.<org.apache.xmlbeans.GDate: int _bits> = $i87;

        r0.<org.apache.xmlbeans.GDate: int _h> = $i25;

        r0.<org.apache.xmlbeans.GDate: int _m> = $i27;

        r0.<org.apache.xmlbeans.GDate: int _s> = $i29;

        r0.<org.apache.xmlbeans.GDate: java.math.BigDecimal _fs> = r34;

     label55:
        $z17 = virtualinvoke r0.<org.apache.xmlbeans.GDate: boolean hasTime()>();

        if $z17 == 0 goto label59;

        $i2 = r0.<org.apache.xmlbeans.GDate: int _h>;

        if $i2 != 24 goto label59;

        $i3 = r0.<org.apache.xmlbeans.GDate: int _m>;

        if $i3 != 0 goto label56;

        $i4 = r0.<org.apache.xmlbeans.GDate: int _s>;

        if $i4 != 0 goto label56;

        $r4 = r0.<org.apache.xmlbeans.GDate: java.math.BigDecimal _fs>;

        $r3 = <org.apache.xmlbeans.GDate: java.math.BigDecimal _zero>;

        $i5 = virtualinvoke $r4.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>($r3);

        if $i5 == 0 goto label57;

     label56:
        $r57 = new java.lang.IllegalArgumentException;

        specialinvoke $r57.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("if hour is 24, minutes, seconds and fraction must be 0");

        throw $r57;

     label57:
        $z0 = virtualinvoke r0.<org.apache.xmlbeans.GDate: boolean hasDate()>();

        if $z0 == 0 goto label58;

        $r58 = new org.apache.xmlbeans.GDateBuilder;

        $i16 = r0.<org.apache.xmlbeans.GDate: int _CY>;

        $i15 = r0.<org.apache.xmlbeans.GDate: int _M>;

        $i14 = r0.<org.apache.xmlbeans.GDate: int _D>;

        $i13 = r0.<org.apache.xmlbeans.GDate: int _h>;

        $i12 = r0.<org.apache.xmlbeans.GDate: int _m>;

        $i11 = r0.<org.apache.xmlbeans.GDate: int _s>;

        $r6 = r0.<org.apache.xmlbeans.GDate: java.math.BigDecimal _fs>;

        $i10 = r0.<org.apache.xmlbeans.GDate: int _tzsign>;

        $i9 = r0.<org.apache.xmlbeans.GDate: int _tzh>;

        $i8 = r0.<org.apache.xmlbeans.GDate: int _tzm>;

        specialinvoke $r58.<org.apache.xmlbeans.GDateBuilder: void <init>(int,int,int,int,int,int,java.math.BigDecimal,int,int,int)>($i16, $i15, $i14, $i13, $i12, $i11, $r6, $i10, $i9, $i8);

        virtualinvoke $r58.<org.apache.xmlbeans.GDateBuilder: void normalize24h()>();

        $i17 = virtualinvoke $r58.<org.apache.xmlbeans.GDateBuilder: int getDay()>();

        r0.<org.apache.xmlbeans.GDate: int _D> = $i17;

        $i18 = virtualinvoke $r58.<org.apache.xmlbeans.GDateBuilder: int getMonth()>();

        r0.<org.apache.xmlbeans.GDate: int _M> = $i18;

        $i19 = virtualinvoke $r58.<org.apache.xmlbeans.GDateBuilder: int getYear()>();

        r0.<org.apache.xmlbeans.GDate: int _CY> = $i19;

        r0.<org.apache.xmlbeans.GDate: int _h> = 0;

        goto label59;

     label58:
        $z1 = virtualinvoke r0.<org.apache.xmlbeans.GDate: boolean hasDay()>();

        if $z1 == 0 goto label59;

        $i6 = r0.<org.apache.xmlbeans.GDate: int _D>;

        $i7 = $i6 + 1;

        r0.<org.apache.xmlbeans.GDate: int _D> = $i7;

        r0.<org.apache.xmlbeans.GDate: int _h> = 0;

     label59:
        $z18 = virtualinvoke r0.<org.apache.xmlbeans.GDate: boolean isValid()>();

        if $z18 != 0 goto label60;

        $r59 = new java.lang.IllegalArgumentException;

        specialinvoke $r59.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid date");

        throw $r59;

     label60:
        return;

        catch java.lang.Throwable from label51 to label52 with label53;
    }

    public void <init>(int, int, int, int, int, int, java.math.BigDecimal)
    {
        java.lang.IllegalArgumentException $r2;
        java.math.BigDecimal r1, $r3;
        int i0, i1, i2, i3, i4, i5;
        org.apache.xmlbeans.GDate r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.GDate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        r1 := @parameter6: java.math.BigDecimal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.GDate: int _bits> = 30;

        r0.<org.apache.xmlbeans.GDate: int _CY> = i0;

        r0.<org.apache.xmlbeans.GDate: int _M> = i1;

        r0.<org.apache.xmlbeans.GDate: int _D> = i2;

        r0.<org.apache.xmlbeans.GDate: int _h> = i3;

        r0.<org.apache.xmlbeans.GDate: int _m> = i4;

        r0.<org.apache.xmlbeans.GDate: int _s> = i5;

        if r1 != null goto label1;

        $r3 = <org.apache.xmlbeans.GDate: java.math.BigDecimal _zero>;

        goto label2;

     label1:
        $r3 = r1;

     label2:
        r0.<org.apache.xmlbeans.GDate: java.math.BigDecimal _fs> = $r3;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.GDate: boolean isValid()>();

        if $z0 != 0 goto label3;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label3:
        return;
    }

    public void <init>(int, int, int, int, int, int, java.math.BigDecimal, int, int, int)
    {
        java.lang.IllegalArgumentException $r2;
        java.math.BigDecimal r1, $r3;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8;
        org.apache.xmlbeans.GDate r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.GDate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        r1 := @parameter6: java.math.BigDecimal;

        i6 := @parameter7: int;

        i7 := @parameter8: int;

        i8 := @parameter9: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.GDate: int _bits> = 31;

        r0.<org.apache.xmlbeans.GDate: int _CY> = i0;

        r0.<org.apache.xmlbeans.GDate: int _M> = i1;

        r0.<org.apache.xmlbeans.GDate: int _D> = i2;

        r0.<org.apache.xmlbeans.GDate: int _h> = i3;

        r0.<org.apache.xmlbeans.GDate: int _m> = i4;

        r0.<org.apache.xmlbeans.GDate: int _s> = i5;

        if r1 != null goto label1;

        $r3 = <org.apache.xmlbeans.GDate: java.math.BigDecimal _zero>;

        goto label2;

     label1:
        $r3 = r1;

     label2:
        r0.<org.apache.xmlbeans.GDate: java.math.BigDecimal _fs> = $r3;

        r0.<org.apache.xmlbeans.GDate: int _tzsign> = i6;

        r0.<org.apache.xmlbeans.GDate: int _tzh> = i7;

        r0.<org.apache.xmlbeans.GDate: int _tzm> = i8;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.GDate: boolean isValid()>();

        if $z0 != 0 goto label3;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label3:
        return;
    }

    public void <init>(java.util.Date)
    {
        org.apache.xmlbeans.GDate r0;
        org.apache.xmlbeans.GDateBuilder $r1;
        java.util.Date r2;

        r0 := @this: org.apache.xmlbeans.GDate;

        r2 := @parameter0: java.util.Date;

        $r1 = new org.apache.xmlbeans.GDateBuilder;

        specialinvoke $r1.<org.apache.xmlbeans.GDateBuilder: void <init>(java.util.Date)>(r2);

        specialinvoke r0.<org.apache.xmlbeans.GDate: void <init>(org.apache.xmlbeans.GDateSpecification)>($r1);

        return;
    }

    public void <init>(java.util.Calendar)
    {
        java.math.BigDecimal r4;
        byte $b36;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13;
        java.util.TimeZone $r2;
        long $l16;
        java.util.Calendar r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, i29, $i30, $i31, i32, i33, i34, i35, $i37, $i39, $i41;
        java.lang.String $r3;
        char $c11;
        org.apache.xmlbeans.GDate r0;

        r0 := @this: org.apache.xmlbeans.GDate;

        r1 := @parameter0: java.util.Calendar;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = virtualinvoke r1.<java.util.Calendar: boolean isSet(int)>(1);

        $z1 = virtualinvoke r1.<java.util.Calendar: boolean isSet(int)>(0);

        $z2 = virtualinvoke r1.<java.util.Calendar: boolean isSet(int)>(2);

        $z3 = virtualinvoke r1.<java.util.Calendar: boolean isSet(int)>(5);

        $z4 = virtualinvoke r1.<java.util.Calendar: boolean isSet(int)>(11);

        $z5 = virtualinvoke r1.<java.util.Calendar: boolean isSet(int)>(10);

        $z6 = virtualinvoke r1.<java.util.Calendar: boolean isSet(int)>(9);

        $z7 = virtualinvoke r1.<java.util.Calendar: boolean isSet(int)>(12);

        $z8 = virtualinvoke r1.<java.util.Calendar: boolean isSet(int)>(13);

        $z9 = virtualinvoke r1.<java.util.Calendar: boolean isSet(int)>(14);

        $z10 = virtualinvoke r1.<java.util.Calendar: boolean isSet(int)>(15);

        $z11 = virtualinvoke r1.<java.util.Calendar: boolean isSet(int)>(16);

        if $z0 == 0 goto label02;

        $i27 = virtualinvoke r1.<java.util.Calendar: int get(int)>(1);

        i29 = $i27;

        if $z1 == 0 goto label01;

        $z12 = r1 instanceof java.util.GregorianCalendar;

        if $z12 == 0 goto label01;

        $i28 = virtualinvoke r1.<java.util.Calendar: int get(int)>(0);

        if $i28 != 0 goto label01;

        i29 = neg $i27;

     label01:
        $i30 = r0.<org.apache.xmlbeans.GDate: int _bits>;

        $i31 = $i30 | 2;

        r0.<org.apache.xmlbeans.GDate: int _bits> = $i31;

        r0.<org.apache.xmlbeans.GDate: int _CY> = i29;

     label02:
        if $z2 == 0 goto label03;

        $i23 = r0.<org.apache.xmlbeans.GDate: int _bits>;

        $i24 = $i23 | 4;

        r0.<org.apache.xmlbeans.GDate: int _bits> = $i24;

        $i25 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2);

        $i26 = $i25 + 1;

        r0.<org.apache.xmlbeans.GDate: int _M> = $i26;

     label03:
        if $z3 == 0 goto label04;

        $i20 = r0.<org.apache.xmlbeans.GDate: int _bits>;

        $i21 = $i20 | 8;

        r0.<org.apache.xmlbeans.GDate: int _bits> = $i21;

        $i22 = virtualinvoke r1.<java.util.Calendar: int get(int)>(5);

        r0.<org.apache.xmlbeans.GDate: int _D> = $i22;

     label04:
        z13 = 0;

        i32 = 0;

        i33 = 0;

        i34 = 0;

        r4 = <org.apache.xmlbeans.GDate: java.math.BigDecimal _zero>;

        if $z4 == 0 goto label05;

        i32 = virtualinvoke r1.<java.util.Calendar: int get(int)>(11);

        z13 = 1;

        goto label06;

     label05:
        if $z5 == 0 goto label06;

        if $z6 == 0 goto label06;

        $i17 = virtualinvoke r1.<java.util.Calendar: int get(int)>(10);

        $i18 = virtualinvoke r1.<java.util.Calendar: int get(int)>(9);

        $i19 = $i18 * 12;

        i32 = $i17 + $i19;

        z13 = 1;

     label06:
        if $z7 == 0 goto label07;

        i33 = virtualinvoke r1.<java.util.Calendar: int get(int)>(12);

        z13 = 1;

     label07:
        if $z8 == 0 goto label08;

        i34 = virtualinvoke r1.<java.util.Calendar: int get(int)>(13);

        z13 = 1;

     label08:
        if $z9 == 0 goto label09;

        $i15 = virtualinvoke r1.<java.util.Calendar: int get(int)>(14);

        $l16 = (long) $i15;

        r4 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>($l16, 3);

        z13 = 1;

     label09:
        if z13 == 0 goto label10;

        $i13 = r0.<org.apache.xmlbeans.GDate: int _bits>;

        $i14 = $i13 | 16;

        r0.<org.apache.xmlbeans.GDate: int _bits> = $i14;

        r0.<org.apache.xmlbeans.GDate: int _h> = i32;

        r0.<org.apache.xmlbeans.GDate: int _m> = i33;

        r0.<org.apache.xmlbeans.GDate: int _s> = i34;

        r0.<org.apache.xmlbeans.GDate: java.math.BigDecimal _fs> = r4;

     label10:
        if $z10 == 0 goto label18;

        $i0 = virtualinvoke r1.<java.util.Calendar: int get(int)>(15);

        i35 = $i0;

        if $z11 == 0 goto label11;

        $i12 = virtualinvoke r1.<java.util.Calendar: int get(int)>(16);

        i35 = $i0 + $i12;

     label11:
        $i1 = r0.<org.apache.xmlbeans.GDate: int _bits>;

        $i2 = $i1 | 1;

        r0.<org.apache.xmlbeans.GDate: int _bits> = $i2;

        if i35 != 0 goto label15;

        r0.<org.apache.xmlbeans.GDate: int _tzsign> = 0;

        r0.<org.apache.xmlbeans.GDate: int _tzh> = 0;

        r0.<org.apache.xmlbeans.GDate: int _tzm> = 0;

        $r2 = virtualinvoke r1.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        $r3 = virtualinvoke $r2.<java.util.TimeZone: java.lang.String getID()>();

        if $r3 == null goto label14;

        $i10 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i10 <= 3 goto label14;

        $c11 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(3);

        $i37 = (int) $c11;

        lookupswitch($i37)
        {
            case 43: goto label12;
            case 45: goto label13;
            default: goto label14;
        };

     label12:
        r0.<org.apache.xmlbeans.GDate: int _tzsign> = 1;

        goto label14;

     label13:
        $i39 = (int) -1;

        r0.<org.apache.xmlbeans.GDate: int _tzsign> = $i39;

     label14:
        goto label18;

     label15:
        if i35 >= 0 goto label16;

        $b36 = -1;

        goto label17;

     label16:
        $b36 = 1;

     label17:
        r0.<org.apache.xmlbeans.GDate: int _tzsign> = $b36;

        $i3 = r0.<org.apache.xmlbeans.GDate: int _tzsign>;

        $i9 = i35 * $i3;

        $i4 = $i9 / 3600000;

        r0.<org.apache.xmlbeans.GDate: int _tzh> = $i4;

        $i5 = r0.<org.apache.xmlbeans.GDate: int _tzh>;

        $i6 = $i5 * 3600000;

        $i7 = $i9 - $i6;

        $i41 = (int) 60000;

        $i8 = $i7 / $i41;

        r0.<org.apache.xmlbeans.GDate: int _tzm> = $i8;

     label18:
        return;
    }

    public void <init>(org.apache.xmlbeans.GDateSpecification)
    {
        org.apache.xmlbeans.GDateSpecification r1;
        java.math.BigDecimal $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xmlbeans.GDate r0;

        r0 := @this: org.apache.xmlbeans.GDate;

        r1 := @parameter0: org.apache.xmlbeans.GDateSpecification;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: boolean hasTimeZone()>();

        if $z0 == 0 goto label1;

        $i14 = r0.<org.apache.xmlbeans.GDate: int _bits>;

        $i15 = $i14 | 1;

        r0.<org.apache.xmlbeans.GDate: int _bits> = $i15;

        $i16 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneSign()>();

        r0.<org.apache.xmlbeans.GDate: int _tzsign> = $i16;

        $i17 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneHour()>();

        r0.<org.apache.xmlbeans.GDate: int _tzh> = $i17;

        $i18 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneMinute()>();

        r0.<org.apache.xmlbeans.GDate: int _tzm> = $i18;

     label1:
        $z1 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: boolean hasTime()>();

        if $z1 == 0 goto label2;

        $i9 = r0.<org.apache.xmlbeans.GDate: int _bits>;

        $i10 = $i9 | 16;

        r0.<org.apache.xmlbeans.GDate: int _bits> = $i10;

        $i11 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getHour()>();

        r0.<org.apache.xmlbeans.GDate: int _h> = $i11;

        $i12 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getMinute()>();

        r0.<org.apache.xmlbeans.GDate: int _m> = $i12;

        $i13 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getSecond()>();

        r0.<org.apache.xmlbeans.GDate: int _s> = $i13;

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: java.math.BigDecimal getFraction()>();

        r0.<org.apache.xmlbeans.GDate: java.math.BigDecimal _fs> = $r2;

     label2:
        $z2 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: boolean hasDay()>();

        if $z2 == 0 goto label3;

        $i6 = r0.<org.apache.xmlbeans.GDate: int _bits>;

        $i7 = $i6 | 8;

        r0.<org.apache.xmlbeans.GDate: int _bits> = $i7;

        $i8 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getDay()>();

        r0.<org.apache.xmlbeans.GDate: int _D> = $i8;

     label3:
        $z3 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: boolean hasMonth()>();

        if $z3 == 0 goto label4;

        $i3 = r0.<org.apache.xmlbeans.GDate: int _bits>;

        $i4 = $i3 | 4;

        r0.<org.apache.xmlbeans.GDate: int _bits> = $i4;

        $i5 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getMonth()>();

        r0.<org.apache.xmlbeans.GDate: int _M> = $i5;

     label4:
        $z4 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: boolean hasYear()>();

        if $z4 == 0 goto label5;

        $i0 = r0.<org.apache.xmlbeans.GDate: int _bits>;

        $i1 = $i0 | 2;

        r0.<org.apache.xmlbeans.GDate: int _bits> = $i1;

        $i2 = interfaceinvoke r1.<org.apache.xmlbeans.GDateSpecification: int getYear()>();

        r0.<org.apache.xmlbeans.GDate: int _CY> = $i2;

     label5:
        return;
    }

    static final boolean isDigit(char)
    {
        int $i1, $i3, $i4;
        char c0, $c2;
        boolean $z0;

        c0 := @parameter0: char;

        $i3 = (int) c0;

        $i1 = $i3 - 48;

        $c2 = (char) $i1;

        $i4 = (int) $c2;

        if $i4 > 9 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static final boolean isSpace(char)
    {
        int $i1;
        char c0;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        lookupswitch($i1)
        {
            case 9: goto label1;
            case 10: goto label1;
            case 13: goto label1;
            case 32: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    static final int digitVal(char)
    {
        int $i1, $i2;
        char c0;

        c0 := @parameter0: char;

        $i2 = (int) c0;

        $i1 = $i2 - 48;

        return $i1;
    }

    private static final int twoDigit(java.lang.CharSequence, int)
    {
        java.lang.CharSequence r0;
        char $c1, $c3;
        int i0, $i2, $i4, $i5, $i6, $i7;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        $c1 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i0);

        $i2 = i0 + 1;

        $c3 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>($i2);

        $z0 = staticinvoke <org.apache.xmlbeans.GDate: boolean isDigit(char)>($c1);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <org.apache.xmlbeans.GDate: boolean isDigit(char)>($c3);

        if $z1 != 0 goto label2;

     label1:
        return 100;

     label2:
        $i4 = staticinvoke <org.apache.xmlbeans.GDate: int digitVal(char)>($c1);

        $i5 = $i4 * 10;

        $i6 = staticinvoke <org.apache.xmlbeans.GDate: int digitVal(char)>($c3);

        $i7 = $i5 + $i6;

        return $i7;
    }

    public final boolean isImmutable()
    {
        org.apache.xmlbeans.GDate r0;

        r0 := @this: org.apache.xmlbeans.GDate;

        return 1;
    }

    public int getFlags()
    {
        int $i0;
        org.apache.xmlbeans.GDate r0;

        r0 := @this: org.apache.xmlbeans.GDate;

        $i0 = r0.<org.apache.xmlbeans.GDate: int _bits>;

        return $i0;
    }

    public final boolean hasTimeZone()
    {
        int $i0, $i1;
        org.apache.xmlbeans.GDate r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.GDate;

        $i0 = r0.<org.apache.xmlbeans.GDate: int _bits>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean hasYear()
    {
        int $i0, $i1;
        org.apache.xmlbeans.GDate r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.GDate;

        $i0 = r0.<org.apache.xmlbeans.GDate: int _bits>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean hasMonth()
    {
        int $i0, $i1;
        org.apache.xmlbeans.GDate r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.GDate;

        $i0 = r0.<org.apache.xmlbeans.GDate: int _bits>;

        $i1 = $i0 & 4;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean hasDay()
    {
        int $i0, $i1;
        org.apache.xmlbeans.GDate r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.GDate;

        $i0 = r0.<org.apache.xmlbeans.GDate: int _bits>;

        $i1 = $i0 & 8;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean hasTime()
    {
        int $i0, $i1;
        org.apache.xmlbeans.GDate r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.GDate;

        $i0 = r0.<org.apache.xmlbeans.GDate: int _bits>;

        $i1 = $i0 & 16;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean hasDate()
    {
        int $i0, $i1;
        org.apache.xmlbeans.GDate r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.GDate;

        $i0 = r0.<org.apache.xmlbeans.GDate: int _bits>;

        $i1 = $i0 & 14;

        if $i1 != 14 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final int getYear()
    {
        int $i0;
        org.apache.xmlbeans.GDate r0;

        r0 := @this: org.apache.xmlbeans.GDate;

        $i0 = r0.<org.apache.xmlbeans.GDate: int _CY>;

        return $i0;
    }

    public final int getMonth()
    {
        int $i0;
        org.apache.xmlbeans.GDate r0;

        r0 := @this: org.apache.xmlbeans.GDate;

        $i0 = r0.<org.apache.xmlbeans.GDate: int _M>;

        return $i0;
    }

    public final int getDay()
    {
        int $i0;
        org.apache.xmlbeans.GDate r0;

        r0 := @this: org.apache.xmlbeans.GDate;

        $i0 = r0.<org.apache.xmlbeans.GDate: int _D>;

        return $i0;
    }

    public final int getHour()
    {
        int $i0;
        org.apache.xmlbeans.GDate r0;

        r0 := @this: org.apache.xmlbeans.GDate;

        $i0 = r0.<org.apache.xmlbeans.GDate: int _h>;

        return $i0;
    }

    public final int getMinute()
    {
        int $i0;
        org.apache.xmlbeans.GDate r0;

        r0 := @this: org.apache.xmlbeans.GDate;

        $i0 = r0.<org.apache.xmlbeans.GDate: int _m>;

        return $i0;
    }

    public final int getSecond()
    {
        int $i0;
        org.apache.xmlbeans.GDate r0;

        r0 := @this: org.apache.xmlbeans.GDate;

        $i0 = r0.<org.apache.xmlbeans.GDate: int _s>;

        return $i0;
    }

    public final java.math.BigDecimal getFraction()
    {
        java.math.BigDecimal $r1;
        org.apache.xmlbeans.GDate r0;

        r0 := @this: org.apache.xmlbeans.GDate;

        $r1 = r0.<org.apache.xmlbeans.GDate: java.math.BigDecimal _fs>;

        return $r1;
    }

    public final int getTimeZoneSign()
    {
        int $i0;
        org.apache.xmlbeans.GDate r0;

        r0 := @this: org.apache.xmlbeans.GDate;

        $i0 = r0.<org.apache.xmlbeans.GDate: int _tzsign>;

        return $i0;
    }

    public final int getTimeZoneHour()
    {
        int $i0;
        org.apache.xmlbeans.GDate r0;

        r0 := @this: org.apache.xmlbeans.GDate;

        $i0 = r0.<org.apache.xmlbeans.GDate: int _tzh>;

        return $i0;
    }

    public final int getTimeZoneMinute()
    {
        int $i0;
        org.apache.xmlbeans.GDate r0;

        r0 := @this: org.apache.xmlbeans.GDate;

        $i0 = r0.<org.apache.xmlbeans.GDate: int _tzm>;

        return $i0;
    }

    public int getMillisecond()
    {
        java.math.BigDecimal $r1, $r2, $r3;
        int $i0;
        org.apache.xmlbeans.GDate r0;
        java.math.BigInteger $r4;

        r0 := @this: org.apache.xmlbeans.GDate;

        $r1 = r0.<org.apache.xmlbeans.GDate: java.math.BigDecimal _fs>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.xmlbeans.GDate: java.math.BigDecimal _fs>;

        $r3 = virtualinvoke $r2.<java.math.BigDecimal: java.math.BigDecimal setScale(int,int)>(3, 1);

        $r4 = virtualinvoke $r3.<java.math.BigDecimal: java.math.BigInteger unscaledValue()>();

        $i0 = virtualinvoke $r4.<java.math.BigInteger: int intValue()>();

        return $i0;
    }

    public java.lang.String canonicalString()
    {
        org.apache.xmlbeans.GDate r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xmlbeans.GDate;

        specialinvoke r0.<org.apache.xmlbeans.GDate: void ensureCanonicalString()>();

        $r1 = r0.<org.apache.xmlbeans.GDate: java.lang.String _canonicalString>;

        return $r1;
    }

    public boolean isValid()
    {
        org.apache.xmlbeans.GDate r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.GDate;

        $z0 = staticinvoke <org.apache.xmlbeans.GDateBuilder: boolean isValidGDate(org.apache.xmlbeans.GDateSpecification)>(r0);

        return $z0;
    }

    public int getJulianDate()
    {
        int $i0;
        org.apache.xmlbeans.GDate r0;

        r0 := @this: org.apache.xmlbeans.GDate;

        $i0 = staticinvoke <org.apache.xmlbeans.GDateBuilder: int julianDateForGDate(org.apache.xmlbeans.GDateSpecification)>(r0);

        return $i0;
    }

    public org.apache.xmlbeans.XmlCalendar getCalendar()
    {
        org.apache.xmlbeans.XmlCalendar $r0;
        org.apache.xmlbeans.GDate r1;

        r1 := @this: org.apache.xmlbeans.GDate;

        $r0 = new org.apache.xmlbeans.XmlCalendar;

        specialinvoke $r0.<org.apache.xmlbeans.XmlCalendar: void <init>(org.apache.xmlbeans.GDateSpecification)>(r1);

        return $r0;
    }

    public java.util.Date getDate()
    {
        org.apache.xmlbeans.GDate r0;
        java.util.Date $r1;

        r0 := @this: org.apache.xmlbeans.GDate;

        $r1 = staticinvoke <org.apache.xmlbeans.GDateBuilder: java.util.Date dateForGDate(org.apache.xmlbeans.GDateSpecification)>(r0);

        return $r1;
    }

    public int compareToGDate(org.apache.xmlbeans.GDateSpecification)
    {
        int $i0;
        org.apache.xmlbeans.GDate r0;
        org.apache.xmlbeans.GDateSpecification r1;

        r0 := @this: org.apache.xmlbeans.GDate;

        r1 := @parameter0: org.apache.xmlbeans.GDateSpecification;

        $i0 = staticinvoke <org.apache.xmlbeans.GDateBuilder: int compareGDate(org.apache.xmlbeans.GDateSpecification,org.apache.xmlbeans.GDateSpecification)>(r0, r1);

        return $i0;
    }

    public int getBuiltinTypeCode()
    {
        int $i0, $i1;
        org.apache.xmlbeans.GDate r0;

        r0 := @this: org.apache.xmlbeans.GDate;

        $i0 = r0.<org.apache.xmlbeans.GDate: int _bits>;

        $i1 = staticinvoke <org.apache.xmlbeans.GDateBuilder: int btcForFlags(int)>($i0);

        return $i1;
    }

    public org.apache.xmlbeans.GDate add(org.apache.xmlbeans.GDurationSpecification)
    {
        org.apache.xmlbeans.GDurationSpecification r2;
        org.apache.xmlbeans.GDateBuilder $r0;
        org.apache.xmlbeans.GDate r1, $r3;

        r1 := @this: org.apache.xmlbeans.GDate;

        r2 := @parameter0: org.apache.xmlbeans.GDurationSpecification;

        $r0 = new org.apache.xmlbeans.GDateBuilder;

        specialinvoke $r0.<org.apache.xmlbeans.GDateBuilder: void <init>(org.apache.xmlbeans.GDateSpecification)>(r1);

        virtualinvoke $r0.<org.apache.xmlbeans.GDateBuilder: void addGDuration(org.apache.xmlbeans.GDurationSpecification)>(r2);

        $r3 = virtualinvoke $r0.<org.apache.xmlbeans.GDateBuilder: org.apache.xmlbeans.GDate toGDate()>();

        return $r3;
    }

    public org.apache.xmlbeans.GDate subtract(org.apache.xmlbeans.GDurationSpecification)
    {
        org.apache.xmlbeans.GDurationSpecification r2;
        org.apache.xmlbeans.GDateBuilder $r0;
        org.apache.xmlbeans.GDate r1, $r3;

        r1 := @this: org.apache.xmlbeans.GDate;

        r2 := @parameter0: org.apache.xmlbeans.GDurationSpecification;

        $r0 = new org.apache.xmlbeans.GDateBuilder;

        specialinvoke $r0.<org.apache.xmlbeans.GDateBuilder: void <init>(org.apache.xmlbeans.GDateSpecification)>(r1);

        virtualinvoke $r0.<org.apache.xmlbeans.GDateBuilder: void subtractGDuration(org.apache.xmlbeans.GDurationSpecification)>(r2);

        $r3 = virtualinvoke $r0.<org.apache.xmlbeans.GDateBuilder: org.apache.xmlbeans.GDate toGDate()>();

        return $r3;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        org.apache.xmlbeans.GDate r1, $r2;
        java.lang.String $r3, $r4;
        boolean $z0, $z1;

        r1 := @this: org.apache.xmlbeans.GDate;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.apache.xmlbeans.GDate;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        specialinvoke r1.<org.apache.xmlbeans.GDate: void ensureCanonicalString()>();

        $r3 = r1.<org.apache.xmlbeans.GDate: java.lang.String _canonicalString>;

        $r2 = (org.apache.xmlbeans.GDate) r0;

        $r4 = virtualinvoke $r2.<org.apache.xmlbeans.GDate: java.lang.String canonicalString()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        return $z1;
    }

    public int hashCode()
    {
        int $i0;
        org.apache.xmlbeans.GDate r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xmlbeans.GDate;

        specialinvoke r0.<org.apache.xmlbeans.GDate: void ensureCanonicalString()>();

        $r1 = r0.<org.apache.xmlbeans.GDate: java.lang.String _canonicalString>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    private void ensureCanonicalString()
    {
        org.apache.xmlbeans.GDateBuilder $r2;
        java.math.BigDecimal $r5, $r6, $r7;
        int $i0, $i1, $i2;
        java.math.BigInteger $r8, $r9, $r10;
        java.lang.String $r1, $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z7, $z8, $z9, $z10;
        org.apache.xmlbeans.GDate r0;

        r0 := @this: org.apache.xmlbeans.GDate;

        $r1 = r0.<org.apache.xmlbeans.GDate: java.lang.String _canonicalString>;

        if $r1 == null goto label1;

        return;

     label1:
        $z0 = virtualinvoke r0.<org.apache.xmlbeans.GDate: boolean hasTimeZone()>();

        if $z0 == 0 goto label2;

        $i2 = virtualinvoke r0.<org.apache.xmlbeans.GDate: int getTimeZoneSign()>();

        if $i2 == 0 goto label2;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.GDate: boolean hasTime()>();

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.GDate: boolean hasDay()>();

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.GDate: boolean hasMonth()>();

        if $z2 != $z3 goto label2;

        $z4 = virtualinvoke r0.<org.apache.xmlbeans.GDate: boolean hasDay()>();

        $z5 = virtualinvoke r0.<org.apache.xmlbeans.GDate: boolean hasYear()>();

        if $z4 != $z5 goto label2;

        $z10 = 1;

        $z9 = 1;

        goto label3;

     label2:
        $z10 = 0;

        $z9 = 0;

     label3:
        z7 = $z10;

        if $z9 != 0 goto label6;

        $r5 = virtualinvoke r0.<org.apache.xmlbeans.GDate: java.math.BigDecimal getFraction()>();

        if $r5 == null goto label6;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.GDate: java.math.BigDecimal getFraction()>();

        $i0 = virtualinvoke $r6.<java.math.BigDecimal: int scale()>();

        if $i0 <= 0 goto label6;

        $r7 = virtualinvoke r0.<org.apache.xmlbeans.GDate: java.math.BigDecimal getFraction()>();

        $r8 = virtualinvoke $r7.<java.math.BigDecimal: java.math.BigInteger unscaledValue()>();

        $r9 = <org.apache.xmlbeans.GDateBuilder: java.math.BigInteger TEN>;

        $r10 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r9);

        $i1 = virtualinvoke $r10.<java.math.BigInteger: int signum()>();

        if $i1 != 0 goto label4;

        $z8 = 1;

        goto label5;

     label4:
        $z8 = 0;

     label5:
        z7 = $z8;

     label6:
        if z7 != 0 goto label7;

        $r4 = virtualinvoke r0.<org.apache.xmlbeans.GDate: java.lang.String toString()>();

        r0.<org.apache.xmlbeans.GDate: java.lang.String _canonicalString> = $r4;

        goto label8;

     label7:
        $r2 = new org.apache.xmlbeans.GDateBuilder;

        specialinvoke $r2.<org.apache.xmlbeans.GDateBuilder: void <init>(org.apache.xmlbeans.GDateSpecification)>(r0);

        virtualinvoke $r2.<org.apache.xmlbeans.GDateBuilder: void normalize()>();

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.GDateBuilder: java.lang.String toString()>();

        r0.<org.apache.xmlbeans.GDate: java.lang.String _canonicalString> = $r3;

     label8:
        return;
    }

    public java.lang.String toString()
    {
        org.apache.xmlbeans.GDate r0;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: org.apache.xmlbeans.GDate;

        $r1 = r0.<org.apache.xmlbeans.GDate: java.lang.String _string>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <org.apache.xmlbeans.GDate: java.lang.String formatGDate(org.apache.xmlbeans.GDateSpecification)>(r0);

        r0.<org.apache.xmlbeans.GDate: java.lang.String _string> = $r3;

     label1:
        $r2 = r0.<org.apache.xmlbeans.GDate: java.lang.String _string>;

        return $r2;
    }

    private static final int _padTwoAppend(char[], int, int)
    {
        char $c2, $c3;
        java.lang.AssertionError $r3;
        int i0, i1, $i4, $i5;
        char[] r0, $r1, $r2;
        boolean $z0;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = <org.apache.xmlbeans.GDate: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if i1 < 0 goto label1;

        if i1 < 100 goto label2;

     label1:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        $r1 = <org.apache.xmlbeans.GDate: char[] _tensDigit>;

        $c2 = $r1[i1];

        r0[i0] = $c2;

        $i4 = i0 + 1;

        $r2 = <org.apache.xmlbeans.GDate: char[] _onesDigit>;

        $c3 = $r2[i1];

        r0[$i4] = $c3;

        $i5 = i0 + 2;

        return $i5;
    }

    private static final int _padFourAppend(char[], int, int)
    {
        int $i0, i1, $i4, $i6, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16;
        java.lang.String $r5;
        char $c2, $c3, $c5, $c7;
        char[] r0, $r1, $r2, $r3, $r4;

        r0 := @parameter0: char[];

        i14 := @parameter1: int;

        i15 := @parameter2: int;

        if i15 >= 0 goto label1;

        $i13 = i14;

        i14 = i14 + 1;

        r0[$i13] = 45;

        i15 = neg i15;

     label1:
        if i15 < 10000 goto label2;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i15);

        $i10 = virtualinvoke $r5.<java.lang.String: int length()>();

        virtualinvoke $r5.<java.lang.String: void getChars(int,int,char[],int)>(0, $i10, r0, i14);

        $i11 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i12 = i14 + $i11;

        return $i12;

     label2:
        i16 = i15 / 100;

        $i0 = i16 * 100;

        i1 = i15 - $i0;

        $r1 = <org.apache.xmlbeans.GDate: char[] _tensDigit>;

        $c2 = $r1[i16];

        r0[i14] = $c2;

        $i4 = i14 + 1;

        $r2 = <org.apache.xmlbeans.GDate: char[] _onesDigit>;

        $c3 = $r2[i16];

        r0[$i4] = $c3;

        $i6 = i14 + 2;

        $r3 = <org.apache.xmlbeans.GDate: char[] _tensDigit>;

        $c5 = $r3[i1];

        r0[$i6] = $c5;

        $i8 = i14 + 3;

        $r4 = <org.apache.xmlbeans.GDate: char[] _onesDigit>;

        $c7 = $r4[i1];

        r0[$i8] = $c7;

        $i9 = i14 + 4;

        return $i9;
    }

    static final java.util.TimeZone timeZoneForGDate(org.apache.xmlbeans.GDateSpecification)
    {
        org.apache.xmlbeans.GDateSpecification r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r1;
        boolean $z0;
        java.util.TimeZone $r2, $r5, $r6, $r7;
        char $c10;
        java.util.TimeZone[] $r3, $r4;
        char[] $r8;

        r0 := @parameter0: org.apache.xmlbeans.GDateSpecification;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: boolean hasTimeZone()>();

        if $z0 != 0 goto label1;

        $r6 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        return $r6;

     label1:
        $i0 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneSign()>();

        if $i0 != 0 goto label2;

        $r5 = <org.apache.xmlbeans.GDate: java.util.TimeZone GMTZONE>;

        return $r5;

     label2:
        $i1 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneMinute()>();

        if $i1 != 0 goto label5;

        $i4 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneHour()>();

        if $i4 > 14 goto label5;

        $i5 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneHour()>();

        if $i5 < 0 goto label5;

        $i6 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneSign()>();

        if $i6 >= 0 goto label3;

        $r4 = <org.apache.xmlbeans.GDate: java.util.TimeZone[] MINUSZONE>;

        $i8 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneHour()>();

        $r7 = $r4[$i8];

        goto label4;

     label3:
        $r3 = <org.apache.xmlbeans.GDate: java.util.TimeZone[] PLUSZONE>;

        $i7 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneHour()>();

        $r7 = $r3[$i7];

     label4:
        return $r7;

     label5:
        $r8 = newarray (char)[9];

        $r8[0] = 71;

        $r8[1] = 77;

        $r8[2] = 84;

        $i9 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneSign()>();

        if $i9 >= 0 goto label6;

        $c10 = 45;

        goto label7;

     label6:
        $c10 = 43;

     label7:
        $r8[3] = $c10;

        $i2 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneHour()>();

        staticinvoke <org.apache.xmlbeans.GDate: int _padTwoAppend(char[],int,int)>($r8, 4, $i2);

        $r8[6] = 58;

        $i3 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneMinute()>();

        staticinvoke <org.apache.xmlbeans.GDate: int _padTwoAppend(char[],int,int)>($r8, 7, $i3);

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r8);

        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r1);

        return $r2;
    }

    static java.lang.String formatGDate(org.apache.xmlbeans.GDateSpecification)
    {
        java.math.BigDecimal $r1, $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.apache.xmlbeans.GDateSpecification r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, i27, i28, i30;
        java.lang.String $r3, $r5;
        char $c29;
        char[] $r4;

        r0 := @parameter0: org.apache.xmlbeans.GDateSpecification;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: java.math.BigDecimal getFraction()>();

        if $r1 != null goto label01;

        $i23 = 0;

        goto label02;

     label01:
        $i23 = virtualinvoke $r1.<java.math.BigDecimal: int scale()>();

     label02:
        $i0 = 33 + $i23;

        $r4 = newarray (char)[$i0];

        i24 = 0;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: boolean hasYear()>();

        if $z0 != 0 goto label03;

        $z5 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: boolean hasMonth()>();

        if $z5 != 0 goto label03;

        $z6 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: boolean hasDay()>();

        if $z6 == 0 goto label10;

     label03:
        $z7 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: boolean hasYear()>();

        if $z7 == 0 goto label04;

        $i22 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getYear()>();

        i24 = staticinvoke <org.apache.xmlbeans.GDate: int _padFourAppend(char[],int,int)>($r4, 0, $i22);

        goto label05;

     label04:
        i24 = 1;

        $r4[0] = 45;

     label05:
        $z1 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: boolean hasMonth()>();

        if $z1 != 0 goto label06;

        $z4 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: boolean hasDay()>();

        if $z4 != 0 goto label06;

        goto label09;

     label06:
        $i1 = i24;

        i24 = i24 + 1;

        $r4[$i1] = 45;

        $z2 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: boolean hasMonth()>();

        if $z2 == 0 goto label07;

        $i21 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getMonth()>();

        i24 = staticinvoke <org.apache.xmlbeans.GDate: int _padTwoAppend(char[],int,int)>($r4, i24, $i21);

     label07:
        $z3 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: boolean hasDay()>();

        if $z3 != 0 goto label08;

        goto label09;

     label08:
        i25 = i24 + 1;

        $r4[i24] = 45;

        $i2 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getDay()>();

        i24 = staticinvoke <org.apache.xmlbeans.GDate: int _padTwoAppend(char[],int,int)>($r4, i25, $i2);

     label09:
        $z8 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: boolean hasTime()>();

        if $z8 == 0 goto label10;

        $i20 = i24;

        i24 = i24 + 1;

        $r4[$i20] = 84;

     label10:
        $z9 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: boolean hasTime()>();

        if $z9 == 0 goto label11;

        $i10 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getHour()>();

        $i11 = staticinvoke <org.apache.xmlbeans.GDate: int _padTwoAppend(char[],int,int)>($r4, i24, $i10);

        i26 = $i11 + 1;

        $r4[$i11] = 58;

        $i12 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getMinute()>();

        $i13 = staticinvoke <org.apache.xmlbeans.GDate: int _padTwoAppend(char[],int,int)>($r4, i26, $i12);

        i27 = $i13 + 1;

        $r4[$i13] = 58;

        $i14 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getSecond()>();

        $i15 = staticinvoke <org.apache.xmlbeans.GDate: int _padTwoAppend(char[],int,int)>($r4, i27, $i14);

        i24 = $i15;

        $r2 = <org.apache.xmlbeans.GDate: java.math.BigDecimal _zero>;

        if $r1 == $r2 goto label11;

        $r3 = virtualinvoke $r1.<java.math.BigDecimal: java.lang.String toString()>();

        $i16 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(46);

        if $i16 < 0 goto label11;

        $i17 = virtualinvoke $r3.<java.lang.String: int length()>();

        virtualinvoke $r3.<java.lang.String: void getChars(int,int,char[],int)>($i16, $i17, $r4, $i15);

        $i18 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i19 = $i18 - $i16;

        i24 = $i15 + $i19;

     label11:
        $z10 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: boolean hasTimeZone()>();

        if $z10 == 0 goto label15;

        $i3 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneSign()>();

        if $i3 != 0 goto label12;

        $i9 = i24;

        i24 = i24 + 1;

        $r4[$i9] = 90;

        goto label15;

     label12:
        $i4 = i24;

        i28 = i24 + 1;

        $i5 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneSign()>();

        if $i5 <= 0 goto label13;

        $c29 = 43;

        goto label14;

     label13:
        $c29 = 45;

     label14:
        $r4[$i4] = $c29;

        $i6 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneHour()>();

        $i7 = staticinvoke <org.apache.xmlbeans.GDate: int _padTwoAppend(char[],int,int)>($r4, i28, $i6);

        i30 = $i7 + 1;

        $r4[$i7] = 58;

        $i8 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneMinute()>();

        i24 = staticinvoke <org.apache.xmlbeans.GDate: int _padTwoAppend(char[],int,int)>($r4, i30, $i8);

     label15:
        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(char[],int,int)>($r4, 0, i24);

        return $r5;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.math.BigDecimal $r1, $r2;
        boolean $z0, $z1;
        java.util.TimeZone $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37;
        java.util.TimeZone[] $r6, $r22;
        char[] $r3, $r4;
        java.lang.Class $r0, $r38;

        <org.apache.xmlbeans.GDate: int MIN_YEAR> = -292275295;

        <org.apache.xmlbeans.GDate: int MAX_YEAR> = 292277265;

        <org.apache.xmlbeans.GDate: long serialVersionUID> = 1L;

        $r0 = <org.apache.xmlbeans.GDate: java.lang.Class class$org$apache$xmlbeans$GDate>;

        if $r0 != null goto label1;

        $r38 = staticinvoke <org.apache.xmlbeans.GDate: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.GDate");

        <org.apache.xmlbeans.GDate: java.lang.Class class$org$apache$xmlbeans$GDate> = $r38;

        goto label2;

     label1:
        $r38 = <org.apache.xmlbeans.GDate: java.lang.Class class$org$apache$xmlbeans$GDate>;

     label2:
        $z0 = virtualinvoke $r38.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.GDate: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(0L);

        <org.apache.xmlbeans.GDate: java.math.BigDecimal _zero> = $r1;

        $r2 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(1L);

        <org.apache.xmlbeans.GDate: java.math.BigDecimal _one> = $r2;

        $r3 = newarray (char)[100];

        $r3[0] = 48;

        $r3[1] = 48;

        $r3[2] = 48;

        $r3[3] = 48;

        $r3[4] = 48;

        $r3[5] = 48;

        $r3[6] = 48;

        $r3[7] = 48;

        $r3[8] = 48;

        $r3[9] = 48;

        $r3[10] = 49;

        $r3[11] = 49;

        $r3[12] = 49;

        $r3[13] = 49;

        $r3[14] = 49;

        $r3[15] = 49;

        $r3[16] = 49;

        $r3[17] = 49;

        $r3[18] = 49;

        $r3[19] = 49;

        $r3[20] = 50;

        $r3[21] = 50;

        $r3[22] = 50;

        $r3[23] = 50;

        $r3[24] = 50;

        $r3[25] = 50;

        $r3[26] = 50;

        $r3[27] = 50;

        $r3[28] = 50;

        $r3[29] = 50;

        $r3[30] = 51;

        $r3[31] = 51;

        $r3[32] = 51;

        $r3[33] = 51;

        $r3[34] = 51;

        $r3[35] = 51;

        $r3[36] = 51;

        $r3[37] = 51;

        $r3[38] = 51;

        $r3[39] = 51;

        $r3[40] = 52;

        $r3[41] = 52;

        $r3[42] = 52;

        $r3[43] = 52;

        $r3[44] = 52;

        $r3[45] = 52;

        $r3[46] = 52;

        $r3[47] = 52;

        $r3[48] = 52;

        $r3[49] = 52;

        $r3[50] = 53;

        $r3[51] = 53;

        $r3[52] = 53;

        $r3[53] = 53;

        $r3[54] = 53;

        $r3[55] = 53;

        $r3[56] = 53;

        $r3[57] = 53;

        $r3[58] = 53;

        $r3[59] = 53;

        $r3[60] = 54;

        $r3[61] = 54;

        $r3[62] = 54;

        $r3[63] = 54;

        $r3[64] = 54;

        $r3[65] = 54;

        $r3[66] = 54;

        $r3[67] = 54;

        $r3[68] = 54;

        $r3[69] = 54;

        $r3[70] = 55;

        $r3[71] = 55;

        $r3[72] = 55;

        $r3[73] = 55;

        $r3[74] = 55;

        $r3[75] = 55;

        $r3[76] = 55;

        $r3[77] = 55;

        $r3[78] = 55;

        $r3[79] = 55;

        $r3[80] = 56;

        $r3[81] = 56;

        $r3[82] = 56;

        $r3[83] = 56;

        $r3[84] = 56;

        $r3[85] = 56;

        $r3[86] = 56;

        $r3[87] = 56;

        $r3[88] = 56;

        $r3[89] = 56;

        $r3[90] = 57;

        $r3[91] = 57;

        $r3[92] = 57;

        $r3[93] = 57;

        $r3[94] = 57;

        $r3[95] = 57;

        $r3[96] = 57;

        $r3[97] = 57;

        $r3[98] = 57;

        $r3[99] = 57;

        <org.apache.xmlbeans.GDate: char[] _tensDigit> = $r3;

        $r4 = newarray (char)[100];

        $r4[0] = 48;

        $r4[1] = 49;

        $r4[2] = 50;

        $r4[3] = 51;

        $r4[4] = 52;

        $r4[5] = 53;

        $r4[6] = 54;

        $r4[7] = 55;

        $r4[8] = 56;

        $r4[9] = 57;

        $r4[10] = 48;

        $r4[11] = 49;

        $r4[12] = 50;

        $r4[13] = 51;

        $r4[14] = 52;

        $r4[15] = 53;

        $r4[16] = 54;

        $r4[17] = 55;

        $r4[18] = 56;

        $r4[19] = 57;

        $r4[20] = 48;

        $r4[21] = 49;

        $r4[22] = 50;

        $r4[23] = 51;

        $r4[24] = 52;

        $r4[25] = 53;

        $r4[26] = 54;

        $r4[27] = 55;

        $r4[28] = 56;

        $r4[29] = 57;

        $r4[30] = 48;

        $r4[31] = 49;

        $r4[32] = 50;

        $r4[33] = 51;

        $r4[34] = 52;

        $r4[35] = 53;

        $r4[36] = 54;

        $r4[37] = 55;

        $r4[38] = 56;

        $r4[39] = 57;

        $r4[40] = 48;

        $r4[41] = 49;

        $r4[42] = 50;

        $r4[43] = 51;

        $r4[44] = 52;

        $r4[45] = 53;

        $r4[46] = 54;

        $r4[47] = 55;

        $r4[48] = 56;

        $r4[49] = 57;

        $r4[50] = 48;

        $r4[51] = 49;

        $r4[52] = 50;

        $r4[53] = 51;

        $r4[54] = 52;

        $r4[55] = 53;

        $r4[56] = 54;

        $r4[57] = 55;

        $r4[58] = 56;

        $r4[59] = 57;

        $r4[60] = 48;

        $r4[61] = 49;

        $r4[62] = 50;

        $r4[63] = 51;

        $r4[64] = 52;

        $r4[65] = 53;

        $r4[66] = 54;

        $r4[67] = 55;

        $r4[68] = 56;

        $r4[69] = 57;

        $r4[70] = 48;

        $r4[71] = 49;

        $r4[72] = 50;

        $r4[73] = 51;

        $r4[74] = 52;

        $r4[75] = 53;

        $r4[76] = 54;

        $r4[77] = 55;

        $r4[78] = 56;

        $r4[79] = 57;

        $r4[80] = 48;

        $r4[81] = 49;

        $r4[82] = 50;

        $r4[83] = 51;

        $r4[84] = 52;

        $r4[85] = 53;

        $r4[86] = 54;

        $r4[87] = 55;

        $r4[88] = 56;

        $r4[89] = 57;

        $r4[90] = 48;

        $r4[91] = 49;

        $r4[92] = 50;

        $r4[93] = 51;

        $r4[94] = 52;

        $r4[95] = 53;

        $r4[96] = 54;

        $r4[97] = 55;

        $r4[98] = 56;

        $r4[99] = 57;

        <org.apache.xmlbeans.GDate: char[] _onesDigit> = $r4;

        $r5 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        <org.apache.xmlbeans.GDate: java.util.TimeZone GMTZONE> = $r5;

        $r6 = newarray (java.util.TimeZone)[15];

        $r7 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT-00:00");

        $r6[0] = $r7;

        $r8 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT-01:00");

        $r6[1] = $r8;

        $r9 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT-02:00");

        $r6[2] = $r9;

        $r10 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT-03:00");

        $r6[3] = $r10;

        $r11 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT-04:00");

        $r6[4] = $r11;

        $r12 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT-05:00");

        $r6[5] = $r12;

        $r13 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT-06:00");

        $r6[6] = $r13;

        $r14 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT-07:00");

        $r6[7] = $r14;

        $r15 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT-08:00");

        $r6[8] = $r15;

        $r16 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT-09:00");

        $r6[9] = $r16;

        $r17 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT-10:00");

        $r6[10] = $r17;

        $r18 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT-11:00");

        $r6[11] = $r18;

        $r19 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT-12:00");

        $r6[12] = $r19;

        $r20 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT-13:00");

        $r6[13] = $r20;

        $r21 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT-14:00");

        $r6[14] = $r21;

        <org.apache.xmlbeans.GDate: java.util.TimeZone[] MINUSZONE> = $r6;

        $r22 = newarray (java.util.TimeZone)[15];

        $r23 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT+00:00");

        $r22[0] = $r23;

        $r24 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT+01:00");

        $r22[1] = $r24;

        $r25 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT+02:00");

        $r22[2] = $r25;

        $r26 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT+03:00");

        $r22[3] = $r26;

        $r27 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT+04:00");

        $r22[4] = $r27;

        $r28 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT+05:00");

        $r22[5] = $r28;

        $r29 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT+06:00");

        $r22[6] = $r29;

        $r30 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT+07:00");

        $r22[7] = $r30;

        $r31 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT+08:00");

        $r22[8] = $r31;

        $r32 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT+09:00");

        $r22[9] = $r32;

        $r33 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT+10:00");

        $r22[10] = $r33;

        $r34 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT+11:00");

        $r22[11] = $r34;

        $r35 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT+12:00");

        $r22[12] = $r35;

        $r36 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT+13:00");

        $r22[13] = $r36;

        $r37 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT+14:00");

        $r22[14] = $r37;

        <org.apache.xmlbeans.GDate: java.util.TimeZone[] PLUSZONE> = $r22;

        return;
    }
}
