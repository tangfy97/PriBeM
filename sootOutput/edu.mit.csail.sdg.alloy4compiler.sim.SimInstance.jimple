public final class edu.mit.csail.sdg.alloy4compiler.sim.SimInstance extends edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn
{
    public final edu.mit.csail.sdg.alloy4compiler.ast.Module root;
    private edu.mit.csail.sdg.alloy4.Env env;
    private final java.util.Map callbacks;
    private final java.util.Map sfs;
    private edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheSTRING;
    private edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheUNIV;
    private final java.util.Map cacheForConstants;
    private final java.util.List current_function;
    private final int bitwidth;
    private final int maxseq;
    private final int shiftmask;
    private final int min;
    private final int max;
    private static byte[] readcache;

    private static void write(java.io.BufferedOutputStream, java.lang.String) throws java.io.IOException
    {
        byte[] $r2;
        java.lang.String r1;
        java.io.BufferedOutputStream r0;

        r0 := @parameter0: java.io.BufferedOutputStream;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke r0.<java.io.BufferedOutputStream: void write(byte[])>($r2);

        return;
    }

    public void write(java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r4;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r3;
        java.io.FileOutputStream $r0, r5;
        java.lang.String r1;
        java.io.BufferedOutputStream $r2, r6;

        r3 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r1 := @parameter0: java.lang.String;

        r5 = null;

        r6 = null;

     label1:
        $r0 = new java.io.FileOutputStream;

        specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.lang.String)>(r1);

        r5 = $r0;

        $r2 = new java.io.BufferedOutputStream;

        specialinvoke $r2.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r0);

        r6 = $r2;

        specialinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: void write(java.io.BufferedOutputStream)>($r2);

        virtualinvoke $r2.<java.io.BufferedOutputStream: void flush()>();

        virtualinvoke $r2.<java.io.BufferedOutputStream: void close()>();

        r6 = null;

        virtualinvoke $r0.<java.io.FileOutputStream: void close()>();

     label2:
        staticinvoke <edu.mit.csail.sdg.alloy4.Util: boolean close(java.io.Closeable)>(null);

        staticinvoke <edu.mit.csail.sdg.alloy4.Util: boolean close(java.io.Closeable)>(null);

        goto label5;

     label3:
        $r4 := @caughtexception;

     label4:
        staticinvoke <edu.mit.csail.sdg.alloy4.Util: boolean close(java.io.Closeable)>(r6);

        staticinvoke <edu.mit.csail.sdg.alloy4.Util: boolean close(java.io.Closeable)>(r5);

        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void write(java.io.BufferedOutputStream) throws java.io.IOException
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r15;
        java.util.Map $r9;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprVar $r18;
        boolean $z0, $z1, $z2, $z3;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field $r25, $r30;
        java.util.Set $r10;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r7, $r16, $r17, $r20, $r21, $r23, $r24, $r28, $r29, $r32, $r33, $r35, $r36, $r39, $r40;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig $r26, $r37;
        java.io.BufferedOutputStream r0;
        int $i0, $i1;
        java.lang.String $r8, $r19, $r22, $r27, $r31, $r34, $r38, $r41;
        java.util.Map$Entry r13;
        java.util.Iterator $r11;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r3;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset $r43;
        java.lang.Object $r12, $r14, $r42;

        r3 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r0 := @parameter0: java.io.BufferedOutputStream;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maxseq = ");

        $i0 = r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int maxseq>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nbitwidth = ");

        $i1 = r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int bitwidth>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: void write(java.io.BufferedOutputStream,java.lang.String)>(r0, $r8);

        $r9 = r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map sfs>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Set entrySet()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.util.Map$Entry) $r12;

        $r14 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getKey()>();

        r15 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r14;

        $z0 = r15 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig;

        if $z0 == 0 goto label2;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sig ");

        $r37 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) r15;

        $r38 = $r37.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: java.lang.String label>;

        $r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: void write(java.io.BufferedOutputStream,java.lang.String)>(r0, $r41);

        goto label4;

     label2:
        $z1 = r15 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field;

        if $z1 == 0 goto label3;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("field ");

        $r25 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field) r15;

        $r26 = $r25.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: edu.mit.csail.sdg.alloy4compiler.ast.Sig sig>;

        $r27 = $r26.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: java.lang.String label>;

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r30 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field) r15;

        $r31 = $r30.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: java.lang.String label>;

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: void write(java.io.BufferedOutputStream,java.lang.String)>(r0, $r34);

        goto label4;

     label3:
        $z2 = r15 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprVar;

        if $z2 == 0 goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("var ");

        $r18 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprVar) r15;

        $r19 = $r18.<edu.mit.csail.sdg.alloy4compiler.ast.ExprVar: java.lang.String label>;

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: void write(java.io.BufferedOutputStream,java.lang.String)>(r0, $r22);

     label4:
        $r42 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r43 = (edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset) $r42;

        virtualinvoke $r43.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: void write(java.io.BufferedOutputStream)>(r0);

        virtualinvoke r0.<java.io.BufferedOutputStream: void write(int)>(10);

        goto label1;

     label5:
        return;
    }

    private static int readNonNegativeIntThenLinebreak(java.io.BufferedInputStream) throws java.io.IOException
    {
        java.io.BufferedInputStream r0;
        int $i0, $i1, i2, $i3;
        java.io.IOException $r1, $r2;

        r0 := @parameter0: java.io.BufferedInputStream;

        i2 = 0;

     label1:
        $i3 = virtualinvoke r0.<java.io.BufferedInputStream: int read()>();

        if $i3 >= 0 goto label2;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Unexpected EOF");

        throw $r2;

     label2:
        if $i3 != 10 goto label3;

        return i2;

     label3:
        if $i3 <= 0 goto label4;

        if $i3 > 32 goto label4;

        goto label1;

     label4:
        if $i3 < 48 goto label5;

        if $i3 <= 57 goto label6;

     label5:
        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Expects a DIGIT or a white space!");

        throw $r1;

     label6:
        $i1 = i2 * 10;

        $i0 = $i3 - 48;

        i2 = $i1 + $i0;

        goto label1;
    }

    private static java.lang.String readkey(java.io.BufferedInputStream) throws java.io.IOException
    {
        byte[] $r1, $r2, $r3, r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14;
        java.io.BufferedInputStream r0;
        byte $b1, $b5, $b6, $b8, $b10;
        int $i0, $i2, $i3, $i4, $i7, $i9, i11, $i12, i13, $i14, $i15, $i16, $i18, $i19, $i20;
        java.lang.String $r15;

        r0 := @parameter0: java.io.BufferedInputStream;

        i11 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.io.BufferedInputStream: int read()>();

        if $i0 >= 0 goto label2;

        return "";

     label2:
        if $i0 != 61 goto label3;

        goto label6;

     label3:
        $r1 = <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: byte[] readcache>;

        if $r1 != null goto label4;

        $r7 = newarray (byte)[64];

        <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: byte[] readcache> = $r7;

     label4:
        $r12 = <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: byte[] readcache>;

        $i12 = lengthof $r12;

        if i11 < $i12 goto label5;

        $r3 = <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: byte[] readcache>;

        $i2 = lengthof $r3;

        $i3 = $i2 * 2;

        r4 = newarray (byte)[$i3];

        $r6 = <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: byte[] readcache>;

        $r5 = <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: byte[] readcache>;

        $i4 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r4, 0, $i4);

        <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: byte[] readcache> = r4;

        goto label4;

     label5:
        $r2 = <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: byte[] readcache>;

        $b1 = (byte) $i0;

        $r2[i11] = $b1;

        i11 = i11 + 1;

        goto label1;

     label6:
        if i11 <= 0 goto label7;

        $r10 = <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: byte[] readcache>;

        $i7 = i11 - 1;

        $b8 = $r10[$i7];

        $i15 = (int) $b8;

        if $i15 <= 0 goto label7;

        $r11 = <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: byte[] readcache>;

        $i9 = i11 - 1;

        $b10 = $r11[$i9];

        $i16 = (int) $b10;

        if $i16 > 32 goto label7;

        $i18 = (int) -1;

        i11 = i11 + $i18;

        goto label6;

     label7:
        i13 = 0;

     label8:
        if i13 >= i11 goto label9;

        $r8 = <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: byte[] readcache>;

        $b5 = $r8[i13];

        $i19 = (int) $b5;

        if $i19 <= 0 goto label9;

        $r9 = <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: byte[] readcache>;

        $b6 = $r9[i13];

        $i20 = (int) $b6;

        if $i20 > 32 goto label9;

        i13 = i13 + 1;

        goto label8;

     label9:
        $r15 = new java.lang.String;

        $r14 = <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: byte[] readcache>;

        $i14 = i11 - i13;

        specialinvoke $r15.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r14, i13, $i14, "UTF-8");

        return $r15;
    }

    public static synchronized edu.mit.csail.sdg.alloy4compiler.sim.SimInstance read(edu.mit.csail.sdg.alloy4compiler.ast.Module, java.lang.String, java.util.List) throws edu.mit.csail.sdg.alloy4.Err, java.io.IOException
    {
        java.io.BufferedInputStream $r2, r48;
        java.util.Map $r21, $r42, $r43;
        edu.mit.csail.sdg.alloy4.SafeList $r29;
        java.lang.StringBuilder $r15, $r16, $r18, $r23, $r24, $r26, $r33, $r34, $r36, $r37, $r39;
        edu.mit.csail.sdg.alloy4compiler.ast.Module r6;
        java.lang.Throwable $r46;
        java.lang.String r1, $r3, $r4, $r8, $r17, $r19, $r25, $r27, $r35, $r38, $r40;
        edu.mit.csail.sdg.alloy4.ConstList $r10;
        java.io.IOException $r44, $r45;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset $r9, r50, r51, r53;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprVar r52;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field r32;
        java.util.List r12;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig r49;
        java.util.HashMap $r7;
        int $i0, $i1, $i2;
        java.util.Iterator $r11, $r13, $r30;
        java.io.FileInputStream $r0, r47;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance $r5;
        java.lang.Object $r14, $r20, $r22, $r28, $r31, $r41;

        r6 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Module;

        r1 := @parameter1: java.lang.String;

        r12 := @parameter2: java.util.List;

        r47 = null;

        r48 = null;

     label01:
        $r0 = new java.io.FileInputStream;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.lang.String)>(r1);

        r47 = $r0;

        $r2 = new java.io.BufferedInputStream;

        specialinvoke $r2.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r0);

        r48 = $r2;

        $r3 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.lang.String readkey(java.io.BufferedInputStream)>($r2);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("maxseq");

        if $z0 != 0 goto label02;

        $r45 = new java.io.IOException;

        specialinvoke $r45.<java.io.IOException: void <init>(java.lang.String)>("Expecting maxseq = ...");

        throw $r45;

     label02:
        $i0 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int readNonNegativeIntThenLinebreak(java.io.BufferedInputStream)>($r2);

        $r4 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.lang.String readkey(java.io.BufferedInputStream)>($r2);

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("bitwidth");

        if $z1 != 0 goto label03;

        $r44 = new java.io.IOException;

        specialinvoke $r44.<java.io.IOException: void <init>(java.lang.String)>("Expecting bitwidth = ...");

        throw $r44;

     label03:
        $i1 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int readNonNegativeIntThenLinebreak(java.io.BufferedInputStream)>($r2);

        $r5 = new edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        specialinvoke $r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: void <init>(edu.mit.csail.sdg.alloy4compiler.ast.Module,int,int)>(r6, $i1, $i0);

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

     label04:
        $r8 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.lang.String readkey(java.io.BufferedInputStream)>($r2);

        $i2 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i2 != 0 goto label05;

        goto label06;

     label05:
        $r9 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset read(java.io.BufferedInputStream)>($r2);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

        goto label04;

     label06:
        $r10 = interfaceinvoke r6.<edu.mit.csail.sdg.alloy4compiler.ast.Module: edu.mit.csail.sdg.alloy4.ConstList getAllReachableSigs()>();

        $r11 = virtualinvoke $r10.<edu.mit.csail.sdg.alloy4.ConstList: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label12;

        $r22 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r49 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r22;

        $z4 = r49.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean builtin>;

        if $z4 != 0 goto label11;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sig ");

        $r25 = r49.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: java.lang.String label>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r27);

        r50 = (edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset) $r28;

        if r50 == null goto label08;

        $r43 = $r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map sfs>;

        interfaceinvoke $r43.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r49, r50);

     label08:
        $r29 = virtualinvoke r49.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFields()>();

        $r30 = virtualinvoke $r29.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

     label09:
        $z6 = interfaceinvoke $r30.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label11;

        $r31 = interfaceinvoke $r30.<java.util.Iterator: java.lang.Object next()>();

        r32 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field) $r31;

        $z5 = r32.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: boolean defined>;

        if $z5 != 0 goto label10;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("field ");

        $r35 = r49.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: java.lang.String label>;

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r38 = r32.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: java.lang.String label>;

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        $r41 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r40);

        r51 = (edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset) $r41;

        if r51 == null goto label10;

        $r42 = $r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map sfs>;

        interfaceinvoke $r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r32, r51);

     label10:
        goto label09;

     label11:
        goto label07;

     label12:
        if r12 == null goto label15;

        $r13 = interfaceinvoke r12.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z3 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label15;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r52 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprVar) $r14;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("var ");

        $r17 = r52.<edu.mit.csail.sdg.alloy4compiler.ast.ExprVar: java.lang.String label>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r19);

        r53 = (edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset) $r20;

        if r53 == null goto label14;

        $r21 = $r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map sfs>;

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r52, r53);

     label14:
        goto label13;

     label15:
        virtualinvoke $r2.<java.io.BufferedInputStream: void close()>();

        r48 = null;

        virtualinvoke $r0.<java.io.FileInputStream: void close()>();

        r47 = null;

     label16:
        <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: byte[] readcache> = null;

        staticinvoke <edu.mit.csail.sdg.alloy4.Util: boolean close(java.io.Closeable)>(null);

        staticinvoke <edu.mit.csail.sdg.alloy4.Util: boolean close(java.io.Closeable)>(null);

        return $r5;

     label17:
        $r46 := @caughtexception;

     label18:
        <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: byte[] readcache> = null;

        staticinvoke <edu.mit.csail.sdg.alloy4.Util: boolean close(java.io.Closeable)>(r48);

        staticinvoke <edu.mit.csail.sdg.alloy4.Util: boolean close(java.io.Closeable)>(r47);

        throw $r46;

        catch java.lang.Throwable from label01 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public void <init>(edu.mit.csail.sdg.alloy4compiler.ast.Module, int, int) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4.ErrorType $r5;
        java.util.HashMap $r7;
        java.util.ArrayList $r4;
        java.util.LinkedHashMap $r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        edu.mit.csail.sdg.alloy4.ErrorSyntax $r8, $r15;
        java.lang.String $r14;
        edu.mit.csail.sdg.alloy4.Env $r1;
        java.util.IdentityHashMap $r3;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r0;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13;
        edu.mit.csail.sdg.alloy4compiler.ast.Module r6;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r6 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Module;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn: void <init>()>();

        $r1 = new edu.mit.csail.sdg.alloy4.Env;

        specialinvoke $r1.<edu.mit.csail.sdg.alloy4.Env: void <init>()>();

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4.Env env> = $r1;

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map sfs> = $r2;

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheSTRING> = null;

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheUNIV> = null;

        $r3 = new java.util.IdentityHashMap;

        specialinvoke $r3.<java.util.IdentityHashMap: void <init>()>();

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map cacheForConstants> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.List current_function> = $r4;

        if i0 < 1 goto label1;

        if i0 <= 32 goto label2;

     label1:
        $r5 = new edu.mit.csail.sdg.alloy4.ErrorType;

        specialinvoke $r5.<edu.mit.csail.sdg.alloy4.ErrorType: void <init>(java.lang.String)>("Bitwidth must be between 1 and 32.");

        throw $r5;

     label2:
        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.ast.Module root> = r6;

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int bitwidth> = i0;

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int maxseq> = i1;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map callbacks> = $r7;

        if i0 != 32 goto label3;

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int max> = 2147483647;

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int min> = -2147483648;

        goto label4;

     label3:
        $i2 = i0 - 1;

        $i3 = 1 << $i2;

        $i4 = $i3 - 1;

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int max> = $i4;

        $i5 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int max>;

        $i6 = 0 - $i5;

        $i7 = $i6 - 1;

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int min> = $i7;

     label4:
        if i1 >= 0 goto label5;

        $r15 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        specialinvoke $r15.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(java.lang.String)>("The maximum sequence length cannot be negative.");

        throw $r15;

     label5:
        $i8 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int max>;

        if i1 <= $i8 goto label6;

        $r8 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("With integer bitwidth of ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", you cannot have sequence length longer than ");

        $i14 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int max>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(java.lang.String)>($r14);

        throw $r8;

     label6:
        $i9 = i0 - 1;

        $i10 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>($i9);

        $i11 = 32 - $i10;

        $i12 = 1 << $i11;

        $i13 = $i12 - 1;

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int shiftmask> = $i13;

        return;
    }

    public void <init>(edu.mit.csail.sdg.alloy4compiler.sim.SimInstance) throws edu.mit.csail.sdg.alloy4.Err
    {
        java.util.HashMap $r11;
        java.util.ArrayList $r4;
        java.util.LinkedHashMap $r2;
        java.util.Map $r12, $r13, $r18;
        int $i0, $i1, $i2, $i3, $i4;
        edu.mit.csail.sdg.alloy4.Env $r1, $r7, $r8;
        boolean $z0;
        java.util.Map$Entry r17;
        java.util.IdentityHashMap $r3;
        java.util.Iterator $r15;
        java.util.Set $r14;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r0, r5;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset $r9, $r10;
        java.lang.Object $r16, $r19, $r20;
        edu.mit.csail.sdg.alloy4compiler.ast.Module $r6;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r5 := @parameter0: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn: void <init>()>();

        $r1 = new edu.mit.csail.sdg.alloy4.Env;

        specialinvoke $r1.<edu.mit.csail.sdg.alloy4.Env: void <init>()>();

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4.Env env> = $r1;

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map sfs> = $r2;

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheSTRING> = null;

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheUNIV> = null;

        $r3 = new java.util.IdentityHashMap;

        specialinvoke $r3.<java.util.IdentityHashMap: void <init>()>();

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map cacheForConstants> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.List current_function> = $r4;

        $r6 = r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.ast.Module root>;

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.ast.Module root> = $r6;

        $i0 = r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int bitwidth>;

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int bitwidth> = $i0;

        $i1 = r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int maxseq>;

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int maxseq> = $i1;

        $i2 = r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int min>;

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int min> = $i2;

        $i3 = r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int max>;

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int max> = $i3;

        $i4 = r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int shiftmask>;

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int shiftmask> = $i4;

        $r7 = r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4.Env env>;

        $r8 = virtualinvoke $r7.<edu.mit.csail.sdg.alloy4.Env: edu.mit.csail.sdg.alloy4.Env dup()>();

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4.Env env> = $r8;

        $r9 = r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheUNIV>;

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheUNIV> = $r9;

        $r10 = r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheSTRING>;

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheSTRING> = $r10;

        $r11 = new java.util.HashMap;

        $r12 = r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map callbacks>;

        specialinvoke $r11.<java.util.HashMap: void <init>(java.util.Map)>($r12);

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map callbacks> = $r11;

        $r13 = r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map sfs>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.util.Set entrySet()>();

        $r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.util.Map$Entry) $r16;

        $r18 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map sfs>;

        $r19 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r20 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r20);

        goto label1;

     label2:
        return;
    }

    public void addCallback(edu.mit.csail.sdg.alloy4compiler.ast.Func, edu.mit.csail.sdg.alloy4compiler.sim.SimCallback)
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimCallback r2;
        edu.mit.csail.sdg.alloy4compiler.ast.Func r1;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r0;
        java.util.Map $r3;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Func;

        r2 := @parameter1: edu.mit.csail.sdg.alloy4compiler.sim.SimCallback;

        $r3 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map callbacks>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public boolean hasAtom(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom r0;
        java.util.Map $r3;
        int $i0, $i2, $i3, $i4, $i5;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r10, $r11;
        java.lang.String $r1, $r14;
        boolean $z0, $z1, $z2, $z3;
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.util.Set $r4;
        char $c1;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r2;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset $r13;
        java.lang.Object $r6, $r8, $r9, $r12;

        r2 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom;

        $r1 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimAtom: java.lang.String toString()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        $r14 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimAtom: java.lang.String toString()>();

        $c1 = virtualinvoke $r14.<java.lang.String: char charAt(int)>(0);

        $i2 = (int) $c1;

        if $i2 == 45 goto label2;

        $i3 = (int) $c1;

        if $i3 < 48 goto label1;

        $i4 = (int) $c1;

        if $i4 <= 57 goto label2;

     label1:
        $i5 = (int) $c1;

        if $i5 != 34 goto label3;

     label2:
        return 1;

     label3:
        $r3 = r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map sfs>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z3 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z0 = $r8 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig;

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r9;

        $r11 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r10;

        $z1 = virtualinvoke $r11.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: boolean isTopLevel()>();

        if $z1 == 0 goto label5;

        $r12 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset) $r12;

        $z2 = virtualinvoke $r13.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: boolean has(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)>(r0);

        if $z2 == 0 goto label5;

        return 1;

     label5:
        goto label4;

     label6:
        return 0;
    }

    public edu.mit.csail.sdg.alloy4compiler.sim.SimAtom makeAtom(edu.mit.csail.sdg.alloy4compiler.ast.Sig) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom $r29;
        java.util.Map $r11, $r14, $r15;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig r23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        edu.mit.csail.sdg.alloy4.SafeList $r19;
        edu.mit.csail.sdg.alloy4.Pos $r1;
        java.lang.StringBuilder $r2, $r4, $r5, $r25, $r26, $r27;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig r0;
        int i0;
        java.lang.String $r3, $r6, r24, $r28;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple $r8;
        edu.mit.csail.sdg.alloy4.ErrorAPI $r20, $r21, $r22;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r7;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset $r9, $r10, r13, $r16, $r17, $r18;
        java.lang.Object $r12;

        r7 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Sig;

        $z0 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean builtin>;

        if $z0 == 0 goto label01;

        $r22 = new edu.mit.csail.sdg.alloy4.ErrorAPI;

        specialinvoke $r22.<edu.mit.csail.sdg.alloy4.ErrorAPI: void <init>(java.lang.String)>("Cannot add an atom to a builtin sig.");

        throw $r22;

     label01:
        $z1 = r0 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig;

        if $z1 != 0 goto label02;

        $r21 = new edu.mit.csail.sdg.alloy4.ErrorAPI;

        specialinvoke $r21.<edu.mit.csail.sdg.alloy4.ErrorAPI: void <init>(java.lang.String)>("Cannot add an atom to a subset sig.");

        throw $r21;

     label02:
        r23 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) r0;

        $r1 = r23.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4.Pos isAbstract>;

        if $r1 == null goto label03;

        $r19 = virtualinvoke r23.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4.SafeList children()>();

        $z6 = virtualinvoke $r19.<edu.mit.csail.sdg.alloy4.SafeList: boolean isEmpty()>();

        if $z6 != 0 goto label03;

        $r20 = new edu.mit.csail.sdg.alloy4.ErrorAPI;

        specialinvoke $r20.<edu.mit.csail.sdg.alloy4.ErrorAPI: void <init>(java.lang.String)>("Cannot add an atom to an abstract parent sig.");

        throw $r20;

     label03:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: java.lang.String label>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r24 = $r6;

        $z2 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("this/");

        if $z2 == 0 goto label04;

        r24 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>(5);

     label04:
        i0 = 0;

     label05:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r29 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimAtom: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom make(java.lang.String)>($r28);

        $z7 = virtualinvoke r7.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean hasAtom(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)>($r29);

        if $z7 == 0 goto label06;

        goto label12;

     label06:
        $r8 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple make(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)>($r29);

        $r9 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset make(edu.mit.csail.sdg.alloy4compiler.sim.SimTuple)>($r8);

        $r10 = r7.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheUNIV>;

        if $r10 == null goto label07;

        $r17 = r7.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheUNIV>;

        $r18 = virtualinvoke $r17.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset union(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset)>($r9);

        r7.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheUNIV> = $r18;

     label07:
        if r23 == null goto label11;

        $z3 = r23.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: boolean builtin>;

        if $z3 != 0 goto label10;

        $r11 = r7.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map sfs>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r23);

        r13 = (edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset) $r12;

        if r13 == null goto label08;

        $z4 = virtualinvoke r13.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: boolean empty()>();

        if $z4 == 0 goto label09;

     label08:
        $r14 = r7.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map sfs>;

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r23, $r9);

        goto label10;

     label09:
        $z5 = virtualinvoke $r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: boolean in(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset)>(r13);

        if $z5 != 0 goto label11;

        $r15 = r7.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map sfs>;

        $r16 = virtualinvoke r13.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset union(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset)>($r9);

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r23, $r16);

     label10:
        r23 = r23.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig parent>;

        goto label07;

     label11:
        return $r29;

     label12:
        i0 = i0 + 1;

        goto label05;
    }

    public boolean deleteAtom(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom r0;
        long $l1, $l2;
        byte $b3;
        java.util.Map $r3;
        int $i0, $i5, $i6, $i7, $i8;
        java.lang.String $r1, $r11;
        boolean z0, $z1;
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.util.Set $r4;
        char $c4;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r2;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset r9, $r10;
        java.lang.Object $r6, $r8;

        r2 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom;

        $r1 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimAtom: java.lang.String toString()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        $r11 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimAtom: java.lang.String toString()>();

        $c4 = virtualinvoke $r11.<java.lang.String: char charAt(int)>(0);

        $i5 = (int) $c4;

        if $i5 == 45 goto label2;

        $i6 = (int) $c4;

        if $i6 < 48 goto label1;

        $i7 = (int) $c4;

        if $i7 <= 57 goto label2;

     label1:
        $i8 = (int) $c4;

        if $i8 != 34 goto label3;

     label2:
        return 0;

     label3:
        z0 = 0;

        $r3 = r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map sfs>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        r9 = (edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset) $r8;

        $r10 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset removeAll(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)>(r0);

        $l1 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: long longsize()>();

        $l2 = virtualinvoke $r10.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: long longsize()>();

        $b3 = $l1 cmp $l2;

        if $b3 == 0 goto label5;

        z0 = 1;

        interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r10);

     label5:
        goto label4;

     label6:
        if z0 == 0 goto label7;

        r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheUNIV> = null;

        return 1;

     label7:
        return 0;
    }

    public void init(edu.mit.csail.sdg.alloy4compiler.ast.Sig, edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4.ErrorType $r12;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig r1;
        java.util.Map $r3, $r4, $r20;
        int $i0, $i1;
        java.lang.String $r8, $r11, $r15, $r19;
        boolean $z0;
        edu.mit.csail.sdg.alloy4.ErrorAPI $r5;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset r0;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r2;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r13, $r14, $r16, $r17, $r18;

        r2 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Sig;

        r0 := @parameter1: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset;

        if r0 != null goto label1;

        $r20 = r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map sfs>;

        interfaceinvoke $r20.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return;

     label1:
        $i0 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: int arity()>();

        if $i0 <= 1 goto label2;

        $r12 = new edu.mit.csail.sdg.alloy4.ErrorType;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Evaluator encountered an error: sig ");

        $r15 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: java.lang.String label>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" arity must not be ");

        $i1 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: int arity()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<edu.mit.csail.sdg.alloy4.ErrorType: void <init>(java.lang.String)>($r19);

        throw $r12;

     label2:
        $z0 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean builtin>;

        if $z0 == 0 goto label3;

        $r5 = new edu.mit.csail.sdg.alloy4.ErrorAPI;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Evaluator cannot prebind the builtin sig \"");

        $r8 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: java.lang.String label>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<edu.mit.csail.sdg.alloy4.ErrorAPI: void <init>(java.lang.String)>($r11);

        throw $r5;

     label3:
        $r3 = r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map sfs>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r0);

        r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheUNIV> = null;

        r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheSTRING> = null;

        $r4 = r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map cacheForConstants>;

        interfaceinvoke $r4.<java.util.Map: void clear()>();

        return;
    }

    public void init(edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field, edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r6;
        edu.mit.csail.sdg.alloy4.ErrorType $r7;
        java.util.Map $r3, $r4, $r15;
        int $i0, $i1, $i2;
        java.lang.String $r10, $r14;
        boolean $z0, $z1;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field r1;
        edu.mit.csail.sdg.alloy4.ErrorAPI $r5;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset r0;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r2;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r13;

        r2 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field;

        r0 := @parameter1: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset;

        if r0 != null goto label1;

        $r15 = r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map sfs>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return;

     label1:
        $z0 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: boolean empty()>();

        if $z0 != 0 goto label2;

        $i0 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: int arity()>();

        $r6 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $i1 = virtualinvoke $r6.<edu.mit.csail.sdg.alloy4compiler.ast.Type: int arity()>();

        if $i0 == $i1 goto label2;

        $r7 = new edu.mit.csail.sdg.alloy4.ErrorType;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Evaluator encountered an error: field ");

        $r10 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: java.lang.String label>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" arity must not be ");

        $i2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: int arity()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<edu.mit.csail.sdg.alloy4.ErrorType: void <init>(java.lang.String)>($r14);

        throw $r7;

     label2:
        $z1 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: boolean defined>;

        if $z1 == 0 goto label3;

        $r5 = new edu.mit.csail.sdg.alloy4.ErrorAPI;

        specialinvoke $r5.<edu.mit.csail.sdg.alloy4.ErrorAPI: void <init>(java.lang.String)>("Evaluator cannot prebind the value of a defined field.");

        throw $r5;

     label3:
        $r3 = r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map sfs>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r0);

        r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheUNIV> = null;

        r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheSTRING> = null;

        $r4 = r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map cacheForConstants>;

        interfaceinvoke $r4.<java.util.Map: void clear()>();

        return;
    }

    public void init(edu.mit.csail.sdg.alloy4compiler.ast.ExprVar, edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r5;
        edu.mit.csail.sdg.alloy4.ErrorType $r6;
        java.util.Map $r3, $r4, $r14;
        int $i0, $i1, $i2;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprVar r2;
        java.lang.String $r9, $r13;
        boolean $z0;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset r0;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r1;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r12;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r2 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.ExprVar;

        r0 := @parameter1: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset;

        if r0 != null goto label1;

        $r14 = r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map sfs>;

        interfaceinvoke $r14.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

        return;

     label1:
        $z0 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: boolean empty()>();

        if $z0 != 0 goto label2;

        $i0 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: int arity()>();

        $r5 = virtualinvoke r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprVar: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $i1 = virtualinvoke $r5.<edu.mit.csail.sdg.alloy4compiler.ast.Type: int arity()>();

        if $i0 == $i1 goto label2;

        $r6 = new edu.mit.csail.sdg.alloy4.ErrorType;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Evaluator encountered an error: skolem ");

        $r9 = r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprVar: java.lang.String label>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" arity must not be ");

        $i2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: int arity()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<edu.mit.csail.sdg.alloy4.ErrorType: void <init>(java.lang.String)>($r13);

        throw $r6;

     label2:
        $r3 = r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map sfs>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r0);

        r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheUNIV> = null;

        r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheSTRING> = null;

        $r4 = r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map cacheForConstants>;

        interfaceinvoke $r4.<java.util.Map: void clear()>();

        return;
    }

    private int trunc(int)
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        i0 := @parameter0: int;

        $i1 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int bitwidth>;

        $i2 = 32 - $i1;

        $i5 = i0 << $i2;

        $i3 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int bitwidth>;

        $i4 = 32 - $i3;

        $i6 = $i5 >> $i4;

        return $i6;
    }

    public boolean cform(edu.mit.csail.sdg.alloy4compiler.ast.Expr) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4.ErrorFatal $r4;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0;
        edu.mit.csail.sdg.alloy4.JoinableList $r1, $r11;
        edu.mit.csail.sdg.alloy4.Err $r13;
        java.lang.Boolean $r10;
        java.lang.String $r9;
        boolean $z0, $z1, $z2;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r2;
        edu.mit.csail.sdg.alloy4.Pos $r5;
        java.lang.Object $r3, $r12;
        java.lang.StringBuilder $r6, $r7, $r8;

        r2 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        $z0 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.JoinableList: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r11 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        $r12 = virtualinvoke $r11.<edu.mit.csail.sdg.alloy4.JoinableList: java.lang.Object pick()>();

        $r13 = (edu.mit.csail.sdg.alloy4.Err) $r12;

        throw $r13;

     label1:
        $r3 = virtualinvoke r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.lang.Object visitThis(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r0);

        $z1 = $r3 instanceof java.lang.Boolean;

        if $z1 == 0 goto label2;

        $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $z2 = virtualinvoke $r10.<java.lang.Boolean: boolean equals(java.lang.Object)>($r3);

        return $z2;

     label2:
        $r4 = new edu.mit.csail.sdg.alloy4.ErrorFatal;

        $r5 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This should have been a formula.\nInstead it is ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<edu.mit.csail.sdg.alloy4.ErrorFatal: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r5, $r9);

        throw $r4;
    }

    public int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4.ErrorFatal $r4;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0;
        java.lang.Integer $r10;
        edu.mit.csail.sdg.alloy4.JoinableList $r1, $r11;
        edu.mit.csail.sdg.alloy4.Err $r13;
        int $i0, $i1;
        java.lang.String $r9;
        boolean $z0, $z1;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r2;
        edu.mit.csail.sdg.alloy4.Pos $r5;
        java.lang.Object $r3, $r12;
        java.lang.StringBuilder $r6, $r7, $r8;

        r2 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        $z0 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.JoinableList: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r11 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        $r12 = virtualinvoke $r11.<edu.mit.csail.sdg.alloy4.JoinableList: java.lang.Object pick()>();

        $r13 = (edu.mit.csail.sdg.alloy4.Err) $r12;

        throw $r13;

     label1:
        $r3 = virtualinvoke r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.lang.Object visitThis(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r0);

        $z1 = $r3 instanceof java.lang.Integer;

        if $z1 == 0 goto label2;

        $r10 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        $i1 = specialinvoke r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int trunc(int)>($i0);

        return $i1;

     label2:
        $r4 = new edu.mit.csail.sdg.alloy4.ErrorFatal;

        $r5 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This should have been an integer expression.\nInstead it is ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<edu.mit.csail.sdg.alloy4.ErrorFatal: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r5, $r9);

        throw $r4;
    }

    public edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4.ErrorFatal $r4;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0;
        edu.mit.csail.sdg.alloy4.JoinableList $r1, $r11;
        edu.mit.csail.sdg.alloy4.Err $r13;
        java.lang.String $r9;
        boolean $z0, $z1;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r2;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset $r10;
        edu.mit.csail.sdg.alloy4.Pos $r5;
        java.lang.Object $r3, $r12;
        java.lang.StringBuilder $r6, $r7, $r8;

        r2 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        $z0 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.JoinableList: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r11 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        $r12 = virtualinvoke $r11.<edu.mit.csail.sdg.alloy4.JoinableList: java.lang.Object pick()>();

        $r13 = (edu.mit.csail.sdg.alloy4.Err) $r12;

        throw $r13;

     label1:
        $r3 = virtualinvoke r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.lang.Object visitThis(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r0);

        $z1 = $r3 instanceof edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset;

        if $z1 == 0 goto label2;

        $r10 = (edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset) $r3;

        return $r10;

     label2:
        $r4 = new edu.mit.csail.sdg.alloy4.ErrorFatal;

        $r5 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This should have been a set or a relation.\nInstead it is ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<edu.mit.csail.sdg.alloy4.ErrorFatal: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r5, $r9);

        throw $r4;
    }

    public java.lang.Object visit(edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) throws edu.mit.csail.sdg.alloy4.Err
    {
        java.lang.Integer $r12, $r27, $r35, $r44, $r98, $r101, $r104, $r147, $r148;
        java.lang.StringBuilder $r139, $r141, $r142, $r149;
        edu.mit.csail.sdg.alloy4.ErrorFatal $r150;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r1, r2, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r15, $r18, $r20, $r22, $r25, $r26, $r28, $r30, $r33, $r34, $r45, $r46, $r48, $r49, $r51, $r52, $r54, $r55, $r57, $r59, $r62, $r64, $r67, $r68, $r70, $r71, $r73, $r74, $r76, $r77, $r79, $r80, $r82, $r83, $r85, $r86, $r88, $r89, $r91, $r93, $r96, $r97, $r99, $r100, $r102, $r103, $r105, $r106, $r108, $r110, $r111, $r112, $r113, $r115, $r117, $r119, $r120, $r122, $r125, $r128, $r131, $r133, $r145;
        int[] $r4;
        edu.mit.csail.sdg.alloy4.Pos $r138;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r3, $r140;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i68, $i70;
        java.lang.Boolean $r47, $r50, $r53, $r56, $r69, $r72, $r75, $r78, $r81, $r84, $r87, $r90, $r107, $r109, $r114, $r144;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op $r37, $r38, $r41, $r42;
        java.lang.String $r143;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset $r14, $r16, $r17, $r21, $r23, $r24, $r29, $r31, $r32, $r58, $r60, $r61, $r63, $r65, $r66, $r92, $r94, $r95, $r121, $r123, $r124, $r126, $r127, $r129, $r130, $r132, $r134, $r135;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r116, $r118;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary r0;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant $r36, $r39, $r40, $r43;
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r19, $r146;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r5;

        r5 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        r2 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r4 = <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance$1: int[] $SwitchMap$edu$mit$csail$sdg$alloy4compiler$ast$ExprBinary$Op>;

        $r3 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $i0 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: int ordinal()>();

        $i1 = $r4[$i0];

        tableswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label01;
            case 3: goto label01;
            case 4: goto label01;
            case 5: goto label01;
            case 6: goto label01;
            case 7: goto label01;
            case 8: goto label01;
            case 9: goto label01;
            case 10: goto label01;
            case 11: goto label01;
            case 12: goto label01;
            case 13: goto label01;
            case 14: goto label01;
            case 15: goto label01;
            case 16: goto label01;
            case 17: goto label01;
            case 18: goto label02;
            case 19: goto label05;
            case 20: goto label09;
            case 21: goto label12;
            case 22: goto label16;
            case 23: goto label19;
            case 24: goto label20;
            case 25: goto label21;
            case 26: goto label22;
            case 27: goto label23;
            case 28: goto label26;
            case 29: goto label29;
            case 30: goto label32;
            case 31: goto label35;
            case 32: goto label38;
            case 33: goto label41;
            case 34: goto label44;
            case 35: goto label47;
            case 36: goto label48;
            case 37: goto label49;
            case 38: goto label50;
            case 39: goto label53;
            case 40: goto label54;
            case 41: goto label57;
            case 42: goto label60;
            case 43: goto label62;
            case 44: goto label63;
            case 45: goto label64;
            case 46: goto label69;
            default: goto label74;
        };

     label01:
        $r131 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r132 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r131);

        $r133 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r134 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r133);

        $r135 = virtualinvoke $r132.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset product(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset)>($r134);

        return $r135;

     label02:
        $r117 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r116 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig UNIV>;

        $z15 = virtualinvoke $r117.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r116);

        if $z15 == 0 goto label03;

        $r128 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r129 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r128);

        $i59 = virtualinvoke $r129.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: int arity()>();

        $i60 = $i59 - 1;

        $r130 = virtualinvoke $r129.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset tail(int)>($i60);

        return $r130;

     label03:
        $r119 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r118 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig UNIV>;

        $z16 = virtualinvoke $r119.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r118);

        if $z16 == 0 goto label04;

        $r125 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r126 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r125);

        $i57 = virtualinvoke $r126.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: int arity()>();

        $i58 = $i57 - 1;

        $r127 = virtualinvoke $r126.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset head(int)>($i58);

        return $r127;

     label04:
        $r120 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r121 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r120);

        $r122 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r123 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r122);

        $r124 = virtualinvoke $r121.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset join(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset)>($r123);

        return $r124;

     label05:
        $r113 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $z13 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean cform(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r113);

        if $z13 == 0 goto label06;

        $r115 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $z14 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean cform(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r115);

        if $z14 == 0 goto label07;

     label06:
        $z17 = 1;

        goto label08;

     label07:
        $z17 = 0;

     label08:
        $r114 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z17);

        return $r114;

     label09:
        $r111 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $z11 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean cform(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r111);

        if $z11 == 0 goto label10;

        $r112 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $z12 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean cform(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r112);

        if $z12 == 0 goto label10;

        $z18 = 1;

        goto label11;

     label10:
        $z18 = 0;

     label11:
        $r144 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z18);

        return $r144;

     label12:
        $r108 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $z9 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean cform(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r108);

        if $z9 != 0 goto label13;

        $r110 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $z10 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean cform(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r110);

        if $z10 == 0 goto label14;

     label13:
        $z19 = 1;

        goto label15;

     label14:
        $z19 = 0;

     label15:
        $r109 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z19);

        return $r109;

     label16:
        $r105 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $z7 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean cform(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r105);

        $r106 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $z8 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean cform(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r106);

        if $z7 != $z8 goto label17;

        $z20 = 1;

        goto label18;

     label17:
        $z20 = 0;

     label18:
        $r107 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z20);

        return $r107;

     label19:
        $r102 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $i51 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r102);

        $i52 = r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int shiftmask>;

        $r103 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $i53 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r103);

        $i54 = $i52 & $i53;

        $i55 = $i51 >> $i54;

        $i56 = specialinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int trunc(int)>($i55);

        $r104 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i56);

        return $r104;

     label20:
        $r99 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $i45 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r99);

        $i46 = r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int shiftmask>;

        $r100 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $i47 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r100);

        $i48 = $i46 & $i47;

        $i49 = $i45 >>> $i48;

        $i50 = specialinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int trunc(int)>($i49);

        $r101 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i50);

        return $r101;

     label21:
        $r96 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $i39 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r96);

        $i40 = r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int shiftmask>;

        $r97 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $i41 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r97);

        $i42 = $i40 & $i41;

        $i43 = $i39 << $i42;

        $i44 = specialinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int trunc(int)>($i43);

        $r98 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i44);

        return $r98;

     label22:
        $r91 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r92 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r91);

        $r93 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r94 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r93);

        $r95 = virtualinvoke $r92.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset intersect(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset)>($r94);

        return $r95;

     label23:
        $r88 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $i37 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r88);

        $r89 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $i38 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r89);

        if $i37 <= $i38 goto label24;

        $z21 = 1;

        goto label25;

     label24:
        $z21 = 0;

     label25:
        $r90 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z21);

        return $r90;

     label26:
        $r85 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $i35 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r85);

        $r86 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $i36 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r86);

        if $i35 < $i36 goto label27;

        $z22 = 1;

        goto label28;

     label27:
        $z22 = 0;

     label28:
        $r87 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z22);

        return $r87;

     label29:
        $r82 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $i33 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r82);

        $r83 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $i34 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r83);

        if $i33 >= $i34 goto label30;

        $z23 = 1;

        goto label31;

     label30:
        $z23 = 0;

     label31:
        $r84 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z23);

        return $r84;

     label32:
        $r79 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $i31 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r79);

        $r80 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $i32 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r80);

        if $i31 > $i32 goto label33;

        $z24 = 1;

        goto label34;

     label33:
        $z24 = 0;

     label34:
        $r81 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z24);

        return $r81;

     label35:
        $r76 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $i29 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r76);

        $r77 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $i30 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r77);

        if $i29 > $i30 goto label36;

        $z25 = 1;

        goto label37;

     label36:
        $z25 = 0;

     label37:
        $r78 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z25);

        return $r78;

     label38:
        $r73 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $i27 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r73);

        $r74 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $i28 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r74);

        if $i27 >= $i28 goto label39;

        $z26 = 1;

        goto label40;

     label39:
        $z26 = 0;

     label40:
        $r75 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z26);

        return $r75;

     label41:
        $r70 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $i25 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r70);

        $r71 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $i26 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r71);

        if $i25 < $i26 goto label42;

        $z27 = 1;

        goto label43;

     label42:
        $z27 = 0;

     label43:
        $r72 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z27);

        return $r72;

     label44:
        $r67 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $i23 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r67);

        $r68 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $i24 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r68);

        if $i23 <= $i24 goto label45;

        $z28 = 1;

        goto label46;

     label45:
        $z28 = 0;

     label46:
        $r69 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z28);

        return $r69;

     label47:
        $r62 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r63 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r62);

        $r64 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r65 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r64);

        $r66 = virtualinvoke $r63.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset domain(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset)>($r65);

        return $r66;

     label48:
        $r57 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r58 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r57);

        $r59 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r60 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r59);

        $r61 = virtualinvoke $r58.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset range(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset)>($r60);

        return $r61;

     label49:
        $r55 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r54 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $z6 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean equal(edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r55, $r54);

        $r56 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6);

        return $r56;

     label50:
        $r52 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r51 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $z5 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean equal(edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r52, $r51);

        if $z5 != 0 goto label51;

        $z29 = 1;

        goto label52;

     label51:
        $z29 = 0;

     label52:
        $r53 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z29);

        return $r53;

     label53:
        $r49 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r48 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $z4 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean isIn(edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r49, $r48);

        $r50 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        return $r50;

     label54:
        $r46 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r45 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $z3 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean isIn(edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r46, $r45);

        if $z3 != 0 goto label55;

        $z30 = 1;

        goto label56;

     label55:
        $z30 = 0;

     label56:
        $r47 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z30);

        return $r47;

     label57:
        $z1 = r1 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant;

        if $z1 == 0 goto label58;

        $r36 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant) r1;

        $r38 = $r36.<edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant: edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op op>;

        $r37 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op NUMBER>;

        if $r38 != $r37 goto label58;

        $r39 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant) r1;

        $i18 = virtualinvoke $r39.<edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant: int num()>();

        if $i18 != 0 goto label58;

        $z2 = r2 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant;

        if $z2 == 0 goto label58;

        $r40 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant) r2;

        $r42 = $r40.<edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant: edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op op>;

        $r41 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op NUMBER>;

        if $r42 != $r41 goto label58;

        $r43 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant) r2;

        $i19 = virtualinvoke $r43.<edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant: int num()>();

        $i20 = r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int max>;

        $i21 = $i20 + 1;

        if $i19 != $i21 goto label58;

        $i22 = r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int min>;

        $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i22);

        return $r44;

     label58:
        $r145 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r146 = virtualinvoke $r145.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $z31 = $r146.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean is_int>;

        if $z31 == 0 goto label59;

        $r33 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $i14 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r33);

        $r34 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $i15 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r34);

        $i16 = $i14 - $i15;

        $i17 = specialinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int trunc(int)>($i16);

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);

        return $r35;

     label59:
        $r28 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r29 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r28);

        $r30 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r31 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r30);

        $r32 = virtualinvoke $r29.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset difference(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset)>($r31);

        return $r32;

     label60:
        $r18 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r19 = virtualinvoke $r18.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $z0 = $r19.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean is_int>;

        if $z0 == 0 goto label61;

        $r25 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $i10 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r25);

        $r26 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $i11 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r26);

        $i12 = $i10 + $i11;

        $i13 = specialinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int trunc(int)>($i12);

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        return $r27;

     label61:
        $r20 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r21 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r20);

        $r22 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r23 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r22);

        $r24 = virtualinvoke $r21.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset union(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset)>($r23);

        return $r24;

     label62:
        $r13 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r14 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r13);

        $r15 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r16 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r15);

        $r17 = virtualinvoke $r14.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset override(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset)>($r16);

        return $r17;

     label63:
        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $i6 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r10);

        $r11 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $i7 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r11);

        $i8 = $i6 * $i7;

        $i9 = specialinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int trunc(int)>($i8);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        return $r12;

     label64:
        $r8 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $i4 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r8);

        $r9 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $i5 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r9);

        if $i4 != 0 goto label65;

        $i61 = 0;

        goto label68;

     label65:
        if $i5 != 0 goto label67;

        if $i4 >= 0 goto label66;

        $i61 = 1;

        goto label68;

     label66:
        $i68 = (int) -1;

        $i61 = $i68;

        goto label68;

     label67:
        $i61 = $i4 / $i5;

     label68:
        $i62 = specialinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int trunc(int)>($i61);

        $r147 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i62);

        return $r147;

     label69:
        $r6 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $i2 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r6);

        $r7 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $i3 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r7);

        if $i2 != 0 goto label70;

        $i63 = 0;

        goto label73;

     label70:
        if $i3 != 0 goto label72;

        if $i2 >= 0 goto label71;

        $i63 = 1;

        goto label73;

     label71:
        $i70 = (int) -1;

        $i63 = $i70;

        goto label73;

     label72:
        $i63 = $i2 / $i3;

     label73:
        $i64 = $i63 * $i3;

        $i65 = $i2 - $i64;

        $i66 = specialinvoke r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int trunc(int)>($i65);

        $r148 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i66);

        return $r148;

     label74:
        $r150 = new edu.mit.csail.sdg.alloy4.ErrorFatal;

        $r138 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r149 = new java.lang.StringBuilder;

        specialinvoke $r149.<java.lang.StringBuilder: void <init>()>();

        $r139 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported operator (");

        $r140 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r141 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r140);

        $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") encountered during ExprBinary.accept()");

        $r143 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r150.<edu.mit.csail.sdg.alloy4.ErrorFatal: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r138, $r143);

        throw $r150;
    }

    public java.lang.Object visit(edu.mit.csail.sdg.alloy4compiler.ast.ExprList) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset[] r48;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r17, $r21, $r25, $r29, $r33, r46, r47;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1, i2, i3;
        java.lang.Boolean $r8, $r13, $r35, $r38, $r40, $r43, $r45;
        edu.mit.csail.sdg.alloy4.ConstList $r7, $r15, $r19, $r23, $r27, $r31, $r36, $r41;
        java.util.Iterator $r37, $r42;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset $r9, $r10, $r11, $r12, $r18, $r22, $r26, $r30, $r34;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r14;
        java.lang.Object $r16, $r20, $r24, $r28, $r32, $r39, $r44;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList r0;

        r14 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.ExprList;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op op>;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op AND>;

        if $r2 != $r1 goto label04;

        $r41 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r42 = virtualinvoke $r41.<edu.mit.csail.sdg.alloy4.ConstList: java.util.Iterator iterator()>();

     label01:
        $z6 = interfaceinvoke $r42.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label03;

        $r44 = interfaceinvoke $r42.<java.util.Iterator: java.lang.Object next()>();

        r46 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r44;

        $z7 = virtualinvoke r14.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean cform(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r46);

        if $z7 != 0 goto label02;

        $r45 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r45;

     label02:
        goto label01;

     label03:
        $r43 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        return $r43;

     label04:
        $r4 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op op>;

        $r3 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op OR>;

        if $r4 != $r3 goto label08;

        $r36 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r37 = virtualinvoke $r36.<edu.mit.csail.sdg.alloy4.ConstList: java.util.Iterator iterator()>();

     label05:
        $z4 = interfaceinvoke $r37.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label07;

        $r39 = interfaceinvoke $r37.<java.util.Iterator: java.lang.Object next()>();

        r47 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r39;

        $z5 = virtualinvoke r14.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean cform(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r47);

        if $z5 == 0 goto label06;

        $r40 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        return $r40;

     label06:
        goto label05;

     label07:
        $r38 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r38;

     label08:
        $r6 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op op>;

        $r5 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op TOTALORDER>;

        if $r6 != $r5 goto label09;

        $r23 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r24 = virtualinvoke $r23.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(0);

        $r25 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r24;

        $r26 = virtualinvoke r14.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r25);

        $r27 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r28 = virtualinvoke $r27.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(1);

        $r29 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r28;

        $r30 = virtualinvoke r14.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r29);

        $r31 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r32 = virtualinvoke $r31.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(2);

        $r33 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r32;

        $r34 = virtualinvoke r14.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r33);

        $z3 = virtualinvoke $r34.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: boolean totalOrder(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset,edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset)>($r26, $r30);

        $r35 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        return $r35;

     label09:
        $r7 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $i0 = virtualinvoke $r7.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        r48 = newarray (edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset)[$i0];

        i2 = 1;

     label10:
        $i1 = lengthof r48;

        if i2 >= $i1 goto label16;

        i3 = 0;

     label11:
        if i3 >= i2 goto label15;

        $r9 = r48[i2];

        if $r9 != null goto label12;

        $r19 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r20 = virtualinvoke $r19.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(i2);

        $r21 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r20;

        $r22 = virtualinvoke r14.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r21);

        r48[i2] = $r22;

        $z2 = virtualinvoke $r22.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: boolean empty()>();

        if $z2 == 0 goto label12;

        goto label14;

     label12:
        $r10 = r48[i3];

        if $r10 != null goto label13;

        $r15 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r16 = virtualinvoke $r15.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(i3);

        $r17 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r16;

        $r18 = virtualinvoke r14.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r17);

        r48[i3] = $r18;

        $z1 = virtualinvoke $r18.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: boolean empty()>();

        if $z1 == 0 goto label13;

        goto label14;

     label13:
        $r12 = r48[i3];

        $r11 = r48[i2];

        $z0 = virtualinvoke $r12.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: boolean intersects(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset)>($r11);

        if $z0 == 0 goto label14;

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r13;

     label14:
        i3 = i3 + 1;

        goto label11;

     label15:
        i2 = i2 + 1;

        goto label10;

     label16:
        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        return $r8;
    }

    public java.lang.Object visit(edu.mit.csail.sdg.alloy4compiler.ast.ExprCall) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r2, $r7, $r23;
        java.util.Map $r15, $r17, $r20, $r34;
        edu.mit.csail.sdg.alloy4.ErrorSyntax $r27;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprVar $r25;
        boolean $z0;
        edu.mit.csail.sdg.alloy4compiler.sim.SimCallback r38;
        java.lang.Exception $r35;
        java.util.List $r10, $r40, $r42, $r43;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprCall r0;
        edu.mit.csail.sdg.alloy4.Pos $r5, $r28;
        java.lang.StringBuilder $r29, $r30, $r31, $r32;
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r3, $r6, $r8;
        edu.mit.csail.sdg.alloy4.ErrorType $r4;
        java.util.ArrayList $r13;
        edu.mit.csail.sdg.alloy4compiler.ast.Func r1, r37;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9;
        java.lang.String $r33;
        edu.mit.csail.sdg.alloy4.Env $r12, $r39;
        edu.mit.csail.sdg.alloy4.ConstList $r14, $r19, $r21;
        java.util.Iterator $r11;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r9;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset $r24;
        java.lang.Object $r16, $r18, $r22, $r26, $r36, $r41;

        r9 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.ExprCall;

        r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprCall: edu.mit.csail.sdg.alloy4compiler.ast.Func fun>;

        $i0 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.ast.Func: int count()>();

        if $i0 != 0 goto label01;

        $r34 = r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map cacheForConstants>;

        $r36 = interfaceinvoke $r34.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        goto label02;

     label01:
        $r36 = null;

     label02:
        if $r36 == null goto label03;

        return $r36;

     label03:
        $r2 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.ast.Func: edu.mit.csail.sdg.alloy4compiler.ast.Expr getBody()>();

        $r3 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $i1 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4compiler.ast.Type: int arity()>();

        if $i1 < 0 goto label04;

        $r6 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $i2 = virtualinvoke $r6.<edu.mit.csail.sdg.alloy4compiler.ast.Type: int arity()>();

        $r7 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.Func: edu.mit.csail.sdg.alloy4compiler.ast.Expr returnDecl>;

        $r8 = virtualinvoke $r7.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $i3 = virtualinvoke $r8.<edu.mit.csail.sdg.alloy4compiler.ast.Type: int arity()>();

        if $i2 == $i3 goto label05;

     label04:
        $r4 = new edu.mit.csail.sdg.alloy4.ErrorType;

        $r5 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        specialinvoke $r4.<edu.mit.csail.sdg.alloy4.ErrorType: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r5, "Function return value not fully resolved.");

        throw $r4;

     label05:
        $r10 = r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.List current_function>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r26 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r37 = (edu.mit.csail.sdg.alloy4compiler.ast.Func) $r26;

        if r37 != r1 goto label07;

        $r27 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r28 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprCall: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot call itself recursively!");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r28, $r33);

        throw $r27;

     label07:
        goto label06;

     label08:
        $r12 = new edu.mit.csail.sdg.alloy4.Env;

        specialinvoke $r12.<edu.mit.csail.sdg.alloy4.Env: void <init>()>();

        $r13 = new java.util.ArrayList;

        $r14 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprCall: edu.mit.csail.sdg.alloy4.ConstList args>;

        $i4 = virtualinvoke $r14.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        specialinvoke $r13.<java.util.ArrayList: void <init>(int)>($i4);

        i6 = 0;

     label09:
        if i6 >= $i0 goto label10;

        $r21 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprCall: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r22 = virtualinvoke $r21.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(i6);

        $r23 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r22;

        $r24 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r23);

        $r25 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.ast.Func: edu.mit.csail.sdg.alloy4compiler.ast.ExprVar get(int)>(i6);

        virtualinvoke $r12.<edu.mit.csail.sdg.alloy4.Env: void put(java.lang.Object,java.lang.Object)>($r25, $r24);

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r24);

        i6 = i6 + 1;

        goto label09;

     label10:
        $r15 = r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map callbacks>;

        $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r38 = (edu.mit.csail.sdg.alloy4compiler.sim.SimCallback) $r16;

        if r38 == null goto label15;

     label11:
        $r18 = interfaceinvoke r38.<edu.mit.csail.sdg.alloy4compiler.sim.SimCallback: java.lang.Object compute(edu.mit.csail.sdg.alloy4compiler.ast.Func,java.util.List)>(r1, $r13);

        if $r18 == null goto label13;

        $r19 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprCall: edu.mit.csail.sdg.alloy4.ConstList args>;

        $i5 = virtualinvoke $r19.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        if $i5 != 0 goto label12;

        $r20 = r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map cacheForConstants>;

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r18);

     label12:
        return $r18;

     label13:
        goto label15;

     label14:
        $r35 := @caughtexception;

     label15:
        $r39 = r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4.Env env>;

        r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4.Env env> = $r12;

        $r40 = r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.List current_function>;

        interfaceinvoke $r40.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r41 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.lang.Object visitThis(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2);

        r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4.Env env> = $r39;

        $r42 = r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.List current_function>;

        $r43 = r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.List current_function>;

        $i7 = interfaceinvoke $r43.<java.util.List: int size()>();

        $i8 = $i7 - 1;

        interfaceinvoke $r42.<java.util.List: java.lang.Object remove(int)>($i8);

        $i9 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.ast.Func: int count()>();

        if $i9 != 0 goto label16;

        $r17 = r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map cacheForConstants>;

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r41);

     label16:
        return $r41;

        catch java.lang.Exception from label11 to label12 with label14;
    }

    public java.lang.Object visit(edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4.ErrorFatal $r36;
        java.lang.Integer $r11, $r12, $r15;
        int[] $r2;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r4;
        edu.mit.csail.sdg.alloy4.Pos $r18, $r28, $r38;
        java.lang.StringBuilder $r17, $r19, $r20, $r21, $r22, $r23, $r24, $r27, $r29, $r30, $r31, $r32, $r33, $r34, $r37, $r39, $r41, $r42;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant r0;
        edu.mit.csail.sdg.alloy4.ErrorType $r16, $r26;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.Boolean $r13, $r14;
        java.lang.String $r8, $r25, $r35, $r43;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op $r1, $r40;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r3;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset $r5, $r6, $r7, $r9, $r10;

        r3 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant;

        $r2 = <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance$1: int[] $SwitchMap$edu$mit$csail$sdg$alloy4compiler$ast$ExprConstant$Op>;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant: edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op op>;

        $i0 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label09;
            case 8: goto label10;
            case 9: goto label11;
            default: goto label12;
        };

     label01:
        $i6 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant: int num()>();

        $i7 = r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int min>;

        if $i6 >= $i7 goto label02;

        $r26 = new edu.mit.csail.sdg.alloy4.ErrorType;

        $r28 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current bitwidth is set to ");

        $i11 = r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int bitwidth>;

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", thus this integer constant ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is smaller than the minimum integer ");

        $i12 = r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int min>;

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<edu.mit.csail.sdg.alloy4.ErrorType: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r28, $r35);

        throw $r26;

     label02:
        $i8 = r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int max>;

        if $i6 <= $i8 goto label03;

        $r16 = new edu.mit.csail.sdg.alloy4.ErrorType;

        $r18 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current bitwidth is set to ");

        $i9 = r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int bitwidth>;

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", thus this integer constant ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is bigger than the maximum integer ");

        $i10 = r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int max>;

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<edu.mit.csail.sdg.alloy4.ErrorType: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r18, $r25);

        throw $r16;

     label03:
        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        return $r15;

     label04:
        $r14 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r14;

     label05:
        $r13 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r13;

     label06:
        $i5 = r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int min>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        return $r12;

     label07:
        $i4 = r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int max>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        return $r11;

     label08:
        $r10 = <edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset EMPTY>;

        return $r10;

     label09:
        $r8 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant: java.lang.String string>;

        $r9 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset make(java.lang.String)>($r8);

        return $r9;

     label10:
        $i3 = r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int min>;

        $i2 = r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int max>;

        $r7 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset makenext(int,int)>($i3, $i2);

        return $r7;

     label11:
        $r4 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig UNIV>;

        $r5 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r4);

        $r6 = virtualinvoke $r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset iden()>();

        return $r6;

     label12:
        $r36 = new edu.mit.csail.sdg.alloy4.ErrorFatal;

        $r38 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported operator (");

        $r40 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant: edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op op>;

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") encountered during ExprConstant.accept()");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<edu.mit.csail.sdg.alloy4.ErrorFatal: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r38, $r43);

        throw $r36;
    }

    public java.lang.Object visit(edu.mit.csail.sdg.alloy4compiler.ast.ExprITE) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r2, $r3, $r5;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprITE r1;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r0;
        java.lang.Object $r4, $r6;
        boolean $z0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.ExprITE;

        $r2 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr cond>;

        $z0 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean cform(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2);

        if $z0 == 0 goto label1;

        $r5 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r6 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.lang.Object visitThis(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5);

        return $r6;

     label1:
        $r3 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprITE: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r4 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.lang.Object visitThis(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r3);

        return $r4;
    }

    public java.lang.Object visit(edu.mit.csail.sdg.alloy4compiler.ast.ExprLet) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r2, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprLet r1;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r0;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprVar $r4, $r8;
        java.lang.Object $r5, $r7;
        edu.mit.csail.sdg.alloy4.Env $r3, $r9;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.ExprLet;

        $r3 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4.Env env>;

        $r4 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprLet: edu.mit.csail.sdg.alloy4compiler.ast.ExprVar var>;

        $r2 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprLet: edu.mit.csail.sdg.alloy4compiler.ast.Expr expr>;

        $r5 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.lang.Object visitThis(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2);

        virtualinvoke $r3.<edu.mit.csail.sdg.alloy4.Env: void put(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r6 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprLet: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r7 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.lang.Object visitThis(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r6);

        $r9 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4.Env env>;

        $r8 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprLet: edu.mit.csail.sdg.alloy4compiler.ast.ExprVar var>;

        virtualinvoke $r9.<edu.mit.csail.sdg.alloy4.Env: void remove(java.lang.Object)>($r8);

        return $r7;
    }

    public java.lang.Object visit(edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r1, $r47;
        java.lang.Integer $r18, $r38;
        byte $b6, $b8, $b10;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary r0;
        java.lang.StringBuilder $r46, $r48, $r49, $r52;
        long $l5, $l7, $l9;
        java.lang.String $r50;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple $r21;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r22, $r25, $r28, $r31, $r34, $r37, $r42;
        edu.mit.csail.sdg.alloy4.ErrorFatal $r53;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom $r20;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r4, $r7, $r10, $r13, $r16, $r19, $r23, $r24, $r27, $r30, $r33, $r36, $r39, $r41;
        int[] $r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        edu.mit.csail.sdg.alloy4.Pos $r45;
        int $i0, $i1, $i2, $i3, $i4, $i11, $i12, $i13, $i14;
        java.lang.Boolean $r26, $r29, $r32, $r35, $r51;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r3;
        java.lang.Object $r40;

        r3 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary;

        $r2 = <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance$1: int[] $SwitchMap$edu$mit$csail$sdg$alloy4compiler$ast$ExprUnary$Op>;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $i0 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label01;
            case 3: goto label01;
            case 4: goto label01;
            case 5: goto label01;
            case 6: goto label02;
            case 7: goto label03;
            case 8: goto label04;
            case 9: goto label05;
            case 10: goto label08;
            case 11: goto label11;
            case 12: goto label14;
            case 13: goto label17;
            case 14: goto label18;
            case 15: goto label19;
            case 16: goto label20;
            case 17: goto label21;
            default: goto label22;
        };

     label01:
        $r41 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r42 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r41);

        return $r42;

     label02:
        $r39 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r40 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.lang.Object visitThis(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r39);

        return $r40;

     label03:
        $r36 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r37 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r36);

        $i11 = virtualinvoke $r37.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: int size()>();

        $i12 = specialinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int trunc(int)>($i11);

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        return $r38;

     label04:
        $r33 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r34 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r33);

        $z1 = virtualinvoke $r34.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: boolean empty()>();

        $r35 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        return $r35;

     label05:
        $r30 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r31 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r30);

        $l9 = virtualinvoke $r31.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: long longsize()>();

        $b10 = $l9 cmp 1L;

        $i13 = (int) $b10;

        if $i13 > 0 goto label06;

        $z2 = 1;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        $r32 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        return $r32;

     label08:
        $r27 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r28 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r27);

        $l7 = virtualinvoke $r28.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: long longsize()>();

        $b8 = $l7 cmp 1L;

        if $b8 != 0 goto label09;

        $z3 = 1;

        goto label10;

     label09:
        $z3 = 0;

     label10:
        $r29 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        return $r29;

     label11:
        $r24 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r25 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r24);

        $l5 = virtualinvoke $r25.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: long longsize()>();

        $b6 = $l5 cmp 1L;

        $i14 = (int) $b6;

        if $i14 < 0 goto label12;

        $z4 = 1;

        goto label13;

     label12:
        $z4 = 0;

     label13:
        $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        return $r26;

     label14:
        $r23 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $z0 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean cform(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r23);

        if $z0 == 0 goto label15;

        $r51 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        goto label16;

     label15:
        $r51 = <java.lang.Boolean: java.lang.Boolean TRUE>;

     label16:
        return $r51;

     label17:
        $r19 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $i4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r19);

        $r20 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimAtom: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom make(int)>($i4);

        $r21 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple make(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)>($r20);

        $r22 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset make(edu.mit.csail.sdg.alloy4compiler.sim.SimTuple)>($r21);

        return $r22;

     label18:
        $r16 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r17 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r16);

        $i2 = virtualinvoke $r17.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: int sum()>();

        $i3 = specialinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int trunc(int)>($i2);

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        return $r18;

     label19:
        $r13 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r14 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r13);

        $r15 = virtualinvoke $r14.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset closure()>();

        return $r15;

     label20:
        $r7 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r8 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r7);

        $r9 = virtualinvoke $r8.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset closure()>();

        $r10 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant: edu.mit.csail.sdg.alloy4compiler.ast.Expr IDEN>;

        $r11 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r10);

        $r12 = virtualinvoke $r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset union(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset)>($r11);

        return $r12;

     label21:
        $r4 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r5 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r4);

        $r6 = virtualinvoke $r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset transpose()>();

        return $r6;

     label22:
        $r53 = new edu.mit.csail.sdg.alloy4.ErrorFatal;

        $r45 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported operator (");

        $r47 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") encountered during ExprUnary.accept()");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r53.<edu.mit.csail.sdg.alloy4.ErrorFatal: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r45, $r50);

        throw $r53;
    }

    public java.lang.Object visit(edu.mit.csail.sdg.alloy4compiler.ast.ExprVar) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4.ErrorFatal $r7;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom $r5;
        java.util.Map $r14;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprVar r1;
        java.lang.String $r4, $r13;
        edu.mit.csail.sdg.alloy4.Env $r2;
        boolean $z0;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple $r6;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r0;
        edu.mit.csail.sdg.alloy4.Pos $r9;
        java.lang.Object $r3, r15;
        java.lang.StringBuilder $r8, $r10, $r11, $r12;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.ExprVar;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4.Env env>;

        $r3 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Env: java.lang.Object get(java.lang.Object)>(r1);

        r15 = $r3;

        if $r3 != null goto label1;

        $r14 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map sfs>;

        r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

     label1:
        if r15 != null goto label3;

        $r4 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprVar: java.lang.String label>;

        $r5 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimAtom: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom make(java.lang.String)>($r4);

        $z0 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean hasAtom(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)>($r5);

        if $z0 != 0 goto label2;

        $r7 = new edu.mit.csail.sdg.alloy4.ErrorFatal;

        $r9 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprVar: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Variable \"");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" is not bound to a legal value during translation.\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<edu.mit.csail.sdg.alloy4.ErrorFatal: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r9, $r13);

        throw $r7;

     label2:
        $r6 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple make(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)>($r5);

        r15 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset make(edu.mit.csail.sdg.alloy4compiler.sim.SimTuple)>($r6);

     label3:
        return r15;
    }

    public edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset visit(edu.mit.csail.sdg.alloy4compiler.ast.Sig) throws edu.mit.csail.sdg.alloy4.Err
    {
        java.util.Map $r7, $r19, $r38;
        java.util.Set $r20, $r39;
        java.lang.StringBuilder $r11, $r12, $r13, $r60;
        java.lang.String $r14, $r49;
        java.util.Map$Entry r58, r59;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r47, $r52;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset $r15, $r16, $r17, $r18, $r23, $r24, $r25, $r31, $r33, $r34, $r35, $r36, $r37, $r44, $r50, $r53, $r55, $r56, $r57;
        edu.mit.csail.sdg.alloy4.ErrorFatal $r61;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom $r48, $r51;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r1, $r2, $r3, $r4, $r5, $r22, $r29, $r30;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig r0;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, i9, $i10, $i12;
        java.util.Iterator $r21, $r40, $r45;
        char $c4;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r6;
        java.lang.Object $r8, $r26, $r27, $r28, $r32, $r41, $r42, $r43, $r46, $r54;

        r6 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Sig;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig NONE>;

        $z0 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r1);

        if $z0 == 0 goto label01;

        $r57 = <edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset EMPTY>;

        return $r57;

     label01:
        $r2 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SEQIDX>;

        $z1 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2);

        if $z1 == 0 goto label02;

        $i7 = r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int maxseq>;

        $i8 = $i7 - 1;

        $r56 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset make(int,int)>(0, $i8);

        return $r56;

     label02:
        $r3 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SIGINT>;

        $z2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r3);

        if $z2 == 0 goto label03;

        $i6 = r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int min>;

        $i5 = r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int max>;

        $r55 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset make(int,int)>($i6, $i5);

        return $r55;

     label03:
        $r4 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig STRING>;

        $z3 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r4);

        if $z3 == 0 goto label12;

        $r35 = r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheSTRING>;

        if $r35 != null goto label11;

        $r37 = <edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset EMPTY>;

        r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheSTRING> = $r37;

        $r38 = r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map sfs>;

        $r39 = interfaceinvoke $r38.<java.util.Map: java.util.Set entrySet()>();

        $r40 = interfaceinvoke $r39.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z8 = interfaceinvoke $r40.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label11;

        $r41 = interfaceinvoke $r40.<java.util.Iterator: java.lang.Object next()>();

        r58 = (java.util.Map$Entry) $r41;

        $r42 = interfaceinvoke r58.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z9 = $r42 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field;

        if $z9 != 0 goto label05;

        $r54 = interfaceinvoke r58.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z10 = $r54 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprVar;

        if $z10 == 0 goto label10;

     label05:
        $r43 = interfaceinvoke r58.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r44 = (edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset) $r43;

        $r45 = virtualinvoke $r44.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: java.util.Iterator iterator()>();

     label06:
        $z11 = interfaceinvoke $r45.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label10;

        $r46 = interfaceinvoke $r45.<java.util.Iterator: java.lang.Object next()>();

        r47 = (edu.mit.csail.sdg.alloy4compiler.sim.SimTuple) $r46;

        $i2 = virtualinvoke r47.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: int arity()>();

        i9 = $i2 - 1;

     label07:
        if i9 < 0 goto label09;

        $r48 = virtualinvoke r47.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom get(int)>(i9);

        $r49 = virtualinvoke $r48.<edu.mit.csail.sdg.alloy4compiler.sim.SimAtom: java.lang.String toString()>();

        $i3 = virtualinvoke $r49.<java.lang.String: int length()>();

        if $i3 <= 0 goto label08;

        $c4 = virtualinvoke $r49.<java.lang.String: char charAt(int)>(0);

        $i10 = (int) $c4;

        if $i10 != 34 goto label08;

        $r50 = r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheSTRING>;

        $r51 = virtualinvoke r47.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom get(int)>(i9);

        $r52 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple make(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)>($r51);

        $r53 = virtualinvoke $r50.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset union(edu.mit.csail.sdg.alloy4compiler.sim.SimTuple)>($r52);

        r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheSTRING> = $r53;

     label08:
        $i12 = (int) -1;

        i9 = i9 + $i12;

        goto label07;

     label09:
        goto label06;

     label10:
        goto label04;

     label11:
        $r36 = r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheSTRING>;

        return $r36;

     label12:
        $r5 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig UNIV>;

        if r0 != $r5 goto label17;

        $r16 = r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheUNIV>;

        if $r16 != null goto label16;

        $i1 = r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int min>;

        $i0 = r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int max>;

        $r18 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset make(int,int)>($i1, $i0);

        r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheUNIV> = $r18;

        $r19 = r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map sfs>;

        $r20 = interfaceinvoke $r19.<java.util.Map: java.util.Set entrySet()>();

        $r21 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();

     label13:
        $z5 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label15;

        $r26 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r59 = (java.util.Map$Entry) $r26;

        $r27 = interfaceinvoke r59.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z6 = $r27 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig;

        if $z6 == 0 goto label14;

        $r28 = interfaceinvoke r59.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r29 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r28;

        $r30 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r29;

        $z7 = virtualinvoke $r30.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: boolean isTopLevel()>();

        if $z7 == 0 goto label14;

        $r31 = r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheUNIV>;

        $r32 = interfaceinvoke r59.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r33 = (edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset) $r32;

        $r34 = virtualinvoke $r31.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset union(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset)>($r33);

        r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheUNIV> = $r34;

     label14:
        goto label13;

     label15:
        $r23 = r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheUNIV>;

        $r22 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig STRING>;

        $r24 = virtualinvoke r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset visit(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>($r22);

        $r25 = virtualinvoke $r23.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset union(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset)>($r24);

        r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheUNIV> = $r25;

     label16:
        $r17 = r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cacheUNIV>;

        return $r17;

     label17:
        $r7 = r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map sfs>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $z4 = $r8 instanceof edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset;

        if $z4 == 0 goto label18;

        $r15 = (edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset) $r8;

        return $r15;

     label18:
        $r61 = new edu.mit.csail.sdg.alloy4.ErrorFatal;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown sig ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" encountered during evaluation.");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r61.<edu.mit.csail.sdg.alloy4.ErrorFatal: void <init>(java.lang.String)>($r14);

        throw $r61;
    }

    public edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset visit(edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4.ErrorFatal $r4;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprHasName $r13;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r16;
        java.util.Map $r2;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprVar $r14, r33;
        boolean $z0, $z1, $z2, $z3;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field r0;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig $r11, $r19, $r29;
        java.lang.String $r9;
        edu.mit.csail.sdg.alloy4.Env r17, $r18, $r25, $r27;
        java.util.Iterator $r21;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r23;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r1;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset $r10, $r20, $r24, $r26, $r28, $r30, $r31, $r32, r34;
        java.lang.Object $r3, $r22;
        edu.mit.csail.sdg.alloy4compiler.ast.Decl $r12, $r15;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field;

        $z0 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: boolean defined>;

        if $z0 == 0 goto label4;

        $r11 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: edu.mit.csail.sdg.alloy4compiler.ast.Sig sig>;

        $r12 = $r11.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Decl decl>;

        $r13 = virtualinvoke $r12.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4compiler.ast.ExprHasName get()>();

        $r14 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprVar) $r13;

        r33 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprVar) $r14;

        $r15 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: edu.mit.csail.sdg.alloy4compiler.ast.Decl decl()>();

        r16 = $r15.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4compiler.ast.Expr expr>;

        r17 = r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4.Env env>;

        $r18 = new edu.mit.csail.sdg.alloy4.Env;

        specialinvoke $r18.<edu.mit.csail.sdg.alloy4.Env: void <init>()>();

        r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4.Env env> = $r18;

        $z2 = virtualinvoke r16.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean hasVar(edu.mit.csail.sdg.alloy4compiler.ast.ExprVar)>(r33);

        if $z2 != 0 goto label1;

        $r29 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: edu.mit.csail.sdg.alloy4compiler.ast.Sig sig>;

        $r30 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r29);

        $r31 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r16);

        $r32 = virtualinvoke $r30.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset product(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset)>($r31);

        r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4.Env env> = r17;

        return $r32;

     label1:
        r34 = <edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset EMPTY>;

        $r19 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: edu.mit.csail.sdg.alloy4compiler.ast.Sig sig>;

        $r20 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset visit(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>($r19);

        $r21 = virtualinvoke $r20.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        $r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r23 = (edu.mit.csail.sdg.alloy4compiler.sim.SimTuple) $r22;

        $r24 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset make(edu.mit.csail.sdg.alloy4compiler.sim.SimTuple)>(r23);

        $r25 = r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4.Env env>;

        virtualinvoke $r25.<edu.mit.csail.sdg.alloy4.Env: void put(java.lang.Object,java.lang.Object)>(r33, $r24);

        $r26 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r16);

        $r27 = r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4.Env env>;

        virtualinvoke $r27.<edu.mit.csail.sdg.alloy4.Env: void remove(java.lang.Object)>(r33);

        $r28 = virtualinvoke $r24.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset product(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset)>($r26);

        r34 = virtualinvoke $r28.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset union(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset)>(r34);

        goto label2;

     label3:
        r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4.Env env> = r17;

        return r34;

     label4:
        $r2 = r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.util.Map sfs>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $z1 = $r3 instanceof edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset;

        if $z1 == 0 goto label5;

        $r10 = (edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset) $r3;

        return $r10;

     label5:
        $r4 = new edu.mit.csail.sdg.alloy4.ErrorFatal;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown field ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" encountered during evaluation.");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<edu.mit.csail.sdg.alloy4.ErrorFatal: void <init>(java.lang.String)>($r9);

        throw $r4;
    }

    private int enumerate(edu.mit.csail.sdg.alloy4.ConstList$TempList, int, edu.mit.csail.sdg.alloy4compiler.ast.ExprQt, edu.mit.csail.sdg.alloy4compiler.ast.Expr, int) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r18;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r2, r14;
        int[] $r5;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprVar $r1, $r21;
        boolean $z0, $z1, $z2, $z3, $z4;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprQt r0;
        edu.mit.csail.sdg.alloy4.ConstList$TempList r19;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        edu.mit.csail.sdg.alloy4.Env $r9, $r20, $r28;
        java.util.Iterator r26;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple $r25, r27;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r3;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset $r4, r8, $r23, $r24;
        java.lang.Object $r7, $r22;

        r3 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r19 := @parameter0: edu.mit.csail.sdg.alloy4.ConstList$TempList;

        i9 := @parameter1: int;

        r0 := @parameter2: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt;

        r14 := @parameter3: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        i1 := @parameter4: int;

        $i0 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt: int count()>();

        $r1 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt: edu.mit.csail.sdg.alloy4compiler.ast.ExprVar get(int)>(i1);

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt: edu.mit.csail.sdg.alloy4compiler.ast.Expr getBound(int)>(i1);

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2);

        $r5 = <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance$1: int[] $SwitchMap$edu$mit$csail$sdg$alloy4compiler$ast$ExprUnary$Op>;

        $r6 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op mult()>();

        $i2 = virtualinvoke $r6.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: int ordinal()>();

        $i3 = $r5[$i2];

        tableswitch($i3)
        {
            case 2: goto label01;
            case 3: goto label02;
            case 4: goto label04;
            case 5: goto label03;
            default: goto label04;
        };

     label01:
        r26 = virtualinvoke $r4.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: java.util.Iterator loneOf()>();

        goto label05;

     label02:
        r26 = virtualinvoke $r4.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: java.util.Iterator oneOf()>();

        goto label05;

     label03:
        r26 = virtualinvoke $r4.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: java.util.Iterator someOf()>();

        goto label05;

     label04:
        r26 = virtualinvoke $r4.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: java.util.Iterator setOf()>();

     label05:
        $z3 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label18;

        $r7 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>();

        r8 = (edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset) $r7;

        $i4 = $r2.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: int mult>;

        if $i4 != 2 goto label06;

        $z2 = specialinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean isIn(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r8, $r2);

        if $z2 != 0 goto label06;

        goto label05;

     label06:
        $r9 = r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4.Env env>;

        virtualinvoke $r9.<edu.mit.csail.sdg.alloy4.Env: void put(java.lang.Object,java.lang.Object)>($r1, r8);

        $i5 = $i0 - 1;

        if i1 >= $i5 goto label07;

        $i8 = i1 + 1;

        i9 = specialinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int enumerate(edu.mit.csail.sdg.alloy4.ConstList$TempList,int,edu.mit.csail.sdg.alloy4compiler.ast.ExprQt,edu.mit.csail.sdg.alloy4compiler.ast.Expr,int)>(r19, i9, r0, r14, $i8);

        goto label16;

     label07:
        $r11 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op op>;

        $r10 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op SUM>;

        if $r11 != $r10 goto label08;

        $i7 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r14);

        i9 = i9 + $i7;

        goto label16;

     label08:
        $r13 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op op>;

        $r12 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op COMPREHENSION>;

        if $r13 == $r12 goto label11;

        $i6 = i9;

        $z1 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean cform(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r14);

        if $z1 == 0 goto label09;

        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        i9 = $i6 + $z4;

        goto label16;

     label11:
        $z0 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean cform(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r14);

        if $z0 == 0 goto label16;

        r27 = null;

        i10 = 0;

     label12:
        if i10 >= $i0 goto label15;

        $r20 = r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4.Env env>;

        $r21 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt: edu.mit.csail.sdg.alloy4compiler.ast.ExprVar get(int)>(i10);

        $r22 = virtualinvoke $r20.<edu.mit.csail.sdg.alloy4.Env: java.lang.Object get(java.lang.Object)>($r21);

        $r23 = (edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset) $r22;

        $r24 = (edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset) $r23;

        $r25 = virtualinvoke $r24.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple getTuple()>();

        if r27 != null goto label13;

        r27 = $r25;

        goto label14;

     label13:
        r27 = virtualinvoke r27.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple product(edu.mit.csail.sdg.alloy4compiler.sim.SimTuple)>($r25);

     label14:
        i10 = i10 + 1;

        goto label12;

     label15:
        virtualinvoke r19.<edu.mit.csail.sdg.alloy4.ConstList$TempList: edu.mit.csail.sdg.alloy4.ConstList$TempList add(java.lang.Object)>(r27);

     label16:
        $r28 = r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4.Env env>;

        virtualinvoke $r28.<edu.mit.csail.sdg.alloy4.Env: void remove(java.lang.Object)>($r1);

        if i9 < 2 goto label17;

        $r16 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op op>;

        $r15 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op COMPREHENSION>;

        if $r16 == $r15 goto label17;

        $r18 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op op>;

        $r17 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op SUM>;

        if $r18 == $r17 goto label17;

        return 2;

     label17:
        goto label05;

     label18:
        return i9;
    }

    public java.lang.Object visit(edu.mit.csail.sdg.alloy4compiler.ast.ExprQt) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4.ErrorFatal $r17;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r21;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r0, $r25, $r27, $r29, $r31, $r33, $r35, $r36, $r39;
        java.lang.Integer $r26;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprQt r42, r43;
        edu.mit.csail.sdg.alloy4.Pos $r19;
        java.lang.StringBuilder $r18, $r20, $r22, $r23;
        edu.mit.csail.sdg.alloy4.ConstList$TempList $r38;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Boolean $r28, $r30, $r32, $r34, $r37;
        java.lang.String $r24;
        edu.mit.csail.sdg.alloy4.ConstList $r40;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r1;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset $r41;
        java.lang.Object $r2;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r42 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt;

        $r0 = virtualinvoke r42.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt: edu.mit.csail.sdg.alloy4compiler.ast.Expr desugar()>();

        $z0 = $r0 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprQt;

        if $z0 == 0 goto label01;

        r43 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprQt) $r0;

        goto label02;

     label01:
        $r2 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: java.lang.Object visitThis(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r0);

        return $r2;

     label02:
        $r4 = r43.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op op>;

        $r3 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op COMPREHENSION>;

        if $r4 != $r3 goto label03;

        $r38 = new edu.mit.csail.sdg.alloy4.ConstList$TempList;

        specialinvoke $r38.<edu.mit.csail.sdg.alloy4.ConstList$TempList: void <init>()>();

        $r39 = r43.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        specialinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int enumerate(edu.mit.csail.sdg.alloy4.ConstList$TempList,int,edu.mit.csail.sdg.alloy4compiler.ast.ExprQt,edu.mit.csail.sdg.alloy4compiler.ast.Expr,int)>($r38, 0, r43, $r39, 0);

        $r40 = virtualinvoke $r38.<edu.mit.csail.sdg.alloy4.ConstList$TempList: edu.mit.csail.sdg.alloy4.ConstList makeConst()>();

        $r41 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset make(java.util.Collection)>($r40);

        return $r41;

     label03:
        $r6 = r43.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op op>;

        $r5 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op ALL>;

        if $r6 != $r5 goto label06;

        $r35 = r43.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r36 = virtualinvoke $r35.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr not()>();

        $i6 = specialinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int enumerate(edu.mit.csail.sdg.alloy4.ConstList$TempList,int,edu.mit.csail.sdg.alloy4compiler.ast.ExprQt,edu.mit.csail.sdg.alloy4compiler.ast.Expr,int)>(null, 0, r43, $r36, 0);

        if $i6 != 0 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        $r37 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        return $r37;

     label06:
        $r8 = r43.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op op>;

        $r7 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op NO>;

        if $r8 != $r7 goto label09;

        $r33 = r43.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $i5 = specialinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int enumerate(edu.mit.csail.sdg.alloy4.ConstList$TempList,int,edu.mit.csail.sdg.alloy4compiler.ast.ExprQt,edu.mit.csail.sdg.alloy4compiler.ast.Expr,int)>(null, 0, r43, $r33, 0);

        if $i5 != 0 goto label07;

        $z2 = 1;

        goto label08;

     label07:
        $z2 = 0;

     label08:
        $r34 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        return $r34;

     label09:
        $r10 = r43.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op op>;

        $r9 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op SOME>;

        if $r10 != $r9 goto label12;

        $r31 = r43.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $i4 = specialinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int enumerate(edu.mit.csail.sdg.alloy4.ConstList$TempList,int,edu.mit.csail.sdg.alloy4compiler.ast.ExprQt,edu.mit.csail.sdg.alloy4compiler.ast.Expr,int)>(null, 0, r43, $r31, 0);

        if $i4 < 1 goto label10;

        $z3 = 1;

        goto label11;

     label10:
        $z3 = 0;

     label11:
        $r32 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        return $r32;

     label12:
        $r12 = r43.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op op>;

        $r11 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op LONE>;

        if $r12 != $r11 goto label15;

        $r29 = r43.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $i3 = specialinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int enumerate(edu.mit.csail.sdg.alloy4.ConstList$TempList,int,edu.mit.csail.sdg.alloy4compiler.ast.ExprQt,edu.mit.csail.sdg.alloy4compiler.ast.Expr,int)>(null, 0, r43, $r29, 0);

        if $i3 > 1 goto label13;

        $z4 = 1;

        goto label14;

     label13:
        $z4 = 0;

     label14:
        $r30 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        return $r30;

     label15:
        $r14 = r43.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op op>;

        $r13 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op ONE>;

        if $r14 != $r13 goto label18;

        $r27 = r43.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $i2 = specialinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int enumerate(edu.mit.csail.sdg.alloy4.ConstList$TempList,int,edu.mit.csail.sdg.alloy4compiler.ast.ExprQt,edu.mit.csail.sdg.alloy4compiler.ast.Expr,int)>(null, 0, r43, $r27, 0);

        if $i2 != 1 goto label16;

        $z5 = 1;

        goto label17;

     label16:
        $z5 = 0;

     label17:
        $r28 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5);

        return $r28;

     label18:
        $r16 = r43.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op op>;

        $r15 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op SUM>;

        if $r16 != $r15 goto label19;

        $r25 = r43.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $i0 = specialinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int enumerate(edu.mit.csail.sdg.alloy4.ConstList$TempList,int,edu.mit.csail.sdg.alloy4compiler.ast.ExprQt,edu.mit.csail.sdg.alloy4compiler.ast.Expr,int)>(null, 0, r43, $r25, 0);

        $i1 = specialinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int trunc(int)>($i0);

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r26;

     label19:
        $r17 = new edu.mit.csail.sdg.alloy4.ErrorFatal;

        $r19 = r43.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported operator (");

        $r21 = r43.<edu.mit.csail.sdg.alloy4compiler.ast.ExprQt: edu.mit.csail.sdg.alloy4compiler.ast.ExprQt$Op op>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") encountered during ExprQt.accept()");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<edu.mit.csail.sdg.alloy4.ErrorFatal: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r19, $r24);

        throw $r17;
    }

    public boolean isIn(edu.mit.csail.sdg.alloy4compiler.sim.SimTuple, edu.mit.csail.sdg.alloy4compiler.ast.Expr) throws edu.mit.csail.sdg.alloy4.Err
    {
        java.lang.Integer $r39, $r41;
        java.lang.String $r37;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r3, $r26, $r27, $r28, $r29;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset $r2;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom $r36, $r38, $r40;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r0, $r8, $r10, $r15, $r17, r23, r42, r43;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r30, $r31, $r32, $r33, $r34, $r35;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary $r4, $r7, $r9, $r11, $r14, $r16, $r18, $r21, $r22;
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r24, $r25;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r5, $r6, $r12, $r13, $r19, $r20;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8;
        char $c4;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r1;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        r42 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r0 = virtualinvoke r42.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()>();

        $z0 = $r0 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig;

        if $z0 == 0 goto label12;

        $r30 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r0;

        $z12 = $r30.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: boolean builtin>;

        if $z12 == 0 goto label12;

        $i2 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: int arity()>();

        if $i2 == 1 goto label01;

        return 0;

     label01:
        $r31 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig UNIV>;

        $z13 = virtualinvoke $r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r31);

        if $z13 == 0 goto label02;

        return 1;

     label02:
        $r32 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig NONE>;

        $z14 = virtualinvoke $r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r32);

        if $z14 == 0 goto label03;

        return 0;

     label03:
        $r33 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SEQIDX>;

        $z15 = virtualinvoke $r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r33);

        if $z15 == 0 goto label06;

        $r40 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom get(int)>(0);

        $r41 = virtualinvoke $r40.<edu.mit.csail.sdg.alloy4compiler.sim.SimAtom: java.lang.Integer toInt(java.lang.Integer)>(null);

        if $r41 == null goto label04;

        $i5 = virtualinvoke $r41.<java.lang.Integer: int intValue()>();

        if $i5 < 0 goto label04;

        $i6 = virtualinvoke $r41.<java.lang.Integer: int intValue()>();

        $i7 = r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int maxseq>;

        if $i6 >= $i7 goto label04;

        $z18 = 1;

        goto label05;

     label04:
        $z18 = 0;

     label05:
        return $z18;

     label06:
        $r34 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SIGINT>;

        $z16 = virtualinvoke $r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r34);

        if $z16 == 0 goto label09;

        $r38 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom get(int)>(0);

        $r39 = virtualinvoke $r38.<edu.mit.csail.sdg.alloy4compiler.sim.SimAtom: java.lang.Integer toInt(java.lang.Integer)>(null);

        if $r39 == null goto label07;

        $z19 = 1;

        goto label08;

     label07:
        $z19 = 0;

     label08:
        return $z19;

     label09:
        $r35 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig STRING>;

        $z17 = virtualinvoke $r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r35);

        if $z17 == 0 goto label12;

        $r36 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom get(int)>(0);

        $r37 = virtualinvoke $r36.<edu.mit.csail.sdg.alloy4compiler.sim.SimAtom: java.lang.String toString()>();

        $i3 = virtualinvoke $r37.<java.lang.String: int length()>();

        if $i3 <= 0 goto label10;

        $c4 = virtualinvoke $r37.<java.lang.String: char charAt(int)>(0);

        $i8 = (int) $c4;

        if $i8 != 34 goto label10;

        $z20 = 1;

        goto label11;

     label10:
        $z20 = 0;

     label11:
        return $z20;

     label12:
        $z21 = $r0 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        if $z21 == 0 goto label18;

        $r18 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) $r0;

        $r20 = $r18.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r19 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op ARROW>;

        if $r20 != $r19 goto label18;

        $r21 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) $r0;

        r43 = $r21.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r22 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) $r0;

        r23 = $r22.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r24 = virtualinvoke r43.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $i0 = virtualinvoke $r24.<edu.mit.csail.sdg.alloy4compiler.ast.Type: int arity()>();

        $r25 = virtualinvoke r23.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $i1 = virtualinvoke $r25.<edu.mit.csail.sdg.alloy4compiler.ast.Type: int arity()>();

        if $i0 > $i1 goto label15;

        $r28 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple head(int)>($i0);

        $z10 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean isIn(edu.mit.csail.sdg.alloy4compiler.sim.SimTuple,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r28, r43);

        if $z10 == 0 goto label13;

        $r29 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple tail(int)>($i1);

        $z11 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean isIn(edu.mit.csail.sdg.alloy4compiler.sim.SimTuple,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r29, r23);

        if $z11 == 0 goto label13;

        $z22 = 1;

        goto label14;

     label13:
        $z22 = 0;

     label14:
        return $z22;

     label15:
        $r26 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple tail(int)>($i1);

        $z8 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean isIn(edu.mit.csail.sdg.alloy4compiler.sim.SimTuple,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r26, r23);

        if $z8 == 0 goto label16;

        $r27 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple head(int)>($i0);

        $z9 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean isIn(edu.mit.csail.sdg.alloy4compiler.sim.SimTuple,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r27, r43);

        if $z9 == 0 goto label16;

        $z23 = 1;

        goto label17;

     label16:
        $z23 = 0;

     label17:
        return $z23;

     label18:
        $z1 = $r0 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        if $z1 == 0 goto label22;

        $r11 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) $r0;

        $r13 = $r11.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r12 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op PLUS>;

        if $r13 != $r12 goto label22;

        $r14 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) $r0;

        $r15 = $r14.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $z6 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean isIn(edu.mit.csail.sdg.alloy4compiler.sim.SimTuple,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r3, $r15);

        if $z6 != 0 goto label19;

        $r16 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) $r0;

        $r17 = $r16.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $z7 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean isIn(edu.mit.csail.sdg.alloy4compiler.sim.SimTuple,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r3, $r17);

        if $z7 == 0 goto label20;

     label19:
        $z24 = 1;

        goto label21;

     label20:
        $z24 = 0;

     label21:
        return $z24;

     label22:
        $z2 = $r0 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        if $z2 == 0 goto label25;

        $r4 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) $r0;

        $r6 = $r4.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r5 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op MINUS>;

        if $r6 != $r5 goto label25;

        $r7 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) $r0;

        $r8 = $r7.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $z4 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean isIn(edu.mit.csail.sdg.alloy4compiler.sim.SimTuple,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r3, $r8);

        if $z4 == 0 goto label23;

        $r9 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) $r0;

        $r10 = $r9.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $z5 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean isIn(edu.mit.csail.sdg.alloy4compiler.sim.SimTuple,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r3, $r10);

        if $z5 != 0 goto label23;

        $z25 = 1;

        goto label24;

     label23:
        $z25 = 0;

     label24:
        return $z25;

     label25:
        $r2 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r0);

        $z3 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: boolean has(edu.mit.csail.sdg.alloy4compiler.sim.SimTuple)>(r3);

        return $z3;
    }

    public boolean equal(edu.mit.csail.sdg.alloy4compiler.ast.Expr, edu.mit.csail.sdg.alloy4compiler.ast.Expr) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r1, $r2, $r3, $r4, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r5;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r7;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset $r8, $r9;

        r7 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r5 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $z0 = $r1.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean is_bool>;

        if $z0 == 0 goto label3;

        $z4 = virtualinvoke r7.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean cform(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r0);

        $z5 = virtualinvoke r7.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean cform(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r5);

        if $z4 != $z5 goto label1;

        $z6 = 1;

        goto label2;

     label1:
        $z6 = 0;

     label2:
        return $z6;

     label3:
        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $z1 = $r2.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean is_int>;

        if $z1 == 0 goto label6;

        $i3 = virtualinvoke r7.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r0);

        $i4 = virtualinvoke r7.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int cint(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r5);

        if $i3 != $i4 goto label4;

        $z7 = 1;

        goto label5;

     label4:
        $z7 = 0;

     label5:
        return $z7;

     label6:
        $r3 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $i0 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4compiler.ast.Type: int arity()>();

        if $i0 <= 0 goto label7;

        $r4 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $i1 = virtualinvoke $r4.<edu.mit.csail.sdg.alloy4compiler.ast.Type: int arity()>();

        $r6 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $i2 = virtualinvoke $r6.<edu.mit.csail.sdg.alloy4compiler.ast.Type: int arity()>();

        if $i1 == $i2 goto label8;

     label7:
        return 0;

     label8:
        $z2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r5);

        if $z2 == 0 goto label9;

        return 1;

     label9:
        $r8 = virtualinvoke r7.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r0);

        $r9 = virtualinvoke r7.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r5);

        $z3 = virtualinvoke $r8.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: boolean equals(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset)>($r9);

        return $z3;
    }

    public boolean isIn(edu.mit.csail.sdg.alloy4compiler.ast.Expr, edu.mit.csail.sdg.alloy4compiler.ast.Expr) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r1, $r2, $r4;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r3;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r6;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset $r7;
        int $i0, $i1, $i2;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r5;
        boolean $z0, $z1, $z2;

        r6 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $i0 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.Type: int arity()>();

        if $i0 <= 0 goto label1;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $i1 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.Type: int arity()>();

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $i2 = virtualinvoke $r4.<edu.mit.csail.sdg.alloy4compiler.ast.Type: int arity()>();

        if $i1 == $i2 goto label2;

     label1:
        return 0;

     label2:
        $r5 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig UNIV>;

        $z0 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r5);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $z1 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r3);

        if $z1 == 0 goto label4;

        return 1;

     label4:
        $r7 = virtualinvoke r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r0);

        $z2 = specialinvoke r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean isIn(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r7, r3);

        return $z2;
    }

    private boolean isIn(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset, edu.mit.csail.sdg.alloy4compiler.ast.Expr) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r0, $r15, $r16, $r17, $r18, $r19, $r20, r25, r26;
        byte $b1, $b3, $b5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary r27;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary $r22, $r24;
        long $l0, $l2, $l4;
        int $i6, $i7, $i8;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r23;
        java.util.Iterator $r28;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r3;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset r1, $r21;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r4;
        java.lang.Object $r2;

        r4 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset;

        r25 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r0 = virtualinvoke r25.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()>();

        r26 = $r0;

        $z0 = $r0 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        if $z0 == 0 goto label1;

        $i6 = $r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: int mult>;

        if $i6 == 0 goto label1;

        $r22 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) $r0;

        $r23 = $r22.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $z3 = $r23.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: boolean isArrow>;

        if $z3 == 0 goto label1;

        $r24 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) $r0;

        $z4 = specialinvoke r4.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean isInBinary(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset,edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary)>(r1, $r24);

        return $z4;

     label1:
        $z5 = $r0 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary;

        if $z5 == 0 goto label6;

        r27 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary) $r0;

        $r6 = r27.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r5 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op EXACTLYOF>;

        if $r6 != $r5 goto label2;

        $r19 = r27.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r20 = virtualinvoke $r19.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()>();

        $r21 = virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r20);

        $z2 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: boolean equals(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset)>($r21);

        return $z2;

     label2:
        $r8 = r27.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r7 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op ONEOF>;

        if $r8 != $r7 goto label3;

        $r18 = r27.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        r26 = virtualinvoke $r18.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()>();

        $l4 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: long longsize()>();

        $b5 = $l4 cmp 1L;

        if $b5 == 0 goto label6;

        return 0;

     label3:
        $r10 = r27.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r9 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op LONEOF>;

        if $r10 != $r9 goto label4;

        $r17 = r27.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        r26 = virtualinvoke $r17.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()>();

        $l2 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: long longsize()>();

        $b3 = $l2 cmp 1L;

        $i7 = (int) $b3;

        if $i7 <= 0 goto label6;

        return 0;

     label4:
        $r12 = r27.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r11 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op SOMEOF>;

        if $r12 != $r11 goto label5;

        $r16 = r27.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        r26 = virtualinvoke $r16.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()>();

        $l0 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: long longsize()>();

        $b1 = $l0 cmp 1L;

        $i8 = (int) $b1;

        if $i8 >= 0 goto label6;

        return 0;

     label5:
        $r14 = r27.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r13 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op SETOF>;

        if $r14 == $r13 goto label6;

        $r15 = r27.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        r26 = virtualinvoke $r15.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()>();

     label6:
        $r28 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: java.util.Iterator iterator()>();

     label7:
        $z6 = interfaceinvoke $r28.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label9;

        $r2 = interfaceinvoke $r28.<java.util.Iterator: java.lang.Object next()>();

        r3 = (edu.mit.csail.sdg.alloy4compiler.sim.SimTuple) $r2;

        $z1 = virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean isIn(edu.mit.csail.sdg.alloy4compiler.sim.SimTuple,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r3, r26);

        if $z1 != 0 goto label8;

        return 0;

     label8:
        goto label7;

     label9:
        return 1;
    }

    private boolean isInBinary(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset, edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom r19;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r4, $r20, $r24, $r26;
        byte $b3, $b5, $b7, $b11, $b13, $b15;
        int[] $r11, $r15;
        boolean $z0, $z1, $z2, $z3;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary r0;
        java.util.List $r16;
        long $l2, $l4, $l6, $l10, $l12, $l14;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r1, $r2, $r10, $r14;
        int $i0, $i1, $i8, $i9, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, $i24, $i25, $i26, $i27;
        java.util.Iterator $r6, $r22;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r23, r25;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r3;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset $r5, r8, $r9, $r13, $r21;
        java.lang.Object $r7, $r12, $r17, $r18;

        r3 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r8 := @parameter0: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset;

        r0 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op ISSEQ_ARROW_LONE>;

        if $r2 != $r1 goto label09;

        $r16 = virtualinvoke r8.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: java.util.List getAllAtoms(int)>(0);

        i22 = 0;

        r19 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimAtom: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom make(java.lang.String)>("0");

     label01:
        $i16 = interfaceinvoke $r16.<java.util.List: int size()>();

        if $i16 <= 0 goto label09;

        $i17 = interfaceinvoke $r16.<java.util.List: int size()>();

        i23 = 0;

     label02:
        if i23 < $i17 goto label03;

        return 0;

     label03:
        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i23);

        if r19 != $r17 goto label04;

        $i18 = $i17 - 1;

        $r18 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>($i18);

        interfaceinvoke $r16.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i23, $r18);

        $i19 = $i17 - 1;

        interfaceinvoke $r16.<java.util.List: java.lang.Object remove(int)>($i19);

        i22 = i22 + 1;

        goto label05;

     label04:
        i23 = i23 + 1;

        goto label02;

     label05:
        $i20 = interfaceinvoke $r16.<java.util.List: int size()>();

        if $i20 != 0 goto label06;

        goto label09;

     label06:
        if i22 < 0 goto label07;

        $i21 = r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: int maxseq>;

        if i22 < $i21 goto label08;

     label07:
        return 0;

     label08:
        r19 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimAtom: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom make(int)>(i22);

        goto label01;

     label09:
        $r20 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r21 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r20);

        $r22 = virtualinvoke $r21.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: java.util.Iterator iterator()>();

     label10:
        $z1 = interfaceinvoke $r22.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label16;

        $r12 = interfaceinvoke $r22.<java.util.Iterator: java.lang.Object next()>();

        r23 = (edu.mit.csail.sdg.alloy4compiler.sim.SimTuple) $r12;

        $r13 = virtualinvoke r8.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset beginWith(edu.mit.csail.sdg.alloy4compiler.sim.SimTuple)>(r23);

        $r15 = <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance$1: int[] $SwitchMap$edu$mit$csail$sdg$alloy4compiler$ast$ExprBinary$Op>;

        $r14 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $i8 = virtualinvoke $r14.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: int ordinal()>();

        $i9 = $r15[$i8];

        tableswitch($i9)
        {
            case 2: goto label11;
            case 3: goto label12;
            case 4: goto label13;
            case 5: goto label14;
            case 6: goto label11;
            case 7: goto label12;
            case 8: goto label13;
            case 9: goto label14;
            case 10: goto label11;
            case 11: goto label12;
            case 12: goto label13;
            case 13: goto label14;
            case 14: goto label11;
            case 15: goto label12;
            case 16: goto label13;
            case 17: goto label11;
            default: goto label14;
        };

     label11:
        $l14 = virtualinvoke $r13.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: long longsize()>();

        $b15 = $l14 cmp 1L;

        $i24 = (int) $b15;

        if $i24 <= 0 goto label14;

        return 0;

     label12:
        $l12 = virtualinvoke $r13.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: long longsize()>();

        $b13 = $l12 cmp 1L;

        if $b13 == 0 goto label14;

        return 0;

     label13:
        $l10 = virtualinvoke $r13.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: long longsize()>();

        $b11 = $l10 cmp 1L;

        $i25 = (int) $b11;

        if $i25 >= 0 goto label14;

        return 0;

     label14:
        $r24 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $z2 = specialinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean isIn(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r13, $r24);

        if $z2 != 0 goto label15;

        return 0;

     label15:
        goto label10;

     label16:
        $r4 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r5 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset cset(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r4);

        $r6 = virtualinvoke $r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: java.util.Iterator iterator()>();

     label17:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label23;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r25 = (edu.mit.csail.sdg.alloy4compiler.sim.SimTuple) $r7;

        $r9 = virtualinvoke r8.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset endWith(edu.mit.csail.sdg.alloy4compiler.sim.SimTuple)>(r25);

        $r11 = <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance$1: int[] $SwitchMap$edu$mit$csail$sdg$alloy4compiler$ast$ExprBinary$Op>;

        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $i0 = virtualinvoke $r10.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: int ordinal()>();

        $i1 = $r11[$i0];

        tableswitch($i1)
        {
            case 5: goto label18;
            case 6: goto label18;
            case 7: goto label18;
            case 8: goto label18;
            case 9: goto label19;
            case 10: goto label19;
            case 11: goto label19;
            case 12: goto label19;
            case 13: goto label20;
            case 14: goto label20;
            case 15: goto label20;
            case 16: goto label20;
            default: goto label21;
        };

     label18:
        $l6 = virtualinvoke $r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: long longsize()>();

        $b7 = $l6 cmp 1L;

        $i26 = (int) $b7;

        if $i26 <= 0 goto label21;

        return 0;

     label19:
        $l4 = virtualinvoke $r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: long longsize()>();

        $b5 = $l4 cmp 1L;

        if $b5 == 0 goto label21;

        return 0;

     label20:
        $l2 = virtualinvoke $r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: long longsize()>();

        $b3 = $l2 cmp 1L;

        $i27 = (int) $b3;

        if $i27 >= 0 goto label21;

        return 0;

     label21:
        $r26 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $z3 = specialinvoke r3.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean isIn(edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r9, $r26);

        if $z3 != 0 goto label22;

        return 0;

     label22:
        goto label17;

     label23:
        return 1;
    }

    public java.lang.String validate(edu.mit.csail.sdg.alloy4compiler.ast.Module)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r11, $r14, $r27, $r28, $r29, $r30, $r34, $r36, $r37, $r38, $r39, $r79, $r80, $r83, $r85, $r86, $r87, $r88, $r90, $r93, $r104, $r105, $r106, $r109, $r133, r194, r198, r207;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprHasName $r35, $r77, $r78, $r82, $r84, $r103, r203, r206;
        edu.mit.csail.sdg.alloy4.Pos $r16, $r17, $r18, $r71, $r197, $r205;
        int $i0, $i1, $i2, $i3, $i10, $i11;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49;
        java.lang.String $r54, $r59, $r64, $r69, $r124, $r135, $r143, $r153, $r162, $r169, $r175, $r180, $r185, $r189, $r191, r210, r213, $r217;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field $r40, $r41, $r101, $r111, $r129;
        java.util.List $r113;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary r209;
        edu.mit.csail.sdg.alloy4.Err $r186;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r9;
        edu.mit.csail.sdg.alloy4.Pair r212;
        byte $b5, $b7, $b9;
        edu.mit.csail.sdg.alloy4.SafeList $r3, $r6, $r20, $r22, $r137, $r200;
        java.lang.StringBuilder $r51, $r52, $r53, $r56, $r57, $r58, $r61, $r62, $r63, $r66, $r67, $r68, $r118, $r119, $r120, $r121, $r122, $r123, $r126, $r127, $r128, $r131, $r132, $r134, $r140, $r141, $r142, $r148, $r149, $r150, $r152, $r157, $r158, $r159, $r161, $r164, $r165, $r166, $r168, $r173, $r174, $r178, $r179, $r183, $r184, $r188, $r190, $r215, $r216, $r218, $r219, $r220, $r221, $r222, $r223, $r224, $r225, $r226, $r227, $r228, $r229, $r230, $r231, $r232;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig r193;
        long $l4, $l6, $l8;
        edu.mit.csail.sdg.alloy4.ConstList $r1, $r72, $r94, $r95, $r98, $r154, $r160, $r167;
        edu.mit.csail.sdg.alloy4compiler.ast.Decl $r26, $r33, $r75, $r76, $r81, $r92, $r102, $r108, r202, r204;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList $r96;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom r116;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig r192, r195;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r31, $r32;
        java.lang.Object $r5, $r8, $r10, $r12, $r13, $r15, $r24, $r70, $r74, $r97, $r100, $r115, $r144, $r170;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary r208;
        edu.mit.csail.sdg.alloy4compiler.ast.Module r0, r211;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset $r110, $r112, $r130, $r171, $r176, $r181;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r19, $r136, $r145, $r146, $r151, r196, r199;
        edu.mit.csail.sdg.alloy4compiler.ast.Decl[] $r25, $r89, $r91, $r107;
        java.util.Iterator $r2, $r4, $r7, $r21, $r23, $r73, $r99, $r114, $r138, $r155, $r201;

        r9 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Module;

     label01:
        $r1 = interfaceinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Module: edu.mit.csail.sdg.alloy4.ConstList getAllReachableSigs()>();

        $r2 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.ConstList: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label51;

        $r15 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r192 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r15;

        $z7 = r192.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean builtin>;

        if $z7 != 0 goto label50;

        $r16 = r192.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isLone>;

        if $r16 == null goto label04;

        $r181 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset visit(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r192);

        $l8 = virtualinvoke $r181.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: long longsize()>();

        $b9 = $l8 cmp 1L;

        $i10 = (int) $b9;

        if $i10 <= 0 goto label04;

        $r218 = new java.lang.StringBuilder;

        specialinvoke $r218.<java.lang.StringBuilder: void <init>()>();

        $r183 = virtualinvoke $r218.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There can be at most one ");

        $r184 = virtualinvoke $r183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r192);

        $r185 = virtualinvoke $r184.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        return $r185;

     label04:
        $r17 = r192.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isOne>;

        if $r17 == null goto label06;

        $r176 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset visit(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r192);

        $l6 = virtualinvoke $r176.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: long longsize()>();

        $b7 = $l6 cmp 1L;

        if $b7 == 0 goto label06;

        $r219 = new java.lang.StringBuilder;

        specialinvoke $r219.<java.lang.StringBuilder: void <init>()>();

        $r178 = virtualinvoke $r219.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There must be exactly one ");

        $r179 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r192);

        $r180 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        return $r180;

     label06:
        $r18 = r192.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isSome>;

        if $r18 == null goto label08;

        $r171 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset visit(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r192);

        $l4 = virtualinvoke $r171.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: long longsize()>();

        $b5 = $l4 cmp 1L;

        $i11 = (int) $b5;

        if $i11 >= 0 goto label08;

        $r220 = new java.lang.StringBuilder;

        specialinvoke $r220.<java.lang.StringBuilder: void <init>()>();

        $r173 = virtualinvoke $r220.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There must be at least one ");

        $r174 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r192);

        $r175 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        return $r175;

     label08:
        $z8 = r192 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig;

        if $z8 == 0 goto label15;

        r193 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig) r192;

        r194 = null;

        $r154 = r193.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig: edu.mit.csail.sdg.alloy4.ConstList parents>;

        $r155 = virtualinvoke $r154.<edu.mit.csail.sdg.alloy4.ConstList: java.util.Iterator iterator()>();

     label09:
        $z27 = interfaceinvoke $r155.<java.util.Iterator: boolean hasNext()>();

        if $z27 == 0 goto label10;

        $r170 = interfaceinvoke $r155.<java.util.Iterator: java.lang.Object next()>();

        r195 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r170;

        r194 = virtualinvoke r195.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Expr plus(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r194);

        goto label09;

     label10:
        $z28 = r193.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig: boolean exact>;

        if $z28 == 0 goto label12;

        $z30 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean equal(edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r192, r194);

        if $z30 != 0 goto label14;

        $r221 = new java.lang.StringBuilder;

        specialinvoke $r221.<java.lang.StringBuilder: void <init>()>();

        $r164 = virtualinvoke $r221.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sig ");

        $r165 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r192);

        $r166 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be equal to the union of its parents ");

        $r167 = r193.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig: edu.mit.csail.sdg.alloy4.ConstList parents>;

        $r168 = virtualinvoke $r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r167);

        $r169 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        return $r169;

     label12:
        $z29 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean isIn(edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r192, r194);

        if $z29 != 0 goto label14;

        $r222 = new java.lang.StringBuilder;

        specialinvoke $r222.<java.lang.StringBuilder: void <init>()>();

        $r157 = virtualinvoke $r222.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sig ");

        $r158 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r192);

        $r159 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be equal or subset of its parents ");

        $r160 = r193.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig: edu.mit.csail.sdg.alloy4.ConstList parents>;

        $r161 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r160);

        $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.String toString()>();

     label13:
        return $r162;

     label14:
        goto label17;

     label15:
        $r19 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig UNIV>;

        if r192 == $r19 goto label17;

        $r145 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig NONE>;

        if r192 == $r145 goto label17;

        r196 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) r192;

        $r146 = r196.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig parent>;

        $z26 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean isIn(edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r192, $r146);

        if $z26 != 0 goto label17;

        $r223 = new java.lang.StringBuilder;

        specialinvoke $r223.<java.lang.StringBuilder: void <init>()>();

        $r148 = virtualinvoke $r223.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sig ");

        $r149 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r192);

        $r150 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be equal or subset of its parent ");

        $r151 = r196.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig parent>;

        $r152 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r151);

        $r153 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.String toString()>();

     label16:
        return $r153;

     label17:
        $r197 = r192.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isAbstract>;

        if $r197 == null goto label21;

        r198 = null;

        $r136 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) r192;

        $r137 = virtualinvoke $r136.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4.SafeList children()>();

        $r138 = virtualinvoke $r137.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

     label18:
        $z24 = interfaceinvoke $r138.<java.util.Iterator: boolean hasNext()>();

        if $z24 == 0 goto label19;

        $r144 = interfaceinvoke $r138.<java.util.Iterator: java.lang.Object next()>();

        r199 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r144;

        r198 = virtualinvoke r199.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Expr plus(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r198);

        goto label18;

     label19:
        if r198 == null goto label21;

        $z25 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean equal(edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r192, r198);

        if $z25 != 0 goto label21;

        $r224 = new java.lang.StringBuilder;

        specialinvoke $r224.<java.lang.StringBuilder: void <init>()>();

        $r140 = virtualinvoke $r224.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Abstract sig ");

        $r141 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r192);

        $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be equal to the union of its subsigs");

        $r143 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.String toString()>();

     label20:
        return $r143;

     label21:
        $r200 = virtualinvoke r192.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFieldDecls()>();

        $r201 = virtualinvoke $r200.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

     label22:
        $z31 = interfaceinvoke $r201.<java.util.Iterator: boolean hasNext()>();

        if $z31 == 0 goto label31;

        $r97 = interfaceinvoke $r201.<java.util.Iterator: java.lang.Object next()>();

        r202 = (edu.mit.csail.sdg.alloy4compiler.ast.Decl) $r97;

        $r98 = r202.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4.ConstList names>;

        $r99 = virtualinvoke $r98.<edu.mit.csail.sdg.alloy4.ConstList: java.util.Iterator iterator()>();

     label23:
        $z19 = interfaceinvoke $r99.<java.util.Iterator: boolean hasNext()>();

        if $z19 == 0 goto label30;

        $r100 = interfaceinvoke $r99.<java.util.Iterator: java.lang.Object next()>();

        r203 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprHasName) $r100;

        $r101 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field) r203;

        $z20 = $r101.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: boolean defined>;

        if $z20 != 0 goto label29;

        $r102 = r192.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Decl decl>;

        $r103 = virtualinvoke $r102.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4compiler.ast.ExprHasName get()>();

        $r104 = virtualinvoke $r103.<edu.mit.csail.sdg.alloy4compiler.ast.ExprHasName: edu.mit.csail.sdg.alloy4compiler.ast.Expr join(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r203);

        $r105 = r202.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4compiler.ast.Expr expr>;

        $r106 = virtualinvoke $r104.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr in(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r105);

        $r108 = r192.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Decl decl>;

        $r107 = newarray (edu.mit.csail.sdg.alloy4compiler.ast.Decl)[0];

        $r109 = virtualinvoke $r106.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr forAll(edu.mit.csail.sdg.alloy4compiler.ast.Decl,edu.mit.csail.sdg.alloy4compiler.ast.Decl[])>($r108, $r107);

        $z21 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean cform(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r109);

        if $z21 != 0 goto label25;

        $r225 = new java.lang.StringBuilder;

        specialinvoke $r225.<java.lang.StringBuilder: void <init>()>();

        $r126 = virtualinvoke $r225.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Field ");

        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r203);

        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" violated its bound: ");

        $r129 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field) r203;

        $r130 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset visit(edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field)>($r129);

        $r131 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r130);

        $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r133 = r202.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4compiler.ast.Expr expr>;

        $r134 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r133);

        $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.String toString()>();

     label24:
        return $r135;

     label25:
        $r110 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset visit(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r192);

        $r111 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field) r203;

        $r112 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset visit(edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field)>($r111);

        $r113 = virtualinvoke $r112.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: java.util.List getAllAtoms(int)>(0);

        $r114 = interfaceinvoke $r113.<java.util.List: java.util.Iterator iterator()>();

     label26:
        $z22 = interfaceinvoke $r114.<java.util.Iterator: boolean hasNext()>();

        if $z22 == 0 goto label29;

        $r115 = interfaceinvoke $r114.<java.util.Iterator: java.lang.Object next()>();

        r116 = (edu.mit.csail.sdg.alloy4compiler.sim.SimAtom) $r115;

        $z23 = virtualinvoke $r110.<edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset: boolean has(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)>(r116);

        if $z23 != 0 goto label28;

        $r226 = new java.lang.StringBuilder;

        specialinvoke $r226.<java.lang.StringBuilder: void <init>()>();

        $r118 = virtualinvoke $r226.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Field ");

        $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r203);

        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" first column has extra atom: ");

        $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r112);

        $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not in ");

        $r123 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r110);

        $r124 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.String toString()>();

     label27:
        return $r124;

     label28:
        goto label26;

     label29:
        goto label23;

     label30:
        goto label22;

     label31:
        $r20 = virtualinvoke r192.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFieldDecls()>();

        $r21 = virtualinvoke $r20.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

     label32:
        $z9 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label39;

        $r70 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r204 = (edu.mit.csail.sdg.alloy4compiler.ast.Decl) $r70;

        $r71 = r204.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4.Pos disjoint>;

        if $r71 == null goto label34;

        $r94 = r204.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4.ConstList names>;

        $i3 = virtualinvoke $r94.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        if $i3 <= 0 goto label34;

        $r95 = r204.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4.ConstList names>;

        $r96 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4compiler.ast.ExprList makeDISJOINT(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,java.util.List)>(null, null, $r95);

        $z18 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean cform(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r96);

        if $z18 != 0 goto label34;

     label33:
        return "Fields must be disjoint.";

     label34:
        $r205 = r204.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4.Pos disjoint2>;

        if $r205 == null goto label38;

        $r72 = r204.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4.ConstList names>;

        $r73 = virtualinvoke $r72.<edu.mit.csail.sdg.alloy4.ConstList: java.util.Iterator iterator()>();

     label35:
        $z16 = interfaceinvoke $r73.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label38;

        $r74 = interfaceinvoke $r73.<java.util.Iterator: java.lang.Object next()>();

        r206 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprHasName) $r74;

        $r75 = virtualinvoke r192.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Decl oneOf(java.lang.String)>("that");

        $r76 = r192.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Decl decl>;

        $r77 = virtualinvoke $r76.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4compiler.ast.ExprHasName get()>();

        $r78 = virtualinvoke $r75.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4compiler.ast.ExprHasName get()>();

        $r79 = virtualinvoke $r77.<edu.mit.csail.sdg.alloy4compiler.ast.ExprHasName: edu.mit.csail.sdg.alloy4compiler.ast.Expr equal(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r78);

        $r80 = virtualinvoke $r79.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr not()>();

        $r81 = r192.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Decl decl>;

        $r82 = virtualinvoke $r81.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4compiler.ast.ExprHasName get()>();

        $r83 = virtualinvoke $r82.<edu.mit.csail.sdg.alloy4compiler.ast.ExprHasName: edu.mit.csail.sdg.alloy4compiler.ast.Expr join(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r206);

        $r84 = virtualinvoke $r75.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4compiler.ast.ExprHasName get()>();

        $r85 = virtualinvoke $r84.<edu.mit.csail.sdg.alloy4compiler.ast.ExprHasName: edu.mit.csail.sdg.alloy4compiler.ast.Expr join(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r206);

        $r86 = virtualinvoke $r83.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr intersect(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r85);

        $r87 = virtualinvoke $r86.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr no()>();

        $r88 = virtualinvoke $r80.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr implies(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r87);

        $r89 = newarray (edu.mit.csail.sdg.alloy4compiler.ast.Decl)[0];

        $r90 = virtualinvoke $r88.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr forAll(edu.mit.csail.sdg.alloy4compiler.ast.Decl,edu.mit.csail.sdg.alloy4compiler.ast.Decl[])>($r75, $r89);

        $r92 = r192.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Decl decl>;

        $r91 = newarray (edu.mit.csail.sdg.alloy4compiler.ast.Decl)[0];

        $r93 = virtualinvoke $r90.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr forAll(edu.mit.csail.sdg.alloy4compiler.ast.Decl,edu.mit.csail.sdg.alloy4compiler.ast.Decl[])>($r92, $r91);

        $z17 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean cform(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r93);

        if $z17 != 0 goto label37;

     label36:
        return "Fields must be disjoint.";

     label37:
        goto label35;

     label38:
        goto label32;

     label39:
        $r22 = virtualinvoke r192.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFacts()>();

        $r23 = virtualinvoke $r22.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

     label40:
        $z10 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label50;

        $r24 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        r207 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r24;

        $r26 = r192.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Decl decl>;

        $r25 = newarray (edu.mit.csail.sdg.alloy4compiler.ast.Decl)[0];

        $r27 = virtualinvoke r207.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr forAll(edu.mit.csail.sdg.alloy4compiler.ast.Decl,edu.mit.csail.sdg.alloy4compiler.ast.Decl[])>($r26, $r25);

        $z11 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean cform(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r27);

        if $z11 != 0 goto label49;

        $r28 = virtualinvoke r207.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()>();

        $z12 = $r28 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary;

        if $z12 == 0 goto label48;

        r208 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary) $r28;

        $r29 = r208.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r30 = virtualinvoke $r29.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()>();

        $z13 = $r30 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        if $z13 == 0 goto label48;

        r209 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) $r30;

        $r32 = r209.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r31 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op JOIN>;

        if $r32 != $r31 goto label48;

        $r34 = r209.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r33 = r192.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Decl decl>;

        $r35 = virtualinvoke $r33.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4compiler.ast.ExprHasName get()>();

        $z14 = virtualinvoke $r34.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r35);

        if $z14 == 0 goto label48;

        $r36 = r209.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r37 = virtualinvoke $r36.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()>();

        $z15 = $r37 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field;

        if $z15 == 0 goto label48;

        $r38 = r209.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r39 = virtualinvoke $r38.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()>();

        $r40 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field) $r39;

        $r41 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field) $r40;

        r210 = $r41.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: java.lang.String label>;

        $r43 = r208.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r42 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op SOME>;

        if $r43 != $r42 goto label42;

        $r227 = new java.lang.StringBuilder;

        specialinvoke $r227.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r227.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The ");

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r210);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be empty.");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

     label41:
        return $r69;

     label42:
        $r45 = r208.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r44 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op LONE>;

        if $r45 != $r44 goto label44;

        $r228 = new java.lang.StringBuilder;

        specialinvoke $r228.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r228.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The ");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r210);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot have more than one value.");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

     label43:
        return $r64;

     label44:
        $r47 = r208.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r46 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op ONE>;

        if $r47 != $r46 goto label46;

        $r229 = new java.lang.StringBuilder;

        specialinvoke $r229.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r229.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r210);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must have exactly one value.");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

     label45:
        return $r59;

     label46:
        $r49 = r208.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r48 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NO>;

        if $r49 != $r48 goto label48;

        $r230 = new java.lang.StringBuilder;

        specialinvoke $r230.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r230.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The ");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r210);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be empty.");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

     label47:
        return $r54;

     label48:
        return "Cannot violate a consistency constraint";

     label49:
        goto label40;

     label50:
        goto label02;

     label51:
        $r3 = interfaceinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Module: edu.mit.csail.sdg.alloy4.SafeList getAllReachableModules()>();

        $r4 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

     label52:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label59;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r211 = (edu.mit.csail.sdg.alloy4compiler.ast.Module) $r5;

        $r6 = interfaceinvoke r211.<edu.mit.csail.sdg.alloy4compiler.ast.Module: edu.mit.csail.sdg.alloy4.SafeList getAllFacts()>();

        $r7 = virtualinvoke $r6.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

     label53:
        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label58;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r212 = (edu.mit.csail.sdg.alloy4.Pair) $r8;

        $r10 = r212.<edu.mit.csail.sdg.alloy4.Pair: java.lang.Object b>;

        $r11 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r10;

        $z3 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: boolean cform(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r11);

        if $z3 != 0 goto label57;

        $r12 = r212.<edu.mit.csail.sdg.alloy4.Pair: java.lang.Object a>;

        r213 = (java.lang.String) $r12;

        $z4 = virtualinvoke r213.<java.lang.String: boolean matches(java.lang.String)>("^fact\\$[0-9][0-9]*");

        if $z4 == 0 goto label54;

        $r13 = r212.<edu.mit.csail.sdg.alloy4.Pair: java.lang.Object b>;

        $r14 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r13;

        r213 = virtualinvoke $r14.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: java.lang.String toString()>();

     label54:
        $i0 = virtualinvoke r213.<java.lang.String: int length()>();

        if $i0 < 2 goto label55;

        $z5 = virtualinvoke r213.<java.lang.String: boolean startsWith(java.lang.String)>("\"");

        if $z5 == 0 goto label55;

        $z6 = virtualinvoke r213.<java.lang.String: boolean endsWith(java.lang.String)>("\"");

        if $z6 == 0 goto label55;

        $i1 = virtualinvoke r213.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        r213 = virtualinvoke r213.<java.lang.String: java.lang.String substring(int,int)>(1, $i2);

     label55:
        $r231 = new java.lang.StringBuilder;

        specialinvoke $r231.<java.lang.StringBuilder: void <init>()>();

        $r215 = virtualinvoke $r231.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Violation: ");

        $r216 = virtualinvoke $r215.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r213);

        $r217 = virtualinvoke $r216.<java.lang.StringBuilder: java.lang.String toString()>();

     label56:
        return $r217;

     label57:
        goto label53;

     label58:
        goto label52;

     label59:
        return "";

     label60:
        $r186 := @caughtexception;

        $r232 = new java.lang.StringBuilder;

        specialinvoke $r232.<java.lang.StringBuilder: void <init>()>();

        $r188 = virtualinvoke $r232.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An internal error has occured:\n");

        $r189 = virtualinvoke $r186.<edu.mit.csail.sdg.alloy4.Err: java.lang.String dump()>();

        $r190 = virtualinvoke $r188.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r189);

        $r191 = virtualinvoke $r190.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r191;

        catch edu.mit.csail.sdg.alloy4.Err from label01 to label03 with label60;
        catch edu.mit.csail.sdg.alloy4.Err from label04 to label05 with label60;
        catch edu.mit.csail.sdg.alloy4.Err from label06 to label07 with label60;
        catch edu.mit.csail.sdg.alloy4.Err from label08 to label11 with label60;
        catch edu.mit.csail.sdg.alloy4.Err from label12 to label13 with label60;
        catch edu.mit.csail.sdg.alloy4.Err from label14 to label16 with label60;
        catch edu.mit.csail.sdg.alloy4.Err from label17 to label20 with label60;
        catch edu.mit.csail.sdg.alloy4.Err from label21 to label24 with label60;
        catch edu.mit.csail.sdg.alloy4.Err from label25 to label27 with label60;
        catch edu.mit.csail.sdg.alloy4.Err from label28 to label33 with label60;
        catch edu.mit.csail.sdg.alloy4.Err from label34 to label36 with label60;
        catch edu.mit.csail.sdg.alloy4.Err from label37 to label41 with label60;
        catch edu.mit.csail.sdg.alloy4.Err from label42 to label43 with label60;
        catch edu.mit.csail.sdg.alloy4.Err from label44 to label45 with label60;
        catch edu.mit.csail.sdg.alloy4.Err from label46 to label47 with label60;
        catch edu.mit.csail.sdg.alloy4.Err from label49 to label56 with label60;
        catch edu.mit.csail.sdg.alloy4.Err from label57 to label59 with label60;
    }

    public volatile java.lang.Object visit(edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field r1;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r0;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset $r2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset visit(edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visit(edu.mit.csail.sdg.alloy4compiler.ast.Sig) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Sig r1;
        edu.mit.csail.sdg.alloy4compiler.sim.SimInstance r0;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset $r2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimInstance;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Sig;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: edu.mit.csail.sdg.alloy4compiler.sim.SimTupleset visit(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        <edu.mit.csail.sdg.alloy4compiler.sim.SimInstance: byte[] readcache> = null;

        return;
    }
}
