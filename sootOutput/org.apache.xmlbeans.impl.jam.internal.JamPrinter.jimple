public class org.apache.xmlbeans.impl.jam.internal.JamPrinter extends java.lang.Object
{
    private static final java.lang.String INDENT;

    public static org.apache.xmlbeans.impl.jam.internal.JamPrinter newInstance()
    {
        org.apache.xmlbeans.impl.jam.internal.JamPrinter $r0;

        $r0 = new org.apache.xmlbeans.impl.jam.internal.JamPrinter;

        specialinvoke $r0.<org.apache.xmlbeans.impl.jam.internal.JamPrinter: void <init>()>();

        return $r0;
    }

    private void <init>()
    {
        org.apache.xmlbeans.impl.jam.internal.JamPrinter r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.JamPrinter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void print(org.apache.xmlbeans.impl.jam.JElement, java.io.PrintWriter)
    {
        java.io.PrintWriter r2;
        org.apache.xmlbeans.impl.jam.internal.JamPrinter r0;
        org.apache.xmlbeans.impl.jam.JElement r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.JamPrinter;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.JElement;

        r2 := @parameter1: java.io.PrintWriter;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.JamPrinter: void print(org.apache.xmlbeans.impl.jam.JElement,int,java.io.PrintWriter)>(r1, 0, r2);

        return;
    }

    public void print(org.apache.xmlbeans.impl.jam.JamClassIterator, java.io.PrintWriter)
    {
        java.io.PrintWriter r2;
        org.apache.xmlbeans.impl.jam.JamClassIterator r0;
        java.lang.String $r3;
        org.apache.xmlbeans.impl.jam.JClass $r1;
        org.apache.xmlbeans.impl.jam.internal.JamPrinter r4;
        boolean $z0;

        r4 := @this: org.apache.xmlbeans.impl.jam.internal.JamPrinter;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.JamClassIterator;

        r2 := @parameter1: java.io.PrintWriter;

     label1:
        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.JamClassIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.JamClassIterator: org.apache.xmlbeans.impl.jam.JClass nextClass()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("------------------------------");

        $r3 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.jam.JClass: java.lang.String getQualifiedName()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("------------------------------");

        virtualinvoke r4.<org.apache.xmlbeans.impl.jam.internal.JamPrinter: void print(org.apache.xmlbeans.impl.jam.JElement,java.io.PrintWriter)>($r1, r2);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        goto label1;

     label2:
        return;
    }

    private void print(org.apache.xmlbeans.impl.jam.JElement, int, java.io.PrintWriter)
    {
        java.io.PrintWriter r1;
        org.apache.xmlbeans.impl.jam.JClass $r6;
        org.apache.xmlbeans.impl.jam.internal.JamPrinter r0;
        org.apache.xmlbeans.impl.jam.JElement r2;
        int i0;
        java.lang.String $r3, $r4, $r7, $r8;
        org.apache.xmlbeans.impl.jam.JMethod $r5;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.JamPrinter;

        r2 := @parameter0: org.apache.xmlbeans.impl.jam.JElement;

        i0 := @parameter1: int;

        r1 := @parameter2: java.io.PrintWriter;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.JamPrinter: void indent(int,java.io.PrintWriter)>(i0, r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("[");

        $r3 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.JamPrinter: java.lang.String getTypeKey(java.lang.Object)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("] ");

        $z0 = r2 instanceof org.apache.xmlbeans.impl.jam.JMethod;

        if $z0 == 0 goto label1;

        $r5 = (org.apache.xmlbeans.impl.jam.JMethod) r2;

        $r6 = interfaceinvoke $r5.<org.apache.xmlbeans.impl.jam.JMethod: org.apache.xmlbeans.impl.jam.JClass getReturnType()>();

        $r7 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.jam.JClass: java.lang.String getFieldDescriptor()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r7);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $r8 = interfaceinvoke r2.<org.apache.xmlbeans.impl.jam.JElement: java.lang.String getSimpleName()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        goto label2;

     label1:
        $r4 = interfaceinvoke r2.<org.apache.xmlbeans.impl.jam.JElement: java.lang.String getSimpleName()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

     label2:
        return;
    }

    private void print(org.apache.xmlbeans.impl.jam.JAnnotation[], int, java.io.PrintWriter)
    {
        java.io.PrintWriter r2;
        org.apache.xmlbeans.impl.jam.JAnnotation[] r0;
        org.apache.xmlbeans.impl.jam.JAnnotation $r3, $r5;
        org.apache.xmlbeans.impl.jam.internal.JamPrinter r1;
        int $i0, i1, i2;
        java.lang.String $r4, $r6;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.JamPrinter;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.JAnnotation[];

        i1 := @parameter1: int;

        r2 := @parameter2: java.io.PrintWriter;

        i2 = 0;

     label1:
        $i0 = lengthof r0;

        if i2 >= $i0 goto label2;

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.internal.JamPrinter: void indent(int,java.io.PrintWriter)>(i1, r2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("<");

        $r3 = r0[i2];

        $r4 = specialinvoke r1.<org.apache.xmlbeans.impl.jam.internal.JamPrinter: java.lang.String getTypeKey(java.lang.Object)>($r3);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r4);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("> ");

        $r5 = r0[i2];

        $r6 = interfaceinvoke $r5.<org.apache.xmlbeans.impl.jam.JAnnotation: java.lang.String getSimpleName()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r6);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private void indent(int, java.io.PrintWriter)
    {
        java.io.PrintWriter r0;
        int i0, i1;
        org.apache.xmlbeans.impl.jam.internal.JamPrinter r1;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.JamPrinter;

        i0 := @parameter0: int;

        r0 := @parameter1: java.io.PrintWriter;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private java.lang.String getTypeKey(java.lang.Object)
    {
        org.apache.xmlbeans.impl.jam.internal.JamPrinter r3;
        int $i0, $i1, $i2, $i3, $i5;
        java.lang.Object r0;
        java.lang.Class $r1;
        java.lang.String $r2, r4;

        r3 := @this: org.apache.xmlbeans.impl.jam.internal.JamPrinter;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return "[?UNKNOWN!]";

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        r4 = $r2;

        $i0 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        $i5 = (int) -1;

        if $i0 == $i5 goto label2;

        $i1 = $i0 + 1;

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label2;

        $i3 = $i0 + 1;

        r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i3);

     label2:
        return r4;
    }

    private static org.apache.xmlbeans.impl.jam.JElement[] getChildrenFor(org.apache.xmlbeans.impl.jam.JElement)
    {
        org.apache.xmlbeans.impl.jam.JConstructor[] $r15;
        org.apache.xmlbeans.impl.jam.JMethod[] $r12;
        java.util.ArrayList $r0;
        org.apache.xmlbeans.impl.jam.JConstructor $r5;
        int $i0;
        org.apache.xmlbeans.impl.jam.JClass[] $r18;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.jam.JElement[] $r20;
        org.apache.xmlbeans.impl.jam.JParameter[] $r3, $r6;
        org.apache.xmlbeans.impl.jam.JClass $r8, $r11, $r14, $r17;
        org.apache.xmlbeans.impl.jam.JField[] $r9;
        java.util.List $r4, $r7, $r10, $r13, $r16, $r19;
        org.apache.xmlbeans.impl.jam.JElement r1;
        org.apache.xmlbeans.impl.jam.JMethod $r2;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.JElement;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $z0 = r1 instanceof org.apache.xmlbeans.impl.jam.JClass;

        if $z0 == 0 goto label1;

        $r8 = (org.apache.xmlbeans.impl.jam.JClass) r1;

        $r9 = interfaceinvoke $r8.<org.apache.xmlbeans.impl.jam.JClass: org.apache.xmlbeans.impl.jam.JField[] getDeclaredFields()>();

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        interfaceinvoke $r0.<java.util.Collection: boolean addAll(java.util.Collection)>($r10);

        $r11 = (org.apache.xmlbeans.impl.jam.JClass) r1;

        $r12 = interfaceinvoke $r11.<org.apache.xmlbeans.impl.jam.JClass: org.apache.xmlbeans.impl.jam.JMethod[] getDeclaredMethods()>();

        $r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r12);

        interfaceinvoke $r0.<java.util.Collection: boolean addAll(java.util.Collection)>($r13);

        $r14 = (org.apache.xmlbeans.impl.jam.JClass) r1;

        $r15 = interfaceinvoke $r14.<org.apache.xmlbeans.impl.jam.JClass: org.apache.xmlbeans.impl.jam.JConstructor[] getConstructors()>();

        $r16 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r15);

        interfaceinvoke $r0.<java.util.Collection: boolean addAll(java.util.Collection)>($r16);

        $r17 = (org.apache.xmlbeans.impl.jam.JClass) r1;

        $r18 = interfaceinvoke $r17.<org.apache.xmlbeans.impl.jam.JClass: org.apache.xmlbeans.impl.jam.JClass[] getClasses()>();

        $r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r18);

        interfaceinvoke $r0.<java.util.Collection: boolean addAll(java.util.Collection)>($r19);

        goto label3;

     label1:
        $z1 = r1 instanceof org.apache.xmlbeans.impl.jam.JConstructor;

        if $z1 == 0 goto label2;

        $r5 = (org.apache.xmlbeans.impl.jam.JConstructor) r1;

        $r6 = interfaceinvoke $r5.<org.apache.xmlbeans.impl.jam.JConstructor: org.apache.xmlbeans.impl.jam.JParameter[] getParameters()>();

        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r6);

        interfaceinvoke $r0.<java.util.Collection: boolean addAll(java.util.Collection)>($r7);

        goto label3;

     label2:
        $z2 = r1 instanceof org.apache.xmlbeans.impl.jam.JMethod;

        if $z2 == 0 goto label3;

        $r2 = (org.apache.xmlbeans.impl.jam.JMethod) r1;

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.jam.JMethod: org.apache.xmlbeans.impl.jam.JParameter[] getParameters()>();

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        interfaceinvoke $r0.<java.util.Collection: boolean addAll(java.util.Collection)>($r4);

     label3:
        $i0 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        $r20 = newarray (org.apache.xmlbeans.impl.jam.JElement)[$i0];

        interfaceinvoke $r0.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r20);

        return $r20;
    }

    public static void <clinit>()
    {
        <org.apache.xmlbeans.impl.jam.internal.JamPrinter: java.lang.String INDENT> = "  ";

        return;
    }
}
