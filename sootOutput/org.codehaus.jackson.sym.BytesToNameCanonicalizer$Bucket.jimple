final class org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket extends java.lang.Object
{
    final org.codehaus.jackson.sym.Name mName;
    final org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket mNext;

    void <init>(org.codehaus.jackson.sym.Name, org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket)
    {
        org.codehaus.jackson.sym.Name r1;
        org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket r0, r2;

        r0 := @this: org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket;

        r1 := @parameter0: org.codehaus.jackson.sym.Name;

        r2 := @parameter1: org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket: org.codehaus.jackson.sym.Name mName> = r1;

        r0.<org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket: org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket mNext> = r2;

        return;
    }

    public int length()
    {
        int i0;
        org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket r0, r1;

        r0 := @this: org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket;

        i0 = 1;

        r1 = r0.<org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket: org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket mNext>;

     label1:
        if r1 == null goto label2;

        i0 = i0 + 1;

        r1 = r1.<org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket: org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket mNext>;

        goto label1;

     label2:
        return i0;
    }

    public org.codehaus.jackson.sym.Name find(int, int, int)
    {
        org.codehaus.jackson.sym.Name $r1, r2, $r3, $r4;
        int $i0, i1, $i2, i3, i4;
        org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket r0, r5;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket;

        i1 := @parameter0: int;

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        $r1 = r0.<org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket: org.codehaus.jackson.sym.Name mName>;

        $i0 = virtualinvoke $r1.<org.codehaus.jackson.sym.Name: int hashCode()>();

        if $i0 != i1 goto label1;

        $r3 = r0.<org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket: org.codehaus.jackson.sym.Name mName>;

        $z1 = virtualinvoke $r3.<org.codehaus.jackson.sym.Name: boolean equals(int,int)>(i3, i4);

        if $z1 == 0 goto label1;

        $r4 = r0.<org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket: org.codehaus.jackson.sym.Name mName>;

        return $r4;

     label1:
        r5 = r0.<org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket: org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket mNext>;

     label2:
        if r5 == null goto label4;

        r2 = r5.<org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket: org.codehaus.jackson.sym.Name mName>;

        $i2 = virtualinvoke r2.<org.codehaus.jackson.sym.Name: int hashCode()>();

        if $i2 != i1 goto label3;

        $z0 = virtualinvoke r2.<org.codehaus.jackson.sym.Name: boolean equals(int,int)>(i3, i4);

        if $z0 == 0 goto label3;

        return r2;

     label3:
        r5 = r5.<org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket: org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket mNext>;

        goto label2;

     label4:
        return null;
    }

    public org.codehaus.jackson.sym.Name find(int, int[], int)
    {
        org.codehaus.jackson.sym.Name $r1, r2, $r4, $r5;
        int[] r3;
        int $i0, i1, $i2, i3;
        org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket r0, r6;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket;

        i1 := @parameter0: int;

        r3 := @parameter1: int[];

        i3 := @parameter2: int;

        $r1 = r0.<org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket: org.codehaus.jackson.sym.Name mName>;

        $i0 = virtualinvoke $r1.<org.codehaus.jackson.sym.Name: int hashCode()>();

        if $i0 != i1 goto label1;

        $r4 = r0.<org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket: org.codehaus.jackson.sym.Name mName>;

        $z1 = virtualinvoke $r4.<org.codehaus.jackson.sym.Name: boolean equals(int[],int)>(r3, i3);

        if $z1 == 0 goto label1;

        $r5 = r0.<org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket: org.codehaus.jackson.sym.Name mName>;

        return $r5;

     label1:
        r6 = r0.<org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket: org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket mNext>;

     label2:
        if r6 == null goto label4;

        r2 = r6.<org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket: org.codehaus.jackson.sym.Name mName>;

        $i2 = virtualinvoke r2.<org.codehaus.jackson.sym.Name: int hashCode()>();

        if $i2 != i1 goto label3;

        $z0 = virtualinvoke r2.<org.codehaus.jackson.sym.Name: boolean equals(int[],int)>(r3, i3);

        if $z0 == 0 goto label3;

        return r2;

     label3:
        r6 = r6.<org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket: org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket mNext>;

        goto label2;

     label4:
        return null;
    }
}
