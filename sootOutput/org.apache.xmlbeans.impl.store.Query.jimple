public abstract class org.apache.xmlbeans.impl.store.Query extends java.lang.Object
{
    public static final java.lang.String QUERY_DELEGATE_INTERFACE;
    public static java.lang.String _useDelegateForXQuery;
    public static java.lang.String _useXdkForXQuery;
    private static java.lang.String _delIntfName;
    private static java.util.HashMap _xdkQueryCache;
    private static java.lang.reflect.Method _xdkCompileQuery;
    private static boolean _xdkAvailable;
    private static java.util.HashMap _xqrlQueryCache;
    private static java.lang.reflect.Method _xqrlCompileQuery;
    private static boolean _xqrlAvailable;
    private static java.util.HashMap _xqrl2002QueryCache;
    private static java.lang.reflect.Method _xqrl2002CompileQuery;
    private static boolean _xqrl2002Available;
    static java.lang.Class class$org$apache$xmlbeans$impl$store$Query;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$java$lang$Boolean;

    public void <init>()
    {
        org.apache.xmlbeans.impl.store.Query r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Query;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    abstract org.apache.xmlbeans.XmlObject[] objectExecute(org.apache.xmlbeans.impl.store.Cur, org.apache.xmlbeans.XmlOptions);

    abstract org.apache.xmlbeans.XmlCursor cursorExecute(org.apache.xmlbeans.impl.store.Cur, org.apache.xmlbeans.XmlOptions);

    static org.apache.xmlbeans.XmlObject[] objectExecQuery(org.apache.xmlbeans.impl.store.Cur, java.lang.String, org.apache.xmlbeans.XmlOptions)
    {
        org.apache.xmlbeans.XmlObject[] $r4;
        org.apache.xmlbeans.XmlOptions r1;
        org.apache.xmlbeans.impl.store.Query $r2;
        java.lang.String r0;
        org.apache.xmlbeans.impl.store.Cur r3;

        r3 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: org.apache.xmlbeans.XmlOptions;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Query: org.apache.xmlbeans.impl.store.Query getCompiledQuery(java.lang.String,org.apache.xmlbeans.XmlOptions)>(r0, r1);

        $r4 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Query: org.apache.xmlbeans.XmlObject[] objectExecute(org.apache.xmlbeans.impl.store.Cur,org.apache.xmlbeans.XmlOptions)>(r3, r1);

        return $r4;
    }

    static org.apache.xmlbeans.XmlCursor cursorExecQuery(org.apache.xmlbeans.impl.store.Cur, java.lang.String, org.apache.xmlbeans.XmlOptions)
    {
        org.apache.xmlbeans.XmlOptions r1;
        org.apache.xmlbeans.impl.store.Query $r2;
        org.apache.xmlbeans.XmlCursor $r4;
        java.lang.String r0;
        org.apache.xmlbeans.impl.store.Cur r3;

        r3 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: org.apache.xmlbeans.XmlOptions;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Query: org.apache.xmlbeans.impl.store.Query getCompiledQuery(java.lang.String,org.apache.xmlbeans.XmlOptions)>(r0, r1);

        $r4 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Query: org.apache.xmlbeans.XmlCursor cursorExecute(org.apache.xmlbeans.impl.store.Cur,org.apache.xmlbeans.XmlOptions)>(r3, r1);

        return $r4;
    }

    public static synchronized org.apache.xmlbeans.impl.store.Query getCompiledQuery(java.lang.String, org.apache.xmlbeans.XmlOptions)
    {
        org.apache.xmlbeans.XmlOptions r1;
        org.apache.xmlbeans.impl.store.Query $r3;
        java.lang.String r0, $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.xmlbeans.XmlOptions;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Path: java.lang.String getCurrentNodeVar(org.apache.xmlbeans.XmlOptions)>(r1);

        $r3 = staticinvoke <org.apache.xmlbeans.impl.store.Query: org.apache.xmlbeans.impl.store.Query getCompiledQuery(java.lang.String,java.lang.String,org.apache.xmlbeans.XmlOptions)>(r0, $r2, r1);

        return $r3;
    }

    static synchronized org.apache.xmlbeans.impl.store.Query getCompiledQuery(java.lang.String, java.lang.String, org.apache.xmlbeans.XmlOptions)
    {
        java.lang.Integer $r7, $r30, $r34;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Throwable $r27;
        java.util.HashMap $r2, $r13, $r16, $r17, $r20, $r21, $r25;
        java.lang.AssertionError $r26;
        int $i0, i1, $i2;
        java.lang.String $r1, r3, r4, $r8, $r9, $r39;
        org.apache.xmlbeans.impl.common.XPath$XPathCompileException $r31;
        java.lang.RuntimeException $r11, $r24;
        org.apache.xmlbeans.XmlOptions $r0, r35;
        org.apache.xmlbeans.impl.store.Query $r10, $r15, $r19, $r23, r36, r37, r38;
        java.lang.Object $r5, $r6, $r12, $r14, $r18, $r22, $r28, $r29, $r32, $r33;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r35 := @parameter2: org.apache.xmlbeans.XmlOptions;

        $z0 = <org.apache.xmlbeans.impl.store.Query: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        if r3 != null goto label01;

        $r26 = new java.lang.AssertionError;

        specialinvoke $r26.<java.lang.AssertionError: void <init>()>();

        throw $r26;

     label01:
        $r0 = staticinvoke <org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions maskNull(org.apache.xmlbeans.XmlOptions)>(r35);

        $r1 = <org.apache.xmlbeans.impl.store.Path: java.lang.String _forceXqrl2002ForXpathXQuery>;

        $z1 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>($r1);

        if $z1 == 0 goto label04;

        $r21 = <org.apache.xmlbeans.impl.store.Query: java.util.HashMap _xqrl2002QueryCache>;

        $r22 = virtualinvoke $r21.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r36 = (org.apache.xmlbeans.impl.store.Query) $r22;

        if r36 == null goto label02;

        return r36;

     label02:
        $r23 = staticinvoke <org.apache.xmlbeans.impl.store.Query: org.apache.xmlbeans.impl.store.Query getXqrl2002CompiledQuery(java.lang.String,java.lang.String)>(r3, r4);

        if $r23 == null goto label03;

        $r25 = <org.apache.xmlbeans.impl.store.Query: java.util.HashMap _xqrl2002QueryCache>;

        virtualinvoke $r25.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r23);

        return $r23;

     label03:
        $r24 = new java.lang.RuntimeException;

        specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.String)>("No 2002 query engine found.");

        throw $r24;

     label04:
        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

     label05:
        staticinvoke <org.apache.xmlbeans.impl.common.XPath: org.apache.xmlbeans.impl.common.XPath compileXPath(java.lang.String,java.lang.String,java.util.Map)>(r3, r4, $r2);

     label06:
        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("$xmlbeans!ns_boundary");

        if $r5 != null goto label07;

        $i0 = 0;

        goto label08;

     label07:
        $r6 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("$xmlbeans!ns_boundary");

        $r7 = (java.lang.Integer) $r6;

        $i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

     label08:
        i1 = $i0;

        goto label17;

     label09:
        $r31 := @caughtexception;

     label10:
        $r32 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("$xmlbeans!ns_boundary");

        if $r32 != null goto label11;

        $i2 = 0;

        goto label12;

     label11:
        $r33 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("$xmlbeans!ns_boundary");

        $r34 = (java.lang.Integer) $r33;

        $i2 = virtualinvoke $r34.<java.lang.Integer: int intValue()>();

     label12:
        i1 = $i2;

        goto label17;

     label13:
        $r27 := @caughtexception;

     label14:
        $r28 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("$xmlbeans!ns_boundary");

        if $r28 != null goto label15;

        goto label16;

     label15:
        $r29 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("$xmlbeans!ns_boundary");

        $r30 = (java.lang.Integer) $r29;

        virtualinvoke $r30.<java.lang.Integer: int intValue()>();

     label16:
        throw $r27;

     label17:
        $r8 = <org.apache.xmlbeans.impl.store.Query: java.lang.String _useXdkForXQuery>;

        $z2 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>($r8);

        if $z2 == 0 goto label19;

        $r17 = <org.apache.xmlbeans.impl.store.Query: java.util.HashMap _xdkQueryCache>;

        $r18 = virtualinvoke $r17.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r37 = (org.apache.xmlbeans.impl.store.Query) $r18;

        if r37 == null goto label18;

        return r37;

     label18:
        $r19 = staticinvoke <org.apache.xmlbeans.impl.store.Query: org.apache.xmlbeans.impl.store.Query createXdkCompiledQuery(java.lang.String,java.lang.String)>(r3, r4);

        if $r19 == null goto label19;

        $r20 = <org.apache.xmlbeans.impl.store.Query: java.util.HashMap _xdkQueryCache>;

        virtualinvoke $r20.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r19);

        return $r19;

     label19:
        $r9 = <org.apache.xmlbeans.impl.store.Query: java.lang.String _useDelegateForXQuery>;

        $z3 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>($r9);

        if $z3 != 0 goto label21;

        $r13 = <org.apache.xmlbeans.impl.store.Query: java.util.HashMap _xqrlQueryCache>;

        $r14 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r38 = (org.apache.xmlbeans.impl.store.Query) $r14;

        if r38 == null goto label20;

        return r38;

     label20:
        $r15 = staticinvoke <org.apache.xmlbeans.impl.store.Query: org.apache.xmlbeans.impl.store.Query createXqrlCompiledQuery(java.lang.String,java.lang.String)>(r3, r4);

        if $r15 == null goto label21;

        $r16 = <org.apache.xmlbeans.impl.store.Query: java.util.HashMap _xqrlQueryCache>;

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r15);

        return $r15;

     label21:
        $z4 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>("QUERY_DELEGATE_INTERFACE");

        if $z4 == 0 goto label22;

        $r12 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: java.lang.Object get(java.lang.Object)>("QUERY_DELEGATE_INTERFACE");

        $r39 = (java.lang.String) $r12;

        goto label23;

     label22:
        $r39 = <org.apache.xmlbeans.impl.store.Query: java.lang.String _delIntfName>;

     label23:
        $r10 = staticinvoke <org.apache.xmlbeans.impl.store.Query$DelegateQueryImpl: org.apache.xmlbeans.impl.store.Query createDelegateCompiledQuery(java.lang.String,java.lang.String,java.lang.String,int)>($r39, r3, r4, i1);

        if $r10 == null goto label24;

        return $r10;

     label24:
        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>("No query engine found");

        throw $r11;

        catch org.apache.xmlbeans.impl.common.XPath$XPathCompileException from label05 to label06 with label09;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public static synchronized java.lang.String compileQuery(java.lang.String, org.apache.xmlbeans.XmlOptions)
    {
        java.lang.String r0;
        org.apache.xmlbeans.XmlOptions r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.xmlbeans.XmlOptions;

        staticinvoke <org.apache.xmlbeans.impl.store.Query: org.apache.xmlbeans.impl.store.Query getCompiledQuery(java.lang.String,org.apache.xmlbeans.XmlOptions)>(r0, r1);

        return r0;
    }

    private static org.apache.xmlbeans.impl.store.Query createXdkCompiledQuery(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r18;
        java.lang.Object[] $r1;
        java.lang.Boolean $r4;
        java.lang.String r2, r3, $r16, $r20, $r23;
        java.lang.reflect.Method $r0, $r5, $r13;
        boolean $z0;
        java.lang.IllegalAccessException $r14;
        java.lang.Class[] $r9;
        java.lang.RuntimeException $r15, $r19, $r22;
        java.lang.Exception $r21;
        java.lang.reflect.InvocationTargetException $r17;
        org.apache.xmlbeans.impl.store.Query $r7;
        java.lang.Object $r6;
        java.lang.Class $r8, $r10, $r11, $r12, $r25, $r26, $r27;
        java.lang.ClassNotFoundException $r24;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $z0 = <org.apache.xmlbeans.impl.store.Query: boolean _xdkAvailable>;

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r0 = <org.apache.xmlbeans.impl.store.Query: java.lang.reflect.Method _xdkCompileQuery>;

        if $r0 != null goto label12;

     label02:
        $r8 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.xmlbeans.impl.store.OXQXBXqrlImpl");

        $r9 = newarray (java.lang.Class)[3];

        $r10 = <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$String>;

        if $r10 != null goto label03;

        $r25 = staticinvoke <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$String> = $r25;

        goto label04;

     label03:
        $r25 = <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$String>;

     label04:
        $r9[0] = $r25;

        $r11 = <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$String>;

        if $r11 != null goto label05;

        $r26 = staticinvoke <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$String> = $r26;

        goto label06;

     label05:
        $r26 = <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$String>;

     label06:
        $r9[1] = $r26;

        $r12 = <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$Boolean>;

        if $r12 != null goto label07;

        $r27 = staticinvoke <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$Boolean> = $r27;

        goto label08;

     label07:
        $r27 = <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$Boolean>;

     label08:
        $r9[2] = $r27;

        $r13 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("compileQuery", $r9);

        <org.apache.xmlbeans.impl.store.Query: java.lang.reflect.Method _xdkCompileQuery> = $r13;

     label09:
        goto label12;

     label10:
        $r24 := @caughtexception;

        <org.apache.xmlbeans.impl.store.Query: boolean _xdkAvailable> = 0;

        return null;

     label11:
        $r21 := @caughtexception;

        <org.apache.xmlbeans.impl.store.Query: boolean _xdkAvailable> = 0;

        $r22 = new java.lang.RuntimeException;

        $r23 = virtualinvoke $r21.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r23, $r21);

        throw $r22;

     label12:
        $r1 = newarray (java.lang.Object)[3];

        $r1[0] = r2;

        $r1[1] = r3;

        $r4 = new java.lang.Boolean;

        specialinvoke $r4.<java.lang.Boolean: void <init>(boolean)>(1);

        $r1[2] = $r4;

     label13:
        $r5 = <org.apache.xmlbeans.impl.store.Query: java.lang.reflect.Method _xdkCompileQuery>;

        $r6 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r1);

        $r7 = (org.apache.xmlbeans.impl.store.Query) $r6;

     label14:
        return $r7;

     label15:
        $r17 := @caughtexception;

        $r18 = virtualinvoke $r17.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $r19 = new java.lang.RuntimeException;

        $r20 = virtualinvoke $r18.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r20, $r18);

        throw $r19;

     label16:
        $r14 := @caughtexception;

        $r15 = new java.lang.RuntimeException;

        $r16 = virtualinvoke $r14.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r16, $r14);

        throw $r15;

        catch java.lang.ClassNotFoundException from label02 to label09 with label10;
        catch java.lang.Exception from label02 to label09 with label11;
        catch java.lang.reflect.InvocationTargetException from label13 to label14 with label15;
        catch java.lang.IllegalAccessException from label13 to label14 with label16;
    }

    private static org.apache.xmlbeans.impl.store.Query createXqrlCompiledQuery(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r18;
        java.lang.Object[] $r1;
        java.lang.Boolean $r4;
        java.lang.String r2, r3, $r16, $r20, $r23;
        java.lang.reflect.Method $r0, $r5, $r13;
        boolean $z0;
        java.lang.IllegalAccessException $r14;
        java.lang.Class[] $r9;
        java.lang.RuntimeException $r15, $r19, $r22;
        java.lang.Exception $r21;
        java.lang.reflect.InvocationTargetException $r17;
        org.apache.xmlbeans.impl.store.Query $r7;
        java.lang.Object $r6;
        java.lang.Class $r8, $r10, $r11, $r12, $r25, $r26, $r27;
        java.lang.ClassNotFoundException $r24;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $z0 = <org.apache.xmlbeans.impl.store.Query: boolean _xqrlAvailable>;

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r0 = <org.apache.xmlbeans.impl.store.Query: java.lang.reflect.Method _xqrlCompileQuery>;

        if $r0 != null goto label12;

     label02:
        $r8 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.xmlbeans.impl.store.XqrlImpl");

        $r9 = newarray (java.lang.Class)[3];

        $r10 = <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$String>;

        if $r10 != null goto label03;

        $r25 = staticinvoke <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$String> = $r25;

        goto label04;

     label03:
        $r25 = <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$String>;

     label04:
        $r9[0] = $r25;

        $r11 = <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$String>;

        if $r11 != null goto label05;

        $r26 = staticinvoke <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$String> = $r26;

        goto label06;

     label05:
        $r26 = <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$String>;

     label06:
        $r9[1] = $r26;

        $r12 = <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$Boolean>;

        if $r12 != null goto label07;

        $r27 = staticinvoke <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$Boolean> = $r27;

        goto label08;

     label07:
        $r27 = <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$Boolean>;

     label08:
        $r9[2] = $r27;

        $r13 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("compileQuery", $r9);

        <org.apache.xmlbeans.impl.store.Query: java.lang.reflect.Method _xqrlCompileQuery> = $r13;

     label09:
        goto label12;

     label10:
        $r24 := @caughtexception;

        <org.apache.xmlbeans.impl.store.Query: boolean _xqrlAvailable> = 0;

        return null;

     label11:
        $r21 := @caughtexception;

        <org.apache.xmlbeans.impl.store.Query: boolean _xqrlAvailable> = 0;

        $r22 = new java.lang.RuntimeException;

        $r23 = virtualinvoke $r21.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r23, $r21);

        throw $r22;

     label12:
        $r1 = newarray (java.lang.Object)[3];

        $r1[0] = r2;

        $r1[1] = r3;

        $r4 = new java.lang.Boolean;

        specialinvoke $r4.<java.lang.Boolean: void <init>(boolean)>(1);

        $r1[2] = $r4;

     label13:
        $r5 = <org.apache.xmlbeans.impl.store.Query: java.lang.reflect.Method _xqrlCompileQuery>;

        $r6 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r1);

        $r7 = (org.apache.xmlbeans.impl.store.Query) $r6;

     label14:
        return $r7;

     label15:
        $r17 := @caughtexception;

        $r18 = virtualinvoke $r17.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $r19 = new java.lang.RuntimeException;

        $r20 = virtualinvoke $r18.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r20, $r18);

        throw $r19;

     label16:
        $r14 := @caughtexception;

        $r15 = new java.lang.RuntimeException;

        $r16 = virtualinvoke $r14.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r16, $r14);

        throw $r15;

        catch java.lang.ClassNotFoundException from label02 to label09 with label10;
        catch java.lang.Exception from label02 to label09 with label11;
        catch java.lang.reflect.InvocationTargetException from label13 to label14 with label15;
        catch java.lang.IllegalAccessException from label13 to label14 with label16;
    }

    private static org.apache.xmlbeans.impl.store.Query getXqrl2002CompiledQuery(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r13;
        java.lang.Object[] $r23;
        java.lang.Boolean $r24;
        java.lang.String r0, r1, $r11, $r15, $r18;
        java.lang.reflect.Method $r2, $r8, $r25;
        boolean $z0;
        java.lang.IllegalAccessException $r9;
        java.lang.Class[] $r4;
        java.lang.RuntimeException $r10, $r14, $r17;
        java.lang.Exception $r16;
        java.lang.reflect.InvocationTargetException $r12;
        org.apache.xmlbeans.impl.store.Query $r27;
        java.lang.Class $r3, $r5, $r6, $r7, $r20, $r21, $r22;
        java.lang.ClassNotFoundException $r19;
        java.lang.Object $r26;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = <org.apache.xmlbeans.impl.store.Query: boolean _xqrl2002Available>;

        if $z0 == 0 goto label11;

        $r2 = <org.apache.xmlbeans.impl.store.Query: java.lang.reflect.Method _xqrl2002CompileQuery>;

        if $r2 != null goto label11;

     label01:
        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.xmlbeans.impl.store.Xqrl2002Impl");

        $r4 = newarray (java.lang.Class)[3];

        $r5 = <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$String>;

        if $r5 != null goto label02;

        $r20 = staticinvoke <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$String> = $r20;

        goto label03;

     label02:
        $r20 = <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$String>;

     label03:
        $r4[0] = $r20;

        $r6 = <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$String>;

        if $r6 != null goto label04;

        $r21 = staticinvoke <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$String> = $r21;

        goto label05;

     label04:
        $r21 = <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$String>;

     label05:
        $r4[1] = $r21;

        $r7 = <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$Boolean>;

        if $r7 != null goto label06;

        $r22 = staticinvoke <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$Boolean> = $r22;

        goto label07;

     label06:
        $r22 = <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$java$lang$Boolean>;

     label07:
        $r4[2] = $r22;

        $r8 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("compileQuery", $r4);

        <org.apache.xmlbeans.impl.store.Query: java.lang.reflect.Method _xqrl2002CompileQuery> = $r8;

     label08:
        goto label11;

     label09:
        $r19 := @caughtexception;

        <org.apache.xmlbeans.impl.store.Query: boolean _xqrl2002Available> = 0;

        return null;

     label10:
        $r16 := @caughtexception;

        <org.apache.xmlbeans.impl.store.Query: boolean _xqrl2002Available> = 0;

        $r17 = new java.lang.RuntimeException;

        $r18 = virtualinvoke $r16.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r18, $r16);

        throw $r17;

     label11:
        $r23 = newarray (java.lang.Object)[3];

        $r23[0] = r0;

        $r23[1] = r1;

        $r24 = new java.lang.Boolean;

        specialinvoke $r24.<java.lang.Boolean: void <init>(boolean)>(1);

        $r23[2] = $r24;

     label12:
        $r25 = <org.apache.xmlbeans.impl.store.Query: java.lang.reflect.Method _xqrl2002CompileQuery>;

        $r26 = virtualinvoke $r25.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r23);

        $r27 = (org.apache.xmlbeans.impl.store.Query) $r26;

     label13:
        return $r27;

     label14:
        $r12 := @caughtexception;

        $r13 = virtualinvoke $r12.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $r14 = new java.lang.RuntimeException;

        $r15 = virtualinvoke $r13.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r15, $r13);

        throw $r14;

     label15:
        $r9 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        $r11 = virtualinvoke $r9.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r9);

        throw $r10;

        catch java.lang.ClassNotFoundException from label01 to label08 with label09;
        catch java.lang.Exception from label01 to label08 with label10;
        catch java.lang.reflect.InvocationTargetException from label12 to label13 with label14;
        catch java.lang.IllegalAccessException from label12 to label13 with label15;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.util.HashMap $r1, $r2, $r3;
        java.lang.String $r9, $r10;
        boolean $z0, $z1;
        java.io.InputStreamReader $r8;
        java.lang.Exception $r11;
        java.lang.Class $r0, $r4, $r12, $r13;
        java.lang.ClassLoader $r5;
        java.io.BufferedReader $r7;
        java.io.InputStream $r6;

        <org.apache.xmlbeans.impl.store.Query: java.lang.String QUERY_DELEGATE_INTERFACE> = "QUERY_DELEGATE_INTERFACE";

        $r0 = <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$org$apache$xmlbeans$impl$store$Query>;

        if $r0 != null goto label01;

        $r12 = staticinvoke <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.store.Query");

        <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$org$apache$xmlbeans$impl$store$Query> = $r12;

        goto label02;

     label01:
        $r12 = <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$org$apache$xmlbeans$impl$store$Query>;

     label02:
        $z0 = virtualinvoke $r12.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        <org.apache.xmlbeans.impl.store.Query: boolean $assertionsDisabled> = $z1;

        <org.apache.xmlbeans.impl.store.Query: java.lang.String _useDelegateForXQuery> = "use delegate for xquery";

        <org.apache.xmlbeans.impl.store.Query: java.lang.String _useXdkForXQuery> = "use xdk for xquery";

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <org.apache.xmlbeans.impl.store.Query: java.util.HashMap _xdkQueryCache> = $r1;

        <org.apache.xmlbeans.impl.store.Query: boolean _xdkAvailable> = 1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        <org.apache.xmlbeans.impl.store.Query: java.util.HashMap _xqrlQueryCache> = $r2;

        <org.apache.xmlbeans.impl.store.Query: boolean _xqrlAvailable> = 1;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        <org.apache.xmlbeans.impl.store.Query: java.util.HashMap _xqrl2002QueryCache> = $r3;

        <org.apache.xmlbeans.impl.store.Query: boolean _xqrl2002Available> = 1;

        $r4 = <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$org$apache$xmlbeans$impl$store$Query>;

        if $r4 != null goto label05;

        $r13 = staticinvoke <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.store.Query");

        <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$org$apache$xmlbeans$impl$store$Query> = $r13;

        goto label06;

     label05:
        $r13 = <org.apache.xmlbeans.impl.store.Query: java.lang.Class class$org$apache$xmlbeans$impl$store$Query>;

     label06:
        $r5 = virtualinvoke $r13.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r6 = virtualinvoke $r5.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("META-INF/services/org.apache.xmlbeans.impl.store.QueryDelegate.QueryInterface");

     label07:
        $r7 = new java.io.BufferedReader;

        $r8 = new java.io.InputStreamReader;

        specialinvoke $r8.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r6);

        specialinvoke $r7.<java.io.BufferedReader: void <init>(java.io.Reader)>($r8);

        $r9 = virtualinvoke $r7.<java.io.BufferedReader: java.lang.String readLine()>();

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        <org.apache.xmlbeans.impl.store.Query: java.lang.String _delIntfName> = $r10;

        virtualinvoke $r7.<java.io.BufferedReader: void close()>();

     label08:
        goto label10;

     label09:
        $r11 := @caughtexception;

        <org.apache.xmlbeans.impl.store.Query: java.lang.String _delIntfName> = null;

     label10:
        return;

        catch java.lang.Exception from label07 to label08 with label09;
    }
}
