public abstract class org.apache.xml.serialize.BaseMarkupSerializer extends java.lang.Object implements org.xml.sax.ContentHandler, org.xml.sax.DocumentHandler, org.xml.sax.ext.LexicalHandler, org.xml.sax.DTDHandler, org.xml.sax.ext.DeclHandler, org.apache.xml.serialize.DOMSerializer, org.apache.xml.serialize.Serializer
{
    protected short features;
    protected org.w3c.dom.DOMErrorHandler fDOMErrorHandler;
    protected final org.apache.xerces.dom.DOMErrorImpl fDOMError;
    protected org.w3c.dom.ls.LSSerializerFilter fDOMFilter;
    protected org.apache.xml.serialize.EncodingInfo _encodingInfo;
    private org.apache.xml.serialize.ElementState[] _elementStates;
    private int _elementStateCount;
    private java.util.Vector _preRoot;
    protected boolean _started;
    private boolean _prepared;
    protected java.util.Hashtable _prefixes;
    protected java.lang.String _docTypePublicId;
    protected java.lang.String _docTypeSystemId;
    protected org.apache.xml.serialize.OutputFormat _format;
    protected org.apache.xml.serialize.Printer _printer;
    protected boolean _indenting;
    protected final java.lang.StringBuffer fStrBuffer;
    private java.io.Writer _writer;
    private java.io.OutputStream _output;
    protected org.w3c.dom.Node fCurrentNode;
    static java.lang.Class class$java$lang$String;

    protected void <init>(org.apache.xml.serialize.OutputFormat)
    {
        org.apache.xml.serialize.OutputFormat r7;
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        org.apache.xml.serialize.ElementState $r10;
        short $s3;
        java.lang.StringBuffer $r9;
        int $i0, i1;
        org.apache.xerces.dom.DOMErrorImpl $r8;
        org.apache.xml.serialize.ElementState[] $r3, $r4, $r6;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r7 := @parameter0: org.apache.xml.serialize.OutputFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $s3 = (short) -1;

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: short features> = $s3;

        $r8 = new org.apache.xerces.dom.DOMErrorImpl;

        specialinvoke $r8.<org.apache.xerces.dom.DOMErrorImpl: void <init>()>();

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xerces.dom.DOMErrorImpl fDOMError> = $r8;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>(int)>(40);

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.lang.StringBuffer fStrBuffer> = $r9;

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.Node fCurrentNode> = null;

        $r3 = newarray (org.apache.xml.serialize.ElementState)[10];

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState[] _elementStates> = $r3;

        i1 = 0;

        goto label2;

     label1:
        $r6 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState[] _elementStates>;

        $r10 = new org.apache.xml.serialize.ElementState;

        specialinvoke $r10.<org.apache.xml.serialize.ElementState: void <init>()>();

        $r6[i1] = $r10;

        i1 = i1 + 1;

     label2:
        $r4 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState[] _elementStates>;

        $i0 = lengthof $r4;

        if i1 < $i0 goto label1;

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.OutputFormat _format> = r7;

        return;
    }

    public org.xml.sax.DocumentHandler asDocumentHandler() throws java.io.IOException
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void prepare()>();

        return r0;
    }

    public org.xml.sax.ContentHandler asContentHandler() throws java.io.IOException
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void prepare()>();

        return r0;
    }

    public org.apache.xml.serialize.DOMSerializer asDOMSerializer() throws java.io.IOException
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void prepare()>();

        return r0;
    }

    public void setOutputByteStream(java.io.OutputStream)
    {
        java.io.OutputStream r0;
        java.lang.Object[] $r2;
        org.apache.xml.serialize.BaseMarkupSerializer r1;
        java.lang.String $r3;
        java.lang.NullPointerException $r4;

        r1 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r0 := @parameter0: java.io.OutputStream;

        if r0 != null goto label1;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = "output";

        $r3 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://apache.org/xml/serializer", "ArgumentIsNull", $r2);

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>($r3);

        throw $r4;

     label1:
        r1.<org.apache.xml.serialize.BaseMarkupSerializer: java.io.OutputStream _output> = r0;

        r1.<org.apache.xml.serialize.BaseMarkupSerializer: java.io.Writer _writer> = null;

        virtualinvoke r1.<org.apache.xml.serialize.BaseMarkupSerializer: boolean reset()>();

        return;
    }

    public void setOutputCharStream(java.io.Writer)
    {
        java.lang.Object[] $r2;
        java.io.Writer r0;
        org.apache.xml.serialize.BaseMarkupSerializer r1;
        java.lang.String $r3;
        java.lang.NullPointerException $r4;

        r1 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r0 := @parameter0: java.io.Writer;

        if r0 != null goto label1;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = "writer";

        $r3 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://apache.org/xml/serializer", "ArgumentIsNull", $r2);

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>($r3);

        throw $r4;

     label1:
        r1.<org.apache.xml.serialize.BaseMarkupSerializer: java.io.Writer _writer> = r0;

        r1.<org.apache.xml.serialize.BaseMarkupSerializer: java.io.OutputStream _output> = null;

        virtualinvoke r1.<org.apache.xml.serialize.BaseMarkupSerializer: boolean reset()>();

        return;
    }

    public void setOutputFormat(org.apache.xml.serialize.OutputFormat)
    {
        java.lang.Object[] $r2;
        org.apache.xml.serialize.OutputFormat r0;
        org.apache.xml.serialize.BaseMarkupSerializer r1;
        java.lang.String $r3;
        java.lang.NullPointerException $r4;

        r1 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r0 := @parameter0: org.apache.xml.serialize.OutputFormat;

        if r0 != null goto label1;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = "format";

        $r3 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://apache.org/xml/serializer", "ArgumentIsNull", $r2);

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>($r3);

        throw $r4;

     label1:
        r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.OutputFormat _format> = r0;

        virtualinvoke r1.<org.apache.xml.serialize.BaseMarkupSerializer: boolean reset()>();

        return;
    }

    public boolean reset()
    {
        java.lang.IllegalStateException $r3;
        java.lang.StringBuffer $r1;
        int $i0;
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        $i0 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: int _elementStateCount>;

        if $i0 <= 1 goto label1;

        $r2 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://apache.org/xml/serializer", "ResetInMiddle", null);

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        throw $r3;

     label1:
        r0.<org.apache.xml.serialize.BaseMarkupSerializer: boolean _prepared> = 0;

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.Node fCurrentNode> = null;

        $r1 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.lang.StringBuffer fStrBuffer>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        return 1;
    }

    protected void cleanup()
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.Node fCurrentNode> = null;

        return;
    }

    protected void prepare() throws java.io.IOException
    {
        org.apache.xml.serialize.IndentPrinter $r15;
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        org.apache.xml.serialize.ElementState $r18;
        org.apache.xml.serialize.EncodingInfo $r3, $r20;
        java.lang.String $r12, $r14, $r23;
        org.apache.xml.serialize.Printer $r6;
        boolean $z0, $z1, $z2;
        java.io.OutputStream $r4, $r19, $r22;
        org.apache.xml.serialize.OutputFormat $r2, $r5, $r7, $r10, $r11, $r13, $r16;
        java.io.IOException $r24;
        java.io.Writer $r1, $r8, $r17, $r21;
        org.apache.xml.serialize.ElementState[] $r9;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        $z0 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: boolean _prepared>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.io.Writer _writer>;

        if $r1 != null goto label2;

        $r22 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.io.OutputStream _output>;

        if $r22 != null goto label2;

        $r23 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://apache.org/xml/serializer", "NoWriterSupplied", null);

        $r24 = new java.io.IOException;

        specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>($r23);

        throw $r24;

     label2:
        $r2 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.OutputFormat _format>;

        $r3 = virtualinvoke $r2.<org.apache.xml.serialize.OutputFormat: org.apache.xml.serialize.EncodingInfo getEncodingInfo()>();

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.EncodingInfo _encodingInfo> = $r3;

        $r4 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.io.OutputStream _output>;

        if $r4 == null goto label3;

        $r20 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.EncodingInfo _encodingInfo>;

        $r19 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.io.OutputStream _output>;

        $r21 = virtualinvoke $r20.<org.apache.xml.serialize.EncodingInfo: java.io.Writer getWriter(java.io.OutputStream)>($r19);

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.io.Writer _writer> = $r21;

     label3:
        $r5 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.OutputFormat _format>;

        $z1 = virtualinvoke $r5.<org.apache.xml.serialize.OutputFormat: boolean getIndenting()>();

        if $z1 == 0 goto label4;

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: boolean _indenting> = 1;

        $r15 = new org.apache.xml.serialize.IndentPrinter;

        $r17 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.io.Writer _writer>;

        $r16 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.OutputFormat _format>;

        specialinvoke $r15.<org.apache.xml.serialize.IndentPrinter: void <init>(java.io.Writer,org.apache.xml.serialize.OutputFormat)>($r17, $r16);

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer> = $r15;

        goto label5;

     label4:
        r0.<org.apache.xml.serialize.BaseMarkupSerializer: boolean _indenting> = 0;

        $r6 = new org.apache.xml.serialize.Printer;

        $r8 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.io.Writer _writer>;

        $r7 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.OutputFormat _format>;

        specialinvoke $r6.<org.apache.xml.serialize.Printer: void <init>(java.io.Writer,org.apache.xml.serialize.OutputFormat)>($r8, $r7);

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer> = $r6;

     label5:
        r0.<org.apache.xml.serialize.BaseMarkupSerializer: int _elementStateCount> = 0;

        $r9 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState[] _elementStates>;

        $r18 = $r9[0];

        $r18.<org.apache.xml.serialize.ElementState: java.lang.String namespaceURI> = null;

        $r18.<org.apache.xml.serialize.ElementState: java.lang.String localName> = null;

        $r18.<org.apache.xml.serialize.ElementState: java.lang.String rawName> = null;

        $r10 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.OutputFormat _format>;

        $z2 = virtualinvoke $r10.<org.apache.xml.serialize.OutputFormat: boolean getPreserveSpace()>();

        $r18.<org.apache.xml.serialize.ElementState: boolean preserveSpace> = $z2;

        $r18.<org.apache.xml.serialize.ElementState: boolean empty> = 1;

        $r18.<org.apache.xml.serialize.ElementState: boolean afterElement> = 0;

        $r18.<org.apache.xml.serialize.ElementState: boolean afterComment> = 0;

        $r18.<org.apache.xml.serialize.ElementState: boolean inCData> = 0;

        $r18.<org.apache.xml.serialize.ElementState: boolean doCData> = 0;

        $r18.<org.apache.xml.serialize.ElementState: java.util.Hashtable prefixes> = null;

        $r11 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.OutputFormat _format>;

        $r12 = virtualinvoke $r11.<org.apache.xml.serialize.OutputFormat: java.lang.String getDoctypePublic()>();

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.lang.String _docTypePublicId> = $r12;

        $r13 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.OutputFormat _format>;

        $r14 = virtualinvoke $r13.<org.apache.xml.serialize.OutputFormat: java.lang.String getDoctypeSystem()>();

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.lang.String _docTypeSystemId> = $r14;

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: boolean _started> = 0;

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: boolean _prepared> = 1;

        return;
    }

    public void serialize(org.w3c.dom.Element) throws java.io.IOException
    {
        org.w3c.dom.Element r1;
        java.io.IOException $r4, $r6;
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        org.apache.xml.serialize.Printer $r2, $r3, $r5;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r1 := @parameter0: org.w3c.dom.Element;

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: boolean reset()>();

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void prepare()>();

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void serializeNode(org.w3c.dom.Node)>(r1);

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void cleanup()>();

        $r2 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r2.<org.apache.xml.serialize.Printer: void flush()>();

        $r3 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        $r4 = virtualinvoke $r3.<org.apache.xml.serialize.Printer: java.io.IOException getException()>();

        if $r4 == null goto label1;

        $r5 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        $r6 = virtualinvoke $r5.<org.apache.xml.serialize.Printer: java.io.IOException getException()>();

        throw $r6;

     label1:
        return;
    }

    public void serialize(org.w3c.dom.DocumentFragment) throws java.io.IOException
    {
        org.w3c.dom.DocumentFragment r1;
        java.io.IOException $r4, $r6;
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        org.apache.xml.serialize.Printer $r2, $r3, $r5;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r1 := @parameter0: org.w3c.dom.DocumentFragment;

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: boolean reset()>();

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void prepare()>();

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void serializeNode(org.w3c.dom.Node)>(r1);

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void cleanup()>();

        $r2 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r2.<org.apache.xml.serialize.Printer: void flush()>();

        $r3 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        $r4 = virtualinvoke $r3.<org.apache.xml.serialize.Printer: java.io.IOException getException()>();

        if $r4 == null goto label1;

        $r5 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        $r6 = virtualinvoke $r5.<org.apache.xml.serialize.Printer: java.io.IOException getException()>();

        throw $r6;

     label1:
        return;
    }

    public void serialize(org.w3c.dom.Document) throws java.io.IOException
    {
        org.w3c.dom.Document r1;
        java.io.IOException $r4, $r6;
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        org.apache.xml.serialize.Printer $r2, $r3, $r5;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r1 := @parameter0: org.w3c.dom.Document;

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: boolean reset()>();

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void prepare()>();

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void serializeNode(org.w3c.dom.Node)>(r1);

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void serializePreRoot()>();

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void cleanup()>();

        $r2 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r2.<org.apache.xml.serialize.Printer: void flush()>();

        $r3 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        $r4 = virtualinvoke $r3.<org.apache.xml.serialize.Printer: java.io.IOException getException()>();

        if $r4 == null goto label1;

        $r5 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        $r6 = virtualinvoke $r5.<org.apache.xml.serialize.Printer: java.io.IOException getException()>();

        throw $r6;

     label1:
        return;
    }

    public void startDocument() throws org.xml.sax.SAXException
    {
        org.xml.sax.SAXException $r2;
        java.io.IOException $r1;
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        java.lang.String $r3;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

     label1:
        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void prepare()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = new org.xml.sax.SAXException;

        $r3 = virtualinvoke $r1.<java.io.IOException: java.lang.String toString()>();

        specialinvoke $r2.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        org.apache.xml.serialize.Printer $r2, $r3, $r5, $r6, $r8, $r15, $r16, $r17, $r18, $r19, $r20, $r23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.xml.sax.SAXException $r25;
        org.apache.xml.serialize.ElementState $r1;
        org.apache.xml.serialize.EncodingInfo $r9;
        java.lang.StringBuffer $r11, $r12, $r13, $r24;
        int $i0, i1, i2, $i5, $i6, $i8, $i10, $i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        java.lang.String $r7, $r14;
        char c3, $c4, $c7, $c9;
        java.io.IOException $r21;
        char[] r4;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r4 := @parameter0: char[];

        i1 := @parameter1: int;

        i2 := @parameter2: int;

     label01:
        $r1 = virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState content()>();

        $z0 = $r1.<org.apache.xml.serialize.ElementState: boolean inCData>;

        if $z0 != 0 goto label02;

        $z3 = $r1.<org.apache.xml.serialize.ElementState: boolean doCData>;

        if $z3 == 0 goto label13;

     label02:
        $z1 = $r1.<org.apache.xml.serialize.ElementState: boolean inCData>;

        if $z1 != 0 goto label03;

        $r17 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r17.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("<![CDATA[");

        $r1.<org.apache.xml.serialize.ElementState: boolean inCData> = 1;

     label03:
        $r2 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        $i0 = virtualinvoke $r2.<org.apache.xml.serialize.Printer: int getNextIndent()>();

        $r3 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r3.<org.apache.xml.serialize.Printer: void setNextIndent(int)>(0);

        $i10 = i1 + i2;

        i12 = i1;

        goto label12;

     label04:
        c3 = r4[i12];

        $i13 = (int) c3;

        if $i13 != 93 goto label05;

        $i5 = i12 + 2;

        if $i5 >= $i10 goto label05;

        $i6 = i12 + 1;

        $c7 = r4[$i6];

        $i14 = (int) $c7;

        if $i14 != 93 goto label05;

        $i8 = i12 + 2;

        $c9 = r4[$i8];

        $i15 = (int) $c9;

        if $i15 != 62 goto label05;

        $r15 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r15.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("]]]]><![CDATA[>");

        i12 = i12 + 2;

        goto label11;

     label05:
        $i16 = (int) c3;

        $z7 = staticinvoke <org.apache.xerces.util.XMLChar: boolean isValid(int)>($i16);

        if $z7 != 0 goto label07;

        i12 = i12 + 1;

        if i12 >= $i10 goto label06;

        $c4 = r4[i12];

        $i17 = (int) c3;

        $i18 = (int) $c4;

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void surrogates(int,int,boolean)>($i17, $i18, 1);

        goto label11;

     label06:
        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The character \'");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is an invalid XML character");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void fatalError(java.lang.String)>($r14);

        goto label11;

     label07:
        $i19 = (int) c3;

        if $i19 < 32 goto label08;

        $r9 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.EncodingInfo _encodingInfo>;

        $z2 = virtualinvoke $r9.<org.apache.xml.serialize.EncodingInfo: boolean isPrintable(char)>(c3);

        if $z2 == 0 goto label08;

        $i20 = (int) c3;

        if $i20 != 127 goto label09;

     label08:
        $i21 = (int) c3;

        if $i21 == 10 goto label09;

        $i22 = (int) c3;

        if $i22 == 13 goto label09;

        $i23 = (int) c3;

        if $i23 != 9 goto label10;

     label09:
        $r23 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r23.<org.apache.xml.serialize.Printer: void printText(char)>(c3);

        goto label11;

     label10:
        $r5 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r5.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("]]>&#x");

        $r6 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        $i24 = (int) c3;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i24);

        virtualinvoke $r6.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>($r7);

        $r8 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r8.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(";<![CDATA[");

     label11:
        i12 = i12 + 1;

     label12:
        if i12 < $i10 goto label04;

        $r16 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r16.<org.apache.xml.serialize.Printer: void setNextIndent(int)>($i0);

        goto label15;

     label13:
        $z4 = $r1.<org.apache.xml.serialize.ElementState: boolean preserveSpace>;

        if $z4 == 0 goto label14;

        $r18 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        $i11 = virtualinvoke $r18.<org.apache.xml.serialize.Printer: int getNextIndent()>();

        $r19 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r19.<org.apache.xml.serialize.Printer: void setNextIndent(int)>(0);

        $z6 = $r1.<org.apache.xml.serialize.ElementState: boolean unescaped>;

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void printText(char[],int,int,boolean,boolean)>(r4, i1, i2, 1, $z6);

        $r20 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r20.<org.apache.xml.serialize.Printer: void setNextIndent(int)>($i11);

        goto label15;

     label14:
        $z5 = $r1.<org.apache.xml.serialize.ElementState: boolean unescaped>;

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void printText(char[],int,int,boolean,boolean)>(r4, i1, i2, 0, $z5);

     label15:
        goto label17;

     label16:
        $r21 := @caughtexception;

        $r25 = new org.xml.sax.SAXException;

        specialinvoke $r25.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r21);

        throw $r25;

     label17:
        return;

        catch java.io.IOException from label01 to label15 with label16;
    }

    public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        char $c2;
        java.io.IOException $r4;
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        org.xml.sax.SAXException $r6;
        int i0, $i1, i3, i4, $i6;
        char[] r2;
        org.apache.xml.serialize.Printer $r1, $r3;
        boolean $z0;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i3 := @parameter2: int;

     label1:
        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState content()>();

        $z0 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: boolean _indenting>;

        if $z0 == 0 goto label4;

        $r1 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r1.<org.apache.xml.serialize.Printer: void setThisIndent(int)>(0);

        i4 = i0;

        goto label3;

     label2:
        $r3 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        $c2 = r2[i4];

        virtualinvoke $r3.<org.apache.xml.serialize.Printer: void printText(char)>($c2);

        i4 = i4 + 1;

     label3:
        $i1 = i3;

        $i6 = (int) -1;

        i3 = i3 + $i6;

        if $i1 > 0 goto label2;

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

        $r6 = new org.xml.sax.SAXException;

        specialinvoke $r6.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r4);

        throw $r6;

     label6:
        return;

        catch java.io.IOException from label1 to label4 with label5;
    }

    public final void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.xml.sax.SAXException $r4;
        java.io.IOException $r3;
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void processingInstructionIO(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.xml.sax.SAXException;

        specialinvoke $r4.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r3);

        throw $r4;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void processingInstructionIO(java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        org.apache.xml.serialize.ElementState $r1;
        java.util.Vector $r10, $r12, $r14;
        java.lang.StringBuffer $r3, $r4, $r7, $r11, $r15, $r16, $r17, $r19, $r20, $r22, $r23;
        int $i0, $i1;
        java.lang.String r2, r5, $r8, $r13, $r18, $r21;
        org.apache.xml.serialize.Printer $r6, $r9;
        boolean $z0, $z1;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState content()>();

        $i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("?>");

        if $i0 < 0 goto label1;

        $r19 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.lang.StringBuffer fStrBuffer>;

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<?");

        $r21 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        goto label2;

     label1:
        $r3 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.lang.StringBuffer fStrBuffer>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<?");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

     label2:
        if r5 == null goto label4;

        $r15 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.lang.StringBuffer fStrBuffer>;

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $i1 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>("?>");

        if $i1 < 0 goto label3;

        $r17 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.lang.StringBuffer fStrBuffer>;

        $r18 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        goto label4;

     label3:
        $r16 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.lang.StringBuffer fStrBuffer>;

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

     label4:
        $r22 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.lang.StringBuffer fStrBuffer>;

        virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("?>");

        $z1 = virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: boolean isDocumentState()>();

        if $z1 == 0 goto label6;

        $r10 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.util.Vector _preRoot>;

        if $r10 != null goto label5;

        $r14 = new java.util.Vector;

        specialinvoke $r14.<java.util.Vector: void <init>()>();

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.util.Vector _preRoot> = $r14;

     label5:
        $r12 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.util.Vector _preRoot>;

        $r11 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.lang.StringBuffer fStrBuffer>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r12.<java.util.Vector: void addElement(java.lang.Object)>($r13);

        goto label7;

     label6:
        $r6 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r6.<org.apache.xml.serialize.Printer: void indent()>();

        $r7 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.lang.StringBuffer fStrBuffer>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void printText(java.lang.String,boolean,boolean)>($r8, 1, 1);

        $r9 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r9.<org.apache.xml.serialize.Printer: void unindent()>();

        $z0 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: boolean _indenting>;

        if $z0 == 0 goto label7;

        $r1.<org.apache.xml.serialize.ElementState: boolean afterElement> = 1;

     label7:
        $r23 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.lang.StringBuffer fStrBuffer>;

        virtualinvoke $r23.<java.lang.StringBuffer: void setLength(int)>(0);

        return;
    }

    public void comment(char[], int, int) throws org.xml.sax.SAXException
    {
        org.xml.sax.SAXException $r4;
        int i0, i1;
        char[] r2;
        java.io.IOException $r3;
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r2, i0, i1);

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void comment(java.lang.String)>($r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.xml.sax.SAXException;

        specialinvoke $r4.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r3);

        throw $r4;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void comment(java.lang.String) throws java.io.IOException
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        org.apache.xml.serialize.ElementState $r2;
        java.util.Vector $r8, $r10, $r12;
        java.lang.StringBuffer $r4, $r5, $r6, $r9, $r13, $r14, $r16, $r18, $r21;
        int $i0;
        java.lang.String r3, $r11, $r15, $r19;
        org.apache.xml.serialize.Printer $r7, $r17, $r20;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xml.serialize.OutputFormat $r1;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.OutputFormat _format>;

        $z0 = virtualinvoke $r1.<org.apache.xml.serialize.OutputFormat: boolean getOmitComments()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState content()>();

        $i0 = virtualinvoke r3.<java.lang.String: int indexOf(java.lang.String)>("-->");

        if $i0 < 0 goto label2;

        $r13 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.lang.StringBuffer fStrBuffer>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<!--");

        $r15 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-->");

        goto label3;

     label2:
        $r4 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.lang.StringBuffer fStrBuffer>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<!--");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-->");

     label3:
        $z1 = virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: boolean isDocumentState()>();

        if $z1 == 0 goto label5;

        $r8 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.util.Vector _preRoot>;

        if $r8 != null goto label4;

        $r12 = new java.util.Vector;

        specialinvoke $r12.<java.util.Vector: void <init>()>();

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.util.Vector _preRoot> = $r12;

     label4:
        $r10 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.util.Vector _preRoot>;

        $r9 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.lang.StringBuffer fStrBuffer>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r10.<java.util.Vector: void addElement(java.lang.Object)>($r11);

        goto label7;

     label5:
        $z2 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: boolean _indenting>;

        if $z2 == 0 goto label6;

        $z3 = $r2.<org.apache.xml.serialize.ElementState: boolean preserveSpace>;

        if $z3 != 0 goto label6;

        $r7 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r7.<org.apache.xml.serialize.Printer: void breakLine()>();

     label6:
        $r17 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r17.<org.apache.xml.serialize.Printer: void indent()>();

        $r18 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.lang.StringBuffer fStrBuffer>;

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void printText(java.lang.String,boolean,boolean)>($r19, 1, 1);

        $r20 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r20.<org.apache.xml.serialize.Printer: void unindent()>();

        $z4 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: boolean _indenting>;

        if $z4 == 0 goto label7;

        $r2.<org.apache.xml.serialize.ElementState: boolean afterElement> = 1;

     label7:
        $r21 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.lang.StringBuffer fStrBuffer>;

        virtualinvoke $r21.<java.lang.StringBuffer: void setLength(int)>(0);

        $r2.<org.apache.xml.serialize.ElementState: boolean afterComment> = 1;

        $r2.<org.apache.xml.serialize.ElementState: boolean afterElement> = 0;

        return;
    }

    public void startCDATA()
    {
        org.apache.xml.serialize.ElementState $r1;
        org.apache.xml.serialize.BaseMarkupSerializer r0;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        $r1 = virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState getElementState()>();

        $r1.<org.apache.xml.serialize.ElementState: boolean doCData> = 1;

        return;
    }

    public void endCDATA()
    {
        org.apache.xml.serialize.ElementState $r1;
        org.apache.xml.serialize.BaseMarkupSerializer r0;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        $r1 = virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState getElementState()>();

        $r1.<org.apache.xml.serialize.ElementState: boolean doCData> = 0;

        return;
    }

    public void startNonEscaping()
    {
        org.apache.xml.serialize.ElementState $r1;
        org.apache.xml.serialize.BaseMarkupSerializer r0;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        $r1 = virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState getElementState()>();

        $r1.<org.apache.xml.serialize.ElementState: boolean unescaped> = 1;

        return;
    }

    public void endNonEscaping()
    {
        org.apache.xml.serialize.ElementState $r1;
        org.apache.xml.serialize.BaseMarkupSerializer r0;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        $r1 = virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState getElementState()>();

        $r1.<org.apache.xml.serialize.ElementState: boolean unescaped> = 0;

        return;
    }

    public void startPreserving()
    {
        org.apache.xml.serialize.ElementState $r1;
        org.apache.xml.serialize.BaseMarkupSerializer r0;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        $r1 = virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState getElementState()>();

        $r1.<org.apache.xml.serialize.ElementState: boolean preserveSpace> = 1;

        return;
    }

    public void endPreserving()
    {
        org.apache.xml.serialize.ElementState $r1;
        org.apache.xml.serialize.BaseMarkupSerializer r0;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        $r1 = virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState getElementState()>();

        $r1.<org.apache.xml.serialize.ElementState: boolean preserveSpace> = 0;

        return;
    }

    public void endDocument() throws org.xml.sax.SAXException
    {
        org.xml.sax.SAXException $r3;
        java.io.IOException $r2;
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        org.apache.xml.serialize.Printer $r1;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

     label1:
        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void serializePreRoot()>();

        $r1 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r1.<org.apache.xml.serialize.Printer: void flush()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.xml.sax.SAXException;

        specialinvoke $r3.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r2);

        throw $r3;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void startEntity(java.lang.String)
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void endEntity(java.lang.String)
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void setDocumentLocator(org.xml.sax.Locator)
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        org.xml.sax.Locator r1;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r1 := @parameter0: org.xml.sax.Locator;

        return;
    }

    public void skippedEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.xml.sax.SAXException $r6;
        java.io.IOException $r5;
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        java.lang.String r2;
        org.apache.xml.serialize.Printer $r1, $r3, $r4;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r2 := @parameter0: java.lang.String;

     label1:
        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void endCDATA()>();

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState content()>();

        $r1 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r1.<org.apache.xml.serialize.Printer: void printText(char)>(38);

        $r3 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r3.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(r2);

        $r4 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r4.<org.apache.xml.serialize.Printer: void printText(char)>(59);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.xml.sax.SAXException;

        specialinvoke $r6.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r5);

        throw $r6;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        java.lang.String r2, r3, $r6;
        java.util.Hashtable $r1, $r4, $r5;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r3 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.util.Hashtable _prefixes>;

        if $r1 != null goto label1;

        $r5 = new java.util.Hashtable;

        specialinvoke $r5.<java.util.Hashtable: void <init>()>();

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.util.Hashtable _prefixes> = $r5;

     label1:
        $r4 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.util.Hashtable _prefixes>;

        if r3 != null goto label2;

        $r6 = "";

        goto label3;

     label2:
        $r6 = r3;

     label3:
        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6);

        return;
    }

    public void endPrefixMapping(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public final void startDTD(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.xml.sax.SAXException $r5;
        java.io.IOException $r4;
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        java.lang.String r2, r3, r6;
        org.apache.xml.serialize.Printer $r1;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r6 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

     label1:
        $r1 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r1.<org.apache.xml.serialize.Printer: void enterDTD()>();

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.lang.String _docTypePublicId> = r2;

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.lang.String _docTypeSystemId> = r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r4);

        throw $r5;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void endDTD()
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        return;
    }

    public void elementDecl(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        java.io.IOException $r10;
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        org.xml.sax.SAXException $r11;
        java.lang.String r3, r6;
        org.apache.xml.serialize.Printer $r1, $r2, $r4, $r5, $r7, $r8, $r9;
        boolean $z0;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

     label1:
        $r1 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r1.<org.apache.xml.serialize.Printer: void enterDTD()>();

        $r2 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r2.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("<!ELEMENT ");

        $r4 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r4.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(r3);

        $r5 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r5.<org.apache.xml.serialize.Printer: void printText(char)>(32);

        $r7 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r7.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(r6);

        $r8 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r8.<org.apache.xml.serialize.Printer: void printText(char)>(62);

        $z0 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: boolean _indenting>;

        if $z0 == 0 goto label2;

        $r9 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r9.<org.apache.xml.serialize.Printer: void breakLine()>();

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = new org.xml.sax.SAXException;

        specialinvoke $r11.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r10);

        throw $r11;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void attributeDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        java.lang.String r3, r6, r9, r11, r12;
        org.apache.xml.serialize.Printer $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r13, $r14, $r15, $r16, $r17, $r18;
        boolean $z0;
        java.io.IOException $r19;
        org.xml.sax.SAXException $r20;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        r9 := @parameter2: java.lang.String;

        r11 := @parameter3: java.lang.String;

        r12 := @parameter4: java.lang.String;

     label1:
        $r1 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r1.<org.apache.xml.serialize.Printer: void enterDTD()>();

        $r2 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r2.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("<!ATTLIST ");

        $r4 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r4.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(r3);

        $r5 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r5.<org.apache.xml.serialize.Printer: void printText(char)>(32);

        $r7 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r7.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(r6);

        $r8 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r8.<org.apache.xml.serialize.Printer: void printText(char)>(32);

        $r10 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r10.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(r9);

        if r11 == null goto label2;

        $r17 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r17.<org.apache.xml.serialize.Printer: void printText(char)>(32);

        $r18 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r18.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(r11);

     label2:
        if r12 == null goto label3;

        $r15 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r15.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(" \"");

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void printEscaped(java.lang.String)>(r12);

        $r16 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r16.<org.apache.xml.serialize.Printer: void printText(char)>(34);

     label3:
        $r13 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r13.<org.apache.xml.serialize.Printer: void printText(char)>(62);

        $z0 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: boolean _indenting>;

        if $z0 == 0 goto label4;

        $r14 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r14.<org.apache.xml.serialize.Printer: void breakLine()>();

     label4:
        goto label6;

     label5:
        $r19 := @caughtexception;

        $r20 = new org.xml.sax.SAXException;

        specialinvoke $r20.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r19);

        throw $r20;

     label6:
        return;

        catch java.io.IOException from label1 to label4 with label5;
    }

    public void internalEntityDecl(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        java.io.IOException $r9;
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        org.xml.sax.SAXException $r10;
        java.lang.String r3, r6;
        org.apache.xml.serialize.Printer $r1, $r2, $r4, $r5, $r7, $r8;
        boolean $z0;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

     label1:
        $r1 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r1.<org.apache.xml.serialize.Printer: void enterDTD()>();

        $r2 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r2.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("<!ENTITY ");

        $r4 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r4.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(r3);

        $r5 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r5.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(" \"");

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void printEscaped(java.lang.String)>(r6);

        $r7 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r7.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("\">");

        $z0 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: boolean _indenting>;

        if $z0 == 0 goto label2;

        $r8 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r8.<org.apache.xml.serialize.Printer: void breakLine()>();

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = new org.xml.sax.SAXException;

        specialinvoke $r10.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r9);

        throw $r10;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void externalEntityDecl(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.xml.sax.SAXException $r6;
        java.io.IOException $r5;
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        java.lang.String r2, r3, r4;
        org.apache.xml.serialize.Printer $r1;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

     label1:
        $r1 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r1.<org.apache.xml.serialize.Printer: void enterDTD()>();

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r2, r3, r4, null);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.xml.sax.SAXException;

        specialinvoke $r6.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r5);

        throw $r6;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        java.lang.String r2, r4, r8, r9;
        org.apache.xml.serialize.Printer $r1, $r3, $r5, $r6, $r7, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        boolean $z0;
        java.io.IOException $r17;
        org.xml.sax.SAXException $r18;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r4 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.String;

        r9 := @parameter3: java.lang.String;

     label1:
        $r1 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r1.<org.apache.xml.serialize.Printer: void enterDTD()>();

        if r2 != null goto label2;

        $r14 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r14.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("<!ENTITY ");

        $r15 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r15.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(r4);

        $r16 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r16.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(" SYSTEM ");

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void printDoctypeURL(java.lang.String)>(r8);

        goto label3;

     label2:
        $r3 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r3.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("<!ENTITY ");

        $r5 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r5.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(r4);

        $r6 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r6.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(" PUBLIC ");

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void printDoctypeURL(java.lang.String)>(r2);

        $r7 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r7.<org.apache.xml.serialize.Printer: void printText(char)>(32);

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void printDoctypeURL(java.lang.String)>(r8);

     label3:
        if r9 == null goto label4;

        $r12 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r12.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(" NDATA ");

        $r13 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r13.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(r9);

     label4:
        $r10 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r10.<org.apache.xml.serialize.Printer: void printText(char)>(62);

        $z0 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: boolean _indenting>;

        if $z0 == 0 goto label5;

        $r11 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r11.<org.apache.xml.serialize.Printer: void breakLine()>();

     label5:
        goto label7;

     label6:
        $r17 := @caughtexception;

        $r18 = new org.xml.sax.SAXException;

        specialinvoke $r18.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r17);

        throw $r18;

     label7:
        return;

        catch java.io.IOException from label1 to label5 with label6;
    }

    public void notationDecl(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        java.lang.String r2, r4, r7;
        org.apache.xml.serialize.Printer $r1, $r3, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r15;
        boolean $z0;
        java.io.IOException $r13;
        org.xml.sax.SAXException $r14;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r4 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

     label1:
        $r1 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r1.<org.apache.xml.serialize.Printer: void enterDTD()>();

        if r2 == null goto label2;

        $r9 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r9.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("<!NOTATION ");

        $r10 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r10.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(r4);

        $r11 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r11.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(" PUBLIC ");

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void printDoctypeURL(java.lang.String)>(r2);

        if r7 == null goto label3;

        $r12 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r12.<org.apache.xml.serialize.Printer: void printText(char)>(32);

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void printDoctypeURL(java.lang.String)>(r7);

        goto label3;

     label2:
        $r3 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r3.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("<!NOTATION ");

        $r5 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r5.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(r4);

        $r6 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r6.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(" SYSTEM ");

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void printDoctypeURL(java.lang.String)>(r7);

     label3:
        $r15 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r15.<org.apache.xml.serialize.Printer: void printText(char)>(62);

        $z0 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: boolean _indenting>;

        if $z0 == 0 goto label4;

        $r8 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r8.<org.apache.xml.serialize.Printer: void breakLine()>();

     label4:
        goto label6;

     label5:
        $r13 := @caughtexception;

        $r14 = new org.xml.sax.SAXException;

        specialinvoke $r14.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r13);

        throw $r14;

     label6:
        return;

        catch java.io.IOException from label1 to label4 with label5;
    }

    protected void serializeNode(org.w3c.dom.Node) throws java.io.IOException
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        org.w3c.dom.Document $r2;
        org.apache.xml.serialize.Printer $r4, $r8, $r36, $r53, $r54, $r56;
        java.lang.Exception $r35, $r37;
        java.lang.Object[] $r42, $r50;
        short $s0, $s4, $s7, $s8, $s9, $s12, $s13, $s14, $s17, $s21, $s24;
        java.lang.String $r5, $r6, $r7, $r10, $r21, $r25, $r28, $r29, $r55, $r58, $r59, r62, r63;
        java.lang.NoSuchMethodError $r44;
        java.lang.Class[] $r38, $r46;
        org.w3c.dom.ls.LSSerializerFilter $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r22, $r23, $r24, $r26, $r30, $r31, $r32, $r33, $r34;
        java.lang.reflect.Method $r39, $r47;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xml.serialize.ElementState $r27;
        org.w3c.dom.Node r1, $r20, r52, r57, r60, r66;
        int $i1, $i2, $i3, $i5, $i6, $i10, $i11, $i15, $i16, $i18, $i19, $i20, $i22, $i23, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        org.apache.xml.serialize.OutputFormat $r9;
        org.w3c.dom.DocumentType $r3;
        org.w3c.dom.Element $r61;
        java.lang.Class $r40, $r41, $r45, $r48, $r49, $r64, $r65;
        java.lang.Object $r43, $r51;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r1 := @parameter0: org.w3c.dom.Node;

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.Node fCurrentNode> = r1;

        $s0 = interfaceinvoke r1.<org.w3c.dom.Node: short getNodeType()>();

        $i25 = (int) $s0;

        tableswitch($i25)
        {
            case 1: goto label26;
            case 2: goto label51;
            case 3: goto label01;
            case 4: goto label06;
            case 5: goto label13;
            case 6: goto label51;
            case 7: goto label23;
            case 8: goto label10;
            case 9: goto label32;
            case 10: goto label51;
            case 11: goto label48;
            default: goto label51;
        };

     label01:
        $r25 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        if $r25 == null goto label51;

        $r26 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.ls.LSSerializerFilter fDOMFilter>;

        if $r26 == null goto label04;

        $r30 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.ls.LSSerializerFilter fDOMFilter>;

        $i19 = interfaceinvoke $r30.<org.w3c.dom.ls.LSSerializerFilter: int getWhatToShow()>();

        $i20 = $i19 & 4;

        if $i20 == 0 goto label04;

        $r31 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.ls.LSSerializerFilter fDOMFilter>;

        $s21 = interfaceinvoke $r31.<org.w3c.dom.ls.LSSerializerFilter: short acceptNode(org.w3c.dom.Node)>(r1);

        $i26 = (int) $s21;

        lookupswitch($i26)
        {
            case 2: goto label02;
            case 3: goto label02;
            default: goto label03;
        };

     label02:
        goto label51;

     label03:
        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void characters(java.lang.String)>($r25);

        goto label51;

     label04:
        $z1 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: boolean _indenting>;

        if $z1 == 0 goto label05;

        $r27 = virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState getElementState()>();

        $z2 = $r27.<org.apache.xml.serialize.ElementState: boolean preserveSpace>;

        if $z2 != 0 goto label05;

        $r28 = virtualinvoke $r25.<java.lang.String: java.lang.String replace(char,char)>(10, 32);

        $r29 = virtualinvoke $r28.<java.lang.String: java.lang.String trim()>();

        $i18 = virtualinvoke $r29.<java.lang.String: int length()>();

        if $i18 == 0 goto label51;

     label05:
        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void characters(java.lang.String)>($r25);

        goto label51;

     label06:
        $r21 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $s13 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: short features>;

        $s14 = $s13 & 8;

        if $s14 == 0 goto label09;

        if $r21 == null goto label51;

        $r22 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.ls.LSSerializerFilter fDOMFilter>;

        if $r22 == null goto label08;

        $r23 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.ls.LSSerializerFilter fDOMFilter>;

        $i15 = interfaceinvoke $r23.<org.w3c.dom.ls.LSSerializerFilter: int getWhatToShow()>();

        $i16 = $i15 & 8;

        if $i16 == 0 goto label08;

        $r24 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.ls.LSSerializerFilter fDOMFilter>;

        $s17 = interfaceinvoke $r24.<org.w3c.dom.ls.LSSerializerFilter: short acceptNode(org.w3c.dom.Node)>(r1);

        $i27 = (int) $s17;

        lookupswitch($i27)
        {
            case 2: goto label07;
            case 3: goto label07;
            default: goto label08;
        };

     label07:
        return;

     label08:
        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void startCDATA()>();

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void characters(java.lang.String)>($r21);

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void endCDATA()>();

        goto label51;

     label09:
        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void characters(java.lang.String)>($r21);

        goto label51;

     label10:
        $r9 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.OutputFormat _format>;

        $z0 = virtualinvoke $r9.<org.apache.xml.serialize.OutputFormat: boolean getOmitComments()>();

        if $z0 != 0 goto label51;

        $r10 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        if $r10 == null goto label51;

        $r11 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.ls.LSSerializerFilter fDOMFilter>;

        if $r11 == null goto label12;

        $r12 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.ls.LSSerializerFilter fDOMFilter>;

        $i2 = interfaceinvoke $r12.<org.w3c.dom.ls.LSSerializerFilter: int getWhatToShow()>();

        $i3 = $i2 & 128;

        if $i3 == 0 goto label12;

        $r13 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.ls.LSSerializerFilter fDOMFilter>;

        $s4 = interfaceinvoke $r13.<org.w3c.dom.ls.LSSerializerFilter: short acceptNode(org.w3c.dom.Node)>(r1);

        $i28 = (int) $s4;

        lookupswitch($i28)
        {
            case 2: goto label11;
            case 3: goto label11;
            default: goto label12;
        };

     label11:
        return;

     label12:
        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void comment(java.lang.String)>($r10);

        goto label51;

     label13:
        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void endCDATA()>();

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState content()>();

        $s8 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: short features>;

        $s9 = $s8 & 4;

        if $s9 != 0 goto label14;

        $r20 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        if $r20 != null goto label20;

     label14:
        $r17 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.ls.LSSerializerFilter fDOMFilter>;

        if $r17 == null goto label19;

        $r18 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.ls.LSSerializerFilter fDOMFilter>;

        $i10 = interfaceinvoke $r18.<org.w3c.dom.ls.LSSerializerFilter: int getWhatToShow()>();

        $i11 = $i10 & 16;

        if $i11 == 0 goto label19;

        $r19 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.ls.LSSerializerFilter fDOMFilter>;

        $s12 = interfaceinvoke $r19.<org.w3c.dom.ls.LSSerializerFilter: short acceptNode(org.w3c.dom.Node)>(r1);

        $i29 = (int) $s12;

        lookupswitch($i29)
        {
            case 2: goto label15;
            case 3: goto label16;
            default: goto label19;
        };

     label15:
        return;

     label16:
        r52 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label18;

     label17:
        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void serializeNode(org.w3c.dom.Node)>(r52);

        r52 = interfaceinvoke r52.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label18:
        if r52 != null goto label17;

        return;

     label19:
        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void checkUnboundNamespacePrefixedNode(org.w3c.dom.Node)>(r1);

        $r53 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r53.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("&");

        $r54 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        $r55 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        virtualinvoke $r54.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>($r55);

        $r56 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r56.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(";");

        goto label51;

     label20:
        r57 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label22;

     label21:
        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void serializeNode(org.w3c.dom.Node)>(r57);

        r57 = interfaceinvoke r57.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label22:
        if r57 != null goto label21;

        goto label51;

     label23:
        $r14 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.ls.LSSerializerFilter fDOMFilter>;

        if $r14 == null goto label25;

        $r15 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.ls.LSSerializerFilter fDOMFilter>;

        $i5 = interfaceinvoke $r15.<org.w3c.dom.ls.LSSerializerFilter: int getWhatToShow()>();

        $i6 = $i5 & 64;

        if $i6 == 0 goto label25;

        $r16 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.ls.LSSerializerFilter fDOMFilter>;

        $s7 = interfaceinvoke $r16.<org.w3c.dom.ls.LSSerializerFilter: short acceptNode(org.w3c.dom.Node)>(r1);

        $i30 = (int) $s7;

        lookupswitch($i30)
        {
            case 2: goto label24;
            case 3: goto label24;
            default: goto label25;
        };

     label24:
        return;

     label25:
        $r58 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r59 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void processingInstructionIO(java.lang.String,java.lang.String)>($r58, $r59);

        goto label51;

     label26:
        $r32 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.ls.LSSerializerFilter fDOMFilter>;

        if $r32 == null goto label31;

        $r33 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.ls.LSSerializerFilter fDOMFilter>;

        $i22 = interfaceinvoke $r33.<org.w3c.dom.ls.LSSerializerFilter: int getWhatToShow()>();

        $i23 = $i22 & 1;

        if $i23 == 0 goto label31;

        $r34 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.ls.LSSerializerFilter fDOMFilter>;

        $s24 = interfaceinvoke $r34.<org.w3c.dom.ls.LSSerializerFilter: short acceptNode(org.w3c.dom.Node)>(r1);

        $i31 = (int) $s24;

        lookupswitch($i31)
        {
            case 2: goto label27;
            case 3: goto label28;
            default: goto label31;
        };

     label27:
        return;

     label28:
        r60 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label30;

     label29:
        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void serializeNode(org.w3c.dom.Node)>(r60);

        r60 = interfaceinvoke r60.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label30:
        if r60 != null goto label29;

        return;

     label31:
        $r61 = (org.w3c.dom.Element) r1;

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void serializeElement(org.w3c.dom.Element)>($r61);

        goto label51;

     label32:
        $r2 = (org.w3c.dom.Document) r1;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.DocumentType getDoctype()>();

        if $r3 == null goto label48;

     label33:
        $r4 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r4.<org.apache.xml.serialize.Printer: void enterDTD()>();

        $r5 = interfaceinvoke $r3.<org.w3c.dom.DocumentType: java.lang.String getPublicId()>();

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.lang.String _docTypePublicId> = $r5;

        $r6 = interfaceinvoke $r3.<org.w3c.dom.DocumentType: java.lang.String getSystemId()>();

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.lang.String _docTypeSystemId> = $r6;

        $r7 = interfaceinvoke $r3.<org.w3c.dom.DocumentType: java.lang.String getInternalSubset()>();

        if $r7 == null goto label34;

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i1 <= 0 goto label34;

        $r8 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r8.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>($r7);

     label34:
        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void endDTD()>();

     label35:
        goto label48;

     label36:
        $r44 := @caughtexception;

        $r45 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        r62 = null;

        r63 = null;

     label37:
        $r46 = (java.lang.Class[]) null;

        $r47 = virtualinvoke $r45.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getPublicId", $r46);

        $r48 = virtualinvoke $r47.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r49 = <org.apache.xml.serialize.BaseMarkupSerializer: java.lang.Class class$java$lang$String>;

        if $r49 != null goto label38;

        $r64 = staticinvoke <org.apache.xml.serialize.BaseMarkupSerializer: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xml.serialize.BaseMarkupSerializer: java.lang.Class class$java$lang$String> = $r64;

        goto label39;

     label38:
        $r64 = <org.apache.xml.serialize.BaseMarkupSerializer: java.lang.Class class$java$lang$String>;

     label39:
        $z4 = virtualinvoke $r48.<java.lang.Object: boolean equals(java.lang.Object)>($r64);

        if $z4 == 0 goto label40;

        $r50 = (java.lang.Object[]) null;

        $r51 = virtualinvoke $r47.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, $r50);

        r62 = (java.lang.String) $r51;

     label40:
        goto label42;

     label41:
        $r37 := @caughtexception;

     label42:
        $r38 = (java.lang.Class[]) null;

        $r39 = virtualinvoke $r45.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getSystemId", $r38);

        $r40 = virtualinvoke $r39.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r41 = <org.apache.xml.serialize.BaseMarkupSerializer: java.lang.Class class$java$lang$String>;

        if $r41 != null goto label43;

        $r65 = staticinvoke <org.apache.xml.serialize.BaseMarkupSerializer: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xml.serialize.BaseMarkupSerializer: java.lang.Class class$java$lang$String> = $r65;

        goto label44;

     label43:
        $r65 = <org.apache.xml.serialize.BaseMarkupSerializer: java.lang.Class class$java$lang$String>;

     label44:
        $z3 = virtualinvoke $r40.<java.lang.Object: boolean equals(java.lang.Object)>($r65);

        if $z3 == 0 goto label45;

        $r42 = (java.lang.Object[]) null;

        $r43 = virtualinvoke $r39.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, $r42);

        r63 = (java.lang.String) $r43;

     label45:
        goto label47;

     label46:
        $r35 := @caughtexception;

     label47:
        $r36 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r36.<org.apache.xml.serialize.Printer: void enterDTD()>();

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.lang.String _docTypePublicId> = r62;

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.lang.String _docTypeSystemId> = r63;

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void endDTD()>();

     label48:
        r66 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label50;

     label49:
        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void serializeNode(org.w3c.dom.Node)>(r66);

        r66 = interfaceinvoke r66.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label50:
        if r66 != null goto label49;

        goto label51;

     label51:
        return;

        catch java.lang.NoSuchMethodError from label33 to label35 with label36;
        catch java.lang.Exception from label37 to label40 with label41;
        catch java.lang.Exception from label42 to label45 with label46;
    }

    protected org.apache.xml.serialize.ElementState content() throws java.io.IOException
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        org.apache.xml.serialize.ElementState $r1;
        org.apache.xml.serialize.Printer $r2, $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        $r1 = virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState getElementState()>();

        $z0 = virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: boolean isDocumentState()>();

        if $z0 != 0 goto label3;

        $z1 = $r1.<org.apache.xml.serialize.ElementState: boolean inCData>;

        if $z1 == 0 goto label1;

        $z2 = $r1.<org.apache.xml.serialize.ElementState: boolean doCData>;

        if $z2 != 0 goto label1;

        $r3 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r3.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("]]>");

        $r1.<org.apache.xml.serialize.ElementState: boolean inCData> = 0;

     label1:
        $z3 = $r1.<org.apache.xml.serialize.ElementState: boolean empty>;

        if $z3 == 0 goto label2;

        $r2 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r2.<org.apache.xml.serialize.Printer: void printText(char)>(62);

        $r1.<org.apache.xml.serialize.ElementState: boolean empty> = 0;

     label2:
        $r1.<org.apache.xml.serialize.ElementState: boolean afterElement> = 0;

        $r1.<org.apache.xml.serialize.ElementState: boolean afterComment> = 0;

     label3:
        return $r1;
    }

    protected void characters(java.lang.String) throws java.io.IOException
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        org.apache.xml.serialize.ElementState $r1;
        int $i0, $i1;
        java.lang.String r4;
        org.apache.xml.serialize.Printer $r2, $r3, $r5, $r6, $r7, $r8, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r4 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState content()>();

        $z0 = $r1.<org.apache.xml.serialize.ElementState: boolean inCData>;

        if $z0 != 0 goto label1;

        $z2 = $r1.<org.apache.xml.serialize.ElementState: boolean doCData>;

        if $z2 == 0 goto label3;

     label1:
        $z1 = $r1.<org.apache.xml.serialize.ElementState: boolean inCData>;

        if $z1 != 0 goto label2;

        $r6 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r6.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("<![CDATA[");

        $r1.<org.apache.xml.serialize.ElementState: boolean inCData> = 1;

     label2:
        $r2 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        $i0 = virtualinvoke $r2.<org.apache.xml.serialize.Printer: int getNextIndent()>();

        $r3 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r3.<org.apache.xml.serialize.Printer: void setNextIndent(int)>(0);

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void printCDATAText(java.lang.String)>(r4);

        $r5 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r5.<org.apache.xml.serialize.Printer: void setNextIndent(int)>($i0);

        goto label5;

     label3:
        $z3 = $r1.<org.apache.xml.serialize.ElementState: boolean preserveSpace>;

        if $z3 == 0 goto label4;

        $r7 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        $i1 = virtualinvoke $r7.<org.apache.xml.serialize.Printer: int getNextIndent()>();

        $r8 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r8.<org.apache.xml.serialize.Printer: void setNextIndent(int)>(0);

        $z5 = $r1.<org.apache.xml.serialize.ElementState: boolean unescaped>;

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void printText(java.lang.String,boolean,boolean)>(r4, 1, $z5);

        $r9 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r9.<org.apache.xml.serialize.Printer: void setNextIndent(int)>($i1);

        goto label5;

     label4:
        $z4 = $r1.<org.apache.xml.serialize.ElementState: boolean unescaped>;

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void printText(java.lang.String,boolean,boolean)>(r4, 0, $z4);

     label5:
        return;
    }

    protected abstract java.lang.String getEntityRef(int);

    protected abstract void serializeElement(org.w3c.dom.Element) throws java.io.IOException;

    protected void serializePreRoot() throws java.io.IOException
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        java.util.Vector $r1, $r2, $r6, $r7;
        int i0, $i1;
        java.lang.Object $r3;
        java.lang.String $r4;
        org.apache.xml.serialize.Printer $r5;
        boolean $z0;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        $r1 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.util.Vector _preRoot>;

        if $r1 == null goto label4;

        i0 = 0;

        goto label3;

     label1:
        $r2 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.util.Vector _preRoot>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r4 = (java.lang.String) $r3;

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void printText(java.lang.String,boolean,boolean)>($r4, 1, 1);

        $z0 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: boolean _indenting>;

        if $z0 == 0 goto label2;

        $r5 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r5.<org.apache.xml.serialize.Printer: void breakLine()>();

     label2:
        i0 = i0 + 1;

     label3:
        $r7 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.util.Vector _preRoot>;

        $i1 = virtualinvoke $r7.<java.util.Vector: int size()>();

        if i0 < $i1 goto label1;

        $r6 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.util.Vector _preRoot>;

        virtualinvoke $r6.<java.util.Vector: void removeAllElements()>();

     label4:
        return;
    }

    protected void printCDATAText(java.lang.String) throws java.io.IOException
    {
        org.w3c.dom.ls.LSException $r28, $r29;
        org.apache.xml.serialize.BaseMarkupSerializer r1;
        org.apache.xerces.dom.DOMErrorImpl $r15, $r19, $r23;
        org.apache.xml.serialize.Printer $r2, $r3, $r5, $r26, $r27;
        boolean $z0, $z1, $z2;
        short $s8, $s9, $s10, $s11;
        org.apache.xml.serialize.EncodingInfo $r6;
        java.lang.StringBuffer $r8, $r9, $r10, $r30;
        org.w3c.dom.Node $r14, $r18, $r22;
        int $i0, $i3, $i4, $i6, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        java.lang.String r0, $r4, $r11, $r13, $r17;
        char $c1, $c2, $c5, $c7;
        org.w3c.dom.DOMErrorHandler $r12, $r16, $r20, $r24;

        r1 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i12 = 0;

        goto label12;

     label01:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i12);

        $i13 = (int) $c1;

        if $i13 != 93 goto label05;

        $i3 = i12 + 2;

        if $i3 >= $i0 goto label05;

        $i4 = i12 + 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $i14 = (int) $c5;

        if $i14 != 93 goto label05;

        $i6 = i12 + 2;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        $i15 = (int) $c7;

        if $i15 != 62 goto label05;

        $r12 = r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.DOMErrorHandler fDOMErrorHandler>;

        if $r12 == null goto label04;

        $s8 = r1.<org.apache.xml.serialize.BaseMarkupSerializer: short features>;

        $s9 = $s8 & 16;

        if $s9 != 0 goto label03;

        $r17 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://apache.org/xml/serializer", "EndingCDATA", null);

        $s10 = r1.<org.apache.xml.serialize.BaseMarkupSerializer: short features>;

        $s11 = $s10 & 2;

        if $s11 == 0 goto label02;

        $r22 = r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.Node fCurrentNode>;

        virtualinvoke r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.DOMError modifyDOMError(java.lang.String,short,java.lang.String,org.w3c.dom.Node)>($r17, 3, "wf-invalid-character", $r22);

        $r24 = r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.DOMErrorHandler fDOMErrorHandler>;

        $r23 = r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xerces.dom.DOMErrorImpl fDOMError>;

        interfaceinvoke $r24.<org.w3c.dom.DOMErrorHandler: boolean handleError(org.w3c.dom.DOMError)>($r23);

        $r28 = new org.w3c.dom.ls.LSException;

        specialinvoke $r28.<org.w3c.dom.ls.LSException: void <init>(short,java.lang.String)>(82, $r17);

        throw $r28;

     label02:
        $r18 = r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.Node fCurrentNode>;

        virtualinvoke r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.DOMError modifyDOMError(java.lang.String,short,java.lang.String,org.w3c.dom.Node)>($r17, 2, "cdata-section-not-splitted", $r18);

        $r20 = r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.DOMErrorHandler fDOMErrorHandler>;

        $r19 = r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xerces.dom.DOMErrorImpl fDOMError>;

        $z1 = interfaceinvoke $r20.<org.w3c.dom.DOMErrorHandler: boolean handleError(org.w3c.dom.DOMError)>($r19);

        if $z1 != 0 goto label04;

        $r29 = new org.w3c.dom.ls.LSException;

        specialinvoke $r29.<org.w3c.dom.ls.LSException: void <init>(short,java.lang.String)>(82, $r17);

        throw $r29;

     label03:
        $r13 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://apache.org/xml/serializer", "SplittingCDATA", null);

        $r14 = r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.Node fCurrentNode>;

        virtualinvoke r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.DOMError modifyDOMError(java.lang.String,short,java.lang.String,org.w3c.dom.Node)>($r13, 1, null, $r14);

        $r16 = r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.DOMErrorHandler fDOMErrorHandler>;

        $r15 = r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xerces.dom.DOMErrorImpl fDOMError>;

        interfaceinvoke $r16.<org.w3c.dom.DOMErrorHandler: boolean handleError(org.w3c.dom.DOMError)>($r15);

     label04:
        $r26 = r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r26.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("]]]]><![CDATA[>");

        i12 = i12 + 2;

        goto label11;

     label05:
        $i16 = (int) $c1;

        $z2 = staticinvoke <org.apache.xerces.util.XMLChar: boolean isValid(int)>($i16);

        if $z2 != 0 goto label07;

        i12 = i12 + 1;

        if i12 >= $i0 goto label06;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i12);

        $i17 = (int) $c1;

        $i18 = (int) $c2;

        virtualinvoke r1.<org.apache.xml.serialize.BaseMarkupSerializer: void surrogates(int,int,boolean)>($i17, $i18, 1);

        goto label11;

     label06:
        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The character \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is an invalid XML character");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.xml.serialize.BaseMarkupSerializer: void fatalError(java.lang.String)>($r11);

        goto label11;

     label07:
        $i19 = (int) $c1;

        if $i19 < 32 goto label08;

        $r6 = r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.EncodingInfo _encodingInfo>;

        $z0 = virtualinvoke $r6.<org.apache.xml.serialize.EncodingInfo: boolean isPrintable(char)>($c1);

        if $z0 == 0 goto label08;

        $i20 = (int) $c1;

        if $i20 != 127 goto label09;

     label08:
        $i21 = (int) $c1;

        if $i21 == 10 goto label09;

        $i22 = (int) $c1;

        if $i22 == 13 goto label09;

        $i23 = (int) $c1;

        if $i23 != 9 goto label10;

     label09:
        $r27 = r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r27.<org.apache.xml.serialize.Printer: void printText(char)>($c1);

        goto label11;

     label10:
        $r2 = r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r2.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("]]>&#x");

        $r3 = r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        $i24 = (int) $c1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i24);

        virtualinvoke $r3.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>($r4);

        $r5 = r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r5.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(";<![CDATA[");

     label11:
        i12 = i12 + 1;

     label12:
        if i12 < $i0 goto label01;

        return;
    }

    protected void surrogates(int, int, boolean) throws java.io.IOException
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        org.apache.xml.serialize.Printer $r7, $r8, $r10;
        boolean $z0, $z1, $z2, z3, $z4;
        org.apache.xml.serialize.ElementState $r6;
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19;
        int i0, i2, $i5;
        java.lang.String $r5, $r9, $r15, $r20;
        char $c1, $c3, $c4, $c6, $c7;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        z3 := @parameter2: boolean;

        $z0 = staticinvoke <org.apache.xerces.util.XMLChar: boolean isHighSurrogate(int)>(i0);

        if $z0 == 0 goto label4;

        $z1 = staticinvoke <org.apache.xerces.util.XMLChar: boolean isLowSurrogate(int)>(i2);

        if $z1 != 0 goto label1;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The character \'");

        $c7 = (char) i2;

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c7);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is an invalid XML character");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void fatalError(java.lang.String)>($r20);

        goto label5;

     label1:
        $c4 = (char) i0;

        $c3 = (char) i2;

        $i5 = staticinvoke <org.apache.xerces.util.XMLChar: int supplemental(char,char)>($c4, $c3);

        $z2 = staticinvoke <org.apache.xerces.util.XMLChar: boolean isValid(int)>($i5);

        if $z2 != 0 goto label2;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The character \'");

        $c6 = (char) $i5;

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is an invalid XML character");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void fatalError(java.lang.String)>($r15);

        goto label5;

     label2:
        if z3 == 0 goto label3;

        $r6 = virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState content()>();

        $z4 = $r6.<org.apache.xml.serialize.ElementState: boolean inCData>;

        if $z4 == 0 goto label3;

        $r7 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r7.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("]]>&#x");

        $r8 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i5);

        virtualinvoke $r8.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>($r9);

        $r10 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r10.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>(";<![CDATA[");

        goto label5;

     label3:
        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void printHex(int)>($i5);

        goto label5;

     label4:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The character \'");

        $c1 = (char) i0;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is an invalid XML character");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void fatalError(java.lang.String)>($r5);

     label5:
        return;
    }

    protected void printText(char[], int, int, boolean, boolean) throws java.io.IOException
    {
        org.apache.xml.serialize.BaseMarkupSerializer r1;
        int i0, i1, $i3, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18;
        org.apache.xml.serialize.Printer $r2, $r3, $r4;
        boolean z0, z1;
        char c2, c4;
        char[] r0;

        r1 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        if z0 == 0 goto label09;

        goto label04;

     label01:
        c2 = r0[i0];

        i0 = i0 + 1;

        $i6 = (int) c2;

        if $i6 == 10 goto label02;

        $i7 = (int) c2;

        if $i7 == 13 goto label02;

        if z1 == 0 goto label03;

     label02:
        $r3 = r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r3.<org.apache.xml.serialize.Printer: void printText(char)>(c2);

        goto label04;

     label03:
        $i8 = (int) c2;

        virtualinvoke r1.<org.apache.xml.serialize.BaseMarkupSerializer: void printEscaped(int)>($i8);

     label04:
        $i3 = i1;

        $i10 = (int) -1;

        i1 = i1 + $i10;

        if $i3 > 0 goto label01;

        goto label10;

     label05:
        c4 = r0[i0];

        i0 = i0 + 1;

        $i11 = (int) c4;

        if $i11 == 32 goto label06;

        $i12 = (int) c4;

        if $i12 == 12 goto label06;

        $i13 = (int) c4;

        if $i13 == 9 goto label06;

        $i14 = (int) c4;

        if $i14 == 10 goto label06;

        $i15 = (int) c4;

        if $i15 != 13 goto label07;

     label06:
        $r4 = r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r4.<org.apache.xml.serialize.Printer: void printSpace()>();

        goto label09;

     label07:
        if z1 == 0 goto label08;

        $r2 = r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r2.<org.apache.xml.serialize.Printer: void printText(char)>(c4);

        goto label09;

     label08:
        $i16 = (int) c4;

        virtualinvoke r1.<org.apache.xml.serialize.BaseMarkupSerializer: void printEscaped(int)>($i16);

     label09:
        $i5 = i1;

        $i18 = (int) -1;

        i1 = i1 + $i18;

        if $i5 > 0 goto label05;

     label10:
        return;
    }

    protected void printText(java.lang.String, boolean, boolean) throws java.io.IOException
    {
        org.apache.xml.serialize.BaseMarkupSerializer r1;
        int i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.lang.String r0;
        org.apache.xml.serialize.Printer $r2, $r3, $r4;
        boolean z0, z1;
        char $c0, $c1;

        r1 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        if z0 == 0 goto label06;

        i2 = 0;

        goto label05;

     label01:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $i6 = (int) $c1;

        if $i6 == 10 goto label02;

        $i7 = (int) $c1;

        if $i7 == 13 goto label02;

        if z1 == 0 goto label03;

     label02:
        $r3 = r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r3.<org.apache.xml.serialize.Printer: void printText(char)>($c1);

        goto label04;

     label03:
        $i8 = (int) $c1;

        virtualinvoke r1.<org.apache.xml.serialize.BaseMarkupSerializer: void printEscaped(int)>($i8);

     label04:
        i2 = i2 + 1;

     label05:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 < $i3 goto label01;

        goto label13;

     label06:
        i4 = 0;

        goto label12;

     label07:
        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i9 = (int) $c0;

        if $i9 == 32 goto label08;

        $i10 = (int) $c0;

        if $i10 == 12 goto label08;

        $i11 = (int) $c0;

        if $i11 == 9 goto label08;

        $i12 = (int) $c0;

        if $i12 == 10 goto label08;

        $i13 = (int) $c0;

        if $i13 != 13 goto label09;

     label08:
        $r4 = r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r4.<org.apache.xml.serialize.Printer: void printSpace()>();

        goto label11;

     label09:
        if z1 == 0 goto label10;

        $r2 = r1.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r2.<org.apache.xml.serialize.Printer: void printText(char)>($c0);

        goto label11;

     label10:
        $i14 = (int) $c0;

        virtualinvoke r1.<org.apache.xml.serialize.BaseMarkupSerializer: void printEscaped(int)>($i14);

     label11:
        i4 = i4 + 1;

     label12:
        $i5 = virtualinvoke r0.<java.lang.String: int length()>();

        if i4 < $i5 goto label07;

     label13:
        return;
    }

    protected void printDoctypeURL(java.lang.String) throws java.io.IOException
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        int i4, $i6, $i7, $i8, $i9, $i10;
        java.lang.String r2, $r7;
        org.apache.xml.serialize.Printer $r1, $r3, $r4, $r5, $r6;
        char $c0, $c1, $c2, $c3, $c5;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r1.<org.apache.xml.serialize.Printer: void printText(char)>(34);

        i4 = 0;

        goto label5;

     label1:
        $c0 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i4);

        $i7 = (int) $c0;

        if $i7 == 34 goto label2;

        $c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i4);

        $i8 = (int) $c1;

        if $i8 < 32 goto label2;

        $c2 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i4);

        $i9 = (int) $c2;

        if $i9 <= 127 goto label3;

     label2:
        $r5 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r5.<org.apache.xml.serialize.Printer: void printText(char)>(37);

        $r6 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        $c5 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i4);

        $i10 = (int) $c5;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i10);

        virtualinvoke $r6.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>($r7);

        goto label4;

     label3:
        $r3 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        $c3 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i4);

        virtualinvoke $r3.<org.apache.xml.serialize.Printer: void printText(char)>($c3);

     label4:
        i4 = i4 + 1;

     label5:
        $i6 = virtualinvoke r2.<java.lang.String: int length()>();

        if i4 < $i6 goto label1;

        $r4 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r4.<org.apache.xml.serialize.Printer: void printText(char)>(34);

        return;
    }

    protected void printEscaped(int) throws java.io.IOException
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        org.apache.xml.serialize.EncodingInfo $r5;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7, $i12, $i14;
        java.lang.String $r1;
        org.apache.xml.serialize.Printer $r2, $r3, $r4, $r6, $r7, $r8;
        boolean $z0;
        char $c4, $c8, $c9, $c10;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.lang.String getEntityRef(int)>(i0);

        if $r1 == null goto label1;

        $r6 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r6.<org.apache.xml.serialize.Printer: void printText(char)>(38);

        $r7 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r7.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>($r1);

        $r8 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r8.<org.apache.xml.serialize.Printer: void printText(char)>(59);

        goto label6;

     label1:
        if i0 < 32 goto label2;

        $r5 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.EncodingInfo _encodingInfo>;

        $c10 = (char) i0;

        $z0 = virtualinvoke $r5.<org.apache.xml.serialize.EncodingInfo: boolean isPrintable(char)>($c10);

        if $z0 == 0 goto label2;

        if i0 != 127 goto label3;

     label2:
        if i0 == 10 goto label3;

        if i0 == 13 goto label3;

        if i0 != 9 goto label5;

     label3:
        if i0 >= 65536 goto label4;

        $r4 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        $c9 = (char) i0;

        virtualinvoke $r4.<org.apache.xml.serialize.Printer: void printText(char)>($c9);

        goto label6;

     label4:
        $r2 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        $i1 = i0 - 65536;

        $i2 = $i1 >> 10;

        $i12 = (int) 55296;

        $i3 = $i2 + $i12;

        $c4 = (char) $i3;

        virtualinvoke $r2.<org.apache.xml.serialize.Printer: void printText(char)>($c4);

        $r3 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        $i5 = i0 - 65536;

        $i6 = $i5 & 1023;

        $i14 = (int) 56320;

        $i7 = $i6 + $i14;

        $c8 = (char) $i7;

        virtualinvoke $r3.<org.apache.xml.serialize.Printer: void printText(char)>($c8);

        goto label6;

     label5:
        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: void printHex(int)>(i0);

     label6:
        return;
    }

    final void printHex(int) throws java.io.IOException
    {
        int i0;
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        java.lang.String $r3;
        org.apache.xml.serialize.Printer $r1, $r2, $r4;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r1.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>("&#x");

        $r2 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r2.<org.apache.xml.serialize.Printer: void printText(java.lang.String)>($r3);

        $r4 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.Printer _printer>;

        virtualinvoke $r4.<org.apache.xml.serialize.Printer: void printText(char)>(59);

        return;
    }

    protected void printEscaped(java.lang.String) throws java.io.IOException
    {
        org.apache.xml.serialize.BaseMarkupSerializer r1;
        int $i2, $i3, $i4, $i7, $i8, $i9, $i10, i11, i12, $i13, $i14, $i15, $i17, $i18, $i20, $i21, $i23, $i24, $i26;
        java.lang.String r0;
        char $c0, $c1, $c5, $c6;

        r1 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r0 := @parameter0: java.lang.String;

        i11 = 0;

        goto label3;

     label1:
        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11);

        $i14 = (int) $c0;

        i12 = $i14;

        $c1 = $c0 & 64512;

        $i15 = (int) $c1;

        $i17 = (int) 55296;

        if $i15 != $i17 goto label2;

        $i2 = i11 + 1;

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i2 >= $i3 goto label2;

        $i4 = i11 + 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $c6 = $c5 & 64512;

        $i18 = (int) $c6;

        $i20 = (int) 56320;

        if $i18 != $i20 goto label2;

        $i21 = (int) $c0;

        $i23 = (int) 55296;

        $i7 = $i21 - $i23;

        $i8 = $i7 << 10;

        $i9 = 65536 + $i8;

        $i24 = (int) $c5;

        $i10 = $i9 + $i24;

        $i26 = (int) 56320;

        i12 = $i10 - $i26;

        i11 = i11 + 1;

     label2:
        virtualinvoke r1.<org.apache.xml.serialize.BaseMarkupSerializer: void printEscaped(int)>(i12);

        i11 = i11 + 1;

     label3:
        $i13 = virtualinvoke r0.<java.lang.String: int length()>();

        if i11 < $i13 goto label1;

        return;
    }

    protected org.apache.xml.serialize.ElementState getElementState()
    {
        org.apache.xml.serialize.ElementState $r2;
        int $i0;
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        org.apache.xml.serialize.ElementState[] $r1;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        $r1 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState[] _elementStates>;

        $i0 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: int _elementStateCount>;

        $r2 = $r1[$i0];

        return $r2;
    }

    protected org.apache.xml.serialize.ElementState enterElementState(java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        org.apache.xml.serialize.ElementState $r11, $r13, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11;
        java.lang.String r3, r4, r5;
        java.util.Hashtable $r6;
        boolean z0;
        org.apache.xml.serialize.ElementState[] $r1, $r2, $r7, r8, $r9, $r10, $r12;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $i0 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: int _elementStateCount>;

        $i2 = $i0 + 1;

        $r1 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState[] _elementStates>;

        $i1 = lengthof $r1;

        if $i2 != $i1 goto label5;

        $r7 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState[] _elementStates>;

        $i6 = lengthof $r7;

        $i7 = $i6 + 10;

        r8 = newarray (org.apache.xml.serialize.ElementState)[$i7];

        i10 = 0;

        goto label2;

     label1:
        $r10 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState[] _elementStates>;

        $r11 = $r10[i10];

        r8[i10] = $r11;

        i10 = i10 + 1;

     label2:
        $r9 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState[] _elementStates>;

        $i8 = lengthof $r9;

        if i10 < $i8 goto label1;

        $r12 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState[] _elementStates>;

        i11 = lengthof $r12;

        goto label4;

     label3:
        $r13 = new org.apache.xml.serialize.ElementState;

        specialinvoke $r13.<org.apache.xml.serialize.ElementState: void <init>()>();

        r8[i11] = $r13;

        i11 = i11 + 1;

     label4:
        $i9 = lengthof r8;

        if i11 < $i9 goto label3;

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState[] _elementStates> = r8;

     label5:
        $i3 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: int _elementStateCount>;

        $i4 = $i3 + 1;

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: int _elementStateCount> = $i4;

        $r2 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState[] _elementStates>;

        $i5 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: int _elementStateCount>;

        $r14 = $r2[$i5];

        $r14.<org.apache.xml.serialize.ElementState: java.lang.String namespaceURI> = r3;

        $r14.<org.apache.xml.serialize.ElementState: java.lang.String localName> = r4;

        $r14.<org.apache.xml.serialize.ElementState: java.lang.String rawName> = r5;

        $r14.<org.apache.xml.serialize.ElementState: boolean preserveSpace> = z0;

        $r14.<org.apache.xml.serialize.ElementState: boolean empty> = 1;

        $r14.<org.apache.xml.serialize.ElementState: boolean afterElement> = 0;

        $r14.<org.apache.xml.serialize.ElementState: boolean afterComment> = 0;

        $r14.<org.apache.xml.serialize.ElementState: boolean inCData> = 0;

        $r14.<org.apache.xml.serialize.ElementState: boolean doCData> = 0;

        $r14.<org.apache.xml.serialize.ElementState: boolean unescaped> = 0;

        $r6 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.util.Hashtable _prefixes>;

        $r14.<org.apache.xml.serialize.ElementState: java.util.Hashtable prefixes> = $r6;

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.util.Hashtable _prefixes> = null;

        return $r14;
    }

    protected org.apache.xml.serialize.ElementState leaveElementState()
    {
        java.lang.IllegalStateException $r2;
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        org.apache.xml.serialize.ElementState $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1;
        org.apache.xml.serialize.ElementState[] $r3;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        $i0 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: int _elementStateCount>;

        if $i0 <= 0 goto label1;

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.util.Hashtable _prefixes> = null;

        $i1 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: int _elementStateCount>;

        $i2 = $i1 - 1;

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: int _elementStateCount> = $i2;

        $r3 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState[] _elementStates>;

        $i3 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: int _elementStateCount>;

        $r4 = $r3[$i3];

        return $r4;

     label1:
        $r1 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://apache.org/xml/serializer", "Internal", null);

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r2;
    }

    protected boolean isDocumentState()
    {
        int $i0;
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        boolean $z0;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        $i0 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: int _elementStateCount>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    final void clearDocumentState()
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r0.<org.apache.xml.serialize.BaseMarkupSerializer: int _elementStateCount> = 0;

        return;
    }

    protected java.lang.String getPrefix(java.lang.String)
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        org.apache.xml.serialize.ElementState $r3, $r6;
        int $i0, i1, $i3;
        java.lang.String r7, r12, r13;
        java.util.Hashtable $r1, $r4, $r8, $r10;
        java.lang.Object $r9, $r11;
        org.apache.xml.serialize.ElementState[] $r2, $r5;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r7 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.util.Hashtable _prefixes>;

        if $r1 == null goto label1;

        $r10 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: java.util.Hashtable _prefixes>;

        $r11 = virtualinvoke $r10.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r7);

        r12 = (java.lang.String) $r11;

        if r12 == null goto label1;

        return r12;

     label1:
        $i0 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: int _elementStateCount>;

        if $i0 != 0 goto label2;

        return null;

     label2:
        i1 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: int _elementStateCount>;

        goto label5;

     label3:
        $r2 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState[] _elementStates>;

        $r3 = $r2[i1];

        $r4 = $r3.<org.apache.xml.serialize.ElementState: java.util.Hashtable prefixes>;

        if $r4 == null goto label4;

        $r5 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xml.serialize.ElementState[] _elementStates>;

        $r6 = $r5[i1];

        $r8 = $r6.<org.apache.xml.serialize.ElementState: java.util.Hashtable prefixes>;

        $r9 = virtualinvoke $r8.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r7);

        r13 = (java.lang.String) $r9;

        if r13 == null goto label4;

        return r13;

     label4:
        $i3 = (int) -1;

        i1 = i1 + $i3;

     label5:
        if i1 > 0 goto label3;

        return null;
    }

    protected org.w3c.dom.DOMError modifyDOMError(java.lang.String, short, java.lang.String, org.w3c.dom.Node)
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        short s0;
        org.apache.xerces.dom.DOMLocatorImpl $r11;
        org.w3c.dom.Node r8;
        int $i2, $i4, $i6;
        java.lang.String r2, r4;
        org.apache.xerces.dom.DOMErrorImpl $r1, $r3, $r5, $r6, $r9, $r10;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r2 := @parameter0: java.lang.String;

        s0 := @parameter1: short;

        r4 := @parameter2: java.lang.String;

        r8 := @parameter3: org.w3c.dom.Node;

        $r1 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xerces.dom.DOMErrorImpl fDOMError>;

        virtualinvoke $r1.<org.apache.xerces.dom.DOMErrorImpl: void reset()>();

        $r3 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xerces.dom.DOMErrorImpl fDOMError>;

        $r3.<org.apache.xerces.dom.DOMErrorImpl: java.lang.String fMessage> = r2;

        $r5 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xerces.dom.DOMErrorImpl fDOMError>;

        $r5.<org.apache.xerces.dom.DOMErrorImpl: java.lang.String fType> = r4;

        $r6 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xerces.dom.DOMErrorImpl fDOMError>;

        $r6.<org.apache.xerces.dom.DOMErrorImpl: short fSeverity> = s0;

        $r9 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xerces.dom.DOMErrorImpl fDOMError>;

        $r11 = new org.apache.xerces.dom.DOMLocatorImpl;

        $i2 = (int) -1;

        $i4 = (int) -1;

        $i6 = (int) -1;

        specialinvoke $r11.<org.apache.xerces.dom.DOMLocatorImpl: void <init>(int,int,int,org.w3c.dom.Node,java.lang.String)>($i2, $i4, $i6, r8, null);

        $r9.<org.apache.xerces.dom.DOMErrorImpl: org.apache.xerces.dom.DOMLocatorImpl fLocator> = $r11;

        $r10 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xerces.dom.DOMErrorImpl fDOMError>;

        return $r10;
    }

    protected void fatalError(java.lang.String) throws java.io.IOException
    {
        org.w3c.dom.DOMErrorHandler $r1, $r6;
        org.w3c.dom.Node $r4;
        java.io.IOException $r2;
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        java.lang.String r3;
        org.apache.xerces.dom.DOMErrorImpl $r5;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.DOMErrorHandler fDOMErrorHandler>;

        if $r1 == null goto label1;

        $r4 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.Node fCurrentNode>;

        virtualinvoke r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.DOMError modifyDOMError(java.lang.String,short,java.lang.String,org.w3c.dom.Node)>(r3, 3, null, $r4);

        $r6 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.w3c.dom.DOMErrorHandler fDOMErrorHandler>;

        $r5 = r0.<org.apache.xml.serialize.BaseMarkupSerializer: org.apache.xerces.dom.DOMErrorImpl fDOMError>;

        interfaceinvoke $r6.<org.w3c.dom.DOMErrorHandler: boolean handleError(org.w3c.dom.DOMError)>($r5);

        goto label2;

     label1:
        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>(r3);

        throw $r2;

     label2:
        return;
    }

    protected void checkUnboundNamespacePrefixedNode(org.w3c.dom.Node) throws java.io.IOException
    {
        org.apache.xml.serialize.BaseMarkupSerializer r0;
        org.w3c.dom.Node r1;

        r0 := @this: org.apache.xml.serialize.BaseMarkupSerializer;

        r1 := @parameter0: org.w3c.dom.Node;

        return;
    }

    public abstract void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;

    public abstract void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException;

    public abstract void endElement(java.lang.String) throws org.xml.sax.SAXException;

    public abstract void startElement(java.lang.String, org.xml.sax.AttributeList) throws org.xml.sax.SAXException;

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
