class org.tukaani.xz.CountingOutputStream extends org.tukaani.xz.FinishableOutputStream
{
    private final java.io.OutputStream out;
    private long size;

    public void <init>(java.io.OutputStream)
    {
        java.io.OutputStream r1;
        org.tukaani.xz.CountingOutputStream r0;

        r0 := @this: org.tukaani.xz.CountingOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<org.tukaani.xz.FinishableOutputStream: void <init>()>();

        r0.<org.tukaani.xz.CountingOutputStream: long size> = 0L;

        r0.<org.tukaani.xz.CountingOutputStream: java.io.OutputStream out> = r1;

        return;
    }

    public void write(int) throws java.io.IOException
    {
        java.io.OutputStream $r1;
        org.tukaani.xz.CountingOutputStream r0;
        long $l1, $l3, $l4;
        byte $b2;
        int i0, $i5;

        r0 := @this: org.tukaani.xz.CountingOutputStream;

        i0 := @parameter0: int;

        $r1 = r0.<org.tukaani.xz.CountingOutputStream: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i0);

        $l1 = r0.<org.tukaani.xz.CountingOutputStream: long size>;

        $b2 = $l1 cmp 0L;

        $i5 = (int) $b2;

        if $i5 < 0 goto label1;

        $l3 = r0.<org.tukaani.xz.CountingOutputStream: long size>;

        $l4 = $l3 + 1L;

        r0.<org.tukaani.xz.CountingOutputStream: long size> = $l4;

     label1:
        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        java.io.OutputStream $r2;
        byte[] r1;
        org.tukaani.xz.CountingOutputStream r0;
        long $l2, $l4, $l5, $l6;
        byte $b3;
        int i0, i1, $i7;

        r0 := @this: org.tukaani.xz.CountingOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.tukaani.xz.CountingOutputStream: java.io.OutputStream out>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>(r1, i0, i1);

        $l2 = r0.<org.tukaani.xz.CountingOutputStream: long size>;

        $b3 = $l2 cmp 0L;

        $i7 = (int) $b3;

        if $i7 < 0 goto label1;

        $l5 = r0.<org.tukaani.xz.CountingOutputStream: long size>;

        $l4 = (long) i1;

        $l6 = $l5 + $l4;

        r0.<org.tukaani.xz.CountingOutputStream: long size> = $l6;

     label1:
        return;
    }

    public void flush() throws java.io.IOException
    {
        java.io.OutputStream $r1;
        org.tukaani.xz.CountingOutputStream r0;

        r0 := @this: org.tukaani.xz.CountingOutputStream;

        $r1 = r0.<org.tukaani.xz.CountingOutputStream: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        java.io.OutputStream $r1;
        org.tukaani.xz.CountingOutputStream r0;

        r0 := @this: org.tukaani.xz.CountingOutputStream;

        $r1 = r0.<org.tukaani.xz.CountingOutputStream: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

        return;
    }

    public long getSize()
    {
        org.tukaani.xz.CountingOutputStream r0;
        long $l0;

        r0 := @this: org.tukaani.xz.CountingOutputStream;

        $l0 = r0.<org.tukaani.xz.CountingOutputStream: long size>;

        return $l0;
    }
}
