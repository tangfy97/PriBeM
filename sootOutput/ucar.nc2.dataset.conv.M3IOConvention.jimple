public class ucar.nc2.dataset.conv.M3IOConvention extends ucar.nc2.dataset.CoordSysBuilder
{
    private ucar.nc2.dataset.CoordinateTransform ct;

    public static boolean isMine(ucar.nc2.NetcdfFile)
    {
        ucar.nc2.Attribute $r1, $r2, $r3, $r4, $r5, $r6;
        ucar.nc2.NetcdfFile r0;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        $r1 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("XORIG");

        if null == $r1 goto label1;

        $r2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("YORIG");

        if null == $r2 goto label1;

        $r3 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("XCELL");

        if null == $r3 goto label1;

        $r4 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("YCELL");

        if null == $r4 goto label1;

        $r5 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("NCOLS");

        if null == $r5 goto label1;

        $r6 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("NROWS");

        if null == $r6 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void <init>()
    {
        ucar.nc2.dataset.conv.M3IOConvention r0;

        r0 := @this: ucar.nc2.dataset.conv.M3IOConvention;

        specialinvoke r0.<ucar.nc2.dataset.CoordSysBuilder: void <init>()>();

        r0.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform ct> = null;

        r0.<ucar.nc2.dataset.conv.M3IOConvention: java.lang.String conventionName> = "M3IO";

        return;
    }

    public void augmentDataset(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask)
    {
        ucar.nc2.util.CancelTask r4;
        ucar.nc2.dataset.conv.M3IOConvention r3;
        ucar.nc2.Variable $r1, $r2;
        ucar.nc2.dataset.NetcdfDataset r0;

        r3 := @this: ucar.nc2.dataset.conv.M3IOConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r4 := @parameter1: ucar.nc2.util.CancelTask;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("x");

        if null == $r1 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("lon");

        if null == $r2 goto label2;

        return;

     label2:
        virtualinvoke r3.<ucar.nc2.dataset.conv.M3IOConvention: void constructCoordAxes(ucar.nc2.dataset.NetcdfDataset)>(r0);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        return;
    }

    protected void constructCoordAxes(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.CoordinateAxis $r4, $r5, $r18, $r19;
        ucar.nc2.dataset.CoordinateTransform $r6, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r20, $r21, $r24;
        int $i0, $i1, $i2;
        ucar.nc2.dataset.conv.M3IOConvention r3;
        boolean $z0;
        ucar.nc2.dataset.VariableDS $r7, $r22;
        ucar.nc2.Attribute $r8, $r23;
        ucar.nc2.Dimension $r1, $r2;
        ucar.nc2.dataset.NetcdfDataset r0;

        r3 := @this: ucar.nc2.dataset.conv.M3IOConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("COL");

        $i0 = virtualinvoke $r1.<ucar.nc2.Dimension: int getLength()>();

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("ROW");

        $i1 = virtualinvoke $r2.<ucar.nc2.Dimension: int getLength()>();

        $i2 = specialinvoke r3.<ucar.nc2.dataset.conv.M3IOConvention: int findAttributeInt(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r0, "GDTYP");

        if $i2 != 1 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        if $z0 == 0 goto label03;

        $r18 = specialinvoke r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateAxis makeCoordLLAxis(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(r0, "lon", "COL", $i0, "XORIG", "XCELL", "degrees east");

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r18);

        $r19 = specialinvoke r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateAxis makeCoordLLAxis(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(r0, "lat", "ROW", $i1, "YORIG", "YCELL", "degrees north");

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r19);

        $r20 = specialinvoke r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform makeLatLongProjection(ucar.nc2.dataset.NetcdfDataset)>(r0);

        r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform ct> = $r20;

        $r21 = r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform ct>;

        $r22 = virtualinvoke r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.VariableDS makeCoordinateTransformVariable(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.CoordinateTransform)>(r0, $r21);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r22);

        $r23 = new ucar.nc2.Attribute;

        specialinvoke $r23.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxes", "lon lat");

        virtualinvoke $r22.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r23);

        goto label13;

     label03:
        $r4 = specialinvoke r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateAxis makeCoordAxis(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(r0, "x", "COL", $i0, "XORIG", "XCELL", "km");

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r4);

        $r5 = specialinvoke r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateAxis makeCoordAxis(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(r0, "y", "ROW", $i1, "YORIG", "YCELL", "km");

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r5);

        if $i2 != 2 goto label04;

        $r17 = specialinvoke r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform makeLCProjection(ucar.nc2.dataset.NetcdfDataset)>(r0);

        r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform ct> = $r17;

        goto label12;

     label04:
        if $i2 != 3 goto label05;

        $r16 = specialinvoke r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform makeTMProjection(ucar.nc2.dataset.NetcdfDataset)>(r0);

        r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform ct> = $r16;

        goto label12;

     label05:
        if $i2 != 4 goto label06;

        $r15 = specialinvoke r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform makeSTProjection(ucar.nc2.dataset.NetcdfDataset)>(r0);

        r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform ct> = $r15;

        goto label12;

     label06:
        if $i2 != 5 goto label07;

        $r14 = specialinvoke r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform makeUTMProjection(ucar.nc2.dataset.NetcdfDataset)>(r0);

        r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform ct> = $r14;

        goto label12;

     label07:
        if $i2 != 6 goto label08;

        $r13 = specialinvoke r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform makePolarStereographicProjection(ucar.nc2.dataset.NetcdfDataset)>(r0);

        r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform ct> = $r13;

        goto label12;

     label08:
        if $i2 != 7 goto label09;

        $r12 = specialinvoke r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform makeEquitorialMercatorProjection(ucar.nc2.dataset.NetcdfDataset)>(r0);

        r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform ct> = $r12;

        goto label12;

     label09:
        if $i2 != 8 goto label10;

        $r11 = specialinvoke r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform makeTransverseMercatorProjection(ucar.nc2.dataset.NetcdfDataset)>(r0);

        r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform ct> = $r11;

        goto label12;

     label10:
        if $i2 != 9 goto label11;

        $r10 = specialinvoke r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform makeAlbersProjection(ucar.nc2.dataset.NetcdfDataset)>(r0);

        r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform ct> = $r10;

        goto label12;

     label11:
        if $i2 != 10 goto label12;

        $r9 = specialinvoke r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform makeLambertAzimuthalProjection(ucar.nc2.dataset.NetcdfDataset)>(r0);

        r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform ct> = $r9;

     label12:
        $r24 = r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform ct>;

        if $r24 == null goto label13;

        $r6 = r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform ct>;

        $r7 = virtualinvoke r3.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.VariableDS makeCoordinateTransformVariable(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.CoordinateTransform)>(r0, $r6);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r7);

        $r8 = new ucar.nc2.Attribute;

        specialinvoke $r8.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxes", "x y");

        virtualinvoke $r7.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r8);

     label13:
        specialinvoke r3.<ucar.nc2.dataset.conv.M3IOConvention: void makeZCoordAxis(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String,java.lang.String)>(r0, "LAY", "VGLVLS", "sigma");

        specialinvoke r3.<ucar.nc2.dataset.conv.M3IOConvention: void makeTimeCoordAxis(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r0, "TSTEP");

        return;
    }

    private ucar.nc2.dataset.CoordinateAxis makeCoordAxis(ucar.nc2.dataset.NetcdfDataset, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String)
    {
        ucar.nc2.dataset.CoordinateAxis1D $r4;
        ucar.nc2.dataset.conv.M3IOConvention r0;
        int i0;
        java.lang.String r2, r3, r5, r6, r7, $r15;
        double $d0, d1, $d2, d3;
        ucar.ma2.DataType $r9;
        java.lang.StringBuilder $r8, $r10, $r11, $r12, $r13, $r14;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.dataset.conv.M3IOConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r5 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        r3 := @parameter5: java.lang.String;

        r7 := @parameter6: java.lang.String;

        $d0 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, r2);

        d1 = 0.001 * $d0;

        $d2 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, r3);

        d3 = 0.001 * $d2;

        $r4 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r9 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("synthesized coordinate from ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" global attributes");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r1, null, r5, $r9, r6, r7, $r15);

        virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: void setValues(ucar.nc2.Variable,int,double,double)>($r4, i0, d1, d3);

        return $r4;
    }

    private ucar.nc2.dataset.CoordinateAxis makeCoordLLAxis(ucar.nc2.dataset.NetcdfDataset, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String)
    {
        ucar.nc2.dataset.CoordinateAxis1D $r4;
        ucar.nc2.dataset.conv.M3IOConvention r0;
        int i0;
        java.lang.String r2, r3, r5, r6, r7, $r15;
        double $d0, $d1;
        ucar.ma2.DataType $r9;
        java.lang.StringBuilder $r8, $r10, $r11, $r12, $r13, $r14;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.dataset.conv.M3IOConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r5 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        r3 := @parameter5: java.lang.String;

        r7 := @parameter6: java.lang.String;

        $d0 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, r2);

        $d1 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, r3);

        $r4 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r9 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("synthesized coordinate from ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" global attributes");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r1, null, r5, $r9, r6, r7, $r15);

        virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: void setValues(ucar.nc2.Variable,int,double,double)>($r4, i0, $d0, $d1);

        return $r4;
    }

    private void makeZCoordAxis(ucar.nc2.dataset.NetcdfDataset, java.lang.String, java.lang.String, java.lang.String)
    {
        ucar.nc2.dataset.CoordinateAxis1D $r6, $r20;
        ucar.nc2.constants.AxisType $r17;
        ucar.ma2.DataType $r9, $r22;
        ucar.ma2.ArrayDouble$D1 $r3, $r4;
        ucar.nc2.Attribute $r5, $r15, $r16;
        java.lang.StringBuilder $r8, $r10, $r12, $r13, $r21, $r23, $r24, $r25;
        int $i0, $i1, $i2, $i3, i4, i5;
        ucar.nc2.dataset.conv.M3IOConvention r28;
        java.lang.String r1, r7, r11, $r14, $r18, $r26;
        java.lang.Number $r27;
        double $d0, $d1, $d2, $d3, d4;
        ucar.nc2.Dimension $r2, $r19;
        ucar.nc2.dataset.NetcdfDataset r0;

        r28 := @this: ucar.nc2.dataset.conv.M3IOConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: java.lang.String;

        r11 := @parameter2: java.lang.String;

        r7 := @parameter3: java.lang.String;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>(r1);

        $i0 = virtualinvoke $r2.<ucar.nc2.Dimension: int getLength()>();

        $r3 = new ucar.ma2.ArrayDouble$D1;

        specialinvoke $r3.<ucar.ma2.ArrayDouble$D1: void <init>(int)>($i0);

        $r4 = new ucar.ma2.ArrayDouble$D1;

        $i1 = $i0 + 1;

        specialinvoke $r4.<ucar.ma2.ArrayDouble$D1: void <init>(int)>($i1);

        $r5 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("VGLVLS");

        i4 = 0;

     label1:
        if i4 > $i0 goto label2;

        $r27 = virtualinvoke $r5.<ucar.nc2.Attribute: java.lang.Number getNumericValue(int)>(i4);

        $d3 = virtualinvoke $r27.<java.lang.Number: double doubleValue()>();

        virtualinvoke $r4.<ucar.ma2.ArrayDouble$D1: void set(int,double)>(i4, $d3);

        i4 = i4 + 1;

        goto label1;

     label2:
        i5 = 0;

     label3:
        if i5 >= $i0 goto label4;

        $d0 = virtualinvoke $r4.<ucar.ma2.ArrayDouble$D1: double get(int)>(i5);

        $i3 = i5 + 1;

        $d1 = virtualinvoke $r4.<ucar.ma2.ArrayDouble$D1: double get(int)>($i3);

        $d2 = $d0 + $d1;

        d4 = $d2 / 2.0;

        virtualinvoke $r3.<ucar.ma2.ArrayDouble$D1: void set(int,double)>(i5, d4);

        i5 = i5 + 1;

        goto label3;

     label4:
        $r6 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r9 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("synthesized coordinate from ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" global attributes");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r0, null, "level", $r9, r1, r7, $r14);

        virtualinvoke $r6.<ucar.nc2.dataset.CoordinateAxis: void setCachedData(ucar.ma2.Array,boolean)>($r3, 1);

        $r15 = new ucar.nc2.Attribute;

        specialinvoke $r15.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("positive", "down");

        virtualinvoke $r6.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r15);

        $r16 = new ucar.nc2.Attribute;

        $r17 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoZ>;

        $r18 = virtualinvoke $r17.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r16.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r18);

        virtualinvoke $r6.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r16);

        $r19 = new ucar.nc2.Dimension;

        $i2 = $i0 + 1;

        specialinvoke $r19.<ucar.nc2.Dimension: void <init>(java.lang.String,int)>("layer", $i2);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r19);

        $r20 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r22 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("synthesized coordinate from ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" global attributes");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r0, null, "layer", $r22, "layer", r7, $r26);

        virtualinvoke $r20.<ucar.nc2.dataset.CoordinateAxis: void setCachedData(ucar.ma2.Array,boolean)>($r4, 1);

        virtualinvoke $r6.<ucar.nc2.dataset.CoordinateAxis: void setBoundaryRef(java.lang.String)>("layer");

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r6);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r20);

        return;
    }

    private void makeTimeCoordAxis(ucar.nc2.dataset.NetcdfDataset, java.lang.String)
    {
        java.util.Date $r8;
        ucar.nc2.dataset.CoordinateAxis1D $r16;
        ucar.nc2.constants.AxisType $r19;
        java.util.GregorianCalendar $r2;
        java.util.TimeZone $r5;
        ucar.ma2.DataType $r17;
        ucar.nc2.Attribute $r18;
        java.lang.StringBuilder $r6, $r7, $r10, $r11;
        java.util.SimpleTimeZone $r3;
        java.text.SimpleDateFormat $r4;
        ucar.nc2.dataset.conv.M3IOConvention r0;
        int $i0, $i1, $i2, i3, i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19;
        java.lang.String $r9, $r12, r13, $r20;
        ucar.ma2.ArrayInt$D1 $r15;
        ucar.nc2.Dimension $r14;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.dataset.conv.M3IOConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r13 := @parameter1: java.lang.String;

        $i0 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: int findAttributeInt(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "SDATE");

        $i1 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: int findAttributeInt(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "STIME");

        $i2 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: int findAttributeInt(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "TSTEP");

        i3 = $i0 / 1000;

        i4 = $i0 % 1000;

        i10 = $i1 / 10000;

        i11 = $i1 % 10000;

        i12 = i11 / 100;

        i13 = i11 % 100;

        $r2 = new java.util.GregorianCalendar;

        $r3 = new java.util.SimpleTimeZone;

        specialinvoke $r3.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(0, "GMT");

        specialinvoke $r2.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>($r3);

        virtualinvoke $r2.<java.util.Calendar: void clear()>();

        virtualinvoke $r2.<java.util.Calendar: void set(int,int)>(1, i3);

        virtualinvoke $r2.<java.util.Calendar: void set(int,int)>(6, i4);

        virtualinvoke $r2.<java.util.Calendar: void set(int,int)>(11, i10);

        virtualinvoke $r2.<java.util.Calendar: void set(int,int)>(12, i12);

        virtualinvoke $r2.<java.util.Calendar: void set(int,int)>(13, i13);

        $r4 = new java.text.SimpleDateFormat;

        specialinvoke $r4.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss");

        $r5 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke $r4.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("seconds since ");

        $r8 = virtualinvoke $r2.<java.util.Calendar: java.util.Date getTime()>();

        $r9 = virtualinvoke $r4.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r8);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" UTC");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        i14 = $i2 / 10000;

        i15 = $i2 % 10000;

        i16 = i15 / 100;

        i17 = i15 % 100;

        $i6 = i14 * 3600;

        $i5 = i16 * 60;

        $i7 = $i6 + $i5;

        i18 = $i7 + i17;

        $r14 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>(r13);

        $i8 = virtualinvoke $r14.<ucar.nc2.Dimension: int getLength()>();

        $r15 = new ucar.ma2.ArrayInt$D1;

        specialinvoke $r15.<ucar.ma2.ArrayInt$D1: void <init>(int)>($i8);

        i19 = 0;

     label1:
        if i19 >= $i8 goto label2;

        $i9 = i19 * i18;

        virtualinvoke $r15.<ucar.ma2.ArrayInt$D1: void set(int,int)>(i19, $i9);

        i19 = i19 + 1;

        goto label1;

     label2:
        $r16 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r17 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        specialinvoke $r16.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r1, null, "time", $r17, r13, $r12, "synthesized time coordinate from SDATE, STIME, STEP global attributes");

        virtualinvoke $r16.<ucar.nc2.dataset.CoordinateAxis1D: void setCachedData(ucar.ma2.Array,boolean)>($r15, 1);

        $r18 = new ucar.nc2.Attribute;

        $r19 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r20 = virtualinvoke $r19.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r18.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r20);

        virtualinvoke $r16.<ucar.nc2.dataset.CoordinateAxis1D: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r18);

        virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r16);

        return;
    }

    private ucar.nc2.dataset.CoordinateTransform makeLatLongProjection(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.unidata.geoloc.ProjectionRect $r3;
        ucar.nc2.dataset.ProjectionCT $r4;
        ucar.nc2.dataset.conv.M3IOConvention r0;
        ucar.nc2.dataset.NetcdfDataset r1;
        double $d0, $d1, $d2, $d3, $d4, d5, $d6, $d7, $d8, d9;
        ucar.unidata.geoloc.projection.LatLonProjection $r2;

        r0 := @this: ucar.nc2.dataset.conv.M3IOConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $d0 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "XORIG");

        $d1 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "YORIG");

        $d2 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "XCELL");

        $d3 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "NCOLS");

        $d4 = $d2 * $d3;

        d5 = $d0 + $d4;

        $d6 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "YCELL");

        $d7 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "NROWS");

        $d8 = $d6 * $d7;

        d9 = $d1 + $d8;

        $r2 = new ucar.unidata.geoloc.projection.LatLonProjection;

        $r3 = new ucar.unidata.geoloc.ProjectionRect;

        specialinvoke $r3.<ucar.unidata.geoloc.ProjectionRect: void <init>(double,double,double,double)>($d0, $d1, d5, d9);

        specialinvoke $r2.<ucar.unidata.geoloc.projection.LatLonProjection: void <init>(java.lang.String,ucar.unidata.geoloc.ProjectionRect)>("LatitudeLongitudeProjection", $r3);

        $r4 = new ucar.nc2.dataset.ProjectionCT;

        specialinvoke $r4.<ucar.nc2.dataset.ProjectionCT: void <init>(java.lang.String,java.lang.String,ucar.unidata.geoloc.ProjectionImpl)>("LatitudeLongitudeProjection", "FGDC", $r2);

        return $r4;
    }

    private ucar.nc2.dataset.CoordinateTransform makeLCProjection(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.ProjectionCT $r3;
        ucar.nc2.dataset.conv.M3IOConvention r0;
        ucar.unidata.geoloc.projection.LambertConformal $r2;
        ucar.nc2.dataset.NetcdfDataset r1;
        double $d0, $d1, $d2, $d3;

        r0 := @this: ucar.nc2.dataset.conv.M3IOConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $d0 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "P_ALP");

        $d1 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "P_BET");

        $d2 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "XCENT");

        $d3 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "YCENT");

        $r2 = new ucar.unidata.geoloc.projection.LambertConformal;

        specialinvoke $r2.<ucar.unidata.geoloc.projection.LambertConformal: void <init>(double,double,double,double)>($d3, $d2, $d0, $d1);

        $r3 = new ucar.nc2.dataset.ProjectionCT;

        specialinvoke $r3.<ucar.nc2.dataset.ProjectionCT: void <init>(java.lang.String,java.lang.String,ucar.unidata.geoloc.ProjectionImpl)>("LambertConformalProjection", "FGDC", $r2);

        return $r3;
    }

    private ucar.nc2.dataset.CoordinateTransform makePolarStereographicProjection(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.ProjectionCT $r3;
        ucar.unidata.geoloc.projection.Stereographic $r2;
        byte $b0;
        ucar.nc2.dataset.conv.M3IOConvention r0;
        ucar.nc2.dataset.NetcdfDataset r1;
        double $d0, $d1, $d2, $d3, $d4;
        boolean $z0;

        r0 := @this: ucar.nc2.dataset.conv.M3IOConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $d0 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "P_ALP");

        $b0 = $d0 cmpl 1.0;

        if $b0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $d1 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "P_GAM");

        $d2 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "XCENT");

        $d3 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "YCENT");

        $d4 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "P_BET");

        $r2 = new ucar.unidata.geoloc.projection.Stereographic;

        specialinvoke $r2.<ucar.unidata.geoloc.projection.Stereographic: void <init>(double,double,double,boolean)>($d4, $d3, $d2, $z0);

        virtualinvoke $r2.<ucar.unidata.geoloc.projection.Stereographic: void setCentralMeridian(double)>($d1);

        $r3 = new ucar.nc2.dataset.ProjectionCT;

        specialinvoke $r3.<ucar.nc2.dataset.ProjectionCT: void <init>(java.lang.String,java.lang.String,ucar.unidata.geoloc.ProjectionImpl)>("PolarStereographic", "FGDC", $r2);

        return $r3;
    }

    private ucar.nc2.dataset.CoordinateTransform makeEquitorialMercatorProjection(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.unidata.geoloc.projection.Mercator $r2;
        ucar.nc2.dataset.ProjectionCT $r3;
        ucar.nc2.dataset.conv.M3IOConvention r0;
        ucar.nc2.dataset.NetcdfDataset r1;
        double $d0, $d1;

        r0 := @this: ucar.nc2.dataset.conv.M3IOConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $d0 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "XCENT");

        $d1 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "P_ALP");

        $r2 = new ucar.unidata.geoloc.projection.Mercator;

        specialinvoke $r2.<ucar.unidata.geoloc.projection.Mercator: void <init>(double,double)>($d0, $d1);

        $r3 = new ucar.nc2.dataset.ProjectionCT;

        specialinvoke $r3.<ucar.nc2.dataset.ProjectionCT: void <init>(java.lang.String,java.lang.String,ucar.unidata.geoloc.ProjectionImpl)>("EquitorialMercator", "FGDC", $r2);

        return $r3;
    }

    private ucar.nc2.dataset.CoordinateTransform makeTransverseMercatorProjection(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.ProjectionCT $r3;
        ucar.nc2.dataset.conv.M3IOConvention r0;
        ucar.unidata.geoloc.projection.TransverseMercator $r2;
        ucar.nc2.dataset.NetcdfDataset r1;
        double $d0, $d1;

        r0 := @this: ucar.nc2.dataset.conv.M3IOConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $d0 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "P_ALP");

        $d1 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "P_GAM");

        $r2 = new ucar.unidata.geoloc.projection.TransverseMercator;

        specialinvoke $r2.<ucar.unidata.geoloc.projection.TransverseMercator: void <init>(double,double,double)>($d0, $d1, 1.0);

        $r3 = new ucar.nc2.dataset.ProjectionCT;

        specialinvoke $r3.<ucar.nc2.dataset.ProjectionCT: void <init>(java.lang.String,java.lang.String,ucar.unidata.geoloc.ProjectionImpl)>("TransverseMercator", "FGDC", $r2);

        return $r3;
    }

    private ucar.nc2.dataset.CoordinateTransform makeAlbersProjection(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.ProjectionCT $r3;
        ucar.nc2.dataset.conv.M3IOConvention r0;
        ucar.nc2.dataset.NetcdfDataset r1;
        double $d0, $d1, $d2, $d3;
        ucar.unidata.geoloc.projection.AlbersEqualArea $r2;

        r0 := @this: ucar.nc2.dataset.conv.M3IOConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $d0 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "YCENT");

        $d1 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "XCENT");

        $d2 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "P_ALP");

        $d3 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "P_BET");

        $r2 = new ucar.unidata.geoloc.projection.AlbersEqualArea;

        specialinvoke $r2.<ucar.unidata.geoloc.projection.AlbersEqualArea: void <init>(double,double,double,double)>($d0, $d1, $d2, $d3);

        $r3 = new ucar.nc2.dataset.ProjectionCT;

        specialinvoke $r3.<ucar.nc2.dataset.ProjectionCT: void <init>(java.lang.String,java.lang.String,ucar.unidata.geoloc.ProjectionImpl)>("Albers", "FGDC", $r2);

        return $r3;
    }

    private ucar.nc2.dataset.CoordinateTransform makeLambertAzimuthalProjection(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.ProjectionCT $r3;
        ucar.nc2.dataset.conv.M3IOConvention r0;
        ucar.nc2.dataset.NetcdfDataset r1;
        ucar.unidata.geoloc.projection.LambertAzimuthalEqualArea $r2;
        double $d0, $d1;

        r0 := @this: ucar.nc2.dataset.conv.M3IOConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $d0 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "YCENT");

        $d1 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "XCENT");

        $r2 = new ucar.unidata.geoloc.projection.LambertAzimuthalEqualArea;

        specialinvoke $r2.<ucar.unidata.geoloc.projection.LambertAzimuthalEqualArea: void <init>(double,double,double,double,double)>($d0, $d1, 0.0, 0.0, 6370000.0);

        $r3 = new ucar.nc2.dataset.ProjectionCT;

        specialinvoke $r3.<ucar.nc2.dataset.ProjectionCT: void <init>(java.lang.String,java.lang.String,ucar.unidata.geoloc.ProjectionImpl)>("LambertAzimuthal", "FGDC", $r2);

        return $r3;
    }

    private ucar.nc2.dataset.CoordinateTransform makeSTProjection(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.ProjectionCT $r3;
        ucar.unidata.geoloc.projection.Stereographic $r2;
        ucar.nc2.dataset.conv.M3IOConvention r0;
        ucar.nc2.dataset.NetcdfDataset r1;
        double $d0, $d1, d2, d3;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.dataset.conv.M3IOConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $d0 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "PROJ_ALPHA");

        d2 = $d0;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 == 0 goto label1;

        d2 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "P_ALP");

     label1:
        $d1 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "PROJ_BETA");

        d3 = $d1;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        if $z1 == 0 goto label2;

        d3 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "P_BET");

     label2:
        $r2 = new ucar.unidata.geoloc.projection.Stereographic;

        specialinvoke $r2.<ucar.unidata.geoloc.projection.Stereographic: void <init>(double,double,double)>(d2, d3, 1.0);

        $r3 = new ucar.nc2.dataset.ProjectionCT;

        specialinvoke $r3.<ucar.nc2.dataset.ProjectionCT: void <init>(java.lang.String,java.lang.String,ucar.unidata.geoloc.ProjectionImpl)>("StereographicProjection", "FGDC", $r2);

        return $r3;
    }

    private ucar.nc2.dataset.CoordinateTransform makeTMProjection(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.ProjectionCT $r3;
        ucar.nc2.dataset.conv.M3IOConvention r0;
        ucar.unidata.geoloc.projection.TransverseMercator $r2;
        ucar.nc2.dataset.NetcdfDataset r1;
        double $d0, $d1, d2, d3;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.dataset.conv.M3IOConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $d0 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "PROJ_ALPHA");

        d2 = $d0;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 == 0 goto label1;

        d2 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "P_ALP");

     label1:
        $d1 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "PROJ_BETA");

        d3 = $d1;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        if $z1 == 0 goto label2;

        d3 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "P_BET");

     label2:
        $r2 = new ucar.unidata.geoloc.projection.TransverseMercator;

        specialinvoke $r2.<ucar.unidata.geoloc.projection.TransverseMercator: void <init>(double,double,double)>(d2, d3, 1.0);

        $r3 = new ucar.nc2.dataset.ProjectionCT;

        specialinvoke $r3.<ucar.nc2.dataset.ProjectionCT: void <init>(java.lang.String,java.lang.String,ucar.unidata.geoloc.ProjectionImpl)>("MercatorProjection", "FGDC", $r2);

        return $r3;
    }

    private ucar.nc2.dataset.CoordinateTransform makeUTMProjection(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.ProjectionCT $r5;
        ucar.unidata.geoloc.projection.UtmProjection $r4;
        byte $b1;
        ucar.nc2.dataset.conv.M3IOConvention r0;
        int i0, $i2;
        ucar.nc2.dataset.NetcdfDataset r1;
        double $d0, $d1;
        boolean z0;

        r0 := @this: ucar.nc2.dataset.conv.M3IOConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $d0 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "P_ALP");

        i0 = (int) $d0;

        $d1 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "YCENT");

        z0 = 1;

        $b1 = $d1 cmpg 0.0;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label1;

        z0 = 0;

     label1:
        $r4 = new ucar.unidata.geoloc.projection.UtmProjection;

        specialinvoke $r4.<ucar.unidata.geoloc.projection.UtmProjection: void <init>(int,boolean)>(i0, z0);

        $r5 = new ucar.nc2.dataset.ProjectionCT;

        specialinvoke $r5.<ucar.nc2.dataset.ProjectionCT: void <init>(java.lang.String,java.lang.String,ucar.unidata.geoloc.ProjectionImpl)>("UTM", "EPSG", $r4);

        return $r5;
    }

    protected ucar.nc2.constants.AxisType getAxisType(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.dataset.VariableEnhanced)
    {
        ucar.nc2.constants.AxisType $r3, $r4, $r5, $r6, $r7, $r8;
        ucar.nc2.dataset.conv.M3IOConvention r9;
        ucar.nc2.Variable r1;
        java.lang.String $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        ucar.nc2.dataset.VariableEnhanced r0;
        ucar.nc2.dataset.NetcdfDataset r10;

        r9 := @this: ucar.nc2.dataset.conv.M3IOConvention;

        r10 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r0 := @parameter1: ucar.nc2.dataset.VariableEnhanced;

        r1 = (ucar.nc2.Variable) r0;

        $r2 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("x");

        if $z0 == 0 goto label1;

        $r8 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoX>;

        return $r8;

     label1:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("y");

        if $z1 == 0 goto label2;

        $r7 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoY>;

        return $r7;

     label2:
        $z2 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lat");

        if $z2 == 0 goto label3;

        $r6 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        return $r6;

     label3:
        $z3 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lon");

        if $z3 == 0 goto label4;

        $r5 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        return $r5;

     label4:
        $z4 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("time");

        if $z4 == 0 goto label5;

        $r4 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        return $r4;

     label5:
        $z5 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("level");

        if $z5 == 0 goto label6;

        $r3 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoZ>;

        return $r3;

     label6:
        return null;
    }

    protected void makeCoordinateTransforms(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.CoordinateTransform $r1, $r3, $r6;
        ucar.nc2.dataset.CoordSysBuilder$VarProcess $r5;
        ucar.nc2.dataset.conv.M3IOConvention r0;
        java.lang.String $r4;
        ucar.nc2.dataset.NetcdfDataset r2;

        r0 := @this: ucar.nc2.dataset.conv.M3IOConvention;

        r2 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = r0.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform ct>;

        if $r1 == null goto label1;

        $r3 = r0.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform ct>;

        $r4 = virtualinvoke $r3.<ucar.nc2.dataset.CoordinateTransform: java.lang.String getName()>();

        $r5 = virtualinvoke r0.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordSysBuilder$VarProcess findVarProcess(java.lang.String)>($r4);

        if $r5 == null goto label1;

        $r6 = r0.<ucar.nc2.dataset.conv.M3IOConvention: ucar.nc2.dataset.CoordinateTransform ct>;

        $r5.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: ucar.nc2.dataset.CoordinateTransform ct> = $r6;

     label1:
        specialinvoke r0.<ucar.nc2.dataset.CoordSysBuilder: void makeCoordinateTransforms(ucar.nc2.dataset.NetcdfDataset)>(r2);

        return;
    }

    private double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset, java.lang.String)
    {
        ucar.nc2.Attribute $r2;
        ucar.nc2.dataset.conv.M3IOConvention r4;
        java.lang.String r1;
        java.lang.Number $r3;
        ucar.nc2.dataset.NetcdfDataset r0;
        boolean $z0;
        double $d0;

        r4 := @this: ucar.nc2.dataset.conv.M3IOConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<ucar.nc2.Attribute: boolean isString()>();

        if $z0 == 0 goto label2;

     label1:
        return #NaN;

     label2:
        $r3 = virtualinvoke $r2.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $d0 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        return $d0;
    }

    private int findAttributeInt(ucar.nc2.dataset.NetcdfDataset, java.lang.String)
    {
        ucar.nc2.Attribute $r2;
        int $i0;
        ucar.nc2.dataset.conv.M3IOConvention r4;
        java.lang.String r1;
        java.lang.Number $r3;
        ucar.nc2.dataset.NetcdfDataset r0;

        r4 := @this: ucar.nc2.dataset.conv.M3IOConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        return $i0;
    }
}
