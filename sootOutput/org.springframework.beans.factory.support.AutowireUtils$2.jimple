final class org.springframework.beans.factory.support.AutowireUtils$2 extends java.lang.Object implements java.util.Comparator
{

    void <init>()
    {
        org.springframework.beans.factory.support.AutowireUtils$2 r0;

        r0 := @this: org.springframework.beans.factory.support.AutowireUtils$2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(java.lang.reflect.Method, java.lang.reflect.Method)
    {
        java.lang.Integer $r5, $r7;
        byte $b6;
        int $i0, $i1, i2, i3, $i4, $i5, $i8;
        java.lang.reflect.Method r0, r1;
        boolean $z0, $z1;
        java.lang.Class[] $r2, $r3;
        org.springframework.beans.factory.support.AutowireUtils$2 r6;

        r6 := @this: org.springframework.beans.factory.support.AutowireUtils$2;

        r0 := @parameter0: java.lang.reflect.Method;

        r1 := @parameter1: java.lang.reflect.Method;

        $i0 = virtualinvoke r0.<java.lang.reflect.Method: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i0);

        $i1 = virtualinvoke r1.<java.lang.reflect.Method: int getModifiers()>();

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i1);

        if $z0 == $z1 goto label3;

        if $z0 == 0 goto label1;

        $b6 = -1;

        goto label2;

     label1:
        $b6 = 1;

     label2:
        return $b6;

     label3:
        $r2 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        i2 = lengthof $r2;

        $r3 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        i3 = lengthof $r3;

        $r7 = new java.lang.Integer;

        specialinvoke $r7.<java.lang.Integer: void <init>(int)>(i2);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $i4 = virtualinvoke $r7.<java.lang.Integer: int compareTo(java.lang.Integer)>($r5);

        $i8 = (int) -1;

        $i5 = $i4 * $i8;

        return $i5;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        int $i0;
        java.lang.Object r1, r2;
        java.lang.reflect.Method $r3, $r4;
        org.springframework.beans.factory.support.AutowireUtils$2 r0;

        r0 := @this: org.springframework.beans.factory.support.AutowireUtils$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.reflect.Method) r1;

        $r3 = (java.lang.reflect.Method) r2;

        $i0 = virtualinvoke r0.<org.springframework.beans.factory.support.AutowireUtils$2: int compare(java.lang.reflect.Method,java.lang.reflect.Method)>($r4, $r3);

        return $i0;
    }
}
