public abstract class ucar.nc2.iosp.grid.GridServiceProvider extends ucar.nc2.iosp.AbstractIOServiceProvider
{
    protected static ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode indexFileModeOnOpen;
    protected static ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode indexFileModeOnSync;
    protected static boolean addLatLon;
    protected static boolean useMaximalCoordSys;
    protected static boolean forceNewIndex;
    protected static boolean alwaysInCache;
    public static boolean debugOpen;
    public static boolean debugMissing;
    public static boolean debugMissingDetails;
    public static boolean debugProj;
    public static boolean debugTiming;
    public static boolean debugVert;
    protected ucar.nc2.dt.fmr.FmrcCoordSys fmrcCoordSys;
    protected ucar.nc2.NetcdfFile ncfile;

    public void <init>()
    {
        ucar.nc2.iosp.grid.GridServiceProvider r0;

        r0 := @this: ucar.nc2.iosp.grid.GridServiceProvider;

        specialinvoke r0.<ucar.nc2.iosp.AbstractIOServiceProvider: void <init>()>();

        return;
    }

    public static void useMaximalCoordSys(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <ucar.nc2.iosp.grid.GridServiceProvider: boolean useMaximalCoordSys> = z0;

        return;
    }

    public static void forceNewIndex(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <ucar.nc2.iosp.grid.GridServiceProvider: boolean forceNewIndex> = z0;

        return;
    }

    public static void setDebugFlags(ucar.nc2.util.DebugFlags)
    {
        ucar.nc2.util.DebugFlags r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @parameter0: ucar.nc2.util.DebugFlags;

        $z0 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("Grid/open");

        <ucar.nc2.iosp.grid.GridServiceProvider: boolean debugOpen> = $z0;

        $z1 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("Grid/missing");

        <ucar.nc2.iosp.grid.GridServiceProvider: boolean debugMissing> = $z1;

        $z2 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("Grid/missingDetails");

        <ucar.nc2.iosp.grid.GridServiceProvider: boolean debugMissingDetails> = $z2;

        $z3 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("Grid/projection");

        <ucar.nc2.iosp.grid.GridServiceProvider: boolean debugProj> = $z3;

        $z4 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("Grid/vertical");

        <ucar.nc2.iosp.grid.GridServiceProvider: boolean debugVert> = $z4;

        $z5 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("Grid/timing");

        <ucar.nc2.iosp.grid.GridServiceProvider: boolean debugTiming> = $z5;

        return;
    }

    public static void setIndexFileModeOnOpen(ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode)
    {
        ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode r0;

        r0 := @parameter0: ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode;

        <ucar.nc2.iosp.grid.GridServiceProvider: ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode indexFileModeOnOpen> = r0;

        return;
    }

    public static void setIndexFileModeOnSync(ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode)
    {
        ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode r0;

        r0 := @parameter0: ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode;

        <ucar.nc2.iosp.grid.GridServiceProvider: ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode indexFileModeOnSync> = r0;

        return;
    }

    public static void setExtendIndex(boolean)
    {
        ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode $r0, $r1;
        boolean z0;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r0 = <ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode: ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode extendwrite>;

        goto label2;

     label1:
        $r0 = <ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode: ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode readonly>;

     label2:
        <ucar.nc2.iosp.grid.GridServiceProvider: ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode indexFileModeOnOpen> = $r0;

        if z0 == 0 goto label3;

        $r1 = <ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode: ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode extendwrite>;

        goto label4;

     label3:
        $r1 = <ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode: ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode readonly>;

     label4:
        <ucar.nc2.iosp.grid.GridServiceProvider: ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode indexFileModeOnSync> = $r1;

        return;
    }

    public static void setIndexAlwaysInCache(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <ucar.nc2.iosp.grid.GridServiceProvider: boolean alwaysInCache> = z0;

        return;
    }

    protected abstract void open(ucar.grid.GridIndex, ucar.nc2.util.CancelTask) throws java.io.IOException;

    public void open(ucar.unidata.io.RandomAccessFile, ucar.nc2.NetcdfFile, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile r1;
        ucar.nc2.util.CancelTask r3;
        ucar.nc2.iosp.grid.GridServiceProvider r0;
        ucar.nc2.NetcdfFile r2;

        r0 := @this: ucar.nc2.iosp.grid.GridServiceProvider;

        r1 := @parameter0: ucar.unidata.io.RandomAccessFile;

        r2 := @parameter1: ucar.nc2.NetcdfFile;

        r3 := @parameter2: ucar.nc2.util.CancelTask;

        r0.<ucar.nc2.iosp.grid.GridServiceProvider: ucar.unidata.io.RandomAccessFile raf> = r1;

        r0.<ucar.nc2.iosp.grid.GridServiceProvider: ucar.nc2.NetcdfFile ncfile> = r2;

        return;
    }

    public java.lang.String getDetailInfo()
    {
        ucar.nc2.iosp.grid.GridServiceProvider r0;

        r0 := @this: ucar.nc2.iosp.grid.GridServiceProvider;

        return "";
    }

    public java.lang.Object sendIospMessage(java.lang.Object)
    {
        ucar.nc2.dt.fmr.FmrcCoordSys $r3;
        java.lang.Object r0, $r2;
        ucar.nc2.iosp.grid.GridServiceProvider r1;
        boolean $z0;

        r1 := @this: ucar.nc2.iosp.grid.GridServiceProvider;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof ucar.nc2.dt.fmr.FmrcCoordSys;

        if $z0 == 0 goto label1;

        $r3 = (ucar.nc2.dt.fmr.FmrcCoordSys) r0;

        r1.<ucar.nc2.iosp.grid.GridServiceProvider: ucar.nc2.dt.fmr.FmrcCoordSys fmrcCoordSys> = $r3;

     label1:
        $r2 = specialinvoke r1.<ucar.nc2.iosp.AbstractIOServiceProvider: java.lang.Object sendIospMessage(java.lang.Object)>(r0);

        return $r2;
    }

    public ucar.ma2.Array readData(ucar.nc2.Variable, ucar.ma2.Section) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        byte b16;
        int[] $r2;
        boolean $z0, $z1, $z2, z3;
        ucar.ma2.Range r7, r8, r9, $r10, $r11, $r20, $r21, $r22;
        ucar.ma2.DataType $r1;
        ucar.nc2.iosp.grid.GridVariable r6;
        java.lang.StringBuilder $r13, $r15, $r16, $r17;
        ucar.ma2.Section r0;
        long $l0, $l2, l15;
        int $i1, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, $i12, i13, i14;
        ucar.nc2.Variable r4;
        java.lang.String $r18;
        java.io.PrintStream $r14;
        ucar.ma2.IndexIterator $r12;
        ucar.ma2.Array $r3;
        java.lang.Object $r5;
        ucar.nc2.iosp.grid.GridServiceProvider r19;

        r19 := @this: ucar.nc2.iosp.grid.GridServiceProvider;

        r4 := @parameter0: ucar.nc2.Variable;

        r0 := @parameter1: ucar.ma2.Section;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        $r2 = virtualinvoke r0.<ucar.ma2.Section: int[] getShape()>();

        $r3 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r1, $r2);

        $r5 = virtualinvoke r4.<ucar.nc2.Variable: java.lang.Object getSPobject()>();

        r6 = (ucar.nc2.iosp.grid.GridVariable) $r5;

        i9 = 0;

        z3 = 0;

        b16 = 0;

        $z0 = virtualinvoke r6.<ucar.nc2.iosp.grid.GridVariable: boolean hasEnsemble()>();

        if $z0 == 0 goto label01;

        i9 = 1;

        z3 = 1;

        b16 = 1;

        $r20 = virtualinvoke r0.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(0);

        goto label02;

     label01:
        $r20 = new ucar.ma2.Range;

        specialinvoke $r20.<ucar.ma2.Range: void <init>(int,int)>(0, 0);

     label02:
        r7 = $r20;

        $i1 = virtualinvoke r0.<ucar.ma2.Section: int getRank()>();

        if $i1 <= 2 goto label03;

        i9 = z3 + 1;

        $r21 = virtualinvoke r0.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(b16);

        goto label04;

     label03:
        $r21 = new ucar.ma2.Range;

        specialinvoke $r21.<ucar.ma2.Range: void <init>(int,int)>(0, 0);

     label04:
        r8 = $r21;

        $z1 = virtualinvoke r6.<ucar.nc2.iosp.grid.GridVariable: boolean hasVert()>();

        if $z1 == 0 goto label05;

        $i8 = i9;

        i9 = i9 + 1;

        $r22 = virtualinvoke r0.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>($i8);

        goto label06;

     label05:
        $r22 = new ucar.ma2.Range;

        specialinvoke $r22.<ucar.ma2.Range: void <init>(int,int)>(0, 0);

     label06:
        r9 = $r22;

        i10 = i9 + 1;

        $r10 = virtualinvoke r0.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(i9);

        $r11 = virtualinvoke r0.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(i10);

        $r12 = virtualinvoke $r3.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        i11 = virtualinvoke r7.<ucar.ma2.Range: int first()>();

     label07:
        $i12 = virtualinvoke r7.<ucar.ma2.Range: int last()>();

        if i11 > $i12 goto label12;

        i13 = virtualinvoke r8.<ucar.ma2.Range: int first()>();

     label08:
        $i3 = virtualinvoke r8.<ucar.ma2.Range: int last()>();

        if i13 > $i3 goto label11;

        i14 = virtualinvoke r9.<ucar.ma2.Range: int first()>();

     label09:
        $i5 = virtualinvoke r9.<ucar.ma2.Range: int last()>();

        if i14 > $i5 goto label10;

        specialinvoke r19.<ucar.nc2.iosp.grid.GridServiceProvider: void readXY(ucar.nc2.Variable,int,int,int,ucar.ma2.Range,ucar.ma2.Range,ucar.ma2.IndexIterator)>(r4, i11, i13, i14, $r10, $r11, $r12);

        $i7 = virtualinvoke r9.<ucar.ma2.Range: int stride()>();

        i14 = i14 + $i7;

        goto label09;

     label10:
        $i6 = virtualinvoke r8.<ucar.ma2.Range: int stride()>();

        i13 = i13 + $i6;

        goto label08;

     label11:
        $i4 = virtualinvoke r7.<ucar.ma2.Range: int stride()>();

        i11 = i11 + $i4;

        goto label07;

     label12:
        $z2 = <ucar.nc2.iosp.grid.GridServiceProvider: boolean debugTiming>;

        if $z2 == 0 goto label13;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l15 = $l2 - $l0;

        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  read data took=");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msec ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r18);

     label13:
        return $r3;
    }

    private void readXY(ucar.nc2.Variable, int, int, int, ucar.ma2.Range, ucar.ma2.Range, ucar.ma2.IndexIterator) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.nc2.iosp.grid.GridHorizCoordSys $r3;
        float[] $r6;
        int $i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15;
        ucar.nc2.Variable r0;
        java.lang.Number $r11;
        ucar.grid.GridRecord $r4;
        ucar.ma2.Range r7, r8;
        ucar.ma2.IndexIterator r9;
        ucar.nc2.iosp.grid.GridVariable r2;
        ucar.nc2.Attribute $r10;
        float $f0, $f1, f2;
        java.lang.Object $r1;
        ucar.nc2.iosp.grid.GridServiceProvider r5;

        r5 := @this: ucar.nc2.iosp.grid.GridServiceProvider;

        r0 := @parameter0: ucar.nc2.Variable;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r7 := @parameter4: ucar.ma2.Range;

        r8 := @parameter5: ucar.ma2.Range;

        r9 := @parameter6: ucar.ma2.IndexIterator;

        $r1 = virtualinvoke r0.<ucar.nc2.Variable: java.lang.Object getSPobject()>();

        r2 = (ucar.nc2.iosp.grid.GridVariable) $r1;

        $r3 = virtualinvoke r2.<ucar.nc2.iosp.grid.GridVariable: ucar.nc2.iosp.grid.GridHorizCoordSys getHorizCoordSys()>();

        $i0 = virtualinvoke $r3.<ucar.nc2.iosp.grid.GridHorizCoordSys: int getNx()>();

        $r4 = virtualinvoke r2.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord findRecord(int,int,int)>(i1, i2, i3);

        if $r4 != null goto label5;

        $r10 = virtualinvoke r0.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("missing_value");

        if $r10 != null goto label1;

        $f1 = -9999.0F;

        goto label2;

     label1:
        $r11 = virtualinvoke $r10.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $f1 = virtualinvoke $r11.<java.lang.Number: float floatValue()>();

     label2:
        f2 = $f1;

        $i9 = virtualinvoke r7.<ucar.ma2.Range: int length()>();

        $i10 = virtualinvoke r8.<ucar.ma2.Range: int length()>();

        $i11 = $i9 * $i10;

        i12 = 0;

     label3:
        if i12 >= $i11 goto label4;

        interfaceinvoke r9.<ucar.ma2.IndexIterator: void setFloatNext(float)>(f2);

        i12 = i12 + 1;

        goto label3;

     label4:
        return;

     label5:
        $r6 = virtualinvoke r5.<ucar.nc2.iosp.grid.GridServiceProvider: float[] _readData(ucar.grid.GridRecord)>($r4);

        i13 = virtualinvoke r7.<ucar.ma2.Range: int first()>();

     label6:
        $i4 = virtualinvoke r7.<ucar.ma2.Range: int last()>();

        if i13 > $i4 goto label9;

        i14 = virtualinvoke r8.<ucar.ma2.Range: int first()>();

     label7:
        $i5 = virtualinvoke r8.<ucar.ma2.Range: int last()>();

        if i14 > $i5 goto label8;

        $i7 = i13 * $i0;

        i15 = $i7 + i14;

        $f0 = $r6[i15];

        interfaceinvoke r9.<ucar.ma2.IndexIterator: void setFloatNext(float)>($f0);

        $i8 = virtualinvoke r8.<ucar.ma2.Range: int stride()>();

        i14 = i14 + $i8;

        goto label7;

     label8:
        $i6 = virtualinvoke r7.<ucar.ma2.Range: int stride()>();

        i13 = i13 + $i6;

        goto label6;

     label9:
        return;
    }

    public boolean isMissingXY(ucar.nc2.Variable, int, int, int) throws ucar.ma2.InvalidRangeException
    {
        int i0, $i1, i2, $i3, i4, $i5;
        ucar.nc2.Variable r0;
        java.lang.String $r7, $r12, $r17;
        ucar.grid.GridRecord $r18;
        boolean $z0;
        ucar.nc2.iosp.grid.GridVariable r2;
        ucar.ma2.InvalidRangeException $r3, $r8, $r13;
        java.lang.Object $r1;
        java.lang.StringBuilder $r4, $r5, $r6, $r9, $r10, $r11, $r14, $r15, $r16;
        ucar.nc2.iosp.grid.GridServiceProvider r19;

        r19 := @this: ucar.nc2.iosp.grid.GridServiceProvider;

        r0 := @parameter0: ucar.nc2.Variable;

        i0 := @parameter1: int;

        i4 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = virtualinvoke r0.<ucar.nc2.Variable: java.lang.Object getSPobject()>();

        r2 = (ucar.nc2.iosp.grid.GridVariable) $r1;

        if i0 < 0 goto label1;

        $i1 = virtualinvoke r2.<ucar.nc2.iosp.grid.GridVariable: int getNTimes()>();

        if i0 < $i1 goto label2;

     label1:
        $r3 = new ucar.ma2.InvalidRangeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timeIdx=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<ucar.ma2.InvalidRangeException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label2:
        if i2 < 0 goto label3;

        $i3 = virtualinvoke r2.<ucar.nc2.iosp.grid.GridVariable: int getVertNlevels()>();

        if i2 < $i3 goto label4;

     label3:
        $r8 = new ucar.ma2.InvalidRangeException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("levIdx=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<ucar.ma2.InvalidRangeException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label4:
        if i4 < 0 goto label5;

        $i5 = virtualinvoke r2.<ucar.nc2.iosp.grid.GridVariable: int getNEnsembles()>();

        if i4 < $i5 goto label6;

     label5:
        $r13 = new ucar.ma2.InvalidRangeException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ensIdx=");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<ucar.ma2.InvalidRangeException: void <init>(java.lang.String)>($r17);

        throw $r13;

     label6:
        $r18 = virtualinvoke r2.<ucar.nc2.iosp.grid.GridVariable: ucar.grid.GridRecord findRecord(int,int,int)>(i4, i0, i2);

        if null != $r18 goto label7;

        $z0 = 1;

        goto label8;

     label7:
        $z0 = 0;

     label8:
        return $z0;
    }

    protected abstract float[] _readData(ucar.grid.GridRecord) throws java.io.IOException;

    static void <clinit>()
    {
        ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode $r0, $r1;

        $r0 = <ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode: ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode rewrite>;

        <ucar.nc2.iosp.grid.GridServiceProvider: ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode indexFileModeOnOpen> = $r0;

        $r1 = <ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode: ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode extendwrite>;

        <ucar.nc2.iosp.grid.GridServiceProvider: ucar.nc2.iosp.grid.GridServiceProvider$IndexExtendMode indexFileModeOnSync> = $r1;

        <ucar.nc2.iosp.grid.GridServiceProvider: boolean addLatLon> = 0;

        <ucar.nc2.iosp.grid.GridServiceProvider: boolean useMaximalCoordSys> = 0;

        <ucar.nc2.iosp.grid.GridServiceProvider: boolean forceNewIndex> = 0;

        <ucar.nc2.iosp.grid.GridServiceProvider: boolean alwaysInCache> = 0;

        <ucar.nc2.iosp.grid.GridServiceProvider: boolean debugOpen> = 0;

        <ucar.nc2.iosp.grid.GridServiceProvider: boolean debugMissing> = 0;

        <ucar.nc2.iosp.grid.GridServiceProvider: boolean debugMissingDetails> = 0;

        <ucar.nc2.iosp.grid.GridServiceProvider: boolean debugProj> = 0;

        <ucar.nc2.iosp.grid.GridServiceProvider: boolean debugTiming> = 0;

        <ucar.nc2.iosp.grid.GridServiceProvider: boolean debugVert> = 0;

        return;
    }
}
