class org.jdesktop.swingx.JXLabel$1 extends org.jdesktop.swingx.painter.AbstractPainter
{
    final org.jdesktop.swingx.JXLabel this$0;

    void <init>(org.jdesktop.swingx.JXLabel)
    {
        org.jdesktop.swingx.JXLabel$1 r0;
        org.jdesktop.swingx.JXLabel r1;

        r0 := @this: org.jdesktop.swingx.JXLabel$1;

        r1 := @parameter0: org.jdesktop.swingx.JXLabel;

        r0.<org.jdesktop.swingx.JXLabel$1: org.jdesktop.swingx.JXLabel this$0> = r1;

        specialinvoke r0.<org.jdesktop.swingx.painter.AbstractPainter: void <init>()>();

        return;
    }

    protected void doPaint(java.awt.Graphics2D, org.jdesktop.swingx.JXLabel, int, int)
    {
        java.lang.Throwable $r5;
        java.awt.Insets $r2;
        org.jdesktop.swingx.JXLabel $r1, r4;
        java.awt.Graphics2D r6, r7;
        int $i0, $i1, i2, i3, $i4, $i5;
        java.awt.Graphics $r3;
        org.jdesktop.swingx.JXLabel$1 r0;

        r0 := @this: org.jdesktop.swingx.JXLabel$1;

        r6 := @parameter0: java.awt.Graphics2D;

        r4 := @parameter1: org.jdesktop.swingx.JXLabel;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = r0.<org.jdesktop.swingx.JXLabel$1: org.jdesktop.swingx.JXLabel this$0>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXLabel: java.awt.Insets getInsets()>();

        $i0 = $r2.<java.awt.Insets: int left>;

        $i5 = neg $i0;

        $i1 = $r2.<java.awt.Insets: int top>;

        $i4 = neg $i1;

        $r3 = virtualinvoke r6.<java.awt.Graphics2D: java.awt.Graphics create(int,int,int,int)>($i5, $i4, i2, i3);

        r7 = (java.awt.Graphics2D) $r3;

     label1:
        virtualinvoke r4.<org.jdesktop.swingx.JXLabel: void paint(java.awt.Graphics)>(r7);

     label2:
        virtualinvoke r7.<java.awt.Graphics2D: void dispose()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

     label4:
        virtualinvoke r7.<java.awt.Graphics2D: void dispose()>();

        throw $r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected boolean shouldUseCache()
    {
        org.jdesktop.swingx.JXLabel$1 r0;

        r0 := @this: org.jdesktop.swingx.JXLabel$1;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Class $r2, $r3;
        org.jdesktop.swingx.JXLabel$1 r1;
        boolean $z0, $z1;

        r1 := @this: org.jdesktop.swingx.JXLabel$1;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    protected volatile void doPaint(java.awt.Graphics2D, java.lang.Object, int, int)
    {
        java.awt.Graphics2D r1;
        org.jdesktop.swingx.JXLabel $r3;
        int i0, i1;
        java.lang.Object r2;
        org.jdesktop.swingx.JXLabel$1 r0;

        r0 := @this: org.jdesktop.swingx.JXLabel$1;

        r1 := @parameter0: java.awt.Graphics2D;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = (org.jdesktop.swingx.JXLabel) r2;

        virtualinvoke r0.<org.jdesktop.swingx.JXLabel$1: void doPaint(java.awt.Graphics2D,org.jdesktop.swingx.JXLabel,int,int)>(r1, $r3, i0, i1);

        return;
    }
}
