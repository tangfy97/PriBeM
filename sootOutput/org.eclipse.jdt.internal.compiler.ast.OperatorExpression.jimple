public abstract class org.eclipse.jdt.internal.compiler.ast.OperatorExpression extends org.eclipse.jdt.internal.compiler.ast.Expression implements org.eclipse.jdt.internal.compiler.ast.OperatorIds
{
    public static int[][] OperatorSignatures;

    static void <clinit>()
    {
        int[][] $r0;

        $r0 = newarray (int[])[20];

        <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[][] OperatorSignatures> = $r0;

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: void classInitialize()>();

        return;
    }

    public void <init>()
    {
        org.eclipse.jdt.internal.compiler.ast.OperatorExpression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.OperatorExpression;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Expression: void <init>()>();

        return;
    }

    public static final void classInitialize()
    {
        int[][] $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34;
        int[] $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35;

        $r0 = <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[][] OperatorSignatures>;

        $r1 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_AND()>();

        $r0[2] = $r1;

        $r2 = <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[][] OperatorSignatures>;

        $r3 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_AND_AND()>();

        $r2[0] = $r3;

        $r4 = <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[][] OperatorSignatures>;

        $r5 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_DIVIDE()>();

        $r4[9] = $r5;

        $r6 = <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[][] OperatorSignatures>;

        $r7 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_EQUAL_EQUAL()>();

        $r6[18] = $r7;

        $r8 = <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[][] OperatorSignatures>;

        $r9 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_GREATER()>();

        $r8[6] = $r9;

        $r10 = <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[][] OperatorSignatures>;

        $r11 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_GREATER_EQUAL()>();

        $r10[7] = $r11;

        $r12 = <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[][] OperatorSignatures>;

        $r13 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_LEFT_SHIFT()>();

        $r12[10] = $r13;

        $r14 = <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[][] OperatorSignatures>;

        $r15 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_LESS()>();

        $r14[4] = $r15;

        $r16 = <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[][] OperatorSignatures>;

        $r17 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_LESS_EQUAL()>();

        $r16[5] = $r17;

        $r18 = <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[][] OperatorSignatures>;

        $r19 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_MINUS()>();

        $r18[13] = $r19;

        $r20 = <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[][] OperatorSignatures>;

        $r21 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_MULTIPLY()>();

        $r20[15] = $r21;

        $r22 = <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[][] OperatorSignatures>;

        $r23 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_OR()>();

        $r22[3] = $r23;

        $r24 = <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[][] OperatorSignatures>;

        $r25 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_OR_OR()>();

        $r24[1] = $r25;

        $r26 = <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[][] OperatorSignatures>;

        $r27 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_PLUS()>();

        $r26[14] = $r27;

        $r28 = <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[][] OperatorSignatures>;

        $r29 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_REMAINDER()>();

        $r28[16] = $r29;

        $r30 = <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[][] OperatorSignatures>;

        $r31 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_RIGHT_SHIFT()>();

        $r30[17] = $r31;

        $r32 = <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[][] OperatorSignatures>;

        $r33 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_UNSIGNED_RIGHT_SHIFT()>();

        $r32[19] = $r33;

        $r34 = <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[][] OperatorSignatures>;

        $r35 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_XOR()>();

        $r34[8] = $r35;

        return;
    }

    public static final java.lang.String generateTableTestCase()
    {
        org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode $r1;
        java.lang.StringBuffer $r2, $r4, $r5, $r6, $r8, $r9, $r10, $r12, $r13, $r14, $r16, $r17, $r18, $r20, $r21, $r22, $r24, $r25, $r26, $r28, $r29, $r30, $r32, $r33, $r34, $r36, $r37, $r38, $r40, $r41, $r42, $r45, $r47, $r49, $r50, $r51, $r53, $r55, $r57, $r59, $r60, $r62, $r63, $r66, $r68, $r70, $r71, $r72, $r74, $r75, $r77, $r78, $r80, $r81, $r83, $r85, $r86, $r87, $r88, $r90;
        java.lang.String $r3, $r7, $r11, $r15, $r19, $r23, $r27, $r31, $r35, $r39, $r46, $r48, $r52, $r54, $r56, $r58, $r61, $r64, r65, $r67, $r69, $r73, $r76, $r79, $r82, $r84, $r89, $r91, r92, $r93, $r94;
        int[][] $r43;
        int[] $r0, $r44;
        int $i0, i1, $i2, $i3, $i4, i5, i6, i7, i8, i9;

        $r0 = newarray (int)[17];

        $r0[0] = 2;

        $r0[2] = 9;

        $r0[3] = 6;

        $r0[4] = 7;

        $r0[5] = 10;

        $r0[6] = 4;

        $r0[7] = 5;

        $r0[8] = 13;

        $r0[9] = 15;

        $r0[10] = 3;

        $r0[11] = 1;

        $r0[12] = 14;

        $r0[13] = 16;

        $r0[14] = 17;

        $r0[15] = 19;

        $r0[16] = 8;

        $r1 = new org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode;

        specialinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode: void <init>()>();

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(java.lang.String)>("\tpublic static void binaryOperationTablesTestCase(){\n\t\t//TC test : all binary operation (described in tables)\n\t\t//method automatically generated by\n\t\t//org.eclipse.jdt.internal.compiler.ast.OperatorExpression.generateTableTestCase();\n\t\tString str0;\t String str\t= ");

        $r3 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode: java.lang.String constant(int)>(11);

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";\n");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\tint i0;\t int i\t= ");

        $r7 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode: java.lang.String constant(int)>(10);

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";\n");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\tboolean z0;\t boolean z\t= ");

        $r11 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode: java.lang.String constant(int)>(5);

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";\n");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\tchar c0; \t char  c\t= ");

        $r15 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode: java.lang.String constant(int)>(2);

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";\n");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\tfloat f0; \t float f\t= ");

        $r19 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode: java.lang.String constant(int)>(9);

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";\n");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\tdouble d0;\t double d\t= ");

        $r23 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode: java.lang.String constant(int)>(8);

        $r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";\n");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\tbyte b0; \t byte b\t= ");

        $r27 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode: java.lang.String constant(int)>(3);

        $r28 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";\n");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\tshort s0; \t short s\t= ");

        $r31 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode: java.lang.String constant(int)>(4);

        $r32 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";\n");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\tlong l0; \t long l\t= ");

        $r35 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode: java.lang.String constant(int)>(7);

        $r36 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";\n");

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\tObject obj0; \t Object obj\t= ");

        $r39 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode: java.lang.String constant(int)>(1);

        $r40 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";\n");

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        r92 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.String toString()>();

        i6 = 0;

        i7 = 0;

        goto label11;

     label01:
        i1 = $r0[i7];

        i8 = 0;

        goto label10;

     label02:
        i9 = 0;

        goto label09;

     label03:
        $r43 = <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[][] OperatorSignatures>;

        $r44 = $r43[i1];

        $i2 = i8 << 4;

        $i3 = $i2 + i9;

        $i4 = $r44[$i3];

        i5 = $i4 & 15;

        if i5 == 0 goto label08;

        $r45 = new java.lang.StringBuffer;

        $r46 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r92);

        specialinvoke $r45.<java.lang.StringBuffer: void <init>(java.lang.String)>($r46);

        $r47 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\t");

        $r48 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode: java.lang.String type(int)>(i5);

        $r49 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r52 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode: java.lang.String type(int)>(i8);

        $r53 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.String toString()>();

        $r55 = new java.lang.StringBuffer;

        $r56 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r54);

        specialinvoke $r55.<java.lang.StringBuffer: void <init>(java.lang.String)>($r56);

        $r57 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r58 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode: java.lang.String operator(int)>(i1);

        $r59 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r58);

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r61 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode: java.lang.String type(int)>(i9);

        $r62 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";\n");

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.String toString()>();

        if i5 != 11 goto label04;

        $r93 = "\t\tif (! ";

        goto label05;

     label04:
        $r93 = "\t\tif ( ";

     label05:
        r65 = $r93;

        if i5 != 11 goto label06;

        $r94 = ".equals(";

        goto label07;

     label06:
        $r94 = " != (";

     label07:
        $r66 = new java.lang.StringBuffer;

        $r67 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r64);

        specialinvoke $r66.<java.lang.StringBuffer: void <init>(java.lang.String)>($r67);

        $r68 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r65);

        $r69 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode: java.lang.String type(int)>(i5);

        $r70 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r69);

        $r71 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

        $r72 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r94);

        $r73 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode: java.lang.String constant(int)>(i8);

        $r74 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r73);

        $r75 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r76 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode: java.lang.String operator(int)>(i1);

        $r77 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r76);

        $r78 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r79 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode: java.lang.String constant(int)>(i9);

        $r80 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r79);

        $r81 = virtualinvoke $r80.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("))\n");

        $r82 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.String toString()>();

        $r83 = new java.lang.StringBuffer;

        $r84 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r82);

        specialinvoke $r83.<java.lang.StringBuffer: void <init>(java.lang.String)>($r84);

        $r85 = virtualinvoke $r83.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t\t\tSystem.out.println(");

        i6 = i6 + 1;

        $r86 = virtualinvoke $r85.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i6);

        $r87 = virtualinvoke $r86.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        r92 = virtualinvoke $r87.<java.lang.StringBuffer: java.lang.String toString()>();

     label08:
        i9 = i9 + 1;

     label09:
        if i9 < 16 goto label03;

        i8 = i8 + 1;

     label10:
        if i8 < 16 goto label02;

        i7 = i7 + 1;

     label11:
        $i0 = lengthof $r0;

        if i7 < $i0 goto label01;

        $r88 = new java.lang.StringBuffer;

        $r89 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r92);

        specialinvoke $r88.<java.lang.StringBuffer: void <init>(java.lang.String)>($r89);

        $r90 = virtualinvoke $r88.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\t\tSystem.out.println(\"binary tables test : done\");}");

        $r91 = virtualinvoke $r90.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r91;
    }

    public static final int[] get_AND()
    {
        int[] r0;

        r0 = newarray (int)[256];

        r0[51] = 670266;

        r0[55] = 472951;

        r0[52] = 670282;

        r0[50] = 670250;

        r0[58] = 670378;

        r0[115] = 489271;

        r0[119] = 489335;

        r0[116] = 489287;

        r0[114] = 489255;

        r0[122] = 489383;

        r0[67] = 674362;

        r0[71] = 477047;

        r0[68] = 674378;

        r0[66] = 674346;

        r0[74] = 674474;

        r0[85] = 349525;

        r0[35] = 666170;

        r0[39] = 468855;

        r0[36] = 666186;

        r0[34] = 666154;

        r0[42] = 666282;

        r0[163] = 698938;

        r0[167] = 501623;

        r0[164] = 698954;

        r0[162] = 698922;

        r0[170] = 699050;

        return r0;
    }

    public static final int[] get_AND_AND()
    {
        int[] r0;

        r0 = newarray (int)[256];

        r0[85] = 349525;

        return r0;
    }

    public static final int[] get_DIVIDE()
    {
        int[] $r0;

        $r0 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_MINUS()>();

        return $r0;
    }

    public static final int[] get_EQUAL_EQUAL()
    {
        int[] r0;

        r0 = newarray (int)[256];

        r0[51] = 670261;

        r0[55] = 472949;

        r0[52] = 670277;

        r0[56] = 538757;

        r0[57] = 604565;

        r0[50] = 670245;

        r0[58] = 670373;

        r0[115] = 489269;

        r0[119] = 489333;

        r0[116] = 489285;

        r0[120] = 555141;

        r0[121] = 620949;

        r0[114] = 489253;

        r0[122] = 489381;

        r0[67] = 674357;

        r0[71] = 477045;

        r0[68] = 674373;

        r0[72] = 542853;

        r0[73] = 608661;

        r0[66] = 674341;

        r0[74] = 674469;

        r0[187] = 111029;

        r0[177] = 110869;

        r0[188] = 111045;

        r0[27] = 70069;

        r0[17] = 69909;

        r0[28] = 70085;

        r0[131] = 559157;

        r0[135] = 559221;

        r0[132] = 559173;

        r0[136] = 559237;

        r0[137] = 559253;

        r0[130] = 559141;

        r0[138] = 559269;

        r0[147] = 629045;

        r0[151] = 629109;

        r0[148] = 629061;

        r0[152] = 563333;

        r0[153] = 629141;

        r0[146] = 629029;

        r0[154] = 629157;

        r0[85] = 349525;

        r0[35] = 666165;

        r0[39] = 468853;

        r0[36] = 666181;

        r0[40] = 534661;

        r0[41] = 600469;

        r0[34] = 666149;

        r0[42] = 666277;

        r0[163] = 698933;

        r0[167] = 501621;

        r0[164] = 698949;

        r0[168] = 567429;

        r0[169] = 633237;

        r0[162] = 698917;

        r0[170] = 699045;

        r0[203] = 115125;

        r0[193] = 114965;

        r0[204] = 115141;

        return r0;
    }

    public static final int[] get_GREATER()
    {
        int[] $r0;

        $r0 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_LESS()>();

        return $r0;
    }

    public static final int[] get_GREATER_EQUAL()
    {
        int[] $r0;

        $r0 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_LESS()>();

        return $r0;
    }

    public static final int[] get_LEFT_SHIFT()
    {
        int[] r0;

        r0 = newarray (int)[256];

        r0[51] = 670266;

        r0[55] = 670330;

        r0[52] = 670282;

        r0[50] = 670250;

        r0[58] = 670378;

        r0[115] = 490039;

        r0[119] = 490103;

        r0[116] = 490055;

        r0[114] = 490023;

        r0[122] = 490151;

        r0[67] = 674362;

        r0[71] = 674426;

        r0[68] = 674378;

        r0[66] = 674346;

        r0[74] = 674474;

        r0[35] = 666170;

        r0[39] = 666234;

        r0[36] = 666186;

        r0[34] = 666154;

        r0[42] = 666282;

        r0[163] = 698938;

        r0[167] = 699002;

        r0[164] = 698954;

        r0[162] = 698922;

        r0[170] = 699050;

        return r0;
    }

    public static final int[] get_LESS()
    {
        int[] r0;

        r0 = newarray (int)[256];

        r0[51] = 670261;

        r0[55] = 472949;

        r0[52] = 670277;

        r0[56] = 538757;

        r0[57] = 604565;

        r0[50] = 670245;

        r0[58] = 670373;

        r0[115] = 489269;

        r0[119] = 489333;

        r0[116] = 489285;

        r0[120] = 555141;

        r0[121] = 620949;

        r0[114] = 489253;

        r0[122] = 489381;

        r0[67] = 674357;

        r0[71] = 477045;

        r0[68] = 674373;

        r0[72] = 542853;

        r0[73] = 608661;

        r0[66] = 674341;

        r0[74] = 674469;

        r0[131] = 559157;

        r0[135] = 559221;

        r0[132] = 559173;

        r0[136] = 559237;

        r0[137] = 559253;

        r0[130] = 559141;

        r0[138] = 559269;

        r0[147] = 629045;

        r0[151] = 629109;

        r0[148] = 629061;

        r0[152] = 563333;

        r0[153] = 629141;

        r0[146] = 629029;

        r0[154] = 629157;

        r0[35] = 666165;

        r0[39] = 468853;

        r0[36] = 666181;

        r0[40] = 534661;

        r0[41] = 600469;

        r0[34] = 666149;

        r0[42] = 666277;

        r0[163] = 698933;

        r0[167] = 501621;

        r0[164] = 698949;

        r0[168] = 567429;

        r0[169] = 633237;

        r0[162] = 698917;

        r0[170] = 699045;

        return r0;
    }

    public static final int[] get_LESS_EQUAL()
    {
        int[] $r0;

        $r0 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_LESS()>();

        return $r0;
    }

    public static final int[] get_MINUS()
    {
        java.lang.Object $r1;
        int[] $r0, r2;

        $r0 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_PLUS()>();

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (int[]) $r1;

        r2[179] = 0;

        r2[183] = 0;

        r2[180] = 0;

        r2[182] = 0;

        r2[187] = 0;

        r2[177] = 0;

        r2[184] = 0;

        r2[185] = 0;

        r2[181] = 0;

        r2[178] = 0;

        r2[186] = 0;

        r2[188] = 0;

        r2[59] = 0;

        r2[123] = 0;

        r2[75] = 0;

        r2[107] = 0;

        r2[27] = 0;

        r2[139] = 0;

        r2[155] = 0;

        r2[91] = 0;

        r2[43] = 0;

        r2[171] = 0;

        r2[203] = 0;

        r2[204] = 0;

        return r2;
    }

    public static final int[] get_MULTIPLY()
    {
        int[] $r0;

        $r0 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_MINUS()>();

        return $r0;
    }

    public static final int[] get_OR()
    {
        int[] $r0;

        $r0 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_AND()>();

        return $r0;
    }

    public static final int[] get_OR_OR()
    {
        int[] $r0;

        $r0 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_AND_AND()>();

        return $r0;
    }

    public static final int[] get_PLUS()
    {
        int[] r0;

        r0 = newarray (int)[256];

        r0[51] = 670266;

        r0[55] = 472951;

        r0[52] = 670282;

        r0[59] = 211899;

        r0[56] = 538760;

        r0[57] = 604569;

        r0[50] = 670250;

        r0[58] = 670378;

        r0[115] = 489271;

        r0[119] = 489335;

        r0[116] = 489287;

        r0[123] = 490427;

        r0[120] = 555144;

        r0[121] = 620953;

        r0[114] = 489255;

        r0[122] = 489383;

        r0[67] = 674362;

        r0[71] = 477047;

        r0[68] = 674378;

        r0[75] = 281531;

        r0[72] = 542856;

        r0[73] = 608665;

        r0[66] = 674346;

        r0[74] = 674474;

        r0[179] = 766779;

        r0[183] = 767867;

        r0[180] = 767051;

        r0[187] = 768955;

        r0[177] = 766235;

        r0[184] = 768139;

        r0[185] = 768411;

        r0[181] = 767323;

        r0[178] = 766507;

        r0[186] = 768683;

        r0[188] = 769227;

        r0[27] = 72635;

        r0[131] = 559160;

        r0[135] = 559224;

        r0[132] = 559176;

        r0[139] = 560059;

        r0[136] = 559240;

        r0[137] = 559256;

        r0[130] = 559144;

        r0[138] = 559272;

        r0[147] = 629049;

        r0[151] = 629113;

        r0[148] = 629065;

        r0[155] = 629691;

        r0[152] = 563336;

        r0[153] = 629145;

        r0[146] = 629033;

        r0[154] = 629161;

        r0[91] = 351163;

        r0[35] = 666170;

        r0[39] = 468855;

        r0[36] = 666186;

        r0[43] = 142267;

        r0[40] = 534664;

        r0[41] = 600473;

        r0[34] = 666154;

        r0[42] = 666282;

        r0[163] = 698938;

        r0[167] = 501623;

        r0[164] = 698954;

        r0[171] = 699323;

        r0[168] = 567432;

        r0[169] = 633241;

        r0[162] = 698922;

        r0[170] = 699050;

        r0[203] = 838587;

        return r0;
    }

    public static final int[] get_REMAINDER()
    {
        int[] $r0;

        $r0 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_MINUS()>();

        return $r0;
    }

    public static final int[] get_RIGHT_SHIFT()
    {
        int[] $r0;

        $r0 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_LEFT_SHIFT()>();

        return $r0;
    }

    public static final int[] get_UNSIGNED_RIGHT_SHIFT()
    {
        int[] $r0;

        $r0 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_LEFT_SHIFT()>();

        return $r0;
    }

    public static final int[] get_XOR()
    {
        int[] $r0;

        $r0 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[] get_AND()>();

        return $r0;
    }

    public java.lang.String operatorToString()
    {
        org.eclipse.jdt.internal.compiler.ast.OperatorExpression r0;
        int $i0, $i1, $i2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.OperatorExpression;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int bits>;

        $i1 = $i0 & 4032;

        $i2 = $i1 >> 6;

        tableswitch($i2)
        {
            case 0: goto label09;
            case 1: goto label08;
            case 2: goto label15;
            case 3: goto label17;
            case 4: goto label21;
            case 5: goto label02;
            case 6: goto label20;
            case 7: goto label03;
            case 8: goto label14;
            case 9: goto label19;
            case 10: goto label05;
            case 11: goto label12;
            case 12: goto label18;
            case 13: goto label11;
            case 14: goto label10;
            case 15: goto label16;
            case 16: goto label13;
            case 17: goto label06;
            case 18: goto label01;
            case 19: goto label07;
            case 20: goto label24;
            case 21: goto label24;
            case 22: goto label24;
            case 23: goto label22;
            case 24: goto label24;
            case 25: goto label24;
            case 26: goto label24;
            case 27: goto label24;
            case 28: goto label24;
            case 29: goto label04;
            case 30: goto label23;
            default: goto label24;
        };

     label01:
        return "==";

     label02:
        return "<=";

     label03:
        return ">=";

     label04:
        return "!=";

     label05:
        return "<<";

     label06:
        return ">>";

     label07:
        return ">>>";

     label08:
        return "||";

     label09:
        return "&&";

     label10:
        return "+";

     label11:
        return "-";

     label12:
        return "!";

     label13:
        return "%";

     label14:
        return "^";

     label15:
        return "&";

     label16:
        return "*";

     label17:
        return "|";

     label18:
        return "~";

     label19:
        return "/";

     label20:
        return ">";

     label21:
        return "<";

     label22:
        return "?:";

     label23:
        return "=";

     label24:
        return "unknown operator";
    }

    public int nullStatus(org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.ast.OperatorExpression r0;
        int $i1;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.OperatorExpression;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $i1 = (int) -1;

        return $i1;
    }

    public java.lang.StringBuffer printExpression(int, java.lang.StringBuffer)
    {
        java.lang.StringBuffer r0, $r2, $r3;
        org.eclipse.jdt.internal.compiler.ast.OperatorExpression r1;
        int i0;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.OperatorExpression;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.StringBuffer;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.OperatorExpression: java.lang.StringBuffer printExpressionNoParenthesis(int,java.lang.StringBuffer)>(0, r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        return $r3;
    }

    public abstract java.lang.StringBuffer printExpressionNoParenthesis(int, java.lang.StringBuffer);
}
