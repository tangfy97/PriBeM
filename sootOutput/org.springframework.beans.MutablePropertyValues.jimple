public class org.springframework.beans.MutablePropertyValues extends java.lang.Object implements org.springframework.beans.PropertyValues, java.io.Serializable
{
    private final java.util.List propertyValueList;
    private java.util.Set processedProperties;
    private volatile boolean converted;

    public void <init>()
    {
        org.springframework.beans.MutablePropertyValues r0;
        java.util.ArrayList $r1;

        r0 := @this: org.springframework.beans.MutablePropertyValues;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.beans.MutablePropertyValues: boolean converted> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(0);

        r0.<org.springframework.beans.MutablePropertyValues: java.util.List propertyValueList> = $r1;

        return;
    }

    public void <init>(org.springframework.beans.PropertyValues)
    {
        org.springframework.beans.PropertyValue r5, $r6;
        org.springframework.beans.MutablePropertyValues r0;
        java.util.ArrayList $r2, $r4;
        org.springframework.beans.PropertyValue[] $r3;
        java.util.List $r7;
        int $i0, i1, i2;
        org.springframework.beans.PropertyValues r1;

        r0 := @this: org.springframework.beans.MutablePropertyValues;

        r1 := @parameter0: org.springframework.beans.PropertyValues;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.beans.MutablePropertyValues: boolean converted> = 0;

        if r1 == null goto label3;

        $r3 = interfaceinvoke r1.<org.springframework.beans.PropertyValues: org.springframework.beans.PropertyValue[] getPropertyValues()>();

        $r4 = new java.util.ArrayList;

        $i0 = lengthof $r3;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<org.springframework.beans.MutablePropertyValues: java.util.List propertyValueList> = $r4;

        i1 = lengthof $r3;

        i2 = 0;

        goto label2;

     label1:
        r5 = $r3[i2];

        $r7 = r0.<org.springframework.beans.MutablePropertyValues: java.util.List propertyValueList>;

        $r6 = new org.springframework.beans.PropertyValue;

        specialinvoke $r6.<org.springframework.beans.PropertyValue: void <init>(org.springframework.beans.PropertyValue)>(r5);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r6);

        i2 = i2 + 1;

     label2:
        if i2 < i1 goto label1;

        goto label4;

     label3:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(0);

        r0.<org.springframework.beans.MutablePropertyValues: java.util.List propertyValueList> = $r2;

     label4:
        return;
    }

    public void <init>(java.util.Map)
    {
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        org.springframework.beans.PropertyValue $r8;
        java.util.Set $r4;
        org.springframework.beans.MutablePropertyValues r0;
        java.util.ArrayList $r2, $r3;
        java.util.List $r9;
        java.util.Map r1;
        int $i0;
        java.lang.Object $r6, $r10, $r12;
        java.lang.String $r11;
        boolean $z0;

        r0 := @this: org.springframework.beans.MutablePropertyValues;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.beans.MutablePropertyValues: boolean converted> = 0;

        if r1 == null goto label3;

        $r3 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<org.springframework.beans.MutablePropertyValues: java.util.List propertyValueList> = $r3;

        $r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r9 = r0.<org.springframework.beans.MutablePropertyValues: java.util.List propertyValueList>;

        $r8 = new org.springframework.beans.PropertyValue;

        $r10 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        $r12 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        specialinvoke $r8.<org.springframework.beans.PropertyValue: void <init>(java.lang.String,java.lang.Object)>($r11, $r12);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r8);

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        goto label4;

     label3:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(0);

        r0.<org.springframework.beans.MutablePropertyValues: java.util.List propertyValueList> = $r2;

     label4:
        return;
    }

    public void <init>(java.util.List)
    {
        java.util.List r1, $r2;
        org.springframework.beans.MutablePropertyValues r0;
        java.util.ArrayList $r3;

        r0 := @this: org.springframework.beans.MutablePropertyValues;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.beans.MutablePropertyValues: boolean converted> = 0;

        if r1 == null goto label1;

        $r2 = r1;

        goto label2;

     label1:
        $r3 = new java.util.ArrayList;

        $r2 = $r3;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

     label2:
        r0.<org.springframework.beans.MutablePropertyValues: java.util.List propertyValueList> = $r2;

        return;
    }

    public java.util.List getPropertyValueList()
    {
        org.springframework.beans.MutablePropertyValues r0;
        java.util.List $r1;

        r0 := @this: org.springframework.beans.MutablePropertyValues;

        $r1 = r0.<org.springframework.beans.MutablePropertyValues: java.util.List propertyValueList>;

        return $r1;
    }

    public int size()
    {
        int $i0;
        org.springframework.beans.MutablePropertyValues r0;
        java.util.List $r1;

        r0 := @this: org.springframework.beans.MutablePropertyValues;

        $r1 = r0.<org.springframework.beans.MutablePropertyValues: java.util.List propertyValueList>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public org.springframework.beans.MutablePropertyValues addPropertyValues(org.springframework.beans.PropertyValues)
    {
        org.springframework.beans.PropertyValue[] $r2;
        org.springframework.beans.PropertyValue r3, $r4;
        int i0, i1;
        org.springframework.beans.MutablePropertyValues r1;
        org.springframework.beans.PropertyValues r0;

        r1 := @this: org.springframework.beans.MutablePropertyValues;

        r0 := @parameter0: org.springframework.beans.PropertyValues;

        if r0 == null goto label3;

        $r2 = interfaceinvoke r0.<org.springframework.beans.PropertyValues: org.springframework.beans.PropertyValue[] getPropertyValues()>();

        i0 = lengthof $r2;

        i1 = 0;

        goto label2;

     label1:
        r3 = $r2[i1];

        $r4 = new org.springframework.beans.PropertyValue;

        specialinvoke $r4.<org.springframework.beans.PropertyValue: void <init>(org.springframework.beans.PropertyValue)>(r3);

        virtualinvoke r1.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues addPropertyValue(org.springframework.beans.PropertyValue)>($r4);

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

     label3:
        return r1;
    }

    public org.springframework.beans.MutablePropertyValues addPropertyValues(java.util.Map)
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        org.springframework.beans.PropertyValue $r6;
        java.util.Set $r2;
        org.springframework.beans.MutablePropertyValues r1;
        java.util.Map r0;
        java.lang.Object $r4, $r7, $r9;
        java.lang.String $r8;
        boolean $z0;

        r1 := @this: org.springframework.beans.MutablePropertyValues;

        r0 := @parameter0: java.util.Map;

        if r0 == null goto label3;

        $r2 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = new org.springframework.beans.PropertyValue;

        $r7 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $r9 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        specialinvoke $r6.<org.springframework.beans.PropertyValue: void <init>(java.lang.String,java.lang.Object)>($r8, $r9);

        virtualinvoke r1.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues addPropertyValue(org.springframework.beans.PropertyValue)>($r6);

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

     label3:
        return r1;
    }

    public org.springframework.beans.MutablePropertyValues addPropertyValue(org.springframework.beans.PropertyValue)
    {
        org.springframework.beans.PropertyValue r4, $r7, r9;
        org.springframework.beans.MutablePropertyValues r0;
        java.util.List $r1, $r2, $r8;
        int $i0, i1;
        java.lang.Object $r3;
        java.lang.String $r5, $r6;
        boolean $z0;

        r0 := @this: org.springframework.beans.MutablePropertyValues;

        r9 := @parameter0: org.springframework.beans.PropertyValue;

        i1 = 0;

        goto label3;

     label1:
        $r2 = r0.<org.springframework.beans.MutablePropertyValues: java.util.List propertyValueList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (org.springframework.beans.PropertyValue) $r3;

        $r5 = virtualinvoke r4.<org.springframework.beans.PropertyValue: java.lang.String getName()>();

        $r6 = virtualinvoke r9.<org.springframework.beans.PropertyValue: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        $r7 = specialinvoke r0.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue mergeIfRequired(org.springframework.beans.PropertyValue,org.springframework.beans.PropertyValue)>(r9, r4);

        virtualinvoke r0.<org.springframework.beans.MutablePropertyValues: void setPropertyValueAt(org.springframework.beans.PropertyValue,int)>($r7, i1);

        return r0;

     label2:
        i1 = i1 + 1;

     label3:
        $r1 = r0.<org.springframework.beans.MutablePropertyValues: java.util.List propertyValueList>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i1 < $i0 goto label1;

        $r8 = r0.<org.springframework.beans.MutablePropertyValues: java.util.List propertyValueList>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r9);

        return r0;
    }

    public void addPropertyValue(java.lang.String, java.lang.Object)
    {
        org.springframework.beans.PropertyValue $r1;
        org.springframework.beans.MutablePropertyValues r0;
        java.lang.Object r3;
        java.lang.String r2;

        r0 := @this: org.springframework.beans.MutablePropertyValues;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r1 = new org.springframework.beans.PropertyValue;

        specialinvoke $r1.<org.springframework.beans.PropertyValue: void <init>(java.lang.String,java.lang.Object)>(r2, r3);

        virtualinvoke r0.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues addPropertyValue(org.springframework.beans.PropertyValue)>($r1);

        return;
    }

    public org.springframework.beans.MutablePropertyValues add(java.lang.String, java.lang.Object)
    {
        org.springframework.beans.PropertyValue $r1;
        org.springframework.beans.MutablePropertyValues r0;
        java.lang.Object r3;
        java.lang.String r2;

        r0 := @this: org.springframework.beans.MutablePropertyValues;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r1 = new org.springframework.beans.PropertyValue;

        specialinvoke $r1.<org.springframework.beans.PropertyValue: void <init>(java.lang.String,java.lang.Object)>(r2, r3);

        virtualinvoke r0.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues addPropertyValue(org.springframework.beans.PropertyValue)>($r1);

        return r0;
    }

    public void setPropertyValueAt(org.springframework.beans.PropertyValue, int)
    {
        java.util.List $r2;
        org.springframework.beans.PropertyValue r1;
        int i0;
        org.springframework.beans.MutablePropertyValues r0;

        r0 := @this: org.springframework.beans.MutablePropertyValues;

        r1 := @parameter0: org.springframework.beans.PropertyValue;

        i0 := @parameter1: int;

        $r2 = r0.<org.springframework.beans.MutablePropertyValues: java.util.List propertyValueList>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return;
    }

    private org.springframework.beans.PropertyValue mergeIfRequired(org.springframework.beans.PropertyValue, org.springframework.beans.PropertyValue)
    {
        org.springframework.beans.PropertyValue r0, r3, $r6;
        org.springframework.beans.MutablePropertyValues r8;
        org.springframework.beans.Mergeable r2;
        java.lang.Object $r1, $r4, $r5;
        java.lang.String $r7;
        boolean $z0, $z1;

        r8 := @this: org.springframework.beans.MutablePropertyValues;

        r0 := @parameter0: org.springframework.beans.PropertyValue;

        r3 := @parameter1: org.springframework.beans.PropertyValue;

        $r1 = virtualinvoke r0.<org.springframework.beans.PropertyValue: java.lang.Object getValue()>();

        $z0 = $r1 instanceof org.springframework.beans.Mergeable;

        if $z0 == 0 goto label1;

        r2 = (org.springframework.beans.Mergeable) $r1;

        $z1 = interfaceinvoke r2.<org.springframework.beans.Mergeable: boolean isMergeEnabled()>();

        if $z1 == 0 goto label1;

        $r4 = virtualinvoke r3.<org.springframework.beans.PropertyValue: java.lang.Object getValue()>();

        $r5 = interfaceinvoke r2.<org.springframework.beans.Mergeable: java.lang.Object merge(java.lang.Object)>($r4);

        $r6 = new org.springframework.beans.PropertyValue;

        $r7 = virtualinvoke r0.<org.springframework.beans.PropertyValue: java.lang.String getName()>();

        specialinvoke $r6.<org.springframework.beans.PropertyValue: void <init>(java.lang.String,java.lang.Object)>($r7, $r5);

        return $r6;

     label1:
        return r0;
    }

    public void removePropertyValue(org.springframework.beans.PropertyValue)
    {
        org.springframework.beans.MutablePropertyValues r0;
        java.util.List $r2;
        org.springframework.beans.PropertyValue r1;

        r0 := @this: org.springframework.beans.MutablePropertyValues;

        r1 := @parameter0: org.springframework.beans.PropertyValue;

        $r2 = r0.<org.springframework.beans.MutablePropertyValues: java.util.List propertyValueList>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void removePropertyValue(java.lang.String)
    {
        java.util.List $r2;
        org.springframework.beans.PropertyValue $r3;
        org.springframework.beans.MutablePropertyValues r0;
        java.lang.String r1;

        r0 := @this: org.springframework.beans.MutablePropertyValues;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.beans.MutablePropertyValues: java.util.List propertyValueList>;

        $r3 = virtualinvoke r0.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue getPropertyValue(java.lang.String)>(r1);

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>($r3);

        return;
    }

    public org.springframework.beans.PropertyValue[] getPropertyValues()
    {
        org.springframework.beans.PropertyValue[] $r3, $r5;
        java.util.List $r1, $r2;
        java.lang.Object[] $r4;
        int $i0;
        org.springframework.beans.MutablePropertyValues r0;

        r0 := @this: org.springframework.beans.MutablePropertyValues;

        $r2 = r0.<org.springframework.beans.MutablePropertyValues: java.util.List propertyValueList>;

        $r1 = r0.<org.springframework.beans.MutablePropertyValues: java.util.List propertyValueList>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r3 = newarray (org.springframework.beans.PropertyValue)[$i0];

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (org.springframework.beans.PropertyValue[]) $r4;

        return $r5;
    }

    public org.springframework.beans.PropertyValue getPropertyValue(java.lang.String)
    {
        java.util.Iterator $r2;
        org.springframework.beans.PropertyValue r4;
        org.springframework.beans.MutablePropertyValues r0;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.String $r5, r6;
        boolean $z0, $z1;

        r0 := @this: org.springframework.beans.MutablePropertyValues;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.springframework.beans.MutablePropertyValues: java.util.List propertyValueList>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.springframework.beans.PropertyValue) $r3;

        $r5 = virtualinvoke r4.<org.springframework.beans.PropertyValue: java.lang.String getName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;
    }

    public org.springframework.beans.PropertyValues changesSince(org.springframework.beans.PropertyValues)
    {
        java.util.Iterator $r4;
        org.springframework.beans.PropertyValue r6, $r8;
        org.springframework.beans.MutablePropertyValues $r0, r2;
        java.util.List $r3;
        java.lang.Object $r5;
        java.lang.String $r7;
        org.springframework.beans.PropertyValues r1;
        boolean $z0, $z1;

        r2 := @this: org.springframework.beans.MutablePropertyValues;

        r1 := @parameter0: org.springframework.beans.PropertyValues;

        $r0 = new org.springframework.beans.MutablePropertyValues;

        specialinvoke $r0.<org.springframework.beans.MutablePropertyValues: void <init>()>();

        if r1 != r2 goto label1;

        return $r0;

     label1:
        $r3 = r2.<org.springframework.beans.MutablePropertyValues: java.util.List propertyValueList>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        goto label4;

     label2:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.springframework.beans.PropertyValue) $r5;

        $r7 = virtualinvoke r6.<org.springframework.beans.PropertyValue: java.lang.String getName()>();

        $r8 = interfaceinvoke r1.<org.springframework.beans.PropertyValues: org.springframework.beans.PropertyValue getPropertyValue(java.lang.String)>($r7);

        if $r8 != null goto label3;

        virtualinvoke $r0.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues addPropertyValue(org.springframework.beans.PropertyValue)>(r6);

        goto label4;

     label3:
        $z0 = virtualinvoke $r8.<org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>(r6);

        if $z0 != 0 goto label4;

        virtualinvoke $r0.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues addPropertyValue(org.springframework.beans.PropertyValue)>(r6);

     label4:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label2;

        return $r0;
    }

    public boolean contains(java.lang.String)
    {
        org.springframework.beans.PropertyValue $r2;
        java.util.Set $r3, $r4;
        org.springframework.beans.MutablePropertyValues r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.springframework.beans.MutablePropertyValues;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue getPropertyValue(java.lang.String)>(r1);

        if $r2 != null goto label2;

        $r3 = r0.<org.springframework.beans.MutablePropertyValues: java.util.Set processedProperties>;

        if $r3 == null goto label1;

        $r4 = r0.<org.springframework.beans.MutablePropertyValues: java.util.Set processedProperties>;

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public boolean isEmpty()
    {
        org.springframework.beans.MutablePropertyValues r0;
        java.util.List $r1;
        boolean $z0;

        r0 := @this: org.springframework.beans.MutablePropertyValues;

        $r1 = r0.<org.springframework.beans.MutablePropertyValues: java.util.List propertyValueList>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        return $z0;
    }

    public void registerProcessedProperty(java.lang.String)
    {
        java.util.HashSet $r4;
        java.util.Set $r1, $r3;
        org.springframework.beans.MutablePropertyValues r0;
        java.lang.String r2;

        r0 := @this: org.springframework.beans.MutablePropertyValues;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.springframework.beans.MutablePropertyValues: java.util.Set processedProperties>;

        if $r1 != null goto label1;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r0.<org.springframework.beans.MutablePropertyValues: java.util.Set processedProperties> = $r4;

     label1:
        $r3 = r0.<org.springframework.beans.MutablePropertyValues: java.util.Set processedProperties>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void setConverted()
    {
        org.springframework.beans.MutablePropertyValues r0;

        r0 := @this: org.springframework.beans.MutablePropertyValues;

        r0.<org.springframework.beans.MutablePropertyValues: boolean converted> = 1;

        return;
    }

    public boolean isConverted()
    {
        org.springframework.beans.MutablePropertyValues r0;
        boolean $z0;

        r0 := @this: org.springframework.beans.MutablePropertyValues;

        $z0 = r0.<org.springframework.beans.MutablePropertyValues: boolean converted>;

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.List $r3, $r4;
        org.springframework.beans.MutablePropertyValues r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: org.springframework.beans.MutablePropertyValues;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.springframework.beans.MutablePropertyValues;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.springframework.beans.MutablePropertyValues) r1;

        $r4 = r0.<org.springframework.beans.MutablePropertyValues: java.util.List propertyValueList>;

        $r3 = r2.<org.springframework.beans.MutablePropertyValues: java.util.List propertyValueList>;

        $z1 = interfaceinvoke $r4.<java.util.List: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    public int hashCode()
    {
        int $i0;
        org.springframework.beans.MutablePropertyValues r0;
        java.util.List $r1;

        r0 := @this: org.springframework.beans.MutablePropertyValues;

        $r1 = r0.<org.springframework.beans.MutablePropertyValues: java.util.List propertyValueList>;

        $i0 = interfaceinvoke $r1.<java.util.List: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        org.springframework.beans.MutablePropertyValues r0;
        org.springframework.beans.PropertyValue[] $r1;
        int $i0, $i1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4, $r6;

        r0 := @this: org.springframework.beans.MutablePropertyValues;

        $r1 = virtualinvoke r0.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue[] getPropertyValues()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("PropertyValues: length=");

        $i0 = lengthof $r1;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $i1 = lengthof $r1;

        if $i1 <= 0 goto label1;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r6 = staticinvoke <org.springframework.util.StringUtils: java.lang.String arrayToDelimitedString(java.lang.Object[],java.lang.String)>($r1, "; ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label1:
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
