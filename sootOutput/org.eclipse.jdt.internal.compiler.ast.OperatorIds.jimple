public interface  org.eclipse.jdt.internal.compiler.ast.OperatorIds extends java.lang.Object
{
    public static final int AND_AND;
    public static final int OR_OR;
    public static final int AND;
    public static final int OR;
    public static final int LESS;
    public static final int LESS_EQUAL;
    public static final int GREATER;
    public static final int GREATER_EQUAL;
    public static final int XOR;
    public static final int DIVIDE;
    public static final int LEFT_SHIFT;
    public static final int NOT;
    public static final int TWIDDLE;
    public static final int MINUS;
    public static final int PLUS;
    public static final int MULTIPLY;
    public static final int REMAINDER;
    public static final int RIGHT_SHIFT;
    public static final int EQUAL_EQUAL;
    public static final int UNSIGNED_RIGHT_SHIFT;
    public static final int NumberOfTables;
    public static final int QUESTIONCOLON;
    public static final int NOT_EQUAL;
    public static final int EQUAL;
    public static final int INSTANCEOF;
    public static final int PLUS_PLUS;
    public static final int MINUS_MINUS;

    public static void <clinit>()
    {
        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int MINUS_MINUS> = 33;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int PLUS_PLUS> = 32;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int INSTANCEOF> = 31;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int EQUAL> = 30;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int NOT_EQUAL> = 29;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int QUESTIONCOLON> = 23;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int NumberOfTables> = 20;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int UNSIGNED_RIGHT_SHIFT> = 19;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int EQUAL_EQUAL> = 18;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int RIGHT_SHIFT> = 17;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int REMAINDER> = 16;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int MULTIPLY> = 15;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int PLUS> = 14;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int MINUS> = 13;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int TWIDDLE> = 12;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int NOT> = 11;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int LEFT_SHIFT> = 10;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int DIVIDE> = 9;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int XOR> = 8;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int GREATER_EQUAL> = 7;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int GREATER> = 6;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int LESS_EQUAL> = 5;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int LESS> = 4;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int OR> = 3;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int AND> = 2;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int OR_OR> = 1;

        <org.eclipse.jdt.internal.compiler.ast.OperatorIds: int AND_AND> = 0;

        return;
    }
}
