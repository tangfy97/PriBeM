public class org.apache.lucene.document.DateField extends java.lang.Object
{
    private static int DATE_LEN;

    private void <init>()
    {
        org.apache.lucene.document.DateField r0;

        r0 := @this: org.apache.lucene.document.DateField;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String MIN_DATE_STRING()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <org.apache.lucene.document.DateField: java.lang.String timeToString(long)>(0L);

        return $r0;
    }

    public static java.lang.String MAX_DATE_STRING()
    {
        int $i0, $i2, i3;
        char[] r0;
        char $c1;
        java.lang.String $r1;

        $i0 = <org.apache.lucene.document.DateField: int DATE_LEN>;

        r0 = newarray (char)[$i0];

        $c1 = staticinvoke <java.lang.Character: char forDigit(int,int)>(35, 36);

        i3 = 0;

     label1:
        $i2 = <org.apache.lucene.document.DateField: int DATE_LEN>;

        if i3 >= $i2 goto label2;

        r0[i3] = $c1;

        i3 = i3 + 1;

        goto label1;

     label2:
        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>(r0);

        return $r1;
    }

    public static java.lang.String dateToString(java.util.Date)
    {
        long $l0;
        java.lang.String $r1;
        java.util.Date r0;

        r0 := @parameter0: java.util.Date;

        $l0 = virtualinvoke r0.<java.util.Date: long getTime()>();

        $r1 = staticinvoke <org.apache.lucene.document.DateField: java.lang.String timeToString(long)>($l0);

        return $r1;
    }

    public static java.lang.String timeToString(long)
    {
        long l0;
        byte $b1;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r0, $r9, $r15, r16;
        java.lang.RuntimeException $r18, $r20;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r12, $r13, $r14, $r17, $r19, $r21;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        $i9 = (int) $b1;

        if $i9 >= 0 goto label1;

        $r18 = new java.lang.RuntimeException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("time \'");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is too early, must be >= 0");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String)>($r15);

        throw $r18;

     label1:
        $r0 = staticinvoke <java.lang.Long: java.lang.String toString(long,int)>(l0, 36);

        r16 = $r0;

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i3 = <org.apache.lucene.document.DateField: int DATE_LEN>;

        if $i2 <= $i3 goto label2;

        $r20 = new java.lang.RuntimeException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("time \'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is too late, length of string ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("representation must be <= ");

        $i8 = <org.apache.lucene.document.DateField: int DATE_LEN>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r20;

     label2:
        $i4 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i5 = <org.apache.lucene.document.DateField: int DATE_LEN>;

        if $i4 >= $i5 goto label5;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

     label3:
        $i6 = virtualinvoke $r21.<java.lang.StringBuilder: int length()>();

        $i7 = <org.apache.lucene.document.DateField: int DATE_LEN>;

        if $i6 >= $i7 goto label4;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,int)>(0, 0);

        goto label3;

     label4:
        r16 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        return r16;
    }

    public static long stringToTime(java.lang.String)
    {
        long $l0;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(r0, 36);

        return $l0;
    }

    public static java.util.Date stringToDate(java.lang.String)
    {
        long $l0;
        java.lang.String r1;
        java.util.Date $r0;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.util.Date;

        $l0 = staticinvoke <org.apache.lucene.document.DateField: long stringToTime(java.lang.String)>(r1);

        specialinvoke $r0.<java.util.Date: void <init>(long)>($l0);

        return $r0;
    }

    static void <clinit>()
    {
        int $i0;
        java.lang.String $r0;

        $r0 = staticinvoke <java.lang.Long: java.lang.String toString(long,int)>(31536000000000L, 36);

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        <org.apache.lucene.document.DateField: int DATE_LEN> = $i0;

        return;
    }
}
