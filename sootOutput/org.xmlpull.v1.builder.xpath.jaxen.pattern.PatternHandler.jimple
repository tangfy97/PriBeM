public class org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler extends org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler
{
    private org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern pattern;

    public void <init>()
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler;

        specialinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: void <init>()>();

        return;
    }

    public org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern getPattern()
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler r0;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern $r1;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler;

        $r1 = virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern getPattern(boolean)>(1);

        return $r1;
    }

    public org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern getPattern(boolean)
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler r0;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern $r1, $r2;
        boolean z0, $z1;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $z1 = r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: boolean simplified>;

        if $z1 != 0 goto label1;

        $r1 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern pattern>;

        virtualinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern simplify()>();

        r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: boolean simplified> = 1;

     label1:
        $r2 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern pattern>;

        return $r2;
    }

    public void endXPath() throws org.xmlpull.v1.builder.xpath.jaxen.JaxenException
    {
        java.io.PrintStream $r4;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern $r2;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler r0;
        java.lang.StringBuffer $r3, $r5, $r7;
        java.lang.Object $r1;
        java.lang.String $r8;
        java.util.LinkedList $r6;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler;

        $r1 = virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: java.lang.Object pop()>();

        $r2 = (org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern) $r1;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern pattern> = $r2;

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("stack is: ");

        $r6 = r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: java.util.LinkedList stack>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: java.util.LinkedList popFrame()>();

        return;
    }

    public void endPathExpr() throws org.xmlpull.v1.builder.xpath.jaxen.JaxenException
    {
        java.io.PrintStream $r3;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler r0;
        java.lang.StringBuffer $r2, $r4, $r5;
        java.lang.Object $r7;
        java.lang.String $r6;
        java.util.LinkedList $r1;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler;

        $r1 = virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: java.util.LinkedList popFrame()>();

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("endPathExpr(): ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r7 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object removeFirst()>();

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: void push(java.lang.Object)>($r7);

        return;
    }

    public void startAbsoluteLocationPath() throws org.xmlpull.v1.builder.xpath.jaxen.JaxenException
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler r0;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern $r1;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler;

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: void pushFrame()>();

        $r1 = virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern createAbsoluteLocationPath()>();

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: void push(java.lang.Object)>($r1);

        return;
    }

    public void endAbsoluteLocationPath() throws org.xmlpull.v1.builder.xpath.jaxen.JaxenException
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler;

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler: void endLocationPath()>();

        return;
    }

    public void startRelativeLocationPath() throws org.xmlpull.v1.builder.xpath.jaxen.JaxenException
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler r0;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern $r1;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler;

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: void pushFrame()>();

        $r1 = virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler: org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern createRelativeLocationPath()>();

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: void push(java.lang.Object)>($r1);

        return;
    }

    public void endRelativeLocationPath() throws org.xmlpull.v1.builder.xpath.jaxen.JaxenException
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler;

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler: void endLocationPath()>();

        return;
    }

    protected void endLocationPath() throws org.xmlpull.v1.builder.xpath.jaxen.JaxenException
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler r0;
        org.xmlpull.v1.builder.xpath.jaxen.expr.FilterExpr $r9;
        java.lang.StringBuffer $r2, $r4, $r5;
        java.lang.String $r6;
        java.util.LinkedList $r1;
        boolean $z0, $z1, $z2, $z3;
        java.io.PrintStream $r3;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest $r10, $r12;
        java.lang.Object $r7, $r8;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern $r11, r13, r14;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler;

        $r1 = virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: java.util.LinkedList popFrame()>();

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("endLocationPath: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r7 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object removeFirst()>();

        r13 = (org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern) $r7;

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: void push(java.lang.Object)>(r13);

     label1:
        $z0 = virtualinvoke $r1.<java.util.AbstractCollection: boolean isEmpty()>();

        if $z0 != 0 goto label6;

        $r8 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object removeFirst()>();

        $z1 = $r8 instanceof org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest;

        if $z1 == 0 goto label3;

        if 0 == 0 goto label2;

        $r11 = new org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern;

        $r12 = (org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest) $r8;

        specialinvoke $r11.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: void <init>(org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest)>($r12);

        virtualinvoke r13.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: void setParentPattern(org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern)>($r11);

        r13 = $r11;

        goto label5;

     label2:
        $r10 = (org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest) $r8;

        virtualinvoke r13.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: void setNodeTest(org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest)>($r10);

        goto label5;

     label3:
        $z2 = $r8 instanceof org.xmlpull.v1.builder.xpath.jaxen.expr.FilterExpr;

        if $z2 == 0 goto label4;

        $r9 = (org.xmlpull.v1.builder.xpath.jaxen.expr.FilterExpr) $r8;

        virtualinvoke r13.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: void addFilter(org.xmlpull.v1.builder.xpath.jaxen.expr.FilterExpr)>($r9);

        goto label5;

     label4:
        $z3 = $r8 instanceof org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern;

        if $z3 == 0 goto label5;

        r14 = (org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern) $r8;

        virtualinvoke r13.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: void setParentPattern(org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern)>(r14);

        r13 = r14;

     label5:
        goto label1;

     label6:
        return;
    }

    public void startNameStep(int, java.lang.String, java.lang.String) throws org.xmlpull.v1.builder.xpath.jaxen.JaxenException
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest $r4;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler r0;
        byte b3, b4, b5;
        int i0, $i1, $i2;
        java.lang.String r1, r2;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest $r3;
        boolean $z0, $z1;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: void pushFrame()>();

        b3 = 1;

        b5 = 1;

        b4 = 1;

        lookupswitch(i0)
        {
            case 9: goto label1;
            case 10: goto label2;
            default: goto label3;
        };

     label1:
        b3 = 2;

        b5 = 2;

        b4 = 2;

        goto label3;

     label2:
        b3 = 13;

        b5 = 13;

        b4 = 13;

     label3:
        if r1 == null goto label4;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i2 <= 0 goto label4;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z1 != 0 goto label4;

        $r4 = new org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest;

        specialinvoke $r4.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest: void <init>(java.lang.String,short)>(r1, b5);

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: void push(java.lang.Object)>($r4);

     label4:
        if r2 == null goto label5;

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i1 <= 0 goto label5;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z0 != 0 goto label5;

        $r3 = new org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest;

        specialinvoke $r3.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest: void <init>(java.lang.String,short)>(r2, b4);

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: void push(java.lang.Object)>($r3);

     label5:
        return;
    }

    public void startTextNodeStep(int) throws org.xmlpull.v1.builder.xpath.jaxen.JaxenException
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler r0;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTypeTest $r1;
        int i0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: void pushFrame()>();

        $r1 = new org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTypeTest;

        specialinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTypeTest: void <init>(short)>(3);

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: void push(java.lang.Object)>($r1);

        return;
    }

    public void startCommentNodeStep(int) throws org.xmlpull.v1.builder.xpath.jaxen.JaxenException
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler r0;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTypeTest $r1;
        int i0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: void pushFrame()>();

        $r1 = new org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTypeTest;

        specialinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTypeTest: void <init>(short)>(8);

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: void push(java.lang.Object)>($r1);

        return;
    }

    public void startAllNodeStep(int) throws org.xmlpull.v1.builder.xpath.jaxen.JaxenException
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler r0;
        int i0;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyNodeTest $r1;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: void pushFrame()>();

        $r1 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyNodeTest: org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyNodeTest getInstance()>();

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: void push(java.lang.Object)>($r1);

        return;
    }

    public void startProcessingInstructionNodeStep(int, java.lang.String) throws org.xmlpull.v1.builder.xpath.jaxen.JaxenException
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler r0;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTypeTest $r1;
        int i0;
        java.lang.String r2;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: void pushFrame()>();

        $r1 = new org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTypeTest;

        specialinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTypeTest: void <init>(short)>(7);

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: void push(java.lang.Object)>($r1);

        return;
    }

    protected void endStep()
    {
        java.io.PrintStream $r4;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler r0;
        java.lang.StringBuffer $r3, $r5, $r6;
        java.lang.Object $r2;
        java.lang.String $r7;
        java.util.LinkedList $r1;
        boolean $z0, $z1;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler;

        $r1 = virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: java.util.LinkedList popFrame()>();

        $z0 = virtualinvoke $r1.<java.util.AbstractCollection: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object removeFirst()>();

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: void push(java.lang.Object)>($r2);

        $z1 = virtualinvoke $r1.<java.util.AbstractCollection: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("List should now be empty!");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label1:
        return;
    }

    public void startUnionExpr() throws org.xmlpull.v1.builder.xpath.jaxen.JaxenException
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler;

        return;
    }

    public void endUnionExpr(boolean) throws org.xmlpull.v1.builder.xpath.jaxen.JaxenException
    {
        org.xmlpull.v1.builder.xpath.jaxen.expr.Expr r2, r4;
        org.xmlpull.v1.builder.xpath.jaxen.expr.UnionExpr $r6;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler r0;
        java.lang.Object $r1, $r3;
        org.xmlpull.v1.builder.xpath.jaxen.expr.XPathFactory $r5;
        boolean z0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: java.lang.Object pop()>();

        r2 = (org.xmlpull.v1.builder.xpath.jaxen.expr.Expr) $r1;

        $r3 = virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: java.lang.Object pop()>();

        r4 = (org.xmlpull.v1.builder.xpath.jaxen.expr.Expr) $r3;

        $r5 = virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: org.xmlpull.v1.builder.xpath.jaxen.expr.XPathFactory getXPathFactory()>();

        $r6 = interfaceinvoke $r5.<org.xmlpull.v1.builder.xpath.jaxen.expr.XPathFactory: org.xmlpull.v1.builder.xpath.jaxen.expr.UnionExpr createUnionExpr(org.xmlpull.v1.builder.xpath.jaxen.expr.Expr,org.xmlpull.v1.builder.xpath.jaxen.expr.Expr)>(r4, r2);

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.JaxenHandler: void push(java.lang.Object)>($r6);

     label1:
        return;
    }

    protected org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern createAbsoluteLocationPath()
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTypeTest $r1;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler r2;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern $r0;

        r2 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler;

        $r0 = new org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern;

        $r1 = <org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTypeTest: org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTypeTest DOCUMENT_TEST>;

        specialinvoke $r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: void <init>(org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest)>($r1);

        return $r0;
    }

    protected org.xmlpull.v1.builder.xpath.jaxen.pattern.Pattern createRelativeLocationPath()
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler r1;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern $r0;

        r1 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.PatternHandler;

        $r0 = new org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern;

        specialinvoke $r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.LocationPathPattern: void <init>()>();

        return $r0;
    }
}
