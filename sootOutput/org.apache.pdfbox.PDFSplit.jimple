public class org.apache.pdfbox.PDFSplit extends java.lang.Object
{
    private static final java.lang.String PASSWORD;
    private static final java.lang.String SPLIT;
    private static final java.lang.String START_PAGE;
    private static final java.lang.String END_PAGE;
    private static final java.lang.String NONSEQ;

    private void <init>()
    {
        org.apache.pdfbox.PDFSplit r0;

        r0 := @this: org.apache.pdfbox.PDFSplit;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] r1;
        org.apache.pdfbox.PDFSplit $r0;

        r1 := @parameter0: java.lang.String[];

        $r0 = new org.apache.pdfbox.PDFSplit;

        specialinvoke $r0.<org.apache.pdfbox.PDFSplit: void <init>()>();

        specialinvoke $r0.<org.apache.pdfbox.PDFSplit: void split(java.lang.String[])>(r1);

        return;
    }

    private void split(java.lang.String[]) throws java.lang.Exception
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, z7;
        org.apache.pdfbox.pdmodel.PDDocument $r2, r5, r21, r28, r31;
        java.util.List r29, $r30;
        java.lang.StringBuilder $r6, $r8, $r9, $r10, $r11;
        java.lang.Throwable $r19;
        org.apache.pdfbox.util.Splitter $r0;
        java.lang.String[] r1;
        org.apache.pdfbox.PDFSplit r22;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i14, i15, $i16, i17, i18;
        java.lang.String $r7, $r12, $r14, $r15, $r16, $r17, $r18, r23, r24, r25, r26, r27;
        java.io.File $r13;
        java.lang.Object $r3, $r4, $r20;

        r22 := @this: org.apache.pdfbox.PDFSplit;

        r1 := @parameter0: java.lang.String[];

        r23 = "";

        r24 = null;

        r25 = null;

        r26 = null;

        z6 = 0;

        $r0 = new org.apache.pdfbox.util.Splitter;

        specialinvoke $r0.<org.apache.pdfbox.util.Splitter: void <init>()>();

        r27 = null;

        i13 = 0;

     label01:
        $i0 = lengthof r1;

        if i13 >= $i0 goto label12;

        $r14 = r1[i13];

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("-password");

        if $z1 == 0 goto label03;

        i13 = i13 + 1;

        $i11 = lengthof r1;

        if i13 < $i11 goto label02;

        staticinvoke <org.apache.pdfbox.PDFSplit: void usage()>();

     label02:
        r23 = r1[i13];

        goto label11;

     label03:
        $r15 = r1[i13];

        $z2 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("-split");

        if $z2 == 0 goto label05;

        i13 = i13 + 1;

        $i10 = lengthof r1;

        if i13 < $i10 goto label04;

        staticinvoke <org.apache.pdfbox.PDFSplit: void usage()>();

     label04:
        r24 = r1[i13];

        goto label11;

     label05:
        $r16 = r1[i13];

        $z3 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("-startPage");

        if $z3 == 0 goto label07;

        i13 = i13 + 1;

        $i9 = lengthof r1;

        if i13 < $i9 goto label06;

        staticinvoke <org.apache.pdfbox.PDFSplit: void usage()>();

     label06:
        r25 = r1[i13];

        goto label11;

     label07:
        $r17 = r1[i13];

        $z4 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("-endPage");

        if $z4 == 0 goto label09;

        i13 = i13 + 1;

        $i8 = lengthof r1;

        if i13 < $i8 goto label08;

        staticinvoke <org.apache.pdfbox.PDFSplit: void usage()>();

     label08:
        r26 = r1[i13];

        goto label11;

     label09:
        $r18 = r1[i13];

        $z5 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("-nonSeq");

        if $z5 == 0 goto label10;

        z6 = 1;

        goto label11;

     label10:
        if r27 != null goto label11;

        r27 = r1[i13];

     label11:
        i13 = i13 + 1;

        goto label01;

     label12:
        if r27 != null goto label13;

        staticinvoke <org.apache.pdfbox.PDFSplit: void usage()>();

        goto label31;

     label13:
        r28 = null;

        r29 = null;

     label14:
        if z6 == 0 goto label15;

        $r13 = new java.io.File;

        specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>(r27);

        r28 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument loadNonSeq(java.io.File,org.apache.pdfbox.io.RandomAccess,java.lang.String)>($r13, null, r23);

        goto label16;

     label15:
        $r2 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.lang.String)>(r27);

        r28 = $r2;

        $z0 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDDocument: boolean isEncrypted()>();

        if $z0 == 0 goto label16;

        virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDDocument: void decrypt(java.lang.String)>(r23);

     label16:
        $i14 = virtualinvoke r28.<org.apache.pdfbox.pdmodel.PDDocument: int getNumberOfPages()>();

        z7 = 0;

        if r25 == null goto label17;

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r25);

        virtualinvoke $r0.<org.apache.pdfbox.util.Splitter: void setStartPage(int)>($i7);

        z7 = 1;

        if r24 != null goto label17;

        virtualinvoke $r0.<org.apache.pdfbox.util.Splitter: void setSplitAtPage(int)>($i14);

     label17:
        if r26 == null goto label18;

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r26);

        virtualinvoke $r0.<org.apache.pdfbox.util.Splitter: void setEndPage(int)>($i5);

        z7 = 1;

        if r24 != null goto label18;

        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r26);

        virtualinvoke $r0.<org.apache.pdfbox.util.Splitter: void setSplitAtPage(int)>($i6);

     label18:
        if r24 == null goto label19;

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r24);

        virtualinvoke $r0.<org.apache.pdfbox.util.Splitter: void setSplitAtPage(int)>($i4);

        goto label20;

     label19:
        if z7 != 0 goto label20;

        virtualinvoke $r0.<org.apache.pdfbox.util.Splitter: void setSplitAtPage(int)>(1);

     label20:
        $r30 = virtualinvoke $r0.<org.apache.pdfbox.util.Splitter: java.util.List split(org.apache.pdfbox.pdmodel.PDDocument)>(r28);

        r29 = $r30;

        i15 = 0;

     label21:
        $i16 = interfaceinvoke $r30.<java.util.List: int size()>();

        if i15 >= $i16 goto label22;

        $r4 = interfaceinvoke $r30.<java.util.List: java.lang.Object get(int)>(i15);

        r5 = (org.apache.pdfbox.pdmodel.PDDocument) $r4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $i2 = virtualinvoke r27.<java.lang.String: int length()>();

        $i3 = $i2 - 4;

        $r7 = virtualinvoke r27.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i15);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".pdf");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.pdfbox.PDFSplit: void writeDocument(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String)>(r5, $r12);

        virtualinvoke r5.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

        i15 = i15 + 1;

        goto label21;

     label22:
        if r28 == null goto label23;

        virtualinvoke r28.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label23:
        i17 = 0;

     label24:
        if $r30 == null goto label25;

        $i1 = interfaceinvoke $r30.<java.util.List: int size()>();

        if i17 >= $i1 goto label25;

        $r3 = interfaceinvoke $r30.<java.util.List: java.lang.Object get(int)>(i17);

        r31 = (org.apache.pdfbox.pdmodel.PDDocument) $r3;

        virtualinvoke r31.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

        i17 = i17 + 1;

        goto label24;

     label25:
        goto label31;

     label26:
        $r19 := @caughtexception;

     label27:
        if r28 == null goto label28;

        virtualinvoke r28.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label28:
        i18 = 0;

     label29:
        if r29 == null goto label30;

        $i12 = interfaceinvoke r29.<java.util.List: int size()>();

        if i18 >= $i12 goto label30;

        $r20 = interfaceinvoke r29.<java.util.List: java.lang.Object get(int)>(i18);

        r21 = (org.apache.pdfbox.pdmodel.PDDocument) $r20;

        virtualinvoke r21.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

        i18 = i18 + 1;

        goto label29;

     label30:
        throw $r19;

     label31:
        return;

        catch java.lang.Throwable from label14 to label22 with label26;
        catch java.lang.Throwable from label26 to label27 with label26;
    }

    private static final void writeDocument(org.apache.pdfbox.pdmodel.PDDocument, java.lang.String) throws java.io.IOException, org.apache.pdfbox.exceptions.COSVisitorException
    {
        org.apache.pdfbox.pdfwriter.COSWriter $r2, r6;
        java.lang.Throwable $r4;
        org.apache.pdfbox.pdmodel.PDDocument r3;
        java.io.FileOutputStream $r0, r5;
        java.lang.String r1;

        r3 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        r1 := @parameter1: java.lang.String;

        r5 = null;

        r6 = null;

     label1:
        $r0 = new java.io.FileOutputStream;

        specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.lang.String)>(r1);

        r5 = $r0;

        $r2 = new org.apache.pdfbox.pdfwriter.COSWriter;

        specialinvoke $r2.<org.apache.pdfbox.pdfwriter.COSWriter: void <init>(java.io.OutputStream)>($r0);

        r6 = $r2;

        virtualinvoke $r2.<org.apache.pdfbox.pdfwriter.COSWriter: void write(org.apache.pdfbox.pdmodel.PDDocument)>(r3);

     label2:
        if $r0 == null goto label3;

        virtualinvoke $r0.<java.io.FileOutputStream: void close()>();

     label3:
        if $r2 == null goto label8;

        virtualinvoke $r2.<org.apache.pdfbox.pdfwriter.COSWriter: void close()>();

        goto label8;

     label4:
        $r4 := @caughtexception;

     label5:
        if r5 == null goto label6;

        virtualinvoke r5.<java.io.FileOutputStream: void close()>();

     label6:
        if r6 == null goto label7;

        virtualinvoke r6.<org.apache.pdfbox.pdfwriter.COSWriter: void close()>();

     label7:
        throw $r4;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private static void usage()
    {
        java.io.PrintStream $r0;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Usage: java -jar pdfbox-app-x.y.z.jar PDFSplit [OPTIONS] <PDF file>\n  -password  <password>  Password to decrypt document\n  -split     <integer>   split after this many pages (default 1, if startPage and endPage are unset)\n  -startPage <integer>   start page\n  -endPage   <integer>   end page\n  -nonSeq                Enables the new non-sequential parser\n  <PDF file>             The PDF document to use\n");

        staticinvoke <java.lang.System: void exit(int)>(1);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.pdfbox.PDFSplit: java.lang.String NONSEQ> = "-nonSeq";

        <org.apache.pdfbox.PDFSplit: java.lang.String END_PAGE> = "-endPage";

        <org.apache.pdfbox.PDFSplit: java.lang.String START_PAGE> = "-startPage";

        <org.apache.pdfbox.PDFSplit: java.lang.String SPLIT> = "-split";

        <org.apache.pdfbox.PDFSplit: java.lang.String PASSWORD> = "-password";

        return;
    }
}
