final class org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator extends java.lang.Object implements org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip$Listener
{
    private final org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip blip;
    final org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0;

    void <init>(org.waveprotocol.wave.model.conversation.WaveletBasedConversation, org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip)
    {
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator r0;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip r2;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation r1;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator;

        r1 := @parameter0: org.waveprotocol.wave.model.conversation.WaveletBasedConversation;

        r2 := @parameter1: org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip;

        r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip blip> = r2;

        return;
    }

    public void onReplyAdded(org.waveprotocol.wave.model.conversation.WaveletBasedConversationThread)
    {
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator r0;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversationThread r1;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation $r2, $r3;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator;

        r1 := @parameter0: org.waveprotocol.wave.model.conversation.WaveletBasedConversationThread;

        $r2 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0>;

        staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: void access$600(org.waveprotocol.wave.model.conversation.WaveletBasedConversation,org.waveprotocol.wave.model.conversation.WaveletBasedConversationThread)>($r2, r1);

        $r3 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0>;

        staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: void access$700(org.waveprotocol.wave.model.conversation.WaveletBasedConversation,org.waveprotocol.wave.model.conversation.ObservableConversationThread)>($r3, r1);

        return;
    }

    public void onInlineReplyAdded(org.waveprotocol.wave.model.conversation.WaveletBasedConversationThread, int)
    {
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator r0;
        int i0;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversationThread r1;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation $r2, $r3;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator;

        r1 := @parameter0: org.waveprotocol.wave.model.conversation.WaveletBasedConversationThread;

        i0 := @parameter1: int;

        $r2 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0>;

        staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: void access$600(org.waveprotocol.wave.model.conversation.WaveletBasedConversation,org.waveprotocol.wave.model.conversation.WaveletBasedConversationThread)>($r2, r1);

        $r3 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0>;

        staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: void access$800(org.waveprotocol.wave.model.conversation.WaveletBasedConversation,org.waveprotocol.wave.model.conversation.ObservableConversationThread,int)>($r3, r1, i0);

        return;
    }

    public void onDeleted()
    {
        org.waveprotocol.wave.model.util.StringMap $r5;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator r0;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip $r1, $r2, $r6;
        java.lang.String $r7;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation $r3, $r4;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator;

        $r1 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip blip>;

        virtualinvoke $r1.<org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip: void removeListener(org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip$Listener)>(r0);

        $r3 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0>;

        $r2 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip blip>;

        staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: void access$900(org.waveprotocol.wave.model.conversation.WaveletBasedConversation,org.waveprotocol.wave.model.conversation.ObservableConversationBlip)>($r3, $r2);

        $r4 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0>;

        $r5 = staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: org.waveprotocol.wave.model.util.StringMap access$1000(org.waveprotocol.wave.model.conversation.WaveletBasedConversation)>($r4);

        $r6 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip blip>;

        $r7 = virtualinvoke $r6.<org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip: java.lang.String getId()>();

        interfaceinvoke $r5.<org.waveprotocol.wave.model.util.StringMap: void remove(java.lang.String)>($r7);

        return;
    }

    public void onContributorAdded(org.waveprotocol.wave.model.wave.ParticipantId)
    {
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator r0;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip $r2;
        org.waveprotocol.wave.model.wave.ParticipantId r1;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation $r3;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        $r3 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0>;

        $r2 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip blip>;

        staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: void access$1100(org.waveprotocol.wave.model.conversation.WaveletBasedConversation,org.waveprotocol.wave.model.conversation.ObservableConversationBlip,org.waveprotocol.wave.model.wave.ParticipantId)>($r3, $r2, r1);

        return;
    }

    public void onContributorRemoved(org.waveprotocol.wave.model.wave.ParticipantId)
    {
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator r0;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip $r2;
        org.waveprotocol.wave.model.wave.ParticipantId r1;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation $r3;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        $r3 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0>;

        $r2 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip blip>;

        staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: void access$1200(org.waveprotocol.wave.model.conversation.WaveletBasedConversation,org.waveprotocol.wave.model.conversation.ObservableConversationBlip,org.waveprotocol.wave.model.wave.ParticipantId)>($r3, $r2, r1);

        return;
    }

    public void onSumbitted()
    {
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator r0;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip $r1;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation $r2;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator;

        $r2 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0>;

        $r1 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip blip>;

        staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: void access$1300(org.waveprotocol.wave.model.conversation.WaveletBasedConversation,org.waveprotocol.wave.model.conversation.ObservableConversationBlip)>($r2, $r1);

        return;
    }

    public void onTimestampChanged(long, long)
    {
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator r0;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip $r1;
        long l0, l1;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation $r2;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r2 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0>;

        $r1 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$BlipListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip blip>;

        staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: void access$1400(org.waveprotocol.wave.model.conversation.WaveletBasedConversation,org.waveprotocol.wave.model.conversation.ObservableConversationBlip,long,long)>($r2, $r1, l0, l1);

        return;
    }
}
