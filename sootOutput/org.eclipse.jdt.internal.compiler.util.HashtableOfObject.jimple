public final class org.eclipse.jdt.internal.compiler.util.HashtableOfObject extends java.lang.Object implements java.lang.Cloneable
{
    public char[][] keyTable;
    public java.lang.Object[] valueTable;
    public int elementSize;
    int threshold;

    public void <init>()
    {
        org.eclipse.jdt.internal.compiler.util.HashtableOfObject r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfObject;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: void <init>(int)>(13);

        return;
    }

    public void <init>(int)
    {
        java.lang.Object[] $r2;
        char[][] $r1;
        org.eclipse.jdt.internal.compiler.util.HashtableOfObject r0;
        int i0, $i1, i2;
        float $f0, $f1;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfObject;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: int elementSize> = 0;

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: int threshold> = i0;

        $f0 = (float) i0;

        $f1 = $f0 * 1.75F;

        i2 = (int) $f1;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: int threshold>;

        if $i1 != i2 goto label1;

        i2 = i2 + 1;

     label1:
        $r1 = newarray (char[])[i2];

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: char[][] keyTable> = $r1;

        $r2 = newarray (java.lang.Object)[i2];

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object[] valueTable> = $r2;

        return;
    }

    public void clear()
    {
        java.lang.Object[] $r3;
        int i0, $i2;
        char[][] $r1, $r2;
        org.eclipse.jdt.internal.compiler.util.HashtableOfObject r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfObject;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: char[][] keyTable>;

        i0 = lengthof $r1;

        goto label2;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: char[][] keyTable>;

        $r2[i0] = null;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object[] valueTable>;

        $r3[i0] = null;

     label2:
        $i2 = (int) -1;

        i0 = i0 + $i2;

        if i0 >= 0 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: int elementSize> = 0;

        return;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        java.lang.Object[] $r7, $r8, $r9, $r10;
        char[][] $r3, $r4, $r5, $r6;
        org.eclipse.jdt.internal.compiler.util.HashtableOfObject r0, r2;
        int $i0, $i1, i2, i3;
        java.lang.Object $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfObject;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (org.eclipse.jdt.internal.compiler.util.HashtableOfObject) $r1;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: int elementSize>;

        r2.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: int elementSize> = $i0;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: int threshold>;

        r2.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: int threshold> = $i1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: char[][] keyTable>;

        i2 = lengthof $r3;

        $r4 = newarray (char[])[i2];

        r2.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: char[][] keyTable> = $r4;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: char[][] keyTable>;

        $r5 = r2.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: char[][] keyTable>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r5, 0, i2);

        $r7 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object[] valueTable>;

        i3 = lengthof $r7;

        $r8 = newarray (java.lang.Object)[i3];

        r2.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object[] valueTable> = $r8;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object[] valueTable>;

        $r9 = r2.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object[] valueTable>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, $r9, 0, i3);

        return r2;
    }

    public boolean containsKey(char[])
    {
        char[][] $r1, $r3;
        org.eclipse.jdt.internal.compiler.util.HashtableOfObject r0;
        int i0, $i1, i2, $i3, i4;
        char[] r2, $r4;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfObject;

        r2 := @parameter0: char[];

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: char[][] keyTable>;

        i0 = lengthof $r1;

        $i1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int hashCode(char[])>(r2);

        i4 = $i1 % i0;

        i2 = lengthof r2;

        goto label3;

     label1:
        $i3 = lengthof $r4;

        if $i3 != i2 goto label2;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r4, r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i4 = i4 + 1;

        if i4 != i0 goto label3;

        i4 = 0;

     label3:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: char[][] keyTable>;

        $r4 = $r3[i4];

        if $r4 != null goto label1;

        return 0;
    }

    public java.lang.Object get(char[])
    {
        java.lang.Object[] $r3;
        char[][] $r1, $r5;
        org.eclipse.jdt.internal.compiler.util.HashtableOfObject r0;
        int i0, $i1, i2, $i3, i4;
        char[] r2, $r6;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfObject;

        r2 := @parameter0: char[];

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: char[][] keyTable>;

        i0 = lengthof $r1;

        $i1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int hashCode(char[])>(r2);

        i4 = $i1 % i0;

        i2 = lengthof r2;

        goto label3;

     label1:
        $i3 = lengthof $r6;

        if $i3 != i2 goto label2;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r6, r2);

        if $z0 == 0 goto label2;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object[] valueTable>;

        $r4 = $r3[i4];

        return $r4;

     label2:
        i4 = i4 + 1;

        if i4 != i0 goto label3;

        i4 = 0;

     label3:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: char[][] keyTable>;

        $r6 = $r5[i4];

        if $r6 != null goto label1;

        return null;
    }

    public java.lang.Object put(char[], java.lang.Object)
    {
        java.lang.Object[] $r4, $r6;
        char[][] $r1, $r5, $r7;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, i7;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.util.HashtableOfObject r0;
        char[] r2, $r8;
        java.lang.Object r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfObject;

        r2 := @parameter0: char[];

        r3 := @parameter1: java.lang.Object;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: char[][] keyTable>;

        i0 = lengthof $r1;

        $i1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int hashCode(char[])>(r2);

        i7 = $i1 % i0;

        i2 = lengthof r2;

        goto label3;

     label1:
        $i3 = lengthof $r8;

        if $i3 != i2 goto label2;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r8, r2);

        if $z0 == 0 goto label2;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object[] valueTable>;

        $r4[i7] = r3;

        return r3;

     label2:
        i7 = i7 + 1;

        if i7 != i0 goto label3;

        i7 = 0;

     label3:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: char[][] keyTable>;

        $r8 = $r7[i7];

        if $r8 != null goto label1;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: char[][] keyTable>;

        $r5[i7] = r2;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object[] valueTable>;

        $r6[i7] = r3;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: int elementSize>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: int elementSize> = $i5;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: int threshold>;

        if $i5 <= $i6 goto label4;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: void rehash()>();

     label4:
        return r3;
    }

    public java.lang.Object removeKey(char[])
    {
        java.lang.Object[] $r3, $r6;
        char[][] $r1, $r5, $r7;
        int i0, $i1, i2, $i3, $i4, $i5, i6;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.util.HashtableOfObject r0;
        char[] r2, $r8;
        java.lang.Object r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfObject;

        r2 := @parameter0: char[];

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: char[][] keyTable>;

        i0 = lengthof $r1;

        $i1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int hashCode(char[])>(r2);

        i6 = $i1 % i0;

        i2 = lengthof r2;

        goto label3;

     label1:
        $i3 = lengthof $r8;

        if $i3 != i2 goto label2;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r8, r2);

        if $z0 == 0 goto label2;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object[] valueTable>;

        r4 = $r3[i6];

        $i4 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: int elementSize>;

        $i5 = $i4 - 1;

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: int elementSize> = $i5;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: char[][] keyTable>;

        $r5[i6] = null;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object[] valueTable>;

        $r6[i6] = null;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: void rehash()>();

        return r4;

     label2:
        i6 = i6 + 1;

        if i6 != i0 goto label3;

        i6 = 0;

     label3:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: char[][] keyTable>;

        $r8 = $r7[i6];

        if $r8 != null goto label1;

        return null;
    }

    private void rehash()
    {
        java.lang.Object[] $r5, $r8;
        char[][] $r2, $r3, $r7;
        org.eclipse.jdt.internal.compiler.util.HashtableOfObject r1, $r9;
        int $i0, $i1, $i2, i3, $i5;
        char[] $r4;
        java.lang.Object $r6;

        r1 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfObject;

        $r9 = new org.eclipse.jdt.internal.compiler.util.HashtableOfObject;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: int elementSize>;

        $i1 = $i0 * 2;

        specialinvoke $r9.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: void <init>(int)>($i1);

        $r2 = r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: char[][] keyTable>;

        i3 = lengthof $r2;

        goto label2;

     label1:
        $r3 = r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: char[][] keyTable>;

        $r4 = $r3[i3];

        if $r4 == null goto label2;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object[] valueTable>;

        $r6 = $r5[i3];

        virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object put(char[],java.lang.Object)>($r4, $r6);

     label2:
        $i5 = (int) -1;

        i3 = i3 + $i5;

        if i3 >= 0 goto label1;

        $r7 = $r9.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: char[][] keyTable>;

        r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: char[][] keyTable> = $r7;

        $r8 = $r9.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object[] valueTable>;

        r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object[] valueTable> = $r8;

        $i2 = $r9.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: int threshold>;

        r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: int threshold> = $i2;

        return;
    }

    public int size()
    {
        int $i0;
        org.eclipse.jdt.internal.compiler.util.HashtableOfObject r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfObject;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: int elementSize>;

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r1, $r2;
        char[][] $r7;
        java.lang.StringBuffer $r4, $r9, $r10, $r12, $r13;
        int i0, i1;
        java.lang.String $r5, $r6, $r11, r14;
        org.eclipse.jdt.internal.compiler.util.HashtableOfObject r0;
        char[] $r8;
        java.lang.Object $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfObject;

        r14 = "";

        i1 = 0;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object[] valueTable>;

        i0 = lengthof $r1;

        goto label3;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object[] valueTable>;

        $r3 = $r2[i1];

        if $r3 == null goto label2;

        $r4 = new java.lang.StringBuffer;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r14);

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>($r5);

        $r6 = new java.lang.String;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: char[][] keyTable>;

        $r8 = $r7[i1];

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r8);

        $r9 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" -> ");

        $r11 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < i0 goto label1;

        return r14;
    }
}
