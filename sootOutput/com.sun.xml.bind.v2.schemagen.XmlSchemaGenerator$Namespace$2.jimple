class com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2 extends com.sun.xml.bind.v2.schemagen.Tree$Term
{
    final com.sun.xml.bind.v2.model.core.TypeRef val$t;
    final com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1;

    void <init>(com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace, com.sun.xml.bind.v2.model.core.TypeRef)
    {
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2 r0;
        com.sun.xml.bind.v2.model.core.TypeRef r2;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace r1;

        r0 := @this: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2;

        r1 := @parameter0: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace;

        r2 := @parameter1: com.sun.xml.bind.v2.model.core.TypeRef;

        r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1> = r1;

        r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2: com.sun.xml.bind.v2.model.core.TypeRef val$t> = r2;

        specialinvoke r0.<com.sun.xml.bind.v2.schemagen.Tree$Term: void <init>()>();

        return;
    }

    protected void write(com.sun.xml.bind.v2.schemagen.xmlschema.ContentModelContainer, boolean, boolean)
    {
        com.sun.xml.bind.v2.model.core.Element r50;
        com.sun.xml.bind.v2.schemagen.Form $r13;
        boolean $z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        com.sun.xml.bind.v2.util.CollisionCheckStack $r38;
        com.sun.xml.bind.v2.model.core.TypeInfo $r23, $r46;
        java.util.Collection $r20;
        com.sun.xml.bind.v2.model.core.NonElement $r19, $r33, $r35, $r40, $r49;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2 r2;
        javax.xml.namespace.QName $r4, $r24, $r26, $r27, $r28, $r42, r47;
        com.sun.xml.bind.v2.model.core.ClassInfo $r41;
        com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement $r1;
        com.sun.xml.bind.v2.model.core.TypeRef $r3, $r5, $r7, $r10, $r14, $r16, $r18, $r32, $r34, $r39, $r48, $r51;
        java.lang.String $r9, $r15, $r17, $r25, $r29, $r30, $r44, $r45;
        java.util.Iterator $r21;
        com.sun.xml.bind.v2.model.impl.ClassInfoImpl $r31;
        com.sun.xml.bind.v2.model.core.PropertyInfo $r6;
        com.sun.xml.bind.v2.schemagen.xmlschema.ContentModelContainer r0;
        java.lang.Object $r22;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator $r37;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace $r8, $r11, $r12, $r36, $r43;

        r2 := @this: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2;

        r0 := @parameter0: com.sun.xml.bind.v2.schemagen.xmlschema.ContentModelContainer;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        $r1 = interfaceinvoke r0.<com.sun.xml.bind.v2.schemagen.xmlschema.ContentModelContainer: com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement element()>();

        $r3 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2: com.sun.xml.bind.v2.model.core.TypeRef val$t>;

        $r4 = interfaceinvoke $r3.<com.sun.xml.bind.v2.model.core.TypeRef: javax.xml.namespace.QName getTagName()>();

        $r5 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2: com.sun.xml.bind.v2.model.core.TypeRef val$t>;

        $r6 = interfaceinvoke $r5.<com.sun.xml.bind.v2.model.core.TypeRef: com.sun.xml.bind.v2.model.core.PropertyInfo getSource()>();

        if $r6 != null goto label01;

        $r46 = null;

        goto label02;

     label01:
        $r46 = interfaceinvoke $r6.<com.sun.xml.bind.v2.model.core.PropertyInfo: com.sun.xml.bind.v2.model.core.TypeInfo parent()>();

     label02:
        $r8 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1>;

        $r7 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2: com.sun.xml.bind.v2.model.core.TypeRef val$t>;

        $z0 = staticinvoke <com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace: boolean access$2000(com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace,com.sun.xml.bind.v2.model.core.TypeRef,javax.xml.namespace.QName,com.sun.xml.bind.v2.model.core.TypeInfo)>($r8, $r7, $r4, $r46);

        if $z0 == 0 goto label10;

        $r18 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2: com.sun.xml.bind.v2.model.core.TypeRef val$t>;

        $r19 = interfaceinvoke $r18.<com.sun.xml.bind.v2.model.core.TypeRef: com.sun.xml.bind.v2.model.core.NonElement getTarget()>();

        $z3 = interfaceinvoke $r19.<com.sun.xml.bind.v2.model.core.NonElement: boolean isSimpleType()>();

        if $z3 != 0 goto label03;

        $r34 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2: com.sun.xml.bind.v2.model.core.TypeRef val$t>;

        $r35 = interfaceinvoke $r34.<com.sun.xml.bind.v2.model.core.TypeRef: com.sun.xml.bind.v2.model.core.NonElement getTarget()>();

        $z6 = $r35 instanceof com.sun.xml.bind.v2.model.core.ClassInfo;

        if $z6 == 0 goto label03;

        $r36 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1>;

        $r37 = $r36.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator this$0>;

        $r38 = staticinvoke <com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator: com.sun.xml.bind.v2.util.CollisionCheckStack access$1600(com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator)>($r37);

        $r39 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2: com.sun.xml.bind.v2.model.core.TypeRef val$t>;

        $r40 = interfaceinvoke $r39.<com.sun.xml.bind.v2.model.core.TypeRef: com.sun.xml.bind.v2.model.core.NonElement getTarget()>();

        $r41 = (com.sun.xml.bind.v2.model.core.ClassInfo) $r40;

        $z7 = virtualinvoke $r38.<com.sun.xml.bind.v2.util.CollisionCheckStack: boolean findDuplicate(java.lang.Object)>($r41);

        if $z7 == 0 goto label03;

        $r42 = new javax.xml.namespace.QName;

        $r43 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1>;

        $r44 = $r43.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace: java.lang.String uri>;

        $r45 = virtualinvoke $r4.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke $r42.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r44, $r45);

        interfaceinvoke $r1.<com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement: com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement ref(javax.xml.namespace.QName)>($r42);

        goto label11;

     label03:
        r47 = null;

        $r48 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2: com.sun.xml.bind.v2.model.core.TypeRef val$t>;

        $r49 = interfaceinvoke $r48.<com.sun.xml.bind.v2.model.core.TypeRef: com.sun.xml.bind.v2.model.core.NonElement getTarget()>();

        $z8 = $r49 instanceof com.sun.xml.bind.v2.model.core.Element;

        if $z8 == 0 goto label04;

        $r32 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2: com.sun.xml.bind.v2.model.core.TypeRef val$t>;

        $r33 = interfaceinvoke $r32.<com.sun.xml.bind.v2.model.core.TypeRef: com.sun.xml.bind.v2.model.core.NonElement getTarget()>();

        r50 = (com.sun.xml.bind.v2.model.core.Element) $r33;

        r47 = interfaceinvoke r50.<com.sun.xml.bind.v2.model.core.Element: javax.xml.namespace.QName getElementName()>();

     label04:
        $r20 = interfaceinvoke $r6.<com.sun.xml.bind.v2.model.core.PropertyInfo: java.util.Collection ref()>();

        if $r20 == null goto label08;

        $z4 = interfaceinvoke $r20.<java.util.Collection: boolean isEmpty()>();

        if $z4 != 0 goto label08;

        if r47 == null goto label08;

        $r21 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>();

        $r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        $r23 = (com.sun.xml.bind.v2.model.core.TypeInfo) $r22;

        if $r23 == null goto label05;

        $z5 = $r23 instanceof com.sun.xml.bind.v2.model.impl.ClassInfoImpl;

        if $z5 == 0 goto label08;

     label05:
        $r31 = (com.sun.xml.bind.v2.model.impl.ClassInfoImpl) $r23;

        if $r31 == null goto label06;

        $r26 = virtualinvoke $r31.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl: javax.xml.namespace.QName getElementName()>();

        if $r26 == null goto label06;

        $r27 = new javax.xml.namespace.QName;

        $r28 = virtualinvoke $r31.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl: javax.xml.namespace.QName getElementName()>();

        $r29 = virtualinvoke $r28.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r30 = virtualinvoke $r4.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke $r27.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r29, $r30);

        interfaceinvoke $r1.<com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement: com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement ref(javax.xml.namespace.QName)>($r27);

        goto label07;

     label06:
        $r24 = new javax.xml.namespace.QName;

        $r25 = virtualinvoke $r4.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke $r24.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", $r25);

        interfaceinvoke $r1.<com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement: com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement ref(javax.xml.namespace.QName)>($r24);

     label07:
        goto label09;

     label08:
        interfaceinvoke $r1.<com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement: com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement ref(javax.xml.namespace.QName)>($r4);

     label09:
        goto label11;

     label10:
        $r9 = virtualinvoke $r4.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        interfaceinvoke $r1.<com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement: com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement name(java.lang.String)>($r9);

        $r11 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1>;

        $r10 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2: com.sun.xml.bind.v2.model.core.TypeRef val$t>;

        staticinvoke <com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace: void access$1800(com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace,com.sun.xml.bind.v2.schemagen.xmlschema.TypeHost,com.sun.xml.bind.v2.model.core.NonElementRef,java.lang.String)>($r11, $r1, $r10, "type");

        $r12 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1>;

        $r13 = staticinvoke <com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace: com.sun.xml.bind.v2.schemagen.Form access$1900(com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace)>($r12);

        virtualinvoke $r13.<com.sun.xml.bind.v2.schemagen.Form: void writeForm(com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement,javax.xml.namespace.QName)>($r1, $r4);

     label11:
        $r51 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2: com.sun.xml.bind.v2.model.core.TypeRef val$t>;

        $z9 = interfaceinvoke $r51.<com.sun.xml.bind.v2.model.core.TypeRef: boolean isNillable()>();

        if $z9 == 0 goto label12;

        interfaceinvoke $r1.<com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement: com.sun.xml.bind.v2.schemagen.xmlschema.Element nillable(boolean)>(1);

     label12:
        $r14 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2: com.sun.xml.bind.v2.model.core.TypeRef val$t>;

        $r15 = interfaceinvoke $r14.<com.sun.xml.bind.v2.model.core.TypeRef: java.lang.String getDefaultValue()>();

        if $r15 == null goto label13;

        $r16 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2: com.sun.xml.bind.v2.model.core.TypeRef val$t>;

        $r17 = interfaceinvoke $r16.<com.sun.xml.bind.v2.model.core.TypeRef: java.lang.String getDefaultValue()>();

        interfaceinvoke $r1.<com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement: com.sun.xml.bind.v2.schemagen.xmlschema.FixedOrDefault _default(java.lang.String)>($r17);

     label13:
        virtualinvoke r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$2: void writeOccurs(com.sun.xml.bind.v2.schemagen.xmlschema.Occurs,boolean,boolean)>($r1, z1, z2);

        return;
    }
}
