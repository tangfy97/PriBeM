public class org.eclipse.jetty.server.ssl.SslCertificates extends java.lang.Object
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    static final java.lang.String CACHED_INFO_ATTR;

    public void <init>()
    {
        org.eclipse.jetty.server.ssl.SslCertificates r0;

        r0 := @this: org.eclipse.jetty.server.ssl.SslCertificates;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.security.cert.X509Certificate[] getCertChain(javax.net.ssl.SSLSession)
    {
        java.security.cert.X509Certificate $r8;
        javax.security.cert.X509Certificate[] $r1;
        byte[] $r5;
        java.security.cert.CertificateFactory $r3;
        javax.security.cert.X509Certificate $r4;
        java.lang.Exception $r9;
        javax.net.ssl.SSLSession r0;
        java.security.cert.Certificate $r7;
        java.io.ByteArrayInputStream $r6;
        int $i0, i1, i2;
        org.eclipse.jetty.util.log.Logger $r10;
        java.security.cert.X509Certificate[] r2;
        javax.net.ssl.SSLPeerUnverifiedException $r11;

        r0 := @parameter0: javax.net.ssl.SSLSession;

     label1:
        $r1 = interfaceinvoke r0.<javax.net.ssl.SSLSession: javax.security.cert.X509Certificate[] getPeerCertificateChain()>();

        if $r1 == null goto label2;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label3;

     label2:
        return null;

     label3:
        i1 = lengthof $r1;

        r2 = newarray (java.security.cert.X509Certificate)[i1];

        $r3 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        i2 = 0;

     label4:
        if i2 >= i1 goto label5;

        $r4 = $r1[i2];

        $r5 = virtualinvoke $r4.<javax.security.cert.X509Certificate: byte[] getEncoded()>();

        $r6 = new java.io.ByteArrayInputStream;

        specialinvoke $r6.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5);

        $r7 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r6);

        $r8 = (java.security.cert.X509Certificate) $r7;

        r2[i2] = $r8;

        i2 = i2 + 1;

        goto label4;

     label5:
        return r2;

     label6:
        $r11 := @caughtexception;

        return null;

     label7:
        $r9 := @caughtexception;

        $r10 = <org.eclipse.jetty.server.ssl.SslCertificates: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r10.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("EXCEPTION ", $r9);

        return null;

        catch javax.net.ssl.SSLPeerUnverifiedException from label1 to label2 with label6;
        catch javax.net.ssl.SSLPeerUnverifiedException from label3 to label5 with label6;
        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label5 with label7;
    }

    public static void customize(javax.net.ssl.SSLSession, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request) throws java.io.IOException
    {
        org.eclipse.jetty.server.Request r0;
        byte[] $r7;
        org.eclipse.jetty.io.EndPoint r13;
        java.lang.Integer $r5, r15;
        org.eclipse.jetty.server.ssl.SslCertificates$CachedInfo $r9, r14;
        javax.net.ssl.SSLSession r1;
        int $i0;
        java.lang.String $r2, $r3, $r8, $r10, r17;
        java.lang.Exception $r11;
        java.lang.Object $r4;
        org.eclipse.jetty.util.log.Logger $r12;
        java.security.cert.X509Certificate[] $r6, r16;

        r1 := @parameter0: javax.net.ssl.SSLSession;

        r13 := @parameter1: org.eclipse.jetty.io.EndPoint;

        r0 := @parameter2: org.eclipse.jetty.server.Request;

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setScheme(java.lang.String)>("https");

     label1:
        $r2 = interfaceinvoke r1.<javax.net.ssl.SSLSession: java.lang.String getCipherSuite()>();

        $r3 = <org.eclipse.jetty.server.ssl.SslCertificates: java.lang.String CACHED_INFO_ATTR>;

        $r4 = interfaceinvoke r1.<javax.net.ssl.SSLSession: java.lang.Object getValue(java.lang.String)>($r3);

        r14 = (org.eclipse.jetty.server.ssl.SslCertificates$CachedInfo) $r4;

        if r14 == null goto label2;

        r15 = virtualinvoke r14.<org.eclipse.jetty.server.ssl.SslCertificates$CachedInfo: java.lang.Integer getKeySize()>();

        r16 = virtualinvoke r14.<org.eclipse.jetty.server.ssl.SslCertificates$CachedInfo: java.security.cert.X509Certificate[] getCerts()>();

        r17 = virtualinvoke r14.<org.eclipse.jetty.server.ssl.SslCertificates$CachedInfo: java.lang.String getIdStr()>();

        goto label3;

     label2:
        $r5 = new java.lang.Integer;

        $i0 = staticinvoke <org.eclipse.jetty.server.ssl.ServletSSL: int deduceKeyLength(java.lang.String)>($r2);

        specialinvoke $r5.<java.lang.Integer: void <init>(int)>($i0);

        r15 = $r5;

        $r6 = staticinvoke <org.eclipse.jetty.server.ssl.SslCertificates: java.security.cert.X509Certificate[] getCertChain(javax.net.ssl.SSLSession)>(r1);

        r16 = $r6;

        $r7 = interfaceinvoke r1.<javax.net.ssl.SSLSession: byte[] getId()>();

        $r8 = staticinvoke <org.eclipse.jetty.util.TypeUtil: java.lang.String toHexString(byte[])>($r7);

        r17 = $r8;

        $r9 = new org.eclipse.jetty.server.ssl.SslCertificates$CachedInfo;

        specialinvoke $r9.<org.eclipse.jetty.server.ssl.SslCertificates$CachedInfo: void <init>(java.lang.Integer,java.security.cert.X509Certificate[],java.lang.String)>($r5, $r6, $r8);

        $r10 = <org.eclipse.jetty.server.ssl.SslCertificates: java.lang.String CACHED_INFO_ATTR>;

        interfaceinvoke r1.<javax.net.ssl.SSLSession: void putValue(java.lang.String,java.lang.Object)>($r10, $r9);

     label3:
        if r16 == null goto label4;

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setAttribute(java.lang.String,java.lang.Object)>("javax.servlet.request.X509Certificate", r16);

     label4:
        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setAttribute(java.lang.String,java.lang.Object)>("javax.servlet.request.cipher_suite", $r2);

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setAttribute(java.lang.String,java.lang.Object)>("javax.servlet.request.key_size", r15);

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setAttribute(java.lang.String,java.lang.Object)>("javax.servlet.request.ssl_session_id", r17);

     label5:
        goto label7;

     label6:
        $r11 := @caughtexception;

        $r12 = <org.eclipse.jetty.server.ssl.SslCertificates: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r12.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("EXCEPTION ", $r11);

     label7:
        return;

        catch java.lang.Exception from label1 to label5 with label6;
    }

    static void <clinit>()
    {
        java.lang.Class $r1;
        org.eclipse.jetty.util.log.Logger $r0;
        java.lang.String $r2;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/server/ssl/SslCertificates;");

        <org.eclipse.jetty.server.ssl.SslCertificates: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        $r1 = class "Lorg/eclipse/jetty/server/ssl/SslCertificates$CachedInfo;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        <org.eclipse.jetty.server.ssl.SslCertificates: java.lang.String CACHED_INFO_ATTR> = $r2;

        return;
    }
}
