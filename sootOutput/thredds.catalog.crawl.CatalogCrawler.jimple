public class thredds.catalog.crawl.CatalogCrawler extends java.lang.Object
{
    public static final int USE_ALL;
    public static final int USE_ALL_DIRECT;
    public static final int USE_FIRST_DIRECT;
    public static final int USE_RANDOM_DIRECT;
    public static final int USE_RANDOM_DIRECT_NOT_FIRST_OR_LAST;
    private boolean skipDatasetScan;
    private int type;
    private thredds.catalog.crawl.CatalogCrawler$Listener listen;
    private java.util.Random random;
    private int countCatrefs;

    public void <init>(int, boolean, thredds.catalog.crawl.CatalogCrawler$Listener)
    {
        thredds.catalog.crawl.CatalogCrawler r0;
        int i0;
        thredds.catalog.crawl.CatalogCrawler$Listener r1;
        java.util.Random $r2;
        long $l1;
        boolean z0;

        r0 := @this: thredds.catalog.crawl.CatalogCrawler;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: thredds.catalog.crawl.CatalogCrawler$Listener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.catalog.crawl.CatalogCrawler: boolean skipDatasetScan> = 0;

        r0.<thredds.catalog.crawl.CatalogCrawler: int type> = 0;

        r0.<thredds.catalog.crawl.CatalogCrawler: int type> = i0;

        r0.<thredds.catalog.crawl.CatalogCrawler: boolean skipDatasetScan> = z0;

        r0.<thredds.catalog.crawl.CatalogCrawler: thredds.catalog.crawl.CatalogCrawler$Listener listen> = r1;

        if i0 == 3 goto label1;

        if i0 != 4 goto label2;

     label1:
        $r2 = new java.util.Random;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r2.<java.util.Random: void <init>(long)>($l1);

        r0.<thredds.catalog.crawl.CatalogCrawler: java.util.Random random> = $r2;

     label2:
        return;
    }

    public int crawl(java.lang.String, ucar.nc2.util.CancelTask, java.io.PrintStream, java.lang.Object)
    {
        ucar.nc2.util.CancelTask r6;
        int $i0;
        java.lang.String r1, $r10, $r15, $r19, $r20;
        thredds.catalog.InvCatalogFactory $r0;
        boolean $z0;
        java.io.PrintStream r4;
        thredds.catalog.crawl.CatalogCrawler r5;
        thredds.catalog.InvCatalogImpl $r2;
        java.lang.StringBuilder $r3, $r8, $r9, $r11, $r12, $r13, $r14, $r16, $r17, $r18;
        java.lang.Object r7;

        r5 := @this: thredds.catalog.crawl.CatalogCrawler;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: ucar.nc2.util.CancelTask;

        r4 := @parameter2: java.io.PrintStream;

        r7 := @parameter3: java.lang.Object;

        $r0 = staticinvoke <thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogFactory getDefaultFactory(boolean)>(1);

        $r2 = virtualinvoke $r0.<thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogImpl readXML(java.lang.String)>(r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $z0 = virtualinvoke $r2.<thredds.catalog.InvCatalogImpl: boolean check(java.lang.StringBuilder,boolean)>($r3, 0);

        if r4 == null goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("catalog <");

        $r10 = virtualinvoke $r2.<thredds.catalog.InvCatalogImpl: java.lang.String getName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        if $z0 == 0 goto label1;

        $r20 = "is";

        goto label2;

     label1:
        $r20 = "is not";

     label2:
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" valid");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintStream: void println(java.lang.String)>($r15);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" validation output=\n");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintStream: void println(java.lang.String)>($r19);

     label3:
        if $z0 == 0 goto label4;

        $i0 = virtualinvoke r5.<thredds.catalog.crawl.CatalogCrawler: int crawl(thredds.catalog.InvCatalogImpl,ucar.nc2.util.CancelTask,java.io.PrintStream,java.lang.Object)>($r2, r6, r4, r7);

        return $i0;

     label4:
        return 0;
    }

    public int crawl(thredds.catalog.InvCatalogImpl, ucar.nc2.util.CancelTask, java.io.PrintStream, java.lang.Object)
    {
        ucar.nc2.util.CancelTask r7;
        int $i0, $i1, $i2;
        java.lang.String $r11, $r13;
        thredds.catalog.InvDataset r6;
        boolean $z0, $z1;
        java.io.PrintStream r0;
        java.util.Iterator $r4;
        thredds.catalog.crawl.CatalogCrawler r1;
        java.util.List $r3;
        thredds.catalog.InvCatalogImpl r2;
        java.lang.Object $r5, r8;
        java.lang.StringBuilder $r9, $r10, $r12;

        r1 := @this: thredds.catalog.crawl.CatalogCrawler;

        r2 := @parameter0: thredds.catalog.InvCatalogImpl;

        r7 := @parameter1: ucar.nc2.util.CancelTask;

        r0 := @parameter2: java.io.PrintStream;

        r8 := @parameter3: java.lang.Object;

        if r0 == null goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("***CATALOG ");

        $r11 = virtualinvoke r2.<thredds.catalog.InvCatalogImpl: java.lang.String getCreateFrom()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>($r13);

     label1:
        r1.<thredds.catalog.crawl.CatalogCrawler: int countCatrefs> = 0;

        $r3 = virtualinvoke r2.<thredds.catalog.InvCatalogImpl: java.util.List getDatasets()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (thredds.catalog.InvDataset) $r5;

        $i2 = r1.<thredds.catalog.crawl.CatalogCrawler: int type>;

        if $i2 != 0 goto label3;

        virtualinvoke r1.<thredds.catalog.crawl.CatalogCrawler: void crawlDataset(thredds.catalog.InvDataset,ucar.nc2.util.CancelTask,java.io.PrintStream,java.lang.Object,boolean)>(r6, r7, r0, r8, 1);

        goto label4;

     label3:
        virtualinvoke r1.<thredds.catalog.crawl.CatalogCrawler: void crawlDirectDatasets(thredds.catalog.InvDataset,ucar.nc2.util.CancelTask,java.io.PrintStream,java.lang.Object,boolean)>(r6, r7, r0, r8, 1);

     label4:
        if r7 == null goto label5;

        $z0 = interfaceinvoke r7.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z0 == 0 goto label5;

        goto label6;

     label5:
        goto label2;

     label6:
        $i0 = r1.<thredds.catalog.crawl.CatalogCrawler: int countCatrefs>;

        $i1 = 1 + $i0;

        return $i1;
    }

    public void crawlDataset(thredds.catalog.InvDataset, ucar.nc2.util.CancelTask, java.io.PrintStream, java.lang.Object, boolean)
    {
        thredds.catalog.InvCatalogRef r21, r23, r25;
        ucar.nc2.util.CancelTask r7;
        java.net.URI $r14;
        thredds.catalog.InvDataset r0, r6;
        boolean z0, z1, $z2, z3, z4, $z5, $z6, $z7, $z9, $z10, $z11, $z12;
        java.util.List $r4;
        java.lang.StringBuilder $r12, $r13, $r15, $r16, $r18, $r19;
        int $i0, $i1;
        thredds.catalog.crawl.CatalogCrawler$Listener $r9, $r11, $r22;
        java.lang.String $r1, $r17, $r20;
        java.io.PrintStream r8;
        java.util.Iterator $r24;
        thredds.catalog.crawl.CatalogCrawler r2;
        java.lang.Object r3, $r5;
        thredds.catalog.InvDatasetImpl $r10;

        r2 := @this: thredds.catalog.crawl.CatalogCrawler;

        r0 := @parameter0: thredds.catalog.InvDataset;

        r7 := @parameter1: ucar.nc2.util.CancelTask;

        r8 := @parameter2: java.io.PrintStream;

        r3 := @parameter3: java.lang.Object;

        z4 := @parameter4: boolean;

        z0 = r0 instanceof thredds.catalog.InvCatalogRef;

        $r1 = virtualinvoke r0.<thredds.catalog.InvDataset: java.lang.String findProperty(java.lang.String)>("DatasetScan");

        if $r1 == null goto label01;

        $z12 = 1;

        $z11 = 1;

        goto label02;

     label01:
        $z12 = 0;

        $z11 = 0;

     label02:
        z1 = $z12;

        $z2 = r2.<thredds.catalog.crawl.CatalogCrawler: boolean skipDatasetScan>;

        if $z2 == 0 goto label03;

        $z7 = r0 instanceof thredds.catalog.InvCatalogRef;

        if $z7 == 0 goto label03;

        if $z11 == 0 goto label03;

        $z9 = 1;

        goto label04;

     label03:
        $z9 = 0;

     label04:
        z3 = $z9;

        if z0 == 0 goto label07;

        r21 = (thredds.catalog.InvCatalogRef) r0;

        if r8 == null goto label05;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" **CATREF ");

        $r14 = virtualinvoke r21.<thredds.catalog.InvCatalogRef: java.net.URI getURI()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r17 = virtualinvoke r0.<thredds.catalog.InvDataset: java.lang.String getName()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r8.<java.io.PrintStream: void println(java.lang.String)>($r20);

     label05:
        $i0 = r2.<thredds.catalog.crawl.CatalogCrawler: int countCatrefs>;

        $i1 = $i0 + 1;

        r2.<thredds.catalog.crawl.CatalogCrawler: int countCatrefs> = $i1;

        $r11 = r2.<thredds.catalog.crawl.CatalogCrawler: thredds.catalog.crawl.CatalogCrawler$Listener listen>;

        $z6 = interfaceinvoke $r11.<thredds.catalog.crawl.CatalogCrawler$Listener: boolean getCatalogRef(thredds.catalog.InvCatalogRef,java.lang.Object)>(r21, r3);

        if $z6 != 0 goto label07;

        if z4 == 0 goto label06;

        virtualinvoke r21.<thredds.catalog.InvCatalogRef: void release()>();

     label06:
        return;

     label07:
        if z0 == 0 goto label08;

        if z3 != 0 goto label08;

        if z1 == 0 goto label09;

     label08:
        $r22 = r2.<thredds.catalog.crawl.CatalogCrawler: thredds.catalog.crawl.CatalogCrawler$Listener listen>;

        interfaceinvoke $r22.<thredds.catalog.crawl.CatalogCrawler$Listener: void getDataset(thredds.catalog.InvDataset,java.lang.Object)>(r0, r3);

     label09:
        if z3 != 0 goto label13;

        $r4 = virtualinvoke r0.<thredds.catalog.InvDataset: java.util.List getDatasets()>();

        if z0 == 0 goto label10;

        r23 = (thredds.catalog.InvCatalogRef) r0;

        if z1 != 0 goto label10;

        $r9 = r2.<thredds.catalog.crawl.CatalogCrawler: thredds.catalog.crawl.CatalogCrawler$Listener listen>;

        $r10 = virtualinvoke r23.<thredds.catalog.InvCatalogRef: thredds.catalog.InvDatasetImpl getProxyDataset()>();

        interfaceinvoke $r9.<thredds.catalog.crawl.CatalogCrawler$Listener: void getDataset(thredds.catalog.InvDataset,java.lang.Object)>($r10, r3);

     label10:
        $r24 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z10 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label13;

        $r5 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        r6 = (thredds.catalog.InvDataset) $r5;

        virtualinvoke r2.<thredds.catalog.crawl.CatalogCrawler: void crawlDataset(thredds.catalog.InvDataset,ucar.nc2.util.CancelTask,java.io.PrintStream,java.lang.Object,boolean)>(r6, r7, r8, r3, z4);

        if r7 == null goto label12;

        $z5 = interfaceinvoke r7.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z5 == 0 goto label12;

        goto label13;

     label12:
        goto label11;

     label13:
        if z0 == 0 goto label14;

        if z4 == 0 goto label14;

        r25 = (thredds.catalog.InvCatalogRef) r0;

        virtualinvoke r25.<thredds.catalog.InvCatalogRef: void release()>();

     label14:
        return;
    }

    public void crawlDirectDatasets(thredds.catalog.InvDataset, ucar.nc2.util.CancelTask, java.io.PrintStream, java.lang.Object, boolean)
    {
        thredds.catalog.InvCatalogRef r31, r36;
        ucar.nc2.util.CancelTask r7;
        java.net.URI $r23;
        thredds.catalog.InvDataset r0, $r14, $r16, r32, r33, r34, r35;
        boolean z0, $z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        java.util.List $r2;
        java.lang.StringBuilder $r21, $r22, $r24, $r25, $r27, $r28;
        java.util.ArrayList $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        thredds.catalog.crawl.CatalogCrawler$Listener $r12, $r13, $r15, $r18, $r20;
        java.lang.String $r26, $r29, $r30;
        java.io.PrintStream r8;
        java.util.Iterator $r4, $r5, $r10;
        thredds.catalog.crawl.CatalogCrawler r1;
        java.lang.Object $r6, r9, $r11, $r17, $r19;

        r1 := @this: thredds.catalog.crawl.CatalogCrawler;

        r0 := @parameter0: thredds.catalog.InvDataset;

        r7 := @parameter1: ucar.nc2.util.CancelTask;

        r8 := @parameter2: java.io.PrintStream;

        r9 := @parameter3: java.lang.Object;

        z3 := @parameter4: boolean;

        z0 = r0 instanceof thredds.catalog.InvCatalogRef;

        $z1 = r1.<thredds.catalog.crawl.CatalogCrawler: boolean skipDatasetScan>;

        if $z1 == 0 goto label01;

        $z11 = r0 instanceof thredds.catalog.InvCatalogRef;

        if $z11 == 0 goto label01;

        $r30 = virtualinvoke r0.<thredds.catalog.InvDataset: java.lang.String findProperty(java.lang.String)>("DatasetScan");

        if $r30 == null goto label01;

        $z12 = 1;

        goto label02;

     label01:
        $z12 = 0;

     label02:
        z2 = $z12;

        if z0 == 0 goto label05;

        r31 = (thredds.catalog.InvCatalogRef) r0;

        if r8 == null goto label03;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" **CATREF ");

        $r23 = virtualinvoke r31.<thredds.catalog.InvCatalogRef: java.net.URI getURI()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r26 = virtualinvoke r0.<thredds.catalog.InvDataset: java.lang.String getName()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r8.<java.io.PrintStream: void println(java.lang.String)>($r29);

     label03:
        $i4 = r1.<thredds.catalog.crawl.CatalogCrawler: int countCatrefs>;

        $i5 = $i4 + 1;

        r1.<thredds.catalog.crawl.CatalogCrawler: int countCatrefs> = $i5;

        $r20 = r1.<thredds.catalog.crawl.CatalogCrawler: thredds.catalog.crawl.CatalogCrawler$Listener listen>;

        $z10 = interfaceinvoke $r20.<thredds.catalog.crawl.CatalogCrawler$Listener: boolean getCatalogRef(thredds.catalog.InvCatalogRef,java.lang.Object)>(r31, r9);

        if $z10 != 0 goto label05;

        if z3 == 0 goto label04;

        virtualinvoke r31.<thredds.catalog.InvCatalogRef: void release()>();

     label04:
        return;

     label05:
        $r2 = virtualinvoke r0.<thredds.catalog.InvDataset: java.util.List getDatasets()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z13 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label08;

        $r19 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r32 = (thredds.catalog.InvDataset) $r19;

        $z9 = virtualinvoke r32.<thredds.catalog.InvDataset: boolean hasAccess()>();

        if $z9 == 0 goto label07;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r32);

     label07:
        goto label06;

     label08:
        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 <= 0 goto label14;

        $i1 = r1.<thredds.catalog.crawl.CatalogCrawler: int type>;

        if $i1 != 2 goto label09;

        $r17 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        r33 = (thredds.catalog.InvDataset) $r17;

        $r18 = r1.<thredds.catalog.crawl.CatalogCrawler: thredds.catalog.crawl.CatalogCrawler$Listener listen>;

        interfaceinvoke $r18.<thredds.catalog.crawl.CatalogCrawler$Listener: void getDataset(thredds.catalog.InvDataset,java.lang.Object)>(r33, r9);

        goto label14;

     label09:
        $i2 = r1.<thredds.catalog.crawl.CatalogCrawler: int type>;

        if $i2 != 3 goto label10;

        $r15 = r1.<thredds.catalog.crawl.CatalogCrawler: thredds.catalog.crawl.CatalogCrawler$Listener listen>;

        $r16 = specialinvoke r1.<thredds.catalog.crawl.CatalogCrawler: thredds.catalog.InvDataset chooseRandom(java.util.List)>($r3);

        interfaceinvoke $r15.<thredds.catalog.crawl.CatalogCrawler$Listener: void getDataset(thredds.catalog.InvDataset,java.lang.Object)>($r16, r9);

        goto label14;

     label10:
        $i3 = r1.<thredds.catalog.crawl.CatalogCrawler: int type>;

        if $i3 != 4 goto label11;

        $r13 = r1.<thredds.catalog.crawl.CatalogCrawler: thredds.catalog.crawl.CatalogCrawler$Listener listen>;

        $r14 = specialinvoke r1.<thredds.catalog.crawl.CatalogCrawler: thredds.catalog.InvDataset chooseRandomNotFirstOrLast(java.util.List)>($r3);

        interfaceinvoke $r13.<thredds.catalog.crawl.CatalogCrawler$Listener: void getDataset(thredds.catalog.InvDataset,java.lang.Object)>($r14, r9);

        goto label14;

     label11:
        $r10 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z7 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label14;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r34 = (thredds.catalog.InvDataset) $r11;

        $r12 = r1.<thredds.catalog.crawl.CatalogCrawler: thredds.catalog.crawl.CatalogCrawler$Listener listen>;

        interfaceinvoke $r12.<thredds.catalog.crawl.CatalogCrawler$Listener: void getDataset(thredds.catalog.InvDataset,java.lang.Object)>(r34, r9);

        if r7 == null goto label13;

        $z8 = interfaceinvoke r7.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z8 == 0 goto label13;

        goto label14;

     label13:
        goto label12;

     label14:
        if z2 != 0 goto label18;

        $r5 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z4 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label18;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r35 = (thredds.catalog.InvDataset) $r6;

        $z5 = virtualinvoke r35.<thredds.catalog.InvDataset: boolean hasNestedDatasets()>();

        if $z5 == 0 goto label16;

        virtualinvoke r1.<thredds.catalog.crawl.CatalogCrawler: void crawlDirectDatasets(thredds.catalog.InvDataset,ucar.nc2.util.CancelTask,java.io.PrintStream,java.lang.Object,boolean)>(r35, r7, r8, r9, z3);

     label16:
        if r7 == null goto label17;

        $z6 = interfaceinvoke r7.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z6 == 0 goto label17;

        goto label18;

     label17:
        goto label15;

     label18:
        $z14 = r0 instanceof thredds.catalog.InvCatalogRef;

        if $z14 == 0 goto label19;

        if z3 == 0 goto label19;

        r36 = (thredds.catalog.InvCatalogRef) r0;

        virtualinvoke r36.<thredds.catalog.InvCatalogRef: void release()>();

     label19:
        return;
    }

    private thredds.catalog.InvDataset chooseRandom(java.util.List)
    {
        thredds.catalog.crawl.CatalogCrawler r0;
        java.util.List r1;
        int $i0, $i1;
        java.util.Random $r2;
        java.lang.Object $r3;
        thredds.catalog.InvDataset $r4;

        r0 := @this: thredds.catalog.crawl.CatalogCrawler;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<thredds.catalog.crawl.CatalogCrawler: java.util.Random random>;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $i1 = virtualinvoke $r2.<java.util.Random: int nextInt(int)>($i0);

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (thredds.catalog.InvDataset) $r3;

        return $r4;
    }

    private thredds.catalog.InvDataset chooseRandomNotFirstOrLast(java.util.List)
    {
        java.util.Random $r2;
        thredds.catalog.crawl.CatalogCrawler r0;
        java.util.List r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i8;
        java.lang.Object $r3;
        thredds.catalog.InvDataset $r4;

        r0 := @this: thredds.catalog.crawl.CatalogCrawler;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<thredds.catalog.crawl.CatalogCrawler: java.util.Random random>;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $i1 = virtualinvoke $r2.<java.util.Random: int nextInt(int)>($i0);

        i6 = $i1;

        if $i1 != 0 goto label1;

        $i5 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i5 <= 1 goto label1;

        i6 = $i1 + 1;

        goto label2;

     label1:
        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        if $i1 != $i3 goto label2;

        $i4 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i4 <= 1 goto label2;

        $i8 = (int) -1;

        i6 = $i1 + $i8;

     label2:
        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i6);

        $r4 = (thredds.catalog.InvDataset) $r3;

        return $r4;
    }

    public static void <clinit>()
    {
        <thredds.catalog.crawl.CatalogCrawler: int USE_RANDOM_DIRECT_NOT_FIRST_OR_LAST> = 4;

        <thredds.catalog.crawl.CatalogCrawler: int USE_RANDOM_DIRECT> = 3;

        <thredds.catalog.crawl.CatalogCrawler: int USE_FIRST_DIRECT> = 2;

        <thredds.catalog.crawl.CatalogCrawler: int USE_ALL_DIRECT> = 1;

        <thredds.catalog.crawl.CatalogCrawler: int USE_ALL> = 0;

        return;
    }
}
