class com.google.inject.internal.DefaultConstructionProxyFactory$1 extends java.lang.Object implements com.google.inject.internal.ConstructionProxy
{
    final com.google.inject.internal.cglib.reflect.$FastConstructor val$fastConstructor;
    final java.lang.reflect.Constructor val$constructor;
    final com.google.inject.internal.DefaultConstructionProxyFactory this$0;

    void <init>(com.google.inject.internal.DefaultConstructionProxyFactory, com.google.inject.internal.cglib.reflect.$FastConstructor, java.lang.reflect.Constructor)
    {
        com.google.inject.internal.cglib.reflect.$FastConstructor r2;
        com.google.inject.internal.DefaultConstructionProxyFactory$1 r0;
        com.google.inject.internal.DefaultConstructionProxyFactory r1;
        java.lang.reflect.Constructor r3;

        r0 := @this: com.google.inject.internal.DefaultConstructionProxyFactory$1;

        r1 := @parameter0: com.google.inject.internal.DefaultConstructionProxyFactory;

        r2 := @parameter1: com.google.inject.internal.cglib.reflect.$FastConstructor;

        r3 := @parameter2: java.lang.reflect.Constructor;

        r0.<com.google.inject.internal.DefaultConstructionProxyFactory$1: com.google.inject.internal.DefaultConstructionProxyFactory this$0> = r1;

        r0.<com.google.inject.internal.DefaultConstructionProxyFactory$1: com.google.inject.internal.cglib.reflect.$FastConstructor val$fastConstructor> = r2;

        r0.<com.google.inject.internal.DefaultConstructionProxyFactory$1: java.lang.reflect.Constructor val$constructor> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public transient java.lang.Object newInstance(java.lang.Object[]) throws java.lang.reflect.InvocationTargetException
    {
        com.google.inject.internal.cglib.reflect.$FastConstructor $r2;
        java.lang.Object[] r1;
        com.google.inject.internal.DefaultConstructionProxyFactory$1 r0;
        java.lang.Object $r3;

        r0 := @this: com.google.inject.internal.DefaultConstructionProxyFactory$1;

        r1 := @parameter0: java.lang.Object[];

        $r2 = r0.<com.google.inject.internal.DefaultConstructionProxyFactory$1: com.google.inject.internal.cglib.reflect.$FastConstructor val$fastConstructor>;

        $r3 = virtualinvoke $r2.<com.google.inject.internal.cglib.reflect.$FastConstructor: java.lang.Object newInstance(java.lang.Object[])>(r1);

        return $r3;
    }

    public com.google.inject.spi.InjectionPoint getInjectionPoint()
    {
        com.google.inject.internal.DefaultConstructionProxyFactory$1 r0;
        com.google.inject.internal.DefaultConstructionProxyFactory $r1;
        com.google.inject.spi.InjectionPoint $r2;

        r0 := @this: com.google.inject.internal.DefaultConstructionProxyFactory$1;

        $r1 = r0.<com.google.inject.internal.DefaultConstructionProxyFactory$1: com.google.inject.internal.DefaultConstructionProxyFactory this$0>;

        $r2 = staticinvoke <com.google.inject.internal.DefaultConstructionProxyFactory: com.google.inject.spi.InjectionPoint access$000(com.google.inject.internal.DefaultConstructionProxyFactory)>($r1);

        return $r2;
    }

    public java.lang.reflect.Constructor getConstructor()
    {
        com.google.inject.internal.DefaultConstructionProxyFactory$1 r0;
        java.lang.reflect.Constructor $r1;

        r0 := @this: com.google.inject.internal.DefaultConstructionProxyFactory$1;

        $r1 = r0.<com.google.inject.internal.DefaultConstructionProxyFactory$1: java.lang.reflect.Constructor val$constructor>;

        return $r1;
    }

    public com.google.inject.internal.util.$ImmutableMap getMethodInterceptors()
    {
        com.google.inject.internal.DefaultConstructionProxyFactory$1 r1;
        com.google.inject.internal.util.$ImmutableMap $r0;

        r1 := @this: com.google.inject.internal.DefaultConstructionProxyFactory$1;

        $r0 = staticinvoke <com.google.inject.internal.util.$ImmutableMap: com.google.inject.internal.util.$ImmutableMap of()>();

        return $r0;
    }
}
