public class com.hp.hpl.jena.ontology.OntTools$PredicatesFilter extends com.hp.hpl.jena.util.iterator.Filter
{
    public java.util.Collection m_preds;

    public void <init>(java.util.Collection)
    {
        com.hp.hpl.jena.ontology.OntTools$PredicatesFilter r0;
        java.util.Collection r1;

        r0 := @this: com.hp.hpl.jena.ontology.OntTools$PredicatesFilter;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.Filter: void <init>()>();

        r0.<com.hp.hpl.jena.ontology.OntTools$PredicatesFilter: java.util.Collection m_preds> = r1;

        return;
    }

    public void <init>(com.hp.hpl.jena.rdf.model.Property[])
    {
        java.util.HashSet $r1;
        com.hp.hpl.jena.ontology.OntTools$PredicatesFilter r0;
        com.hp.hpl.jena.rdf.model.Property[] r2;
        com.hp.hpl.jena.rdf.model.Property $r3;
        java.util.Collection $r4;
        int $i0, i1;

        r0 := @this: com.hp.hpl.jena.ontology.OntTools$PredicatesFilter;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property[];

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.Filter: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<com.hp.hpl.jena.ontology.OntTools$PredicatesFilter: java.util.Collection m_preds> = $r1;

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r4 = r0.<com.hp.hpl.jena.ontology.OntTools$PredicatesFilter: java.util.Collection m_preds>;

        $r3 = r2[i1];

        interfaceinvoke $r4.<java.util.Collection: boolean add(java.lang.Object)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void <init>(com.hp.hpl.jena.rdf.model.Property)
    {
        java.util.HashSet $r1;
        com.hp.hpl.jena.ontology.OntTools$PredicatesFilter r0;
        com.hp.hpl.jena.rdf.model.Property r2;
        java.util.Collection $r3;

        r0 := @this: com.hp.hpl.jena.ontology.OntTools$PredicatesFilter;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.Filter: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<com.hp.hpl.jena.ontology.OntTools$PredicatesFilter: java.util.Collection m_preds> = $r1;

        $r3 = r0.<com.hp.hpl.jena.ontology.OntTools$PredicatesFilter: java.util.Collection m_preds>;

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>(r2);

        return;
    }

    public boolean accept(com.hp.hpl.jena.rdf.model.Statement)
    {
        com.hp.hpl.jena.ontology.OntTools$PredicatesFilter r0;
        java.util.Collection $r2;
        com.hp.hpl.jena.rdf.model.Property $r3;
        com.hp.hpl.jena.rdf.model.Statement r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.OntTools$PredicatesFilter;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Statement;

        $r2 = r0.<com.hp.hpl.jena.ontology.OntTools$PredicatesFilter: java.util.Collection m_preds>;

        $r3 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Property getPredicate()>();

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean contains(java.lang.Object)>($r3);

        return $z0;
    }

    public volatile boolean accept(java.lang.Object)
    {
        com.hp.hpl.jena.ontology.OntTools$PredicatesFilter r0;
        java.lang.Object r1;
        com.hp.hpl.jena.rdf.model.Statement $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.OntTools$PredicatesFilter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.hp.hpl.jena.rdf.model.Statement) r1;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.OntTools$PredicatesFilter: boolean accept(com.hp.hpl.jena.rdf.model.Statement)>($r2);

        return $z0;
    }
}
