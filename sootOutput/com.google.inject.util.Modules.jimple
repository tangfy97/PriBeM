public final class com.google.inject.util.Modules extends java.lang.Object
{
    public static final com.google.inject.Module EMPTY_MODULE;

    private void <init>()
    {
        com.google.inject.util.Modules r0;

        r0 := @this: com.google.inject.util.Modules;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static transient com.google.inject.util.Modules$OverriddenModuleBuilder override(com.google.inject.Module[])
    {
        java.util.List $r2;
        com.google.inject.Module[] r1;
        com.google.inject.util.Modules$RealOverriddenModuleBuilder $r0;

        r1 := @parameter0: com.google.inject.Module[];

        $r0 = new com.google.inject.util.Modules$RealOverriddenModuleBuilder;

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        specialinvoke $r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder: void <init>(java.lang.Iterable,com.google.inject.util.Modules$1)>($r2, null);

        return $r0;
    }

    public static com.google.inject.util.Modules$OverriddenModuleBuilder override(java.lang.Iterable)
    {
        java.lang.Iterable r1;
        com.google.inject.util.Modules$RealOverriddenModuleBuilder $r0;

        r1 := @parameter0: java.lang.Iterable;

        $r0 = new com.google.inject.util.Modules$RealOverriddenModuleBuilder;

        specialinvoke $r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder: void <init>(java.lang.Iterable,com.google.inject.util.Modules$1)>(r1, null);

        return $r0;
    }

    public static transient com.google.inject.Module combine(com.google.inject.Module[])
    {
        com.google.inject.Module $r2;
        com.google.inject.Module[] r0;
        com.google.inject.internal.util.$ImmutableSet $r1;

        r0 := @parameter0: com.google.inject.Module[];

        $r1 = staticinvoke <com.google.inject.internal.util.$ImmutableSet: com.google.inject.internal.util.$ImmutableSet of(java.lang.Object[])>(r0);

        $r2 = staticinvoke <com.google.inject.util.Modules: com.google.inject.Module combine(java.lang.Iterable)>($r1);

        return $r2;
    }

    public static com.google.inject.Module combine(java.lang.Iterable)
    {
        com.google.inject.internal.util.$ImmutableSet $r1;
        java.lang.Iterable r0;
        com.google.inject.util.Modules$2 $r2;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = staticinvoke <com.google.inject.internal.util.$ImmutableSet: com.google.inject.internal.util.$ImmutableSet copyOf(java.lang.Iterable)>(r0);

        $r2 = new com.google.inject.util.Modules$2;

        specialinvoke $r2.<com.google.inject.util.Modules$2: void <init>(java.util.Set)>($r1);

        return $r2;
    }

    static void <clinit>()
    {
        com.google.inject.util.Modules$1 $r0;

        $r0 = new com.google.inject.util.Modules$1;

        specialinvoke $r0.<com.google.inject.util.Modules$1: void <init>()>();

        <com.google.inject.util.Modules: com.google.inject.Module EMPTY_MODULE> = $r0;

        return;
    }
}
