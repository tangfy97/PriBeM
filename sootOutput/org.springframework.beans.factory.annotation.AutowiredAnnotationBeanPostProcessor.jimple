public class org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor extends org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessorAdapter implements org.springframework.beans.factory.support.MergedBeanDefinitionPostProcessor, org.springframework.core.PriorityOrdered, org.springframework.beans.factory.BeanFactoryAware
{
    protected final org.apache.commons.logging.Log logger;
    private final java.util.Set autowiredAnnotationTypes;
    private java.lang.String requiredParameterName;
    private boolean requiredParameterValue;
    private int order;
    private org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory;
    private final java.util.Map candidateConstructorsCache;
    private final java.util.Map injectionMetadataCache;

    public void <init>()
    {
        java.util.concurrent.ConcurrentHashMap $r4, $r5;
        java.util.Set $r6, $r7, $r10;
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor r0;
        java.lang.Class $r1, $r8, $r11;
        org.apache.commons.logging.Log $r2, $r12;
        java.lang.ClassNotFoundException $r13;
        java.lang.ClassLoader $r9;
        java.util.LinkedHashSet $r3;

        r0 := @this: org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor;

        specialinvoke r0.<org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessorAdapter: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: org.apache.commons.logging.Log logger> = $r2;

        $r3 = new java.util.LinkedHashSet;

        specialinvoke $r3.<java.util.LinkedHashSet: void <init>()>();

        r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.util.Set autowiredAnnotationTypes> = $r3;

        r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.lang.String requiredParameterName> = "required";

        r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: boolean requiredParameterValue> = 1;

        r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: int order> = 2147483645;

        $r4 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r4.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.util.Map candidateConstructorsCache> = $r4;

        $r5 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r5.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.util.Map injectionMetadataCache> = $r5;

        $r6 = r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.util.Set autowiredAnnotationTypes>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(class "Lorg/springframework/beans/factory/annotation/Autowired;");

        $r7 = r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.util.Set autowiredAnnotationTypes>;

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>(class "Lorg/springframework/beans/factory/annotation/Value;");

        $r8 = class "Lorg/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor;";

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label1:
        $r10 = r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.util.Set autowiredAnnotationTypes>;

        $r11 = virtualinvoke $r9.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("javax.inject.Inject");

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>($r11);

        $r12 = r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void info(java.lang.Object)>("JSR-330 \'javax.inject.Inject\' annotation found and supported for autowiring");

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

     label4:
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public void setAutowiredAnnotationType(java.lang.Class)
    {
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor r1;
        java.util.Set $r2, $r3;
        java.lang.Class r0;

        r1 := @this: org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor;

        r0 := @parameter0: java.lang.Class;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "\'autowiredAnnotationType\' must not be null");

        $r2 = r1.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.util.Set autowiredAnnotationTypes>;

        interfaceinvoke $r2.<java.util.Set: void clear()>();

        $r3 = r1.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.util.Set autowiredAnnotationTypes>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r0);

        return;
    }

    public void setAutowiredAnnotationTypes(java.util.Set)
    {
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor r1;
        java.util.Set r0, $r2, $r3;

        r1 := @this: org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor;

        r0 := @parameter0: java.util.Set;

        staticinvoke <org.springframework.util.Assert: void notEmpty(java.util.Collection,java.lang.String)>(r0, "\'autowiredAnnotationTypes\' must not be empty");

        $r2 = r1.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.util.Set autowiredAnnotationTypes>;

        interfaceinvoke $r2.<java.util.Set: void clear()>();

        $r3 = r1.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.util.Set autowiredAnnotationTypes>;

        interfaceinvoke $r3.<java.util.Set: boolean addAll(java.util.Collection)>(r0);

        return;
    }

    public void setRequiredParameterName(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor r0;

        r0 := @this: org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.lang.String requiredParameterName> = r1;

        return;
    }

    public void setRequiredParameterValue(boolean)
    {
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor r0;
        boolean z0;

        r0 := @this: org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor;

        z0 := @parameter0: boolean;

        r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: boolean requiredParameterValue> = z0;

        return;
    }

    public void setOrder(int)
    {
        int i0;
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor r0;

        r0 := @this: org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor;

        i0 := @parameter0: int;

        r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: int order> = i0;

        return;
    }

    public int getOrder()
    {
        int $i0;
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor r0;

        r0 := @this: org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor;

        $i0 = r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: int order>;

        return $i0;
    }

    public void setBeanFactory(org.springframework.beans.factory.BeanFactory) throws org.springframework.beans.BeansException
    {
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor r1;
        org.springframework.beans.factory.BeanFactory r0;
        java.lang.IllegalArgumentException $r3;
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory $r2;
        boolean $z0;

        r1 := @this: org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor;

        r0 := @parameter0: org.springframework.beans.factory.BeanFactory;

        $z0 = r0 instanceof org.springframework.beans.factory.config.ConfigurableListableBeanFactory;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("AutowiredAnnotationBeanPostProcessor requires a ConfigurableListableBeanFactory");

        throw $r3;

     label1:
        $r2 = (org.springframework.beans.factory.config.ConfigurableListableBeanFactory) r0;

        r1.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory> = $r2;

        return;
    }

    public void postProcessMergedBeanDefinition(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.Class, java.lang.String)
    {
        org.springframework.beans.factory.support.RootBeanDefinition r3;
        org.springframework.beans.factory.'annotation'.InjectionMetadata $r2;
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor r1;
        java.lang.Class r0;
        java.lang.String r4;

        r1 := @this: org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor;

        r3 := @parameter0: org.springframework.beans.factory.support.RootBeanDefinition;

        r0 := @parameter1: java.lang.Class;

        r4 := @parameter2: java.lang.String;

        if r0 == null goto label1;

        $r2 = specialinvoke r1.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: org.springframework.beans.factory.'annotation'.InjectionMetadata findAutowiringMetadata(java.lang.Class)>(r0);

        virtualinvoke $r2.<org.springframework.beans.factory.'annotation'.InjectionMetadata: void checkConfigMembers(org.springframework.beans.factory.support.RootBeanDefinition)>(r3);

     label1:
        return;
    }

    public java.lang.reflect.Constructor[] determineCandidateConstructors(java.lang.Class, java.lang.String) throws org.springframework.beans.BeansException
    {
        java.lang.IllegalStateException $r19;
        java.util.Map $r2, $r4, $r5, $r29;
        boolean $z0, $z1, $z2;
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor r0;
        java.lang.'annotation'.Annotation $r10;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r20, $r21, $r24, $r25, $r26, $r27;
        java.lang.Throwable $r30;
        java.lang.Object[] $r36;
        java.lang.reflect.Constructor r9, r33, r34;
        java.util.ArrayList $r8;
        java.lang.reflect.Constructor[] $r7, r32, $r35, $r37;
        org.springframework.beans.factory.BeanCreationException $r13, $r23;
        int $i0, $i1, i2, $i3, $i4, i5, $i6;
        java.lang.String $r18, $r22, $r28, r31;
        java.lang.Class[] $r11, $r12;
        java.lang.Class r1;
        java.lang.Object $r3, $r6;

        r0 := @this: org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor;

        r1 := @parameter0: java.lang.Class;

        r31 := @parameter1: java.lang.String;

        $r2 = r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.util.Map candidateConstructorsCache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r32 = (java.lang.reflect.Constructor[]) $r3;

        if r32 != null goto label17;

        $r4 = r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.util.Map candidateConstructorsCache>;

        entermonitor $r4;

     label01:
        $r5 = r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.util.Map candidateConstructorsCache>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r32 = (java.lang.reflect.Constructor[]) $r6;

        if r32 != null goto label13;

        $r7 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>();

        $r8 = new java.util.ArrayList;

        $i1 = lengthof $r7;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i1);

        r33 = null;

        r34 = null;

        i2 = lengthof $r7;

        i5 = 0;

        goto label09;

     label02:
        r9 = $r7[i5];

        $r10 = specialinvoke r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.lang.'annotation'.Annotation findAutowiredAnnotation(java.lang.reflect.AccessibleObject)>(r9);

        if $r10 == null goto label07;

        if r33 == null goto label03;

        $r23 = new org.springframework.beans.factory.BeanCreationException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid autowire-marked constructor: ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Found another constructor with \'required\' Autowired annotation: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r33);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String)>($r28);

        throw $r23;

     label03:
        $r12 = virtualinvoke r9.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $i4 = lengthof $r12;

        if $i4 != 0 goto label04;

        $r19 = new java.lang.IllegalStateException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("Autowired annotation requires at least one argument: ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r22);

        throw $r19;

     label04:
        $z0 = virtualinvoke r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: boolean determineRequiredStatus(java.lang.'annotation'.Annotation)>($r10);

        if $z0 == 0 goto label06;

        $z1 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label05;

        $r13 = new org.springframework.beans.factory.BeanCreationException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid autowire-marked constructors: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Found another constructor with \'required\' Autowired annotation: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r33);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label05:
        r33 = r9;

     label06:
        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r9);

        goto label08;

     label07:
        $r11 = virtualinvoke r9.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $i3 = lengthof $r11;

        if $i3 != 0 goto label08;

        r34 = r9;

     label08:
        i5 = i5 + 1;

     label09:
        if i5 < i2 goto label02;

        $z2 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label11;

        if r33 != null goto label10;

        if r34 == null goto label10;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r34);

     label10:
        $i6 = interfaceinvoke $r8.<java.util.List: int size()>();

        $r35 = newarray (java.lang.reflect.Constructor)[$i6];

        $r36 = interfaceinvoke $r8.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r35);

        r32 = (java.lang.reflect.Constructor[]) $r36;

        goto label12;

     label11:
        r32 = newarray (java.lang.reflect.Constructor)[0];

     label12:
        $r29 = r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.util.Map candidateConstructorsCache>;

        interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r32);

     label13:
        exitmonitor $r4;

     label14:
        goto label17;

     label15:
        $r30 := @caughtexception;

        exitmonitor $r4;

     label16:
        throw $r30;

     label17:
        $i0 = lengthof r32;

        if $i0 <= 0 goto label18;

        $r37 = r32;

        goto label19;

     label18:
        $r37 = null;

     label19:
        return $r37;

        catch java.lang.Throwable from label01 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public org.springframework.beans.PropertyValues postProcessPropertyValues(org.springframework.beans.PropertyValues, java.beans.PropertyDescriptor[], java.lang.Object, java.lang.String) throws org.springframework.beans.BeansException
    {
        java.lang.Throwable $r6;
        org.springframework.beans.factory.'annotation'.InjectionMetadata $r3;
        java.beans.PropertyDescriptor[] r8;
        org.springframework.beans.factory.BeanCreationException $r7;
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor r0;
        java.lang.Object r1;
        java.lang.Class $r2;
        java.lang.String r4;
        org.springframework.beans.PropertyValues r5;

        r0 := @this: org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor;

        r5 := @parameter0: org.springframework.beans.PropertyValues;

        r8 := @parameter1: java.beans.PropertyDescriptor[];

        r1 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.String;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = specialinvoke r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: org.springframework.beans.factory.'annotation'.InjectionMetadata findAutowiringMetadata(java.lang.Class)>($r2);

     label1:
        virtualinvoke $r3.<org.springframework.beans.factory.'annotation'.InjectionMetadata: void inject(java.lang.Object,java.lang.String,org.springframework.beans.PropertyValues)>(r1, r4, r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new org.springframework.beans.factory.BeanCreationException;

        specialinvoke $r7.<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>(r4, "Injection of autowired dependencies failed", $r6);

        throw $r7;

     label4:
        return r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void processInjection(java.lang.Object) throws org.springframework.beans.BeansException
    {
        java.lang.Throwable $r4;
        org.springframework.beans.factory.'annotation'.InjectionMetadata $r3;
        org.springframework.beans.factory.BeanCreationException $r5;
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor r2;
        java.lang.Object r0;
        java.lang.Class $r1;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;

        r2 := @this: org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor;

        r0 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = specialinvoke r2.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: org.springframework.beans.factory.'annotation'.InjectionMetadata findAutowiringMetadata(java.lang.Class)>($r1);

     label1:
        virtualinvoke $r3.<org.springframework.beans.factory.'annotation'.InjectionMetadata: void inject(java.lang.Object,java.lang.String,org.springframework.beans.PropertyValues)>(r0, null, null);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.springframework.beans.factory.BeanCreationException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Injection of autowired dependencies failed for class [");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.Throwable)>($r9, $r4);

        throw $r5;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private org.springframework.beans.factory.'annotation'.InjectionMetadata findAutowiringMetadata(java.lang.Class)
    {
        java.lang.Throwable $r9;
        org.springframework.beans.factory.'annotation'.InjectionMetadata $r7, r10;
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor r0;
        java.util.Map $r2, $r4, $r5, $r8;
        java.lang.Class r1;
        java.lang.Object $r3, $r6;

        r0 := @this: org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.util.Map injectionMetadataCache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r10 = (org.springframework.beans.factory.'annotation'.InjectionMetadata) $r3;

        if r10 != null goto label6;

        $r4 = r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.util.Map injectionMetadataCache>;

        entermonitor $r4;

     label1:
        $r5 = r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.util.Map injectionMetadataCache>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r10 = (org.springframework.beans.factory.'annotation'.InjectionMetadata) $r6;

        if r10 != null goto label2;

        $r7 = specialinvoke r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: org.springframework.beans.factory.'annotation'.InjectionMetadata buildAutowiringMetadata(java.lang.Class)>(r1);

        r10 = $r7;

        $r8 = r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.util.Map injectionMetadataCache>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

     label2:
        exitmonitor $r4;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r4;

     label5:
        throw $r9;

     label6:
        return r10;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private org.springframework.beans.factory.'annotation'.InjectionMetadata buildAutowiringMetadata(java.lang.Class)
    {
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement $r6;
        java.lang.reflect.Method[] $r12;
        java.lang.reflect.Method $r14, r30;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.springframework.beans.factory.'annotation'.InjectionMetadata $r27;
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor r4;
        java.beans.PropertyDescriptor $r31;
        java.lang.'annotation'.Annotation $r5, $r13;
        java.lang.StringBuilder $r8, $r10, $r17, $r19, $r22, $r24;
        int $i0, $i1, $i2, $i3, i4, i5, i6;
        java.lang.String $r11, $r20, $r25;
        java.util.LinkedList $r0, $r2;
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement $r32;
        java.lang.Class[] $r15;
        java.lang.reflect.Field r29;
        java.lang.reflect.Field[] $r3;
        java.lang.Class r1, $r26, r28;
        org.apache.commons.logging.Log $r7, $r9, $r16, $r18, $r21, $r23;

        r4 := @this: org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor;

        r1 := @parameter0: java.lang.Class;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        r28 = r1;

     label01:
        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        $r3 = virtualinvoke r28.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        $i3 = lengthof $r3;

        i4 = 0;

        goto label05;

     label02:
        r29 = $r3[i4];

        $r5 = specialinvoke r4.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.lang.'annotation'.Annotation findAutowiredAnnotation(java.lang.reflect.AccessibleObject)>(r29);

        if $r5 == null goto label04;

        $i0 = virtualinvoke r29.<java.lang.reflect.Field: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        if $z0 == 0 goto label03;

        $r7 = r4.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: org.apache.commons.logging.Log logger>;

        $z2 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();

        if $z2 == 0 goto label04;

        $r9 = r4.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: org.apache.commons.logging.Log logger>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Autowired annotation is not supported on static fields: ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r11);

        goto label04;

     label03:
        $z1 = virtualinvoke r4.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: boolean determineRequiredStatus(java.lang.'annotation'.Annotation)>($r5);

        $r6 = new org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement;

        specialinvoke $r6.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement: void <init>(org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor,java.lang.reflect.Field,boolean)>(r4, r29, $z1);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);

     label04:
        i4 = i4 + 1;

     label05:
        if i4 < $i3 goto label02;

        $r12 = virtualinvoke r28.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        i5 = lengthof $r12;

        i6 = 0;

        goto label10;

     label06:
        r30 = $r12[i6];

        $r13 = specialinvoke r4.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.lang.'annotation'.Annotation findAutowiredAnnotation(java.lang.reflect.AccessibleObject)>(r30);

        if $r13 == null goto label09;

        $r14 = staticinvoke <org.springframework.util.ClassUtils: java.lang.reflect.Method getMostSpecificMethod(java.lang.reflect.Method,java.lang.Class)>(r30, r1);

        $z3 = virtualinvoke r30.<java.lang.reflect.Method: boolean equals(java.lang.Object)>($r14);

        if $z3 == 0 goto label09;

        $i1 = virtualinvoke r30.<java.lang.reflect.Method: int getModifiers()>();

        $z4 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i1);

        if $z4 == 0 goto label07;

        $r21 = r4.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: org.apache.commons.logging.Log logger>;

        $z6 = interfaceinvoke $r21.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();

        if $z6 == 0 goto label09;

        $r23 = r4.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: org.apache.commons.logging.Log logger>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("Autowired annotation is not supported on static methods: ");

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r30);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r23.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r25);

        goto label09;

     label07:
        $r15 = virtualinvoke r30.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i2 = lengthof $r15;

        if $i2 != 0 goto label08;

        $r16 = r4.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: org.apache.commons.logging.Log logger>;

        $z5 = interfaceinvoke $r16.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();

        if $z5 == 0 goto label08;

        $r18 = r4.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: org.apache.commons.logging.Log logger>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("Autowired annotation should be used on methods with actual parameters: ");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r30);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r18.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r20);

     label08:
        $z7 = virtualinvoke r4.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: boolean determineRequiredStatus(java.lang.'annotation'.Annotation)>($r13);

        $r31 = staticinvoke <org.springframework.beans.BeanUtils: java.beans.PropertyDescriptor findPropertyForMethod(java.lang.reflect.Method)>(r30);

        $r32 = new org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement;

        specialinvoke $r32.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement: void <init>(org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor,java.lang.reflect.Method,boolean,java.beans.PropertyDescriptor)>(r4, r30, $z7, $r31);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r32);

     label09:
        i6 = i6 + 1;

     label10:
        if i6 < i5 goto label06;

        virtualinvoke $r0.<java.util.LinkedList: boolean addAll(int,java.util.Collection)>(0, $r2);

        $r26 = virtualinvoke r28.<java.lang.Class: java.lang.Class getSuperclass()>();

        r28 = $r26;

        if $r26 == null goto label11;

        if $r26 != class "Ljava/lang/Object;" goto label01;

     label11:
        $r27 = new org.springframework.beans.factory.'annotation'.InjectionMetadata;

        specialinvoke $r27.<org.springframework.beans.factory.'annotation'.InjectionMetadata: void <init>(java.lang.Class,java.util.Collection)>(r1, $r0);

        return $r27;
    }

    private java.lang.'annotation'.Annotation findAutowiredAnnotation(java.lang.reflect.AccessibleObject)
    {
        java.lang.reflect.AccessibleObject r7;
        java.util.Iterator $r2;
        java.util.Set $r1;
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor r0;
        java.lang.'annotation'.Annotation $r5;
        java.lang.Object $r3;
        java.lang.Class r4;
        java.lang.reflect.Method $r6;
        boolean $z0, $z1;

        r0 := @this: org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor;

        r7 := @parameter0: java.lang.reflect.AccessibleObject;

        $r1 = r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.util.Set autowiredAnnotationTypes>;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        goto label3;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.Class) $r3;

        $z1 = r7 instanceof java.lang.reflect.Method;

        if $z1 == 0 goto label2;

        $r6 = (java.lang.reflect.Method) r7;

        r7 = staticinvoke <org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method findBridgedMethod(java.lang.reflect.Method)>($r6);

     label2:
        $r5 = virtualinvoke r7.<java.lang.reflect.AccessibleObject: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(r4);

        if $r5 == null goto label3;

        return $r5;

     label3:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;
    }

    protected java.util.Map findAutowireCandidates(java.lang.Class) throws org.springframework.beans.BeansException
    {
        java.lang.IllegalStateException $r5;
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor r0;
        java.util.Map $r4;
        java.lang.Class r2;
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory $r1, $r3;

        r0 := @this: org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor;

        r2 := @parameter0: java.lang.Class;

        $r1 = r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory>;

        if $r1 != null goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No BeanFactory configured - override the getBeanOfType method or specify the \'beanFactory\' property");

        throw $r5;

     label1:
        $r3 = r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory>;

        $r4 = staticinvoke <org.springframework.beans.factory.BeanFactoryUtils: java.util.Map beansOfTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class)>($r3, r2);

        return $r4;
    }

    protected boolean determineRequiredStatus(java.lang.'annotation'.Annotation)
    {
        java.lang.Exception $r7;
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor r2;
        java.lang.'annotation'.Annotation r0;
        java.lang.Boolean $r6;
        java.lang.Class $r1;
        java.lang.Object $r5;
        java.lang.String $r3;
        java.lang.reflect.Method $r4;
        boolean $z0, $z1;

        r2 := @this: org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor;

        r0 := @parameter0: java.lang.'annotation'.Annotation;

     label1:
        $r1 = interfaceinvoke r0.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r3 = r2.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.lang.String requiredParameterName>;

        $r4 = staticinvoke <org.springframework.util.ReflectionUtils: java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String)>($r1, $r3);

        $z0 = r2.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: boolean requiredParameterValue>;

        $r5 = staticinvoke <org.springframework.util.ReflectionUtils: java.lang.Object invokeMethod(java.lang.reflect.Method,java.lang.Object)>($r4, r0);

        $r6 = (java.lang.Boolean) $r5;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != $z1 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        $r7 := @caughtexception;

        return 1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void registerDependentBeans(java.lang.String, java.util.Set)
    {
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory $r6;
        java.lang.String r0, r4, $r14;
        boolean $z0, $z1;
        java.util.Iterator $r2;
        java.util.Set r1;
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor r5;
        java.lang.Object $r3;
        org.apache.commons.logging.Log $r7, $r9;
        java.lang.StringBuilder $r8, $r10, $r11, $r12, $r13;

        r5 := @this: org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Set;

        if r0 == null goto label3;

        $r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

        $r6 = r5.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory>;

        interfaceinvoke $r6.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: void registerDependentBean(java.lang.String,java.lang.String)>(r4, r0);

        $r7 = r5.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: org.apache.commons.logging.Log logger>;

        $z0 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label2;

        $r9 = r5.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: org.apache.commons.logging.Log logger>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Autowiring by type from bean name \'");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' to bean named \'");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r14);

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

     label3:
        return;
    }

    private java.lang.Object resolvedCachedArgument(java.lang.String, java.lang.Object)
    {
        org.springframework.beans.factory.config.RuntimeBeanReference $r2;
        org.springframework.beans.factory.config.DependencyDescriptor r6;
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory $r3, $r7, $r10;
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor r1;
        org.springframework.beans.TypeConverter $r8;
        java.lang.Object r0, $r5, $r11;
        java.lang.String $r4, r9;
        boolean $z0, $z1;

        r1 := @this: org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor;

        r9 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof org.springframework.beans.factory.config.DependencyDescriptor;

        if $z0 == 0 goto label1;

        r6 = (org.springframework.beans.factory.config.DependencyDescriptor) r0;

        $r7 = r1.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory>;

        $r8 = interfaceinvoke $r7.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: org.springframework.beans.TypeConverter getTypeConverter()>();

        $r10 = r1.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory>;

        $r11 = interfaceinvoke $r10.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: java.lang.Object resolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>(r6, r9, null, $r8);

        return $r11;

     label1:
        $z1 = r0 instanceof org.springframework.beans.factory.config.RuntimeBeanReference;

        if $z1 == 0 goto label2;

        $r3 = r1.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory>;

        $r2 = (org.springframework.beans.factory.config.RuntimeBeanReference) r0;

        $r4 = virtualinvoke $r2.<org.springframework.beans.factory.config.RuntimeBeanReference: java.lang.String getBeanName()>();

        $r5 = interfaceinvoke $r3.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: java.lang.Object getBean(java.lang.String)>($r4);

        return $r5;

     label2:
        return r0;
    }

    static java.lang.Object access$0(org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor, java.lang.String, java.lang.Object)
    {
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor r0;
        java.lang.Object r2, $r3;
        java.lang.String r1;

        r0 := @parameter0: org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        $r3 = specialinvoke r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: java.lang.Object resolvedCachedArgument(java.lang.String,java.lang.Object)>(r1, r2);

        return $r3;
    }

    static org.springframework.beans.factory.config.ConfigurableListableBeanFactory access$1(org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor)
    {
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor r0;
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory $r1;

        r0 := @parameter0: org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor;

        $r1 = r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory>;

        return $r1;
    }

    static void access$2(org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor, java.lang.String, java.util.Set)
    {
        java.util.Set r2;
        java.lang.String r1;
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor r0;

        r0 := @parameter0: org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.Set;

        specialinvoke r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: void registerDependentBeans(java.lang.String,java.util.Set)>(r1, r2);

        return;
    }
}
