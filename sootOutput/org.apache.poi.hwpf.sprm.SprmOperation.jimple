public final class org.apache.poi.hwpf.sprm.SprmOperation extends java.lang.Object
{
    private static final org.apache.poi.util.BitField BITFIELD_OP;
    private static final org.apache.poi.util.BitField BITFIELD_SIZECODE;
    private static final org.apache.poi.util.BitField BITFIELD_SPECIAL;
    private static final org.apache.poi.util.BitField BITFIELD_TYPE;
    private static final short SPRM_LONG_PARAGRAPH;
    private static final short SPRM_LONG_TABLE;
    public static final int TYPE_PAP;
    public static final int TYPE_CHP;
    public static final int TYPE_PIC;
    public static final int TYPE_SEP;
    public static final int TYPE_TAP;
    public static final int PAP_TYPE;
    public static final int TAP_TYPE;
    private int _offset;
    private int _gOffset;
    private byte[] _grpprl;
    private int _size;
    private short _value;

    public static int getOperationFromOpcode(short)
    {
        short s0;
        org.apache.poi.util.BitField $r0;
        int $i1, $i2;

        s0 := @parameter0: short;

        $r0 = <org.apache.poi.hwpf.sprm.SprmOperation: org.apache.poi.util.BitField BITFIELD_OP>;

        $i2 = (int) s0;

        $i1 = virtualinvoke $r0.<org.apache.poi.util.BitField: int getValue(int)>($i2);

        return $i1;
    }

    public static int getTypeFromOpcode(short)
    {
        short s0;
        org.apache.poi.util.BitField $r0;
        int $i1, $i2;

        s0 := @parameter0: short;

        $r0 = <org.apache.poi.hwpf.sprm.SprmOperation: org.apache.poi.util.BitField BITFIELD_TYPE>;

        $i2 = (int) s0;

        $i1 = virtualinvoke $r0.<org.apache.poi.util.BitField: int getValue(int)>($i2);

        return $i1;
    }

    public void <init>(byte[], int)
    {
        byte[] r1;
        short $s1, $s3;
        int i0, $i2, $i4;
        org.apache.poi.hwpf.sprm.SprmOperation r0;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmOperation;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] _grpprl> = r1;

        $s1 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r1, i0);

        r0.<org.apache.poi.hwpf.sprm.SprmOperation: short _value> = $s1;

        r0.<org.apache.poi.hwpf.sprm.SprmOperation: int _offset> = i0;

        $i2 = i0 + 2;

        r0.<org.apache.poi.hwpf.sprm.SprmOperation: int _gOffset> = $i2;

        $s3 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: short _value>;

        $i4 = specialinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int initSize(short)>($s3);

        r0.<org.apache.poi.hwpf.sprm.SprmOperation: int _size> = $i4;

        return;
    }

    public byte[] toByteArray()
    {
        byte[] r1, $r2;
        int $i0, $i1, $i2;
        org.apache.poi.hwpf.sprm.SprmOperation r0;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmOperation;

        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int size()>();

        r1 = newarray (byte)[$i0];

        $r2 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] _grpprl>;

        $i1 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: int _offset>;

        $i2 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int size()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, r1, 0, $i2);

        return r1;
    }

    public byte[] getGrpprl()
    {
        byte[] $r1;
        org.apache.poi.hwpf.sprm.SprmOperation r0;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmOperation;

        $r1 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] _grpprl>;

        return $r1;
    }

    public int getGrpprlOffset()
    {
        int $i0;
        org.apache.poi.hwpf.sprm.SprmOperation r0;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmOperation;

        $i0 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: int _gOffset>;

        return $i0;
    }

    public int getOperand()
    {
        byte[] $r1, $r2, $r3, $r4, r5, $r6, $r7, $r8, $r9, $r10, r12;
        byte $b2, $b5, $b8, b12, $b20, $b26;
        short $s24;
        int $i0, $i1, $i3, $i4, $i6, $i7, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i21, $i22, $i23, $i25, i27, $i28, $i29, $i30;
        java.lang.IllegalArgumentException $r13;
        org.apache.poi.hwpf.sprm.SprmOperation r0;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmOperation;

        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getSizeCode()>();

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label4;
            case 7: goto label8;
            default: goto label9;
        };

     label1:
        $r10 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] _grpprl>;

        $i25 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: int _gOffset>;

        $b26 = $r10[$i25];

        $i28 = (int) $b26;

        return $i28;

     label2:
        $r9 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] _grpprl>;

        $i23 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: int _gOffset>;

        $s24 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r9, $i23);

        $i29 = (int) $s24;

        return $i29;

     label3:
        $r8 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] _grpprl>;

        $i21 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: int _gOffset>;

        $i22 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r8, $i21);

        return $i22;

     label4:
        $r4 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] _grpprl>;

        $i10 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: int _gOffset>;

        $i11 = $i10 + 1;

        b12 = $r4[$i11];

        r5 = newarray (byte)[4];

        i27 = 0;

     label5:
        $i30 = (int) b12;

        if i27 >= $i30 goto label7;

        $i14 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: int _gOffset>;

        $i16 = $i14 + i27;

        $r6 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] _grpprl>;

        $i15 = lengthof $r6;

        if $i16 >= $i15 goto label6;

        $r7 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] _grpprl>;

        $i17 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: int _gOffset>;

        $i18 = $i17 + 1;

        $i19 = $i18 + i27;

        $b20 = $r7[$i19];

        r5[i27] = $b20;

     label6:
        i27 = i27 + 1;

        goto label5;

     label7:
        $i13 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r5, 0);

        return $i13;

     label8:
        r12 = newarray (byte)[4];

        $r1 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] _grpprl>;

        $i1 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: int _gOffset>;

        $b2 = $r1[$i1];

        r12[0] = $b2;

        $r2 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] _grpprl>;

        $i3 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: int _gOffset>;

        $i4 = $i3 + 1;

        $b5 = $r2[$i4];

        r12[1] = $b5;

        $r3 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] _grpprl>;

        $i6 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: int _gOffset>;

        $i7 = $i6 + 2;

        $b8 = $r3[$i7];

        r12[2] = $b8;

        r12[3] = 0;

        $i9 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r12, 0);

        return $i9;

     label9:
        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SPRM contains an invalid size code");

        throw $r13;
    }

    public short getOperandShortSigned()
    {
        java.lang.UnsupportedOperationException $r1;
        byte[] $r6;
        short $s4;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r2, $r3, $r4;
        org.apache.poi.hwpf.sprm.SprmOperation r0;
        java.lang.String $r5;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmOperation;

        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getSizeCode()>();

        if $i0 == 2 goto label1;

        $i1 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getSizeCode()>();

        if $i1 == 4 goto label1;

        $i2 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getSizeCode()>();

        if $i2 == 5 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current SPRM doesn\'t have signed short operand: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        $r6 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] _grpprl>;

        $i3 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: int _gOffset>;

        $s4 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r6, $i3);

        return $s4;
    }

    public int getOperation()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        int $i1, $i2;
        org.apache.poi.hwpf.sprm.SprmOperation r0;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmOperation;

        $r1 = <org.apache.poi.hwpf.sprm.SprmOperation: org.apache.poi.util.BitField BITFIELD_OP>;

        $s0 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: short _value>;

        $i2 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int getValue(int)>($i2);

        return $i1;
    }

    public int getSizeCode()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        int $i1, $i2;
        org.apache.poi.hwpf.sprm.SprmOperation r0;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmOperation;

        $r1 = <org.apache.poi.hwpf.sprm.SprmOperation: org.apache.poi.util.BitField BITFIELD_SIZECODE>;

        $s0 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: short _value>;

        $i2 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int getValue(int)>($i2);

        return $i1;
    }

    public int getType()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        int $i1, $i2;
        org.apache.poi.hwpf.sprm.SprmOperation r0;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmOperation;

        $r1 = <org.apache.poi.hwpf.sprm.SprmOperation: org.apache.poi.util.BitField BITFIELD_TYPE>;

        $s0 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: short _value>;

        $i2 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int getValue(int)>($i2);

        return $i1;
    }

    private int initSize(short)
    {
        byte[] $r1, $r2;
        short s2, $s3, $s10, $s22;
        byte $b9;
        int $i0, i1, $i4, $i5, $i6, $i7, $i8, $i11, $i12, $i13, $i15, $i16, $i18, $i20, $i21, $i23;
        java.lang.IllegalArgumentException $r4;
        org.apache.poi.hwpf.sprm.SprmOperation r0;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmOperation;

        s2 := @parameter0: short;

        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getSizeCode()>();

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label4;
            case 7: goto label7;
            default: goto label8;
        };

     label1:
        return 3;

     label2:
        return 4;

     label3:
        return 6;

     label4:
        i1 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: int _gOffset>;

        $i13 = (int) s2;

        $i15 = (int) -10744;

        if $i13 == $i15 goto label5;

        $i16 = (int) s2;

        $i18 = (int) -14827;

        if $i16 != $i18 goto label6;

     label5:
        $r1 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] _grpprl>;

        $s3 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r1, i1);

        $i20 = (int) 65535;

        $i21 = (int) $s3;

        $i4 = $i20 & $i21;

        $i12 = $i4 + 3;

        $i5 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: int _gOffset>;

        $i6 = $i5 + 2;

        r0.<org.apache.poi.hwpf.sprm.SprmOperation: int _gOffset> = $i6;

        return $i12;

     label6:
        $r2 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] _grpprl>;

        $i7 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: int _gOffset>;

        $i8 = $i7 + 1;

        r0.<org.apache.poi.hwpf.sprm.SprmOperation: int _gOffset> = $i8;

        $b9 = $r2[$i7];

        $s22 = (short) $b9;

        $s10 = 255 & $s22;

        $i23 = (int) $s10;

        $i11 = $i23 + 3;

        return $i11;

     label7:
        return 5;

     label8:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SPRM contains an invalid size code");

        throw $r4;
    }

    public int size()
    {
        int $i0;
        org.apache.poi.hwpf.sprm.SprmOperation r0;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmOperation;

        $i0 = r0.<org.apache.poi.hwpf.sprm.SprmOperation: int _size>;

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.Exception $r4;
        short $s0;
        int $i1, $i2, $i3, $i5;
        java.lang.StringBuilder $r5;
        org.apache.poi.hwpf.sprm.SprmOperation r1;
        java.lang.String $r2, $r3;

        r1 := @this: org.apache.poi.hwpf.sprm.SprmOperation;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[SPRM] (0x");

        $s0 = r1.<org.apache.poi.hwpf.sprm.SprmOperation: short _value>;

        $i3 = (int) $s0;

        $i5 = (int) 65535;

        $i1 = $i3 & $i5;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

     label1:
        $i2 = virtualinvoke r1.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(error)");

     label4:
        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.apache.poi.util.BitField $r0, $r1, $r2, $r3;
        int $i1;

        <org.apache.poi.hwpf.sprm.SprmOperation: int TAP_TYPE> = 5;

        <org.apache.poi.hwpf.sprm.SprmOperation: int PAP_TYPE> = 1;

        <org.apache.poi.hwpf.sprm.SprmOperation: int TYPE_TAP> = 5;

        <org.apache.poi.hwpf.sprm.SprmOperation: int TYPE_SEP> = 4;

        <org.apache.poi.hwpf.sprm.SprmOperation: int TYPE_PIC> = 3;

        <org.apache.poi.hwpf.sprm.SprmOperation: int TYPE_CHP> = 2;

        <org.apache.poi.hwpf.sprm.SprmOperation: int TYPE_PAP> = 1;

        <org.apache.poi.hwpf.sprm.SprmOperation: short SPRM_LONG_TABLE> = -10744;

        <org.apache.poi.hwpf.sprm.SprmOperation: short SPRM_LONG_PARAGRAPH> = -14827;

        $r0 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(511);

        <org.apache.poi.hwpf.sprm.SprmOperation: org.apache.poi.util.BitField BITFIELD_OP> = $r0;

        $i1 = (int) 57344;

        $r1 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>($i1);

        <org.apache.poi.hwpf.sprm.SprmOperation: org.apache.poi.util.BitField BITFIELD_SIZECODE> = $r1;

        $r2 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(512);

        <org.apache.poi.hwpf.sprm.SprmOperation: org.apache.poi.util.BitField BITFIELD_SPECIAL> = $r2;

        $r3 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(7168);

        <org.apache.poi.hwpf.sprm.SprmOperation: org.apache.poi.util.BitField BITFIELD_TYPE> = $r3;

        return;
    }
}
