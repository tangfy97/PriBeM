public final class com.ctc.wstx.io.UTF32Reader extends com.ctc.wstx.io.BaseReader
{
    final boolean mBigEndian;
    boolean mXml11;
    char mSurrogate;
    int mCharCount;
    int mByteCount;

    public void <init>(com.ctc.wstx.api.ReaderConfig, java.io.InputStream, byte[], int, int, boolean)
    {
        byte[] r3;
        com.ctc.wstx.io.UTF32Reader r0;
        int i0, i1;
        com.ctc.wstx.api.ReaderConfig r1;
        java.io.InputStream r2;
        boolean z0;

        r0 := @this: com.ctc.wstx.io.UTF32Reader;

        r1 := @parameter0: com.ctc.wstx.api.ReaderConfig;

        r2 := @parameter1: java.io.InputStream;

        r3 := @parameter2: byte[];

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        z0 := @parameter5: boolean;

        specialinvoke r0.<com.ctc.wstx.io.BaseReader: void <init>(com.ctc.wstx.api.ReaderConfig,java.io.InputStream,byte[],int,int)>(r1, r2, r3, i0, i1);

        r0.<com.ctc.wstx.io.UTF32Reader: char mSurrogate> = 0;

        r0.<com.ctc.wstx.io.UTF32Reader: int mCharCount> = 0;

        r0.<com.ctc.wstx.io.UTF32Reader: int mByteCount> = 0;

        r0.<com.ctc.wstx.io.UTF32Reader: boolean mBigEndian> = z0;

        return;
    }

    public void setXmlCompliancy(int)
    {
        int i0;
        com.ctc.wstx.io.UTF32Reader r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.io.UTF32Reader;

        i0 := @parameter0: int;

        if i0 != 272 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<com.ctc.wstx.io.UTF32Reader: boolean mXml11> = $z0;

        return;
    }

    public int read(char[], int, int) throws java.io.IOException
    {
        byte[] $r1, $r3, $r4, $r5, $r6, $r13, $r14, $r15, $r16;
        byte $b4, $b6, $b11, $b16, $b31, $b33, $b38, $b43;
        com.ctc.wstx.io.UTF32Reader r0;
        short $s7, $s9, $s12, $s34, $s39, $s44, $s68, $s70, $s72, $s74, $s75, $s78;
        java.lang.StringBuffer $r8, $r10, $r11, $r17;
        java.lang.String $r9, $r12;
        char[] r2;
        boolean $z0, $z1, $z2, $z3;
        int i0, $i1, $i2, i3, $i5, $i8, $i10, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i27, $i29, $i30, $i32, $i35, $i36, $i37, $i40, $i41, $i42, $i45, $i47, $i48, i49, $i50, i51, i53, i54, i55, $i56, $i58, $i59, $i60, $i61, $i62, $i64, $i66, $i67, $i69, $i71, $i73, $i76, $i77, $i79, $i80, $i82, $i84, $i86, $i88, $i90, $i92;
        char $c26, $c28, $c46, $c52, $c57;

        r0 := @this: com.ctc.wstx.io.UTF32Reader;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i49 := @parameter2: int;

        $r1 = r0.<com.ctc.wstx.io.UTF32Reader: byte[] mBuffer>;

        if $r1 != null goto label01;

        $i64 = (int) -1;

        return $i64;

     label01:
        if i49 >= 1 goto label02;

        return i49;

     label02:
        if i0 < 0 goto label03;

        $i48 = i0 + i49;

        $i47 = lengthof r2;

        if $i48 <= $i47 goto label04;

     label03:
        virtualinvoke r0.<com.ctc.wstx.io.UTF32Reader: void reportBounds(char[],int,int)>(r2, i0, i49);

     label04:
        $i50 = i49 + i0;

        i51 = i0;

        $c52 = r0.<com.ctc.wstx.io.UTF32Reader: char mSurrogate>;

        if $c52 == 0 goto label05;

        i51 = i0 + 1;

        $c46 = r0.<com.ctc.wstx.io.UTF32Reader: char mSurrogate>;

        r2[i0] = $c46;

        r0.<com.ctc.wstx.io.UTF32Reader: char mSurrogate> = 0;

        goto label06;

     label05:
        $i2 = r0.<com.ctc.wstx.io.UTF32Reader: int mLength>;

        $i1 = r0.<com.ctc.wstx.io.UTF32Reader: int mPtr>;

        i53 = $i2 - $i1;

        if i53 >= 4 goto label06;

        $z3 = specialinvoke r0.<com.ctc.wstx.io.UTF32Reader: boolean loadMore(int)>(i53);

        if $z3 != 0 goto label06;

        $i66 = (int) -1;

        return $i66;

     label06:
        if i51 >= $i50 goto label17;

        i3 = r0.<com.ctc.wstx.io.UTF32Reader: int mPtr>;

        $z0 = r0.<com.ctc.wstx.io.UTF32Reader: boolean mBigEndian>;

        if $z0 == 0 goto label07;

        $r13 = r0.<com.ctc.wstx.io.UTF32Reader: byte[] mBuffer>;

        $b31 = $r13[i3];

        $i67 = (int) $b31;

        $i36 = $i67 << 24;

        $r14 = r0.<com.ctc.wstx.io.UTF32Reader: byte[] mBuffer>;

        $i32 = i3 + 1;

        $b33 = $r14[$i32];

        $s68 = (short) $b33;

        $s34 = $s68 & 255;

        $i69 = (int) $s34;

        $i35 = $i69 << 16;

        $i41 = $i36 | $i35;

        $r15 = r0.<com.ctc.wstx.io.UTF32Reader: byte[] mBuffer>;

        $i37 = i3 + 2;

        $b38 = $r15[$i37];

        $s70 = (short) $b38;

        $s39 = $s70 & 255;

        $i71 = (int) $s39;

        $i40 = $i71 << 8;

        $i45 = $i41 | $i40;

        $r16 = r0.<com.ctc.wstx.io.UTF32Reader: byte[] mBuffer>;

        $i42 = i3 + 3;

        $b43 = $r16[$i42];

        $s72 = (short) $b43;

        $s44 = $s72 & 255;

        $i73 = (int) $s44;

        i54 = $i45 | $i73;

        goto label08;

     label07:
        $r3 = r0.<com.ctc.wstx.io.UTF32Reader: byte[] mBuffer>;

        $b4 = $r3[i3];

        $s74 = (short) $b4;

        $s9 = $s74 & 255;

        $r4 = r0.<com.ctc.wstx.io.UTF32Reader: byte[] mBuffer>;

        $i5 = i3 + 1;

        $b6 = $r4[$i5];

        $s75 = (short) $b6;

        $s7 = $s75 & 255;

        $i76 = (int) $s7;

        $i8 = $i76 << 8;

        $i77 = (int) $s9;

        $i14 = $i77 | $i8;

        $r5 = r0.<com.ctc.wstx.io.UTF32Reader: byte[] mBuffer>;

        $i10 = i3 + 2;

        $b11 = $r5[$i10];

        $s78 = (short) $b11;

        $s12 = $s78 & 255;

        $i79 = (int) $s12;

        $i13 = $i79 << 16;

        $i18 = $i14 | $i13;

        $r6 = r0.<com.ctc.wstx.io.UTF32Reader: byte[] mBuffer>;

        $i15 = i3 + 3;

        $b16 = $r6[$i15];

        $i80 = (int) $b16;

        $i17 = $i80 << 24;

        i54 = $i18 | $i17;

     label08:
        $i19 = r0.<com.ctc.wstx.io.UTF32Reader: int mPtr>;

        $i20 = $i19 + 4;

        r0.<com.ctc.wstx.io.UTF32Reader: int mPtr> = $i20;

        if i54 < 127 goto label15;

        if i54 > 159 goto label10;

        $z2 = r0.<com.ctc.wstx.io.UTF32Reader: boolean mXml11>;

        if $z2 == 0 goto label15;

        if i54 == 133 goto label09;

        $i30 = i51 - i0;

        specialinvoke r0.<com.ctc.wstx.io.UTF32Reader: void reportInvalid(int,int,java.lang.String)>(i54, $i30, "(can only be included via entity in xml 1.1)");

     label09:
        i54 = 10;

        goto label15;

     label10:
        $i82 = (int) 55296;

        if i54 < $i82 goto label14;

        if i54 <= 1114111 goto label11;

        $i29 = i51 - i0;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(above ");

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(1114111);

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<com.ctc.wstx.io.UTF32Reader: void reportInvalid(int,int,java.lang.String)>(i54, $i29, $r12);

     label11:
        $i84 = (int) 65535;

        if i54 <= $i84 goto label12;

        i55 = i54 - 65536;

        $i23 = i51;

        i51 = i51 + 1;

        $i24 = i55 >> 10;

        $i86 = (int) 55296;

        $i25 = $i86 + $i24;

        $c26 = (char) $i25;

        r2[$i23] = $c26;

        $i27 = i55 & 1023;

        $i88 = (int) 56320;

        i54 = $i88 | $i27;

        if i51 < $i50 goto label15;

        $c28 = (char) i54;

        r0.<com.ctc.wstx.io.UTF32Reader: char mSurrogate> = $c28;

        goto label17;

     label12:
        $i90 = (int) 57344;

        if i54 >= $i90 goto label13;

        $i22 = i51 - i0;

        specialinvoke r0.<com.ctc.wstx.io.UTF32Reader: void reportInvalid(int,int,java.lang.String)>(i54, $i22, "(a surrogate char) ");

        goto label15;

     label13:
        $i92 = (int) 65534;

        if i54 < $i92 goto label15;

        $i21 = i51 - i0;

        specialinvoke r0.<com.ctc.wstx.io.UTF32Reader: void reportInvalid(int,int,java.lang.String)>(i54, $i21, "");

        goto label15;

     label14:
        if i54 != 8232 goto label15;

        $z1 = r0.<com.ctc.wstx.io.UTF32Reader: boolean mXml11>;

        if $z1 == 0 goto label15;

        i54 = 10;

     label15:
        $i56 = i51;

        i51 = i51 + 1;

        $c57 = (char) i54;

        r2[$i56] = $c57;

        $i58 = r0.<com.ctc.wstx.io.UTF32Reader: int mPtr>;

        $i59 = r0.<com.ctc.wstx.io.UTF32Reader: int mLength>;

        if $i58 < $i59 goto label16;

        goto label17;

     label16:
        goto label06;

     label17:
        $i60 = i51 - i0;

        $i61 = r0.<com.ctc.wstx.io.UTF32Reader: int mCharCount>;

        $i62 = $i61 + $i60;

        r0.<com.ctc.wstx.io.UTF32Reader: int mCharCount> = $i62;

        return $i60;
    }

    private void reportUnexpectedEOF(int, int) throws java.io.IOException
    {
        java.lang.StringBuffer $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        int i0, $i1, i2, i3, i4;
        java.lang.String $r12;
        com.ctc.wstx.io.UTF32Reader r0;
        java.io.CharConversionException $r1;

        r0 := @this: com.ctc.wstx.io.UTF32Reader;

        i0 := @parameter0: int;

        i4 := @parameter1: int;

        $i1 = r0.<com.ctc.wstx.io.UTF32Reader: int mByteCount>;

        i2 = $i1 + i0;

        i3 = r0.<com.ctc.wstx.io.UTF32Reader: int mCharCount>;

        $r1 = new java.io.CharConversionException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected EOF in the middle of a 4-byte UTF-32 char: got ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", needed ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", at char #");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", byte #");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.io.CharConversionException: void <init>(java.lang.String)>($r12);

        throw $r1;
    }

    private void reportInvalid(int, int, java.lang.String) throws java.io.IOException
    {
        java.lang.StringBuffer $r2, $r3, $r5, $r7, $r8, $r9, $r10, $r11, $r12;
        int $i0, $i1, $i2, i3, i4, $i5, i6, i7;
        java.lang.String $r4, r6, $r13;
        com.ctc.wstx.io.UTF32Reader r0;
        java.io.CharConversionException $r1;

        r0 := @this: com.ctc.wstx.io.UTF32Reader;

        i7 := @parameter0: int;

        i4 := @parameter1: int;

        r6 := @parameter2: java.lang.String;

        $i1 = r0.<com.ctc.wstx.io.UTF32Reader: int mByteCount>;

        $i0 = r0.<com.ctc.wstx.io.UTF32Reader: int mPtr>;

        $i2 = $i1 + $i0;

        i3 = $i2 - 1;

        $i5 = r0.<com.ctc.wstx.io.UTF32Reader: int mCharCount>;

        i6 = $i5 + i4;

        $r1 = new java.io.CharConversionException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid UTF-32 character 0x");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i7);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" at char #");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i6);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", byte #");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.io.CharConversionException: void <init>(java.lang.String)>($r13);

        throw $r1;
    }

    private boolean loadMore(int) throws java.io.IOException
    {
        byte[] $r1, $r3, $r4, $r6, $r7;
        byte $b15;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i16, $i17, $i18, $i19;
        com.ctc.wstx.io.UTF32Reader r0;
        java.io.InputStream $r2, $r5;

        r0 := @this: com.ctc.wstx.io.UTF32Reader;

        i0 := @parameter0: int;

        $i3 = r0.<com.ctc.wstx.io.UTF32Reader: int mByteCount>;

        $i1 = r0.<com.ctc.wstx.io.UTF32Reader: int mLength>;

        $i2 = $i1 - i0;

        $i4 = $i3 + $i2;

        r0.<com.ctc.wstx.io.UTF32Reader: int mByteCount> = $i4;

        if i0 <= 0 goto label04;

        $i12 = r0.<com.ctc.wstx.io.UTF32Reader: int mPtr>;

        if $i12 <= 0 goto label03;

        i16 = 0;

     label01:
        if i16 >= i0 goto label02;

        $r7 = r0.<com.ctc.wstx.io.UTF32Reader: byte[] mBuffer>;

        $r6 = r0.<com.ctc.wstx.io.UTF32Reader: byte[] mBuffer>;

        $i13 = r0.<com.ctc.wstx.io.UTF32Reader: int mPtr>;

        $i14 = $i13 + i16;

        $b15 = $r6[$i14];

        $r7[i16] = $b15;

        i16 = i16 + 1;

        goto label01;

     label02:
        r0.<com.ctc.wstx.io.UTF32Reader: int mPtr> = 0;

     label03:
        r0.<com.ctc.wstx.io.UTF32Reader: int mLength> = i0;

        goto label07;

     label04:
        r0.<com.ctc.wstx.io.UTF32Reader: int mPtr> = 0;

        $r2 = r0.<com.ctc.wstx.io.UTF32Reader: java.io.InputStream mIn>;

        $r1 = r0.<com.ctc.wstx.io.UTF32Reader: byte[] mBuffer>;

        $i5 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r1);

        if $i5 >= 1 goto label06;

        r0.<com.ctc.wstx.io.UTF32Reader: int mLength> = 0;

        if $i5 >= 0 goto label05;

        virtualinvoke r0.<com.ctc.wstx.io.UTF32Reader: void freeBuffers()>();

        return 0;

     label05:
        virtualinvoke r0.<com.ctc.wstx.io.UTF32Reader: void reportStrangeStream()>();

     label06:
        r0.<com.ctc.wstx.io.UTF32Reader: int mLength> = $i5;

     label07:
        $i17 = r0.<com.ctc.wstx.io.UTF32Reader: int mLength>;

        if $i17 >= 4 goto label10;

        $r5 = r0.<com.ctc.wstx.io.UTF32Reader: java.io.InputStream mIn>;

        $r4 = r0.<com.ctc.wstx.io.UTF32Reader: byte[] mBuffer>;

        $i9 = r0.<com.ctc.wstx.io.UTF32Reader: int mLength>;

        $r3 = r0.<com.ctc.wstx.io.UTF32Reader: byte[] mBuffer>;

        $i7 = lengthof $r3;

        $i6 = r0.<com.ctc.wstx.io.UTF32Reader: int mLength>;

        $i8 = $i7 - $i6;

        $i10 = virtualinvoke $r5.<java.io.InputStream: int read(byte[],int,int)>($r4, $i9, $i8);

        if $i10 >= 1 goto label09;

        if $i10 >= 0 goto label08;

        virtualinvoke r0.<com.ctc.wstx.io.UTF32Reader: void freeBuffers()>();

        $i11 = r0.<com.ctc.wstx.io.UTF32Reader: int mLength>;

        specialinvoke r0.<com.ctc.wstx.io.UTF32Reader: void reportUnexpectedEOF(int,int)>($i11, 4);

     label08:
        virtualinvoke r0.<com.ctc.wstx.io.UTF32Reader: void reportStrangeStream()>();

     label09:
        $i18 = r0.<com.ctc.wstx.io.UTF32Reader: int mLength>;

        $i19 = $i18 + $i10;

        r0.<com.ctc.wstx.io.UTF32Reader: int mLength> = $i19;

        goto label07;

     label10:
        return 1;
    }
}
