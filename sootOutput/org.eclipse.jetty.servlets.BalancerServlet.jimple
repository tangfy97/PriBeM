public class org.eclipse.jetty.servlets.BalancerServlet extends org.eclipse.jetty.servlets.ProxyServlet
{
    private static final java.lang.String BALANCER_MEMBER_PREFIX;
    private static final java.util.List FORBIDDEN_CONFIG_PARAMETERS;
    private static final java.util.List REVERSE_PROXY_HEADERS;
    private static final java.lang.String JSESSIONID;
    private static final java.lang.String JSESSIONID_URL_PREFIX;
    private boolean _stickySessions;
    private java.util.Set _balancerMembers;
    private boolean _proxyPassReverse;
    private org.eclipse.jetty.servlets.BalancerServlet$RoundRobinIterator _roundRobinIterator;

    public void <init>()
    {
        org.eclipse.jetty.servlets.BalancerServlet r0;
        java.util.HashSet $r1;

        r0 := @this: org.eclipse.jetty.servlets.BalancerServlet;

        specialinvoke r0.<org.eclipse.jetty.servlets.ProxyServlet: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.eclipse.jetty.servlets.BalancerServlet: java.util.Set _balancerMembers> = $r1;

        return;
    }

    public void init(javax.servlet.ServletConfig) throws javax.servlet.ServletException
    {
        org.eclipse.jetty.servlets.BalancerServlet r0;
        javax.servlet.ServletConfig r1;

        r0 := @this: org.eclipse.jetty.servlets.BalancerServlet;

        r1 := @parameter0: javax.servlet.ServletConfig;

        specialinvoke r0.<org.eclipse.jetty.servlets.BalancerServlet: void validateConfig(javax.servlet.ServletConfig)>(r1);

        specialinvoke r0.<org.eclipse.jetty.servlets.ProxyServlet: void init(javax.servlet.ServletConfig)>(r1);

        specialinvoke r0.<org.eclipse.jetty.servlets.BalancerServlet: void initStickySessions(javax.servlet.ServletConfig)>(r1);

        specialinvoke r0.<org.eclipse.jetty.servlets.BalancerServlet: void initBalancers(javax.servlet.ServletConfig)>(r1);

        specialinvoke r0.<org.eclipse.jetty.servlets.BalancerServlet: void initProxyPassReverse(javax.servlet.ServletConfig)>(r1);

        specialinvoke r0.<org.eclipse.jetty.servlets.BalancerServlet: void postInit()>();

        return;
    }

    private void validateConfig(javax.servlet.ServletConfig) throws javax.servlet.ServletException
    {
        java.util.Enumeration $r1;
        java.util.ArrayList $r2;
        java.lang.String r5, $r13, $r15;
        boolean $z0, $z1;
        javax.servlet.ServletConfig r0;
        java.util.Iterator $r3;
        org.eclipse.jetty.servlets.BalancerServlet r11;
        java.util.List $r6;
        javax.servlet.UnavailableException $r7;
        java.lang.Object $r4;
        java.lang.StringBuilder $r8, $r9, $r10, $r14;
        java.lang.Class $r12;

        r11 := @this: org.eclipse.jetty.servlets.BalancerServlet;

        r0 := @parameter0: javax.servlet.ServletConfig;

        $r1 = interfaceinvoke r0.<javax.servlet.ServletConfig: java.util.Enumeration getInitParameterNames()>();

        $r2 = staticinvoke <java.util.Collections: java.util.ArrayList list(java.util.Enumeration)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $r6 = <org.eclipse.jetty.servlets.BalancerServlet: java.util.List FORBIDDEN_CONFIG_PARAMETERS>;

        $z1 = interfaceinvoke $r6.<java.util.List: boolean contains(java.lang.Object)>(r5);

        if $z1 == 0 goto label2;

        $r7 = new javax.servlet.UnavailableException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not supported in ");

        $r12 = virtualinvoke r11.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<javax.servlet.UnavailableException: void <init>(java.lang.String)>($r15);

        throw $r7;

     label2:
        goto label1;

     label3:
        return;
    }

    private void initStickySessions(javax.servlet.ServletConfig) throws javax.servlet.ServletException
    {
        javax.servlet.ServletConfig r1;
        org.eclipse.jetty.servlets.BalancerServlet r0;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlets.BalancerServlet;

        r1 := @parameter0: javax.servlet.ServletConfig;

        $r2 = "true";

        $r3 = interfaceinvoke r1.<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>("StickySessions");

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        r0.<org.eclipse.jetty.servlets.BalancerServlet: boolean _stickySessions> = $z0;

        return;
    }

    private void initBalancers(javax.servlet.ServletConfig) throws javax.servlet.ServletException
    {
        org.eclipse.jetty.servlets.BalancerServlet$BalancerMember $r18;
        int $i0;
        java.lang.String r5, $r10, $r11, $r16, $r17;
        boolean $z0;
        javax.servlet.ServletConfig r1;
        java.util.Iterator $r3;
        org.eclipse.jetty.servlets.BalancerServlet r0;
        java.util.Set $r2, $r19;
        javax.servlet.UnavailableException $r12;
        java.lang.Object $r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r13, $r14, $r15;

        r0 := @this: org.eclipse.jetty.servlets.BalancerServlet;

        r1 := @parameter0: javax.servlet.ServletConfig;

        $r2 = specialinvoke r0.<org.eclipse.jetty.servlets.BalancerServlet: java.util.Set getBalancerNames(javax.servlet.ServletConfig)>(r1);

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BalancerMember.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".ProxyTo");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = interfaceinvoke r1.<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>($r10);

        if $r11 == null goto label2;

        $r17 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r17.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

     label2:
        $r12 = new javax.servlet.UnavailableException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" parameter is empty.");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<javax.servlet.UnavailableException: void <init>(java.lang.String)>($r16);

        throw $r12;

     label3:
        $r19 = r0.<org.eclipse.jetty.servlets.BalancerServlet: java.util.Set _balancerMembers>;

        $r18 = new org.eclipse.jetty.servlets.BalancerServlet$BalancerMember;

        specialinvoke $r18.<org.eclipse.jetty.servlets.BalancerServlet$BalancerMember: void <init>(java.lang.String,java.lang.String)>(r5, $r11);

        interfaceinvoke $r19.<java.util.Set: boolean add(java.lang.Object)>($r18);

        goto label1;

     label4:
        return;
    }

    private void initProxyPassReverse(javax.servlet.ServletConfig)
    {
        javax.servlet.ServletConfig r1;
        org.eclipse.jetty.servlets.BalancerServlet r0;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlets.BalancerServlet;

        r1 := @parameter0: javax.servlet.ServletConfig;

        $r2 = "true";

        $r3 = interfaceinvoke r1.<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>("ProxyPassReverse");

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        r0.<org.eclipse.jetty.servlets.BalancerServlet: boolean _proxyPassReverse> = $z0;

        return;
    }

    private void postInit()
    {
        org.eclipse.jetty.servlets.BalancerServlet r0;
        java.util.Set $r2;
        org.eclipse.jetty.servlets.BalancerServlet$RoundRobinIterator $r1;

        r0 := @this: org.eclipse.jetty.servlets.BalancerServlet;

        $r1 = new org.eclipse.jetty.servlets.BalancerServlet$RoundRobinIterator;

        $r2 = r0.<org.eclipse.jetty.servlets.BalancerServlet: java.util.Set _balancerMembers>;

        specialinvoke $r1.<org.eclipse.jetty.servlets.BalancerServlet$RoundRobinIterator: void <init>(java.util.Collection)>($r2);

        r0.<org.eclipse.jetty.servlets.BalancerServlet: org.eclipse.jetty.servlets.BalancerServlet$RoundRobinIterator _roundRobinIterator> = $r1;

        return;
    }

    private java.util.Set getBalancerNames(javax.servlet.ServletConfig) throws javax.servlet.ServletException
    {
        java.util.Enumeration $r2;
        java.util.ArrayList $r3;
        java.util.HashSet $r0;
        int $i0, $i1, $i2;
        java.lang.String r6, $r7, $r8, $r9, $r14;
        boolean $z0, $z1;
        javax.servlet.ServletConfig r1;
        java.util.Iterator $r4;
        org.eclipse.jetty.servlets.BalancerServlet r15;
        javax.servlet.UnavailableException $r10;
        java.lang.Object $r5;
        java.lang.StringBuilder $r11, $r12, $r13;

        r15 := @this: org.eclipse.jetty.servlets.BalancerServlet;

        r1 := @parameter0: javax.servlet.ServletConfig;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r2 = interfaceinvoke r1.<javax.servlet.ServletConfig: java.util.Enumeration getInitParameterNames()>();

        $r3 = staticinvoke <java.util.Collections: java.util.ArrayList list(java.util.Enumeration)>($r2);

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $z0 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>("BalancerMember.");

        if $z0 != 0 goto label2;

        goto label1;

     label2:
        $i0 = virtualinvoke r6.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        $r7 = "BalancerMember.";

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i0 > $i1 goto label3;

        $r10 = new javax.servlet.UnavailableException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" parameter does not provide a balancer member name");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<javax.servlet.UnavailableException: void <init>(java.lang.String)>($r14);

        throw $r10;

     label3:
        $r8 = "BalancerMember.";

        $i2 = virtualinvoke $r8.<java.lang.String: int length()>();

        $r9 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>($i2, $i0);

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r9);

        goto label1;

     label4:
        return $r0;
    }

    protected org.eclipse.jetty.http.HttpURI proxyHttpURI(javax.servlet.http.HttpServletRequest, java.lang.String) throws java.net.MalformedURLException
    {
        org.eclipse.jetty.servlets.BalancerServlet$BalancerMember $r2;
        java.net.URISyntaxException $r14;
        javax.servlet.http.HttpServletRequest r1;
        org.eclipse.jetty.http.HttpURI $r12;
        java.net.URI $r3, $r11;
        java.lang.String $r5, r8, $r10, $r13, $r16;
        java.net.MalformedURLException $r15;
        org.eclipse.jetty.servlets.BalancerServlet r0;
        java.lang.StringBuilder $r4, $r6, $r7, $r9;

        r0 := @this: org.eclipse.jetty.servlets.BalancerServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r8 := @parameter1: java.lang.String;

        $r2 = specialinvoke r0.<org.eclipse.jetty.servlets.BalancerServlet: org.eclipse.jetty.servlets.BalancerServlet$BalancerMember selectBalancerMember(javax.servlet.http.HttpServletRequest)>(r1);

     label1:
        $r3 = new java.net.URI;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r2.<org.eclipse.jetty.servlets.BalancerServlet$BalancerMember: java.lang.String getProxyTo()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.net.URI: void <init>(java.lang.String)>($r10);

        $r11 = virtualinvoke $r3.<java.net.URI: java.net.URI normalize()>();

        $r12 = new org.eclipse.jetty.http.HttpURI;

        $r13 = virtualinvoke $r11.<java.net.URI: java.lang.String toString()>();

        specialinvoke $r12.<org.eclipse.jetty.http.HttpURI: void <init>(java.lang.String)>($r13);

     label2:
        return $r12;

     label3:
        $r14 := @caughtexception;

        $r15 = new java.net.MalformedURLException;

        $r16 = virtualinvoke $r14.<java.net.URISyntaxException: java.lang.String getMessage()>();

        specialinvoke $r15.<java.net.MalformedURLException: void <init>(java.lang.String)>($r16);

        throw $r15;

        catch java.net.URISyntaxException from label1 to label2 with label3;
    }

    private org.eclipse.jetty.servlets.BalancerServlet$BalancerMember selectBalancerMember(javax.servlet.http.HttpServletRequest)
    {
        org.eclipse.jetty.servlets.BalancerServlet$BalancerMember $r3, $r5;
        javax.servlet.http.HttpServletRequest r1;
        org.eclipse.jetty.servlets.BalancerServlet r0;
        org.eclipse.jetty.servlets.BalancerServlet$RoundRobinIterator $r4;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlets.BalancerServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        $z0 = r0.<org.eclipse.jetty.servlets.BalancerServlet: boolean _stickySessions>;

        if $z0 == 0 goto label1;

        $r2 = specialinvoke r0.<org.eclipse.jetty.servlets.BalancerServlet: java.lang.String getBalancerMemberNameFromSessionId(javax.servlet.http.HttpServletRequest)>(r1);

        if $r2 == null goto label1;

        $r3 = specialinvoke r0.<org.eclipse.jetty.servlets.BalancerServlet: org.eclipse.jetty.servlets.BalancerServlet$BalancerMember findBalancerMemberByName(java.lang.String)>($r2);

        if $r3 == null goto label1;

        return $r3;

     label1:
        $r4 = r0.<org.eclipse.jetty.servlets.BalancerServlet: org.eclipse.jetty.servlets.BalancerServlet$RoundRobinIterator _roundRobinIterator>;

        $r5 = virtualinvoke $r4.<org.eclipse.jetty.servlets.BalancerServlet$RoundRobinIterator: org.eclipse.jetty.servlets.BalancerServlet$BalancerMember next()>();

        return $r5;
    }

    private org.eclipse.jetty.servlets.BalancerServlet$BalancerMember findBalancerMemberByName(java.lang.String)
    {
        org.eclipse.jetty.servlets.BalancerServlet$BalancerMember $r0, r6;
        java.util.Iterator $r4;
        org.eclipse.jetty.servlets.BalancerServlet r2;
        java.util.Set $r3;
        java.lang.Object $r5;
        java.lang.String r1;
        boolean $z0, $z1;

        r2 := @this: org.eclipse.jetty.servlets.BalancerServlet;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.eclipse.jetty.servlets.BalancerServlet$BalancerMember;

        specialinvoke $r0.<org.eclipse.jetty.servlets.BalancerServlet$BalancerMember: void <init>(java.lang.String,java.lang.String)>(r1, "");

        $r3 = r2.<org.eclipse.jetty.servlets.BalancerServlet: java.util.Set _balancerMembers>;

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.eclipse.jetty.servlets.BalancerServlet$BalancerMember) $r5;

        $z1 = virtualinvoke r6.<org.eclipse.jetty.servlets.BalancerServlet$BalancerMember: boolean equals(java.lang.Object)>($r0);

        if $z1 == 0 goto label2;

        return r6;

     label2:
        goto label1;

     label3:
        return null;
    }

    private java.lang.String getBalancerMemberNameFromSessionId(javax.servlet.http.HttpServletRequest)
    {
        javax.servlet.http.HttpServletRequest r1;
        org.eclipse.jetty.servlets.BalancerServlet r0;
        java.lang.String $r2, r3;

        r0 := @this: org.eclipse.jetty.servlets.BalancerServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        $r2 = specialinvoke r0.<org.eclipse.jetty.servlets.BalancerServlet: java.lang.String getBalancerMemberNameFromSessionCookie(javax.servlet.http.HttpServletRequest)>(r1);

        r3 = $r2;

        if $r2 != null goto label1;

        r3 = specialinvoke r0.<org.eclipse.jetty.servlets.BalancerServlet: java.lang.String getBalancerMemberNameFromURL(javax.servlet.http.HttpServletRequest)>(r1);

     label1:
        return r3;
    }

    private java.lang.String getBalancerMemberNameFromSessionCookie(javax.servlet.http.HttpServletRequest)
    {
        org.eclipse.jetty.servlets.BalancerServlet r5;
        javax.servlet.http.Cookie[] $r1;
        javax.servlet.http.HttpServletRequest r0;
        int i0, i1;
        java.lang.String $r3, $r4, $r6, r7;
        javax.servlet.http.Cookie r2;
        boolean $z0;

        r5 := @this: org.eclipse.jetty.servlets.BalancerServlet;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: javax.servlet.http.Cookie[] getCookies()>();

        r7 = null;

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = $r1[i1];

        $r3 = "jsessionid";

        $r4 = virtualinvoke r2.<javax.servlet.http.Cookie: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        if $z0 == 0 goto label2;

        $r6 = virtualinvoke r2.<javax.servlet.http.Cookie: java.lang.String getValue()>();

        r7 = specialinvoke r5.<org.eclipse.jetty.servlets.BalancerServlet: java.lang.String extractBalancerMemberNameFromSessionId(java.lang.String)>($r6);

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r7;
    }

    private java.lang.String getBalancerMemberNameFromURL(javax.servlet.http.HttpServletRequest)
    {
        org.eclipse.jetty.servlets.BalancerServlet r3;
        javax.servlet.http.HttpServletRequest r0;
        int $i0, $i1, $i3;
        java.lang.String $r1, $r2, $r4, $r5, r6;
        boolean $z0;

        r3 := @this: org.eclipse.jetty.servlets.BalancerServlet;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r6 = null;

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(java.lang.String)>(";");

        $i3 = (int) -1;

        if $i0 == $i3 goto label1;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("jsessionid=");

        if $z0 == 0 goto label1;

        $r4 = "jsessionid=";

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        $r5 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i1);

        r6 = specialinvoke r3.<org.eclipse.jetty.servlets.BalancerServlet: java.lang.String extractBalancerMemberNameFromSessionId(java.lang.String)>($r5);

     label1:
        return r6;
    }

    private java.lang.String extractBalancerMemberNameFromSessionId(java.lang.String)
    {
        org.eclipse.jetty.servlets.BalancerServlet r2;
        int $i0, $i1, $i2, $i4;
        java.lang.String r0, $r1, r3, $r4;

        r2 := @this: org.eclipse.jetty.servlets.BalancerServlet;

        r0 := @parameter0: java.lang.String;

        r3 = null;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        $i4 = (int) -1;

        if $i0 == $i4 goto label3;

        $i1 = $i0 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i2 <= 0 goto label1;

        $r4 = $r1;

        goto label2;

     label1:
        $r4 = null;

     label2:
        r3 = $r4;

     label3:
        return r3;
    }

    protected java.lang.String filterResponseHeaderValue(java.lang.String, java.lang.String, javax.servlet.http.HttpServletRequest)
    {
        org.eclipse.jetty.server.Request r6;
        java.net.URL $r13;
        javax.servlet.http.HttpServletRequest r5;
        org.eclipse.jetty.http.HttpURI $r4;
        java.lang.String r1, r2, $r9, $r11, $r14;
        java.net.URI $r7, $r12;
        boolean $z0, $z1, $z2, $z3;
        org.eclipse.jetty.servlets.BalancerServlet r0;
        java.lang.Exception $r15;
        java.util.List $r3;
        java.lang.StringBuilder $r8, $r10;
        org.eclipse.jetty.util.log.Logger $r16;

        r0 := @this: org.eclipse.jetty.servlets.BalancerServlet;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r5 := @parameter2: javax.servlet.http.HttpServletRequest;

        $z0 = r0.<org.eclipse.jetty.servlets.BalancerServlet: boolean _proxyPassReverse>;

        if $z0 == 0 goto label4;

        $r3 = <org.eclipse.jetty.servlets.BalancerServlet: java.util.List REVERSE_PROXY_HEADERS>;

        $z1 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>(r2);

        if $z1 == 0 goto label4;

        $r4 = new org.eclipse.jetty.http.HttpURI;

        specialinvoke $r4.<org.eclipse.jetty.http.HttpURI: void <init>(java.lang.String)>(r1);

        $z2 = specialinvoke r0.<org.eclipse.jetty.servlets.BalancerServlet: boolean isAbsoluteLocation(org.eclipse.jetty.http.HttpURI)>($r4);

        if $z2 == 0 goto label4;

        $z3 = specialinvoke r0.<org.eclipse.jetty.servlets.BalancerServlet: boolean isBackendLocation(org.eclipse.jetty.http.HttpURI)>($r4);

        if $z3 == 0 goto label4;

        r6 = (org.eclipse.jetty.server.Request) r5;

     label1:
        $r7 = new java.net.URI;

        $r8 = virtualinvoke r6.<org.eclipse.jetty.server.Request: java.lang.StringBuilder getRootURL()>();

        $r9 = virtualinvoke $r4.<org.eclipse.jetty.http.HttpURI: java.lang.String getCompletePath()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.net.URI: void <init>(java.lang.String)>($r11);

        $r12 = virtualinvoke $r7.<java.net.URI: java.net.URI normalize()>();

        $r13 = virtualinvoke $r12.<java.net.URI: java.net.URL toURL()>();

        $r14 = virtualinvoke $r13.<java.net.URL: java.lang.String toString()>();

     label2:
        return $r14;

     label3:
        $r15 := @caughtexception;

        $r16 = r0.<org.eclipse.jetty.servlets.BalancerServlet: org.eclipse.jetty.util.log.Logger _log>;

        interfaceinvoke $r16.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("Not filtering header response", $r15);

        return r1;

     label4:
        return r1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private boolean isBackendLocation(org.eclipse.jetty.http.HttpURI)
    {
        org.eclipse.jetty.servlets.BalancerServlet$BalancerMember r4;
        org.eclipse.jetty.http.HttpURI $r5, r7;
        int $i0, $i1;
        java.lang.String $r6, $r8, $r9, $r10;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r2;
        org.eclipse.jetty.servlets.BalancerServlet r0;
        java.util.Set $r1;
        java.lang.Object $r3;

        r0 := @this: org.eclipse.jetty.servlets.BalancerServlet;

        r7 := @parameter0: org.eclipse.jetty.http.HttpURI;

        $r1 = r0.<org.eclipse.jetty.servlets.BalancerServlet: java.util.Set _balancerMembers>;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.eclipse.jetty.servlets.BalancerServlet$BalancerMember) $r3;

        $r5 = virtualinvoke r4.<org.eclipse.jetty.servlets.BalancerServlet$BalancerMember: org.eclipse.jetty.http.HttpURI getBackendURI()>();

        $r6 = virtualinvoke $r5.<org.eclipse.jetty.http.HttpURI: java.lang.String getHost()>();

        $r8 = virtualinvoke r7.<org.eclipse.jetty.http.HttpURI: java.lang.String getHost()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label2;

        $r9 = virtualinvoke $r5.<org.eclipse.jetty.http.HttpURI: java.lang.String getScheme()>();

        $r10 = virtualinvoke r7.<org.eclipse.jetty.http.HttpURI: java.lang.String getScheme()>();

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z2 == 0 goto label2;

        $i0 = virtualinvoke $r5.<org.eclipse.jetty.http.HttpURI: int getPort()>();

        $i1 = virtualinvoke r7.<org.eclipse.jetty.http.HttpURI: int getPort()>();

        if $i0 != $i1 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    private boolean isAbsoluteLocation(org.eclipse.jetty.http.HttpURI)
    {
        org.eclipse.jetty.http.HttpURI r0;
        org.eclipse.jetty.servlets.BalancerServlet r2;
        java.lang.String $r1;
        boolean $z0;

        r2 := @this: org.eclipse.jetty.servlets.BalancerServlet;

        r0 := @parameter0: org.eclipse.jetty.http.HttpURI;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.http.HttpURI: java.lang.String getHost()>();

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getHostHeader()
    {
        java.lang.UnsupportedOperationException $r0;
        org.eclipse.jetty.servlets.BalancerServlet r3;
        java.lang.StringBuilder $r1, $r2, $r6;
        java.lang.Class $r4;
        java.lang.String $r5, $r7;

        r3 := @this: org.eclipse.jetty.servlets.BalancerServlet;

        $r0 = new java.lang.UnsupportedOperationException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HostHeader not supported in ");

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r0;
    }

    public void setHostHeader(java.lang.String)
    {
        java.lang.UnsupportedOperationException $r0;
        org.eclipse.jetty.servlets.BalancerServlet r3;
        java.lang.StringBuilder $r1, $r2, $r6;
        java.lang.Class $r4;
        java.lang.String $r5, $r7, r8;

        r3 := @this: org.eclipse.jetty.servlets.BalancerServlet;

        r8 := @parameter0: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HostHeader not supported in ");

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r0;
    }

    public boolean validateDestination(java.lang.String, java.lang.String)
    {
        org.eclipse.jetty.servlets.BalancerServlet r0;
        java.lang.String r1, r2;

        r0 := @this: org.eclipse.jetty.servlets.BalancerServlet;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return 1;
    }

    static void <clinit>()
    {
        java.util.List $r1, $r3;
        java.util.LinkedList $r0, $r2;

        <org.eclipse.jetty.servlets.BalancerServlet: java.lang.String JSESSIONID_URL_PREFIX> = "jsessionid=";

        <org.eclipse.jetty.servlets.BalancerServlet: java.lang.String JSESSIONID> = "jsessionid";

        <org.eclipse.jetty.servlets.BalancerServlet: java.lang.String BALANCER_MEMBER_PREFIX> = "BalancerMember.";

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("HostHeader");

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("whiteList");

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("blackList");

        $r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);

        <org.eclipse.jetty.servlets.BalancerServlet: java.util.List FORBIDDEN_CONFIG_PARAMETERS> = $r1;

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("Location");

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("Content-Location");

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("URI");

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        <org.eclipse.jetty.servlets.BalancerServlet: java.util.List REVERSE_PROXY_HEADERS> = $r3;

        return;
    }
}
