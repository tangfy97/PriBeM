class com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor extends com.google.gxp.compiler.base.ExhaustiveExpressionVisitor implements com.google.gxp.compiler.base.CallVisitor
{
    private final com.google.gxp.compiler.alerts.AlertSink alertSink;
    private boolean visible;
    private boolean insideMsg;
    private boolean insidePh;
    private boolean insideNoMsg;
    private static final java.util.regex.Pattern LOCALE_INDEPENDENT_PATTERN;
    private static final com.google.gxp.compiler.base.TypeVisitor TYPE_VISITOR;

    void <init>(com.google.gxp.compiler.alerts.AlertSink)
    {
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r0;
        com.google.gxp.compiler.alerts.AlertSink r1, $r3;
        java.lang.Object $r2;

        r0 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.alerts.AlertSink;

        specialinvoke r0.<com.google.gxp.compiler.base.ExhaustiveExpressionVisitor: void <init>()>();

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean visible> = 1;

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean insideMsg> = 0;

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean insidePh> = 0;

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean insideNoMsg> = 0;

        $r2 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (com.google.gxp.compiler.alerts.AlertSink) $r2;

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink> = $r3;

        return;
    }

    public com.google.gxp.compiler.base.Template visitTemplate(com.google.gxp.compiler.base.Template)
    {
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r5, $r9;
        java.util.Iterator $r3;
        com.google.gxp.compiler.schema.Schema $r4;
        com.google.gxp.compiler.base.Type $r8;
        java.util.List $r2;
        com.google.gxp.compiler.base.Parameter r7;
        java.lang.Object $r6;
        boolean z0, $z1, $z2, $z3;
        com.google.gxp.compiler.base.Template r1;

        r0 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.Template;

        z0 = r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean visible>;

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.base.Template: java.util.List getParameters()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.google.gxp.compiler.base.Parameter) $r6;

        $r8 = virtualinvoke r7.<com.google.gxp.compiler.base.Parameter: com.google.gxp.compiler.base.Type getType()>();

        $z3 = staticinvoke <com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean isTypeVisible(com.google.gxp.compiler.base.Type)>($r8);

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean visible> = $z3;

        $r9 = virtualinvoke r7.<com.google.gxp.compiler.base.Parameter: com.google.gxp.compiler.base.Expression getDefaultValue()>();

        if $r9 == null goto label2;

        virtualinvoke $r9.<com.google.gxp.compiler.base.Expression: java.lang.Object acceptVisitor(com.google.gxp.compiler.base.ExpressionVisitor)>(r0);

     label2:
        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean visible> = z0;

        goto label1;

     label3:
        $r4 = virtualinvoke r1.<com.google.gxp.compiler.base.Template: com.google.gxp.compiler.schema.Schema getSchema()>();

        $z2 = staticinvoke <com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean isSchemaVisible(com.google.gxp.compiler.schema.Schema)>($r4);

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean visible> = $z2;

        $r5 = virtualinvoke r1.<com.google.gxp.compiler.base.Template: com.google.gxp.compiler.base.Expression getContent()>();

        virtualinvoke $r5.<com.google.gxp.compiler.base.Expression: java.lang.Object acceptVisitor(com.google.gxp.compiler.base.ExpressionVisitor)>(r0);

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean visible> = z0;

        return r1;
    }

    private static boolean isLocaleIndependent(java.lang.String)
    {
        java.util.regex.Matcher $r2;
        java.lang.String r0;
        java.util.regex.Pattern $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: java.util.regex.Pattern LOCALE_INDEPENDENT_PATTERN>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>();

        return $z0;
    }

    public com.google.gxp.compiler.base.Expression visitStringConstant(com.google.gxp.compiler.base.StringConstant)
    {
        com.google.gxp.compiler.alerts.SourcePosition $r5;
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r0;
        com.google.gxp.compiler.i18ncheck.UnextractableContentAlert $r3;
        com.google.gxp.compiler.base.StringConstant r1;
        com.google.gxp.compiler.alerts.AlertSink $r4;
        java.lang.String $r2, $r6;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.StringConstant;

        $z0 = r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean visible>;

        if $z0 == 0 goto label2;

        $z1 = r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean insideMsg>;

        if $z1 == 0 goto label1;

        $z4 = r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean insidePh>;

        if $z4 == 0 goto label2;

     label1:
        $z2 = r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean insideNoMsg>;

        if $z2 != 0 goto label2;

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.base.StringConstant: java.lang.String evaluate()>();

        $z3 = staticinvoke <com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean isLocaleIndependent(java.lang.String)>($r2);

        if $z3 != 0 goto label2;

        $r4 = r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r3 = new com.google.gxp.compiler.i18ncheck.UnextractableContentAlert;

        $r5 = virtualinvoke r1.<com.google.gxp.compiler.base.StringConstant: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r6 = virtualinvoke r1.<com.google.gxp.compiler.base.StringConstant: java.lang.String getDisplayName()>();

        specialinvoke $r3.<com.google.gxp.compiler.i18ncheck.UnextractableContentAlert: void <init>(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String)>($r5, $r6);

        interfaceinvoke $r4.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r3);

     label2:
        return r1;
    }

    public com.google.gxp.compiler.base.Expression visitAbbrExpression(com.google.gxp.compiler.base.AbbrExpression)
    {
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r3, $r4;
        com.google.gxp.compiler.base.AbbrExpression r1;
        com.google.gxp.compiler.base.Type $r2;
        boolean z0, $z1;

        r0 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.AbbrExpression;

        z0 = r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean visible>;

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.base.AbbrExpression: com.google.gxp.compiler.base.Type getType()>();

        $z1 = staticinvoke <com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean isTypeVisible(com.google.gxp.compiler.base.Type)>($r2);

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean visible> = $z1;

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.AbbrExpression: com.google.gxp.compiler.base.Expression getValue()>();

        virtualinvoke r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: com.google.gxp.compiler.base.Expression apply(com.google.gxp.compiler.base.Expression)>($r3);

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean visible> = z0;

        $r4 = virtualinvoke r1.<com.google.gxp.compiler.base.AbbrExpression: com.google.gxp.compiler.base.Expression getContent()>();

        virtualinvoke r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: com.google.gxp.compiler.base.Expression apply(com.google.gxp.compiler.base.Expression)>($r4);

        return r1;
    }

    public com.google.gxp.compiler.base.Expression visitCall(com.google.gxp.compiler.base.Call)
    {
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r1;
        com.google.gxp.compiler.base.Expression $r3;
        java.lang.Object $r2;
        com.google.gxp.compiler.base.Call r0;

        r1 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r0 := @parameter0: com.google.gxp.compiler.base.Call;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.base.Call: java.lang.Object acceptCallVisitor(com.google.gxp.compiler.base.CallVisitor)>(r1);

        $r3 = (com.google.gxp.compiler.base.Expression) $r2;

        return $r3;
    }

    public com.google.gxp.compiler.base.Expression visitBoundCall(com.google.gxp.compiler.base.BoundCall)
    {
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r0;
        java.util.Map $r3;
        java.lang.String $r9;
        com.google.gxp.compiler.base.Callable $r2;
        boolean z0, $z1, $z2;
        com.google.gxp.compiler.base.BoundCall r1;
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.util.Set $r4;
        com.google.gxp.compiler.base.Type $r11;
        com.google.gxp.compiler.base.FormalParameter $r10;
        com.google.gxp.compiler.reparent.Attribute $r13;
        java.lang.Object $r6, $r8, $r12;

        r0 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.BoundCall;

        z0 = r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean visible>;

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.base.BoundCall: com.google.gxp.compiler.base.Callable getCallee()>();

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.BoundCall: java.util.Map getAttributes()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.String) $r8;

        $r10 = interfaceinvoke $r2.<com.google.gxp.compiler.base.Callable: com.google.gxp.compiler.base.FormalParameter getParameterByPrimary(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<com.google.gxp.compiler.base.FormalParameter: com.google.gxp.compiler.base.Type getType()>();

        $z2 = staticinvoke <com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean isTypeVisible(com.google.gxp.compiler.base.Type)>($r11);

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean visible> = $z2;

        $r12 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (com.google.gxp.compiler.reparent.Attribute) $r12;

        virtualinvoke r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: com.google.gxp.compiler.reparent.Attribute visitAttribute(com.google.gxp.compiler.reparent.Attribute)>($r13);

        goto label1;

     label2:
        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean visible> = z0;

        return r1;
    }

    public com.google.gxp.compiler.base.Expression visitUnboundCall(com.google.gxp.compiler.base.UnboundCall)
    {
        com.google.gxp.compiler.base.UnexpectedNodeException $r0;
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r2;
        com.google.gxp.compiler.base.UnboundCall r1;

        r2 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.UnboundCall;

        $r0 = new com.google.gxp.compiler.base.UnexpectedNodeException;

        specialinvoke $r0.<com.google.gxp.compiler.base.UnexpectedNodeException: void <init>(com.google.gxp.compiler.base.Node)>(r1);

        throw $r0;
    }

    public com.google.gxp.compiler.base.Expression visitValidatedCall(com.google.gxp.compiler.base.ValidatedCall)
    {
        com.google.gxp.compiler.base.UnexpectedNodeException $r0;
        com.google.gxp.compiler.base.ValidatedCall r1;
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r2;

        r2 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.ValidatedCall;

        $r0 = new com.google.gxp.compiler.base.UnexpectedNodeException;

        specialinvoke $r0.<com.google.gxp.compiler.base.UnexpectedNodeException: void <init>(com.google.gxp.compiler.base.Node)>(r1);

        throw $r0;
    }

    public com.google.gxp.compiler.base.Expression visitOutputElement(com.google.gxp.compiler.base.OutputElement)
    {
        com.google.gxp.compiler.schema.ElementValidator$Flag $r5;
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r6;
        com.google.gxp.compiler.schema.AttributeValidator$Flag $r11;
        com.google.gxp.compiler.schema.ElementValidator $r2;
        java.lang.String $r9;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.Iterator $r4;
        com.google.gxp.compiler.reparent.Attribute r8;
        java.util.List $r3;
        com.google.gxp.compiler.base.OutputElement r1;
        com.google.gxp.compiler.schema.AttributeValidator $r10;
        java.lang.Object $r7;

        r0 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.OutputElement;

        z0 = r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean visible>;

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.base.OutputElement: com.google.gxp.compiler.schema.ElementValidator getValidator()>();

        z1 = r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean insideMsg>;

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean insideMsg> = 0;

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.OutputElement: java.util.List getAttributes()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r7 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.google.gxp.compiler.reparent.Attribute) $r7;

        $r9 = virtualinvoke r8.<com.google.gxp.compiler.reparent.Attribute: java.lang.String getName()>();

        $r10 = virtualinvoke $r2.<com.google.gxp.compiler.schema.ElementValidator: com.google.gxp.compiler.schema.AttributeValidator getAttributeValidator(java.lang.String)>($r9);

        $r11 = <com.google.gxp.compiler.schema.AttributeValidator$Flag: com.google.gxp.compiler.schema.AttributeValidator$Flag VISIBLETEXT>;

        $z6 = virtualinvoke $r10.<com.google.gxp.compiler.schema.AttributeValidator: boolean isFlagSet(com.google.gxp.compiler.schema.AttributeValidator$Flag)>($r11);

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean visible> = $z6;

        virtualinvoke r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: com.google.gxp.compiler.reparent.Attribute visitAttribute(com.google.gxp.compiler.reparent.Attribute)>(r8);

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean visible> = z0;

        goto label1;

     label2:
        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean insideMsg> = z1;

        $z3 = r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean visible>;

        $r5 = <com.google.gxp.compiler.schema.ElementValidator$Flag: com.google.gxp.compiler.schema.ElementValidator$Flag INVISIBLEBODY>;

        $z4 = virtualinvoke $r2.<com.google.gxp.compiler.schema.ElementValidator: boolean isFlagSet(com.google.gxp.compiler.schema.ElementValidator$Flag)>($r5);

        if $z4 != 0 goto label3;

        $z7 = 1;

        goto label4;

     label3:
        $z7 = 0;

     label4:
        $z5 = $z3 & $z7;

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean visible> = $z5;

        $r6 = virtualinvoke r1.<com.google.gxp.compiler.base.OutputElement: com.google.gxp.compiler.base.Expression getContent()>();

        virtualinvoke r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: com.google.gxp.compiler.base.Expression apply(com.google.gxp.compiler.base.Expression)>($r6);

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean visible> = z0;

        return r1;
    }

    public com.google.gxp.compiler.base.Expression visitAttrBundleParam(com.google.gxp.compiler.base.AttrBundleParam)
    {
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r0;
        com.google.gxp.compiler.schema.AttributeValidator$Flag $r9;
        java.util.Map $r2;
        boolean z0, z1, $z2, $z3;
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        java.util.Set $r3;
        com.google.gxp.compiler.reparent.Attribute $r11;
        com.google.gxp.compiler.base.AttrBundleParam r1;
        com.google.gxp.compiler.schema.AttributeValidator r8;
        java.lang.Object $r5, $r7, $r10;

        r0 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.AttrBundleParam;

        z0 = r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean visible>;

        z1 = r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean insideMsg>;

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean insideMsg> = 0;

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.base.AttrBundleParam: java.util.Map getAttrs()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        r8 = (com.google.gxp.compiler.schema.AttributeValidator) $r7;

        $r9 = <com.google.gxp.compiler.schema.AttributeValidator$Flag: com.google.gxp.compiler.schema.AttributeValidator$Flag VISIBLETEXT>;

        $z3 = virtualinvoke r8.<com.google.gxp.compiler.schema.AttributeValidator: boolean isFlagSet(com.google.gxp.compiler.schema.AttributeValidator$Flag)>($r9);

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean visible> = $z3;

        $r10 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (com.google.gxp.compiler.reparent.Attribute) $r10;

        virtualinvoke r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: com.google.gxp.compiler.reparent.Attribute visitAttribute(com.google.gxp.compiler.reparent.Attribute)>($r11);

        goto label1;

     label2:
        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean visible> = z0;

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean insideMsg> = z1;

        return r1;
    }

    public com.google.gxp.compiler.base.Expression visitUnextractedMessage(com.google.gxp.compiler.base.UnextractedMessage)
    {
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r0;
        boolean z0, z1;
        com.google.gxp.compiler.base.UnextractedMessage r1;

        r0 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.UnextractedMessage;

        z0 = r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean insideMsg>;

        z1 = r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean insidePh>;

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean insideMsg> = 1;

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean insidePh> = 0;

        specialinvoke r0.<com.google.gxp.compiler.base.ExhaustiveExpressionVisitor: com.google.gxp.compiler.base.Expression visitUnextractedMessage(com.google.gxp.compiler.base.UnextractedMessage)>(r1);

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean insideMsg> = z0;

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean insidePh> = z1;

        return r1;
    }

    public com.google.gxp.compiler.base.Expression visitNoMessage(com.google.gxp.compiler.base.NoMessage)
    {
        com.google.gxp.compiler.base.NoMessage r1;
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r0;
        com.google.gxp.compiler.alerts.AlertSink $r3;
        com.google.gxp.compiler.i18ncheck.UnnecessaryNomsgWarning $r2;
        boolean $z0;

        r0 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.NoMessage;

        $z0 = r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean visible>;

        if $z0 != 0 goto label1;

        $r3 = r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r2 = new com.google.gxp.compiler.i18ncheck.UnnecessaryNomsgWarning;

        specialinvoke $r2.<com.google.gxp.compiler.i18ncheck.UnnecessaryNomsgWarning: void <init>(com.google.gxp.compiler.base.Node)>(r1);

        interfaceinvoke $r3.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r2);

     label1:
        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean insideNoMsg> = 1;

        specialinvoke r0.<com.google.gxp.compiler.base.ExhaustiveExpressionVisitor: com.google.gxp.compiler.base.Expression visitNoMessage(com.google.gxp.compiler.base.NoMessage)>(r1);

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean insideNoMsg> = 0;

        return r1;
    }

    public com.google.gxp.compiler.base.Expression visitPlaceholderStart(com.google.gxp.compiler.base.PlaceholderStart)
    {
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.PlaceholderStart r1;

        r0 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.PlaceholderStart;

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean insidePh> = 1;

        $r2 = specialinvoke r0.<com.google.gxp.compiler.base.ExhaustiveExpressionVisitor: com.google.gxp.compiler.base.Expression visitPlaceholderStart(com.google.gxp.compiler.base.PlaceholderStart)>(r1);

        return $r2;
    }

    public com.google.gxp.compiler.base.Expression visitPlaceholderEnd(com.google.gxp.compiler.base.PlaceholderEnd)
    {
        com.google.gxp.compiler.base.PlaceholderEnd r1;
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;

        r0 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.PlaceholderEnd;

        r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean insidePh> = 0;

        $r2 = specialinvoke r0.<com.google.gxp.compiler.base.ExhaustiveExpressionVisitor: com.google.gxp.compiler.base.Expression visitPlaceholderEnd(com.google.gxp.compiler.base.PlaceholderEnd)>(r1);

        return $r2;
    }

    private static boolean isSchemaVisible(com.google.gxp.compiler.schema.Schema)
    {
        com.google.gxp.compiler.schema.ContentFamily $r1, $r2, $r3, $r4;
        com.google.gxp.compiler.schema.Schema r0;
        boolean $z0;

        r0 := @parameter0: com.google.gxp.compiler.schema.Schema;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: com.google.gxp.compiler.schema.ContentFamily getContentFamily()>();

        $r2 = <com.google.gxp.compiler.schema.ContentFamily: com.google.gxp.compiler.schema.ContentFamily MARKUP>;

        if $r1 == $r2 goto label1;

        $r3 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: com.google.gxp.compiler.schema.ContentFamily getContentFamily()>();

        $r4 = <com.google.gxp.compiler.schema.ContentFamily: com.google.gxp.compiler.schema.ContentFamily PLAINTEXT>;

        if $r3 != $r4 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private static boolean isTypeVisible(com.google.gxp.compiler.base.Type)
    {
        com.google.gxp.compiler.base.TypeVisitor $r1;
        java.lang.Boolean $r3;
        java.lang.Object $r2;
        com.google.gxp.compiler.base.Type r0;
        boolean $z0;

        r0 := @parameter0: com.google.gxp.compiler.base.Type;

        $r1 = <com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: com.google.gxp.compiler.base.TypeVisitor TYPE_VISITOR>;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.base.Type: java.lang.Object acceptTypeVisitor(com.google.gxp.compiler.base.TypeVisitor)>($r1);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public volatile java.lang.Object visitTemplate(com.google.gxp.compiler.base.Template)
    {
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r0;
        com.google.gxp.compiler.base.Template r1, $r2;

        r0 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.Template;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: com.google.gxp.compiler.base.Template visitTemplate(com.google.gxp.compiler.base.Template)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitUnextractedMessage(com.google.gxp.compiler.base.UnextractedMessage)
    {
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.UnextractedMessage r1;

        r0 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.UnextractedMessage;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: com.google.gxp.compiler.base.Expression visitUnextractedMessage(com.google.gxp.compiler.base.UnextractedMessage)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitStringConstant(com.google.gxp.compiler.base.StringConstant)
    {
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.StringConstant r1;

        r0 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.StringConstant;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: com.google.gxp.compiler.base.Expression visitStringConstant(com.google.gxp.compiler.base.StringConstant)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitPlaceholderStart(com.google.gxp.compiler.base.PlaceholderStart)
    {
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.PlaceholderStart r1;

        r0 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.PlaceholderStart;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: com.google.gxp.compiler.base.Expression visitPlaceholderStart(com.google.gxp.compiler.base.PlaceholderStart)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitPlaceholderEnd(com.google.gxp.compiler.base.PlaceholderEnd)
    {
        com.google.gxp.compiler.base.PlaceholderEnd r1;
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;

        r0 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.PlaceholderEnd;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: com.google.gxp.compiler.base.Expression visitPlaceholderEnd(com.google.gxp.compiler.base.PlaceholderEnd)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitOutputElement(com.google.gxp.compiler.base.OutputElement)
    {
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.OutputElement r1;

        r0 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.OutputElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: com.google.gxp.compiler.base.Expression visitOutputElement(com.google.gxp.compiler.base.OutputElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitNoMessage(com.google.gxp.compiler.base.NoMessage)
    {
        com.google.gxp.compiler.base.NoMessage r1;
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;

        r0 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.NoMessage;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: com.google.gxp.compiler.base.Expression visitNoMessage(com.google.gxp.compiler.base.NoMessage)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitCall(com.google.gxp.compiler.base.Call)
    {
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.Call r1;

        r0 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.Call;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: com.google.gxp.compiler.base.Expression visitCall(com.google.gxp.compiler.base.Call)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitAttrBundleParam(com.google.gxp.compiler.base.AttrBundleParam)
    {
        com.google.gxp.compiler.base.AttrBundleParam r1;
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;

        r0 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.AttrBundleParam;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: com.google.gxp.compiler.base.Expression visitAttrBundleParam(com.google.gxp.compiler.base.AttrBundleParam)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitAbbrExpression(com.google.gxp.compiler.base.AbbrExpression)
    {
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.AbbrExpression r1;

        r0 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.AbbrExpression;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: com.google.gxp.compiler.base.Expression visitAbbrExpression(com.google.gxp.compiler.base.AbbrExpression)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitValidatedCall(com.google.gxp.compiler.base.ValidatedCall)
    {
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r0;
        com.google.gxp.compiler.base.ValidatedCall r1;
        com.google.gxp.compiler.base.Expression $r2;

        r0 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.ValidatedCall;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: com.google.gxp.compiler.base.Expression visitValidatedCall(com.google.gxp.compiler.base.ValidatedCall)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitBoundCall(com.google.gxp.compiler.base.BoundCall)
    {
        com.google.gxp.compiler.base.BoundCall r1;
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;

        r0 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.BoundCall;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: com.google.gxp.compiler.base.Expression visitBoundCall(com.google.gxp.compiler.base.BoundCall)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitUnboundCall(com.google.gxp.compiler.base.UnboundCall)
    {
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.UnboundCall r1;

        r0 := @this: com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.UnboundCall;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: com.google.gxp.compiler.base.Expression visitUnboundCall(com.google.gxp.compiler.base.UnboundCall)>(r1);

        return $r2;
    }

    static boolean access$000(com.google.gxp.compiler.schema.Schema)
    {
        com.google.gxp.compiler.schema.Schema r0;
        boolean $z0;

        r0 := @parameter0: com.google.gxp.compiler.schema.Schema;

        $z0 = staticinvoke <com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: boolean isSchemaVisible(com.google.gxp.compiler.schema.Schema)>(r0);

        return $z0;
    }

    static void <clinit>()
    {
        com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor$1 $r1;
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[\\s\\xa0]*");

        <com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: java.util.regex.Pattern LOCALE_INDEPENDENT_PATTERN> = $r0;

        $r1 = new com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor$1;

        specialinvoke $r1.<com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor$1: void <init>()>();

        <com.google.gxp.compiler.i18ncheck.I18nChecker$Visitor: com.google.gxp.compiler.base.TypeVisitor TYPE_VISITOR> = $r1;

        return;
    }
}
