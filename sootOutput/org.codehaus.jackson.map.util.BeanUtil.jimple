public class org.codehaus.jackson.map.util.BeanUtil extends java.lang.Object
{

    public void <init>()
    {
        org.codehaus.jackson.map.util.BeanUtil r0;

        r0 := @this: org.codehaus.jackson.map.util.BeanUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String okNameForGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        java.lang.String $r1, $r2, r3;

        r0 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.String getName()>();

        $r2 = staticinvoke <org.codehaus.jackson.map.util.BeanUtil: java.lang.String okNameForIsGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String)>(r0, $r1);

        r3 = $r2;

        if $r2 != null goto label1;

        r3 = staticinvoke <org.codehaus.jackson.map.util.BeanUtil: java.lang.String okNameForRegularGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String)>(r0, $r1);

     label1:
        return r3;
    }

    public static java.lang.String okNameForRegularGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod, java.lang.String)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r3;
        java.lang.String r0, $r1, $r2, $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4;

        r3 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        r0 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("get");

        if $z0 == 0 goto label3;

        $r1 = "getCallbacks";

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label1;

        $z4 = staticinvoke <org.codehaus.jackson.map.util.BeanUtil: boolean isCglibGetCallbacks(org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r3);

        if $z4 == 0 goto label2;

        return null;

     label1:
        $r2 = "getMetaClass";

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label2;

        $z3 = staticinvoke <org.codehaus.jackson.map.util.BeanUtil: boolean isGroovyMetaClassGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r3);

        if $z3 == 0 goto label2;

        return null;

     label2:
        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(3);

        $r5 = staticinvoke <org.codehaus.jackson.map.util.BeanUtil: java.lang.String manglePropertyName(java.lang.String)>($r4);

        return $r5;

     label3:
        return null;
    }

    public static java.lang.String okNameForIsGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod, java.lang.String)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r1;
        java.lang.Class $r2, $r5;
        java.lang.String r0, $r3, $r4;
        boolean $z0;

        r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        r0 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("is");

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r1.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class getRawType()>();

        if $r2 == class "Ljava/lang/Boolean;" goto label1;

        $r5 = <java.lang.Boolean: java.lang.Class TYPE>;

        if $r2 == $r5 goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(2);

        $r4 = staticinvoke <org.codehaus.jackson.map.util.BeanUtil: java.lang.String manglePropertyName(java.lang.String)>($r3);

        return $r4;

     label2:
        return null;
    }

    public static java.lang.String okNameForSetter(org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        java.lang.String $r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("set");

        if $z0 == 0 goto label3;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(3);

        $r3 = staticinvoke <org.codehaus.jackson.map.util.BeanUtil: java.lang.String manglePropertyName(java.lang.String)>($r2);

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = "metaClass";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $z2 = staticinvoke <org.codehaus.jackson.map.util.BeanUtil: boolean isGroovyMetaClassSetter(org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r0);

        if $z2 == 0 goto label2;

        return null;

     label2:
        return $r3;

     label3:
        return null;
    }

    protected static boolean isCglibGetCallbacks(org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        java.lang.Package $r3;
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        java.lang.Class $r1, $r2;
        java.lang.String $r4;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class getRawType()>();

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getComponentType()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Package getPackage()>();

        if $r3 == null goto label4;

        $r4 = virtualinvoke $r3.<java.lang.Package: java.lang.String getName()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("net.sf.cglib");

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("org.hibernate.repackage.cglib");

        if $z2 == 0 goto label4;

     label3:
        return 1;

     label4:
        return 0;
    }

    protected static boolean isGroovyMetaClassSetter(org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        java.lang.Package $r2;
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        java.lang.Class $r1;
        java.lang.String $r3;
        boolean $z0;

        r0 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class getParameterClass(int)>(0);

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Package getPackage()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<java.lang.Package: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("groovy.lang");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected static boolean isGroovyMetaClassGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        java.lang.Package $r2;
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        java.lang.Class $r1;
        java.lang.String $r3;
        boolean $z0, $z1;

        r0 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class getRawType()>();

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label2;

     label1:
        return 0;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Package getPackage()>();

        if $r2 == null goto label3;

        $r3 = virtualinvoke $r2.<java.lang.Package: java.lang.String getName()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("groovy.lang");

        if $z1 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    protected static java.lang.String manglePropertyName(java.lang.String)
    {
        char $c1, $c2;
        int $i0, i3, $i4, $i5;
        java.lang.StringBuilder r2, $r4;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        r2 = null;

        i3 = 0;

     label2:
        if i3 >= $i0 goto label5;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $c2 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c1);

        $i4 = (int) $c1;

        $i5 = (int) $c2;

        if $i4 != $i5 goto label3;

        goto label5;

     label3:
        if r2 != null goto label4;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(r0);

        r2 = $r4;

     label4:
        virtualinvoke r2.<java.lang.StringBuilder: void setCharAt(int,char)>(i3, $c2);

        i3 = i3 + 1;

        goto label2;

     label5:
        if r2 != null goto label6;

        $r3 = r0;

        goto label7;

     label6:
        $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label7:
        return $r3;
    }
}
