public abstract class org.apache.lucene.search.function.DocValues extends java.lang.Object
{
    private float minVal;
    private float maxVal;
    private float avgVal;
    private boolean computed;

    public void <init>()
    {
        org.apache.lucene.search.function.DocValues r0;

        r0 := @this: org.apache.lucene.search.function.DocValues;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.search.function.DocValues: float minVal> = #NaNF;

        r0.<org.apache.lucene.search.function.DocValues: float maxVal> = #NaNF;

        r0.<org.apache.lucene.search.function.DocValues: float avgVal> = #NaNF;

        r0.<org.apache.lucene.search.function.DocValues: boolean computed> = 0;

        return;
    }

    public abstract float floatVal(int);

    public int intVal(int)
    {
        org.apache.lucene.search.function.DocValues r0;
        int i0, $i1;
        float $f0;

        r0 := @this: org.apache.lucene.search.function.DocValues;

        i0 := @parameter0: int;

        $f0 = virtualinvoke r0.<org.apache.lucene.search.function.DocValues: float floatVal(int)>(i0);

        $i1 = (int) $f0;

        return $i1;
    }

    public long longVal(int)
    {
        org.apache.lucene.search.function.DocValues r0;
        int i0;
        float $f0;
        long $l1;

        r0 := @this: org.apache.lucene.search.function.DocValues;

        i0 := @parameter0: int;

        $f0 = virtualinvoke r0.<org.apache.lucene.search.function.DocValues: float floatVal(int)>(i0);

        $l1 = (long) $f0;

        return $l1;
    }

    public double doubleVal(int)
    {
        org.apache.lucene.search.function.DocValues r0;
        int i0;
        float $f0;
        double $d0;

        r0 := @this: org.apache.lucene.search.function.DocValues;

        i0 := @parameter0: int;

        $f0 = virtualinvoke r0.<org.apache.lucene.search.function.DocValues: float floatVal(int)>(i0);

        $d0 = (double) $f0;

        return $d0;
    }

    public java.lang.String strVal(int)
    {
        org.apache.lucene.search.function.DocValues r0;
        int i0;
        float $f0;
        java.lang.String $r1;

        r0 := @this: org.apache.lucene.search.function.DocValues;

        i0 := @parameter0: int;

        $f0 = virtualinvoke r0.<org.apache.lucene.search.function.DocValues: float floatVal(int)>(i0);

        $r1 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f0);

        return $r1;
    }

    public abstract java.lang.String toString(int);

    public org.apache.lucene.search.Explanation explain(int)
    {
        org.apache.lucene.search.Explanation $r0;
        org.apache.lucene.search.function.DocValues r1;
        int i0;
        float $f0;
        java.lang.String $r2;

        r1 := @this: org.apache.lucene.search.function.DocValues;

        i0 := @parameter0: int;

        $r0 = new org.apache.lucene.search.Explanation;

        $f0 = virtualinvoke r1.<org.apache.lucene.search.function.DocValues: float floatVal(int)>(i0);

        $r2 = virtualinvoke r1.<org.apache.lucene.search.function.DocValues: java.lang.String toString(int)>(i0);

        specialinvoke $r0.<org.apache.lucene.search.Explanation: void <init>(float,java.lang.String)>($f0, $r2);

        return $r0;
    }

    java.lang.Object getInnerArray()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.search.function.DocValues r1;

        r1 := @this: org.apache.lucene.search.function.DocValues;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("this optional method is for test purposes only");

        throw $r0;
    }

    private void compute()
    {
        int i0;
        boolean $z0, $z1, $z2;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        org.apache.lucene.search.function.DocValues r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, f6, $f7, $f8, $f9;

        r0 := @this: org.apache.lucene.search.function.DocValues;

        $z0 = r0.<org.apache.lucene.search.function.DocValues: boolean computed>;

        if $z0 == 0 goto label01;

        return;

     label01:
        f6 = 0.0F;

        i0 = 0;

     label02:
        $f0 = virtualinvoke r0.<org.apache.lucene.search.function.DocValues: float floatVal(int)>(i0);

     label03:
        goto label05;

     label04:
        $r1 := @caughtexception;

        goto label10;

     label05:
        f6 = f6 + $f0;

        $f1 = r0.<org.apache.lucene.search.function.DocValues: float minVal>;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f1);

        if $z1 == 0 goto label06;

        $f7 = $f0;

        goto label07;

     label06:
        $f2 = r0.<org.apache.lucene.search.function.DocValues: float minVal>;

        $f7 = staticinvoke <java.lang.Math: float min(float,float)>($f2, $f0);

     label07:
        r0.<org.apache.lucene.search.function.DocValues: float minVal> = $f7;

        $f3 = r0.<org.apache.lucene.search.function.DocValues: float maxVal>;

        $z2 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f3);

        if $z2 == 0 goto label08;

        $f8 = $f0;

        goto label09;

     label08:
        $f4 = r0.<org.apache.lucene.search.function.DocValues: float maxVal>;

        $f8 = staticinvoke <java.lang.Math: float max(float,float)>($f4, $f0);

     label09:
        r0.<org.apache.lucene.search.function.DocValues: float maxVal> = $f8;

        i0 = i0 + 1;

        goto label02;

     label10:
        if i0 != 0 goto label11;

        $f9 = #NaNF;

        goto label12;

     label11:
        $f5 = (float) i0;

        $f9 = f6 / $f5;

     label12:
        r0.<org.apache.lucene.search.function.DocValues: float avgVal> = $f9;

        r0.<org.apache.lucene.search.function.DocValues: boolean computed> = 1;

        return;

        catch java.lang.ArrayIndexOutOfBoundsException from label02 to label03 with label04;
    }

    public float getMinValue()
    {
        float $f0;
        org.apache.lucene.search.function.DocValues r0;

        r0 := @this: org.apache.lucene.search.function.DocValues;

        specialinvoke r0.<org.apache.lucene.search.function.DocValues: void compute()>();

        $f0 = r0.<org.apache.lucene.search.function.DocValues: float minVal>;

        return $f0;
    }

    public float getMaxValue()
    {
        float $f0;
        org.apache.lucene.search.function.DocValues r0;

        r0 := @this: org.apache.lucene.search.function.DocValues;

        specialinvoke r0.<org.apache.lucene.search.function.DocValues: void compute()>();

        $f0 = r0.<org.apache.lucene.search.function.DocValues: float maxVal>;

        return $f0;
    }

    public float getAverageValue()
    {
        float $f0;
        org.apache.lucene.search.function.DocValues r0;

        r0 := @this: org.apache.lucene.search.function.DocValues;

        specialinvoke r0.<org.apache.lucene.search.function.DocValues: void compute()>();

        $f0 = r0.<org.apache.lucene.search.function.DocValues: float avgVal>;

        return $f0;
    }
}
