final class kodkod.engine.fol2sat.Skolemizer$1 extends kodkod.engine.fol2sat.Skolemizer
{
    private final kodkod.util.nodes.AnnotatedNode val$annotated;
    private final java.util.Map val$source;

    void <init>(kodkod.util.nodes.AnnotatedNode, kodkod.instance.Bounds, kodkod.engine.config.Options, kodkod.util.nodes.AnnotatedNode, java.util.Map)
    {
        kodkod.engine.config.Options $r5;
        kodkod.instance.Bounds $r4;
        kodkod.engine.fol2sat.Skolemizer$1 r0;
        java.util.Map r2;
        kodkod.util.nodes.AnnotatedNode r1, $r3;

        r0 := @this: kodkod.engine.fol2sat.Skolemizer$1;

        $r3 := @parameter0: kodkod.util.nodes.AnnotatedNode;

        $r4 := @parameter1: kodkod.instance.Bounds;

        $r5 := @parameter2: kodkod.engine.config.Options;

        r1 := @parameter3: kodkod.util.nodes.AnnotatedNode;

        r2 := @parameter4: java.util.Map;

        r0.<kodkod.engine.fol2sat.Skolemizer$1: kodkod.util.nodes.AnnotatedNode val$annotated> = r1;

        r0.<kodkod.engine.fol2sat.Skolemizer$1: java.util.Map val$source> = r2;

        specialinvoke r0.<kodkod.engine.fol2sat.Skolemizer: void <init>(kodkod.util.nodes.AnnotatedNode,kodkod.instance.Bounds,kodkod.engine.config.Options,kodkod.engine.fol2sat.Skolemizer)>($r3, $r4, $r5, null);

        return;
    }

    protected kodkod.ast.Formula source(kodkod.ast.Formula, kodkod.ast.Node)
    {
        kodkod.engine.fol2sat.Skolemizer$1 r0;
        kodkod.ast.Formula r4;
        java.util.Map $r5;
        kodkod.util.nodes.AnnotatedNode $r2;
        kodkod.ast.Node r1, $r3;

        r0 := @this: kodkod.engine.fol2sat.Skolemizer$1;

        r4 := @parameter0: kodkod.ast.Formula;

        r1 := @parameter1: kodkod.ast.Node;

        $r2 = r0.<kodkod.engine.fol2sat.Skolemizer$1: kodkod.util.nodes.AnnotatedNode val$annotated>;

        $r3 = virtualinvoke $r2.<kodkod.util.nodes.AnnotatedNode: kodkod.ast.Node sourceOf(kodkod.ast.Node)>(r1);

        if r4 == $r3 goto label1;

        $r5 = r0.<kodkod.engine.fol2sat.Skolemizer$1: java.util.Map val$source>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r3);

     label1:
        return r4;
    }
}
