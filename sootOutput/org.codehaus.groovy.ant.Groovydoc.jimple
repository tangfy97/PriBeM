public class org.codehaus.groovy.ant.Groovydoc extends org.apache.tools.ant.Task
{
    private final org.codehaus.groovy.ant.LoggingHelper log;
    private org.apache.tools.ant.types.Path sourcePath;
    private java.io.File destDir;
    private java.util.List packageNames;
    private java.util.List excludePackageNames;
    private java.lang.String windowTitle;
    private boolean privateScope;
    private boolean useDefaultExcludes;
    private boolean includeNoSourcePackages;
    private java.util.List packageSets;
    private java.util.List sourceFilesToDoc;
    private java.util.List links;

    public void <init>()
    {
        org.codehaus.groovy.ant.Groovydoc r0;
        org.codehaus.groovy.ant.LoggingHelper $r1;
        java.util.ArrayList $r2, $r3, $r4, $r5, $r6;

        r0 := @this: org.codehaus.groovy.ant.Groovydoc;

        specialinvoke r0.<org.apache.tools.ant.Task: void <init>()>();

        $r1 = new org.codehaus.groovy.ant.LoggingHelper;

        specialinvoke $r1.<org.codehaus.groovy.ant.LoggingHelper: void <init>(org.apache.tools.ant.Task)>(r0);

        r0.<org.codehaus.groovy.ant.Groovydoc: org.codehaus.groovy.ant.LoggingHelper log> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.codehaus.groovy.ant.Groovydoc: java.util.List links> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.codehaus.groovy.ant.Groovydoc: java.util.List packageNames> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.codehaus.groovy.ant.Groovydoc: java.util.List excludePackageNames> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.codehaus.groovy.ant.Groovydoc: java.util.List packageSets> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<org.codehaus.groovy.ant.Groovydoc: java.util.List sourceFilesToDoc> = $r6;

        r0.<org.codehaus.groovy.ant.Groovydoc: boolean privateScope> = 0;

        r0.<org.codehaus.groovy.ant.Groovydoc: boolean useDefaultExcludes> = 1;

        r0.<org.codehaus.groovy.ant.Groovydoc: boolean includeNoSourcePackages> = 0;

        return;
    }

    public void setSourcepath(org.apache.tools.ant.types.Path)
    {
        org.codehaus.groovy.ant.Groovydoc r0;
        org.apache.tools.ant.types.Path $r1, r2, $r3;

        r0 := @this: org.codehaus.groovy.ant.Groovydoc;

        r2 := @parameter0: org.apache.tools.ant.types.Path;

        $r1 = r0.<org.codehaus.groovy.ant.Groovydoc: org.apache.tools.ant.types.Path sourcePath>;

        if $r1 != null goto label1;

        r0.<org.codehaus.groovy.ant.Groovydoc: org.apache.tools.ant.types.Path sourcePath> = r2;

        goto label2;

     label1:
        $r3 = r0.<org.codehaus.groovy.ant.Groovydoc: org.apache.tools.ant.types.Path sourcePath>;

        virtualinvoke $r3.<org.apache.tools.ant.types.Path: void append(org.apache.tools.ant.types.Path)>(r2);

     label2:
        return;
    }

    public void setDestdir(java.io.File)
    {
        org.codehaus.groovy.ant.Groovydoc r0;
        java.io.File r1;

        r0 := @this: org.codehaus.groovy.ant.Groovydoc;

        r1 := @parameter0: java.io.File;

        r0.<org.codehaus.groovy.ant.Groovydoc: java.io.File destDir> = r1;

        return;
    }

    public void setPackagenames(java.lang.String)
    {
        java.util.List $r4;
        java.util.StringTokenizer $r0;
        org.codehaus.groovy.ant.Groovydoc r3;
        java.lang.String r1, $r2;
        boolean $z0;

        r3 := @this: org.codehaus.groovy.ant.Groovydoc;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.util.StringTokenizer;

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, ",");

     label1:
        $z0 = virtualinvoke $r0.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r4 = r3.<org.codehaus.groovy.ant.Groovydoc: java.util.List packageNames>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r2);

        goto label1;

     label2:
        return;
    }

    public void setUse(boolean)
    {
        org.codehaus.groovy.ant.Groovydoc r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ant.Groovydoc;

        z0 := @parameter0: boolean;

        return;
    }

    public void setWindowtitle(java.lang.String)
    {
        org.codehaus.groovy.ant.Groovydoc r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.ant.Groovydoc;

        r1 := @parameter0: java.lang.String;

        r0.<org.codehaus.groovy.ant.Groovydoc: java.lang.String windowTitle> = r1;

        return;
    }

    public void setPrivate(boolean)
    {
        org.codehaus.groovy.ant.Groovydoc r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ant.Groovydoc;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.ant.Groovydoc: boolean privateScope> = z0;

        return;
    }

    private void parsePackages(java.util.List, org.apache.tools.ant.types.Path)
    {
        org.codehaus.groovy.ant.Groovydoc$1 $r27;
        org.apache.tools.ant.types.DirSet $r68, r88;
        org.apache.tools.ant.DirectoryScanner $r16;
        org.apache.tools.ant.types.PatternSet$NameEntry $r54, $r72, $r80;
        org.codehaus.groovy.ant.Groovydoc r2;
        java.util.ArrayList $r0, $r1;
        java.lang.StringBuffer $r9, $r11, $r12, $r13, $r18, $r20, $r21, $r36, $r38, $r39, $r40, $r41, $r44, $r47, $r49, $r50, $r61, $r63, $r65, $r66, $r73, $r74, $r75, $r81, $r82, $r83;
        java.lang.String $r14, $r22, $r26, $r31, $r32, $r33, $r34, $r42, $r46, $r48, $r51, $r60, $r64, $r67, $r71, $r79, r84, r85, r86, r87, r89;
        org.apache.tools.ant.types.Path$PathElement $r24;
        java.io.File $r8, $r25, $r59;
        org.apache.tools.ant.types.Path $r4, r23, $r57;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10;
        java.util.List $r3, $r29, r35, $r45, $r53, $r55, $r76;
        org.apache.tools.ant.types.PatternSet $r52, $r69;
        java.lang.String[] $r17, $r28, $r58;
        int $i0, $i1, $i3, $i4, i5, i6;
        org.apache.tools.ant.Project $r7, $r15;
        java.util.Iterator $r5, $r30, $r56, $r77;
        char $c2;
        org.codehaus.groovy.ant.LoggingHelper $r10, $r19, $r37, $r62;
        java.lang.Object $r6, $r43, $r70, $r78;

        r2 := @this: org.codehaus.groovy.ant.Groovydoc;

        r35 := @parameter0: java.util.List;

        r23 := @parameter1: org.apache.tools.ant.types.Path;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new java.util.ArrayList;

        $r3 = r2.<org.codehaus.groovy.ant.Groovydoc: java.util.List packageSets>;

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        $r4 = r2.<org.codehaus.groovy.ant.Groovydoc: org.apache.tools.ant.types.Path sourcePath>;

        if $r4 == null goto label12;

        $r52 = new org.apache.tools.ant.types.PatternSet;

        specialinvoke $r52.<org.apache.tools.ant.types.PatternSet: void <init>()>();

        $r53 = r2.<org.codehaus.groovy.ant.Groovydoc: java.util.List packageNames>;

        $i3 = interfaceinvoke $r53.<java.util.List: int size()>();

        if $i3 <= 0 goto label04;

        $r76 = r2.<org.codehaus.groovy.ant.Groovydoc: java.util.List packageNames>;

        $r77 = interfaceinvoke $r76.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z6 = interfaceinvoke $r77.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label03;

        $r78 = interfaceinvoke $r77.<java.util.Iterator: java.lang.Object next()>();

        r84 = (java.lang.String) $r78;

        $r79 = virtualinvoke r84.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        r85 = $r79;

        $z7 = virtualinvoke $r79.<java.lang.String: boolean endsWith(java.lang.String)>("*");

        if $z7 == 0 goto label02;

        $r81 = new java.lang.StringBuffer;

        specialinvoke $r81.<java.lang.StringBuffer: void <init>()>();

        $r82 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r79);

        $r83 = virtualinvoke $r82.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("*");

        r85 = virtualinvoke $r83.<java.lang.StringBuffer: java.lang.String toString()>();

     label02:
        $r80 = virtualinvoke $r52.<org.apache.tools.ant.types.PatternSet: org.apache.tools.ant.types.PatternSet$NameEntry createInclude()>();

        virtualinvoke $r80.<org.apache.tools.ant.types.PatternSet$NameEntry: void setName(java.lang.String)>(r85);

        goto label01;

     label03:
        goto label05;

     label04:
        $r54 = virtualinvoke $r52.<org.apache.tools.ant.types.PatternSet: org.apache.tools.ant.types.PatternSet$NameEntry createInclude()>();

        virtualinvoke $r54.<org.apache.tools.ant.types.PatternSet$NameEntry: void setName(java.lang.String)>("**");

     label05:
        $r55 = r2.<org.codehaus.groovy.ant.Groovydoc: java.util.List excludePackageNames>;

        $r56 = interfaceinvoke $r55.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z8 = interfaceinvoke $r56.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label08;

        $r70 = interfaceinvoke $r56.<java.util.Iterator: java.lang.Object next()>();

        r86 = (java.lang.String) $r70;

        $r71 = virtualinvoke r86.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        r87 = $r71;

        $z5 = virtualinvoke $r71.<java.lang.String: boolean endsWith(java.lang.String)>("*");

        if $z5 == 0 goto label07;

        $r73 = new java.lang.StringBuffer;

        specialinvoke $r73.<java.lang.StringBuffer: void <init>()>();

        $r74 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r71);

        $r75 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("*");

        r87 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.String toString()>();

     label07:
        $r72 = virtualinvoke $r52.<org.apache.tools.ant.types.PatternSet: org.apache.tools.ant.types.PatternSet$NameEntry createExclude()>();

        virtualinvoke $r72.<org.apache.tools.ant.types.PatternSet$NameEntry: void setName(java.lang.String)>(r87);

        goto label06;

     label08:
        $r57 = r2.<org.codehaus.groovy.ant.Groovydoc: org.apache.tools.ant.types.Path sourcePath>;

        $r58 = virtualinvoke $r57.<org.apache.tools.ant.types.Path: java.lang.String[] list()>();

        i5 = 0;

     label09:
        $i4 = lengthof $r58;

        if i5 >= $i4 goto label12;

        $r59 = new java.io.File;

        $r60 = $r58[i5];

        specialinvoke $r59.<java.io.File: void <init>(java.lang.String)>($r60);

        $z3 = virtualinvoke $r59.<java.io.File: boolean isDirectory()>();

        if $z3 == 0 goto label10;

        $r68 = new org.apache.tools.ant.types.DirSet;

        specialinvoke $r68.<org.apache.tools.ant.types.DirSet: void <init>()>();

        $z4 = r2.<org.codehaus.groovy.ant.Groovydoc: boolean useDefaultExcludes>;

        virtualinvoke $r68.<org.apache.tools.ant.types.DirSet: void setDefaultexcludes(boolean)>($z4);

        virtualinvoke $r68.<org.apache.tools.ant.types.DirSet: void setDir(java.io.File)>($r59);

        $r69 = virtualinvoke $r68.<org.apache.tools.ant.types.DirSet: org.apache.tools.ant.types.PatternSet createPatternSet()>();

        virtualinvoke $r69.<org.apache.tools.ant.types.PatternSet: void addConfiguredPatternset(org.apache.tools.ant.types.PatternSet)>($r52);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r68);

        goto label11;

     label10:
        $r62 = r2.<org.codehaus.groovy.ant.Groovydoc: org.codehaus.groovy.ant.LoggingHelper log>;

        $r61 = new java.lang.StringBuffer;

        specialinvoke $r61.<java.lang.StringBuffer: void <init>()>();

        $r63 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Skipping ");

        $r64 = $r58[i5];

        $r65 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r64);

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" since it is no directory.");

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r62.<org.codehaus.groovy.ant.LoggingHelper: void warn(java.lang.String)>($r67);

     label11:
        i5 = i5 + 1;

        goto label09;

     label12:
        $r5 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z9 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label22;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r88 = (org.apache.tools.ant.types.DirSet) $r6;

        $r7 = virtualinvoke r2.<org.codehaus.groovy.ant.Groovydoc: org.apache.tools.ant.Project getProject()>();

        $r8 = virtualinvoke r88.<org.apache.tools.ant.types.DirSet: java.io.File getDir(org.apache.tools.ant.Project)>($r7);

        $r10 = r2.<org.codehaus.groovy.ant.Groovydoc: org.codehaus.groovy.ant.LoggingHelper log>;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("scanning ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r8);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" for packages.");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r10.<org.codehaus.groovy.ant.LoggingHelper: void debug(java.lang.String)>($r14);

        $r15 = virtualinvoke r2.<org.codehaus.groovy.ant.Groovydoc: org.apache.tools.ant.Project getProject()>();

        $r16 = virtualinvoke r88.<org.apache.tools.ant.types.DirSet: org.apache.tools.ant.DirectoryScanner getDirectoryScanner(org.apache.tools.ant.Project)>($r15);

        $r17 = virtualinvoke $r16.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] getIncludedDirectories()>();

        z10 = 0;

        i6 = 0;

     label14:
        $i0 = lengthof $r17;

        if i6 >= $i0 goto label19;

        $r25 = new java.io.File;

        $r26 = $r17[i6];

        specialinvoke $r25.<java.io.File: void <init>(java.io.File,java.lang.String)>($r8, $r26);

        $r27 = new org.codehaus.groovy.ant.Groovydoc$1;

        specialinvoke $r27.<org.codehaus.groovy.ant.Groovydoc$1: void <init>(org.codehaus.groovy.ant.Groovydoc)>(r2);

        $r28 = virtualinvoke $r25.<java.io.File: java.lang.String[] list(java.io.FilenameFilter)>($r27);

        $r29 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r28);

        $r30 = interfaceinvoke $r29.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z0 = interfaceinvoke $r30.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        $r43 = interfaceinvoke $r30.<java.util.Iterator: java.lang.Object next()>();

        r89 = (java.lang.String) $r43;

        $r45 = r2.<org.codehaus.groovy.ant.Groovydoc: java.util.List sourceFilesToDoc>;

        $r44 = new java.lang.StringBuffer;

        specialinvoke $r44.<java.lang.StringBuffer: void <init>()>();

        $r46 = $r17[i6];

        $r47 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r46);

        $r48 = <java.io.File: java.lang.String separator>;

        $r49 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r89);

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r45.<java.util.List: boolean add(java.lang.Object)>($r51);

        goto label15;

     label16:
        $i1 = lengthof $r28;

        if $i1 <= 0 goto label18;

        $r32 = "";

        $r31 = $r17[i6];

        $z1 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        if $z1 == 0 goto label17;

        $r37 = r2.<org.codehaus.groovy.ant.Groovydoc: org.codehaus.groovy.ant.LoggingHelper log>;

        $r36 = new java.lang.StringBuffer;

        specialinvoke $r36.<java.lang.StringBuffer: void <init>()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r8);

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" contains source files in the default package,");

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" you must specify them as source files");

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" not packages.");

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r37.<org.codehaus.groovy.ant.LoggingHelper: void warn(java.lang.String)>($r42);

        goto label18;

     label17:
        z10 = 1;

        $r33 = $r17[i6];

        $c2 = <java.io.File: char separatorChar>;

        $r34 = virtualinvoke $r33.<java.lang.String: java.lang.String replace(char,char)>($c2, 46);

        $z2 = interfaceinvoke $r0.<java.util.List: boolean contains(java.lang.Object)>($r34);

        if $z2 != 0 goto label18;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r34);

        interfaceinvoke r35.<java.util.List: boolean add(java.lang.Object)>($r34);

     label18:
        i6 = i6 + 1;

        goto label14;

     label19:
        if z10 == 0 goto label20;

        $r24 = virtualinvoke r23.<org.apache.tools.ant.types.Path: org.apache.tools.ant.types.Path$PathElement createPathElement()>();

        virtualinvoke $r24.<org.apache.tools.ant.types.Path$PathElement: void setLocation(java.io.File)>($r8);

        goto label21;

     label20:
        $r19 = r2.<org.codehaus.groovy.ant.Groovydoc: org.codehaus.groovy.ant.LoggingHelper log>;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r8);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" doesn\'t contain any packages, dropping it.");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r19.<org.codehaus.groovy.ant.LoggingHelper: void verbose(java.lang.String)>($r22);

     label21:
        goto label13;

     label22:
        return;
    }

    public void execute() throws org.apache.tools.ant.BuildException
    {
        org.codehaus.groovy.ant.Groovydoc r2;
        java.lang.String[] $r7, $r8, $r9;
        java.util.ArrayList $r0;
        org.apache.tools.ant.types.Path $r1, $r4, $r11, $r16;
        org.apache.tools.ant.Project $r3;
        java.lang.String $r15;
        org.codehaus.groovy.tools.groovydoc.GroovyDocTool $r5;
        org.codehaus.groovy.tools.groovydoc.ClasspathResourceManager $r6;
        org.codehaus.groovy.tools.groovydoc.FileOutputTool $r13;
        java.io.File $r14;
        java.lang.Exception $r17;
        java.util.List $r10, $r12;

        r2 := @this: org.codehaus.groovy.ant.Groovydoc;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new org.apache.tools.ant.types.Path;

        $r3 = virtualinvoke r2.<org.codehaus.groovy.ant.Groovydoc: org.apache.tools.ant.Project getProject()>();

        specialinvoke $r1.<org.apache.tools.ant.types.Path: void <init>(org.apache.tools.ant.Project)>($r3);

        $r4 = r2.<org.codehaus.groovy.ant.Groovydoc: org.apache.tools.ant.types.Path sourcePath>;

        if $r4 == null goto label1;

        $r16 = r2.<org.codehaus.groovy.ant.Groovydoc: org.apache.tools.ant.types.Path sourcePath>;

        virtualinvoke $r1.<org.apache.tools.ant.types.Path: void addExisting(org.apache.tools.ant.types.Path)>($r16);

     label1:
        specialinvoke r2.<org.codehaus.groovy.ant.Groovydoc: void parsePackages(java.util.List,org.apache.tools.ant.types.Path)>($r0, $r1);

        $r5 = new org.codehaus.groovy.tools.groovydoc.GroovyDocTool;

        $r6 = new org.codehaus.groovy.tools.groovydoc.ClasspathResourceManager;

        specialinvoke $r6.<org.codehaus.groovy.tools.groovydoc.ClasspathResourceManager: void <init>()>();

        $r11 = r2.<org.codehaus.groovy.ant.Groovydoc: org.apache.tools.ant.types.Path sourcePath>;

        $r7 = newarray (java.lang.String)[5];

        $r7[0] = "org/codehaus/groovy/tools/groovydoc/gstring-templates/top-level/index.html";

        $r7[1] = "org/codehaus/groovy/tools/groovydoc/gstring-templates/top-level/overview-frame.html";

        $r7[2] = "org/codehaus/groovy/tools/groovydoc/gstring-templates/top-level/allclasses-frame.html";

        $r7[3] = "org/codehaus/groovy/tools/groovydoc/gstring-templates/top-level/overview-summary.html";

        $r7[4] = "org/codehaus/groovy/tools/groovydoc/gstring-templates/top-level/stylesheet.css";

        $r8 = newarray (java.lang.String)[2];

        $r8[0] = "org/codehaus/groovy/tools/groovydoc/gstring-templates/package-level/package-frame.html";

        $r8[1] = "org/codehaus/groovy/tools/groovydoc/gstring-templates/package-level/package-summary.html";

        $r9 = newarray (java.lang.String)[1];

        $r9[0] = "org/codehaus/groovy/tools/groovydoc/gstring-templates/class-level/classDocName.html";

        $r10 = r2.<org.codehaus.groovy.ant.Groovydoc: java.util.List links>;

        specialinvoke $r5.<org.codehaus.groovy.tools.groovydoc.GroovyDocTool: void <init>(org.codehaus.groovy.tools.groovydoc.ResourceManager,org.apache.tools.ant.types.Path,java.lang.String[],java.lang.String[],java.lang.String[],java.util.List)>($r6, $r11, $r7, $r8, $r9, $r10);

     label2:
        $r12 = r2.<org.codehaus.groovy.ant.Groovydoc: java.util.List sourceFilesToDoc>;

        virtualinvoke $r5.<org.codehaus.groovy.tools.groovydoc.GroovyDocTool: void add(java.util.List)>($r12);

        $r13 = new org.codehaus.groovy.tools.groovydoc.FileOutputTool;

        specialinvoke $r13.<org.codehaus.groovy.tools.groovydoc.FileOutputTool: void <init>()>();

        $r14 = r2.<org.codehaus.groovy.ant.Groovydoc: java.io.File destDir>;

        $r15 = virtualinvoke $r14.<java.io.File: java.lang.String getCanonicalPath()>();

        virtualinvoke $r5.<org.codehaus.groovy.tools.groovydoc.GroovyDocTool: void renderToOutput(org.codehaus.groovy.tools.groovydoc.OutputTool,java.lang.String)>($r13, $r15);

     label3:
        goto label5;

     label4:
        $r17 := @caughtexception;

        virtualinvoke $r17.<java.lang.Exception: void printStackTrace()>();

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public org.codehaus.groovy.ant.Groovydoc$LinkArgument createLink()
    {
        org.codehaus.groovy.ant.Groovydoc r1;
        org.codehaus.groovy.ant.Groovydoc$LinkArgument $r0;
        java.util.List $r2;

        r1 := @this: org.codehaus.groovy.ant.Groovydoc;

        $r0 = new org.codehaus.groovy.ant.Groovydoc$LinkArgument;

        specialinvoke $r0.<org.codehaus.groovy.ant.Groovydoc$LinkArgument: void <init>()>();

        $r2 = r1.<org.codehaus.groovy.ant.Groovydoc: java.util.List links>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r0);

        return $r0;
    }

    static boolean access$000(org.codehaus.groovy.ant.Groovydoc)
    {
        org.codehaus.groovy.ant.Groovydoc r0;
        boolean $z0;

        r0 := @parameter0: org.codehaus.groovy.ant.Groovydoc;

        $z0 = r0.<org.codehaus.groovy.ant.Groovydoc: boolean includeNoSourcePackages>;

        return $z0;
    }
}
