class ucar.atd.dorade.DoradeSWIB extends ucar.atd.dorade.DoradeDescriptor
{
    private java.lang.String comment;
    private int sweepNumber;
    private int nRays;
    private float startAngle;
    private float endAngle;
    private float fixedAngle;
    private int filterFlag;
    private long[] rayDataOffsets;
    private ucar.atd.dorade.DoradeRYIB[] myRYIBs;
    private ucar.atd.dorade.DoradeASIB[] myASIBs;
    private ucar.atd.dorade.DoradeVOLD myVOLD;
    private float[] azimuths;
    private float[] elevations;

    public void <init>(java.io.RandomAccessFile, boolean, ucar.atd.dorade.DoradeVOLD) throws ucar.atd.dorade.DoradeDescriptor$DescriptorException
    {
        java.io.RandomAccessFile r1;
        byte[] $r2;
        ucar.atd.dorade.DoradeRYIB $r9;
        boolean z0, $z1, z2;
        float $f0, $f1, $f2;
        ucar.atd.dorade.DoradeDescriptor$DescriptorException $r17, $r18, $r19, $r22;
        ucar.atd.dorade.DoradeASIB[] $r7, $r14;
        long $l6, $l7;
        ucar.atd.dorade.DoradeASIB $r13;
        long[] $r8, $r12, $r20;
        ucar.atd.dorade.DoradeVOLD r3, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, i8, $i9;
        ucar.atd.dorade.DoradeSWIB r0;
        java.lang.String $r4, $r5;
        java.io.PrintStream $r15;
        java.io.IOException $r16, $r21;
        ucar.atd.dorade.DoradeRYIB[] $r6, $r11;

        r0 := @this: ucar.atd.dorade.DoradeSWIB;

        r1 := @parameter0: java.io.RandomAccessFile;

        z0 := @parameter1: boolean;

        r3 := @parameter2: ucar.atd.dorade.DoradeVOLD;

        specialinvoke r0.<ucar.atd.dorade.DoradeDescriptor: void <init>()>();

        r0.<ucar.atd.dorade.DoradeSWIB: float[] azimuths> = null;

        r0.<ucar.atd.dorade.DoradeSWIB: float[] elevations> = null;

        $r2 = virtualinvoke r0.<ucar.atd.dorade.DoradeSWIB: byte[] readDescriptor(java.io.RandomAccessFile,boolean,java.lang.String)>(r1, z0, "SWIB");

        r0.<ucar.atd.dorade.DoradeSWIB: ucar.atd.dorade.DoradeVOLD myVOLD> = r3;

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>($r2, 8, 8);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        r0.<ucar.atd.dorade.DoradeSWIB: java.lang.String comment> = $r5;

        $i0 = virtualinvoke r0.<ucar.atd.dorade.DoradeSWIB: int grabInt(byte[],int)>($r2, 16);

        r0.<ucar.atd.dorade.DoradeSWIB: int sweepNumber> = $i0;

        $i1 = virtualinvoke r0.<ucar.atd.dorade.DoradeSWIB: int grabInt(byte[],int)>($r2, 20);

        r0.<ucar.atd.dorade.DoradeSWIB: int nRays> = $i1;

        $f0 = virtualinvoke r0.<ucar.atd.dorade.DoradeSWIB: float grabFloat(byte[],int)>($r2, 24);

        r0.<ucar.atd.dorade.DoradeSWIB: float startAngle> = $f0;

        $f1 = virtualinvoke r0.<ucar.atd.dorade.DoradeSWIB: float grabFloat(byte[],int)>($r2, 28);

        r0.<ucar.atd.dorade.DoradeSWIB: float endAngle> = $f1;

        $f2 = virtualinvoke r0.<ucar.atd.dorade.DoradeSWIB: float grabFloat(byte[],int)>($r2, 32);

        r0.<ucar.atd.dorade.DoradeSWIB: float fixedAngle> = $f2;

        $i2 = virtualinvoke r0.<ucar.atd.dorade.DoradeSWIB: int grabInt(byte[],int)>($r2, 36);

        r0.<ucar.atd.dorade.DoradeSWIB: int filterFlag> = $i2;

        $z1 = r0.<ucar.atd.dorade.DoradeSWIB: boolean verbose>;

        if $z1 == 0 goto label01;

        $r15 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.Object)>(r0);

     label01:
        $i3 = r0.<ucar.atd.dorade.DoradeSWIB: int nRays>;

        $r6 = newarray (ucar.atd.dorade.DoradeRYIB)[$i3];

        r0.<ucar.atd.dorade.DoradeSWIB: ucar.atd.dorade.DoradeRYIB[] myRYIBs> = $r6;

        $i4 = r0.<ucar.atd.dorade.DoradeSWIB: int nRays>;

        $r7 = newarray (ucar.atd.dorade.DoradeASIB)[$i4];

        r0.<ucar.atd.dorade.DoradeSWIB: ucar.atd.dorade.DoradeASIB[] myASIBs> = $r7;

        $i5 = r0.<ucar.atd.dorade.DoradeSWIB: int nRays>;

        $r8 = newarray (long)[$i5];

        r0.<ucar.atd.dorade.DoradeSWIB: long[] rayDataOffsets> = $r8;

        z2 = 0;

        i8 = 0;

     label02:
        $i9 = r0.<ucar.atd.dorade.DoradeSWIB: int nRays>;

        if i8 >= $i9 goto label15;

        $r11 = r0.<ucar.atd.dorade.DoradeSWIB: ucar.atd.dorade.DoradeRYIB[] myRYIBs>;

        $r9 = new ucar.atd.dorade.DoradeRYIB;

        $r10 = r0.<ucar.atd.dorade.DoradeSWIB: ucar.atd.dorade.DoradeVOLD myVOLD>;

        specialinvoke $r9.<ucar.atd.dorade.DoradeRYIB: void <init>(java.io.RandomAccessFile,boolean,ucar.atd.dorade.DoradeVOLD)>(r1, z0, $r10);

        $r11[i8] = $r9;

     label03:
        $r12 = r0.<ucar.atd.dorade.DoradeSWIB: long[] rayDataOffsets>;

        $l6 = virtualinvoke r1.<java.io.RandomAccessFile: long getFilePointer()>();

        $r12[i8] = $l6;

     label04:
        goto label06;

     label05:
        $r21 := @caughtexception;

        $r22 = new ucar.atd.dorade.DoradeDescriptor$DescriptorException;

        specialinvoke $r22.<ucar.atd.dorade.DoradeDescriptor$DescriptorException: void <init>(java.lang.Throwable)>($r21);

        throw $r22;

     label06:
        if i8 == 0 goto label07;

        if z2 == 0 goto label14;

     label07:
        $r14 = r0.<ucar.atd.dorade.DoradeSWIB: ucar.atd.dorade.DoradeASIB[] myASIBs>;

        $r13 = new ucar.atd.dorade.DoradeASIB;

        specialinvoke $r13.<ucar.atd.dorade.DoradeASIB: void <init>(java.io.RandomAccessFile,boolean)>(r1, z0);

        $r14[i8] = $r13;

        z2 = 1;

     label08:
        goto label14;

     label09:
        $r18 := @caughtexception;

        if i8 != 0 goto label13;

        z2 = 0;

        r0.<ucar.atd.dorade.DoradeSWIB: ucar.atd.dorade.DoradeASIB[] myASIBs> = null;

     label10:
        $r20 = r0.<ucar.atd.dorade.DoradeSWIB: long[] rayDataOffsets>;

        $l7 = $r20[i8];

        virtualinvoke r1.<java.io.RandomAccessFile: void seek(long)>($l7);

     label11:
        goto label14;

     label12:
        $r16 := @caughtexception;

        $r17 = new ucar.atd.dorade.DoradeDescriptor$DescriptorException;

        specialinvoke $r17.<ucar.atd.dorade.DoradeDescriptor$DescriptorException: void <init>(java.lang.Throwable)>($r16);

        throw $r17;

     label13:
        $r19 = new ucar.atd.dorade.DoradeDescriptor$DescriptorException;

        specialinvoke $r19.<ucar.atd.dorade.DoradeDescriptor$DescriptorException: void <init>(java.lang.String)>("not enough ASIBs");

        throw $r19;

     label14:
        i8 = i8 + 1;

        goto label02;

     label15:
        return;

        catch java.io.IOException from label03 to label04 with label05;
        catch ucar.atd.dorade.DoradeDescriptor$DescriptorException from label07 to label08 with label09;
        catch java.io.IOException from label10 to label11 with label12;
    }

    public java.lang.String toString()
    {
        float $f0, $f1, $f2;
        java.lang.StringBuilder $r0, $r1, $r2, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r23, $r25, $r26, $r27, $r28, $r29, $r31, $r32, $r33, $r34;
        int $i0, $i1, $i2;
        ucar.atd.dorade.DoradeSWIB r3;
        java.lang.String $r6, $r12, $r18, $r24, $r30, $r35;

        r3 := @this: ucar.atd.dorade.DoradeSWIB;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SWIB\n");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  sweep number: ");

        $i0 = r3.<ucar.atd.dorade.DoradeSWIB: int sweepNumber>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  number of rays: ");

        $i1 = r3.<ucar.atd.dorade.DoradeSWIB: int nRays>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  start angle: ");

        $f0 = r3.<ucar.atd.dorade.DoradeSWIB: float startAngle>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  end angle: ");

        $f1 = r3.<ucar.atd.dorade.DoradeSWIB: float endAngle>;

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  fixed angle: ");

        $f2 = r3.<ucar.atd.dorade.DoradeSWIB: float fixedAngle>;

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  filter flag: ");

        $i2 = r3.<ucar.atd.dorade.DoradeSWIB: int filterFlag>;

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r35;
    }

    public float[] getRayData(ucar.atd.dorade.DoradePARM, int) throws ucar.atd.dorade.DoradeDescriptor$DescriptorException
    {
        int i0;
        ucar.atd.dorade.DoradeSWIB r0;
        ucar.atd.dorade.DoradePARM r1;
        float[] $r2;

        r0 := @this: ucar.atd.dorade.DoradeSWIB;

        r1 := @parameter0: ucar.atd.dorade.DoradePARM;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<ucar.atd.dorade.DoradeSWIB: float[] getRayData(ucar.atd.dorade.DoradePARM,int,float[])>(r1, i0, null);

        return $r2;
    }

    public float[] getRayData(ucar.atd.dorade.DoradePARM, int, float[]) throws ucar.atd.dorade.DoradeDescriptor$DescriptorException
    {
        java.io.RandomAccessFile $r2, $r4;
        ucar.atd.dorade.DoradeRDAT $r5;
        long $l1;
        ucar.atd.dorade.DoradePARM r3;
        float[] r6, $r7;
        java.io.IOException $r8;
        long[] $r1;
        int i0;
        ucar.atd.dorade.DoradeSWIB r0;
        ucar.atd.dorade.DoradeDescriptor$DescriptorException $r9;
        boolean $z0;

        r0 := @this: ucar.atd.dorade.DoradeSWIB;

        r3 := @parameter0: ucar.atd.dorade.DoradePARM;

        i0 := @parameter1: int;

        r6 := @parameter2: float[];

     label1:
        $r2 = r0.<ucar.atd.dorade.DoradeSWIB: java.io.RandomAccessFile file>;

        $r1 = r0.<ucar.atd.dorade.DoradeSWIB: long[] rayDataOffsets>;

        $l1 = $r1[i0];

        virtualinvoke $r2.<java.io.RandomAccessFile: void seek(long)>($l1);

        $r4 = r0.<ucar.atd.dorade.DoradeSWIB: java.io.RandomAccessFile file>;

        $z0 = r0.<ucar.atd.dorade.DoradeSWIB: boolean littleEndianData>;

        $r5 = staticinvoke <ucar.atd.dorade.DoradeRDAT: ucar.atd.dorade.DoradeRDAT getNextOf(ucar.atd.dorade.DoradePARM,java.io.RandomAccessFile,boolean)>(r3, $r4, $z0);

        $r7 = virtualinvoke r3.<ucar.atd.dorade.DoradePARM: float[] getParamValues(ucar.atd.dorade.DoradeRDAT,float[])>($r5, r6);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        $r9 = new ucar.atd.dorade.DoradeDescriptor$DescriptorException;

        specialinvoke $r9.<ucar.atd.dorade.DoradeDescriptor$DescriptorException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public int getNRays()
    {
        int $i0;
        ucar.atd.dorade.DoradeSWIB r0;

        r0 := @this: ucar.atd.dorade.DoradeSWIB;

        $i0 = r0.<ucar.atd.dorade.DoradeSWIB: int nRays>;

        return $i0;
    }

    public java.util.Date[] getTimes()
    {
        java.util.Date $r5;
        ucar.atd.dorade.DoradeRYIB $r4;
        ucar.atd.dorade.DoradeRYIB[] $r1, $r3;
        int $i0, $i1, i2;
        java.util.Date[] r2;
        ucar.atd.dorade.DoradeSWIB r0;

        r0 := @this: ucar.atd.dorade.DoradeSWIB;

        $r1 = r0.<ucar.atd.dorade.DoradeSWIB: ucar.atd.dorade.DoradeRYIB[] myRYIBs>;

        if $r1 != null goto label1;

        return null;

     label1:
        $i0 = r0.<ucar.atd.dorade.DoradeSWIB: int nRays>;

        r2 = newarray (java.util.Date)[$i0];

        i2 = 0;

     label2:
        $i1 = r0.<ucar.atd.dorade.DoradeSWIB: int nRays>;

        if i2 >= $i1 goto label3;

        $r3 = r0.<ucar.atd.dorade.DoradeSWIB: ucar.atd.dorade.DoradeRYIB[] myRYIBs>;

        $r4 = $r3[i2];

        $r5 = virtualinvoke $r4.<ucar.atd.dorade.DoradeRYIB: java.util.Date getRayTime()>();

        r2[i2] = $r5;

        i2 = i2 + 1;

        goto label2;

     label3:
        return r2;
    }

    public java.util.Date getRayTime(int)
    {
        ucar.atd.dorade.DoradeRYIB[] $r1;
        java.util.Date $r3;
        ucar.atd.dorade.DoradeRYIB $r2;
        int i0;
        ucar.atd.dorade.DoradeSWIB r0;

        r0 := @this: ucar.atd.dorade.DoradeSWIB;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.atd.dorade.DoradeSWIB: ucar.atd.dorade.DoradeRYIB[] myRYIBs>;

        $r2 = $r1[i0];

        $r3 = virtualinvoke $r2.<ucar.atd.dorade.DoradeRYIB: java.util.Date getRayTime()>();

        return $r3;
    }

    public float[] getLatitudes()
    {
        ucar.atd.dorade.DoradeASIB[] $r1, $r3;
        float[] r2;
        ucar.atd.dorade.DoradeASIB $r4;
        int $i0, $i1, i2;
        float $f0;
        ucar.atd.dorade.DoradeSWIB r0;

        r0 := @this: ucar.atd.dorade.DoradeSWIB;

        $r1 = r0.<ucar.atd.dorade.DoradeSWIB: ucar.atd.dorade.DoradeASIB[] myASIBs>;

        if $r1 != null goto label1;

        return null;

     label1:
        $i0 = r0.<ucar.atd.dorade.DoradeSWIB: int nRays>;

        r2 = newarray (float)[$i0];

        i2 = 0;

     label2:
        $i1 = r0.<ucar.atd.dorade.DoradeSWIB: int nRays>;

        if i2 >= $i1 goto label3;

        $r3 = r0.<ucar.atd.dorade.DoradeSWIB: ucar.atd.dorade.DoradeASIB[] myASIBs>;

        $r4 = $r3[i2];

        $f0 = virtualinvoke $r4.<ucar.atd.dorade.DoradeASIB: float getLatitude()>();

        r2[i2] = $f0;

        i2 = i2 + 1;

        goto label2;

     label3:
        return r2;
    }

    public float[] getLongitudes()
    {
        ucar.atd.dorade.DoradeASIB[] $r1, $r3;
        float[] r2;
        ucar.atd.dorade.DoradeASIB $r4;
        int $i0, $i1, i2;
        float $f0;
        ucar.atd.dorade.DoradeSWIB r0;

        r0 := @this: ucar.atd.dorade.DoradeSWIB;

        $r1 = r0.<ucar.atd.dorade.DoradeSWIB: ucar.atd.dorade.DoradeASIB[] myASIBs>;

        if $r1 != null goto label1;

        return null;

     label1:
        $i0 = r0.<ucar.atd.dorade.DoradeSWIB: int nRays>;

        r2 = newarray (float)[$i0];

        i2 = 0;

     label2:
        $i1 = r0.<ucar.atd.dorade.DoradeSWIB: int nRays>;

        if i2 >= $i1 goto label3;

        $r3 = r0.<ucar.atd.dorade.DoradeSWIB: ucar.atd.dorade.DoradeASIB[] myASIBs>;

        $r4 = $r3[i2];

        $f0 = virtualinvoke $r4.<ucar.atd.dorade.DoradeASIB: float getLongitude()>();

        r2[i2] = $f0;

        i2 = i2 + 1;

        goto label2;

     label3:
        return r2;
    }

    public float[] getAltitudes()
    {
        ucar.atd.dorade.DoradeASIB[] $r1, $r3;
        float[] r2;
        ucar.atd.dorade.DoradeASIB $r4;
        int $i0, $i1, i2;
        float $f0;
        ucar.atd.dorade.DoradeSWIB r0;

        r0 := @this: ucar.atd.dorade.DoradeSWIB;

        $r1 = r0.<ucar.atd.dorade.DoradeSWIB: ucar.atd.dorade.DoradeASIB[] myASIBs>;

        if $r1 != null goto label1;

        return null;

     label1:
        $i0 = r0.<ucar.atd.dorade.DoradeSWIB: int nRays>;

        r2 = newarray (float)[$i0];

        i2 = 0;

     label2:
        $i1 = r0.<ucar.atd.dorade.DoradeSWIB: int nRays>;

        if i2 >= $i1 goto label3;

        $r3 = r0.<ucar.atd.dorade.DoradeSWIB: ucar.atd.dorade.DoradeASIB[] myASIBs>;

        $r4 = $r3[i2];

        $f0 = virtualinvoke $r4.<ucar.atd.dorade.DoradeASIB: float getAltitude()>();

        r2[i2] = $f0;

        i2 = i2 + 1;

        goto label2;

     label3:
        return r2;
    }

    public float[] getAzimuths()
    {
        ucar.atd.dorade.DoradeRYIB $r5;
        float[] $r1, $r2, $r3, $r6;
        ucar.atd.dorade.DoradeRYIB[] $r4;
        int $i0, $i1, i2;
        float $f0;
        ucar.atd.dorade.DoradeSWIB r0;

        r0 := @this: ucar.atd.dorade.DoradeSWIB;

        $r1 = r0.<ucar.atd.dorade.DoradeSWIB: float[] azimuths>;

        if $r1 != null goto label2;

        $i0 = r0.<ucar.atd.dorade.DoradeSWIB: int nRays>;

        $r3 = newarray (float)[$i0];

        r0.<ucar.atd.dorade.DoradeSWIB: float[] azimuths> = $r3;

        i2 = 0;

     label1:
        $i1 = r0.<ucar.atd.dorade.DoradeSWIB: int nRays>;

        if i2 >= $i1 goto label2;

        $r6 = r0.<ucar.atd.dorade.DoradeSWIB: float[] azimuths>;

        $r4 = r0.<ucar.atd.dorade.DoradeSWIB: ucar.atd.dorade.DoradeRYIB[] myRYIBs>;

        $r5 = $r4[i2];

        $f0 = virtualinvoke $r5.<ucar.atd.dorade.DoradeRYIB: float getAzimuth()>();

        $r6[i2] = $f0;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r2 = r0.<ucar.atd.dorade.DoradeSWIB: float[] azimuths>;

        return $r2;
    }

    public float[] getElevations()
    {
        ucar.atd.dorade.DoradeRYIB $r5;
        float[] $r1, $r2, $r3, $r6;
        ucar.atd.dorade.DoradeRYIB[] $r4;
        int $i0, $i1, i2;
        float $f0;
        ucar.atd.dorade.DoradeSWIB r0;

        r0 := @this: ucar.atd.dorade.DoradeSWIB;

        $r1 = r0.<ucar.atd.dorade.DoradeSWIB: float[] elevations>;

        if $r1 != null goto label2;

        $i0 = r0.<ucar.atd.dorade.DoradeSWIB: int nRays>;

        $r3 = newarray (float)[$i0];

        r0.<ucar.atd.dorade.DoradeSWIB: float[] elevations> = $r3;

        i2 = 0;

     label1:
        $i1 = r0.<ucar.atd.dorade.DoradeSWIB: int nRays>;

        if i2 >= $i1 goto label2;

        $r6 = r0.<ucar.atd.dorade.DoradeSWIB: float[] elevations>;

        $r4 = r0.<ucar.atd.dorade.DoradeSWIB: ucar.atd.dorade.DoradeRYIB[] myRYIBs>;

        $r5 = $r4[i2];

        $f0 = virtualinvoke $r5.<ucar.atd.dorade.DoradeRYIB: float getElevation()>();

        $r6[i2] = $f0;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r2 = r0.<ucar.atd.dorade.DoradeSWIB: float[] elevations>;

        return $r2;
    }

    public float getFixedAngle()
    {
        float $f0;
        ucar.atd.dorade.DoradeSWIB r0;

        r0 := @this: ucar.atd.dorade.DoradeSWIB;

        $f0 = r0.<ucar.atd.dorade.DoradeSWIB: float fixedAngle>;

        return $f0;
    }

    public int getSweepNumber()
    {
        int $i0;
        ucar.atd.dorade.DoradeSWIB r0;

        r0 := @this: ucar.atd.dorade.DoradeSWIB;

        $i0 = r0.<ucar.atd.dorade.DoradeSWIB: int sweepNumber>;

        return $i0;
    }
}
