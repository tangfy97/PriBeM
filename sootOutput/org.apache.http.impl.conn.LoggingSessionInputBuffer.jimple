public class org.apache.http.impl.conn.LoggingSessionInputBuffer extends java.lang.Object implements org.apache.http.io.SessionInputBuffer, org.apache.http.io.EofSensor
{
    private final org.apache.http.io.SessionInputBuffer in;
    private final org.apache.http.io.EofSensor eofSensor;
    private final org.apache.http.impl.conn.Wire wire;
    private final java.lang.String charset;

    public void <init>(org.apache.http.io.SessionInputBuffer, org.apache.http.impl.conn.Wire, java.lang.String)
    {
        org.apache.http.io.SessionInputBuffer r1;
        org.apache.http.impl.conn.Wire r2;
        org.apache.http.io.EofSensor $r5;
        org.apache.http.impl.conn.LoggingSessionInputBuffer r0;
        java.nio.charset.Charset $r4;
        java.lang.String r3, $r6;
        boolean $z0;

        r0 := @this: org.apache.http.impl.conn.LoggingSessionInputBuffer;

        r1 := @parameter0: org.apache.http.io.SessionInputBuffer;

        r2 := @parameter1: org.apache.http.impl.conn.Wire;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.io.SessionInputBuffer in> = r1;

        $z0 = r1 instanceof org.apache.http.io.EofSensor;

        if $z0 == 0 goto label1;

        $r5 = (org.apache.http.io.EofSensor) r1;

        goto label2;

     label1:
        $r5 = null;

     label2:
        r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.io.EofSensor eofSensor> = $r5;

        r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.impl.conn.Wire wire> = r2;

        if r3 == null goto label3;

        $r6 = r3;

        goto label4;

     label3:
        $r4 = <org.apache.http.Consts: java.nio.charset.Charset ASCII>;

        $r6 = virtualinvoke $r4.<java.nio.charset.Charset: java.lang.String name()>();

     label4:
        r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: java.lang.String charset> = $r6;

        return;
    }

    public void <init>(org.apache.http.io.SessionInputBuffer, org.apache.http.impl.conn.Wire)
    {
        org.apache.http.impl.conn.Wire r2;
        org.apache.http.impl.conn.LoggingSessionInputBuffer r0;
        org.apache.http.io.SessionInputBuffer r1;

        r0 := @this: org.apache.http.impl.conn.LoggingSessionInputBuffer;

        r1 := @parameter0: org.apache.http.io.SessionInputBuffer;

        r2 := @parameter1: org.apache.http.impl.conn.Wire;

        specialinvoke r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.impl.conn.Wire,java.lang.String)>(r1, r2, null);

        return;
    }

    public boolean isDataAvailable(int) throws java.io.IOException
    {
        org.apache.http.impl.conn.LoggingSessionInputBuffer r0;
        int i0;
        org.apache.http.io.SessionInputBuffer $r1;
        boolean $z0;

        r0 := @this: org.apache.http.impl.conn.LoggingSessionInputBuffer;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.io.SessionInputBuffer in>;

        $z0 = interfaceinvoke $r1.<org.apache.http.io.SessionInputBuffer: boolean isDataAvailable(int)>(i0);

        return $z0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        org.apache.http.io.SessionInputBuffer $r2;
        org.apache.http.impl.conn.Wire $r3, $r4;
        org.apache.http.impl.conn.LoggingSessionInputBuffer r0;
        int i0, i1, $i2;
        boolean $z0;

        r0 := @this: org.apache.http.impl.conn.LoggingSessionInputBuffer;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.io.SessionInputBuffer in>;

        $i2 = interfaceinvoke $r2.<org.apache.http.io.SessionInputBuffer: int read(byte[],int,int)>(r1, i0, i1);

        $r3 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.impl.conn.Wire wire>;

        $z0 = virtualinvoke $r3.<org.apache.http.impl.conn.Wire: boolean enabled()>();

        if $z0 == 0 goto label1;

        if $i2 <= 0 goto label1;

        $r4 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.impl.conn.Wire wire>;

        virtualinvoke $r4.<org.apache.http.impl.conn.Wire: void input(byte[],int,int)>(r1, i0, $i2);

     label1:
        return $i2;
    }

    public int read() throws java.io.IOException
    {
        org.apache.http.impl.conn.Wire $r2, $r3;
        org.apache.http.impl.conn.LoggingSessionInputBuffer r0;
        int $i0, $i2;
        org.apache.http.io.SessionInputBuffer $r1;
        boolean $z0;

        r0 := @this: org.apache.http.impl.conn.LoggingSessionInputBuffer;

        $r1 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.io.SessionInputBuffer in>;

        $i0 = interfaceinvoke $r1.<org.apache.http.io.SessionInputBuffer: int read()>();

        $r2 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.impl.conn.Wire wire>;

        $z0 = virtualinvoke $r2.<org.apache.http.impl.conn.Wire: boolean enabled()>();

        if $z0 == 0 goto label1;

        $i2 = (int) -1;

        if $i0 == $i2 goto label1;

        $r3 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.impl.conn.Wire wire>;

        virtualinvoke $r3.<org.apache.http.impl.conn.Wire: void input(int)>($i0);

     label1:
        return $i0;
    }

    public int read(byte[]) throws java.io.IOException
    {
        byte[] r1;
        org.apache.http.impl.conn.Wire $r3, $r4;
        org.apache.http.impl.conn.LoggingSessionInputBuffer r0;
        int $i0;
        org.apache.http.io.SessionInputBuffer $r2;
        boolean $z0;

        r0 := @this: org.apache.http.impl.conn.LoggingSessionInputBuffer;

        r1 := @parameter0: byte[];

        $r2 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.io.SessionInputBuffer in>;

        $i0 = interfaceinvoke $r2.<org.apache.http.io.SessionInputBuffer: int read(byte[])>(r1);

        $r3 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.impl.conn.Wire wire>;

        $z0 = virtualinvoke $r3.<org.apache.http.impl.conn.Wire: boolean enabled()>();

        if $z0 == 0 goto label1;

        if $i0 <= 0 goto label1;

        $r4 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.impl.conn.Wire wire>;

        virtualinvoke $r4.<org.apache.http.impl.conn.Wire: void input(byte[],int,int)>(r1, 0, $i0);

     label1:
        return $i0;
    }

    public java.lang.String readLine() throws java.io.IOException
    {
        byte[] $r10;
        org.apache.http.io.SessionInputBuffer $r1;
        org.apache.http.impl.conn.Wire $r3, $r9;
        org.apache.http.impl.conn.LoggingSessionInputBuffer r0;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r2, $r7, $r8;
        boolean $z0;

        r0 := @this: org.apache.http.impl.conn.LoggingSessionInputBuffer;

        $r1 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.io.SessionInputBuffer in>;

        $r2 = interfaceinvoke $r1.<org.apache.http.io.SessionInputBuffer: java.lang.String readLine()>();

        $r3 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.impl.conn.Wire wire>;

        $z0 = virtualinvoke $r3.<org.apache.http.impl.conn.Wire: boolean enabled()>();

        if $z0 == 0 goto label1;

        if $r2 == null goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.impl.conn.Wire wire>;

        $r8 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: java.lang.String charset>;

        $r10 = virtualinvoke $r7.<java.lang.String: byte[] getBytes(java.lang.String)>($r8);

        virtualinvoke $r9.<org.apache.http.impl.conn.Wire: void input(byte[])>($r10);

     label1:
        return $r2;
    }

    public int readLine(org.apache.http.util.CharArrayBuffer) throws java.io.IOException
    {
        byte[] $r12;
        org.apache.http.io.SessionInputBuffer $r2;
        org.apache.http.impl.conn.Wire $r3, $r11;
        org.apache.http.impl.conn.LoggingSessionInputBuffer r0;
        int $i0, $i1, i2;
        java.lang.String $r4, $r9, $r10;
        boolean $z0;
        org.apache.http.util.CharArrayBuffer r1;
        char[] $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: org.apache.http.impl.conn.LoggingSessionInputBuffer;

        r1 := @parameter0: org.apache.http.util.CharArrayBuffer;

        $r2 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.io.SessionInputBuffer in>;

        $i0 = interfaceinvoke $r2.<org.apache.http.io.SessionInputBuffer: int readLine(org.apache.http.util.CharArrayBuffer)>(r1);

        $r3 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.impl.conn.Wire wire>;

        $z0 = virtualinvoke $r3.<org.apache.http.impl.conn.Wire: boolean enabled()>();

        if $z0 == 0 goto label1;

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: int length()>();

        i2 = $i1 - $i0;

        $r4 = new java.lang.String;

        $r5 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: char[] buffer()>();

        specialinvoke $r4.<java.lang.String: void <init>(char[],int,int)>($r5, i2, $i0);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.impl.conn.Wire wire>;

        $r10 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: java.lang.String charset>;

        $r12 = virtualinvoke $r9.<java.lang.String: byte[] getBytes(java.lang.String)>($r10);

        virtualinvoke $r11.<org.apache.http.impl.conn.Wire: void input(byte[])>($r12);

     label1:
        return $i0;
    }

    public org.apache.http.io.HttpTransportMetrics getMetrics()
    {
        org.apache.http.impl.conn.LoggingSessionInputBuffer r0;
        org.apache.http.io.SessionInputBuffer $r1;
        org.apache.http.io.HttpTransportMetrics $r2;

        r0 := @this: org.apache.http.impl.conn.LoggingSessionInputBuffer;

        $r1 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.io.SessionInputBuffer in>;

        $r2 = interfaceinvoke $r1.<org.apache.http.io.SessionInputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()>();

        return $r2;
    }

    public boolean isEof()
    {
        org.apache.http.io.EofSensor $r1, $r2;
        org.apache.http.impl.conn.LoggingSessionInputBuffer r0;
        boolean $z0;

        r0 := @this: org.apache.http.impl.conn.LoggingSessionInputBuffer;

        $r1 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.io.EofSensor eofSensor>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.io.EofSensor eofSensor>;

        $z0 = interfaceinvoke $r2.<org.apache.http.io.EofSensor: boolean isEof()>();

        return $z0;

     label1:
        return 0;
    }
}
