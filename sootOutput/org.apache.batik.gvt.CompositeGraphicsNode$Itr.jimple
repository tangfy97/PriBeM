class org.apache.batik.gvt.CompositeGraphicsNode$Itr extends java.lang.Object implements java.util.Iterator
{
    int cursor;
    int lastRet;
    int expectedModCount;
    private final org.apache.batik.gvt.CompositeGraphicsNode this$0;

    private void <init>(org.apache.batik.gvt.CompositeGraphicsNode)
    {
        int $i0, $i2;
        org.apache.batik.gvt.CompositeGraphicsNode$Itr r0;
        org.apache.batik.gvt.CompositeGraphicsNode r1, $r2;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode$Itr;

        r1 := @parameter0: org.apache.batik.gvt.CompositeGraphicsNode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: org.apache.batik.gvt.CompositeGraphicsNode this$0> = r1;

        r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int cursor> = 0;

        $i2 = (int) -1;

        r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int lastRet> = $i2;

        $r2 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: org.apache.batik.gvt.CompositeGraphicsNode this$0>;

        $i0 = $r2.<org.apache.batik.gvt.CompositeGraphicsNode: int modCount>;

        r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int expectedModCount> = $i0;

        return;
    }

    public boolean hasNext()
    {
        int $i0, $i1;
        org.apache.batik.gvt.CompositeGraphicsNode$Itr r0;
        org.apache.batik.gvt.CompositeGraphicsNode $r1;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode$Itr;

        $i1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int cursor>;

        $r1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: org.apache.batik.gvt.CompositeGraphicsNode this$0>;

        $i0 = $r1.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if $i1 == $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object next()
    {
        java.lang.IndexOutOfBoundsException $r3;
        org.apache.batik.gvt.CompositeGraphicsNode$Itr r0;
        org.apache.batik.gvt.CompositeGraphicsNode $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r4;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode$Itr;

     label1:
        $r1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: org.apache.batik.gvt.CompositeGraphicsNode this$0>;

        $i0 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int cursor>;

        $r2 = virtualinvoke $r1.<org.apache.batik.gvt.CompositeGraphicsNode: java.lang.Object get(int)>($i0);

        virtualinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: void checkForComodification()>();

        $i1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int cursor>;

        $i2 = $i1 + 1;

        r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int cursor> = $i2;

        r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int lastRet> = $i1;

        return $r2;

     label2:
        $r3 := @caughtexception;

        virtualinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: void checkForComodification()>();

        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        throw $r4;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label2;
    }

    public void remove()
    {
        java.lang.IndexOutOfBoundsException $r4;
        java.lang.IllegalStateException $r6;
        org.apache.batik.gvt.CompositeGraphicsNode$Itr r0;
        org.apache.batik.gvt.CompositeGraphicsNode $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i10;
        java.util.ConcurrentModificationException $r7;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode$Itr;

        $i0 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int lastRet>;

        $i8 = (int) -1;

        if $i0 != $i8 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>()>();

        throw $r6;

     label1:
        virtualinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: void checkForComodification()>();

     label2:
        $r1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: org.apache.batik.gvt.CompositeGraphicsNode this$0>;

        $i1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int lastRet>;

        virtualinvoke $r1.<org.apache.batik.gvt.CompositeGraphicsNode: java.lang.Object remove(int)>($i1);

        $i3 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int lastRet>;

        $i2 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int cursor>;

        if $i3 >= $i2 goto label3;

        $i5 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int cursor>;

        $i6 = $i5 - 1;

        r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int cursor> = $i6;

     label3:
        $i10 = (int) -1;

        r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int lastRet> = $i10;

        $r2 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: org.apache.batik.gvt.CompositeGraphicsNode this$0>;

        $i4 = $r2.<org.apache.batik.gvt.CompositeGraphicsNode: int modCount>;

        r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int expectedModCount> = $i4;

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

        $r7 = new java.util.ConcurrentModificationException;

        specialinvoke $r7.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r7;

     label6:
        return;

        catch java.lang.IndexOutOfBoundsException from label2 to label4 with label5;
    }

    final void checkForComodification()
    {
        int $i0, $i1;
        org.apache.batik.gvt.CompositeGraphicsNode$Itr r0;
        java.util.ConcurrentModificationException $r2;
        org.apache.batik.gvt.CompositeGraphicsNode $r1;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode$Itr;

        $r1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: org.apache.batik.gvt.CompositeGraphicsNode this$0>;

        $i1 = $r1.<org.apache.batik.gvt.CompositeGraphicsNode: int modCount>;

        $i0 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int expectedModCount>;

        if $i1 == $i0 goto label1;

        $r2 = new java.util.ConcurrentModificationException;

        specialinvoke $r2.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r2;

     label1:
        return;
    }

    void <init>(org.apache.batik.gvt.CompositeGraphicsNode, org.apache.batik.gvt.CompositeGraphicsNode$1)
    {
        org.apache.batik.gvt.CompositeGraphicsNode$Itr r0;
        org.apache.batik.gvt.CompositeGraphicsNode r1;
        org.apache.batik.gvt.CompositeGraphicsNode$1 r2;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode$Itr;

        r1 := @parameter0: org.apache.batik.gvt.CompositeGraphicsNode;

        r2 := @parameter1: org.apache.batik.gvt.CompositeGraphicsNode$1;

        specialinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: void <init>(org.apache.batik.gvt.CompositeGraphicsNode)>(r1);

        return;
    }
}
