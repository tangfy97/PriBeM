public class org.apache.jena.riot.RDFWriterRegistry extends java.lang.Object
{
    private static java.util.Map registryGraph;
    private static java.util.Map registryDataset;
    private static java.util.Map langToFormat;
    static org.apache.jena.riot.WriterGraphRIOTFactory wgfactory;
    static org.apache.jena.riot.WriterDatasetRIOTFactory wdsfactory;

    public void <init>()
    {
        org.apache.jena.riot.RDFWriterRegistry r0;

        r0 := @this: org.apache.jena.riot.RDFWriterRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void init()
    {
        return;
    }

    private static void init$()
    {
        org.apache.jena.riot.WriterDatasetRIOTFactory $r44, $r46, $r48, $r50, $r52, $r54;
        org.apache.jena.riot.Lang $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15;
        org.apache.jena.riot.WriterGraphRIOTFactory $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42;
        org.apache.jena.riot.RDFFormat $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r45, $r47, $r49, $r51, $r53, $r55;

        $r1 = <org.apache.jena.riot.Lang: org.apache.jena.riot.Lang TURTLE>;

        $r0 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat TURTLE>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.Lang,org.apache.jena.riot.RDFFormat)>($r1, $r0);

        $r3 = <org.apache.jena.riot.Lang: org.apache.jena.riot.Lang N3>;

        $r2 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat TURTLE>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.Lang,org.apache.jena.riot.RDFFormat)>($r3, $r2);

        $r5 = <org.apache.jena.riot.Lang: org.apache.jena.riot.Lang NTRIPLES>;

        $r4 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat NTRIPLES>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.Lang,org.apache.jena.riot.RDFFormat)>($r5, $r4);

        $r7 = <org.apache.jena.riot.Lang: org.apache.jena.riot.Lang RDFXML>;

        $r6 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat RDFXML>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.Lang,org.apache.jena.riot.RDFFormat)>($r7, $r6);

        $r9 = <org.apache.jena.riot.Lang: org.apache.jena.riot.Lang RDFJSON>;

        $r8 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat RDFJSON>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.Lang,org.apache.jena.riot.RDFFormat)>($r9, $r8);

        $r11 = <org.apache.jena.riot.Lang: org.apache.jena.riot.Lang TRIG>;

        $r10 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat TRIG>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.Lang,org.apache.jena.riot.RDFFormat)>($r11, $r10);

        $r13 = <org.apache.jena.riot.Lang: org.apache.jena.riot.Lang NQUADS>;

        $r12 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat NQUADS>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.Lang,org.apache.jena.riot.RDFFormat)>($r13, $r12);

        $r15 = <org.apache.jena.riot.Lang: org.apache.jena.riot.Lang RDFNULL>;

        $r14 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat RDFNULL>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.Lang,org.apache.jena.riot.RDFFormat)>($r15, $r14);

        $r17 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat TURTLE_PRETTY>;

        $r16 = <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.WriterGraphRIOTFactory wgfactory>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.RDFFormat,org.apache.jena.riot.WriterGraphRIOTFactory)>($r17, $r16);

        $r19 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat TURTLE_BLOCKS>;

        $r18 = <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.WriterGraphRIOTFactory wgfactory>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.RDFFormat,org.apache.jena.riot.WriterGraphRIOTFactory)>($r19, $r18);

        $r21 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat TURTLE_FLAT>;

        $r20 = <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.WriterGraphRIOTFactory wgfactory>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.RDFFormat,org.apache.jena.riot.WriterGraphRIOTFactory)>($r21, $r20);

        $r23 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat NTRIPLES>;

        $r22 = <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.WriterGraphRIOTFactory wgfactory>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.RDFFormat,org.apache.jena.riot.WriterGraphRIOTFactory)>($r23, $r22);

        $r25 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat NTRIPLES_ASCII>;

        $r24 = <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.WriterGraphRIOTFactory wgfactory>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.RDFFormat,org.apache.jena.riot.WriterGraphRIOTFactory)>($r25, $r24);

        $r27 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat RDFJSON>;

        $r26 = <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.WriterGraphRIOTFactory wgfactory>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.RDFFormat,org.apache.jena.riot.WriterGraphRIOTFactory)>($r27, $r26);

        $r29 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat RDFXML_PRETTY>;

        $r28 = <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.WriterGraphRIOTFactory wgfactory>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.RDFFormat,org.apache.jena.riot.WriterGraphRIOTFactory)>($r29, $r28);

        $r31 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat RDFXML_PLAIN>;

        $r30 = <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.WriterGraphRIOTFactory wgfactory>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.RDFFormat,org.apache.jena.riot.WriterGraphRIOTFactory)>($r31, $r30);

        $r33 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat TRIG_PRETTY>;

        $r32 = <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.WriterGraphRIOTFactory wgfactory>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.RDFFormat,org.apache.jena.riot.WriterGraphRIOTFactory)>($r33, $r32);

        $r35 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat TRIG_BLOCKS>;

        $r34 = <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.WriterGraphRIOTFactory wgfactory>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.RDFFormat,org.apache.jena.riot.WriterGraphRIOTFactory)>($r35, $r34);

        $r37 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat TRIG_FLAT>;

        $r36 = <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.WriterGraphRIOTFactory wgfactory>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.RDFFormat,org.apache.jena.riot.WriterGraphRIOTFactory)>($r37, $r36);

        $r39 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat NQUADS>;

        $r38 = <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.WriterGraphRIOTFactory wgfactory>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.RDFFormat,org.apache.jena.riot.WriterGraphRIOTFactory)>($r39, $r38);

        $r41 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat NQUADS_ASCII>;

        $r40 = <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.WriterGraphRIOTFactory wgfactory>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.RDFFormat,org.apache.jena.riot.WriterGraphRIOTFactory)>($r41, $r40);

        $r43 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat RDFNULL>;

        $r42 = <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.WriterGraphRIOTFactory wgfactory>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.RDFFormat,org.apache.jena.riot.WriterGraphRIOTFactory)>($r43, $r42);

        $r45 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat TRIG_PRETTY>;

        $r44 = <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.WriterDatasetRIOTFactory wdsfactory>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.RDFFormat,org.apache.jena.riot.WriterDatasetRIOTFactory)>($r45, $r44);

        $r47 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat TRIG_BLOCKS>;

        $r46 = <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.WriterDatasetRIOTFactory wdsfactory>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.RDFFormat,org.apache.jena.riot.WriterDatasetRIOTFactory)>($r47, $r46);

        $r49 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat TRIG_FLAT>;

        $r48 = <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.WriterDatasetRIOTFactory wdsfactory>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.RDFFormat,org.apache.jena.riot.WriterDatasetRIOTFactory)>($r49, $r48);

        $r51 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat NQUADS>;

        $r50 = <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.WriterDatasetRIOTFactory wdsfactory>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.RDFFormat,org.apache.jena.riot.WriterDatasetRIOTFactory)>($r51, $r50);

        $r53 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat NQUADS_ASCII>;

        $r52 = <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.WriterDatasetRIOTFactory wdsfactory>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.RDFFormat,org.apache.jena.riot.WriterDatasetRIOTFactory)>($r53, $r52);

        $r55 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat RDFNULL>;

        $r54 = <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.WriterDatasetRIOTFactory wdsfactory>;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.RDFFormat,org.apache.jena.riot.WriterDatasetRIOTFactory)>($r55, $r54);

        return;
    }

    public static void register(org.apache.jena.riot.RDFFormat, org.apache.jena.riot.WriterGraphRIOTFactory)
    {
        org.apache.jena.riot.RDFFormat r0;
        org.apache.jena.riot.WriterGraphRIOTFactory r1;
        java.util.Map $r2;

        r0 := @parameter0: org.apache.jena.riot.RDFFormat;

        r1 := @parameter1: org.apache.jena.riot.WriterGraphRIOTFactory;

        $r2 = <org.apache.jena.riot.RDFWriterRegistry: java.util.Map registryGraph>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

        return;
    }

    public static void register(org.apache.jena.riot.RDFFormat, org.apache.jena.riot.WriterDatasetRIOTFactory)
    {
        org.apache.jena.riot.RDFFormat r0;
        org.apache.jena.riot.WriterDatasetRIOTFactory r1;
        java.util.Map $r2;

        r0 := @parameter0: org.apache.jena.riot.RDFFormat;

        r1 := @parameter1: org.apache.jena.riot.WriterDatasetRIOTFactory;

        $r2 = <org.apache.jena.riot.RDFWriterRegistry: java.util.Map registryDataset>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

        return;
    }

    private static void register(org.apache.jena.riot.RDFFormat)
    {
        org.apache.jena.riot.RDFFormat r0;

        r0 := @parameter0: org.apache.jena.riot.RDFFormat;

        return;
    }

    public static void register(org.apache.jena.riot.Lang, org.apache.jena.riot.RDFFormat)
    {
        org.apache.jena.riot.Lang r1;
        org.apache.jena.riot.RDFFormat r0;
        java.util.Map $r2;

        r1 := @parameter0: org.apache.jena.riot.Lang;

        r0 := @parameter1: org.apache.jena.riot.RDFFormat;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void register(org.apache.jena.riot.RDFFormat)>(r0);

        $r2 = <org.apache.jena.riot.RDFWriterRegistry: java.util.Map langToFormat>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r0);

        return;
    }

    public static org.apache.jena.riot.RDFFormat defaultSerialization(org.apache.jena.riot.Lang)
    {
        org.apache.jena.riot.Lang r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        org.apache.jena.riot.RDFFormat $r3;

        r0 := @parameter0: org.apache.jena.riot.Lang;

        $r1 = <org.apache.jena.riot.RDFWriterRegistry: java.util.Map langToFormat>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (org.apache.jena.riot.RDFFormat) $r2;

        return $r3;
    }

    public static boolean contains(org.apache.jena.riot.Lang)
    {
        org.apache.jena.riot.Lang r0;
        java.util.Map $r1, $r2;
        java.lang.Object $r3;
        org.apache.jena.riot.RDFFormat r4;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.jena.riot.Lang;

        $r1 = <org.apache.jena.riot.RDFWriterRegistry: java.util.Map langToFormat>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = <org.apache.jena.riot.RDFWriterRegistry: java.util.Map langToFormat>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r4 = (org.apache.jena.riot.RDFFormat) $r3;

        $z1 = staticinvoke <org.apache.jena.riot.RDFWriterRegistry: boolean contains(org.apache.jena.riot.RDFFormat)>(r4);

        return $z1;
    }

    public static boolean contains(org.apache.jena.riot.RDFFormat)
    {
        org.apache.jena.riot.Lang $r2;
        java.util.Map $r1, $r3, $r4;
        org.apache.jena.riot.RDFFormat r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: org.apache.jena.riot.RDFFormat;

        $r1 = <org.apache.jena.riot.RDFWriterRegistry: java.util.Map langToFormat>;

        $r2 = virtualinvoke r0.<org.apache.jena.riot.RDFFormat: org.apache.jena.riot.Lang getLang()>();

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $r3 = <org.apache.jena.riot.RDFWriterRegistry: java.util.Map registryGraph>;

        $z1 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r0);

        if $z1 != 0 goto label1;

        $r4 = <org.apache.jena.riot.RDFWriterRegistry: java.util.Map registryDataset>;

        $z2 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r0);

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public static java.util.Collection registeredGraphFormats()
    {
        java.util.Set $r1, $r2;
        java.util.Map $r0;

        $r0 = <org.apache.jena.riot.RDFWriterRegistry: java.util.Map registryGraph>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set keySet()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        return $r2;
    }

    public static java.util.Collection registeredDatasetFormats()
    {
        java.util.Set $r1, $r2;
        java.util.Map $r0;

        $r0 = <org.apache.jena.riot.RDFWriterRegistry: java.util.Map registryDataset>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set keySet()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        return $r2;
    }

    public static org.apache.jena.riot.WriterGraphRIOTFactory getWriterGraphFactory(org.apache.jena.riot.Lang)
    {
        org.apache.jena.riot.Lang r0;
        org.apache.jena.riot.RiotException $r3;
        org.apache.jena.riot.WriterGraphRIOTFactory $r2;
        java.lang.StringBuilder $r4, $r5, $r6;
        org.apache.jena.riot.RDFFormat $r1;
        java.lang.String $r7;

        r0 := @parameter0: org.apache.jena.riot.Lang;

        $r1 = staticinvoke <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.RDFFormat defaultSerialization(org.apache.jena.riot.Lang)>(r0);

        if $r1 != null goto label1;

        $r3 = new org.apache.jena.riot.RiotException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No default serialization for language ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.apache.jena.riot.RiotException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        $r2 = staticinvoke <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.WriterGraphRIOTFactory getWriterGraphFactory(org.apache.jena.riot.RDFFormat)>($r1);

        return $r2;
    }

    public static org.apache.jena.riot.WriterGraphRIOTFactory getWriterGraphFactory(org.apache.jena.riot.RDFFormat)
    {
        org.apache.jena.riot.WriterGraphRIOTFactory $r3;
        java.util.Map $r1;
        java.lang.Object $r2;
        org.apache.jena.riot.RDFFormat r0;

        r0 := @parameter0: org.apache.jena.riot.RDFFormat;

        $r1 = <org.apache.jena.riot.RDFWriterRegistry: java.util.Map registryGraph>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (org.apache.jena.riot.WriterGraphRIOTFactory) $r2;

        return $r3;
    }

    public static org.apache.jena.riot.WriterDatasetRIOTFactory getWriterDatasetFactory(org.apache.jena.riot.Lang)
    {
        org.apache.jena.riot.Lang r0;
        org.apache.jena.riot.RiotException $r3;
        org.apache.jena.riot.WriterDatasetRIOTFactory $r2;
        java.lang.StringBuilder $r4, $r5, $r6;
        org.apache.jena.riot.RDFFormat $r1;
        java.lang.String $r7;

        r0 := @parameter0: org.apache.jena.riot.Lang;

        $r1 = staticinvoke <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.RDFFormat defaultSerialization(org.apache.jena.riot.Lang)>(r0);

        if $r1 != null goto label1;

        $r3 = new org.apache.jena.riot.RiotException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No default serialization for language ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.apache.jena.riot.RiotException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        $r2 = staticinvoke <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.WriterDatasetRIOTFactory getWriterDatasetFactory(org.apache.jena.riot.RDFFormat)>($r1);

        return $r2;
    }

    public static org.apache.jena.riot.WriterDatasetRIOTFactory getWriterDatasetFactory(org.apache.jena.riot.RDFFormat)
    {
        org.apache.jena.riot.WriterDatasetRIOTFactory $r3;
        java.util.Map $r1;
        java.lang.Object $r2;
        org.apache.jena.riot.RDFFormat r0;

        r0 := @parameter0: org.apache.jena.riot.RDFFormat;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = <org.apache.jena.riot.RDFWriterRegistry: java.util.Map registryDataset>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (org.apache.jena.riot.WriterDatasetRIOTFactory) $r2;

        return $r3;
    }

    static void <clinit>()
    {
        org.apache.jena.riot.RDFWriterRegistry$1 $r3;
        org.apache.jena.riot.RDFWriterRegistry$2 $r4;
        java.util.HashMap $r0, $r1, $r2;

        staticinvoke <org.apache.jena.riot.RIOT: void init()>();

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.apache.jena.riot.RDFWriterRegistry: java.util.Map registryGraph> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <org.apache.jena.riot.RDFWriterRegistry: java.util.Map registryDataset> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        <org.apache.jena.riot.RDFWriterRegistry: java.util.Map langToFormat> = $r2;

        $r3 = new org.apache.jena.riot.RDFWriterRegistry$1;

        specialinvoke $r3.<org.apache.jena.riot.RDFWriterRegistry$1: void <init>()>();

        <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.WriterGraphRIOTFactory wgfactory> = $r3;

        $r4 = new org.apache.jena.riot.RDFWriterRegistry$2;

        specialinvoke $r4.<org.apache.jena.riot.RDFWriterRegistry$2: void <init>()>();

        <org.apache.jena.riot.RDFWriterRegistry: org.apache.jena.riot.WriterDatasetRIOTFactory wdsfactory> = $r4;

        staticinvoke <org.apache.jena.riot.RDFWriterRegistry: void init$()>();

        return;
    }
}
