final class org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext extends java.lang.Object
{
    int[] offsets;
    int currentIndex;

    void <init>()
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext r0;
        int[] $r1;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (int)[4];

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext: int[] offsets> = $r1;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext: int currentIndex> = 0;

        return;
    }

    boolean contains(int)
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext r0;
        int[] $r1;
        int $i0, i1, $i2, i3;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext;

        i1 := @parameter0: int;

        i3 = 0;

        goto label3;

     label1:
        $r1 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext: int[] offsets>;

        $i2 = $r1[i3];

        if $i2 != i1 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

     label3:
        $i0 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext: int currentIndex>;

        if i3 < $i0 goto label1;

        return 0;
    }

    void reset()
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext r0;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext: int currentIndex> = 0;

        return;
    }

    void addOffset(int)
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext r0;
        int[] $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, i4;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext;

        i4 := @parameter0: int;

        $i1 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext: int currentIndex>;

        $r1 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext: int[] offsets>;

        $i0 = lengthof $r1;

        if $i1 != $i0 goto label1;

        $r3 = specialinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext: int[] expandOffsets()>();

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext: int[] offsets> = $r3;

     label1:
        $r2 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext: int[] offsets>;

        $i2 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext: int currentIndex>;

        $i3 = $i2 + 1;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext: int currentIndex> = $i3;

        $r2[$i2] = i4;

        return;
    }

    private int[] expandOffsets()
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext r0;
        int[] $r1, r2, $r3;
        int i0, i1, $i2;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext;

        $r1 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext: int[] offsets>;

        i0 = lengthof $r1;

        i1 = i0 << 1;

        r2 = newarray (int)[i1];

        $r3 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext: int[] offsets>;

        $i2 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext: int currentIndex>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, 0, $i2);

        return r2;
    }
}
