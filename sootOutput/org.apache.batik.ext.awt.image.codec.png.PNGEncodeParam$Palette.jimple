public class org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette extends org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam
{
    private boolean backgroundSet;
    private int[] palette;
    private boolean paletteSet;
    private int backgroundPaletteIndex;
    private int[] transparency;

    public void <init>()
    {
        org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette;

        specialinvoke r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette: boolean backgroundSet> = 0;

        r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette: int[] palette> = null;

        r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette: boolean paletteSet> = 0;

        return;
    }

    public void unsetBackground()
    {
        org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette;

        r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette: boolean backgroundSet> = 0;

        return;
    }

    public boolean isBackgroundSet()
    {
        org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette r0;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette;

        $z0 = r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette: boolean backgroundSet>;

        return $z0;
    }

    public void setBitDepth(int)
    {
        int i0;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r1;
        org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette;

        i0 := @parameter0: int;

        if i0 == 1 goto label1;

        if i0 == 2 goto label1;

        if i0 == 4 goto label1;

        if i0 == 8 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = staticinvoke <org.apache.batik.ext.awt.image.codec.util.PropertyUtil: java.lang.String getString(java.lang.String)>("PNGEncodeParam2");

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label1:
        r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam: int bitDepth> = i0;

        r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam: boolean bitDepthSet> = 1;

        return;
    }

    public void setPalette(int[])
    {
        java.lang.IllegalArgumentException $r1, $r6;
        org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette r3;
        int[] r0, $r5;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r4;
        java.lang.String $r2, $r7;

        r3 := @this: org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette;

        r0 := @parameter0: int[];

        $i0 = lengthof r0;

        if $i0 < 3 goto label1;

        $i1 = lengthof r0;

        if $i1 <= 768 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = staticinvoke <org.apache.batik.ext.awt.image.codec.util.PropertyUtil: java.lang.String getString(java.lang.String)>("PNGEncodeParam0");

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label2:
        $i2 = lengthof r0;

        $i3 = $i2 % 3;

        if $i3 == 0 goto label3;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = staticinvoke <org.apache.batik.ext.awt.image.codec.util.PropertyUtil: java.lang.String getString(java.lang.String)>("PNGEncodeParam1");

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label3:
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        $r5 = (int[]) $r4;

        r3.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette: int[] palette> = $r5;

        r3.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette: boolean paletteSet> = 1;

        return;
    }

    public int[] getPalette()
    {
        java.lang.IllegalStateException $r4;
        int[] $r1, $r3;
        java.lang.Object $r2;
        java.lang.String $r5;
        org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette r0;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette;

        $z0 = r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette: boolean paletteSet>;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        $r5 = staticinvoke <org.apache.batik.ext.awt.image.codec.util.PropertyUtil: java.lang.String getString(java.lang.String)>("PNGEncodeParam3");

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label1:
        $r1 = r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette: int[] palette>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (int[]) $r2;

        return $r3;
    }

    public void unsetPalette()
    {
        org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette;

        r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette: int[] palette> = null;

        r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette: boolean paletteSet> = 0;

        return;
    }

    public boolean isPaletteSet()
    {
        org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette r0;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette;

        $z0 = r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette: boolean paletteSet>;

        return $z0;
    }

    public void setBackgroundPaletteIndex(int)
    {
        int i0;
        org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette;

        i0 := @parameter0: int;

        r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette: int backgroundPaletteIndex> = i0;

        r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette: boolean backgroundSet> = 1;

        return;
    }

    public int getBackgroundPaletteIndex()
    {
        java.lang.IllegalStateException $r1;
        int $i0;
        java.lang.String $r2;
        org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette r0;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette;

        $z0 = r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette: boolean backgroundSet>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        $r2 = staticinvoke <org.apache.batik.ext.awt.image.codec.util.PropertyUtil: java.lang.String getString(java.lang.String)>("PNGEncodeParam4");

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label1:
        $i0 = r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette: int backgroundPaletteIndex>;

        return $i0;
    }

    public void setPaletteTransparency(byte[])
    {
        byte[] r1;
        org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette r0;
        short $s3, $s5;
        byte $b2;
        int[] $r2, $r3;
        int $i0, $i1, i4, $i6;

        r0 := @this: org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        $r2 = newarray (int)[$i0];

        r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette: int[] transparency> = $r2;

        i4 = 0;

        goto label2;

     label1:
        $r3 = r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette: int[] transparency>;

        $b2 = r1[i4];

        $s5 = (short) $b2;

        $s3 = $s5 & 255;

        $i6 = (int) $s3;

        $r3[i4] = $i6;

        i4 = i4 + 1;

     label2:
        $i1 = lengthof r1;

        if i4 < $i1 goto label1;

        r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam: boolean transparencySet> = 1;

        return;
    }

    public byte[] getPaletteTransparency()
    {
        byte[] r2;
        java.lang.IllegalStateException $r4;
        org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette r0;
        byte $b3;
        int[] $r1, $r3;
        int $i0, $i1, $i2, i4;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette;

        $z0 = r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam: boolean transparencySet>;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        $r5 = staticinvoke <org.apache.batik.ext.awt.image.codec.util.PropertyUtil: java.lang.String getString(java.lang.String)>("PNGEncodeParam5");

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label1:
        $r1 = r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette: int[] transparency>;

        $i0 = lengthof $r1;

        r2 = newarray (byte)[$i0];

        i4 = 0;

        goto label3;

     label2:
        $r3 = r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Palette: int[] transparency>;

        $i2 = $r3[i4];

        $b3 = (byte) $i2;

        r2[i4] = $b3;

        i4 = i4 + 1;

     label3:
        $i1 = lengthof r2;

        if i4 < $i1 goto label2;

        return r2;
    }
}
