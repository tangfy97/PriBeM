public class ucar.nc2.NCdumpW extends java.lang.Object
{
    private static java.lang.String usage;
    private static int totalWidth;
    private static char[] org;
    private static java.lang.String[] replace;

    public void <init>()
    {
        ucar.nc2.NCdumpW r0;

        r0 := @this: ucar.nc2.NCdumpW;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean printHeader(java.lang.String, java.io.Writer) throws java.io.IOException
    {
        java.io.Writer r1;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.Writer;

        $z0 = staticinvoke <ucar.nc2.NCdumpW: boolean print(java.lang.String,java.io.Writer,boolean,boolean,boolean,boolean,java.lang.String,ucar.nc2.util.CancelTask)>(r0, r1, 0, 0, 0, 0, null, null);

        return $z0;
    }

    public static boolean printNcML(java.lang.String, java.io.Writer) throws java.io.IOException
    {
        java.io.Writer r1;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.Writer;

        $z0 = staticinvoke <ucar.nc2.NCdumpW: boolean print(java.lang.String,java.io.Writer,boolean,boolean,boolean,boolean,java.lang.String,ucar.nc2.util.CancelTask)>(r0, r1, 0, 1, 1, 0, null, null);

        return $z0;
    }

    public static boolean print(java.lang.String, java.io.Writer) throws java.io.IOException
    {
        java.io.Writer r1;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.Writer;

        $z0 = staticinvoke <ucar.nc2.NCdumpW: boolean print(java.lang.String,java.io.Writer,ucar.nc2.util.CancelTask)>(r0, r1, null);

        return $z0;
    }

    public static boolean print(java.lang.String, java.io.Writer, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.lang.Throwable $r7;
        ucar.nc2.util.CancelTask r4;
        java.util.StringTokenizer $r0;
        int $i0, $i1, $i2;
        java.lang.String $r2, $r3, $r6, r9;
        boolean $z0, $z1;
        java.io.FileNotFoundException $r8;
        java.io.Writer r1;
        ucar.nc2.NetcdfFile $r5, r10;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.Writer;

        r4 := @parameter2: ucar.nc2.util.CancelTask;

        $r0 = new java.util.StringTokenizer;

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String)>(r9);

        $z0 = virtualinvoke $r0.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label01;

        $r3 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        goto label02;

     label01:
        $r2 = <ucar.nc2.NCdumpW: java.lang.String usage>;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r2);

        return 0;

     label02:
        r10 = null;

     label03:
        $r5 = staticinvoke <ucar.nc2.NetcdfFile: ucar.nc2.NetcdfFile open(java.lang.String,ucar.nc2.util.CancelTask)>($r3, r4);

        r10 = $r5;

        $i0 = virtualinvoke r9.<java.lang.String: int indexOf(java.lang.String)>($r3);

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i2 = $i0 + $i1;

        $r6 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>($i2);

        $z1 = staticinvoke <ucar.nc2.NCdumpW: boolean print(ucar.nc2.NetcdfFile,java.lang.String,java.io.Writer,ucar.nc2.util.CancelTask)>($r5, $r6, r1, r4);

     label04:
        if $r5 == null goto label05;

        virtualinvoke $r5.<ucar.nc2.NetcdfFile: void close()>();

     label05:
        virtualinvoke r1.<java.io.Writer: void flush()>();

        return $z1;

     label06:
        $r8 := @caughtexception;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("file not found= ");

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r3);

     label07:
        if r10 == null goto label08;

        virtualinvoke r10.<ucar.nc2.NetcdfFile: void close()>();

     label08:
        virtualinvoke r1.<java.io.Writer: void flush()>();

        return 0;

     label09:
        $r7 := @caughtexception;

     label10:
        if r10 == null goto label11;

        virtualinvoke r10.<ucar.nc2.NetcdfFile: void close()>();

     label11:
        virtualinvoke r1.<java.io.Writer: void flush()>();

        throw $r7;

        catch java.io.FileNotFoundException from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static boolean print(ucar.nc2.NetcdfFile, java.lang.String, java.io.Writer, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.NCdumpW$WantValues $r6, r8;
        ucar.nc2.util.CancelTask r3;
        java.util.StringTokenizer $r4;
        java.lang.String r0, $r5, $r7, r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, z9, $z10;
        java.io.Writer r2;
        ucar.nc2.NetcdfFile r1;

        r1 := @parameter0: ucar.nc2.NetcdfFile;

        r0 := @parameter1: java.lang.String;

        r2 := @parameter2: java.io.Writer;

        r3 := @parameter3: ucar.nc2.util.CancelTask;

        r8 = <ucar.nc2.NCdumpW$WantValues: ucar.nc2.NCdumpW$WantValues none>;

        z8 = 0;

        z9 = 0;

        r9 = null;

        if r0 == null goto label8;

        $r4 = new java.util.StringTokenizer;

        specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>(r0);

     label1:
        $z1 = virtualinvoke $r4.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label8;

        $r5 = virtualinvoke $r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-help");

        if $z2 == 0 goto label2;

        $r7 = <ucar.nc2.NCdumpW: java.lang.String usage>;

        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r7);

        virtualinvoke r2.<java.io.Writer: void write(int)>(10);

        return 1;

     label2:
        $z3 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-vall");

        if $z3 == 0 goto label3;

        r8 = <ucar.nc2.NCdumpW$WantValues: ucar.nc2.NCdumpW$WantValues all>;

     label3:
        $z4 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-c");

        if $z4 == 0 goto label4;

        $r6 = <ucar.nc2.NCdumpW$WantValues: ucar.nc2.NCdumpW$WantValues none>;

        if r8 != $r6 goto label4;

        r8 = <ucar.nc2.NCdumpW$WantValues: ucar.nc2.NCdumpW$WantValues coordsOnly>;

     label4:
        $z10 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-ncml");

        if $z10 == 0 goto label5;

        z8 = 1;

     label5:
        $z5 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-cdl");

        if $z5 == 0 goto label6;

        z9 = 1;

     label6:
        $z6 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-v");

        if $z6 == 0 goto label7;

        $z7 = virtualinvoke $r4.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z7 == 0 goto label7;

        r9 = virtualinvoke $r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label7:
        goto label1;

     label8:
        $z0 = staticinvoke <ucar.nc2.NCdumpW: boolean print(ucar.nc2.NetcdfFile,java.io.Writer,ucar.nc2.NCdumpW$WantValues,boolean,boolean,java.lang.String,ucar.nc2.util.CancelTask)>(r1, r2, r8, z8, z9, r9, r3);

        return $z0;
    }

    public static boolean print(java.lang.String, java.io.Writer, boolean, boolean, boolean, boolean, java.lang.String, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.lang.Throwable $r5;
        java.io.FileNotFoundException $r6;
        ucar.nc2.util.CancelTask r1;
        java.io.Writer r3;
        java.lang.String r0, r4;
        ucar.nc2.NetcdfFile $r2, r7;
        boolean z0, z1, z2, z3, $z4;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.io.Writer;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        z3 := @parameter5: boolean;

        r4 := @parameter6: java.lang.String;

        r1 := @parameter7: ucar.nc2.util.CancelTask;

        r7 = null;

     label1:
        $r2 = staticinvoke <ucar.nc2.NetcdfFile: ucar.nc2.NetcdfFile open(java.lang.String,ucar.nc2.util.CancelTask)>(r0, r1);

        r7 = $r2;

        $z4 = staticinvoke <ucar.nc2.NCdumpW: boolean print(ucar.nc2.NetcdfFile,java.io.Writer,boolean,boolean,boolean,boolean,java.lang.String,ucar.nc2.util.CancelTask)>($r2, r3, z0, z1, z2, z3, r4, r1);

     label2:
        if $r2 == null goto label3;

        virtualinvoke $r2.<ucar.nc2.NetcdfFile: void close()>();

     label3:
        return $z4;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>("file not found= ");

        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>(r0);

        virtualinvoke r3.<java.io.Writer: void flush()>();

     label5:
        if r7 == null goto label6;

        virtualinvoke r7.<ucar.nc2.NetcdfFile: void close()>();

     label6:
        return 0;

     label7:
        $r5 := @caughtexception;

     label8:
        if r7 == null goto label9;

        virtualinvoke r7.<ucar.nc2.NetcdfFile: void close()>();

     label9:
        throw $r5;

        catch java.io.FileNotFoundException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public static boolean print(ucar.nc2.NetcdfFile, java.io.Writer, boolean, boolean, boolean, boolean, java.lang.String, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.NCdumpW$WantValues r4;
        ucar.nc2.util.CancelTask r3;
        java.io.Writer r1;
        ucar.nc2.NetcdfFile r0;
        java.lang.String r2;
        boolean z0, z1, z2, z3, $z4;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: java.io.Writer;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        z3 := @parameter5: boolean;

        r2 := @parameter6: java.lang.String;

        r3 := @parameter7: ucar.nc2.util.CancelTask;

        r4 = <ucar.nc2.NCdumpW$WantValues: ucar.nc2.NCdumpW$WantValues none>;

        if z0 == 0 goto label1;

        r4 = <ucar.nc2.NCdumpW$WantValues: ucar.nc2.NCdumpW$WantValues all>;

        goto label2;

     label1:
        if z1 == 0 goto label2;

        r4 = <ucar.nc2.NCdumpW$WantValues: ucar.nc2.NCdumpW$WantValues coordsOnly>;

     label2:
        $z4 = staticinvoke <ucar.nc2.NCdumpW: boolean print(ucar.nc2.NetcdfFile,java.io.Writer,ucar.nc2.NCdumpW$WantValues,boolean,boolean,java.lang.String,ucar.nc2.util.CancelTask)>(r0, r1, r4, z2, z3, r2, r3);

        return $z4;
    }

    public static boolean print(ucar.nc2.NetcdfFile, java.io.Writer, ucar.nc2.NCdumpW$WantValues, boolean, boolean, java.lang.String, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.NCdumpW$WantValues r0, $r1, $r5, $r6, $r11, $r38;
        ucar.nc2.util.CancelTask r14;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.io.PrintWriter $r2, $r33;
        java.lang.Exception $r34;
        java.util.List $r23, $r28;
        java.io.Writer r3;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r20;
        ucar.nc2.NetcdfFile r4;
        java.util.StringTokenizer $r8;
        int $i0;
        ucar.nc2.Variable $r10, r36, r37;
        java.lang.String r7, $r9, $r13, $r19, $r21, $r27, $r32, $r35;
        java.util.Iterator $r24, $r29;
        ucar.ma2.Array $r12, $r22, $r26, $r31;
        java.lang.Object $r25, $r30;

        r4 := @parameter0: ucar.nc2.NetcdfFile;

        r3 := @parameter1: java.io.Writer;

        r0 := @parameter2: ucar.nc2.NCdumpW$WantValues;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r7 := @parameter5: java.lang.String;

        r14 := @parameter6: ucar.nc2.util.CancelTask;

        $r1 = <ucar.nc2.NCdumpW$WantValues: ucar.nc2.NCdumpW$WantValues none>;

        if r0 != $r1 goto label01;

        if r7 != null goto label01;

        $z9 = 1;

        goto label02;

     label01:
        $z9 = 0;

     label02:
        if z0 == 0 goto label03;

        staticinvoke <ucar.nc2.NCdumpW: void writeNcML(ucar.nc2.NetcdfFile,java.io.Writer,ucar.nc2.NCdumpW$WantValues,java.lang.String)>(r4, r3, r0, null);

        goto label23;

     label03:
        if $z9 == 0 goto label04;

        $r33 = new java.io.PrintWriter;

        specialinvoke $r33.<java.io.PrintWriter: void <init>(java.io.Writer)>(r3);

        virtualinvoke r4.<ucar.nc2.NetcdfFile: void writeCDL(java.io.PrintWriter,boolean)>($r33, z1);

        goto label23;

     label04:
        $r2 = new java.io.PrintWriter;

        specialinvoke $r2.<java.io.PrintWriter: void <init>(java.io.Writer)>(r3);

        virtualinvoke r4.<ucar.nc2.NetcdfFile: void toStringStart(java.io.PrintWriter,boolean)>($r2, z1);

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>(" data:\n");

        $r5 = <ucar.nc2.NCdumpW$WantValues: ucar.nc2.NCdumpW$WantValues all>;

        if r0 != $r5 goto label09;

        $r28 = virtualinvoke r4.<ucar.nc2.NetcdfFile: java.util.List getVariables()>();

        $r29 = interfaceinvoke $r28.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z7 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label08;

        $r30 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

        r36 = (ucar.nc2.Variable) $r30;

        $r31 = virtualinvoke r36.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r32 = virtualinvoke r36.<ucar.nc2.Variable: java.lang.String getName()>();

        staticinvoke <ucar.nc2.NCdumpW: void printArray(ucar.ma2.Array,java.lang.String,java.io.PrintWriter,ucar.nc2.util.CancelTask)>($r31, $r32, $r2, r14);

        if r14 == null goto label07;

        $z8 = interfaceinvoke r14.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z8 == 0 goto label07;

     label06:
        return 0;

     label07:
        goto label05;

     label08:
        goto label14;

     label09:
        $r6 = <ucar.nc2.NCdumpW$WantValues: ucar.nc2.NCdumpW$WantValues coordsOnly>;

        if r0 != $r6 goto label14;

        $r23 = virtualinvoke r4.<ucar.nc2.NetcdfFile: java.util.List getVariables()>();

        $r24 = interfaceinvoke $r23.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z4 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label14;

        $r25 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        r37 = (ucar.nc2.Variable) $r25;

        $z5 = virtualinvoke r37.<ucar.nc2.Variable: boolean isCoordinateVariable()>();

        if $z5 == 0 goto label11;

        $r26 = virtualinvoke r37.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r27 = virtualinvoke r37.<ucar.nc2.Variable: java.lang.String getName()>();

        staticinvoke <ucar.nc2.NCdumpW: void printArray(ucar.ma2.Array,java.lang.String,java.io.PrintWriter,ucar.nc2.util.CancelTask)>($r26, $r27, $r2, r14);

     label11:
        if r14 == null goto label13;

        $z6 = interfaceinvoke r14.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z6 == 0 goto label13;

     label12:
        return 0;

     label13:
        goto label10;

     label14:
        $r38 = <ucar.nc2.NCdumpW$WantValues: ucar.nc2.NCdumpW$WantValues all>;

        if r0 == $r38 goto label22;

        if r7 == null goto label22;

        $r8 = new java.util.StringTokenizer;

        specialinvoke $r8.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r7, ";");

     label15:
        $z10 = virtualinvoke $r8.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z10 == 0 goto label22;

        $r9 = virtualinvoke $r8.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i0 = virtualinvoke $r9.<java.lang.String: int indexOf(int)>(40);

        if $i0 < 0 goto label16;

        $r22 = virtualinvoke r4.<ucar.nc2.NetcdfFile: ucar.ma2.Array readSection(java.lang.String)>($r9);

        staticinvoke <ucar.nc2.NCdumpW: void printArray(ucar.ma2.Array,java.lang.String,java.io.PrintWriter,ucar.nc2.util.CancelTask)>($r22, $r9, $r2, r14);

        goto label19;

     label16:
        $r10 = virtualinvoke r4.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>($r9);

        if $r10 != null goto label17;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cant find variable: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n   ");

        $r19 = <ucar.nc2.NCdumpW: java.lang.String usage>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>($r21);

        goto label15;

     label17:
        $r11 = <ucar.nc2.NCdumpW$WantValues: ucar.nc2.NCdumpW$WantValues coordsOnly>;

        if r0 != $r11 goto label18;

        $z3 = virtualinvoke $r10.<ucar.nc2.Variable: boolean isCoordinateVariable()>();

        if $z3 == 0 goto label19;

     label18:
        $r12 = virtualinvoke $r10.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r13 = virtualinvoke $r10.<ucar.nc2.Variable: java.lang.String getName()>();

        staticinvoke <ucar.nc2.NCdumpW: void printArray(ucar.ma2.Array,java.lang.String,java.io.PrintWriter,ucar.nc2.util.CancelTask)>($r12, $r13, $r2, r14);

     label19:
        if r14 == null goto label21;

        $z2 = interfaceinvoke r14.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z2 == 0 goto label21;

     label20:
        return 0;

     label21:
        goto label15;

     label22:
        virtualinvoke r4.<ucar.nc2.NetcdfFile: void toStringEnd(java.io.PrintWriter)>($r2);

     label23:
        goto label25;

     label24:
        $r34 := @caughtexception;

        virtualinvoke $r34.<java.lang.Exception: void printStackTrace()>();

        $r35 = virtualinvoke $r34.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>($r35);

        virtualinvoke r3.<java.io.Writer: void flush()>();

        return 0;

     label25:
        virtualinvoke r3.<java.io.Writer: void flush()>();

        return 1;

        catch java.lang.Exception from label02 to label06 with label24;
        catch java.lang.Exception from label07 to label12 with label24;
        catch java.lang.Exception from label13 to label20 with label24;
        catch java.lang.Exception from label21 to label23 with label24;
    }

    public static java.lang.String printVariableData(ucar.nc2.VariableIF, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.io.PrintWriter $r4;
        ucar.nc2.util.CancelTask r5;
        java.io.StringWriter $r2;
        java.lang.String $r3, $r6;
        ucar.ma2.Array $r1;
        ucar.nc2.VariableIF r0;

        r0 := @parameter0: ucar.nc2.VariableIF;

        r5 := @parameter1: ucar.nc2.util.CancelTask;

        $r1 = interfaceinvoke r0.<ucar.nc2.VariableIF: ucar.ma2.Array read()>();

        $r2 = new java.io.StringWriter;

        specialinvoke $r2.<java.io.StringWriter: void <init>(int)>(10000);

        $r3 = interfaceinvoke r0.<ucar.nc2.VariableIF: java.lang.String getName()>();

        $r4 = new java.io.PrintWriter;

        specialinvoke $r4.<java.io.PrintWriter: void <init>(java.io.Writer)>($r2);

        staticinvoke <ucar.nc2.NCdumpW: void printArray(ucar.ma2.Array,java.lang.String,java.io.PrintWriter,ucar.nc2.util.CancelTask)>($r1, $r3, $r4, r5);

        $r6 = virtualinvoke $r2.<java.io.StringWriter: java.lang.String toString()>();

        return $r6;
    }

    public static java.lang.String printVariableDataSection(ucar.nc2.Variable, java.lang.String, ucar.nc2.util.CancelTask) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        java.io.PrintWriter $r5;
        java.io.StringWriter $r3;
        ucar.ma2.Array $r2;
        ucar.nc2.util.CancelTask r6;
        ucar.nc2.Variable r0;
        java.lang.String r1, $r4, $r7;

        r0 := @parameter0: ucar.nc2.Variable;

        r1 := @parameter1: java.lang.String;

        r6 := @parameter2: ucar.nc2.util.CancelTask;

        $r2 = virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.Array read(java.lang.String)>(r1);

        $r3 = new java.io.StringWriter;

        specialinvoke $r3.<java.io.StringWriter: void <init>(int)>(20000);

        $r4 = virtualinvoke r0.<ucar.nc2.Variable: java.lang.String getName()>();

        $r5 = new java.io.PrintWriter;

        specialinvoke $r5.<java.io.PrintWriter: void <init>(java.io.Writer)>($r3);

        staticinvoke <ucar.nc2.NCdumpW: void printArray(ucar.ma2.Array,java.lang.String,java.io.PrintWriter,ucar.nc2.util.CancelTask)>($r2, $r4, $r5, r6);

        $r7 = virtualinvoke $r3.<java.io.StringWriter: java.lang.String toString()>();

        return $r7;
    }

    public static void printArray(ucar.ma2.Array, java.lang.String, java.io.PrintWriter, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.io.PrintWriter r2;
        ucar.nc2.util.CancelTask r4;
        java.lang.String r1;
        ucar.ma2.Array r0;
        ucar.nc2.util.Indent $r3;

        r0 := @parameter0: ucar.ma2.Array;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: ucar.nc2.util.CancelTask;

        $r3 = new ucar.nc2.util.Indent;

        specialinvoke $r3.<ucar.nc2.util.Indent: void <init>(int)>(2);

        staticinvoke <ucar.nc2.NCdumpW: void printArray(ucar.ma2.Array,java.lang.String,java.lang.String,java.io.PrintWriter,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>(r0, r1, null, r2, $r3, r4);

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

        return;
    }

    public static java.lang.String printArray(ucar.ma2.Array, java.lang.String, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.io.PrintWriter $r1;
        ucar.nc2.util.CancelTask r5;
        java.io.CharArrayWriter $r0;
        java.lang.String r3, $r6;
        ucar.ma2.Array r2;
        ucar.nc2.util.Indent $r4;

        r2 := @parameter0: ucar.ma2.Array;

        r3 := @parameter1: java.lang.String;

        r5 := @parameter2: ucar.nc2.util.CancelTask;

        $r0 = new java.io.CharArrayWriter;

        specialinvoke $r0.<java.io.CharArrayWriter: void <init>(int)>(100000);

        $r1 = new java.io.PrintWriter;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.Writer)>($r0);

        $r4 = new ucar.nc2.util.Indent;

        specialinvoke $r4.<ucar.nc2.util.Indent: void <init>(int)>(2);

        staticinvoke <ucar.nc2.NCdumpW: void printArray(ucar.ma2.Array,java.lang.String,java.lang.String,java.io.PrintWriter,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>(r2, r3, null, $r1, $r4, r5);

        $r6 = virtualinvoke $r0.<java.io.CharArrayWriter: java.lang.String toString()>();

        return $r6;
    }

    private static void printArray(ucar.ma2.Array, java.lang.String, java.lang.String, java.io.PrintWriter, ucar.nc2.util.Indent, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.ma2.ArrayStructure $r15;
        java.nio.ByteBuffer $r13;
        ucar.ma2.StructureData $r18;
        ucar.nc2.util.CancelTask r0;
        byte $b1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.io.PrintWriter r6;
        ucar.nc2.util.Indent r2;
        java.lang.StringBuilder $r8, $r9, $r10, $r24, $r25, $r26, $r28, $r29, $r30, $r31;
        java.lang.Object[] $r21;
        long $l0;
        ucar.ma2.ArrayChar $r23;
        int $i2;
        java.lang.String r1, r7, $r11, $r27, $r32;
        java.io.PrintStream $r22;
        ucar.ma2.ArrayObject $r14, $r20;
        ucar.ma2.Array r3;
        ucar.ma2.ArraySequence $r19;
        ucar.ma2.Index $r16;
        java.lang.Class $r4, $r5;
        java.lang.Object $r12, $r17;

        r3 := @parameter0: ucar.ma2.Array;

        r1 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        r6 := @parameter3: java.io.PrintWriter;

        r2 := @parameter4: ucar.nc2.util.Indent;

        r0 := @parameter5: ucar.nc2.util.CancelTask;

        if r0 == null goto label01;

        $z6 = interfaceinvoke r0.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z6 == 0 goto label01;

        return;

     label01:
        if r1 == null goto label02;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" =");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<java.io.PrintWriter: void print(java.lang.String)>($r32);

     label02:
        virtualinvoke r2.<ucar.nc2.util.Indent: ucar.nc2.util.Indent incr()>();

        if r3 != null goto label03;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null array for ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<java.io.PrintWriter: void println(java.lang.String)>($r27);

        virtualinvoke r2.<ucar.nc2.util.Indent: ucar.nc2.util.Indent decr()>();

        return;

     label03:
        $z0 = r3 instanceof ucar.ma2.ArrayChar;

        if $z0 == 0 goto label04;

        $i2 = virtualinvoke r3.<ucar.ma2.Array: int getRank()>();

        if $i2 <= 0 goto label04;

        $r23 = (ucar.ma2.ArrayChar) r3;

        staticinvoke <ucar.nc2.NCdumpW: void printStringArray(java.io.PrintWriter,ucar.ma2.ArrayChar,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>(r6, $r23, r2, r0);

        goto label13;

     label04:
        $r4 = virtualinvoke r3.<ucar.ma2.Array: java.lang.Class getElementType()>();

        if $r4 != class "Ljava/lang/String;" goto label06;

        $z5 = r3 instanceof ucar.ma2.ArrayObject;

        if $z5 != 0 goto label05;

        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r21 = newarray (java.lang.Object)[0];

        virtualinvoke $r22.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("HEY!%n", $r21);

     label05:
        $r20 = (ucar.ma2.ArrayObject) r3;

        staticinvoke <ucar.nc2.NCdumpW: void printStringArray(java.io.PrintWriter,ucar.ma2.ArrayObject,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>(r6, $r20, r2, r0);

        goto label13;

     label06:
        $z1 = r3 instanceof ucar.ma2.ArraySequence;

        if $z1 == 0 goto label07;

        $r19 = (ucar.ma2.ArraySequence) r3;

        staticinvoke <ucar.nc2.NCdumpW: void printSequence(java.io.PrintWriter,ucar.ma2.ArraySequence,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>(r6, $r19, r2, r0);

        goto label13;

     label07:
        $z2 = r3 instanceof ucar.ma2.ArrayStructure;

        if $z2 == 0 goto label09;

        $l0 = virtualinvoke r3.<ucar.ma2.Array: long getSize()>();

        $b1 = $l0 cmp 1L;

        if $b1 != 0 goto label08;

        $r16 = virtualinvoke r3.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r17 = virtualinvoke r3.<ucar.ma2.Array: java.lang.Object getObject(ucar.ma2.Index)>($r16);

        $r18 = (ucar.ma2.StructureData) $r17;

        staticinvoke <ucar.nc2.NCdumpW: void printStructureData(java.io.PrintWriter,ucar.ma2.StructureData,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>(r6, $r18, r2, r0);

        goto label13;

     label08:
        $r15 = (ucar.ma2.ArrayStructure) r3;

        staticinvoke <ucar.nc2.NCdumpW: void printStructureDataArray(java.io.PrintWriter,ucar.ma2.ArrayStructure,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>(r6, $r15, r2, r0);

        goto label13;

     label09:
        $z3 = r3 instanceof ucar.ma2.ArrayObject;

        if $z3 == 0 goto label10;

        $r14 = (ucar.ma2.ArrayObject) r3;

        staticinvoke <ucar.nc2.NCdumpW: void printVariableArray(java.io.PrintWriter,ucar.ma2.ArrayObject,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>(r6, $r14, r2, r0);

        goto label13;

     label10:
        $r5 = virtualinvoke r3.<ucar.ma2.Array: java.lang.Class getElementType()>();

        if $r5 != class "Ljava/nio/ByteBuffer;" goto label12;

        virtualinvoke r3.<ucar.ma2.Array: void resetLocalIterator()>();

     label11:
        $z7 = virtualinvoke r3.<ucar.ma2.Array: boolean hasNext()>();

        if $z7 == 0 goto label13;

        $r12 = virtualinvoke r3.<ucar.ma2.Array: java.lang.Object next()>();

        $r13 = (java.nio.ByteBuffer) $r12;

        staticinvoke <ucar.nc2.NCdumpW: void printByteBuffer(java.io.PrintWriter,java.nio.ByteBuffer,ucar.nc2.util.Indent)>(r6, $r13, r2);

        virtualinvoke r6.<java.io.PrintWriter: void println(java.lang.String)>(",");

        if r0 == null goto label11;

        $z4 = interfaceinvoke r0.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z4 == 0 goto label11;

        return;

     label12:
        staticinvoke <ucar.nc2.NCdumpW: void printArray(ucar.ma2.Array,java.io.PrintWriter,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>(r3, r6, r2, r0);

     label13:
        if r7 == null goto label14;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<java.io.PrintWriter: void print(java.lang.String)>($r11);

     label14:
        virtualinvoke r6.<java.io.PrintWriter: void print(java.lang.String)>("\n");

        virtualinvoke r2.<ucar.nc2.util.Indent: ucar.nc2.util.Indent decr()>();

        virtualinvoke r6.<java.io.PrintWriter: void flush()>();

        return;
    }

    private static void printArray(ucar.ma2.Array, java.io.PrintWriter, ucar.nc2.util.Indent, ucar.nc2.util.CancelTask)
    {
        ucar.nc2.util.CancelTask r0;
        int[] $r3;
        boolean $z0, $z1, $z2;
        java.io.PrintWriter r4;
        ucar.nc2.util.Indent r7;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r11, $r12, $r13, $r14;
        int $i0, i1, $i2, $i3, i4, i5;
        java.lang.String $r10, $r15, $r20, $r22;
        ucar.ma2.Array r1, $r16;
        ucar.ma2.Index $r2, $r18;
        java.lang.Class $r17;
        java.lang.Object $r19, $r21;

        r1 := @parameter0: ucar.ma2.Array;

        r4 := @parameter1: java.io.PrintWriter;

        r7 := @parameter2: ucar.nc2.util.Indent;

        r0 := @parameter3: ucar.nc2.util.CancelTask;

        if r0 == null goto label01;

        $z2 = interfaceinvoke r0.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z2 == 0 goto label01;

        return;

     label01:
        $i0 = virtualinvoke r1.<ucar.ma2.Array: int getRank()>();

        $r2 = virtualinvoke r1.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        if $i0 != 0 goto label02;

        $r21 = virtualinvoke r1.<ucar.ma2.Array: java.lang.Object getObject(ucar.ma2.Index)>($r2);

        $r22 = virtualinvoke $r21.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>($r22);

        return;

     label02:
        $r3 = virtualinvoke r1.<ucar.ma2.Array: int[] getShape()>();

        i1 = $r3[0];

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>($r10);

        if $i0 != 1 goto label07;

        $r17 = virtualinvoke r1.<ucar.ma2.Array: java.lang.Class getElementType()>();

        if $r17 == class "Lucar/ma2/StructureData;" goto label07;

        i4 = 0;

     label03:
        if i4 >= i1 goto label06;

        $r18 = virtualinvoke $r2.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i4);

        $r19 = virtualinvoke r1.<ucar.ma2.Array: java.lang.Object getObject(ucar.ma2.Index)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>($r20);

        $i3 = i1 - 1;

        if i4 == $i3 goto label04;

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label04:
        if r0 == null goto label05;

        $z1 = interfaceinvoke r0.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z1 == 0 goto label05;

        return;

     label05:
        i4 = i4 + 1;

        goto label03;

     label06:
        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>("}");

        return;

     label07:
        virtualinvoke r7.<ucar.nc2.util.Indent: ucar.nc2.util.Indent incr()>();

        i5 = 0;

     label08:
        if i5 >= i1 goto label11;

        $r16 = virtualinvoke r1.<ucar.ma2.Array: ucar.ma2.Array slice(int,int)>(0, i5);

        staticinvoke <ucar.nc2.NCdumpW: void printArray(ucar.ma2.Array,java.io.PrintWriter,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>($r16, r4, r7, r0);

        $i2 = i1 - 1;

        if i5 == $i2 goto label09;

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>(",");

     label09:
        if r0 == null goto label10;

        $z0 = interfaceinvoke r0.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z0 == 0 goto label10;

        return;

     label10:
        i5 = i5 + 1;

        goto label08;

     label11:
        virtualinvoke r7.<ucar.nc2.util.Indent: ucar.nc2.util.Indent decr()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>($r15);

        return;
    }

    static void printStringArray(java.io.PrintWriter, ucar.ma2.ArrayChar, ucar.nc2.util.Indent, ucar.nc2.util.CancelTask)
    {
        ucar.nc2.util.CancelTask r0;
        int[] $r2;
        boolean $z0, $z1, $z2, z3, $z4;
        java.io.PrintWriter r3;
        ucar.nc2.util.Indent r6;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r10, $r11, $r12, $r13, $r18, $r19, $r21, $r22, $r24, $r25, $r27, $r28;
        ucar.ma2.ArrayChar r1, r16;
        int $i0, $i1, i2, i3;
        java.lang.String $r9, $r14, $r20, $r23, $r26, $r29;
        ucar.ma2.ArrayChar$StringIterator $r17;
        ucar.ma2.Array $r15;

        r3 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: ucar.ma2.ArrayChar;

        r6 := @parameter2: ucar.nc2.util.Indent;

        r0 := @parameter3: ucar.nc2.util.CancelTask;

        if r0 == null goto label01;

        $z2 = interfaceinvoke r0.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z2 == 0 goto label01;

        return;

     label01:
        $i0 = virtualinvoke r1.<ucar.ma2.ArrayChar: int getRank()>();

        if $i0 != 1 goto label02;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  \"");

        $r26 = virtualinvoke r1.<ucar.ma2.ArrayChar: java.lang.String getString()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>($r29);

        return;

     label02:
        if $i0 != 2 goto label06;

        z3 = 1;

        $r17 = virtualinvoke r1.<ucar.ma2.ArrayChar: ucar.ma2.ArrayChar$StringIterator getStringIterator()>();

     label03:
        $z4 = virtualinvoke $r17.<ucar.ma2.ArrayChar$StringIterator: boolean hasNext()>();

        if $z4 == 0 goto label05;

        if z3 != 0 goto label04;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label04:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r20 = virtualinvoke $r17.<ucar.ma2.ArrayChar$StringIterator: java.lang.String next()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>($r23);

        z3 = 0;

        if r0 == null goto label03;

        $z1 = interfaceinvoke r0.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z1 == 0 goto label03;

        return;

     label05:
        return;

     label06:
        $r2 = virtualinvoke r1.<ucar.ma2.ArrayChar: int[] getShape()>();

        i2 = $r2[0];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>($r9);

        virtualinvoke r6.<ucar.nc2.util.Indent: ucar.nc2.util.Indent incr()>();

        i3 = 0;

     label07:
        if i3 >= i2 goto label10;

        $r15 = virtualinvoke r1.<ucar.ma2.ArrayChar: ucar.ma2.Array slice(int,int)>(0, i3);

        r16 = (ucar.ma2.ArrayChar) $r15;

        staticinvoke <ucar.nc2.NCdumpW: void printStringArray(java.io.PrintWriter,ucar.ma2.ArrayChar,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>(r3, r16, r6, r0);

        $i1 = i2 - 1;

        if i3 == $i1 goto label08;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(",");

     label08:
        if r0 == null goto label09;

        $z0 = interfaceinvoke r0.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z0 == 0 goto label09;

        return;

     label09:
        i3 = i3 + 1;

        goto label07;

     label10:
        virtualinvoke r6.<ucar.nc2.util.Indent: ucar.nc2.util.Indent decr()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>($r14);

        return;
    }

    private static void printByteBuffer(java.io.PrintWriter, java.nio.ByteBuffer, ucar.nc2.util.Indent)
    {
        java.io.PrintWriter r0;
        java.lang.Object[] $r7;
        ucar.nc2.util.Indent r2;
        java.nio.ByteBuffer r6;
        byte $b2;
        int $i0, i1, i3;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r5;
        java.lang.Byte $r8;

        r0 := @parameter0: java.io.PrintWriter;

        r6 := @parameter1: java.nio.ByteBuffer;

        r2 := @parameter2: ucar.nc2.util.Indent;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r5);

        $i0 = virtualinvoke r6.<java.nio.ByteBuffer: int limit()>();

        i1 = $i0 - 1;

        i3 = 0;

     label1:
        if i3 > i1 goto label2;

        $r7 = newarray (java.lang.Object)[1];

        $b2 = virtualinvoke r6.<java.nio.ByteBuffer: byte get(int)>(i3);

        $r8 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r7[0] = $r8;

        virtualinvoke r0.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%02x", $r7);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    static void printStringArray(java.io.PrintWriter, ucar.ma2.ArrayObject, ucar.nc2.util.Indent, ucar.nc2.util.CancelTask)
    {
        ucar.nc2.util.CancelTask r0;
        byte $b4;
        int[] $r3;
        boolean $z0, z1;
        java.io.PrintWriter r4;
        ucar.nc2.util.Indent r7;
        java.lang.StringBuilder $r6, $r8, $r9, $r12, $r13, $r14, $r19, $r22, $r23, $r26, $r28, $r29, $r31, $r32, $r33, $r34;
        long $l2, $l3;
        int $i0, $i1, i5, i6, i7, $i8;
        java.lang.String $r10, $r15, $r24, $r30;
        ucar.ma2.ArrayObject r1, r17;
        ucar.ma2.Array $r16;
        ucar.ma2.Index $r2, $r20;
        java.lang.Object $r21, $r27;

        r4 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: ucar.ma2.ArrayObject;

        r7 := @parameter2: ucar.nc2.util.Indent;

        r0 := @parameter3: ucar.nc2.util.CancelTask;

        if r0 == null goto label1;

        $z0 = interfaceinvoke r0.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $i0 = virtualinvoke r1.<ucar.ma2.ArrayObject: int getRank()>();

        $r2 = virtualinvoke r1.<ucar.ma2.ArrayObject: ucar.ma2.Index getIndex()>();

        if $i0 != 0 goto label2;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  \"");

        $r27 = virtualinvoke r1.<ucar.ma2.ArrayObject: java.lang.Object getObject(ucar.ma2.Index)>($r2);

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>($r30);

        return;

     label2:
        if $i0 != 1 goto label6;

        z1 = 1;

        i5 = 0;

     label3:
        $l2 = (long) i5;

        $l3 = virtualinvoke r1.<ucar.ma2.ArrayObject: long getSize()>();

        $b4 = $l2 cmp $l3;

        $i8 = (int) $b4;

        if $i8 >= 0 goto label5;

        if z1 != 0 goto label4;

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label4:
        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  \"");

        $r20 = virtualinvoke $r2.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i5);

        $r21 = virtualinvoke r1.<ucar.ma2.ArrayObject: java.lang.Object getObject(ucar.ma2.Index)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>($r24);

        z1 = 0;

        i5 = i5 + 1;

        goto label3;

     label5:
        return;

     label6:
        $r3 = virtualinvoke r1.<ucar.ma2.ArrayObject: int[] getShape()>();

        i6 = $r3[0];

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>($r10);

        virtualinvoke r7.<ucar.nc2.util.Indent: ucar.nc2.util.Indent incr()>();

        i7 = 0;

     label7:
        if i7 >= i6 goto label9;

        $r16 = virtualinvoke r1.<ucar.ma2.ArrayObject: ucar.ma2.Array slice(int,int)>(0, i7);

        r17 = (ucar.ma2.ArrayObject) $r16;

        staticinvoke <ucar.nc2.NCdumpW: void printStringArray(java.io.PrintWriter,ucar.ma2.ArrayObject,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>(r4, r17, r7, r0);

        $i1 = i6 - 1;

        if i7 == $i1 goto label8;

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>(",");

     label8:
        i7 = i7 + 1;

        goto label7;

     label9:
        virtualinvoke r7.<ucar.nc2.util.Indent: ucar.nc2.util.Indent decr()>();

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>($r15);

        return;
    }

    private static void printStructureDataArray(java.io.PrintWriter, ucar.ma2.ArrayStructure, ucar.nc2.util.Indent, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.ma2.ArrayStructure r0;
        ucar.ma2.StructureDataIterator $r1;
        ucar.ma2.StructureData $r2;
        ucar.nc2.util.CancelTask r10;
        int i0;
        java.lang.String $r9, $r14, $r19;
        boolean $z0, $z1;
        java.io.PrintWriter r3;
        ucar.nc2.util.Indent r6;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r11, $r12, $r13, $r15, $r16, $r17, $r18;

        r3 := @parameter0: java.io.PrintWriter;

        r0 := @parameter1: ucar.ma2.ArrayStructure;

        r6 := @parameter2: ucar.nc2.util.Indent;

        r10 := @parameter3: ucar.nc2.util.CancelTask;

        $r1 = virtualinvoke r0.<ucar.ma2.ArrayStructure: ucar.ma2.StructureDataIterator getStructureDataIterator()>();

        i0 = 0;

     label1:
        $z0 = interfaceinvoke $r1.<ucar.ma2.StructureDataIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<ucar.ma2.StructureDataIterator: ucar.ma2.StructureData next()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        staticinvoke <ucar.nc2.NCdumpW: void printStructureData(java.io.PrintWriter,ucar.ma2.StructureData,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>(r3, $r2, r6, r10);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} ");

        $r14 = virtualinvoke $r2.<ucar.ma2.StructureData: java.lang.String getName()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>($r19);

        if r10 == null goto label2;

        $z1 = interfaceinvoke r10.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z1 == 0 goto label2;

        return;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    private static void printVariableArray(java.io.PrintWriter, ucar.ma2.ArrayObject, ucar.nc2.util.Indent, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.util.CancelTask r15;
        java.lang.String $r6, $r12;
        boolean $z0;
        java.io.PrintWriter r0;
        ucar.ma2.ArrayObject r7;
        ucar.ma2.IndexIterator $r8;
        ucar.ma2.Array r14;
        ucar.nc2.util.Indent r3;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r9, $r10, $r11;
        java.lang.Object $r13;

        r0 := @parameter0: java.io.PrintWriter;

        r7 := @parameter1: ucar.ma2.ArrayObject;

        r3 := @parameter2: ucar.nc2.util.Indent;

        r15 := @parameter3: ucar.nc2.util.CancelTask;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        virtualinvoke r3.<ucar.nc2.util.Indent: ucar.nc2.util.Indent incr()>();

        $r8 = virtualinvoke r7.<ucar.ma2.ArrayObject: ucar.ma2.IndexIterator getIndexIterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r13 = interfaceinvoke $r8.<ucar.ma2.IndexIterator: java.lang.Object next()>();

        r14 = (ucar.ma2.Array) $r13;

        staticinvoke <ucar.nc2.NCdumpW: void printArray(ucar.ma2.Array,java.io.PrintWriter,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>(r14, r0, r3, r15);

        goto label1;

     label2:
        virtualinvoke r3.<ucar.nc2.util.Indent: ucar.nc2.util.Indent decr()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r12);

        return;
    }

    private static void printSequence(java.io.PrintWriter, ucar.ma2.ArraySequence, ucar.nc2.util.Indent, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.ma2.StructureDataIterator $r1;
        ucar.ma2.StructureData $r2;
        ucar.nc2.util.CancelTask r10;
        java.lang.String $r9, $r14, $r16;
        boolean $z0, $z1;
        java.io.PrintWriter r3;
        ucar.nc2.util.Indent r6;
        ucar.ma2.ArraySequence r0;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r11, $r12, $r13, $r15;

        r3 := @parameter0: java.io.PrintWriter;

        r0 := @parameter1: ucar.ma2.ArraySequence;

        r6 := @parameter2: ucar.nc2.util.Indent;

        r10 := @parameter3: ucar.nc2.util.CancelTask;

        $r1 = virtualinvoke r0.<ucar.ma2.ArraySequence: ucar.ma2.StructureDataIterator getStructureDataIterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<ucar.ma2.StructureDataIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<ucar.ma2.StructureDataIterator: ucar.ma2.StructureData next()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        staticinvoke <ucar.nc2.NCdumpW: void printStructureData(java.io.PrintWriter,ucar.ma2.StructureData,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>(r3, $r2, r6, r10);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} ");

        $r14 = virtualinvoke $r2.<ucar.ma2.StructureData: java.lang.String getName()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>($r16);

        if r10 == null goto label2;

        $z1 = interfaceinvoke r10.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z1 == 0 goto label2;

        return;

     label2:
        goto label1;

     label3:
        return;
    }

    public static void printStructureData(java.io.PrintWriter, ucar.ma2.StructureData) throws java.io.IOException
    {
        java.io.PrintWriter r0;
        ucar.ma2.StructureData r1;
        ucar.nc2.util.Indent $r2;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: ucar.ma2.StructureData;

        $r2 = new ucar.nc2.util.Indent;

        specialinvoke $r2.<ucar.nc2.util.Indent: void <init>(int)>(2);

        staticinvoke <ucar.nc2.NCdumpW: void printStructureData(java.io.PrintWriter,ucar.ma2.StructureData,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>(r0, r1, $r2, null);

        virtualinvoke r0.<java.io.PrintWriter: void flush()>();

        return;
    }

    private static void printStructureData(java.io.PrintWriter, ucar.ma2.StructureData, ucar.nc2.util.Indent, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.io.PrintWriter r9;
        java.util.Iterator $r3;
        ucar.ma2.Array $r6;
        ucar.nc2.util.Indent r0;
        ucar.ma2.StructureMembers$Member r5;
        ucar.ma2.StructureData r1;
        java.util.List $r2;
        ucar.nc2.util.CancelTask r10;
        java.lang.Object $r4;
        java.lang.String $r7, $r8;
        boolean $z0, $z1;

        r9 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: ucar.ma2.StructureData;

        r0 := @parameter2: ucar.nc2.util.Indent;

        r10 := @parameter3: ucar.nc2.util.CancelTask;

        virtualinvoke r0.<ucar.nc2.util.Indent: ucar.nc2.util.Indent incr()>();

        $r2 = virtualinvoke r1.<ucar.ma2.StructureData: java.util.List getMembers()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (ucar.ma2.StructureMembers$Member) $r4;

        $r6 = virtualinvoke r1.<ucar.ma2.StructureData: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r5);

        $r7 = virtualinvoke r5.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        $r8 = virtualinvoke r5.<ucar.ma2.StructureMembers$Member: java.lang.String getUnitsString()>();

        staticinvoke <ucar.nc2.NCdumpW: void printArray(ucar.ma2.Array,java.lang.String,java.lang.String,java.io.PrintWriter,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>($r6, $r7, $r8, r9, r0, r10);

        if r10 == null goto label2;

        $z1 = interfaceinvoke r10.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z1 == 0 goto label2;

        return;

     label2:
        goto label1;

     label3:
        virtualinvoke r0.<ucar.nc2.util.Indent: ucar.nc2.util.Indent decr()>();

        return;
    }

    public static void printArray(ucar.ma2.Array, java.io.PrintWriter)
    {
        java.io.PrintWriter r1;
        java.lang.Object $r2;
        ucar.ma2.Array r0;
        boolean $z0;

        r0 := @parameter0: ucar.ma2.Array;

        r1 := @parameter1: java.io.PrintWriter;

        virtualinvoke r0.<ucar.ma2.Array: void resetLocalIterator()>();

     label1:
        $z0 = virtualinvoke r0.<ucar.ma2.Array: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<ucar.ma2.Array: java.lang.Object next()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.Object)>($r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(32);

        goto label1;

     label2:
        return;
    }

    public static void printArray(ucar.ma2.Array)
    {
        java.io.PrintWriter $r0;
        java.io.PrintStream $r1;
        ucar.ma2.Array r2;

        r2 := @parameter0: ucar.ma2.Array;

        $r0 = new java.io.PrintWriter;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r0.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r1);

        staticinvoke <ucar.nc2.NCdumpW: void printArray(ucar.ma2.Array,java.io.PrintWriter)>(r2, $r0);

        virtualinvoke $r0.<java.io.PrintWriter: void flush()>();

        return;
    }

    public static void writeNcML(ucar.nc2.NetcdfFile, java.io.Writer, boolean, java.lang.String) throws java.io.IOException
    {
        ucar.nc2.NCdumpW$WantValues $r3;
        java.io.Writer r1;
        ucar.nc2.NetcdfFile r0;
        java.lang.String r2;
        boolean z0;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: java.io.Writer;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.lang.String;

        if z0 == 0 goto label1;

        $r3 = <ucar.nc2.NCdumpW$WantValues: ucar.nc2.NCdumpW$WantValues coordsOnly>;

        goto label2;

     label1:
        $r3 = <ucar.nc2.NCdumpW$WantValues: ucar.nc2.NCdumpW$WantValues none>;

     label2:
        staticinvoke <ucar.nc2.NCdumpW: void writeNcML(ucar.nc2.NetcdfFile,java.io.Writer,ucar.nc2.NCdumpW$WantValues,java.lang.String)>(r0, r1, $r3, r2);

        return;
    }

    public static void writeNcML(ucar.nc2.NetcdfFile, java.io.Writer, ucar.nc2.NCdumpW$WantValues, java.lang.String) throws java.io.IOException
    {
        ucar.nc2.NCdumpW$WantValues r3;
        java.io.Writer r2;
        ucar.nc2.NetcdfFile r0;
        java.lang.String r4;
        java.util.Formatter $r1;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r2 := @parameter1: java.io.Writer;

        r3 := @parameter2: ucar.nc2.NCdumpW$WantValues;

        r4 := @parameter3: java.lang.String;

        $r1 = new java.util.Formatter;

        specialinvoke $r1.<java.util.Formatter: void <init>(java.lang.Appendable)>(r2);

        staticinvoke <ucar.nc2.NCdumpW: void writeNcML(ucar.nc2.NetcdfFile,java.util.Formatter,ucar.nc2.NCdumpW$WantValues,java.lang.String)>(r0, $r1, r3, r4);

        return;
    }

    public static void writeNcML(ucar.nc2.NetcdfFile, java.util.Formatter, ucar.nc2.NCdumpW$WantValues, java.lang.String) throws java.io.IOException
    {
        java.lang.Object[] $r1, $r2, $r4, $r14, $r15, $r18, $r21;
        ucar.nc2.NCdumpW$WantValues r13;
        java.util.Formatter r0;
        java.lang.String r3, $r6, $r7, $r8, $r9, $r10, $r16, $r17, $r19, $r20, $r22;
        ucar.nc2.Group $r11;
        ucar.nc2.util.Indent $r12;
        ucar.nc2.NetcdfFile r5;

        r5 := @parameter0: ucar.nc2.NetcdfFile;

        r0 := @parameter1: java.util.Formatter;

        r13 := @parameter2: ucar.nc2.NCdumpW$WantValues;

        r3 := @parameter3: java.lang.String;

        $r1 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("<?xml version=\'1.0\' encoding=\'UTF-8\'?>%n", $r1);

        $r2 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("<netcdf xmlns=\'http://www.unidata.ucar.edu/namespaces/netcdf/ncml-2.2\'%n", $r2);

        if r3 == null goto label1;

        $r21 = newarray (java.lang.Object)[1];

        $r22 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String quoteXmlAttribute(java.lang.String)>(r3);

        $r21[0] = $r22;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("    location=\'%s\' >%n%n", $r21);

        goto label2;

     label1:
        $r4 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke r5.<ucar.nc2.NetcdfFile: java.lang.String getLocation()>();

        $r7 = staticinvoke <ucar.nc2.util.URLnaming: java.lang.String canonicalizeWrite(java.lang.String)>($r6);

        $r8 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String quoteXmlAttribute(java.lang.String)>($r7);

        $r4[0] = $r8;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("    location=\'%s\' >%n%n", $r4);

     label2:
        $r9 = virtualinvoke r5.<ucar.nc2.NetcdfFile: java.lang.String getId()>();

        if $r9 == null goto label3;

        $r18 = newarray (java.lang.Object)[1];

        $r19 = virtualinvoke r5.<ucar.nc2.NetcdfFile: java.lang.String getId()>();

        $r20 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String quoteXmlAttribute(java.lang.String)>($r19);

        $r18[0] = $r20;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("    id=\'%s\'%n", $r18);

     label3:
        $r10 = virtualinvoke r5.<ucar.nc2.NetcdfFile: java.lang.String getTitle()>();

        if $r10 == null goto label4;

        $r15 = newarray (java.lang.Object)[1];

        $r16 = virtualinvoke r5.<ucar.nc2.NetcdfFile: java.lang.String getTitle()>();

        $r17 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String quoteXmlAttribute(java.lang.String)>($r16);

        $r15[0] = $r17;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("    title=\'%s\'%n", $r15);

     label4:
        $r11 = virtualinvoke r5.<ucar.nc2.NetcdfFile: ucar.nc2.Group getRootGroup()>();

        $r12 = new ucar.nc2.util.Indent;

        specialinvoke $r12.<ucar.nc2.util.Indent: void <init>(int)>(2);

        staticinvoke <ucar.nc2.NCdumpW: void writeNcMLGroup(ucar.nc2.NetcdfFile,ucar.nc2.Group,java.util.Formatter,ucar.nc2.util.Indent,ucar.nc2.NCdumpW$WantValues)>(r5, $r11, r0, $r12, r13);

        $r14 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("</netcdf>%n", $r14);

        virtualinvoke r0.<java.util.Formatter: void flush()>();

        return;
    }

    public static void writeNcMLVariable(ucar.nc2.Variable, java.util.Formatter) throws java.io.IOException
    {
        ucar.nc2.NCdumpW$WantValues $r3, $r6;
        ucar.nc2.Structure $r5;
        ucar.nc2.util.Indent $r2, $r4;
        java.util.Formatter r1;
        ucar.nc2.Variable r0;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.Variable;

        r1 := @parameter1: java.util.Formatter;

        $z0 = r0 instanceof ucar.nc2.Structure;

        if $z0 == 0 goto label1;

        $r5 = (ucar.nc2.Structure) r0;

        $r4 = new ucar.nc2.util.Indent;

        specialinvoke $r4.<ucar.nc2.util.Indent: void <init>(int)>(2);

        $r6 = <ucar.nc2.NCdumpW$WantValues: ucar.nc2.NCdumpW$WantValues none>;

        staticinvoke <ucar.nc2.NCdumpW: void writeNcMLStructure(ucar.nc2.Structure,java.util.Formatter,ucar.nc2.util.Indent,ucar.nc2.NCdumpW$WantValues)>($r5, r1, $r4, $r6);

        goto label2;

     label1:
        $r2 = new ucar.nc2.util.Indent;

        specialinvoke $r2.<ucar.nc2.util.Indent: void <init>(int)>(2);

        $r3 = <ucar.nc2.NCdumpW$WantValues: ucar.nc2.NCdumpW$WantValues none>;

        staticinvoke <ucar.nc2.NCdumpW: void writeNcMLVariable(ucar.nc2.Variable,java.util.Formatter,ucar.nc2.util.Indent,ucar.nc2.NCdumpW$WantValues)>(r0, r1, $r2, $r3);

     label2:
        return;
    }

    private static void writeNcMLGroup(ucar.nc2.NetcdfFile, ucar.nc2.Group, java.util.Formatter, ucar.nc2.util.Indent, ucar.nc2.NCdumpW$WantValues) throws java.io.IOException
    {
        ucar.nc2.NCdumpW$WantValues r15;
        java.lang.Integer $r27;
        java.util.Formatter r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        ucar.nc2.Group r0, $r2, $r11, $r17;
        ucar.nc2.util.Indent r3;
        java.util.List $r4, $r6, $r8, $r10;
        ucar.nc2.Attribute r34;
        ucar.nc2.NetcdfFile r1;
        java.lang.Object[] $r13, $r16, $r20, $r22, $r24, $r28, $r29, $r30;
        ucar.nc2.Structure $r19;
        int $i0, $i1, $i2, $i3, i4;
        ucar.nc2.Variable r35;
        java.lang.String $r25, $r26, $r31, $r32;
        java.util.Iterator $r5, $r7, $r9;
        java.lang.Object $r14, $r18, $r21, $r23;
        ucar.nc2.Dimension r33;

        r1 := @parameter0: ucar.nc2.NetcdfFile;

        r0 := @parameter1: ucar.nc2.Group;

        r12 := @parameter2: java.util.Formatter;

        r3 := @parameter3: ucar.nc2.util.Indent;

        r15 := @parameter4: ucar.nc2.NCdumpW$WantValues;

        $r2 = virtualinvoke r1.<ucar.nc2.NetcdfFile: ucar.nc2.Group getRootGroup()>();

        if r0 == $r2 goto label01;

        $r30 = newarray (java.lang.Object)[2];

        $r30[0] = r3;

        $r31 = virtualinvoke r0.<ucar.nc2.Group: java.lang.String getShortName()>();

        $r32 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String quoteXmlAttribute(java.lang.String)>($r31);

        $r30[1] = $r32;

        virtualinvoke r12.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s<group name=\'%s\' >%n", $r30);

     label01:
        virtualinvoke r3.<ucar.nc2.util.Indent: ucar.nc2.util.Indent incr()>();

        $r4 = virtualinvoke r0.<ucar.nc2.Group: java.util.List getDimensions()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label04;

        $r23 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r33 = (ucar.nc2.Dimension) $r23;

        $r24 = newarray (java.lang.Object)[3];

        $r24[0] = r3;

        $r25 = virtualinvoke r33.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r26 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String quoteXmlAttribute(java.lang.String)>($r25);

        $r24[1] = $r26;

        $i3 = virtualinvoke r33.<ucar.nc2.Dimension: int getLength()>();

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r24[2] = $r27;

        virtualinvoke r12.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s<dimension name=\'%s\' length=\'%s\'", $r24);

        $z1 = virtualinvoke r33.<ucar.nc2.Dimension: boolean isUnlimited()>();

        if $z1 == 0 goto label03;

        $r29 = newarray (java.lang.Object)[0];

        virtualinvoke r12.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" isUnlimited=\'true\'", $r29);

     label03:
        $r28 = newarray (java.lang.Object)[0];

        virtualinvoke r12.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" />%n", $r28);

        goto label02;

     label04:
        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 <= 0 goto label05;

        $r22 = newarray (java.lang.Object)[0];

        virtualinvoke r12.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%n", $r22);

     label05:
        $r6 = virtualinvoke r0.<ucar.nc2.Group: java.util.List getAttributes()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z3 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label07;

        $r21 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r34 = (ucar.nc2.Attribute) $r21;

        staticinvoke <ucar.nc2.NCdumpW: void writeNcMLAtt(ucar.nc2.Attribute,java.util.Formatter,ucar.nc2.util.Indent)>(r34, r12, r3);

        goto label06;

     label07:
        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i1 <= 0 goto label08;

        $r20 = newarray (java.lang.Object)[0];

        virtualinvoke r12.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%n", $r20);

     label08:
        $r8 = virtualinvoke r0.<ucar.nc2.Group: java.util.List getVariables()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z4 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label12;

        $r18 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r35 = (ucar.nc2.Variable) $r18;

        $z0 = r35 instanceof ucar.nc2.Structure;

        if $z0 == 0 goto label10;

        $r19 = (ucar.nc2.Structure) r35;

        staticinvoke <ucar.nc2.NCdumpW: void writeNcMLStructure(ucar.nc2.Structure,java.util.Formatter,ucar.nc2.util.Indent,ucar.nc2.NCdumpW$WantValues)>($r19, r12, r3, r15);

        goto label11;

     label10:
        staticinvoke <ucar.nc2.NCdumpW: void writeNcMLVariable(ucar.nc2.Variable,java.util.Formatter,ucar.nc2.util.Indent,ucar.nc2.NCdumpW$WantValues)>(r35, r12, r3, r15);

     label11:
        goto label09;

     label12:
        $r10 = virtualinvoke r0.<ucar.nc2.Group: java.util.List getGroups()>();

        i4 = 0;

     label13:
        $i2 = interfaceinvoke $r10.<java.util.List: int size()>();

        if i4 >= $i2 goto label15;

        if i4 <= 0 goto label14;

        $r16 = newarray (java.lang.Object)[0];

        virtualinvoke r12.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%n", $r16);

     label14:
        $r14 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i4);

        $r17 = (ucar.nc2.Group) $r14;

        staticinvoke <ucar.nc2.NCdumpW: void writeNcMLGroup(ucar.nc2.NetcdfFile,ucar.nc2.Group,java.util.Formatter,ucar.nc2.util.Indent,ucar.nc2.NCdumpW$WantValues)>(r1, $r17, r12, r3, r15);

        i4 = i4 + 1;

        goto label13;

     label15:
        virtualinvoke r3.<ucar.nc2.util.Indent: ucar.nc2.util.Indent decr()>();

        $r11 = virtualinvoke r1.<ucar.nc2.NetcdfFile: ucar.nc2.Group getRootGroup()>();

        if r0 == $r11 goto label16;

        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = r3;

        virtualinvoke r12.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s</group>%n", $r13);

     label16:
        return;
    }

    private static void writeNcMLStructure(ucar.nc2.Structure, java.util.Formatter, ucar.nc2.util.Indent, ucar.nc2.NCdumpW$WantValues) throws java.io.IOException
    {
        java.lang.Object[] $r1, $r6, $r11, $r15;
        ucar.nc2.NCdumpW$WantValues r14;
        ucar.nc2.Structure r3;
        java.util.Formatter r0;
        int $i0, $i1;
        ucar.nc2.Variable r13;
        java.lang.String $r4, $r5;
        boolean $z0, $z1;
        java.util.Iterator $r8, $r10;
        ucar.nc2.util.Indent r2;
        java.util.List $r7, $r9;
        ucar.nc2.Attribute r17;
        java.lang.Object $r12, $r16;

        r3 := @parameter0: ucar.nc2.Structure;

        r0 := @parameter1: java.util.Formatter;

        r2 := @parameter2: ucar.nc2.util.Indent;

        r14 := @parameter3: ucar.nc2.NCdumpW$WantValues;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = r2;

        $r4 = virtualinvoke r3.<ucar.nc2.Structure: java.lang.String getShortName()>();

        $r5 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String quoteXmlAttribute(java.lang.String)>($r4);

        $r1[1] = $r5;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s<structure name=\'%s", $r1);

        $i0 = virtualinvoke r3.<ucar.nc2.Structure: int getRank()>();

        if $i0 <= 0 goto label1;

        staticinvoke <ucar.nc2.NCdumpW: void writeNcMLDimension(ucar.nc2.Variable,java.util.Formatter)>(r3, r0);

     label1:
        $r6 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(">%n", $r6);

        virtualinvoke r2.<ucar.nc2.util.Indent: ucar.nc2.util.Indent incr()>();

        $r7 = virtualinvoke r3.<ucar.nc2.Structure: java.util.List getAttributes()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r16 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r17 = (ucar.nc2.Attribute) $r16;

        staticinvoke <ucar.nc2.NCdumpW: void writeNcMLAtt(ucar.nc2.Attribute,java.util.Formatter,ucar.nc2.util.Indent)>(r17, r0, r2);

        goto label2;

     label3:
        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i1 <= 0 goto label4;

        $r15 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%n", $r15);

     label4:
        $r9 = virtualinvoke r3.<ucar.nc2.Structure: java.util.List getVariables()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r12 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r13 = (ucar.nc2.Variable) $r12;

        staticinvoke <ucar.nc2.NCdumpW: void writeNcMLVariable(ucar.nc2.Variable,java.util.Formatter,ucar.nc2.util.Indent,ucar.nc2.NCdumpW$WantValues)>(r13, r0, r2, r14);

        goto label5;

     label6:
        virtualinvoke r2.<ucar.nc2.util.Indent: ucar.nc2.util.Indent decr()>();

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r2;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s</structure>%n", $r11);

        return;
    }

    private static void writeNcMLVariable(ucar.nc2.Variable, java.util.Formatter, ucar.nc2.util.Indent, ucar.nc2.NCdumpW$WantValues) throws java.io.IOException
    {
        java.lang.Object[] $r1, $r10, $r11, $r12, $r14;
        ucar.nc2.NCdumpW$WantValues r8, $r9, $r13;
        java.util.Formatter r0;
        int $i0, $i1;
        ucar.nc2.Variable r3;
        java.lang.String $r4, $r5;
        boolean $z0, $z1, z2, z3, z4;
        java.util.Iterator $r15;
        ucar.ma2.DataType $r6;
        ucar.nc2.util.Indent r2;
        java.util.List $r7;
        ucar.nc2.Attribute r17;
        java.lang.Object $r16;

        r3 := @parameter0: ucar.nc2.Variable;

        r0 := @parameter1: java.util.Formatter;

        r2 := @parameter2: ucar.nc2.util.Indent;

        r8 := @parameter3: ucar.nc2.NCdumpW$WantValues;

        $r1 = newarray (java.lang.Object)[3];

        $r1[0] = r2;

        $r4 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r5 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String quoteXmlAttribute(java.lang.String)>($r4);

        $r1[1] = $r5;

        $r6 = virtualinvoke r3.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r1[2] = $r6;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s<variable name=\'%s\' type=\'%s\'", $r1);

        $i0 = virtualinvoke r3.<ucar.nc2.Variable: int getRank()>();

        if $i0 <= 0 goto label1;

        staticinvoke <ucar.nc2.NCdumpW: void writeNcMLDimension(ucar.nc2.Variable,java.util.Formatter)>(r3, r0);

     label1:
        virtualinvoke r2.<ucar.nc2.util.Indent: ucar.nc2.util.Indent incr()>();

        z2 = 0;

        z4 = 0;

        z3 = 0;

        $r7 = virtualinvoke r3.<ucar.nc2.Variable: java.util.List getAttributes()>();

        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i1 <= 0 goto label3;

        $r14 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" >\n", $r14);

        z2 = 1;

        z4 = 1;

        z3 = 1;

        $r15 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r17 = (ucar.nc2.Attribute) $r16;

        staticinvoke <ucar.nc2.NCdumpW: void writeNcMLAtt(ucar.nc2.Attribute,java.util.Formatter,ucar.nc2.util.Indent)>(r17, r0, r2);

        goto label2;

     label3:
        $r9 = <ucar.nc2.NCdumpW$WantValues: ucar.nc2.NCdumpW$WantValues all>;

        if r8 == $r9 goto label4;

        $r13 = <ucar.nc2.NCdumpW$WantValues: ucar.nc2.NCdumpW$WantValues coordsOnly>;

        if r8 != $r13 goto label6;

        $z0 = virtualinvoke r3.<ucar.nc2.Variable: boolean isCoordinateVariable()>();

        if $z0 == 0 goto label6;

     label4:
        if z3 != 0 goto label5;

        $r12 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" >\n", $r12);

        z2 = 1;

        z4 = 1;

     label5:
        staticinvoke <ucar.nc2.NCdumpW: void writeNcMLValues(ucar.nc2.Variable,java.util.Formatter,ucar.nc2.util.Indent)>(r3, r0, r2);

     label6:
        virtualinvoke r2.<ucar.nc2.util.Indent: ucar.nc2.util.Indent decr()>();

        if z4 != 0 goto label7;

        $r11 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" />\n", $r11);

        goto label8;

     label7:
        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r2;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s</variable>%n", $r10);

     label8:
        return;
    }

    private static void writeNcMLDimension(ucar.nc2.Variable, java.util.Formatter)
    {
        java.lang.Object[] $r1, $r4, $r7, $r9, $r12;
        java.lang.Integer $r8;
        java.util.Formatter r0;
        int $i0, $i1, i2;
        ucar.nc2.Variable r2;
        java.lang.String $r10, $r11;
        boolean $z0;
        java.util.List $r3;
        java.lang.Object $r5;
        ucar.nc2.Dimension r6;

        r2 := @parameter0: ucar.nc2.Variable;

        r0 := @parameter1: java.util.Formatter;

        $r1 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" shape=\'", $r1);

        $r3 = virtualinvoke r2.<ucar.nc2.Variable: java.util.List getDimensions()>();

        i2 = 0;

     label1:
        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i2 >= $i0 goto label5;

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i2);

        r6 = (ucar.nc2.Dimension) $r5;

        if i2 == 0 goto label2;

        $r12 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" ", $r12);

     label2:
        $z0 = virtualinvoke r6.<ucar.nc2.Dimension: boolean isShared()>();

        if $z0 == 0 goto label3;

        $r9 = newarray (java.lang.Object)[1];

        $r10 = virtualinvoke r6.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r11 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String quoteXmlAttribute(java.lang.String)>($r10);

        $r9[0] = $r11;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s", $r9);

        goto label4;

     label3:
        $r7 = newarray (java.lang.Object)[1];

        $i1 = virtualinvoke r6.<ucar.nc2.Dimension: int getLength()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r7[0] = $r8;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%d", $r7);

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        $r4 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("\'", $r4);

        return;
    }

    private static void writeNcMLAtt(ucar.nc2.Attribute, java.util.Formatter, ucar.nc2.util.Indent)
    {
        java.lang.Object[] $r1, $r6, $r8, $r9, $r11, $r12, $r15;
        java.util.Formatter r0;
        int $i0, $i1, i2, i3;
        java.lang.String $r4, $r5, $r13, $r14;
        java.lang.Number $r10;
        boolean $z0;
        ucar.ma2.DataType $r7;
        ucar.nc2.util.Indent r2;
        ucar.nc2.Attribute r3;

        r3 := @parameter0: ucar.nc2.Attribute;

        r0 := @parameter1: java.util.Formatter;

        r2 := @parameter2: ucar.nc2.util.Indent;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = r2;

        $r4 = virtualinvoke r3.<ucar.nc2.Attribute: java.lang.String getName()>();

        $r5 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String quoteXmlAttribute(java.lang.String)>($r4);

        $r1[1] = $r5;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s<attribute name=\'%s\' value=\'", $r1);

        $z0 = virtualinvoke r3.<ucar.nc2.Attribute: boolean isString()>();

        if $z0 == 0 goto label4;

        i2 = 0;

     label1:
        $i1 = virtualinvoke r3.<ucar.nc2.Attribute: int getLength()>();

        if i2 >= $i1 goto label3;

        if i2 <= 0 goto label2;

        $r15 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("\\, ", $r15);

     label2:
        $r12 = newarray (java.lang.Object)[1];

        $r13 = virtualinvoke r3.<ucar.nc2.Attribute: java.lang.String getStringValue(int)>(i2);

        $r14 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String quoteXmlAttribute(java.lang.String)>($r13);

        $r12[0] = $r14;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s", $r12);

        i2 = i2 + 1;

        goto label1;

     label3:
        goto label8;

     label4:
        i3 = 0;

     label5:
        $i0 = virtualinvoke r3.<ucar.nc2.Attribute: int getLength()>();

        if i3 >= $i0 goto label7;

        if i3 <= 0 goto label6;

        $r11 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" ", $r11);

     label6:
        $r9 = newarray (java.lang.Object)[1];

        $r10 = virtualinvoke r3.<ucar.nc2.Attribute: java.lang.Number getNumericValue(int)>(i3);

        $r9[0] = $r10;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s ", $r9);

        i3 = i3 + 1;

        goto label5;

     label7:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = virtualinvoke r3.<ucar.nc2.Attribute: ucar.ma2.DataType getDataType()>();

        $r6[0] = $r7;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("\' type=\'%s", $r6);

     label8:
        $r8 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("\' />\n", $r8);

        return;
    }

    private static void writeNcMLValues(ucar.nc2.Variable, java.util.Formatter, ucar.nc2.util.Indent) throws java.io.IOException
    {
        java.util.Formatter r7;
        int i0;
        ucar.nc2.Variable r0;
        java.lang.String $r6, $r13;
        boolean $z0;
        ucar.ma2.IndexIterator $r8;
        ucar.ma2.Array $r1;
        ucar.nc2.util.Indent r3;
        java.lang.StringBuilder $r2, $r4, $r5, $r9, $r11, $r12;
        java.lang.Object $r10;

        r0 := @parameter0: ucar.nc2.Variable;

        r7 := @parameter1: java.util.Formatter;

        r3 := @parameter2: ucar.nc2.util.Indent;

        $r1 = virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<values>");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = staticinvoke <ucar.nc2.NCdumpW: int formatValues(java.lang.String,java.util.Formatter,int,ucar.nc2.util.Indent)>($r6, r7, 0, r3);

        $r8 = virtualinvoke $r1.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = interfaceinvoke $r8.<ucar.ma2.IndexIterator: java.lang.Object next()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = staticinvoke <ucar.nc2.NCdumpW: int formatValues(java.lang.String,java.util.Formatter,int,ucar.nc2.util.Indent)>($r13, r7, i0, r3);

        goto label1;

     label2:
        staticinvoke <ucar.nc2.NCdumpW: int formatValues(java.lang.String,java.util.Formatter,int,ucar.nc2.util.Indent)>("</values>\n", r7, i0, r3);

        return;
    }

    private static int formatValues(java.lang.String, java.util.Formatter, int, ucar.nc2.util.Indent)
    {
        java.lang.Object[] $r2, $r3;
        ucar.nc2.util.Indent r4;
        java.util.Formatter r1;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String r0, $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Formatter;

        i4 := @parameter2: int;

        r4 := @parameter3: ucar.nc2.util.Indent;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = $i0 + i4;

        $i1 = <ucar.nc2.NCdumpW: int totalWidth>;

        if $i2 <= $i1 goto label1;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r4;

        virtualinvoke r1.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%n%s", $r3);

        $r5 = virtualinvoke r4.<ucar.nc2.util.Indent: java.lang.String toString()>();

        i4 = virtualinvoke $r5.<java.lang.String: int length()>();

     label1:
        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r0;

        virtualinvoke r1.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s", $r2);

        $i3 = i4 + $i0;

        return $i3;
    }

    public static java.lang.String encodeString(java.lang.String)
    {
        char[] $r2;
        java.lang.String[] $r1;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        $r2 = <ucar.nc2.NCdumpW: char[] org>;

        $r1 = <ucar.nc2.NCdumpW: java.lang.String[] replace>;

        $r3 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,char[],java.lang.String[])>(r0, $r2, $r1);

        return $r3;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r4, $r9;
        java.io.BufferedWriter $r2;
        java.lang.String[] r0;
        java.io.IOException $r10;
        java.nio.charset.Charset $r5;
        int $i0, i1, i2;
        java.io.OutputStreamWriter $r3;
        java.lang.StringBuilder $r1;
        java.lang.String $r6, r7, $r8;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = <ucar.nc2.NCdumpW: java.lang.String usage>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r8);

        return;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        i1 = lengthof r0;

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        r7 = r0[i2];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        i2 = i2 + 1;

        goto label2;

     label3:
        $r2 = new java.io.BufferedWriter;

        $r3 = new java.io.OutputStreamWriter;

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r5 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        specialinvoke $r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r4, $r5);

        specialinvoke $r2.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r3);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ucar.nc2.NCdumpW: boolean print(java.lang.String,java.io.Writer,ucar.nc2.util.CancelTask)>($r6, $r2, null);

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;

        virtualinvoke $r10.<java.io.IOException: void printStackTrace()>();

     label6:
        return;

        catch java.io.IOException from label3 to label4 with label5;
    }

    static void <clinit>()
    {
        char[] $r0;
        java.lang.String[] $r1;

        <ucar.nc2.NCdumpW: java.lang.String usage> = "usage: NCdumpW <filename> [-cdl | -ncml] [-c | -vall] [-v varName1;varName2;..] [-v varName(0:1,:,12)]\n";

        <ucar.nc2.NCdumpW: int totalWidth> = 80;

        $r0 = newarray (char)[8];

        $r0[0] = 8;

        $r0[1] = 12;

        $r0[2] = 10;

        $r0[3] = 13;

        $r0[4] = 9;

        $r0[5] = 92;

        $r0[6] = 39;

        $r0[7] = 34;

        <ucar.nc2.NCdumpW: char[] org> = $r0;

        $r1 = newarray (java.lang.String)[8];

        $r1[0] = "\\b";

        $r1[1] = "\\f";

        $r1[2] = "\\n";

        $r1[3] = "\\r";

        $r1[4] = "\\t";

        $r1[5] = "\\\\";

        $r1[6] = "\\\'";

        $r1[7] = "\\\"";

        <ucar.nc2.NCdumpW: java.lang.String[] replace> = $r1;

        return;
    }
}
