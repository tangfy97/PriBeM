public class org.apache.tika.server.TikaServerCli extends java.lang.Object
{
    private static final org.apache.commons.logging.Log logger;
    public static final int DEFAULT_PORT;
    public static final java.lang.String DEFAULT_HOST;
    public static final java.util.Set LOG_LEVELS;

    public void <init>()
    {
        org.apache.tika.server.TikaServerCli r0;

        r0 := @this: org.apache.tika.server.TikaServerCli;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static org.apache.commons.cli.Options getOptions()
    {
        org.apache.commons.cli.Options $r0;

        $r0 = new org.apache.commons.cli.Options;

        specialinvoke $r0.<org.apache.commons.cli.Options: void <init>()>();

        virtualinvoke $r0.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(java.lang.String,java.lang.String,boolean,java.lang.String)>("h", "host", 1, "host name (default = localhost)");

        virtualinvoke $r0.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(java.lang.String,java.lang.String,boolean,java.lang.String)>("p", "port", 1, "listen port (default = 9998)");

        virtualinvoke $r0.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(java.lang.String,java.lang.String,boolean,java.lang.String)>("l", "log", 1, "request URI log level (\'debug\' or \'info\')");

        virtualinvoke $r0.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(java.lang.String,java.lang.String,boolean,java.lang.String)>("?", "help", 0, "this help message");

        return $r0;
    }

    public static void main(java.lang.String[])
    {
        org.apache.tika.server.TikaExceptionMapper $r101;
        java.lang.Integer $r35;
        org.apache.tika.server.UnpackerResource $r83;
        java.util.Set $r26;
        org.apache.tika.server.TarWriter $r97;
        java.lang.StringBuilder $r2, $r5, $r6, $r13, $r14, $r15, $r16, $r17, $r29, $r30, $r69, $r74, $r102;
        org.apache.tika.server.MetadataResource $r77;
        java.lang.Throwable $r37;
        org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider $r78, $r80, $r82, $r84, $r86, $r88, $r90, $r92, $r95;
        org.apache.tika.server.TikaLoggingFilter r40, $r73;
        org.apache.tika.config.TikaConfig $r41;
        org.apache.commons.cli.HelpFormatter $r72;
        java.util.ArrayList $r76, $r93, $r96;
        java.lang.String $r4, $r7, $r18, $r25, $r31, $r32, $r34, r39;
        org.apache.cxf.jaxrs.JAXRSServerFactoryBean $r75;
        org.apache.tika.server.ZipWriter $r98;
        org.apache.tika.server.TikaDetectors $r87;
        org.apache.tika.server.TikaMimeTypes $r85;
        org.apache.tika.server.TikaParsers $r89;
        org.apache.tika.server.DetectorResource $r79;
        org.apache.tika.server.TikaResource $r81;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Collection $r112;
        org.apache.cxf.binding.BindingFactoryManager $r24;
        java.util.List $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r122;
        org.apache.cxf.Bus $r19, $r22;
        org.apache.commons.cli.Options $r8;
        java.lang.String[] r10;
        org.apache.tika.server.CSVMessageBodyWriter $r99;
        org.apache.commons.cli.GnuParser $r71;
        org.apache.tika.server.JSONMessageBodyWriter $r100;
        int i0, $i2, $i4;
        org.apache.commons.cli.CommandLine $r11;
        org.apache.tika.server.TikaVersion $r91;
        org.apache.tika.server.TikaWelcome $r94;
        org.apache.commons.logging.Log $r1, $r23, $r28, $r38;
        java.lang.Object $r20;
        org.apache.tika.Tika $r70;
        org.apache.cxf.jaxrs.JAXRSBindingFactory $r103;

        r10 := @parameter0: java.lang.String[];

        $r1 = <org.apache.tika.server.TikaServerCli: org.apache.commons.logging.Log logger>;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting ");

        $r70 = new org.apache.tika.Tika;

        specialinvoke $r70.<org.apache.tika.Tika: void <init>()>();

        $r4 = virtualinvoke $r70.<org.apache.tika.Tika: java.lang.String toString()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" server");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r7);

     label01:
        $r8 = staticinvoke <org.apache.tika.server.TikaServerCli: org.apache.commons.cli.Options getOptions()>();

        $r71 = new org.apache.commons.cli.GnuParser;

        specialinvoke $r71.<org.apache.commons.cli.GnuParser: void <init>()>();

        $r11 = interfaceinvoke $r71.<org.apache.commons.cli.CommandLineParser: org.apache.commons.cli.CommandLine parse(org.apache.commons.cli.Options,java.lang.String[])>($r8, r10);

        $z0 = virtualinvoke $r11.<org.apache.commons.cli.CommandLine: boolean hasOption(java.lang.String)>("help");

        if $z0 == 0 goto label02;

        $r72 = new org.apache.commons.cli.HelpFormatter;

        specialinvoke $r72.<org.apache.commons.cli.HelpFormatter: void <init>()>();

        virtualinvoke $r72.<org.apache.commons.cli.HelpFormatter: void printHelp(java.lang.String,org.apache.commons.cli.Options)>("tikaserver", $r8);

        $i2 = (int) -1;

        staticinvoke <java.lang.System: void exit(int)>($i2);

     label02:
        r39 = "localhost";

        $z1 = virtualinvoke $r11.<org.apache.commons.cli.CommandLine: boolean hasOption(java.lang.String)>("host");

        if $z1 == 0 goto label03;

        r39 = virtualinvoke $r11.<org.apache.commons.cli.CommandLine: java.lang.String getOptionValue(java.lang.String)>("host");

     label03:
        i0 = 9998;

        $z2 = virtualinvoke $r11.<org.apache.commons.cli.CommandLine: boolean hasOption(java.lang.String)>("port");

        if $z2 == 0 goto label04;

        $r34 = virtualinvoke $r11.<org.apache.commons.cli.CommandLine: java.lang.String getOptionValue(java.lang.String)>("port");

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r34);

        i0 = virtualinvoke $r35.<java.lang.Integer: int intValue()>();

     label04:
        r40 = null;

        $z3 = virtualinvoke $r11.<org.apache.commons.cli.CommandLine: boolean hasOption(java.lang.String)>("log");

        if $z3 == 0 goto label06;

        $r25 = virtualinvoke $r11.<org.apache.commons.cli.CommandLine: java.lang.String getOptionValue(java.lang.String)>("log");

        $r26 = <org.apache.tika.server.TikaServerCli: java.util.Set LOG_LEVELS>;

        $z4 = interfaceinvoke $r26.<java.util.Set: boolean contains(java.lang.Object)>($r25);

        if $z4 == 0 goto label05;

        $r32 = "info";

        $z5 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>($r25);

        $r73 = new org.apache.tika.server.TikaLoggingFilter;

        specialinvoke $r73.<org.apache.tika.server.TikaLoggingFilter: void <init>(boolean)>($z5);

        r40 = $r73;

        goto label06;

     label05:
        $r28 = <org.apache.tika.server.TikaServerCli: org.apache.commons.logging.Log logger>;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported request URI log level: ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r28.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r31);

     label06:
        $r41 = staticinvoke <org.apache.tika.config.TikaConfig: org.apache.tika.config.TikaConfig getDefaultConfig()>();

        $r75 = new org.apache.cxf.jaxrs.JAXRSServerFactoryBean;

        specialinvoke $r75.<org.apache.cxf.jaxrs.JAXRSServerFactoryBean: void <init>()>();

        $r76 = new java.util.ArrayList;

        specialinvoke $r76.<java.util.ArrayList: void <init>()>();

        $r78 = new org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider;

        $r77 = new org.apache.tika.server.MetadataResource;

        specialinvoke $r77.<org.apache.tika.server.MetadataResource: void <init>(org.apache.tika.config.TikaConfig)>($r41);

        specialinvoke $r78.<org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider: void <init>(java.lang.Object)>($r77);

        $r104 = (java.util.List) $r76;

        interfaceinvoke $r104.<java.util.List: boolean add(java.lang.Object)>($r78);

        $r80 = new org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider;

        $r79 = new org.apache.tika.server.DetectorResource;

        specialinvoke $r79.<org.apache.tika.server.DetectorResource: void <init>(org.apache.tika.config.TikaConfig)>($r41);

        specialinvoke $r80.<org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider: void <init>(java.lang.Object)>($r79);

        $r105 = (java.util.List) $r76;

        interfaceinvoke $r105.<java.util.List: boolean add(java.lang.Object)>($r80);

        $r82 = new org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider;

        $r81 = new org.apache.tika.server.TikaResource;

        specialinvoke $r81.<org.apache.tika.server.TikaResource: void <init>(org.apache.tika.config.TikaConfig)>($r41);

        specialinvoke $r82.<org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider: void <init>(java.lang.Object)>($r81);

        $r106 = (java.util.List) $r76;

        interfaceinvoke $r106.<java.util.List: boolean add(java.lang.Object)>($r82);

        $r84 = new org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider;

        $r83 = new org.apache.tika.server.UnpackerResource;

        specialinvoke $r83.<org.apache.tika.server.UnpackerResource: void <init>(org.apache.tika.config.TikaConfig)>($r41);

        specialinvoke $r84.<org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider: void <init>(java.lang.Object)>($r83);

        $r107 = (java.util.List) $r76;

        interfaceinvoke $r107.<java.util.List: boolean add(java.lang.Object)>($r84);

        $r86 = new org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider;

        $r85 = new org.apache.tika.server.TikaMimeTypes;

        specialinvoke $r85.<org.apache.tika.server.TikaMimeTypes: void <init>(org.apache.tika.config.TikaConfig)>($r41);

        specialinvoke $r86.<org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider: void <init>(java.lang.Object)>($r85);

        $r108 = (java.util.List) $r76;

        interfaceinvoke $r108.<java.util.List: boolean add(java.lang.Object)>($r86);

        $r88 = new org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider;

        $r87 = new org.apache.tika.server.TikaDetectors;

        specialinvoke $r87.<org.apache.tika.server.TikaDetectors: void <init>(org.apache.tika.config.TikaConfig)>($r41);

        specialinvoke $r88.<org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider: void <init>(java.lang.Object)>($r87);

        $r109 = (java.util.List) $r76;

        interfaceinvoke $r109.<java.util.List: boolean add(java.lang.Object)>($r88);

        $r90 = new org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider;

        $r89 = new org.apache.tika.server.TikaParsers;

        specialinvoke $r89.<org.apache.tika.server.TikaParsers: void <init>(org.apache.tika.config.TikaConfig)>($r41);

        specialinvoke $r90.<org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider: void <init>(java.lang.Object)>($r89);

        $r110 = (java.util.List) $r76;

        interfaceinvoke $r110.<java.util.List: boolean add(java.lang.Object)>($r90);

        $r92 = new org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider;

        $r91 = new org.apache.tika.server.TikaVersion;

        specialinvoke $r91.<org.apache.tika.server.TikaVersion: void <init>(org.apache.tika.config.TikaConfig)>($r41);

        specialinvoke $r92.<org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider: void <init>(java.lang.Object)>($r91);

        $r111 = (java.util.List) $r76;

        interfaceinvoke $r111.<java.util.List: boolean add(java.lang.Object)>($r92);

        $r93 = new java.util.ArrayList;

        $r112 = (java.util.Collection) $r76;

        specialinvoke $r93.<java.util.ArrayList: void <init>(java.util.Collection)>($r112);

        $r95 = new org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider;

        $r94 = new org.apache.tika.server.TikaWelcome;

        $r113 = (java.util.List) $r76;

        specialinvoke $r94.<org.apache.tika.server.TikaWelcome: void <init>(org.apache.tika.config.TikaConfig,java.util.List)>($r41, $r113);

        specialinvoke $r95.<org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider: void <init>(java.lang.Object)>($r94);

        $r114 = (java.util.List) $r93;

        interfaceinvoke $r114.<java.util.List: boolean add(java.lang.Object)>($r95);

        $r115 = (java.util.List) $r93;

        virtualinvoke $r75.<org.apache.cxf.jaxrs.JAXRSServerFactoryBean: void setResourceProviders(java.util.List)>($r115);

        $r96 = new java.util.ArrayList;

        specialinvoke $r96.<java.util.ArrayList: void <init>()>();

        $r97 = new org.apache.tika.server.TarWriter;

        specialinvoke $r97.<org.apache.tika.server.TarWriter: void <init>()>();

        $r116 = (java.util.List) $r96;

        interfaceinvoke $r116.<java.util.List: boolean add(java.lang.Object)>($r97);

        $r98 = new org.apache.tika.server.ZipWriter;

        specialinvoke $r98.<org.apache.tika.server.ZipWriter: void <init>()>();

        $r117 = (java.util.List) $r96;

        interfaceinvoke $r117.<java.util.List: boolean add(java.lang.Object)>($r98);

        $r99 = new org.apache.tika.server.CSVMessageBodyWriter;

        specialinvoke $r99.<org.apache.tika.server.CSVMessageBodyWriter: void <init>()>();

        $r118 = (java.util.List) $r96;

        interfaceinvoke $r118.<java.util.List: boolean add(java.lang.Object)>($r99);

        $r100 = new org.apache.tika.server.JSONMessageBodyWriter;

        specialinvoke $r100.<org.apache.tika.server.JSONMessageBodyWriter: void <init>()>();

        $r119 = (java.util.List) $r96;

        interfaceinvoke $r119.<java.util.List: boolean add(java.lang.Object)>($r100);

        $r101 = new org.apache.tika.server.TikaExceptionMapper;

        specialinvoke $r101.<org.apache.tika.server.TikaExceptionMapper: void <init>()>();

        $r120 = (java.util.List) $r96;

        interfaceinvoke $r120.<java.util.List: boolean add(java.lang.Object)>($r101);

        if r40 == null goto label07;

        $r121 = (java.util.List) $r96;

        interfaceinvoke $r121.<java.util.List: boolean add(java.lang.Object)>(r40);

     label07:
        $r122 = (java.util.List) $r96;

        virtualinvoke $r75.<org.apache.cxf.jaxrs.JAXRSServerFactoryBean: void setProviders(java.util.List)>($r122);

        $r102 = new java.lang.StringBuilder;

        specialinvoke $r102.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r75.<org.apache.cxf.jaxrs.JAXRSServerFactoryBean: void setAddress(java.lang.String)>($r18);

        $r19 = virtualinvoke $r75.<org.apache.cxf.jaxrs.JAXRSServerFactoryBean: org.apache.cxf.Bus getBus()>();

        $r20 = interfaceinvoke $r19.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/binding/BindingFactoryManager;");

        $r24 = (org.apache.cxf.binding.BindingFactoryManager) $r20;

        $r103 = new org.apache.cxf.jaxrs.JAXRSBindingFactory;

        specialinvoke $r103.<org.apache.cxf.jaxrs.JAXRSBindingFactory: void <init>()>();

        $r22 = virtualinvoke $r75.<org.apache.cxf.jaxrs.JAXRSServerFactoryBean: org.apache.cxf.Bus getBus()>();

        virtualinvoke $r103.<org.apache.cxf.jaxrs.JAXRSBindingFactory: void setBus(org.apache.cxf.Bus)>($r22);

        interfaceinvoke $r24.<org.apache.cxf.binding.BindingFactoryManager: void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)>("http://apache.org/cxf/binding/jaxrs", $r103);

        virtualinvoke $r75.<org.apache.cxf.jaxrs.JAXRSServerFactoryBean: org.apache.cxf.endpoint.Server create()>();

        $r23 = <org.apache.tika.server.TikaServerCli: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r23.<org.apache.commons.logging.Log: void info(java.lang.Object)>("Started");

     label08:
        goto label10;

     label09:
        $r37 := @caughtexception;

        $r38 = <org.apache.tika.server.TikaServerCli: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r38.<org.apache.commons.logging.Log: void fatal(java.lang.Object,java.lang.Throwable)>("Can\'t start", $r37);

        $i4 = (int) -1;

        staticinvoke <java.lang.System: void exit(int)>($i4);

     label10:
        return;

        catch java.lang.Exception from label01 to label08 with label09;
    }

    static void <clinit>()
    {
        java.util.HashSet $r4;
        java.util.List $r3;
        java.util.Collection $r5;
        java.util.Set $r6;
        org.apache.commons.logging.Log $r0;
        java.lang.String[] $r2;

        <org.apache.tika.server.TikaServerCli: java.lang.String DEFAULT_HOST> = "localhost";

        <org.apache.tika.server.TikaServerCli: int DEFAULT_PORT> = 9998;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/tika/server/TikaServerCli;");

        <org.apache.tika.server.TikaServerCli: org.apache.commons.logging.Log logger> = $r0;

        $r4 = new java.util.HashSet;

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = "debug";

        $r2[1] = "info";

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        $r5 = (java.util.Collection) $r3;

        specialinvoke $r4.<java.util.HashSet: void <init>(java.util.Collection)>($r5);

        $r6 = (java.util.Set) $r4;

        <org.apache.tika.server.TikaServerCli: java.util.Set LOG_LEVELS> = $r6;

        return;
    }
}
