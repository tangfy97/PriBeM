public class org.apache.batik.css.dom.CSSOMSVGColor extends java.lang.Object implements org.w3c.dom.svg.SVGColor, org.w3c.dom.css.RGBColor, org.w3c.dom.svg.SVGICCColor, org.w3c.dom.svg.SVGNumberList
{
    protected org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider valueProvider;
    protected org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler;
    protected org.apache.batik.css.dom.CSSOMSVGColor$RedComponent redComponent;
    protected org.apache.batik.css.dom.CSSOMSVGColor$GreenComponent greenComponent;
    protected org.apache.batik.css.dom.CSSOMSVGColor$BlueComponent blueComponent;
    protected java.util.ArrayList iccColors;

    public void <init>(org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider)
    {
        org.apache.batik.css.dom.CSSOMSVGColor r0;
        org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider r1;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        r1 := @parameter0: org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider valueProvider> = r1;

        return;
    }

    public void setModificationHandler(org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler)
    {
        org.apache.batik.css.dom.CSSOMSVGColor r0;
        org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler r1;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        r1 := @parameter0: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler;

        r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler> = r1;

        return;
    }

    public java.lang.String getCssText()
    {
        org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider $r1;
        org.apache.batik.css.dom.CSSOMSVGColor r0;
        java.lang.String $r3;
        org.apache.batik.css.engine.value.Value $r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        $r3 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        return $r3;
    }

    public void setCssText(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler $r1, $r3;
        org.w3c.dom.DOMException $r4;
        org.apache.batik.css.dom.CSSOMSVGColor r0;
        java.lang.String r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        if $r1 != null goto label1;

        $r4 = new org.w3c.dom.DOMException;

        specialinvoke $r4.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r4;

     label1:
        r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors> = null;

        $r3 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        interfaceinvoke $r3.<org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler: void textChanged(java.lang.String)>(r2);

        return;
    }

    public short getCssValueType()
    {
        org.apache.batik.css.dom.CSSOMSVGColor r0;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        return 3;
    }

    public short getColorType()
    {
        java.lang.IllegalStateException $r15, $r17;
        short $s0, $s1;
        java.lang.StringBuffer $r6, $r7, $r11, $r12, $r14, $r16;
        int $i2, $i3, $i4, $i5;
        java.lang.String $r3, $r8, $r13;
        boolean $z0;
        org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider $r1;
        org.apache.batik.css.dom.CSSOMSVGColor r0;
        org.apache.batik.css.engine.value.Value $r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        $s0 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: short getCssValueType()>();

        $i2 = (int) $s0;

        lookupswitch($i2)
        {
            case 1: goto label1;
            case 2: goto label6;
            default: goto label7;
        };

     label1:
        $s1 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i3 = (int) $s1;

        lookupswitch($i3)
        {
            case 21: goto label2;
            case 25: goto label4;
            default: goto label5;
        };

     label2:
        $r3 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: java.lang.String getStringValue()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("currentcolor");

        if $z0 == 0 goto label3;

        return 3;

     label3:
        return 1;

     label4:
        return 1;

     label5:
        $r15 = new java.lang.IllegalStateException;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Found unexpected PrimitiveType:");

        $i4 = (int) $s1;

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r15;

     label6:
        return 2;

     label7:
        $r17 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Found unexpected CssValueType:");

        $i5 = (int) $s0;

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r17;
    }

    public org.w3c.dom.css.RGBColor getRGBColor()
    {
        org.apache.batik.css.dom.CSSOMSVGColor r0;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        return r0;
    }

    public org.w3c.dom.css.RGBColor getRgbColor()
    {
        org.apache.batik.css.dom.CSSOMSVGColor r0;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        return r0;
    }

    public void setRGBColor(java.lang.String)
    {
        org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler $r1, $r3;
        org.w3c.dom.DOMException $r4;
        org.apache.batik.css.dom.CSSOMSVGColor r0;
        java.lang.String r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        if $r1 != null goto label1;

        $r4 = new org.w3c.dom.DOMException;

        specialinvoke $r4.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r4;

     label1:
        $r3 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        interfaceinvoke $r3.<org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler: void rgbColorChanged(java.lang.String)>(r2);

        return;
    }

    public org.w3c.dom.svg.SVGICCColor getICCColor()
    {
        org.apache.batik.css.dom.CSSOMSVGColor r0;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        return r0;
    }

    public org.w3c.dom.svg.SVGICCColor getIccColor()
    {
        org.apache.batik.css.dom.CSSOMSVGColor r0;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        return r0;
    }

    public void setRGBColorICCColor(java.lang.String, java.lang.String)
    {
        org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler $r1, $r4;
        org.w3c.dom.DOMException $r5;
        org.apache.batik.css.dom.CSSOMSVGColor r0;
        java.lang.String r2, r3;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        if $r1 != null goto label1;

        $r5 = new org.w3c.dom.DOMException;

        specialinvoke $r5.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r5;

     label1:
        r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors> = null;

        $r4 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        interfaceinvoke $r4.<org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler: void rgbColorICCColorChanged(java.lang.String,java.lang.String)>(r2, r3);

        return;
    }

    public void setColor(short, java.lang.String, java.lang.String)
    {
        short s0;
        org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler $r1, $r4;
        org.w3c.dom.DOMException $r5;
        org.apache.batik.css.dom.CSSOMSVGColor r0;
        java.lang.String r2, r3;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        s0 := @parameter0: short;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        if $r1 != null goto label1;

        $r5 = new org.w3c.dom.DOMException;

        specialinvoke $r5.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r5;

     label1:
        r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors> = null;

        $r4 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        interfaceinvoke $r4.<org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler: void colorChanged(short,java.lang.String,java.lang.String)>(s0, r2, r3);

        return;
    }

    public org.w3c.dom.css.CSSPrimitiveValue getRed()
    {
        org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider $r1;
        org.apache.batik.css.dom.CSSOMSVGColor$RedComponent $r3, $r4, $r5;
        org.apache.batik.css.dom.CSSOMSVGColor r0;
        org.apache.batik.css.engine.value.Value $r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getRed()>();

        $r3 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$RedComponent redComponent>;

        if $r3 != null goto label1;

        $r5 = new org.apache.batik.css.dom.CSSOMSVGColor$RedComponent;

        specialinvoke $r5.<org.apache.batik.css.dom.CSSOMSVGColor$RedComponent: void <init>(org.apache.batik.css.dom.CSSOMSVGColor)>(r0);

        r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$RedComponent redComponent> = $r5;

     label1:
        $r4 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$RedComponent redComponent>;

        return $r4;
    }

    public org.w3c.dom.css.CSSPrimitiveValue getGreen()
    {
        org.apache.batik.css.dom.CSSOMSVGColor$GreenComponent $r3, $r4, $r5;
        org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider $r1;
        org.apache.batik.css.dom.CSSOMSVGColor r0;
        org.apache.batik.css.engine.value.Value $r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getGreen()>();

        $r3 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$GreenComponent greenComponent>;

        if $r3 != null goto label1;

        $r5 = new org.apache.batik.css.dom.CSSOMSVGColor$GreenComponent;

        specialinvoke $r5.<org.apache.batik.css.dom.CSSOMSVGColor$GreenComponent: void <init>(org.apache.batik.css.dom.CSSOMSVGColor)>(r0);

        r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$GreenComponent greenComponent> = $r5;

     label1:
        $r4 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$GreenComponent greenComponent>;

        return $r4;
    }

    public org.w3c.dom.css.CSSPrimitiveValue getBlue()
    {
        org.apache.batik.css.dom.CSSOMSVGColor$BlueComponent $r3, $r4, $r5;
        org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider $r1;
        org.apache.batik.css.dom.CSSOMSVGColor r0;
        org.apache.batik.css.engine.value.Value $r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getBlue()>();

        $r3 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$BlueComponent blueComponent>;

        if $r3 != null goto label1;

        $r5 = new org.apache.batik.css.dom.CSSOMSVGColor$BlueComponent;

        specialinvoke $r5.<org.apache.batik.css.dom.CSSOMSVGColor$BlueComponent: void <init>(org.apache.batik.css.dom.CSSOMSVGColor)>(r0);

        r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$BlueComponent blueComponent> = $r5;

     label1:
        $r4 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$BlueComponent blueComponent>;

        return $r4;
    }

    public java.lang.String getColorProfile()
    {
        org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider $r1;
        org.apache.batik.css.dom.CSSOMSVGColor r0;
        org.apache.batik.css.engine.value.Value $r2, $r3;
        short $s0;
        org.w3c.dom.DOMException $r7;
        int $i1;
        java.lang.String $r5;
        org.apache.batik.css.engine.value.svg.ICCColor $r4;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        $s0 = virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor: short getColorType()>();

        $i1 = (int) $s0;

        if $i1 == 2 goto label1;

        $r7 = new org.w3c.dom.DOMException;

        specialinvoke $r7.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(12, "");

        throw $r7;

     label1:
        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        $r3 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(1);

        $r4 = (org.apache.batik.css.engine.value.svg.ICCColor) $r3;

        $r5 = virtualinvoke $r4.<org.apache.batik.css.engine.value.svg.ICCColor: java.lang.String getColorProfile()>();

        return $r5;
    }

    public void setColorProfile(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler $r1, $r3;
        org.w3c.dom.DOMException $r4;
        org.apache.batik.css.dom.CSSOMSVGColor r0;
        java.lang.String r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        if $r1 != null goto label1;

        $r4 = new org.w3c.dom.DOMException;

        specialinvoke $r4.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r4;

     label1:
        $r3 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        interfaceinvoke $r3.<org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler: void colorProfileChanged(java.lang.String)>(r2);

        return;
    }

    public org.w3c.dom.svg.SVGNumberList getColors()
    {
        org.apache.batik.css.dom.CSSOMSVGColor r0;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        return r0;
    }

    public int getNumberOfItems()
    {
        org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider $r1;
        org.apache.batik.css.dom.CSSOMSVGColor r0;
        org.apache.batik.css.engine.value.Value $r2, $r3;
        short $s0;
        org.w3c.dom.DOMException $r6;
        int $i1, $i2;
        org.apache.batik.css.engine.value.svg.ICCColor $r4;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        $s0 = virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor: short getColorType()>();

        $i2 = (int) $s0;

        if $i2 == 2 goto label1;

        $r6 = new org.w3c.dom.DOMException;

        specialinvoke $r6.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(12, "");

        throw $r6;

     label1:
        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        $r3 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(1);

        $r4 = (org.apache.batik.css.engine.value.svg.ICCColor) $r3;

        $i1 = virtualinvoke $r4.<org.apache.batik.css.engine.value.svg.ICCColor: int getNumberOfColors()>();

        return $i1;
    }

    public void clear() throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler $r1, $r2;
        org.w3c.dom.DOMException $r3;
        org.apache.batik.css.dom.CSSOMSVGColor r0;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        if $r1 != null goto label1;

        $r3 = new org.w3c.dom.DOMException;

        specialinvoke $r3.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r3;

     label1:
        r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors> = null;

        $r2 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        interfaceinvoke $r2.<org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler: void colorsCleared()>();

        return;
    }

    public org.w3c.dom.svg.SVGNumber initialize(org.w3c.dom.svg.SVGNumber) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler $r1, $r6;
        org.apache.batik.css.dom.CSSOMSVGColor r0;
        java.util.ArrayList $r3, $r5;
        org.w3c.dom.svg.SVGNumber r2;
        org.w3c.dom.DOMException $r7;
        float $f0;
        org.apache.batik.css.dom.CSSOMSVGColor$ColorNumber $r4;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        r2 := @parameter0: org.w3c.dom.svg.SVGNumber;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        if $r1 != null goto label1;

        $r7 = new org.w3c.dom.DOMException;

        specialinvoke $r7.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r7;

     label1:
        $f0 = interfaceinvoke r2.<org.w3c.dom.svg.SVGNumber: float getValue()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors> = $r3;

        $r4 = new org.apache.batik.css.dom.CSSOMSVGColor$ColorNumber;

        specialinvoke $r4.<org.apache.batik.css.dom.CSSOMSVGColor$ColorNumber: void <init>(org.apache.batik.css.dom.CSSOMSVGColor,float)>(r0, $f0);

        $r5 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $r6 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        interfaceinvoke $r6.<org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler: void colorsInitialized(float)>($f0);

        return $r4;
    }

    public org.w3c.dom.svg.SVGNumber getItem(int) throws org.w3c.dom.DOMException
    {
        java.util.ArrayList $r2, $r8, $r10, $r11, $r15;
        short $s0;
        org.w3c.dom.DOMException $r13, $r14;
        int $i1, i2, i3, $i4;
        org.apache.batik.css.dom.CSSOMSVGColor$ColorNumber $r16;
        org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider $r3;
        org.apache.batik.css.dom.CSSOMSVGColor r0;
        org.apache.batik.css.engine.value.Value $r4, $r5;
        float $f0;
        org.apache.batik.css.engine.value.svg.ICCColor $r6;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        i2 := @parameter0: int;

        $s0 = virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor: short getColorType()>();

        $i4 = (int) $s0;

        if $i4 == 2 goto label1;

        $r13 = new org.w3c.dom.DOMException;

        specialinvoke $r13.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(1, "");

        throw $r13;

     label1:
        $i1 = virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor: int getNumberOfItems()>();

        if i2 < 0 goto label2;

        if i2 < $i1 goto label3;

     label2:
        $r14 = new org.w3c.dom.DOMException;

        specialinvoke $r14.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(1, "");

        throw $r14;

     label3:
        $r2 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors>;

        if $r2 != null goto label6;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>(int)>($i1);

        r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors> = $r15;

        $r10 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors>;

        i3 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        goto label5;

     label4:
        $r11 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors>;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        i3 = i3 + 1;

     label5:
        if i3 < $i1 goto label4;

     label6:
        $r3 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider valueProvider>;

        $r4 = interfaceinvoke $r3.<org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        $r5 = interfaceinvoke $r4.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(1);

        $r6 = (org.apache.batik.css.engine.value.svg.ICCColor) $r5;

        $f0 = virtualinvoke $r6.<org.apache.batik.css.engine.value.svg.ICCColor: float getColor(int)>(i2);

        $r16 = new org.apache.batik.css.dom.CSSOMSVGColor$ColorNumber;

        specialinvoke $r16.<org.apache.batik.css.dom.CSSOMSVGColor$ColorNumber: void <init>(org.apache.batik.css.dom.CSSOMSVGColor,float)>(r0, $f0);

        $r8 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors>;

        virtualinvoke $r8.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i2, $r16);

        return $r16;
    }

    public org.w3c.dom.svg.SVGNumber insertItemBefore(org.w3c.dom.svg.SVGNumber, int) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler $r1, $r7;
        java.util.ArrayList $r3, $r6, $r8, $r9, $r10;
        org.w3c.dom.svg.SVGNumber r4;
        org.w3c.dom.DOMException $r2, $r11;
        int $i0, i1, i2;
        org.apache.batik.css.dom.CSSOMSVGColor$ColorNumber $r5;
        org.apache.batik.css.dom.CSSOMSVGColor r0;
        float $f0;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        r4 := @parameter0: org.w3c.dom.svg.SVGNumber;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        if $r1 != null goto label1;

        $r11 = new org.w3c.dom.DOMException;

        specialinvoke $r11.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r11;

     label1:
        $i0 = virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor: int getNumberOfItems()>();

        if i1 < 0 goto label2;

        if i1 <= $i0 goto label3;

     label2:
        $r2 = new org.w3c.dom.DOMException;

        specialinvoke $r2.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(1, "");

        throw $r2;

     label3:
        $r3 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors>;

        if $r3 != null goto label6;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors> = $r8;

        $r9 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors>;

        i2 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        goto label5;

     label4:
        $r10 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        i2 = i2 + 1;

     label5:
        if i2 < $i0 goto label4;

     label6:
        $f0 = interfaceinvoke r4.<org.w3c.dom.svg.SVGNumber: float getValue()>();

        $r5 = new org.apache.batik.css.dom.CSSOMSVGColor$ColorNumber;

        specialinvoke $r5.<org.apache.batik.css.dom.CSSOMSVGColor$ColorNumber: void <init>(org.apache.batik.css.dom.CSSOMSVGColor,float)>(r0, $f0);

        $r6 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors>;

        virtualinvoke $r6.<java.util.ArrayList: void add(int,java.lang.Object)>(i1, $r5);

        $r7 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        interfaceinvoke $r7.<org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler: void colorInsertedBefore(float,int)>($f0, i1);

        return $r5;
    }

    public org.w3c.dom.svg.SVGNumber replaceItem(org.w3c.dom.svg.SVGNumber, int) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler $r1, $r7;
        java.util.ArrayList $r3, $r6, $r8, $r9, $r10;
        org.w3c.dom.svg.SVGNumber r4;
        org.w3c.dom.DOMException $r2, $r11;
        int $i0, i1, i2;
        org.apache.batik.css.dom.CSSOMSVGColor$ColorNumber $r5;
        org.apache.batik.css.dom.CSSOMSVGColor r0;
        float $f0;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        r4 := @parameter0: org.w3c.dom.svg.SVGNumber;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        if $r1 != null goto label1;

        $r11 = new org.w3c.dom.DOMException;

        specialinvoke $r11.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r11;

     label1:
        $i0 = virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor: int getNumberOfItems()>();

        if i1 < 0 goto label2;

        if i1 < $i0 goto label3;

     label2:
        $r2 = new org.w3c.dom.DOMException;

        specialinvoke $r2.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(1, "");

        throw $r2;

     label3:
        $r3 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors>;

        if $r3 != null goto label6;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors> = $r8;

        $r9 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors>;

        i2 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        goto label5;

     label4:
        $r10 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        i2 = i2 + 1;

     label5:
        if i2 < $i0 goto label4;

     label6:
        $f0 = interfaceinvoke r4.<org.w3c.dom.svg.SVGNumber: float getValue()>();

        $r5 = new org.apache.batik.css.dom.CSSOMSVGColor$ColorNumber;

        specialinvoke $r5.<org.apache.batik.css.dom.CSSOMSVGColor$ColorNumber: void <init>(org.apache.batik.css.dom.CSSOMSVGColor,float)>(r0, $f0);

        $r6 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i1, $r5);

        $r7 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        interfaceinvoke $r7.<org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler: void colorReplaced(float,int)>($f0, i1);

        return $r5;
    }

    public org.w3c.dom.svg.SVGNumber removeItem(int) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler $r1, $r4;
        java.util.ArrayList $r3, $r10;
        org.w3c.dom.DOMException $r2, $r12;
        int $i0, i1;
        org.apache.batik.css.dom.CSSOMSVGColor$ColorNumber $r8, r13;
        org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider $r5;
        org.apache.batik.css.dom.CSSOMSVGColor r0;
        org.apache.batik.css.engine.value.Value $r6, $r7;
        float $f0;
        java.lang.Object $r11;
        org.apache.batik.css.engine.value.svg.ICCColor $r9;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        i1 := @parameter0: int;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        if $r1 != null goto label1;

        $r12 = new org.w3c.dom.DOMException;

        specialinvoke $r12.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r12;

     label1:
        $i0 = virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor: int getNumberOfItems()>();

        if i1 < 0 goto label2;

        if i1 < $i0 goto label3;

     label2:
        $r2 = new org.w3c.dom.DOMException;

        specialinvoke $r2.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(1, "");

        throw $r2;

     label3:
        r13 = null;

        $r3 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors>;

        if $r3 == null goto label4;

        $r10 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r13 = (org.apache.batik.css.dom.CSSOMSVGColor$ColorNumber) $r11;

     label4:
        if r13 != null goto label5;

        $r5 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider valueProvider>;

        $r6 = interfaceinvoke $r5.<org.apache.batik.css.dom.CSSOMSVGColor$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        $r7 = interfaceinvoke $r6.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(1);

        $r8 = new org.apache.batik.css.dom.CSSOMSVGColor$ColorNumber;

        $r9 = (org.apache.batik.css.engine.value.svg.ICCColor) $r7;

        $f0 = virtualinvoke $r9.<org.apache.batik.css.engine.value.svg.ICCColor: float getColor(int)>(i1);

        specialinvoke $r8.<org.apache.batik.css.dom.CSSOMSVGColor$ColorNumber: void <init>(org.apache.batik.css.dom.CSSOMSVGColor,float)>(r0, $f0);

        r13 = $r8;

     label5:
        $r4 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        interfaceinvoke $r4.<org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler: void colorRemoved(int)>(i1);

        return r13;
    }

    public org.w3c.dom.svg.SVGNumber appendItem(org.w3c.dom.svg.SVGNumber) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler $r1, $r6;
        org.apache.batik.css.dom.CSSOMSVGColor r0;
        java.util.ArrayList $r2, $r5, $r7, $r8;
        org.w3c.dom.svg.SVGNumber r3;
        org.w3c.dom.DOMException $r9;
        int $i0, i1;
        float $f0;
        org.apache.batik.css.dom.CSSOMSVGColor$ColorNumber $r4;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor;

        r3 := @parameter0: org.w3c.dom.svg.SVGNumber;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        if $r1 != null goto label1;

        $r9 = new org.w3c.dom.DOMException;

        specialinvoke $r9.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r9;

     label1:
        $r2 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors>;

        if $r2 != null goto label4;

        $i0 = virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor: int getNumberOfItems()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors> = $r7;

        i1 = 0;

        goto label3;

     label2:
        $r8 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        i1 = i1 + 1;

     label3:
        if i1 < $i0 goto label2;

     label4:
        $f0 = interfaceinvoke r3.<org.w3c.dom.svg.SVGNumber: float getValue()>();

        $r4 = new org.apache.batik.css.dom.CSSOMSVGColor$ColorNumber;

        specialinvoke $r4.<org.apache.batik.css.dom.CSSOMSVGColor$ColorNumber: void <init>(org.apache.batik.css.dom.CSSOMSVGColor,float)>(r0, $f0);

        $r5 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: java.util.ArrayList iccColors>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $r6 = r0.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        interfaceinvoke $r6.<org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler: void colorAppend(float)>($f0);

        return $r4;
    }
}
