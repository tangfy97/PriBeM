class arq.juuid$ModJUUID extends arq.cmdline.ModBase
{
    final arq.juuid this$0;

    void <init>(arq.juuid)
    {
        arq.juuid r1;
        arq.juuid$ModJUUID r0;

        r0 := @this: arq.juuid$ModJUUID;

        r1 := @parameter0: arq.juuid;

        r0.<arq.juuid$ModJUUID: arq.juuid this$0> = r1;

        specialinvoke r0.<arq.cmdline.ModBase: void <init>()>();

        return;
    }

    public void registerWith(arq.cmdline.CmdGeneral)
    {
        arq.cmdline.CmdGeneral r0;
        arq.cmdline.ArgDecl $r1, $r2, $r3, $r4, $r5, $r6;
        arq.juuid$ModJUUID r7;

        r7 := @this: arq.juuid$ModJUUID;

        r0 := @parameter0: arq.cmdline.CmdGeneral;

        $r1 = <arq.juuid: arq.cmdline.ArgDecl argDeclNum>;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: arq.cmdline.CmdLineArgs add(arq.cmdline.ArgDecl)>($r1);

        $r2 = <arq.juuid: arq.cmdline.ArgDecl argDeclReset>;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: arq.cmdline.CmdLineArgs add(arq.cmdline.ArgDecl)>($r2);

        $r3 = <arq.juuid: arq.cmdline.ArgDecl argDeclGen>;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: arq.cmdline.CmdLineArgs add(arq.cmdline.ArgDecl)>($r3);

        $r4 = <arq.juuid: arq.cmdline.ArgDecl argDeclURN>;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: arq.cmdline.CmdLineArgs add(arq.cmdline.ArgDecl)>($r4);

        $r5 = <arq.juuid: arq.cmdline.ArgDecl argDeclURI>;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: arq.cmdline.CmdLineArgs add(arq.cmdline.ArgDecl)>($r5);

        $r6 = <arq.juuid: arq.cmdline.ArgDecl argDeclPlain>;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: arq.cmdline.CmdLineArgs add(arq.cmdline.ArgDecl)>($r6);

        return;
    }

    public void processArgs(arq.cmdline.CmdArgModule)
    {
        arq.cmdline.ArgDecl $r3, $r4, $r6, $r11, $r28, $r39, $r41, $r44, $r47, $r50, $r53;
        java.lang.StringBuilder $r15, $r17, $r18, $r22, $r23, $r24, $r33, $r34, $r35;
        arq.juuid $r1, $r5, $r7, $r8, $r9, $r10, $r12, $r14, $r16, $r20, $r21, $r26, $r27, $r29, $r30, $r31, $r38, $r40, $r42, $r43, $r45, $r46, $r48, $r49, $r51, $r52;
        arq.cmdline.CmdArgModule r2;
        java.lang.String $r13, $r19, $r25, $r36, r37;
        java.lang.NumberFormatException $r32;
        arq.juuid$ModJUUID r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: arq.juuid$ModJUUID;

        r2 := @parameter0: arq.cmdline.CmdArgModule;

        r37 = null;

        $r1 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        $i0 = virtualinvoke $r1.<arq.juuid: int getNumPositional()>();

        if $i0 <= 1 goto label01;

        $r31 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        virtualinvoke $r31.<arq.juuid: void cmdError(java.lang.String)>("Too many positional arguments");

     label01:
        $r3 = <arq.juuid: arq.cmdline.ArgDecl argDeclNum>;

        $z0 = virtualinvoke r2.<arq.cmdline.CmdArgModule: boolean contains(arq.cmdline.ArgDecl)>($r3);

        if $z0 == 0 goto label03;

        $r27 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        $i5 = virtualinvoke $r27.<arq.juuid: int getNumPositional()>();

        if $i5 == 0 goto label02;

        $r30 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        virtualinvoke $r30.<arq.juuid: void cmdError(java.lang.String)>("--num and positional arguments don\'t go together");

     label02:
        $r29 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        $r28 = <arq.juuid: arq.cmdline.ArgDecl argDeclNum>;

        r37 = virtualinvoke $r29.<arq.juuid: java.lang.String getValue(arq.cmdline.ArgDecl)>($r28);

     label03:
        if r37 != null goto label04;

        $i4 = virtualinvoke r2.<arq.cmdline.CmdArgModule: int getNumPositional()>();

        if $i4 != 1 goto label04;

        r37 = virtualinvoke r2.<arq.cmdline.CmdArgModule: java.lang.String getPositionalArg(int)>(0);

     label04:
        if r37 == null goto label09;

     label05:
        $r20 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r37);

        $r20.<arq.juuid: int number> = $i1;

        $r21 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        $i2 = $r21.<arq.juuid: int number>;

        if $i2 < 0 goto label06;

        $r26 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        $i3 = $r26.<arq.juuid: int number>;

        if $i3 <= 10000 goto label07;

     label06:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Number out of range:");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<arq.cmdline.CmdArgModule: void cmdError(java.lang.String)>($r25);

     label07:
        goto label09;

     label08:
        $r32 := @caughtexception;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad argument: ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<arq.cmdline.CmdArgModule: void cmdError(java.lang.String)>($r36);

     label09:
        $r38 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        $r39 = <arq.juuid: arq.cmdline.ArgDecl argDeclReset>;

        $z8 = virtualinvoke r2.<arq.cmdline.CmdArgModule: boolean contains(arq.cmdline.ArgDecl)>($r39);

        $r38.<arq.juuid: boolean resetEachTime> = $z8;

        $r40 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        $r41 = <arq.juuid: arq.cmdline.ArgDecl argDeclGen>;

        $z9 = virtualinvoke $r40.<arq.juuid: boolean contains(arq.cmdline.ArgDecl)>($r41);

        if $z9 == 0 goto label14;

        $r12 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        $r11 = <arq.juuid: arq.cmdline.ArgDecl argDeclGen>;

        $r13 = virtualinvoke $r12.<arq.juuid: java.lang.String getValue(arq.cmdline.ArgDecl)>($r11);

        $z3 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("time");

        if $z3 != 0 goto label10;

        $z4 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("1");

        if $z4 == 0 goto label11;

     label10:
        $r14 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        $r14.<arq.juuid: int uuidType> = 1;

        goto label14;

     label11:
        $z5 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("random");

        if $z5 != 0 goto label12;

        $z6 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("rand");

        if $z6 != 0 goto label12;

        $z7 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("4");

        if $z7 == 0 goto label13;

     label12:
        $r42 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        $r42.<arq.juuid: int uuidType> = 4;

        goto label14;

     label13:
        $r16 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized UUID scheme: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<arq.juuid: void cmdError(java.lang.String)>($r19);

     label14:
        $r43 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        $r44 = <arq.juuid: arq.cmdline.ArgDecl argDeclURN>;

        $z10 = virtualinvoke $r43.<arq.juuid: boolean contains(arq.cmdline.ArgDecl)>($r44);

        if $z10 != 0 goto label15;

        $r5 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        $r4 = <arq.juuid: arq.cmdline.ArgDecl argDeclURI>;

        $z1 = virtualinvoke $r5.<arq.juuid: boolean contains(arq.cmdline.ArgDecl)>($r4);

        if $z1 != 0 goto label15;

        $r7 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        $r6 = <arq.juuid: arq.cmdline.ArgDecl argDeclPlain>;

        $z2 = virtualinvoke $r7.<arq.juuid: boolean contains(arq.cmdline.ArgDecl)>($r6);

        if $z2 == 0 goto label16;

     label15:
        $r45 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        $r46 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        $r47 = <arq.juuid: arq.cmdline.ArgDecl argDeclURN>;

        $z11 = virtualinvoke $r46.<arq.juuid: boolean contains(arq.cmdline.ArgDecl)>($r47);

        $r45.<arq.juuid: boolean asURN> = $z11;

        $r48 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        $r49 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        $r50 = <arq.juuid: arq.cmdline.ArgDecl argDeclURI>;

        $z12 = virtualinvoke $r49.<arq.juuid: boolean contains(arq.cmdline.ArgDecl)>($r50);

        $r48.<arq.juuid: boolean asURI> = $z12;

        $r51 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        $r52 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        $r53 = <arq.juuid: arq.cmdline.ArgDecl argDeclPlain>;

        $z13 = virtualinvoke $r52.<arq.juuid: boolean contains(arq.cmdline.ArgDecl)>($r53);

        $r51.<arq.juuid: boolean asPlain> = $z13;

        goto label17;

     label16:
        $r8 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        $r8.<arq.juuid: boolean asURN> = 1;

        $r9 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        $r9.<arq.juuid: boolean asURI> = 0;

        $r10 = r0.<arq.juuid$ModJUUID: arq.juuid this$0>;

        $r10.<arq.juuid: boolean asPlain> = 0;

     label17:
        return;

        catch java.lang.NumberFormatException from label05 to label07 with label08;
    }
}
