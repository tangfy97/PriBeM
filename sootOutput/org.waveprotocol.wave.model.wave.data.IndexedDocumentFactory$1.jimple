class org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1 extends java.lang.Object implements org.waveprotocol.wave.model.wave.data.DocumentOperationSink
{
    private final org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema schema;
    private final org.waveprotocol.wave.model.document.indexed.IndexedDocument document;
    final org.waveprotocol.wave.model.id.WaveletId val$waveletId;
    final java.lang.String val$docId;
    final org.waveprotocol.wave.model.document.operation.DocInitialization val$content;
    final org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory this$0;

    void <init>(org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory, org.waveprotocol.wave.model.id.WaveletId, java.lang.String, org.waveprotocol.wave.model.document.operation.DocInitialization)
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocument $r13;
        org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1 r0;
        org.waveprotocol.wave.model.document.indexed.IndexedDocProvider $r12;
        org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema $r9, $r10;
        org.waveprotocol.wave.model.document.operation.DocInitialization r4, $r11;
        org.waveprotocol.wave.model.id.WaveletId r2, $r8;
        org.waveprotocol.wave.model.schema.SchemaProvider $r6;
        org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory r1, $r5;
        java.lang.String r3, $r7;

        r0 := @this: org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory;

        r2 := @parameter1: org.waveprotocol.wave.model.id.WaveletId;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.waveprotocol.wave.model.document.operation.DocInitialization;

        r0.<org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1: org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory this$0> = r1;

        r0.<org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1: org.waveprotocol.wave.model.id.WaveletId val$waveletId> = r2;

        r0.<org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1: java.lang.String val$docId> = r3;

        r0.<org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1: org.waveprotocol.wave.model.document.operation.DocInitialization val$content> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = r0.<org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1: org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory this$0>;

        $r6 = staticinvoke <org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory: org.waveprotocol.wave.model.schema.SchemaProvider access$000(org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory)>($r5);

        $r8 = r0.<org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1: org.waveprotocol.wave.model.id.WaveletId val$waveletId>;

        $r7 = r0.<org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1: java.lang.String val$docId>;

        $r9 = interfaceinvoke $r6.<org.waveprotocol.wave.model.schema.SchemaProvider: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema getSchemaForId(org.waveprotocol.wave.model.id.WaveletId,java.lang.String)>($r8, $r7);

        r0.<org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema schema> = $r9;

        $r12 = <org.waveprotocol.wave.model.document.util.DocProviders: org.waveprotocol.wave.model.document.indexed.IndexedDocProvider POJO>;

        $r11 = r0.<org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1: org.waveprotocol.wave.model.document.operation.DocInitialization val$content>;

        $r10 = r0.<org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema schema>;

        $r13 = virtualinvoke $r12.<org.waveprotocol.wave.model.document.indexed.IndexedDocProvider: org.waveprotocol.wave.model.document.indexed.IndexedDocument build(org.waveprotocol.wave.model.document.operation.DocInitialization,org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema)>($r11, $r10);

        r0.<org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1: org.waveprotocol.wave.model.document.indexed.IndexedDocument document> = $r13;

        return;
    }

    public org.waveprotocol.wave.model.document.operation.DocInitialization asOperation()
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocument $r2;
        org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1 r1;
        org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuffer $r0;
        org.waveprotocol.wave.model.document.operation.DocInitialization $r3, $r4;

        r1 := @this: org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1;

        $r0 = new org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuffer;

        specialinvoke $r0.<org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuffer: void <init>()>();

        $r2 = r1.<org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1: org.waveprotocol.wave.model.document.indexed.IndexedDocument document>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.indexed.IndexedDocument: org.waveprotocol.wave.model.document.operation.DocInitialization asOperation()>();

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.operation.DocInitialization: void apply(org.waveprotocol.wave.model.document.operation.DocInitializationCursor)>($r0);

        $r4 = virtualinvoke $r0.<org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuffer: org.waveprotocol.wave.model.document.operation.DocInitialization finish()>();

        return $r4;
    }

    public void consume(org.waveprotocol.wave.model.document.operation.DocOp) throws org.waveprotocol.wave.model.operation.OperationException
    {
        org.waveprotocol.wave.model.document.operation.DocOp r1;
        org.waveprotocol.wave.model.document.indexed.IndexedDocument $r2;
        org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1 r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

        $r2 = r0.<org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1: org.waveprotocol.wave.model.document.indexed.IndexedDocument document>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.document.indexed.IndexedDocument: void consume(org.waveprotocol.wave.model.document.operation.DocOp)>(r1);

        return;
    }

    public org.waveprotocol.wave.model.document.Document getMutableDocument()
    {
        java.lang.UnsupportedOperationException $r0;
        org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1 r1;

        r1 := @this: org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This document implementation does not support mutable documents");

        throw $r0;
    }

    public void init(org.waveprotocol.wave.model.operation.SilentOperationSink)
    {
        org.waveprotocol.wave.model.operation.SilentOperationSink r2;
        java.lang.UnsupportedOperationException $r0;
        org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1 r1;

        r1 := @this: org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1;

        r2 := @parameter0: org.waveprotocol.wave.model.operation.SilentOperationSink;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This document implementation does not support mutable documents");

        throw $r0;
    }

    public volatile void consume(org.waveprotocol.wave.model.operation.Operation) throws org.waveprotocol.wave.model.operation.OperationException
    {
        org.waveprotocol.wave.model.operation.Operation r1;
        org.waveprotocol.wave.model.document.operation.DocOp $r2;
        org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1 r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1;

        r1 := @parameter0: org.waveprotocol.wave.model.operation.Operation;

        $r2 = (org.waveprotocol.wave.model.document.operation.DocOp) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.IndexedDocumentFactory$1: void consume(org.waveprotocol.wave.model.document.operation.DocOp)>($r2);

        return;
    }
}
