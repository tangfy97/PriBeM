class org.eclipse.jetty.server.handler.GzipHandler$2 extends org.eclipse.jetty.http.gzip.CompressedResponseWrapper
{
    final org.eclipse.jetty.server.handler.GzipHandler this$0;

    void <init>(org.eclipse.jetty.server.handler.GzipHandler, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
    {
        javax.servlet.http.HttpServletResponse r3;
        java.util.Set $r5;
        org.eclipse.jetty.server.handler.GzipHandler$2 r0;
        javax.servlet.http.HttpServletRequest r2;
        int $i0, $i1;
        org.eclipse.jetty.server.handler.GzipHandler r1, $r4, $r6, $r7;

        r0 := @this: org.eclipse.jetty.server.handler.GzipHandler$2;

        r1 := @parameter0: org.eclipse.jetty.server.handler.GzipHandler;

        r2 := @parameter1: javax.servlet.http.HttpServletRequest;

        r3 := @parameter2: javax.servlet.http.HttpServletResponse;

        r0.<org.eclipse.jetty.server.handler.GzipHandler$2: org.eclipse.jetty.server.handler.GzipHandler this$0> = r1;

        specialinvoke r0.<org.eclipse.jetty.http.gzip.CompressedResponseWrapper: void <init>(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r2, r3);

        $r4 = r0.<org.eclipse.jetty.server.handler.GzipHandler$2: org.eclipse.jetty.server.handler.GzipHandler this$0>;

        $r5 = $r4.<org.eclipse.jetty.server.handler.GzipHandler: java.util.Set _mimeTypes>;

        specialinvoke r0.<org.eclipse.jetty.http.gzip.CompressedResponseWrapper: void setMimeTypes(java.util.Set)>($r5);

        $r6 = r0.<org.eclipse.jetty.server.handler.GzipHandler$2: org.eclipse.jetty.server.handler.GzipHandler this$0>;

        $i0 = $r6.<org.eclipse.jetty.server.handler.GzipHandler: int _bufferSize>;

        specialinvoke r0.<org.eclipse.jetty.http.gzip.CompressedResponseWrapper: void setBufferSize(int)>($i0);

        $r7 = r0.<org.eclipse.jetty.server.handler.GzipHandler$2: org.eclipse.jetty.server.handler.GzipHandler this$0>;

        $i1 = $r7.<org.eclipse.jetty.server.handler.GzipHandler: int _minGzipSize>;

        specialinvoke r0.<org.eclipse.jetty.http.gzip.CompressedResponseWrapper: void setMinCompressSize(int)>($i1);

        return;
    }

    protected org.eclipse.jetty.http.gzip.AbstractCompressedStream newCompressedStream(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException
    {
        org.eclipse.jetty.server.handler.GzipHandler$2$1 $r0;
        javax.servlet.http.HttpServletRequest r2;
        javax.servlet.http.HttpServletResponse r5;
        java.lang.String $r4;
        org.eclipse.jetty.server.handler.GzipHandler$2 r1;
        org.eclipse.jetty.server.handler.GzipHandler $r3;

        r1 := @this: org.eclipse.jetty.server.handler.GzipHandler$2;

        r2 := @parameter0: javax.servlet.http.HttpServletRequest;

        r5 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r0 = new org.eclipse.jetty.server.handler.GzipHandler$2$1;

        $r3 = r1.<org.eclipse.jetty.server.handler.GzipHandler$2: org.eclipse.jetty.server.handler.GzipHandler this$0>;

        $r4 = $r3.<org.eclipse.jetty.server.handler.GzipHandler: java.lang.String _vary>;

        specialinvoke $r0.<org.eclipse.jetty.server.handler.GzipHandler$2$1: void <init>(org.eclipse.jetty.server.handler.GzipHandler$2,java.lang.String,javax.servlet.http.HttpServletRequest,org.eclipse.jetty.http.gzip.CompressedResponseWrapper,java.lang.String)>(r1, "gzip", r2, r1, $r4);

        return $r0;
    }

    protected java.io.PrintWriter newWriter(java.io.OutputStream, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.io.OutputStream r1;
        java.io.PrintWriter $r4;
        java.lang.String r2;
        org.eclipse.jetty.server.handler.GzipHandler$2 r0;
        org.eclipse.jetty.server.handler.GzipHandler $r3;

        r0 := @this: org.eclipse.jetty.server.handler.GzipHandler$2;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.eclipse.jetty.server.handler.GzipHandler$2: org.eclipse.jetty.server.handler.GzipHandler this$0>;

        $r4 = virtualinvoke $r3.<org.eclipse.jetty.server.handler.GzipHandler: java.io.PrintWriter newWriter(java.io.OutputStream,java.lang.String)>(r1, r2);

        return $r4;
    }
}
