final class org.springframework.beans.factory.support.ConstructorResolver$2 extends java.lang.Object implements java.security.PrivilegedAction
{
    final org.springframework.beans.factory.support.ConstructorResolver this$0;
    private final org.springframework.beans.factory.support.RootBeanDefinition val$mbd;
    private final java.lang.Class val$factoryClazz;

    void <init>(org.springframework.beans.factory.support.ConstructorResolver, org.springframework.beans.factory.support.RootBeanDefinition, java.lang.Class)
    {
        org.springframework.beans.factory.support.RootBeanDefinition r2;
        org.springframework.beans.factory.support.ConstructorResolver r1;
        java.lang.Class r3;
        org.springframework.beans.factory.support.ConstructorResolver$2 r0;

        r0 := @this: org.springframework.beans.factory.support.ConstructorResolver$2;

        r1 := @parameter0: org.springframework.beans.factory.support.ConstructorResolver;

        r2 := @parameter1: org.springframework.beans.factory.support.RootBeanDefinition;

        r3 := @parameter2: java.lang.Class;

        r0.<org.springframework.beans.factory.support.ConstructorResolver$2: org.springframework.beans.factory.support.ConstructorResolver this$0> = r1;

        r0.<org.springframework.beans.factory.support.ConstructorResolver$2: org.springframework.beans.factory.support.RootBeanDefinition val$mbd> = r2;

        r0.<org.springframework.beans.factory.support.ConstructorResolver$2: java.lang.Class val$factoryClazz> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.reflect.Method[] run()
    {
        org.springframework.beans.factory.support.RootBeanDefinition $r1;
        java.lang.Class $r2, $r3;
        org.springframework.beans.factory.support.ConstructorResolver$2 r0;
        java.lang.reflect.Method[] $r4;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.support.ConstructorResolver$2;

        $r1 = r0.<org.springframework.beans.factory.support.ConstructorResolver$2: org.springframework.beans.factory.support.RootBeanDefinition val$mbd>;

        $z0 = virtualinvoke $r1.<org.springframework.beans.factory.support.RootBeanDefinition: boolean isNonPublicAccessAllowed()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<org.springframework.beans.factory.support.ConstructorResolver$2: java.lang.Class val$factoryClazz>;

        $r4 = staticinvoke <org.springframework.util.ReflectionUtils: java.lang.reflect.Method[] getAllDeclaredMethods(java.lang.Class)>($r3);

        goto label2;

     label1:
        $r2 = r0.<org.springframework.beans.factory.support.ConstructorResolver$2: java.lang.Class val$factoryClazz>;

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

     label2:
        return $r4;
    }

    public volatile java.lang.Object run()
    {
        org.springframework.beans.factory.support.ConstructorResolver$2 r0;
        java.lang.reflect.Method[] $r1;

        r0 := @this: org.springframework.beans.factory.support.ConstructorResolver$2;

        $r1 = virtualinvoke r0.<org.springframework.beans.factory.support.ConstructorResolver$2: java.lang.reflect.Method[] run()>();

        return $r1;
    }
}
