public class org.mortbay.util.IO extends org.mortbay.thread.BoundedThreadPool
{
    public static final java.lang.String CRLF;
    public static final byte[] CRLF_BYTES;
    public static int bufferSize;
    private static org.mortbay.util.IO$NullOS __nullStream;
    private static org.mortbay.util.IO$ClosedIS __closedStream;
    private static org.mortbay.util.IO$NullWrite __nullWriter;

    public void <init>()
    {
        org.mortbay.util.IO r0;

        r0 := @this: org.mortbay.util.IO;

        specialinvoke r0.<org.mortbay.thread.BoundedThreadPool: void <init>()>();

        return;
    }

    public static org.mortbay.util.IO instance()
    {
        org.mortbay.util.IO $r0;

        $r0 = <org.mortbay.util.IO$Singleton: org.mortbay.util.IO __instance>;

        return $r0;
    }

    public static void copyThread(java.io.InputStream, java.io.OutputStream)
    {
        java.io.OutputStream r2;
        org.mortbay.util.IO $r3;
        org.mortbay.util.IO$Job $r0;
        java.lang.Exception $r4;
        java.io.InputStream r1;
        boolean $z0;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.io.OutputStream;

     label1:
        $r0 = new org.mortbay.util.IO$Job;

        specialinvoke $r0.<org.mortbay.util.IO$Job: void <init>(java.io.InputStream,java.io.OutputStream)>(r1, r2);

        $r3 = staticinvoke <org.mortbay.util.IO: org.mortbay.util.IO instance()>();

        $z0 = virtualinvoke $r3.<org.mortbay.util.IO: boolean dispatch(java.lang.Runnable)>($r0);

        if $z0 != 0 goto label2;

        virtualinvoke $r0.<org.mortbay.util.IO$Job: void run()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        staticinvoke <org.mortbay.log.Log: void warn(java.lang.Throwable)>($r4);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void copy(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.io.OutputStream;

        staticinvoke <org.mortbay.util.IO: void copy(java.io.InputStream,java.io.OutputStream,long)>(r0, r1, -1L);

        return;
    }

    public static void copyThread(java.io.Reader, java.io.Writer)
    {
        org.mortbay.util.IO $r3;
        java.io.Writer r2;
        org.mortbay.util.IO$Job $r0;
        java.io.Reader r1;
        java.lang.Exception $r4;
        boolean $z0;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: java.io.Writer;

     label1:
        $r0 = new org.mortbay.util.IO$Job;

        specialinvoke $r0.<org.mortbay.util.IO$Job: void <init>(java.io.Reader,java.io.Writer)>(r1, r2);

        $r3 = staticinvoke <org.mortbay.util.IO: org.mortbay.util.IO instance()>();

        $z0 = virtualinvoke $r3.<org.mortbay.util.IO: boolean dispatch(java.lang.Runnable)>($r0);

        if $z0 != 0 goto label2;

        virtualinvoke $r0.<org.mortbay.util.IO$Job: void run()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        staticinvoke <org.mortbay.log.Log: void warn(java.lang.Throwable)>($r4);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void copy(java.io.Reader, java.io.Writer) throws java.io.IOException
    {
        java.io.Writer r1;
        java.io.Reader r0;

        r0 := @parameter0: java.io.Reader;

        r1 := @parameter1: java.io.Writer;

        staticinvoke <org.mortbay.util.IO: void copy(java.io.Reader,java.io.Writer,long)>(r0, r1, -1L);

        return;
    }

    public static void copy(java.io.InputStream, java.io.OutputStream, long) throws java.io.IOException
    {
        byte[] r0;
        long $l6, $l9, l11;
        byte $b1, $b4, $b7;
        int $i0, $i2, $i3, $i5, $i8, $i10, i12, i13, $i14, $i15, $i16, $i18;
        java.io.OutputStream r2;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.io.OutputStream;

        l11 := @parameter2: long;

        $i0 = <org.mortbay.util.IO: int bufferSize>;

        r0 = newarray (byte)[$i0];

        i12 = <org.mortbay.util.IO: int bufferSize>;

        $b1 = l11 cmp 0L;

        $i14 = (int) $b1;

        if $i14 < 0 goto label5;

     label1:
        $b4 = l11 cmp 0L;

        $i15 = (int) $b4;

        if $i15 <= 0 goto label7;

        $i5 = <org.mortbay.util.IO: int bufferSize>;

        $l6 = (long) $i5;

        $b7 = l11 cmp $l6;

        $i16 = (int) $b7;

        if $i16 >= 0 goto label2;

        $i10 = (int) l11;

        i13 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r0, 0, $i10);

        goto label3;

     label2:
        $i8 = <org.mortbay.util.IO: int bufferSize>;

        i13 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r0, 0, $i8);

     label3:
        $i18 = (int) -1;

        if i13 != $i18 goto label4;

        goto label7;

     label4:
        $l9 = (long) i13;

        l11 = l11 - $l9;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>(r0, 0, i13);

        goto label1;

     label5:
        $i2 = <org.mortbay.util.IO: int bufferSize>;

        $i3 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r0, 0, $i2);

        if $i3 >= 0 goto label6;

        goto label7;

     label6:
        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>(r0, 0, $i3);

        goto label5;

     label7:
        return;
    }

    public static void copy(java.io.Reader, java.io.Writer, long) throws java.io.IOException
    {
        long $l8, $l11, l13;
        byte $b1, $b6, $b9;
        int $i0, $i2, $i3, $i4, $i5, $i7, $i10, $i12, i14, i15, $i16, $i17, $i18, $i20, $i22, $i24;
        boolean $z0, $z1;
        java.io.PrintWriter r3;
        java.io.Reader r2;
        java.io.Writer r1;
        char[] r0;

        r2 := @parameter0: java.io.Reader;

        r1 := @parameter1: java.io.Writer;

        l13 := @parameter2: long;

        $i0 = <org.mortbay.util.IO: int bufferSize>;

        r0 = newarray (char)[$i0];

        i14 = <org.mortbay.util.IO: int bufferSize>;

        $b1 = l13 cmp 0L;

        $i16 = (int) $b1;

        if $i16 < 0 goto label05;

     label01:
        $b6 = l13 cmp 0L;

        $i17 = (int) $b6;

        if $i17 <= 0 goto label11;

        $i7 = <org.mortbay.util.IO: int bufferSize>;

        $l8 = (long) $i7;

        $b9 = l13 cmp $l8;

        $i18 = (int) $b9;

        if $i18 >= 0 goto label02;

        $i12 = (int) l13;

        i15 = virtualinvoke r2.<java.io.Reader: int read(char[],int,int)>(r0, 0, $i12);

        goto label03;

     label02:
        $i10 = <org.mortbay.util.IO: int bufferSize>;

        i15 = virtualinvoke r2.<java.io.Reader: int read(char[],int,int)>(r0, 0, $i10);

     label03:
        $i20 = (int) -1;

        if i15 != $i20 goto label04;

        goto label11;

     label04:
        $l11 = (long) i15;

        l13 = l13 - $l11;

        virtualinvoke r1.<java.io.Writer: void write(char[],int,int)>(r0, 0, i15);

        goto label01;

     label05:
        $z0 = r1 instanceof java.io.PrintWriter;

        if $z0 == 0 goto label09;

        r3 = (java.io.PrintWriter) r1;

     label06:
        $z1 = virtualinvoke r3.<java.io.PrintWriter: boolean checkError()>();

        if $z1 != 0 goto label08;

        $i4 = <org.mortbay.util.IO: int bufferSize>;

        $i5 = virtualinvoke r2.<java.io.Reader: int read(char[],int,int)>(r0, 0, $i4);

        $i22 = (int) -1;

        if $i5 != $i22 goto label07;

        goto label08;

     label07:
        virtualinvoke r1.<java.io.Writer: void write(char[],int,int)>(r0, 0, $i5);

        goto label06;

     label08:
        goto label11;

     label09:
        $i2 = <org.mortbay.util.IO: int bufferSize>;

        $i3 = virtualinvoke r2.<java.io.Reader: int read(char[],int,int)>(r0, 0, $i2);

        $i24 = (int) -1;

        if $i3 != $i24 goto label10;

        goto label11;

     label10:
        virtualinvoke r1.<java.io.Writer: void write(char[],int,int)>(r0, 0, $i3);

        goto label09;

     label11:
        return;
    }

    public static void copy(java.io.File, java.io.File) throws java.io.IOException
    {
        java.io.File r0, r1;
        boolean $z0;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label1;

        staticinvoke <org.mortbay.util.IO: void copyDir(java.io.File,java.io.File)>(r0, r1);

        goto label2;

     label1:
        staticinvoke <org.mortbay.util.IO: void copyFile(java.io.File,java.io.File)>(r0, r1);

     label2:
        return;
    }

    public static void copyDir(java.io.File, java.io.File) throws java.io.IOException
    {
        int $i0, i1;
        java.lang.String $r4, $r5, $r6, $r10;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r9;
        java.io.File r0, r1, $r3, $r7, $r8;
        java.io.File[] $r2;

        r1 := @parameter0: java.io.File;

        r0 := @parameter1: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $z3 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z3 != 0 goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke r0.<java.io.File: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label1:
        virtualinvoke r0.<java.io.File: boolean mkdirs()>();

     label2:
        $r2 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>();

        if $r2 == null goto label6;

        i1 = 0;

     label3:
        $i0 = lengthof $r2;

        if i1 >= $i0 goto label6;

        $r3 = $r2[i1];

        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String getName()>();

        $r5 = ".";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label5;

        $r6 = "..";

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z2 == 0 goto label4;

        goto label5;

     label4:
        $r8 = $r2[i1];

        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, $r4);

        staticinvoke <org.mortbay.util.IO: void copy(java.io.File,java.io.File)>($r8, $r7);

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        return;
    }

    public static void copyFile(java.io.File, java.io.File) throws java.io.IOException
    {
        java.io.FileOutputStream $r2;
        java.io.FileInputStream $r0;
        java.io.File r1, r3;

        r1 := @parameter0: java.io.File;

        r3 := @parameter1: java.io.File;

        $r0 = new java.io.FileInputStream;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        $r2 = new java.io.FileOutputStream;

        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>(r3);

        staticinvoke <org.mortbay.util.IO: void copy(java.io.InputStream,java.io.OutputStream)>($r0, $r2);

        virtualinvoke $r0.<java.io.FileInputStream: void close()>();

        virtualinvoke $r2.<java.io.FileOutputStream: void close()>();

        return;
    }

    public static java.lang.String toString(java.io.InputStream) throws java.io.IOException
    {
        java.lang.String $r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <org.mortbay.util.IO: java.lang.String toString(java.io.InputStream,java.lang.String)>(r0, null);

        return $r1;
    }

    public static java.lang.String toString(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        java.io.StringWriter $r0;
        java.lang.String r1, $r3;
        java.io.InputStreamReader $r4;
        java.io.InputStream r2;

        r2 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.lang.String;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        if r1 != null goto label1;

        $r4 = new java.io.InputStreamReader;

        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r2);

        goto label2;

     label1:
        $r4 = new java.io.InputStreamReader;

        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r2, r1);

     label2:
        staticinvoke <org.mortbay.util.IO: void copy(java.io.Reader,java.io.Writer)>($r4, $r0);

        $r3 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String toString(java.io.Reader) throws java.io.IOException
    {
        java.io.Reader r1;
        java.lang.String $r2;
        java.io.StringWriter $r0;

        r1 := @parameter0: java.io.Reader;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        staticinvoke <org.mortbay.util.IO: void copy(java.io.Reader,java.io.Writer)>(r1, $r0);

        $r2 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        return $r2;
    }

    public static boolean delete(java.io.File)
    {
        java.io.File r0, $r2;
        int $i0, i1;
        java.io.File[] $r1;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label3;

        $r1 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        i1 = 0;

     label2:
        if $r1 == null goto label3;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label3;

        $r2 = $r1[i1];

        staticinvoke <org.mortbay.util.IO: boolean delete(java.io.File)>($r2);

        i1 = i1 + 1;

        goto label2;

     label3:
        $z2 = virtualinvoke r0.<java.io.File: boolean delete()>();

        return $z2;
    }

    public static void close(java.io.InputStream)
    {
        java.io.IOException $r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

     label1:
        if r0 == null goto label2;

        virtualinvoke r0.<java.io.InputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        staticinvoke <org.mortbay.log.Log: void ignore(java.lang.Throwable)>($r1);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static byte[] readBytes(java.io.InputStream) throws java.io.IOException
    {
        byte[] $r2;
        java.io.ByteArrayOutputStream $r0;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        staticinvoke <org.mortbay.util.IO: void copy(java.io.InputStream,java.io.OutputStream)>(r1, $r0);

        $r2 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r2;
    }

    public static void close(java.io.OutputStream)
    {
        java.io.OutputStream r0;
        java.io.IOException $r1;

        r0 := @parameter0: java.io.OutputStream;

     label1:
        if r0 == null goto label2;

        virtualinvoke r0.<java.io.OutputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        staticinvoke <org.mortbay.log.Log: void ignore(java.lang.Throwable)>($r1);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static java.io.OutputStream getNullStream()
    {
        org.mortbay.util.IO$NullOS $r0;

        $r0 = <org.mortbay.util.IO: org.mortbay.util.IO$NullOS __nullStream>;

        return $r0;
    }

    public static java.io.InputStream getClosedStream()
    {
        org.mortbay.util.IO$ClosedIS $r0;

        $r0 = <org.mortbay.util.IO: org.mortbay.util.IO$ClosedIS __closedStream>;

        return $r0;
    }

    public static java.io.Writer getNullWriter()
    {
        org.mortbay.util.IO$NullWrite $r0;

        $r0 = <org.mortbay.util.IO: org.mortbay.util.IO$NullWrite __nullWriter>;

        return $r0;
    }

    static void <clinit>()
    {
        byte[] $r0;
        org.mortbay.util.IO$NullOS $r1;
        org.mortbay.util.IO$ClosedIS $r2;
        org.mortbay.util.IO$NullWrite $r3;

        <org.mortbay.util.IO: java.lang.String CRLF> = "\r\n";

        $r0 = newarray (byte)[2];

        $r0[0] = 13;

        $r0[1] = 10;

        <org.mortbay.util.IO: byte[] CRLF_BYTES> = $r0;

        <org.mortbay.util.IO: int bufferSize> = 16384;

        $r1 = new org.mortbay.util.IO$NullOS;

        specialinvoke $r1.<org.mortbay.util.IO$NullOS: void <init>(org.mortbay.util.IO$1)>(null);

        <org.mortbay.util.IO: org.mortbay.util.IO$NullOS __nullStream> = $r1;

        $r2 = new org.mortbay.util.IO$ClosedIS;

        specialinvoke $r2.<org.mortbay.util.IO$ClosedIS: void <init>(org.mortbay.util.IO$1)>(null);

        <org.mortbay.util.IO: org.mortbay.util.IO$ClosedIS __closedStream> = $r2;

        $r3 = new org.mortbay.util.IO$NullWrite;

        specialinvoke $r3.<org.mortbay.util.IO$NullWrite: void <init>(org.mortbay.util.IO$1)>(null);

        <org.mortbay.util.IO: org.mortbay.util.IO$NullWrite __nullWriter> = $r3;

        return;
    }
}
