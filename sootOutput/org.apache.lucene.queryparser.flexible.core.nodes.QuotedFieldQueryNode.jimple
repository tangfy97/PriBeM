public class org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode extends org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode
{

    public void <init>(java.lang.CharSequence, java.lang.CharSequence, int, int)
    {
        org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode r0;
        java.lang.CharSequence r1, r2;
        int i0, i1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: void <init>(java.lang.CharSequence,java.lang.CharSequence,int,int)>(r1, r2, i0, i1);

        return;
    }

    public java.lang.CharSequence toQueryString(org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax)
    {
        java.lang.String $r11, $r17;
        boolean $z0;
        java.lang.CharSequence $r1, $r3, $r8, $r14;
        org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax r7;
        org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode r0;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r9, $r10, $r12, $r13, $r15, $r16;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode;

        r7 := @parameter0: org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode: java.lang.CharSequence field>;

        $z0 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode: boolean isDefaultField(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r14 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode: java.lang.CharSequence getTermEscapeQuoted(org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax)>(r7);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode: java.lang.CharSequence field>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r8 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode: java.lang.CharSequence getTermEscapeQuoted(org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax)>(r7);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public java.lang.String toString()
    {
        int $i0, $i1;
        java.lang.String $r13;
        java.lang.CharSequence $r7, $r10;
        org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode r2;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r8, $r9, $r11, $r12;

        r2 := @this: org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<quotedfield start=\'");

        $i0 = r2.<org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode: int begin>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' end=\'");

        $i1 = r2.<org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode: int end>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' field=\'");

        $r7 = r2.<org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode: java.lang.CharSequence field>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' term=\'");

        $r10 = r2.<org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode: java.lang.CharSequence text>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'/>");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode cloneTree() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode r0, r2;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode $r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode;

        $r1 = specialinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode cloneTree()>();

        r2 = (org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode) $r1;

        return r2;
    }

    public volatile org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode cloneTree() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode r0, $r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode cloneTree()>();

        return $r1;
    }

    public volatile org.apache.lucene.queryparser.flexible.core.nodes.QueryNode cloneTree() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode r0, $r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.QuotedFieldQueryNode cloneTree()>();

        return $r1;
    }
}
