public class org.apache.batik.svggen.SVGIDGenerator extends java.lang.Object
{
    private java.util.Map prefixMap;

    public void <init>()
    {
        java.util.HashMap $r1;
        org.apache.batik.svggen.SVGIDGenerator r0;

        r0 := @this: org.apache.batik.svggen.SVGIDGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.batik.svggen.SVGIDGenerator: java.util.Map prefixMap> = $r1;

        return;
    }

    public java.lang.String generateID(java.lang.String)
    {
        java.lang.Integer $r4, $r10, r12;
        java.lang.StringBuffer $r6, $r7, $r8;
        java.util.Map $r2, $r5, $r11;
        int $i0, $i1;
        java.lang.Object $r3;
        org.apache.batik.svggen.SVGIDGenerator r0;
        java.lang.String r1, $r9;

        r0 := @this: org.apache.batik.svggen.SVGIDGenerator;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.batik.svggen.SVGIDGenerator: java.util.Map prefixMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r12 = (java.lang.Integer) $r3;

        if r12 != null goto label1;

        $r10 = new java.lang.Integer;

        specialinvoke $r10.<java.lang.Integer: void <init>(int)>(0);

        r12 = $r10;

        $r11 = r0.<org.apache.batik.svggen.SVGIDGenerator: java.util.Map prefixMap>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10);

     label1:
        $r4 = new java.lang.Integer;

        $i0 = virtualinvoke r12.<java.lang.Integer: int intValue()>();

        $i1 = $i0 + 1;

        specialinvoke $r4.<java.lang.Integer: void <init>(int)>($i1);

        $r5 = r0.<org.apache.batik.svggen.SVGIDGenerator: java.util.Map prefixMap>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }
}
