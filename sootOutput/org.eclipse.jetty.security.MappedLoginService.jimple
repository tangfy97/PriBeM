public abstract class org.eclipse.jetty.security.MappedLoginService extends org.eclipse.jetty.util.component.AbstractLifeCycle implements org.eclipse.jetty.security.LoginService
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    protected org.eclipse.jetty.security.IdentityService _identityService;
    protected java.lang.String _name;
    protected final java.util.concurrent.ConcurrentMap _users;

    protected void <init>()
    {
        java.util.concurrent.ConcurrentHashMap $r2;
        org.eclipse.jetty.security.MappedLoginService r0;
        org.eclipse.jetty.security.DefaultIdentityService $r1;

        r0 := @this: org.eclipse.jetty.security.MappedLoginService;

        specialinvoke r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: void <init>()>();

        $r1 = new org.eclipse.jetty.security.DefaultIdentityService;

        specialinvoke $r1.<org.eclipse.jetty.security.DefaultIdentityService: void <init>()>();

        r0.<org.eclipse.jetty.security.MappedLoginService: org.eclipse.jetty.security.IdentityService _identityService> = $r1;

        $r2 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.eclipse.jetty.security.MappedLoginService: java.util.concurrent.ConcurrentMap _users> = $r2;

        return;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        org.eclipse.jetty.security.MappedLoginService r0;

        r0 := @this: org.eclipse.jetty.security.MappedLoginService;

        $r1 = r0.<org.eclipse.jetty.security.MappedLoginService: java.lang.String _name>;

        return $r1;
    }

    public org.eclipse.jetty.security.IdentityService getIdentityService()
    {
        org.eclipse.jetty.security.IdentityService $r1;
        org.eclipse.jetty.security.MappedLoginService r0;

        r0 := @this: org.eclipse.jetty.security.MappedLoginService;

        $r1 = r0.<org.eclipse.jetty.security.MappedLoginService: org.eclipse.jetty.security.IdentityService _identityService>;

        return $r1;
    }

    public java.util.concurrent.ConcurrentMap getUsers()
    {
        org.eclipse.jetty.security.MappedLoginService r0;
        java.util.concurrent.ConcurrentMap $r1;

        r0 := @this: org.eclipse.jetty.security.MappedLoginService;

        $r1 = r0.<org.eclipse.jetty.security.MappedLoginService: java.util.concurrent.ConcurrentMap _users>;

        return $r1;
    }

    public void setIdentityService(org.eclipse.jetty.security.IdentityService)
    {
        java.lang.IllegalStateException $r2;
        org.eclipse.jetty.security.MappedLoginService r0;
        org.eclipse.jetty.security.IdentityService r1;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.security.MappedLoginService;

        r1 := @parameter0: org.eclipse.jetty.security.IdentityService;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.security.MappedLoginService: boolean isRunning()>();

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Running");

        throw $r2;

     label1:
        r0.<org.eclipse.jetty.security.MappedLoginService: org.eclipse.jetty.security.IdentityService _identityService> = r1;

        return;
    }

    public void setName(java.lang.String)
    {
        java.lang.IllegalStateException $r2;
        org.eclipse.jetty.security.MappedLoginService r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.security.MappedLoginService;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.security.MappedLoginService: boolean isRunning()>();

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Running");

        throw $r2;

     label1:
        r0.<org.eclipse.jetty.security.MappedLoginService: java.lang.String _name> = r1;

        return;
    }

    public void setUsers(java.util.Map)
    {
        java.lang.IllegalStateException $r4;
        org.eclipse.jetty.security.MappedLoginService r0;
        java.util.Map r2;
        boolean $z0;
        java.util.concurrent.ConcurrentMap $r1, $r3;

        r0 := @this: org.eclipse.jetty.security.MappedLoginService;

        r2 := @parameter0: java.util.Map;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.security.MappedLoginService: boolean isRunning()>();

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Running");

        throw $r4;

     label1:
        $r1 = r0.<org.eclipse.jetty.security.MappedLoginService: java.util.concurrent.ConcurrentMap _users>;

        interfaceinvoke $r1.<java.util.concurrent.ConcurrentMap: void clear()>();

        $r3 = r0.<org.eclipse.jetty.security.MappedLoginService: java.util.concurrent.ConcurrentMap _users>;

        interfaceinvoke $r3.<java.util.concurrent.ConcurrentMap: void putAll(java.util.Map)>(r2);

        return;
    }

    protected void doStart() throws java.lang.Exception
    {
        org.eclipse.jetty.security.MappedLoginService r0;

        r0 := @this: org.eclipse.jetty.security.MappedLoginService;

        virtualinvoke r0.<org.eclipse.jetty.security.MappedLoginService: void loadUsers()>();

        specialinvoke r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: void doStart()>();

        return;
    }

    protected void doStop() throws java.lang.Exception
    {
        org.eclipse.jetty.security.MappedLoginService r0;

        r0 := @this: org.eclipse.jetty.security.MappedLoginService;

        specialinvoke r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: void doStop()>();

        return;
    }

    public void logout(org.eclipse.jetty.server.UserIdentity)
    {
        java.lang.Object[] $r0;
        org.eclipse.jetty.security.MappedLoginService r3;
        org.eclipse.jetty.util.log.Logger $r2;
        org.eclipse.jetty.server.UserIdentity r1;

        r3 := @this: org.eclipse.jetty.security.MappedLoginService;

        r1 := @parameter0: org.eclipse.jetty.server.UserIdentity;

        $r2 = <org.eclipse.jetty.security.MappedLoginService: org.eclipse.jetty.util.log.Logger LOG>;

        $r0 = newarray (java.lang.Object)[1];

        $r0[0] = r1;

        interfaceinvoke $r2.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("logout {}", $r0);

        return;
    }

    public java.lang.String toString()
    {
        org.eclipse.jetty.security.MappedLoginService r1;
        java.lang.StringBuilder $r0, $r4, $r5, $r7, $r8;
        java.lang.Class $r2;
        java.lang.String $r3, $r6, $r9;

        r1 := @this: org.eclipse.jetty.security.MappedLoginService;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r6 = r1.<org.eclipse.jetty.security.MappedLoginService: java.lang.String _name>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    protected synchronized org.eclipse.jetty.server.UserIdentity putUser(java.lang.String, java.lang.Object)
    {
        org.eclipse.jetty.security.MappedLoginService$KnownUser $r2;
        org.eclipse.jetty.security.MappedLoginService r7;
        org.eclipse.jetty.security.IdentityService $r9;
        org.eclipse.jetty.util.security.Credential $r11;
        java.util.Set $r5, $r6;
        java.lang.String[] $r8;
        javax.security.auth.Subject $r4;
        org.eclipse.jetty.server.UserIdentity r10;
        java.util.concurrent.ConcurrentMap $r12;
        java.lang.Object r0;
        java.lang.String $r1, r3;
        boolean $z0, $z1;

        r7 := @this: org.eclipse.jetty.security.MappedLoginService;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof org.eclipse.jetty.server.UserIdentity;

        if $z0 == 0 goto label1;

        r10 = (org.eclipse.jetty.server.UserIdentity) r0;

        goto label4;

     label1:
        $z1 = r0 instanceof org.eclipse.jetty.util.security.Credential;

        if $z1 == 0 goto label2;

        $r11 = (org.eclipse.jetty.util.security.Credential) r0;

        goto label3;

     label2:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r11 = staticinvoke <org.eclipse.jetty.util.security.Credential: org.eclipse.jetty.util.security.Credential getCredential(java.lang.String)>($r1);

     label3:
        $r2 = new org.eclipse.jetty.security.MappedLoginService$KnownUser;

        specialinvoke $r2.<org.eclipse.jetty.security.MappedLoginService$KnownUser: void <init>(java.lang.String,org.eclipse.jetty.util.security.Credential)>(r3, $r11);

        $r4 = new javax.security.auth.Subject;

        specialinvoke $r4.<javax.security.auth.Subject: void <init>()>();

        $r5 = virtualinvoke $r4.<javax.security.auth.Subject: java.util.Set getPrincipals()>();

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r4.<javax.security.auth.Subject: java.util.Set getPrivateCredentials()>();

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r11);

        virtualinvoke $r4.<javax.security.auth.Subject: void setReadOnly()>();

        $r9 = r7.<org.eclipse.jetty.security.MappedLoginService: org.eclipse.jetty.security.IdentityService _identityService>;

        $r8 = <org.eclipse.jetty.security.IdentityService: java.lang.String[] NO_ROLES>;

        r10 = interfaceinvoke $r9.<org.eclipse.jetty.security.IdentityService: org.eclipse.jetty.server.UserIdentity newUserIdentity(javax.security.auth.Subject,java.security.Principal,java.lang.String[])>($r4, $r2, $r8);

     label4:
        $r12 = r7.<org.eclipse.jetty.security.MappedLoginService: java.util.concurrent.ConcurrentMap _users>;

        interfaceinvoke $r12.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r10);

        return r10;
    }

    public synchronized org.eclipse.jetty.server.UserIdentity putUser(java.lang.String, org.eclipse.jetty.util.security.Credential, java.lang.String[])
    {
        org.eclipse.jetty.security.MappedLoginService r7;
        org.eclipse.jetty.util.security.Credential r2;
        org.eclipse.jetty.security.IdentityService $r8;
        java.lang.String[] r6;
        org.eclipse.jetty.server.UserIdentity $r9;
        java.util.concurrent.ConcurrentMap $r10;
        int i0, i1;
        java.lang.String r1, r11;
        org.eclipse.jetty.security.MappedLoginService$KnownUser $r0;
        java.util.Set $r4, $r5, $r12;
        org.eclipse.jetty.security.MappedLoginService$RolePrincipal $r13;
        javax.security.auth.Subject $r3;

        r7 := @this: org.eclipse.jetty.security.MappedLoginService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.eclipse.jetty.util.security.Credential;

        r6 := @parameter2: java.lang.String[];

        $r0 = new org.eclipse.jetty.security.MappedLoginService$KnownUser;

        specialinvoke $r0.<org.eclipse.jetty.security.MappedLoginService$KnownUser: void <init>(java.lang.String,org.eclipse.jetty.util.security.Credential)>(r1, r2);

        $r3 = new javax.security.auth.Subject;

        specialinvoke $r3.<javax.security.auth.Subject: void <init>()>();

        $r4 = virtualinvoke $r3.<javax.security.auth.Subject: java.util.Set getPrincipals()>();

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r0);

        $r5 = virtualinvoke $r3.<javax.security.auth.Subject: java.util.Set getPrivateCredentials()>();

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r2);

        if r6 == null goto label2;

        i0 = lengthof r6;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r11 = r6[i1];

        $r12 = virtualinvoke $r3.<javax.security.auth.Subject: java.util.Set getPrincipals()>();

        $r13 = new org.eclipse.jetty.security.MappedLoginService$RolePrincipal;

        specialinvoke $r13.<org.eclipse.jetty.security.MappedLoginService$RolePrincipal: void <init>(java.lang.String)>(r11);

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>($r13);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke $r3.<javax.security.auth.Subject: void setReadOnly()>();

        $r8 = r7.<org.eclipse.jetty.security.MappedLoginService: org.eclipse.jetty.security.IdentityService _identityService>;

        $r9 = interfaceinvoke $r8.<org.eclipse.jetty.security.IdentityService: org.eclipse.jetty.server.UserIdentity newUserIdentity(javax.security.auth.Subject,java.security.Principal,java.lang.String[])>($r3, $r0, r6);

        $r10 = r7.<org.eclipse.jetty.security.MappedLoginService: java.util.concurrent.ConcurrentMap _users>;

        interfaceinvoke $r10.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r9);

        return $r9;
    }

    public void removeUser(java.lang.String)
    {
        java.lang.String r1;
        org.eclipse.jetty.security.MappedLoginService r0;
        java.util.concurrent.ConcurrentMap $r2;

        r0 := @this: org.eclipse.jetty.security.MappedLoginService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.eclipse.jetty.security.MappedLoginService: java.util.concurrent.ConcurrentMap _users>;

        interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public org.eclipse.jetty.server.UserIdentity login(java.lang.String, java.lang.Object)
    {
        org.eclipse.jetty.security.MappedLoginService r0;
        java.util.concurrent.ConcurrentMap $r2;
        org.eclipse.jetty.server.UserIdentity r7;
        java.security.Principal $r4;
        org.eclipse.jetty.security.MappedLoginService$UserPrincipal r5;
        java.lang.Object $r3, r6;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.security.MappedLoginService;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.Object;

        $r2 = r0.<org.eclipse.jetty.security.MappedLoginService: java.util.concurrent.ConcurrentMap _users>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (org.eclipse.jetty.server.UserIdentity) $r3;

        if r7 != null goto label1;

        r7 = virtualinvoke r0.<org.eclipse.jetty.security.MappedLoginService: org.eclipse.jetty.server.UserIdentity loadUser(java.lang.String)>(r1);

     label1:
        if r7 == null goto label2;

        $r4 = interfaceinvoke r7.<org.eclipse.jetty.server.UserIdentity: java.security.Principal getUserPrincipal()>();

        r5 = (org.eclipse.jetty.security.MappedLoginService$UserPrincipal) $r4;

        $z0 = interfaceinvoke r5.<org.eclipse.jetty.security.MappedLoginService$UserPrincipal: boolean authenticate(java.lang.Object)>(r6);

        if $z0 == 0 goto label2;

        return r7;

     label2:
        return null;
    }

    public boolean validate(org.eclipse.jetty.server.UserIdentity)
    {
        org.eclipse.jetty.security.MappedLoginService r0;
        org.eclipse.jetty.server.UserIdentity r1, $r7;
        java.util.concurrent.ConcurrentMap $r2;
        java.security.Principal $r3, $r5;
        java.lang.String $r4, $r6;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.security.MappedLoginService;

        r1 := @parameter0: org.eclipse.jetty.server.UserIdentity;

        $r2 = r0.<org.eclipse.jetty.security.MappedLoginService: java.util.concurrent.ConcurrentMap _users>;

        $r3 = interfaceinvoke r1.<org.eclipse.jetty.server.UserIdentity: java.security.Principal getUserPrincipal()>();

        $r4 = interfaceinvoke $r3.<java.security.Principal: java.lang.String getName()>();

        $z0 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: boolean containsKey(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r5 = interfaceinvoke r1.<org.eclipse.jetty.server.UserIdentity: java.security.Principal getUserPrincipal()>();

        $r6 = interfaceinvoke $r5.<java.security.Principal: java.lang.String getName()>();

        $r7 = virtualinvoke r0.<org.eclipse.jetty.security.MappedLoginService: org.eclipse.jetty.server.UserIdentity loadUser(java.lang.String)>($r6);

        if $r7 == null goto label2;

        return 1;

     label2:
        return 0;
    }

    protected abstract org.eclipse.jetty.server.UserIdentity loadUser(java.lang.String);

    protected abstract void loadUsers() throws java.io.IOException;

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/security/MappedLoginService;");

        <org.eclipse.jetty.security.MappedLoginService: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
