class org.springframework.util.xml.StaxResult extends javax.xml.transform.sax.SAXResult
{
    private javax.xml.stream.XMLEventWriter eventWriter;
    private javax.xml.stream.XMLStreamWriter streamWriter;

    void <init>(javax.xml.stream.XMLStreamWriter)
    {
        javax.xml.stream.XMLStreamWriter r2;
        org.springframework.util.xml.StaxResult r0;
        org.springframework.util.xml.StaxStreamContentHandler $r1;

        r0 := @this: org.springframework.util.xml.StaxResult;

        r2 := @parameter0: javax.xml.stream.XMLStreamWriter;

        specialinvoke r0.<javax.xml.transform.sax.SAXResult: void <init>()>();

        $r1 = new org.springframework.util.xml.StaxStreamContentHandler;

        specialinvoke $r1.<org.springframework.util.xml.StaxStreamContentHandler: void <init>(javax.xml.stream.XMLStreamWriter)>(r2);

        specialinvoke r0.<javax.xml.transform.sax.SAXResult: void setHandler(org.xml.sax.ContentHandler)>($r1);

        r0.<org.springframework.util.xml.StaxResult: javax.xml.stream.XMLStreamWriter streamWriter> = r2;

        return;
    }

    void <init>(javax.xml.stream.XMLEventWriter)
    {
        javax.xml.stream.XMLEventWriter r2;
        org.springframework.util.xml.StaxResult r0;
        org.springframework.util.xml.StaxEventContentHandler $r1;

        r0 := @this: org.springframework.util.xml.StaxResult;

        r2 := @parameter0: javax.xml.stream.XMLEventWriter;

        specialinvoke r0.<javax.xml.transform.sax.SAXResult: void <init>()>();

        $r1 = new org.springframework.util.xml.StaxEventContentHandler;

        specialinvoke $r1.<org.springframework.util.xml.StaxEventContentHandler: void <init>(javax.xml.stream.util.XMLEventConsumer)>(r2);

        specialinvoke r0.<javax.xml.transform.sax.SAXResult: void setHandler(org.xml.sax.ContentHandler)>($r1);

        r0.<org.springframework.util.xml.StaxResult: javax.xml.stream.XMLEventWriter eventWriter> = r2;

        return;
    }

    void <init>(javax.xml.stream.XMLEventWriter, javax.xml.stream.XMLEventFactory)
    {
        javax.xml.stream.XMLEventWriter r2;
        org.springframework.util.xml.StaxResult r0;
        javax.xml.stream.XMLEventFactory r3;
        org.springframework.util.xml.StaxEventContentHandler $r1;

        r0 := @this: org.springframework.util.xml.StaxResult;

        r2 := @parameter0: javax.xml.stream.XMLEventWriter;

        r3 := @parameter1: javax.xml.stream.XMLEventFactory;

        specialinvoke r0.<javax.xml.transform.sax.SAXResult: void <init>()>();

        $r1 = new org.springframework.util.xml.StaxEventContentHandler;

        specialinvoke $r1.<org.springframework.util.xml.StaxEventContentHandler: void <init>(javax.xml.stream.util.XMLEventConsumer,javax.xml.stream.XMLEventFactory)>(r2, r3);

        specialinvoke r0.<javax.xml.transform.sax.SAXResult: void setHandler(org.xml.sax.ContentHandler)>($r1);

        r0.<org.springframework.util.xml.StaxResult: javax.xml.stream.XMLEventWriter eventWriter> = r2;

        return;
    }

    javax.xml.stream.XMLEventWriter getXMLEventWriter()
    {
        javax.xml.stream.XMLEventWriter $r1;
        org.springframework.util.xml.StaxResult r0;

        r0 := @this: org.springframework.util.xml.StaxResult;

        $r1 = r0.<org.springframework.util.xml.StaxResult: javax.xml.stream.XMLEventWriter eventWriter>;

        return $r1;
    }

    javax.xml.stream.XMLStreamWriter getXMLStreamWriter()
    {
        javax.xml.stream.XMLStreamWriter $r1;
        org.springframework.util.xml.StaxResult r0;

        r0 := @this: org.springframework.util.xml.StaxResult;

        $r1 = r0.<org.springframework.util.xml.StaxResult: javax.xml.stream.XMLStreamWriter streamWriter>;

        return $r1;
    }

    public void setHandler(org.xml.sax.ContentHandler)
    {
        java.lang.UnsupportedOperationException $r0;
        org.springframework.util.xml.StaxResult r1;
        org.xml.sax.ContentHandler r2;

        r1 := @this: org.springframework.util.xml.StaxResult;

        r2 := @parameter0: org.xml.sax.ContentHandler;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("setHandler is not supported");

        throw $r0;
    }
}
