class com.mycila.inject.legacy.LegacyProvider$FactoryLegacyProvider extends com.mycila.inject.legacy.LegacyProvider
{
    private final java.lang.reflect.Method method;
    private final com.google.inject.Key factoryKey;

    transient void <init>(java.lang.Class, com.google.inject.Key, java.lang.String, com.google.inject.Key[])
    {
        com.mycila.inject.legacy.LegacyProvider$FactoryLegacyProvider r0;
        com.google.inject.Key r3;
        java.lang.Class r1, $r5;
        com.google.inject.Key[] r2;
        java.lang.String r6;
        com.google.inject.TypeLiteral $r4;
        java.lang.reflect.Method $r7;

        r0 := @this: com.mycila.inject.legacy.LegacyProvider$FactoryLegacyProvider;

        r1 := @parameter0: java.lang.Class;

        r3 := @parameter1: com.google.inject.Key;

        r6 := @parameter2: java.lang.String;

        r2 := @parameter3: com.google.inject.Key[];

        specialinvoke r0.<com.mycila.inject.legacy.LegacyProvider: void <init>(java.lang.Class,com.google.inject.Key[],com.mycila.inject.legacy.LegacyProvider$1)>(r1, r2, null);

        r0.<com.mycila.inject.legacy.LegacyProvider$FactoryLegacyProvider: com.google.inject.Key factoryKey> = r3;

        $r4 = virtualinvoke r3.<com.google.inject.Key: com.google.inject.TypeLiteral getTypeLiteral()>();

        $r5 = virtualinvoke $r4.<com.google.inject.TypeLiteral: java.lang.Class getRawType()>();

        $r7 = staticinvoke <com.mycila.inject.legacy.LegacyProvider: java.lang.reflect.Method access$400(java.lang.Class,java.lang.String,com.google.inject.Key[])>($r5, r6, r2);

        r0.<com.mycila.inject.legacy.LegacyProvider$FactoryLegacyProvider: java.lang.reflect.Method method> = $r7;

        return;
    }

    public java.lang.Object get(com.google.inject.Injector)
    {
        com.mycila.inject.internal.MethodInvoker $r6;
        java.lang.Object[] $r7;
        com.mycila.inject.legacy.LegacyProvider$FactoryLegacyProvider r0;
        com.google.inject.Key $r3;
        java.lang.RuntimeException $r11;
        java.lang.Exception $r10;
        com.google.inject.Injector r2;
        int $i0;
        java.lang.Class $r5;
        java.lang.Object $r8, $r9, $r12;
        java.lang.reflect.Method $r1, $r4;
        boolean $z0;

        r0 := @this: com.mycila.inject.legacy.LegacyProvider$FactoryLegacyProvider;

        r2 := @parameter0: com.google.inject.Injector;

        $r1 = r0.<com.mycila.inject.legacy.LegacyProvider$FactoryLegacyProvider: java.lang.reflect.Method method>;

        $i0 = virtualinvoke $r1.<java.lang.reflect.Method: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        if $z0 == 0 goto label1;

        $r12 = null;

        goto label2;

     label1:
        $r3 = r0.<com.mycila.inject.legacy.LegacyProvider$FactoryLegacyProvider: com.google.inject.Key factoryKey>;

        $r12 = interfaceinvoke r2.<com.google.inject.Injector: java.lang.Object getInstance(com.google.inject.Key)>($r3);

     label2:
        $r5 = r0.<com.mycila.inject.legacy.LegacyProvider$FactoryLegacyProvider: java.lang.Class providedType>;

        $r4 = r0.<com.mycila.inject.legacy.LegacyProvider$FactoryLegacyProvider: java.lang.reflect.Method method>;

        $r6 = staticinvoke <com.mycila.inject.internal.Proxy: com.mycila.inject.internal.MethodInvoker invoker(java.lang.reflect.Method)>($r4);

        $r7 = virtualinvoke r0.<com.mycila.inject.legacy.LegacyProvider$FactoryLegacyProvider: java.lang.Object[] getParameterValues(com.google.inject.Injector)>(r2);

        $r8 = interfaceinvoke $r6.<com.mycila.inject.internal.MethodInvoker: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r12, $r7);

        $r9 = virtualinvoke $r5.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r8);

     label3:
        return $r9;

     label4:
        $r10 := @caughtexception;

        $r11 = staticinvoke <com.mycila.inject.MycilaGuiceException: java.lang.RuntimeException runtime(java.lang.Throwable)>($r10);

        throw $r11;

        catch java.lang.Exception from label2 to label3 with label4;
    }
}
