public class org.sat4j.minisat.constraints.cnf.Lits23 extends org.sat4j.minisat.constraints.cnf.Lits2 implements org.sat4j.minisat.core.ILits23
{
    private static final long serialVersionUID;
    private org.sat4j.minisat.constraints.cnf.TernaryClauses[] ternclauses;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.sat4j.minisat.constraints.cnf.Lits23 r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits23;

        specialinvoke r0.<org.sat4j.minisat.constraints.cnf.Lits2: void <init>()>();

        r0.<org.sat4j.minisat.constraints.cnf.Lits23: org.sat4j.minisat.constraints.cnf.TernaryClauses[] ternclauses> = null;

        return;
    }

    private void register(int, int, int)
    {
        org.sat4j.minisat.constraints.cnf.TernaryClauses $r4, $r5, $r9, $r19;
        org.sat4j.specs.IVec $r10;
        boolean $z0, $z1, $z2;
        org.sat4j.specs.IVec[] $r7;
        org.sat4j.minisat.constraints.cnf.Lits23 r0;
        java.lang.AssertionError $r15, $r16, $r17;
        int i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        org.sat4j.minisat.constraints.cnf.TernaryClauses[] $r1, $r2, $r3, $r6, $r8, r11, $r12, $r13, $r14, $r18;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits23;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i4 := @parameter2: int;

        $z0 = <org.sat4j.minisat.constraints.cnf.Lits23: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i0 > 1 goto label1;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>()>();

        throw $r17;

     label1:
        $z1 = <org.sat4j.minisat.constraints.cnf.Lits23: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        if i1 > 1 goto label2;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label2:
        $z2 = <org.sat4j.minisat.constraints.cnf.Lits23: boolean $assertionsDisabled>;

        if $z2 != 0 goto label3;

        if i4 > 1 goto label3;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label3:
        $r1 = r0.<org.sat4j.minisat.constraints.cnf.Lits23: org.sat4j.minisat.constraints.cnf.TernaryClauses[] ternclauses>;

        if $r1 != null goto label4;

        $i10 = virtualinvoke r0.<org.sat4j.minisat.constraints.cnf.Lits23: int capacity()>();

        $i11 = 2 * $i10;

        $i12 = $i11 + 2;

        $r14 = newarray (org.sat4j.minisat.constraints.cnf.TernaryClauses)[$i12];

        r0.<org.sat4j.minisat.constraints.cnf.Lits23: org.sat4j.minisat.constraints.cnf.TernaryClauses[] ternclauses> = $r14;

        goto label5;

     label4:
        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(i0, i1);

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.Lits23: org.sat4j.minisat.constraints.cnf.TernaryClauses[] ternclauses>;

        $i3 = lengthof $r2;

        if $i3 > $i2 goto label5;

        $i6 = virtualinvoke r0.<org.sat4j.minisat.constraints.cnf.Lits23: int capacity()>();

        $i7 = 2 * $i6;

        $i8 = $i7 + 2;

        r11 = newarray (org.sat4j.minisat.constraints.cnf.TernaryClauses)[$i8];

        $r13 = r0.<org.sat4j.minisat.constraints.cnf.Lits23: org.sat4j.minisat.constraints.cnf.TernaryClauses[] ternclauses>;

        $r12 = r0.<org.sat4j.minisat.constraints.cnf.Lits23: org.sat4j.minisat.constraints.cnf.TernaryClauses[] ternclauses>;

        $i9 = lengthof $r12;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, 0, r11, 0, $i9);

        r0.<org.sat4j.minisat.constraints.cnf.Lits23: org.sat4j.minisat.constraints.cnf.TernaryClauses[] ternclauses> = r11;

     label5:
        $r18 = r0.<org.sat4j.minisat.constraints.cnf.Lits23: org.sat4j.minisat.constraints.cnf.TernaryClauses[] ternclauses>;

        $r19 = $r18[i0];

        if $r19 != null goto label6;

        $r6 = r0.<org.sat4j.minisat.constraints.cnf.Lits23: org.sat4j.minisat.constraints.cnf.TernaryClauses[] ternclauses>;

        $r5 = new org.sat4j.minisat.constraints.cnf.TernaryClauses;

        specialinvoke $r5.<org.sat4j.minisat.constraints.cnf.TernaryClauses: void <init>(org.sat4j.minisat.core.ILits,int)>(r0, i0);

        $r6[i0] = $r5;

        $r7 = r0.<org.sat4j.minisat.constraints.cnf.Lits23: org.sat4j.specs.IVec[] watches>;

        $i5 = i0 ^ 1;

        $r10 = $r7[$i5];

        $r8 = r0.<org.sat4j.minisat.constraints.cnf.Lits23: org.sat4j.minisat.constraints.cnf.TernaryClauses[] ternclauses>;

        $r9 = $r8[i0];

        interfaceinvoke $r10.<org.sat4j.specs.IVec: org.sat4j.specs.IVec push(java.lang.Object)>($r9);

     label6:
        $r3 = r0.<org.sat4j.minisat.constraints.cnf.Lits23: org.sat4j.minisat.constraints.cnf.TernaryClauses[] ternclauses>;

        $r4 = $r3[i0];

        virtualinvoke $r4.<org.sat4j.minisat.constraints.cnf.TernaryClauses: void addTernaryClause(int,int)>(i1, i4);

        return;
    }

    public void ternaryClauses(int, int, int)
    {
        org.sat4j.minisat.constraints.cnf.Lits23 r0;
        int i0, i1, i2;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits23;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<org.sat4j.minisat.constraints.cnf.Lits23: void register(int,int,int)>(i0, i1, i2);

        specialinvoke r0.<org.sat4j.minisat.constraints.cnf.Lits23: void register(int,int,int)>(i1, i0, i2);

        specialinvoke r0.<org.sat4j.minisat.constraints.cnf.Lits23: void register(int,int,int)>(i2, i0, i1);

        return;
    }

    public int nTernaryClauses(int)
    {
        org.sat4j.minisat.constraints.cnf.TernaryClauses[] $r1, $r2, $r4;
        org.sat4j.minisat.constraints.cnf.Lits23 r0;
        org.sat4j.minisat.constraints.cnf.TernaryClauses $r3, $r5;
        int i0, $i1;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits23;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.Lits23: org.sat4j.minisat.constraints.cnf.TernaryClauses[] ternclauses>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.sat4j.minisat.constraints.cnf.Lits23: org.sat4j.minisat.constraints.cnf.TernaryClauses[] ternclauses>;

        $r3 = $r2[i0];

        if $r3 != null goto label2;

        return 0;

     label2:
        $r4 = r0.<org.sat4j.minisat.constraints.cnf.Lits23: org.sat4j.minisat.constraints.cnf.TernaryClauses[] ternclauses>;

        $r5 = $r4[i0];

        $i1 = virtualinvoke $r5.<org.sat4j.minisat.constraints.cnf.TernaryClauses: int size()>();

        return $i1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.sat4j.minisat.constraints.cnf.Lits23: long serialVersionUID> = 1L;

        $r0 = class "Lorg/sat4j/minisat/constraints/cnf/Lits23;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.sat4j.minisat.constraints.cnf.Lits23: boolean $assertionsDisabled> = $z1;

        return;
    }
}
