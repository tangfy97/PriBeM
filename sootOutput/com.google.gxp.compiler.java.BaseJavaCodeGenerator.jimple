public abstract class com.google.gxp.compiler.java.BaseJavaCodeGenerator extends com.google.gxp.compiler.codegen.BracesCodeGenerator
{
    protected final java.lang.String runtimeMessageSource;

    protected void <init>(com.google.gxp.compiler.base.Tree, java.lang.String)
    {
        java.lang.String r2;
        com.google.gxp.compiler.java.BaseJavaCodeGenerator r0;
        com.google.gxp.compiler.base.Tree r1;

        r0 := @this: com.google.gxp.compiler.java.BaseJavaCodeGenerator;

        r1 := @parameter0: com.google.gxp.compiler.base.Tree;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.google.gxp.compiler.codegen.BracesCodeGenerator: void <init>(com.google.gxp.compiler.base.Tree)>(r1);

        r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator: java.lang.String runtimeMessageSource> = r2;

        return;
    }

    public void generateCode(java.lang.Appendable, com.google.gxp.compiler.alerts.AlertSink) throws java.io.IOException
    {
        com.google.gxp.compiler.java.BaseJavaCodeGenerator$1 $r4;
        com.google.gxp.compiler.base.Root $r6;
        com.google.gxp.compiler.alerts.AlertSink r0;
        java.lang.Appendable r5;
        com.google.gxp.compiler.base.Tree $r2;
        com.google.gxp.compiler.alerts.AlertSet $r3;
        com.google.gxp.compiler.java.BaseJavaCodeGenerator r1;

        r1 := @this: com.google.gxp.compiler.java.BaseJavaCodeGenerator;

        r5 := @parameter0: java.lang.Appendable;

        r0 := @parameter1: com.google.gxp.compiler.alerts.AlertSink;

        $r2 = r1.<com.google.gxp.compiler.java.BaseJavaCodeGenerator: com.google.gxp.compiler.base.Tree tree>;

        $r3 = virtualinvoke $r2.<com.google.gxp.compiler.base.Tree: com.google.gxp.compiler.alerts.AlertSet getAlerts()>();

        interfaceinvoke r0.<com.google.gxp.compiler.alerts.AlertSink: void addAll(com.google.gxp.compiler.alerts.AlertSet)>($r3);

        $r6 = r1.<com.google.gxp.compiler.java.BaseJavaCodeGenerator: com.google.gxp.compiler.base.Root root>;

        $r4 = new com.google.gxp.compiler.java.BaseJavaCodeGenerator$1;

        specialinvoke $r4.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$1: void <init>(com.google.gxp.compiler.java.BaseJavaCodeGenerator,com.google.gxp.compiler.alerts.AlertSink,java.lang.Appendable)>(r1, r0, r5);

        interfaceinvoke $r6.<com.google.gxp.compiler.base.Root: java.lang.Object acceptVisitor(com.google.gxp.compiler.base.RootVisitor)>($r4);

        return;
    }

    private void validateFormalTypeParameters(com.google.gxp.compiler.alerts.AlertSink, java.util.List)
    {
        java.util.Iterator $r1;
        com.google.gxp.compiler.base.FormalTypeParameter r3;
        java.util.List r0;
        com.google.gxp.compiler.alerts.AlertSink r4;
        com.google.gxp.compiler.base.OutputLanguage $r5;
        java.lang.Object $r2;
        java.lang.String $r6;
        boolean $z0;
        com.google.gxp.compiler.java.BaseJavaCodeGenerator r7;

        r7 := @this: com.google.gxp.compiler.java.BaseJavaCodeGenerator;

        r4 := @parameter0: com.google.gxp.compiler.alerts.AlertSink;

        r0 := @parameter1: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.google.gxp.compiler.base.FormalTypeParameter) $r2;

        $r5 = <com.google.gxp.compiler.base.OutputLanguage: com.google.gxp.compiler.base.OutputLanguage JAVA>;

        $r6 = virtualinvoke r3.<com.google.gxp.compiler.base.FormalTypeParameter: java.lang.String getName()>();

        virtualinvoke $r5.<com.google.gxp.compiler.base.OutputLanguage: java.lang.String validateName(com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.base.Node,java.lang.String)>(r4, r3, $r6);

        goto label1;

     label2:
        return;
    }

    protected abstract com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker createTemplateWorker(java.lang.Appendable, com.google.gxp.compiler.alerts.AlertSink, com.google.gxp.compiler.base.Template, java.lang.String);

    static void access$000(com.google.gxp.compiler.java.BaseJavaCodeGenerator, com.google.gxp.compiler.alerts.AlertSink, java.util.List)
    {
        java.util.List r2;
        com.google.gxp.compiler.alerts.AlertSink r1;
        com.google.gxp.compiler.java.BaseJavaCodeGenerator r0;

        r0 := @parameter0: com.google.gxp.compiler.java.BaseJavaCodeGenerator;

        r1 := @parameter1: com.google.gxp.compiler.alerts.AlertSink;

        r2 := @parameter2: java.util.List;

        specialinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator: void validateFormalTypeParameters(com.google.gxp.compiler.alerts.AlertSink,java.util.List)>(r1, r2);

        return;
    }

    static java.lang.String access$400(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.google.gxp.compiler.java.BaseJavaCodeGenerator: java.lang.String loadFormat(java.lang.String)>(r0);

        return $r1;
    }

    static java.lang.String access$500(com.google.gxp.compiler.base.Parameter)
    {
        java.lang.String $r1;
        com.google.gxp.compiler.base.Parameter r0;

        r0 := @parameter0: com.google.gxp.compiler.base.Parameter;

        $r1 = staticinvoke <com.google.gxp.compiler.java.BaseJavaCodeGenerator: java.lang.String getDefaultMethodName(com.google.gxp.compiler.base.Parameter)>(r0);

        return $r1;
    }

    static java.lang.String access$600(com.google.gxp.compiler.base.Parameter)
    {
        java.lang.String $r1;
        com.google.gxp.compiler.base.Parameter r0;

        r0 := @parameter0: com.google.gxp.compiler.base.Parameter;

        $r1 = staticinvoke <com.google.gxp.compiler.java.BaseJavaCodeGenerator: java.lang.String getConstructorMethodName(com.google.gxp.compiler.base.Parameter)>(r0);

        return $r1;
    }

    static java.lang.String access$900(com.google.gxp.compiler.base.Parameter)
    {
        java.lang.String $r1;
        com.google.gxp.compiler.base.Parameter r0;

        r0 := @parameter0: com.google.gxp.compiler.base.Parameter;

        $r1 = staticinvoke <com.google.gxp.compiler.java.BaseJavaCodeGenerator: java.lang.String getDefaultMethodName(com.google.gxp.compiler.base.Parameter)>(r0);

        return $r1;
    }

    static java.lang.String access$1000(com.google.gxp.compiler.base.Parameter)
    {
        java.lang.String $r1;
        com.google.gxp.compiler.base.Parameter r0;

        r0 := @parameter0: com.google.gxp.compiler.base.Parameter;

        $r1 = staticinvoke <com.google.gxp.compiler.java.BaseJavaCodeGenerator: java.lang.String getConstructorMethodName(com.google.gxp.compiler.base.Parameter)>(r0);

        return $r1;
    }

    static java.lang.String access$1100(com.google.gxp.compiler.base.Parameter)
    {
        java.lang.String $r1;
        com.google.gxp.compiler.base.Parameter r0;

        r0 := @parameter0: com.google.gxp.compiler.base.Parameter;

        $r1 = staticinvoke <com.google.gxp.compiler.java.BaseJavaCodeGenerator: java.lang.String getDefaultMethodName(com.google.gxp.compiler.base.Parameter)>(r0);

        return $r1;
    }

    static java.lang.String access$1200(com.google.gxp.compiler.base.Parameter)
    {
        java.lang.String $r1;
        com.google.gxp.compiler.base.Parameter r0;

        r0 := @parameter0: com.google.gxp.compiler.base.Parameter;

        $r1 = staticinvoke <com.google.gxp.compiler.java.BaseJavaCodeGenerator: java.lang.String getDefaultMethodName(com.google.gxp.compiler.base.Parameter)>(r0);

        return $r1;
    }

    static java.lang.String access$1300(com.google.gxp.compiler.base.Parameter)
    {
        java.lang.String $r1;
        com.google.gxp.compiler.base.Parameter r0;

        r0 := @parameter0: com.google.gxp.compiler.base.Parameter;

        $r1 = staticinvoke <com.google.gxp.compiler.java.BaseJavaCodeGenerator: java.lang.String getConstructorMethodName(com.google.gxp.compiler.base.Parameter)>(r0);

        return $r1;
    }

    static java.lang.String access$1400(com.google.gxp.compiler.base.Parameter)
    {
        java.lang.String $r1;
        com.google.gxp.compiler.base.Parameter r0;

        r0 := @parameter0: com.google.gxp.compiler.base.Parameter;

        $r1 = staticinvoke <com.google.gxp.compiler.java.BaseJavaCodeGenerator: java.lang.String getConstructorMethodName(com.google.gxp.compiler.base.Parameter)>(r0);

        return $r1;
    }
}
