public class org.springframework.util.LinkedCaseInsensitiveMap extends java.util.LinkedHashMap
{
    private final java.util.Map caseInsensitiveKeys;
    private final java.util.Locale locale;

    public void <init>()
    {
        org.springframework.util.LinkedCaseInsensitiveMap r0;

        r0 := @this: org.springframework.util.LinkedCaseInsensitiveMap;

        specialinvoke r0.<org.springframework.util.LinkedCaseInsensitiveMap: void <init>(java.util.Locale)>(null);

        return;
    }

    public void <init>(java.util.Locale)
    {
        java.util.Locale r2, $r3;
        org.springframework.util.LinkedCaseInsensitiveMap r0;
        java.util.HashMap $r1;

        r0 := @this: org.springframework.util.LinkedCaseInsensitiveMap;

        r2 := @parameter0: java.util.Locale;

        specialinvoke r0.<java.util.LinkedHashMap: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.springframework.util.LinkedCaseInsensitiveMap: java.util.Map caseInsensitiveKeys> = $r1;

        if r2 == null goto label1;

        $r3 = r2;

        goto label2;

     label1:
        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label2:
        r0.<org.springframework.util.LinkedCaseInsensitiveMap: java.util.Locale locale> = $r3;

        return;
    }

    public void <init>(int)
    {
        int i0;
        org.springframework.util.LinkedCaseInsensitiveMap r0;

        r0 := @this: org.springframework.util.LinkedCaseInsensitiveMap;

        i0 := @parameter0: int;

        specialinvoke r0.<org.springframework.util.LinkedCaseInsensitiveMap: void <init>(int,java.util.Locale)>(i0, null);

        return;
    }

    public void <init>(int, java.util.Locale)
    {
        java.util.Locale r2, $r3;
        org.springframework.util.LinkedCaseInsensitiveMap r0;
        int i0;
        java.util.HashMap $r1;

        r0 := @this: org.springframework.util.LinkedCaseInsensitiveMap;

        i0 := @parameter0: int;

        r2 := @parameter1: java.util.Locale;

        specialinvoke r0.<java.util.LinkedHashMap: void <init>(int)>(i0);

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>(i0);

        r0.<org.springframework.util.LinkedCaseInsensitiveMap: java.util.Map caseInsensitiveKeys> = $r1;

        if r2 == null goto label1;

        $r3 = r2;

        goto label2;

     label1:
        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label2:
        r0.<org.springframework.util.LinkedCaseInsensitiveMap: java.util.Locale locale> = $r3;

        return;
    }

    public java.lang.Object put(java.lang.String, java.lang.Object)
    {
        org.springframework.util.LinkedCaseInsensitiveMap r0;
        java.util.Map $r2;
        java.lang.Object r4, $r5;
        java.lang.String r1, $r3;

        r0 := @this: org.springframework.util.LinkedCaseInsensitiveMap;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Object;

        $r2 = r0.<org.springframework.util.LinkedCaseInsensitiveMap: java.util.Map caseInsensitiveKeys>;

        $r3 = virtualinvoke r0.<org.springframework.util.LinkedCaseInsensitiveMap: java.lang.String convertKey(java.lang.String)>(r1);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);

        $r5 = specialinvoke r0.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

        return $r5;
    }

    public boolean containsKey(java.lang.Object)
    {
        org.springframework.util.LinkedCaseInsensitiveMap r1;
        java.util.Map $r3;
        java.lang.Object r0;
        java.lang.String $r2, $r4;
        boolean $z0, $z1;

        r1 := @this: org.springframework.util.LinkedCaseInsensitiveMap;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r3 = r1.<org.springframework.util.LinkedCaseInsensitiveMap: java.util.Map caseInsensitiveKeys>;

        $r2 = (java.lang.String) r0;

        $r4 = virtualinvoke r1.<org.springframework.util.LinkedCaseInsensitiveMap: java.lang.String convertKey(java.lang.String)>($r2);

        $z1 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.springframework.util.LinkedCaseInsensitiveMap r1;
        java.util.Map $r3;
        java.lang.Object r0, $r5, $r6;
        java.lang.String $r2, $r4;
        boolean $z0;

        r1 := @this: org.springframework.util.LinkedCaseInsensitiveMap;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r3 = r1.<org.springframework.util.LinkedCaseInsensitiveMap: java.util.Map caseInsensitiveKeys>;

        $r2 = (java.lang.String) r0;

        $r4 = virtualinvoke r1.<org.springframework.util.LinkedCaseInsensitiveMap: java.lang.String convertKey(java.lang.String)>($r2);

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = specialinvoke r1.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r5);

        return $r6;

     label1:
        return null;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        org.springframework.util.LinkedCaseInsensitiveMap r1;
        java.util.Map $r3;
        java.lang.Object r0, $r5, $r6;
        java.lang.String $r2, $r4;
        boolean $z0;

        r1 := @this: org.springframework.util.LinkedCaseInsensitiveMap;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r3 = r1.<org.springframework.util.LinkedCaseInsensitiveMap: java.util.Map caseInsensitiveKeys>;

        $r2 = (java.lang.String) r0;

        $r4 = virtualinvoke r1.<org.springframework.util.LinkedCaseInsensitiveMap: java.lang.String convertKey(java.lang.String)>($r2);

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r4);

        $r6 = specialinvoke r1.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r5);

        return $r6;

     label1:
        return null;
    }

    public void clear()
    {
        org.springframework.util.LinkedCaseInsensitiveMap r0;
        java.util.Map $r1;

        r0 := @this: org.springframework.util.LinkedCaseInsensitiveMap;

        $r1 = r0.<org.springframework.util.LinkedCaseInsensitiveMap: java.util.Map caseInsensitiveKeys>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        specialinvoke r0.<java.util.LinkedHashMap: void clear()>();

        return;
    }

    protected java.lang.String convertKey(java.lang.String)
    {
        java.util.Locale $r2;
        org.springframework.util.LinkedCaseInsensitiveMap r1;
        java.lang.String r0, $r3;

        r1 := @this: org.springframework.util.LinkedCaseInsensitiveMap;

        r0 := @parameter0: java.lang.String;

        $r2 = r1.<org.springframework.util.LinkedCaseInsensitiveMap: java.util.Locale locale>;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        return $r3;
    }

    public volatile java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        org.springframework.util.LinkedCaseInsensitiveMap r0;
        java.lang.Object r1, r2, $r3, $r5;
        java.lang.String $r4;

        r0 := @this: org.springframework.util.LinkedCaseInsensitiveMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.String) r1;

        $r3 = (java.lang.Object) r2;

        $r5 = virtualinvoke r0.<org.springframework.util.LinkedCaseInsensitiveMap: java.lang.Object put(java.lang.String,java.lang.Object)>($r4, $r3);

        return $r5;
    }
}
