public class com.jidesoft.swing.CheckBoxListSelectionModel extends javax.swing.DefaultListSelectionModel implements javax.swing.event.ListDataListener
{
    private static final long serialVersionUID;
    private javax.swing.ListModel _model;
    private boolean _allEntryConsidered;
    private int _allEntryIndex;
    private boolean _allEntryIndexSet;

    public void <init>()
    {
        int $i1;
        com.jidesoft.swing.CheckBoxListSelectionModel r0;

        r0 := @this: com.jidesoft.swing.CheckBoxListSelectionModel;

        specialinvoke r0.<javax.swing.DefaultListSelectionModel: void <init>()>();

        r0.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean _allEntryConsidered> = 1;

        $i1 = (int) -1;

        r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int _allEntryIndex> = $i1;

        r0.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean _allEntryIndexSet> = 0;

        virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: void setSelectionMode(int)>(2);

        return;
    }

    public void <init>(javax.swing.ListModel)
    {
        int $i0, $i2;
        com.jidesoft.swing.CheckBoxListSelectionModel r0;
        javax.swing.ListModel r1, $r2;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.CheckBoxListSelectionModel;

        r1 := @parameter0: javax.swing.ListModel;

        specialinvoke r0.<javax.swing.DefaultListSelectionModel: void <init>()>();

        r0.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean _allEntryConsidered> = 1;

        $i2 = (int) -1;

        r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int _allEntryIndex> = $i2;

        r0.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean _allEntryIndexSet> = 0;

        r0.<com.jidesoft.swing.CheckBoxListSelectionModel: javax.swing.ListModel _model> = r1;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean isAllEntryConsidered()>();

        if $z0 == 0 goto label1;

        $i0 = specialinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int findAllEntryIndex()>();

        r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int _allEntryIndex> = $i0;

        $r2 = r0.<com.jidesoft.swing.CheckBoxListSelectionModel: javax.swing.ListModel _model>;

        interfaceinvoke $r2.<javax.swing.ListModel: void addListDataListener(javax.swing.event.ListDataListener)>(r0);

     label1:
        virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: void setSelectionMode(int)>(2);

        return;
    }

    public int getAllEntryIndex()
    {
        int $i0;
        com.jidesoft.swing.CheckBoxListSelectionModel r0;

        r0 := @this: com.jidesoft.swing.CheckBoxListSelectionModel;

        $i0 = r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int _allEntryIndex>;

        return $i0;
    }

    public void setAllEntryIndex(int)
    {
        int i0, $i1, $i3;
        com.jidesoft.swing.CheckBoxListSelectionModel r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.CheckBoxListSelectionModel;

        i0 := @parameter0: int;

        r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int _allEntryIndex> = i0;

        $i1 = r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int _allEntryIndex>;

        $i3 = (int) -1;

        if $i1 == $i3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean _allEntryIndexSet> = $z0;

        return;
    }

    private int findAllEntryIndex()
    {
        com.jidesoft.swing.CheckBoxListSelectionModel r0;
        int $i0, i1, $i3, $i5;
        java.lang.Object $r4, $r5;
        javax.swing.ListModel $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.CheckBoxListSelectionModel;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: javax.swing.ListModel getModel()>();

        if $r1 != null goto label1;

        $i3 = (int) -1;

        return $i3;

     label1:
        $r2 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: javax.swing.ListModel getModel()>();

        $i0 = interfaceinvoke $r2.<javax.swing.ListModel: int getSize()>();

        i1 = 0;

     label2:
        if i1 >= $i0 goto label4;

        $r3 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: javax.swing.ListModel getModel()>();

        $r4 = interfaceinvoke $r3.<javax.swing.ListModel: java.lang.Object getElementAt(int)>(i1);

        $r5 = <com.jidesoft.swing.CheckBoxList: java.lang.Object ALL_ENTRY>;

        $z0 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $z0 == 0 goto label3;

        return i1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $i5 = (int) -1;

        return $i5;
    }

    public javax.swing.ListModel getModel()
    {
        com.jidesoft.swing.CheckBoxListSelectionModel r0;
        javax.swing.ListModel $r1;

        r0 := @this: com.jidesoft.swing.CheckBoxListSelectionModel;

        $r1 = r0.<com.jidesoft.swing.CheckBoxListSelectionModel: javax.swing.ListModel _model>;

        return $r1;
    }

    public void setModel(javax.swing.ListModel)
    {
        com.jidesoft.swing.CheckBoxListSelectionModel r0;
        int $i0, i1, i2, $i4;
        javax.swing.ListModel $r1, r2, $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0, $z1;

        r0 := @this: com.jidesoft.swing.CheckBoxListSelectionModel;

        r2 := @parameter0: javax.swing.ListModel;

        i1 = 0;

        i2 = 0;

        $r1 = r0.<com.jidesoft.swing.CheckBoxListSelectionModel: javax.swing.ListModel _model>;

        if $r1 == null goto label1;

        $r7 = r0.<com.jidesoft.swing.CheckBoxListSelectionModel: javax.swing.ListModel _model>;

        i1 = interfaceinvoke $r7.<javax.swing.ListModel: int getSize()>();

        $r8 = r0.<com.jidesoft.swing.CheckBoxListSelectionModel: javax.swing.ListModel _model>;

        interfaceinvoke $r8.<javax.swing.ListModel: void removeListDataListener(javax.swing.event.ListDataListener)>(r0);

     label1:
        r0.<com.jidesoft.swing.CheckBoxListSelectionModel: javax.swing.ListModel _model> = r2;

        $r3 = r0.<com.jidesoft.swing.CheckBoxListSelectionModel: javax.swing.ListModel _model>;

        if $r3 == null goto label3;

        $r4 = r0.<com.jidesoft.swing.CheckBoxListSelectionModel: javax.swing.ListModel _model>;

        i2 = interfaceinvoke $r4.<javax.swing.ListModel: int getSize()>();

        $r5 = r0.<com.jidesoft.swing.CheckBoxListSelectionModel: javax.swing.ListModel _model>;

        interfaceinvoke $r5.<javax.swing.ListModel: void removeListDataListener(javax.swing.event.ListDataListener)>(r0);

        $z0 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean isAllEntryConsidered()>();

        if $z0 == 0 goto label2;

        $r6 = r0.<com.jidesoft.swing.CheckBoxListSelectionModel: javax.swing.ListModel _model>;

        interfaceinvoke $r6.<javax.swing.ListModel: void addListDataListener(javax.swing.event.ListDataListener)>(r0);

        $i0 = specialinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int findAllEntryIndex()>();

        r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int _allEntryIndex> = $i0;

        goto label3;

     label2:
        $z1 = r0.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean _allEntryIndexSet>;

        if $z1 != 0 goto label3;

        $i4 = (int) -1;

        r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int _allEntryIndex> = $i4;

     label3:
        if i1 <= i2 goto label4;

        virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: void removeIndexInterval(int,int)>(i2, i1);

     label4:
        return;
    }

    public void intervalAdded(javax.swing.event.ListDataEvent)
    {
        int $i0;
        javax.swing.event.ListDataEvent r1;
        com.jidesoft.swing.CheckBoxListSelectionModel r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.CheckBoxListSelectionModel;

        r1 := @parameter0: javax.swing.event.ListDataEvent;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean isAllEntryConsidered()>();

        if $z0 == 0 goto label1;

        $i0 = specialinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int findAllEntryIndex()>();

        r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int _allEntryIndex> = $i0;

     label1:
        return;
    }

    public void intervalRemoved(javax.swing.event.ListDataEvent)
    {
        int $i0;
        javax.swing.event.ListDataEvent r1;
        com.jidesoft.swing.CheckBoxListSelectionModel r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.CheckBoxListSelectionModel;

        r1 := @parameter0: javax.swing.event.ListDataEvent;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean isAllEntryConsidered()>();

        if $z0 == 0 goto label1;

        $i0 = specialinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int findAllEntryIndex()>();

        r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int _allEntryIndex> = $i0;

     label1:
        return;
    }

    public void contentsChanged(javax.swing.event.ListDataEvent)
    {
        int $i0;
        javax.swing.event.ListDataEvent r1;
        com.jidesoft.swing.CheckBoxListSelectionModel r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.CheckBoxListSelectionModel;

        r1 := @parameter0: javax.swing.event.ListDataEvent;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean isAllEntryConsidered()>();

        if $z0 == 0 goto label1;

        $i0 = specialinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int findAllEntryIndex()>();

        r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int _allEntryIndex> = $i0;

     label1:
        return;
    }

    public void insertIndexInterval(int, int, boolean)
    {
        java.lang.Throwable $r1;
        com.jidesoft.swing.CheckBoxListSelectionModel r0;
        int i0, i1, $i2, $i3;
        boolean z0, $z1, $z2;

        r0 := @this: com.jidesoft.swing.CheckBoxListSelectionModel;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        if i0 >= 0 goto label1;

        return;

     label1:
        if z0 == 0 goto label8;

        $z1 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean isSelectedIndex(int)>(i0);

        $z2 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean getValueIsAdjusting()>();

        specialinvoke r0.<javax.swing.DefaultListSelectionModel: void setValueIsAdjusting(boolean)>(1);

     label2:
        if $z1 == 0 goto label3;

        virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: void removeSelectionInterval(int,int)>(i0, i0);

     label3:
        specialinvoke r0.<javax.swing.DefaultListSelectionModel: void insertIndexInterval(int,int,boolean)>(i0, i1, z0);

        if $z1 == 0 goto label4;

        $i3 = i0 + i1;

        $i2 = i0 + i1;

        virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: void addSelectionInterval(int,int)>($i3, $i2);

     label4:
        specialinvoke r0.<javax.swing.DefaultListSelectionModel: void setValueIsAdjusting(boolean)>($z2);

        goto label7;

     label5:
        $r1 := @caughtexception;

     label6:
        specialinvoke r0.<javax.swing.DefaultListSelectionModel: void setValueIsAdjusting(boolean)>($z2);

        throw $r1;

     label7:
        goto label9;

     label8:
        specialinvoke r0.<javax.swing.DefaultListSelectionModel: void insertIndexInterval(int,int,boolean)>(i0, i1, z0);

     label9:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isAllEntryConsidered()
    {
        com.jidesoft.swing.CheckBoxListSelectionModel r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.CheckBoxListSelectionModel;

        $z0 = r0.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean _allEntryConsidered>;

        return $z0;
    }

    public void setAllEntryConsidered(boolean)
    {
        com.jidesoft.swing.CheckBoxListSelectionModel r0;
        int $i0, $i2;
        boolean z0, $z1;
        javax.swing.ListModel $r1, $r2, $r3, $r4;

        r0 := @this: com.jidesoft.swing.CheckBoxListSelectionModel;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean _allEntryConsidered> = z0;

        $r1 = r0.<com.jidesoft.swing.CheckBoxListSelectionModel: javax.swing.ListModel _model>;

        if $r1 == null goto label1;

        $r4 = r0.<com.jidesoft.swing.CheckBoxListSelectionModel: javax.swing.ListModel _model>;

        interfaceinvoke $r4.<javax.swing.ListModel: void removeListDataListener(javax.swing.event.ListDataListener)>(r0);

     label1:
        $z1 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean isAllEntryConsidered()>();

        if $z1 == 0 goto label2;

        $i0 = specialinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int findAllEntryIndex()>();

        r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int _allEntryIndex> = $i0;

        $r2 = r0.<com.jidesoft.swing.CheckBoxListSelectionModel: javax.swing.ListModel _model>;

        if $r2 == null goto label3;

        $r3 = r0.<com.jidesoft.swing.CheckBoxListSelectionModel: javax.swing.ListModel _model>;

        interfaceinvoke $r3.<javax.swing.ListModel: void addListDataListener(javax.swing.event.ListDataListener)>(r0);

        goto label3;

     label2:
        $i2 = (int) -1;

        r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int _allEntryIndex> = $i2;

     label3:
        return;
    }

    public boolean isSelectedIndex(int)
    {
        int i0, $i1, $i2;
        com.jidesoft.swing.CheckBoxListSelectionModel r0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.jidesoft.swing.CheckBoxListSelectionModel;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<javax.swing.DefaultListSelectionModel: boolean isSelectedIndex(int)>(i0);

        if $z0 != 0 goto label1;

        $i1 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int getAllEntryIndex()>();

        if $i1 < 0 goto label2;

        $i2 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int getAllEntryIndex()>();

        $z1 = specialinvoke r0.<javax.swing.DefaultListSelectionModel: boolean isSelectedIndex(int)>($i2);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private boolean selectAll(int, int)
    {
        com.jidesoft.swing.CheckBoxListSelectionModel r0;
        int $i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        javax.swing.ListModel $r1, $r2, $r3;

        r0 := @this: com.jidesoft.swing.CheckBoxListSelectionModel;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int getAllEntryIndex()>();

        if $i0 >= 0 goto label1;

        return 0;

     label1:
        if i1 != 0 goto label2;

        $r3 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: javax.swing.ListModel getModel()>();

        $i11 = interfaceinvoke $r3.<javax.swing.ListModel: int getSize()>();

        $i12 = $i11 - 1;

        if i2 == $i12 goto label3;

     label2:
        if i2 != 0 goto label4;

        $r2 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: javax.swing.ListModel getModel()>();

        $i9 = interfaceinvoke $r2.<javax.swing.ListModel: int getSize()>();

        $i10 = $i9 - 1;

        if i1 != $i10 goto label4;

     label3:
        return 0;

     label4:
        $i3 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int getAllEntryIndex()>();

        if i1 < $i3 goto label5;

        $i8 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int getAllEntryIndex()>();

        if i2 <= $i8 goto label6;

     label5:
        $i4 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int getAllEntryIndex()>();

        if i2 < $i4 goto label7;

        $i5 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int getAllEntryIndex()>();

        if i1 > $i5 goto label7;

     label6:
        $r1 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: javax.swing.ListModel getModel()>();

        $i6 = interfaceinvoke $r1.<javax.swing.ListModel: int getSize()>();

        $i7 = $i6 - 1;

        virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: void setSelectionInterval(int,int)>(0, $i7);

        return 1;

     label7:
        return 0;
    }

    private boolean unselectAll(int, int)
    {
        int $i0, i1, $i2, i3, $i4;
        com.jidesoft.swing.CheckBoxListSelectionModel r0;

        r0 := @this: com.jidesoft.swing.CheckBoxListSelectionModel;

        i1 := @parameter0: int;

        i3 := @parameter1: int;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int getAllEntryIndex()>();

        if $i0 >= 0 goto label1;

        return 0;

     label1:
        $i2 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int getAllEntryIndex()>();

        if i1 == $i2 goto label2;

        $i4 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int getAllEntryIndex()>();

        if i3 != $i4 goto label3;

     label2:
        virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: void clearSelection()>();

        return 1;

     label3:
        return 0;
    }

    private void selectAllIf()
    {
        com.jidesoft.swing.CheckBoxListSelectionModel r0;
        int $i0, $i1, $i2, $i3, $i4, i5, $i7;
        javax.swing.ListModel $r1;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.CheckBoxListSelectionModel;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int getAllEntryIndex()>();

        if $i0 >= 0 goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: javax.swing.ListModel getModel()>();

        $i1 = interfaceinvoke $r1.<javax.swing.ListModel: int getSize()>();

        i5 = $i1 - 1;

     label2:
        if i5 < 0 goto label4;

        $i4 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int getAllEntryIndex()>();

        if i5 == $i4 goto label3;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean isSelectedIndex(int)>(i5);

        if $z0 != 0 goto label3;

        return;

     label3:
        $i7 = (int) -1;

        i5 = i5 + $i7;

        goto label2;

     label4:
        $i2 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int getAllEntryIndex()>();

        $i3 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int getAllEntryIndex()>();

        specialinvoke r0.<javax.swing.DefaultListSelectionModel: void addSelectionInterval(int,int)>($i2, $i3);

        return;
    }

    public void setSelectionInterval(int, int)
    {
        java.lang.Throwable $r1;
        int i0, i1;
        com.jidesoft.swing.CheckBoxListSelectionModel r0;
        boolean $z0, $z1;

        r0 := @this: com.jidesoft.swing.CheckBoxListSelectionModel;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean getValueIsAdjusting()>();

        virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: void setValueIsAdjusting(boolean)>(1);

     label1:
        $z1 = specialinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean selectAll(int,int)>(i0, i1);

        if $z1 != 0 goto label2;

        specialinvoke r0.<javax.swing.DefaultListSelectionModel: void setSelectionInterval(int,int)>(i0, i1);

        specialinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: void selectAllIf()>();

     label2:
        virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: void setValueIsAdjusting(boolean)>($z0);

        goto label5;

     label3:
        $r1 := @caughtexception;

     label4:
        virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: void setValueIsAdjusting(boolean)>($z0);

        throw $r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getMinSelectionIndex()
    {
        int $i0, $i1, $i2, $i3;
        com.jidesoft.swing.CheckBoxListSelectionModel r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.CheckBoxListSelectionModel;

        $i0 = specialinvoke r0.<javax.swing.DefaultListSelectionModel: int getMinSelectionIndex()>();

        $i1 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int getAllEntryIndex()>();

        if $i1 >= 0 goto label1;

        return $i0;

     label1:
        $i2 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int getAllEntryIndex()>();

        $z0 = specialinvoke r0.<javax.swing.DefaultListSelectionModel: boolean isSelectedIndex(int)>($i2);

        if $z0 == 0 goto label2;

        $i3 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int getAllEntryIndex()>();

        if $i3 != 0 goto label2;

        return 1;

     label2:
        return $i0;
    }

    public void addSelectionInterval(int, int)
    {
        java.lang.Throwable $r1;
        int i0, i1;
        com.jidesoft.swing.CheckBoxListSelectionModel r0;
        boolean $z0, $z1;

        r0 := @this: com.jidesoft.swing.CheckBoxListSelectionModel;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean getValueIsAdjusting()>();

        virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: void setValueIsAdjusting(boolean)>(1);

     label1:
        $z1 = specialinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean selectAll(int,int)>(i0, i1);

        if $z1 != 0 goto label2;

        specialinvoke r0.<javax.swing.DefaultListSelectionModel: void addSelectionInterval(int,int)>(i0, i1);

        specialinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: void selectAllIf()>();

     label2:
        virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: void setValueIsAdjusting(boolean)>($z0);

        goto label5;

     label3:
        $r1 := @caughtexception;

     label4:
        virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: void setValueIsAdjusting(boolean)>($z0);

        throw $r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeSelectionInterval(int, int)
    {
        java.lang.Throwable $r1;
        com.jidesoft.swing.CheckBoxListSelectionModel r0;
        int i0, i1, $i2, $i3, $i4;
        boolean $z0, $z1;

        r0 := @this: com.jidesoft.swing.CheckBoxListSelectionModel;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean getValueIsAdjusting()>();

        virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: void setValueIsAdjusting(boolean)>(1);

     label1:
        $z1 = specialinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: boolean unselectAll(int,int)>(i0, i1);

        if $z1 != 0 goto label3;

        $i2 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int getAllEntryIndex()>();

        if $i2 < 0 goto label2;

        $i3 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int getAllEntryIndex()>();

        $i4 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: int getAllEntryIndex()>();

        specialinvoke r0.<javax.swing.DefaultListSelectionModel: void removeSelectionInterval(int,int)>($i3, $i4);

     label2:
        specialinvoke r0.<javax.swing.DefaultListSelectionModel: void removeSelectionInterval(int,int)>(i0, i1);

     label3:
        virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: void setValueIsAdjusting(boolean)>($z0);

        goto label6;

     label4:
        $r1 := @caughtexception;

     label5:
        virtualinvoke r0.<com.jidesoft.swing.CheckBoxListSelectionModel: void setValueIsAdjusting(boolean)>($z0);

        throw $r1;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static void <clinit>()
    {
        <com.jidesoft.swing.CheckBoxListSelectionModel: long serialVersionUID> = -4133723317923726786L;

        return;
    }
}
