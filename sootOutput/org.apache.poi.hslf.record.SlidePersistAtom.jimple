public final class org.apache.poi.hslf.record.SlidePersistAtom extends org.apache.poi.hslf.record.RecordAtom
{
    private byte[] _header;
    private static long _type;
    private int refID;
    private boolean hasShapesOtherThanPlaceholders;
    private int numPlaceholderTexts;
    private int slideIdentifier;
    private byte[] reservedFields;

    public int getRefID()
    {
        org.apache.poi.hslf.record.SlidePersistAtom r0;
        int $i0;

        r0 := @this: org.apache.poi.hslf.record.SlidePersistAtom;

        $i0 = r0.<org.apache.poi.hslf.record.SlidePersistAtom: int refID>;

        return $i0;
    }

    public int getSlideIdentifier()
    {
        org.apache.poi.hslf.record.SlidePersistAtom r0;
        int $i0;

        r0 := @this: org.apache.poi.hslf.record.SlidePersistAtom;

        $i0 = r0.<org.apache.poi.hslf.record.SlidePersistAtom: int slideIdentifier>;

        return $i0;
    }

    public int getNumPlaceholderTexts()
    {
        org.apache.poi.hslf.record.SlidePersistAtom r0;
        int $i0;

        r0 := @this: org.apache.poi.hslf.record.SlidePersistAtom;

        $i0 = r0.<org.apache.poi.hslf.record.SlidePersistAtom: int numPlaceholderTexts>;

        return $i0;
    }

    public boolean getHasShapesOtherThanPlaceholders()
    {
        org.apache.poi.hslf.record.SlidePersistAtom r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.record.SlidePersistAtom;

        $z0 = r0.<org.apache.poi.hslf.record.SlidePersistAtom: boolean hasShapesOtherThanPlaceholders>;

        return $z0;
    }

    public void setRefID(int)
    {
        org.apache.poi.hslf.record.SlidePersistAtom r0;
        int i0;

        r0 := @this: org.apache.poi.hslf.record.SlidePersistAtom;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hslf.record.SlidePersistAtom: int refID> = i0;

        return;
    }

    public void setSlideIdentifier(int)
    {
        org.apache.poi.hslf.record.SlidePersistAtom r0;
        int i0;

        r0 := @this: org.apache.poi.hslf.record.SlidePersistAtom;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hslf.record.SlidePersistAtom: int slideIdentifier> = i0;

        return;
    }

    protected void <init>(byte[], int, int)
    {
        byte[] $r1, r2, $r3, $r4, $r5, $r6;
        org.apache.poi.hslf.record.SlidePersistAtom r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;

        r0 := @this: org.apache.poi.hslf.record.SlidePersistAtom;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i12 := @parameter2: int;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordAtom: void <init>()>();

        if i12 >= 8 goto label1;

        i12 = 8;

     label1:
        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.SlidePersistAtom: byte[] _header> = $r1;

        $r3 = r0.<org.apache.poi.hslf.record.SlidePersistAtom: byte[] _header>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i0, $r3, 0, 8);

        $i1 = i0 + 8;

        $i2 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i1);

        r0.<org.apache.poi.hslf.record.SlidePersistAtom: int refID> = $i2;

        $i3 = i0 + 12;

        $i4 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i3);

        if $i4 != 4 goto label2;

        r0.<org.apache.poi.hslf.record.SlidePersistAtom: boolean hasShapesOtherThanPlaceholders> = 1;

        goto label3;

     label2:
        r0.<org.apache.poi.hslf.record.SlidePersistAtom: boolean hasShapesOtherThanPlaceholders> = 0;

     label3:
        $i5 = i0 + 16;

        $i6 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i5);

        r0.<org.apache.poi.hslf.record.SlidePersistAtom: int numPlaceholderTexts> = $i6;

        $i7 = i0 + 20;

        $i8 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i7);

        r0.<org.apache.poi.hslf.record.SlidePersistAtom: int slideIdentifier> = $i8;

        $i9 = i12 - 24;

        $r4 = newarray (byte)[$i9];

        r0.<org.apache.poi.hslf.record.SlidePersistAtom: byte[] reservedFields> = $r4;

        $i11 = i0 + 24;

        $r6 = r0.<org.apache.poi.hslf.record.SlidePersistAtom: byte[] reservedFields>;

        $r5 = r0.<org.apache.poi.hslf.record.SlidePersistAtom: byte[] reservedFields>;

        $i10 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i11, $r6, 0, $i10);

        return;
    }

    public void <init>()
    {
        byte[] $r1, $r2, $r3, $r4, $r5;
        long $l0;
        org.apache.poi.hslf.record.SlidePersistAtom r0;
        int $i1;

        r0 := @this: org.apache.poi.hslf.record.SlidePersistAtom;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordAtom: void <init>()>();

        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.SlidePersistAtom: byte[] _header> = $r1;

        $r2 = r0.<org.apache.poi.hslf.record.SlidePersistAtom: byte[] _header>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putUShort(byte[],int,int)>($r2, 0, 0);

        $r3 = r0.<org.apache.poi.hslf.record.SlidePersistAtom: byte[] _header>;

        $l0 = <org.apache.poi.hslf.record.SlidePersistAtom: long _type>;

        $i1 = (int) $l0;

        staticinvoke <org.apache.poi.util.LittleEndian: void putUShort(byte[],int,int)>($r3, 2, $i1);

        $r4 = r0.<org.apache.poi.hslf.record.SlidePersistAtom: byte[] _header>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r4, 4, 20);

        r0.<org.apache.poi.hslf.record.SlidePersistAtom: boolean hasShapesOtherThanPlaceholders> = 1;

        $r5 = newarray (byte)[4];

        r0.<org.apache.poi.hslf.record.SlidePersistAtom: byte[] reservedFields> = $r5;

        return;
    }

    public long getRecordType()
    {
        org.apache.poi.hslf.record.SlidePersistAtom r0;
        long $l0;

        r0 := @this: org.apache.poi.hslf.record.SlidePersistAtom;

        $l0 = <org.apache.poi.hslf.record.SlidePersistAtom: long _type>;

        return $l0;
    }

    public void writeOut(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r0;
        byte[] $r2, $r3;
        org.apache.poi.hslf.record.SlidePersistAtom r1;
        byte b3;
        int $i0, $i1, $i2;
        boolean $z0;

        r1 := @this: org.apache.poi.hslf.record.SlidePersistAtom;

        r0 := @parameter0: java.io.OutputStream;

        $r2 = r1.<org.apache.poi.hslf.record.SlidePersistAtom: byte[] _header>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r2);

        b3 = 0;

        $z0 = r1.<org.apache.poi.hslf.record.SlidePersistAtom: boolean hasShapesOtherThanPlaceholders>;

        if $z0 == 0 goto label1;

        b3 = 4;

     label1:
        $i0 = r1.<org.apache.poi.hslf.record.SlidePersistAtom: int refID>;

        staticinvoke <org.apache.poi.hslf.record.SlidePersistAtom: void writeLittleEndian(int,java.io.OutputStream)>($i0, r0);

        staticinvoke <org.apache.poi.hslf.record.SlidePersistAtom: void writeLittleEndian(int,java.io.OutputStream)>(b3, r0);

        $i1 = r1.<org.apache.poi.hslf.record.SlidePersistAtom: int numPlaceholderTexts>;

        staticinvoke <org.apache.poi.hslf.record.SlidePersistAtom: void writeLittleEndian(int,java.io.OutputStream)>($i1, r0);

        $i2 = r1.<org.apache.poi.hslf.record.SlidePersistAtom: int slideIdentifier>;

        staticinvoke <org.apache.poi.hslf.record.SlidePersistAtom: void writeLittleEndian(int,java.io.OutputStream)>($i2, r0);

        $r3 = r1.<org.apache.poi.hslf.record.SlidePersistAtom: byte[] reservedFields>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r3);

        return;
    }

    static void <clinit>()
    {
        <org.apache.poi.hslf.record.SlidePersistAtom: long _type> = 1011L;

        return;
    }
}
