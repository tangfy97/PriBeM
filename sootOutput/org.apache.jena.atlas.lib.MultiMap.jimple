public abstract class org.apache.jena.atlas.lib.MultiMap extends java.lang.Object
{
    private java.util.Map map;

    protected abstract java.util.Collection createCollection();

    public static org.apache.jena.atlas.lib.MultiMapToList createMapList()
    {
        org.apache.jena.atlas.lib.MultiMapToList $r0;

        $r0 = new org.apache.jena.atlas.lib.MultiMapToList;

        specialinvoke $r0.<org.apache.jena.atlas.lib.MultiMapToList: void <init>()>();

        return $r0;
    }

    public static org.apache.jena.atlas.lib.MultiMapToSet createMapSet()
    {
        org.apache.jena.atlas.lib.MultiMapToSet $r0;

        $r0 = new org.apache.jena.atlas.lib.MultiMapToSet;

        specialinvoke $r0.<org.apache.jena.atlas.lib.MultiMapToSet: void <init>()>();

        return $r0;
    }

    protected void <init>()
    {
        java.util.HashMap $r1;
        org.apache.jena.atlas.lib.MultiMap r0;

        r0 := @this: org.apache.jena.atlas.lib.MultiMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.jena.atlas.lib.MultiMap: java.util.Map map> = $r1;

        return;
    }

    protected java.util.Collection getByKey(java.lang.Object)
    {
        org.apache.jena.atlas.lib.MultiMap r0;
        java.util.Map $r2;
        java.util.Collection $r4;
        java.lang.Object r1, $r3;

        r0 := @this: org.apache.jena.atlas.lib.MultiMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.jena.atlas.lib.MultiMap: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.Collection) $r3;

        return $r4;
    }

    public abstract java.util.Collection get(java.lang.Object);

    public java.lang.Object getOne(java.lang.Object)
    {
        java.util.Iterator $r5;
        java.util.Collection r4;
        org.apache.jena.atlas.lib.MultiMap r0;
        java.util.Map $r2;
        int $i0;
        java.lang.Object r1, $r3, $r6;

        r0 := @this: org.apache.jena.atlas.lib.MultiMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.jena.atlas.lib.MultiMap: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.Collection) $r3;

        if r4 == null goto label1;

        $i0 = interfaceinvoke r4.<java.util.Collection: int size()>();

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r5 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>();

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        return $r6;
    }

    public transient void putAll(java.lang.Object, java.lang.Object[])
    {
        java.lang.Object[] r0;
        org.apache.jena.atlas.lib.MultiMap r2;
        int i0, i1;
        java.lang.Object r1, r3;

        r2 := @this: org.apache.jena.atlas.lib.MultiMap;

        r3 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Object[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r1 = r0[i1];

        virtualinvoke r2.<org.apache.jena.atlas.lib.MultiMap: void put(java.lang.Object,java.lang.Object)>(r3, r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void put(java.lang.Object, java.lang.Object)
    {
        java.util.Collection $r5, r7;
        org.apache.jena.atlas.lib.MultiMap r0;
        java.util.Map $r2, $r6;
        java.lang.Object r1, $r3, r4;

        r0 := @this: org.apache.jena.atlas.lib.MultiMap;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r2 = r0.<org.apache.jena.atlas.lib.MultiMap: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (java.util.Collection) $r3;

        if r7 != null goto label1;

        $r5 = virtualinvoke r0.<org.apache.jena.atlas.lib.MultiMap: java.util.Collection createCollection()>();

        r7 = $r5;

        $r6 = r0.<org.apache.jena.atlas.lib.MultiMap: java.util.Map map>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

     label1:
        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>(r4);

        return;
    }

    public void remove(java.lang.Object, java.lang.Object)
    {
        org.apache.jena.atlas.lib.MultiMap r0;
        java.util.Map $r2;
        java.util.Collection $r5;
        java.lang.Object r1, $r3, r4;

        r0 := @this: org.apache.jena.atlas.lib.MultiMap;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r2 = r0.<org.apache.jena.atlas.lib.MultiMap: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (java.util.Collection) $r3;

        interfaceinvoke $r5.<java.util.Collection: boolean remove(java.lang.Object)>(r4);

        return;
    }

    public void removeKey(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.jena.atlas.lib.MultiMap r0;
        java.util.Map $r2;

        r0 := @this: org.apache.jena.atlas.lib.MultiMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.jena.atlas.lib.MultiMap: java.util.Map map>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    protected java.util.Collection valuesForKey(java.lang.Object)
    {
        org.apache.jena.atlas.lib.MultiMap r0;
        java.util.Map $r2;
        java.util.Collection $r4;
        java.lang.Object r1, $r3;

        r0 := @this: org.apache.jena.atlas.lib.MultiMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.jena.atlas.lib.MultiMap: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.Collection) $r3;

        return $r4;
    }

    public abstract java.util.Collection values(java.lang.Object);

    public abstract java.util.Collection values();

    public boolean containsKey(java.lang.Object)
    {
        org.apache.jena.atlas.lib.MultiMap r0;
        java.util.Map $r2;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.jena.atlas.lib.MultiMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.jena.atlas.lib.MultiMap: java.util.Map map>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.Set keys()
    {
        java.util.Set $r2;
        org.apache.jena.atlas.lib.MultiMap r0;
        java.util.Map $r1;

        r0 := @this: org.apache.jena.atlas.lib.MultiMap;

        $r1 = r0.<org.apache.jena.atlas.lib.MultiMap: java.util.Map map>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public void clear()
    {
        org.apache.jena.atlas.lib.MultiMap r0;
        java.util.Map $r1;

        r0 := @this: org.apache.jena.atlas.lib.MultiMap;

        $r1 = r0.<org.apache.jena.atlas.lib.MultiMap: java.util.Map map>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }

    public boolean isEmpty()
    {
        org.apache.jena.atlas.lib.MultiMap r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: org.apache.jena.atlas.lib.MultiMap;

        $r1 = r0.<org.apache.jena.atlas.lib.MultiMap: java.util.Map map>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Iterator flatten()
    {
        java.util.Iterator $r4, $r9;
        java.util.Collection r8;
        java.util.Set $r3;
        org.apache.jena.atlas.lib.MultiMap r1;
        org.apache.jena.atlas.iterator.IteratorConcat $r0;
        java.util.Map $r2, $r6;
        java.lang.Object $r5, $r7;
        boolean $z0;

        r1 := @this: org.apache.jena.atlas.lib.MultiMap;

        $r0 = new org.apache.jena.atlas.iterator.IteratorConcat;

        specialinvoke $r0.<org.apache.jena.atlas.iterator.IteratorConcat: void <init>()>();

        $r2 = r1.<org.apache.jena.atlas.lib.MultiMap: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = r1.<org.apache.jena.atlas.lib.MultiMap: java.util.Map map>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r8 = (java.util.Collection) $r7;

        $r9 = interfaceinvoke r8.<java.util.Collection: java.util.Iterator iterator()>();

        virtualinvoke $r0.<org.apache.jena.atlas.iterator.IteratorConcat: void add(java.util.Iterator)>($r9);

        goto label1;

     label2:
        return $r0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.jena.atlas.lib.MultiMap r0, r2;
        java.util.Map $r3, $r4;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.jena.atlas.lib.MultiMap;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.jena.atlas.lib.MultiMap;

        if $z0 != 0 goto label2;

        return 1;

     label2:
        r2 = (org.apache.jena.atlas.lib.MultiMap) r1;

        $r4 = r0.<org.apache.jena.atlas.lib.MultiMap: java.util.Map map>;

        $r3 = r2.<org.apache.jena.atlas.lib.MultiMap: java.util.Map map>;

        $z1 = interfaceinvoke $r4.<java.util.Map: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    public int hashCode()
    {
        org.apache.jena.atlas.lib.MultiMap r0;
        java.util.Map $r1;
        int $i0, $i1;

        r0 := @this: org.apache.jena.atlas.lib.MultiMap;

        $r1 = r0.<org.apache.jena.atlas.lib.MultiMap: java.util.Map map>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int hashCode()>();

        $i1 = $i0 ^ 16843009;

        return $i1;
    }

    public java.lang.String toString()
    {
        java.util.Iterator $r3, $r7;
        java.util.Collection $r6;
        java.util.Set $r2;
        org.apache.jena.atlas.lib.MultiMap r1;
        java.lang.StringBuilder $r0;
        java.lang.Object $r5, $r8;
        java.lang.String $r4;
        boolean $z0, z1, z2, $z3;

        r1 := @this: org.apache.jena.atlas.lib.MultiMap;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{ ");

        z1 = 1;

        $r2 = virtualinvoke r1.<org.apache.jena.atlas.lib.MultiMap: java.util.Set keys()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        if z1 != 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        z1 = 0;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        z2 = 1;

        $r6 = virtualinvoke r1.<org.apache.jena.atlas.lib.MultiMap: java.util.Collection values(java.lang.Object)>($r5);

        $r7 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        if z2 == 0 goto label4;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        goto label5;

     label4:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label5:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        z2 = 0;

        goto label3;

     label6:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ] ");

        goto label1;

     label7:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
