public class org.codehaus.jackson.map.ser.BeanPropertyWriter extends java.lang.Object implements org.codehaus.jackson.map.BeanProperty
{
    protected final org.codehaus.jackson.map.introspect.AnnotatedMember _member;
    protected final org.codehaus.jackson.map.util.Annotations _contextAnnotations;
    protected final org.codehaus.jackson.type.JavaType _declaredType;
    protected final java.lang.reflect.Method _accessorMethod;
    protected final java.lang.reflect.Field _field;
    protected java.util.HashMap _internalSettings;
    protected final org.codehaus.jackson.io.SerializedString _name;
    protected final org.codehaus.jackson.type.JavaType _cfgSerializationType;
    protected final org.codehaus.jackson.map.JsonSerializer _serializer;
    protected org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers;
    protected final boolean _suppressNulls;
    protected final java.lang.Object _suppressableValue;
    protected java.lang.Class[] _includeInViews;
    protected org.codehaus.jackson.map.TypeSerializer _typeSerializer;
    protected org.codehaus.jackson.type.JavaType _nonTrivialBaseType;

    public void <init>(org.codehaus.jackson.map.introspect.AnnotatedMember, org.codehaus.jackson.map.util.Annotations, java.lang.String, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.JsonSerializer, org.codehaus.jackson.map.TypeSerializer, org.codehaus.jackson.type.JavaType, java.lang.reflect.Method, java.lang.reflect.Field, boolean, java.lang.Object)
    {
        org.codehaus.jackson.io.SerializedString $r3;
        org.codehaus.jackson.map.JsonSerializer r6;
        java.lang.reflect.Field r10;
        org.codehaus.jackson.map.introspect.AnnotatedMember r1;
        org.codehaus.jackson.map.util.Annotations r2;
        org.codehaus.jackson.map.TypeSerializer r7;
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        org.codehaus.jackson.type.JavaType r5, r8;
        java.lang.Object r11;
        java.lang.String r4;
        java.lang.reflect.Method r9;
        boolean z0;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMember;

        r2 := @parameter1: org.codehaus.jackson.map.util.Annotations;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: org.codehaus.jackson.type.JavaType;

        r6 := @parameter4: org.codehaus.jackson.map.JsonSerializer;

        r7 := @parameter5: org.codehaus.jackson.map.TypeSerializer;

        r8 := @parameter6: org.codehaus.jackson.type.JavaType;

        r9 := @parameter7: java.lang.reflect.Method;

        r10 := @parameter8: java.lang.reflect.Field;

        z0 := @parameter9: boolean;

        r11 := @parameter10: java.lang.Object;

        $r3 = new org.codehaus.jackson.io.SerializedString;

        specialinvoke $r3.<org.codehaus.jackson.io.SerializedString: void <init>(java.lang.String)>(r4);

        specialinvoke r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: void <init>(org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.io.SerializedString,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.type.JavaType,java.lang.reflect.Method,java.lang.reflect.Field,boolean,java.lang.Object)>(r1, r2, $r3, r5, r6, r7, r8, r9, r10, z0, r11);

        return;
    }

    public void <init>(org.codehaus.jackson.map.introspect.AnnotatedMember, org.codehaus.jackson.map.util.Annotations, org.codehaus.jackson.io.SerializedString, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.JsonSerializer, org.codehaus.jackson.map.TypeSerializer, org.codehaus.jackson.type.JavaType, java.lang.reflect.Method, java.lang.reflect.Field, boolean, java.lang.Object)
    {
        org.codehaus.jackson.io.SerializedString r3;
        org.codehaus.jackson.map.JsonSerializer r5;
        java.lang.reflect.Field r9;
        org.codehaus.jackson.map.introspect.AnnotatedMember r1;
        org.codehaus.jackson.map.util.Annotations r2;
        org.codehaus.jackson.map.TypeSerializer r6;
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        org.codehaus.jackson.type.JavaType r4, r7;
        java.lang.Object r10;
        java.lang.reflect.Method r8;
        org.codehaus.jackson.map.ser.impl.PropertySerializerMap $r11;
        boolean z0;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMember;

        r2 := @parameter1: org.codehaus.jackson.map.util.Annotations;

        r3 := @parameter2: org.codehaus.jackson.io.SerializedString;

        r4 := @parameter3: org.codehaus.jackson.type.JavaType;

        r5 := @parameter4: org.codehaus.jackson.map.JsonSerializer;

        r6 := @parameter5: org.codehaus.jackson.map.TypeSerializer;

        r7 := @parameter6: org.codehaus.jackson.type.JavaType;

        r8 := @parameter7: java.lang.reflect.Method;

        r9 := @parameter8: java.lang.reflect.Field;

        z0 := @parameter9: boolean;

        r10 := @parameter10: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.introspect.AnnotatedMember _member> = r1;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.util.Annotations _contextAnnotations> = r2;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.io.SerializedString _name> = r3;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _declaredType> = r4;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.JsonSerializer _serializer> = r5;

        if r5 != null goto label1;

        $r11 = staticinvoke <org.codehaus.jackson.map.ser.impl.PropertySerializerMap: org.codehaus.jackson.map.ser.impl.PropertySerializerMap emptyMap()>();

        goto label2;

     label1:
        $r11 = null;

     label2:
        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers> = $r11;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.TypeSerializer _typeSerializer> = r6;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _cfgSerializationType> = r7;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Method _accessorMethod> = r8;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Field _field> = r9;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: boolean _suppressNulls> = z0;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Object _suppressableValue> = r10;

        return;
    }

    protected void <init>(org.codehaus.jackson.map.ser.BeanPropertyWriter)
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0, r1;
        org.codehaus.jackson.map.JsonSerializer $r2;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r1 := @parameter0: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r2 = r1.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.JsonSerializer _serializer>;

        specialinvoke r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: void <init>(org.codehaus.jackson.map.ser.BeanPropertyWriter,org.codehaus.jackson.map.JsonSerializer)>(r1, $r2);

        return;
    }

    protected void <init>(org.codehaus.jackson.map.ser.BeanPropertyWriter, org.codehaus.jackson.map.JsonSerializer)
    {
        java.util.HashMap $r8, $r16, $r17;
        org.codehaus.jackson.map.introspect.AnnotatedMember $r3;
        org.codehaus.jackson.map.util.Annotations $r4;
        org.codehaus.jackson.map.TypeSerializer $r14;
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0, r2;
        org.codehaus.jackson.type.JavaType $r5, $r10, $r15;
        java.lang.reflect.Method $r6;
        org.codehaus.jackson.map.ser.impl.PropertySerializerMap $r11;
        boolean $z0;
        org.codehaus.jackson.io.SerializedString $r9;
        java.lang.Class[] $r13;
        org.codehaus.jackson.map.JsonSerializer r1;
        java.lang.reflect.Field $r7;
        java.lang.Object $r12;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r2 := @parameter0: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r1 := @parameter1: org.codehaus.jackson.map.JsonSerializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.JsonSerializer _serializer> = r1;

        $r3 = r2.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.introspect.AnnotatedMember _member>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.introspect.AnnotatedMember _member> = $r3;

        $r4 = r2.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.util.Annotations _contextAnnotations>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.util.Annotations _contextAnnotations> = $r4;

        $r5 = r2.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _declaredType>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _declaredType> = $r5;

        $r6 = r2.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Method _accessorMethod>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Method _accessorMethod> = $r6;

        $r7 = r2.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Field _field>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Field _field> = $r7;

        $r8 = r2.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.util.HashMap _internalSettings>;

        if $r8 == null goto label1;

        $r16 = new java.util.HashMap;

        $r17 = r2.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.util.HashMap _internalSettings>;

        specialinvoke $r16.<java.util.HashMap: void <init>(java.util.Map)>($r17);

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.util.HashMap _internalSettings> = $r16;

     label1:
        $r9 = r2.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.io.SerializedString _name>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.io.SerializedString _name> = $r9;

        $r10 = r2.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _cfgSerializationType>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _cfgSerializationType> = $r10;

        $r11 = r2.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers> = $r11;

        $z0 = r2.<org.codehaus.jackson.map.ser.BeanPropertyWriter: boolean _suppressNulls>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: boolean _suppressNulls> = $z0;

        $r12 = r2.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Object _suppressableValue>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Object _suppressableValue> = $r12;

        $r13 = r2.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Class[] _includeInViews>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Class[] _includeInViews> = $r13;

        $r14 = r2.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.TypeSerializer _typeSerializer>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.TypeSerializer _typeSerializer> = $r14;

        $r15 = r2.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _nonTrivialBaseType>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _nonTrivialBaseType> = $r15;

        return;
    }

    public org.codehaus.jackson.map.ser.BeanPropertyWriter withSerializer(org.codehaus.jackson.map.JsonSerializer)
    {
        java.lang.IllegalStateException $r4;
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0, $r2;
        java.lang.Class $r1;
        org.codehaus.jackson.map.JsonSerializer r3;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r3 := @parameter0: org.codehaus.jackson.map.JsonSerializer;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == class "Lorg/codehaus/jackson/map/ser/BeanPropertyWriter;" goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("BeanPropertyWriter sub-class does not override \'withSerializer()\'; needs to!");

        throw $r4;

     label1:
        $r2 = new org.codehaus.jackson.map.ser.BeanPropertyWriter;

        specialinvoke $r2.<org.codehaus.jackson.map.ser.BeanPropertyWriter: void <init>(org.codehaus.jackson.map.ser.BeanPropertyWriter,org.codehaus.jackson.map.JsonSerializer)>(r0, r3);

        return $r2;
    }

    public org.codehaus.jackson.map.ser.BeanPropertyWriter unwrappingWriter()
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r1;
        org.codehaus.jackson.map.ser.impl.UnwrappingBeanPropertyWriter $r0;

        r1 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r0 = new org.codehaus.jackson.map.ser.impl.UnwrappingBeanPropertyWriter;

        specialinvoke $r0.<org.codehaus.jackson.map.ser.impl.UnwrappingBeanPropertyWriter: void <init>(org.codehaus.jackson.map.ser.BeanPropertyWriter)>(r1);

        return $r0;
    }

    public void setViews(java.lang.Class[])
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        java.lang.Class[] r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r1 := @parameter0: java.lang.Class[];

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Class[] _includeInViews> = r1;

        return;
    }

    public void setNonTrivialBaseType(org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        org.codehaus.jackson.type.JavaType r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _nonTrivialBaseType> = r1;

        return;
    }

    public java.lang.String getName()
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        org.codehaus.jackson.io.SerializedString $r1;
        java.lang.String $r2;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.io.SerializedString _name>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.io.SerializedString: java.lang.String getValue()>();

        return $r2;
    }

    public org.codehaus.jackson.type.JavaType getType()
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        org.codehaus.jackson.type.JavaType $r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _declaredType>;

        return $r1;
    }

    public java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMember $r2;
        java.lang.'annotation'.Annotation $r3;
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        java.lang.Class r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.introspect.AnnotatedMember _member>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.AnnotatedMember: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(r1);

        return $r3;
    }

    public java.lang.'annotation'.Annotation getContextAnnotation(java.lang.Class)
    {
        org.codehaus.jackson.map.util.Annotations $r2;
        java.lang.'annotation'.Annotation $r3;
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        java.lang.Class r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.util.Annotations _contextAnnotations>;

        $r3 = interfaceinvoke $r2.<org.codehaus.jackson.map.util.Annotations: java.lang.'annotation'.Annotation get(java.lang.Class)>(r1);

        return $r3;
    }

    public org.codehaus.jackson.map.introspect.AnnotatedMember getMember()
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        org.codehaus.jackson.map.introspect.AnnotatedMember $r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.introspect.AnnotatedMember _member>;

        return $r1;
    }

    public java.lang.Object getInternalSetting(java.lang.Object)
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        java.util.HashMap $r1, $r3;
        java.lang.Object r2, $r4;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.util.HashMap _internalSettings>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.util.HashMap _internalSettings>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        return $r4;
    }

    public java.lang.Object setInternalSetting(java.lang.Object, java.lang.Object)
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        java.util.HashMap $r1, $r4, $r6;
        java.lang.Object r2, r3, $r5;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.util.HashMap _internalSettings>;

        if $r1 != null goto label1;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.util.HashMap _internalSettings> = $r6;

     label1:
        $r4 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.util.HashMap _internalSettings>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        return $r5;
    }

    public java.lang.Object removeInternalSetting(java.lang.Object)
    {
        int $i0;
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        java.util.HashMap $r1, $r3, $r4;
        java.lang.Object r2, r5;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r2 := @parameter0: java.lang.Object;

        r5 = null;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.util.HashMap _internalSettings>;

        if $r1 == null goto label1;

        $r3 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.util.HashMap _internalSettings>;

        r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r2);

        $r4 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.util.HashMap _internalSettings>;

        $i0 = virtualinvoke $r4.<java.util.HashMap: int size()>();

        if $i0 != 0 goto label1;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.util.HashMap _internalSettings> = null;

     label1:
        return r5;
    }

    public org.codehaus.jackson.io.SerializedString getSerializedName()
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        org.codehaus.jackson.io.SerializedString $r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.io.SerializedString _name>;

        return $r1;
    }

    public boolean hasSerializer()
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        org.codehaus.jackson.map.JsonSerializer $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.JsonSerializer _serializer>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.codehaus.jackson.map.JsonSerializer getSerializer()
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        org.codehaus.jackson.map.JsonSerializer $r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.JsonSerializer _serializer>;

        return $r1;
    }

    public org.codehaus.jackson.type.JavaType getSerializationType()
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        org.codehaus.jackson.type.JavaType $r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _cfgSerializationType>;

        return $r1;
    }

    public java.lang.Class getRawSerializationType()
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        org.codehaus.jackson.type.JavaType $r1, $r2;
        java.lang.Class $r3;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _cfgSerializationType>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _cfgSerializationType>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

     label2:
        return $r3;
    }

    public java.lang.Class getPropertyType()
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        java.lang.Class $r3, $r5;
        java.lang.reflect.Field $r2;
        java.lang.reflect.Method $r1, $r4;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Method _accessorMethod>;

        if $r1 == null goto label1;

        $r4 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Method _accessorMethod>;

        $r5 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        return $r5;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Field _field>;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Class getType()>();

        return $r3;
    }

    public java.lang.reflect.Type getGenericPropertyType()
    {
        java.lang.reflect.Type $r3, $r5;
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        java.lang.reflect.Field $r2;
        java.lang.reflect.Method $r1, $r4;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Method _accessorMethod>;

        if $r1 == null goto label1;

        $r4 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Method _accessorMethod>;

        $r5 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();

        return $r5;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Field _field>;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();

        return $r3;
    }

    public java.lang.Class[] getViews()
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        java.lang.Class[] $r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Class[] _includeInViews>;

        return $r1;
    }

    public void serializeAsField(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.lang.Exception
    {
        org.codehaus.jackson.map.SerializerProvider r5;
        org.codehaus.jackson.JsonGenerator r4;
        org.codehaus.jackson.map.TypeSerializer $r6, $r15;
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        org.codehaus.jackson.map.ser.impl.PropertySerializerMap r8;
        boolean $z0, $z1;
        org.codehaus.jackson.io.SerializedString $r12, $r14;
        org.codehaus.jackson.map.JsonSerializer $r9, $r11, r13;
        java.lang.Object r1, $r2, $r3, $r10;
        java.lang.Class $r7;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r5 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Object get(java.lang.Object)>(r1);

        if $r2 != null goto label2;

        $z1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: boolean _suppressNulls>;

        if $z1 != 0 goto label1;

        $r12 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.io.SerializedString _name>;

        virtualinvoke r4.<org.codehaus.jackson.JsonGenerator: void writeFieldName(org.codehaus.jackson.io.SerializedString)>($r12);

        virtualinvoke r5.<org.codehaus.jackson.map.SerializerProvider: void defaultSerializeNull(org.codehaus.jackson.JsonGenerator)>(r4);

     label1:
        return;

     label2:
        if $r2 != r1 goto label3;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: void _reportSelfReference(java.lang.Object)>(r1);

     label3:
        $r3 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Object _suppressableValue>;

        if $r3 == null goto label4;

        $r10 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Object _suppressableValue>;

        $z0 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label4;

        return;

     label4:
        $r11 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.JsonSerializer _serializer>;

        r13 = $r11;

        if $r11 != null goto label5;

        $r7 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        r8 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers>;

        $r9 = virtualinvoke r8.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap: org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class)>($r7);

        r13 = $r9;

        if $r9 != null goto label5;

        r13 = virtualinvoke r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider)>(r8, $r7, r5);

     label5:
        $r14 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.io.SerializedString _name>;

        virtualinvoke r4.<org.codehaus.jackson.JsonGenerator: void writeFieldName(org.codehaus.jackson.io.SerializedString)>($r14);

        $r15 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.TypeSerializer _typeSerializer>;

        if $r15 != null goto label6;

        virtualinvoke r13.<org.codehaus.jackson.map.JsonSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r2, r4, r5);

        goto label7;

     label6:
        $r6 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.TypeSerializer _typeSerializer>;

        virtualinvoke r13.<org.codehaus.jackson.map.JsonSerializer: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>($r2, r4, r5, $r6);

     label7:
        return;
    }

    protected org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap, java.lang.Class, org.codehaus.jackson.map.SerializerProvider) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.SerializerProvider r4;
        org.codehaus.jackson.map.JsonSerializer $r6;
        org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult r10;
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        org.codehaus.jackson.type.JavaType $r1, $r8, $r9;
        java.lang.Class r3;
        org.codehaus.jackson.map.ser.impl.PropertySerializerMap r2, $r5, $r7;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r2 := @parameter0: org.codehaus.jackson.map.ser.impl.PropertySerializerMap;

        r3 := @parameter1: java.lang.Class;

        r4 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _nonTrivialBaseType>;

        if $r1 == null goto label1;

        $r8 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _nonTrivialBaseType>;

        $r9 = virtualinvoke r4.<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.type.JavaType constructSpecializedType(org.codehaus.jackson.type.JavaType,java.lang.Class)>($r8, r3);

        r10 = virtualinvoke r2.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap: org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.BeanProperty)>($r9, r4, r0);

        goto label2;

     label1:
        r10 = virtualinvoke r2.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap: org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSerializer(java.lang.Class,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.BeanProperty)>(r3, r4, r0);

     label2:
        $r5 = r10.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult: org.codehaus.jackson.map.ser.impl.PropertySerializerMap map>;

        if r2 == $r5 goto label3;

        $r7 = r10.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult: org.codehaus.jackson.map.ser.impl.PropertySerializerMap map>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers> = $r7;

     label3:
        $r6 = r10.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult: org.codehaus.jackson.map.JsonSerializer serializer>;

        return $r6;
    }

    public final java.lang.Object get(java.lang.Object) throws java.lang.Exception
    {
        java.lang.Object[] $r5;
        java.lang.reflect.Field $r3;
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        java.lang.Object r2, $r4, $r7;
        java.lang.reflect.Method $r1, $r6;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Method _accessorMethod>;

        if $r1 == null goto label1;

        $r6 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Method _accessorMethod>;

        $r5 = newarray (java.lang.Object)[0];

        $r7 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r5);

        return $r7;

     label1:
        $r3 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Field _field>;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r2);

        return $r4;
    }

    protected void _reportSelfReference(java.lang.Object) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r1;
        org.codehaus.jackson.map.JsonMappingException $r0;
        java.lang.Object r2;

        r1 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r2 := @parameter0: java.lang.Object;

        $r0 = new org.codehaus.jackson.map.JsonMappingException;

        specialinvoke $r0.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>("Direct self-reference leading to cycle");

        throw $r0;
    }

    public java.lang.String toString()
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r2;
        java.lang.String $r3, $r9, $r13, $r19, $r21, $r22, $r26, $r30;
        java.lang.reflect.Method $r5, $r24, $r29;
        org.codehaus.jackson.map.JsonSerializer $r14, $r17;
        java.lang.reflect.Field $r7, $r12;
        java.lang.StringBuilder $r0, $r1, $r4, $r6, $r10, $r11, $r15, $r16, $r20, $r23, $r27, $r28;
        java.lang.Class $r8, $r18, $r25;

        r2 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>(40);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("property \'");

        $r3 = virtualinvoke r2.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' (");

        $r5 = r2.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Method _accessorMethod>;

        if $r5 == null goto label1;

        $r23 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("via method ");

        $r24 = r2.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Method _accessorMethod>;

        $r25 = virtualinvoke $r24.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r26 = virtualinvoke $r25.<java.lang.Class: java.lang.String getName()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r29 = r2.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Method _accessorMethod>;

        $r30 = virtualinvoke $r29.<java.lang.reflect.Method: java.lang.String getName()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        goto label2;

     label1:
        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("field \"");

        $r7 = r2.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Field _field>;

        $r8 = virtualinvoke $r7.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r12 = r2.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Field _field>;

        $r13 = virtualinvoke $r12.<java.lang.reflect.Field: java.lang.String getName()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

     label2:
        $r14 = r2.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.JsonSerializer _serializer>;

        if $r14 != null goto label3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", no static serializer");

        goto label4;

     label3:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", static serializer of type ");

        $r17 = r2.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.JsonSerializer _serializer>;

        $r18 = virtualinvoke $r17.<java.lang.Object: java.lang.Class getClass()>();

        $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.String getName()>();

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

     label4:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r22 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r22;
    }
}
