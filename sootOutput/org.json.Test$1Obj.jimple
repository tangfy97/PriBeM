class org.json.Test$1Obj extends java.lang.Object implements org.json.JSONString
{
    public java.lang.String aString;
    public double aNumber;
    public boolean aBoolean;

    public void <init>(java.lang.String, double, boolean)
    {
        org.json.Test$1Obj r0;
        java.lang.String r1;
        double d0;
        boolean z0;

        r0 := @this: org.json.Test$1Obj;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.json.Test$1Obj: java.lang.String aString> = r1;

        r0.<org.json.Test$1Obj: double aNumber> = d0;

        r0.<org.json.Test$1Obj: boolean aBoolean> = z0;

        return;
    }

    public double getNumber()
    {
        org.json.Test$1Obj r0;
        double $d0;

        r0 := @this: org.json.Test$1Obj;

        $d0 = r0.<org.json.Test$1Obj: double aNumber>;

        return $d0;
    }

    public java.lang.String getString()
    {
        org.json.Test$1Obj r0;
        java.lang.String $r1;

        r0 := @this: org.json.Test$1Obj;

        $r1 = r0.<org.json.Test$1Obj: java.lang.String aString>;

        return $r1;
    }

    public boolean isBoolean()
    {
        org.json.Test$1Obj r0;
        boolean $z0;

        r0 := @this: org.json.Test$1Obj;

        $z0 = r0.<org.json.Test$1Obj: boolean aBoolean>;

        return $z0;
    }

    public java.lang.String getBENT()
    {
        org.json.Test$1Obj r0;

        r0 := @this: org.json.Test$1Obj;

        return "All uppercase key";
    }

    public java.lang.String getX()
    {
        org.json.Test$1Obj r0;

        r0 := @this: org.json.Test$1Obj;

        return "x";
    }

    public java.lang.String toJSONString()
    {
        org.json.Test$1Obj r2;
        java.lang.StringBuilder $r0, $r1, $r5, $r6, $r8, $r9;
        java.lang.String $r3, $r4, $r7, $r10;
        double $d0;

        r2 := @this: org.json.Test$1Obj;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $r3 = r2.<org.json.Test$1Obj: java.lang.String aString>;

        $r4 = staticinvoke <org.json.JSONObject: java.lang.String quote(java.lang.String)>($r3);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $d0 = r2.<org.json.Test$1Obj: double aNumber>;

        $r7 = staticinvoke <org.json.JSONObject: java.lang.String doubleToString(double)>($d0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public java.lang.String toString()
    {
        org.json.Test$1Obj r1;
        java.lang.String $r2, $r9, $r12, $r14;
        double $d0;
        boolean $z0;
        java.lang.StringBuilder $r0, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r13;

        r1 := @this: org.json.Test$1Obj;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<org.json.Test$1Obj: java.lang.String getString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $d0 = virtualinvoke r1.<org.json.Test$1Obj: double getNumber()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $z0 = virtualinvoke r1.<org.json.Test$1Obj: boolean isBoolean()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r9 = virtualinvoke r1.<org.json.Test$1Obj: java.lang.String getBENT()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r12 = virtualinvoke r1.<org.json.Test$1Obj: java.lang.String getX()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }
}
