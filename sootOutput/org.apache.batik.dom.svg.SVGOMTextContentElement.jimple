public abstract class org.apache.batik.dom.svg.SVGOMTextContentElement extends org.apache.batik.dom.svg.SVGStylableElement
{
    protected static org.apache.batik.util.DoublyIndexedTable xmlTraitInformation;
    protected static final java.lang.String[] LENGTH_ADJUST_VALUES;
    protected org.apache.batik.dom.svg.SVGOMAnimatedBoolean externalResourcesRequired;
    protected org.apache.batik.dom.svg.AbstractSVGAnimatedLength textLength;
    protected org.apache.batik.dom.svg.SVGOMAnimatedEnumeration lengthAdjust;

    protected void <init>()
    {
        org.apache.batik.dom.svg.SVGOMTextContentElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMTextContentElement;

        specialinvoke r0.<org.apache.batik.dom.svg.SVGStylableElement: void <init>()>();

        return;
    }

    protected void <init>(java.lang.String, org.apache.batik.dom.AbstractDocument)
    {
        org.apache.batik.dom.AbstractDocument r2;
        java.lang.String r1;
        org.apache.batik.dom.svg.SVGOMTextContentElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMTextContentElement;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.batik.dom.AbstractDocument;

        specialinvoke r0.<org.apache.batik.dom.svg.SVGStylableElement: void <init>(java.lang.String,org.apache.batik.dom.AbstractDocument)>(r1, r2);

        specialinvoke r0.<org.apache.batik.dom.svg.SVGOMTextContentElement: void initializeLiveAttributes()>();

        return;
    }

    protected void initializeAllLiveAttributes()
    {
        org.apache.batik.dom.svg.SVGOMTextContentElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMTextContentElement;

        specialinvoke r0.<org.apache.batik.dom.svg.SVGStylableElement: void initializeAllLiveAttributes()>();

        specialinvoke r0.<org.apache.batik.dom.svg.SVGOMTextContentElement: void initializeLiveAttributes()>();

        return;
    }

    private void initializeLiveAttributes()
    {
        org.apache.batik.dom.svg.SVGOMTextContentElement$1 $r4;
        org.apache.batik.dom.svg.SVGOMAnimatedEnumeration $r3;
        java.lang.String[] $r2;
        org.apache.batik.dom.AbstractDocument $r7;
        org.apache.batik.util.DoublyIndexedTable $r6;
        org.apache.batik.dom.svg.SVGOMDocument $r8;
        org.apache.batik.dom.svg.SVGOMTextContentElement r0;
        org.apache.batik.dom.svg.SVGOMAnimatedBoolean $r1;
        org.apache.batik.dom.svg.AbstractSVGAnimatedLength $r5, $r9;
        org.apache.batik.dom.svg.AnimatedAttributeListener $r10;

        r0 := @this: org.apache.batik.dom.svg.SVGOMTextContentElement;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.dom.svg.SVGOMAnimatedBoolean createLiveAnimatedBoolean(java.lang.String,java.lang.String,boolean)>(null, "externalResourcesRequired", 0);

        r0.<org.apache.batik.dom.svg.SVGOMTextContentElement: org.apache.batik.dom.svg.SVGOMAnimatedBoolean externalResourcesRequired> = $r1;

        $r2 = <org.apache.batik.dom.svg.SVGOMTextContentElement: java.lang.String[] LENGTH_ADJUST_VALUES>;

        $r3 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.dom.svg.SVGOMAnimatedEnumeration createLiveAnimatedEnumeration(java.lang.String,java.lang.String,java.lang.String[],short)>(null, "lengthAdjust", $r2, 1);

        r0.<org.apache.batik.dom.svg.SVGOMTextContentElement: org.apache.batik.dom.svg.SVGOMAnimatedEnumeration lengthAdjust> = $r3;

        $r4 = new org.apache.batik.dom.svg.SVGOMTextContentElement$1;

        specialinvoke $r4.<org.apache.batik.dom.svg.SVGOMTextContentElement$1: void <init>(org.apache.batik.dom.svg.SVGOMTextContentElement,org.apache.batik.dom.svg.AbstractElement,java.lang.String,java.lang.String,short,boolean)>(r0, r0, null, "textLength", 2, 1);

        r0.<org.apache.batik.dom.svg.SVGOMTextContentElement: org.apache.batik.dom.svg.AbstractSVGAnimatedLength textLength> = $r4;

        $r6 = r0.<org.apache.batik.dom.svg.AbstractElement: org.apache.batik.util.DoublyIndexedTable liveAttributeValues>;

        $r5 = r0.<org.apache.batik.dom.svg.SVGOMTextContentElement: org.apache.batik.dom.svg.AbstractSVGAnimatedLength textLength>;

        virtualinvoke $r6.<org.apache.batik.util.DoublyIndexedTable: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>(null, "textLength", $r5);

        $r9 = r0.<org.apache.batik.dom.svg.SVGOMTextContentElement: org.apache.batik.dom.svg.AbstractSVGAnimatedLength textLength>;

        $r7 = r0.<org.apache.batik.dom.AbstractNode: org.apache.batik.dom.AbstractDocument ownerDocument>;

        $r8 = (org.apache.batik.dom.svg.SVGOMDocument) $r7;

        $r10 = virtualinvoke $r8.<org.apache.batik.dom.svg.SVGOMDocument: org.apache.batik.dom.svg.AnimatedAttributeListener getAnimatedAttributeListener()>();

        virtualinvoke $r9.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void addAnimatedAttributeListener(org.apache.batik.dom.svg.AnimatedAttributeListener)>($r10);

        return;
    }

    public org.w3c.dom.svg.SVGAnimatedLength getTextLength()
    {
        org.apache.batik.dom.svg.AbstractSVGAnimatedLength $r1;
        org.apache.batik.dom.svg.SVGOMTextContentElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMTextContentElement;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMTextContentElement: org.apache.batik.dom.svg.AbstractSVGAnimatedLength textLength>;

        return $r1;
    }

    public org.w3c.dom.svg.SVGAnimatedEnumeration getLengthAdjust()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedEnumeration $r1;
        org.apache.batik.dom.svg.SVGOMTextContentElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMTextContentElement;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMTextContentElement: org.apache.batik.dom.svg.SVGOMAnimatedEnumeration lengthAdjust>;

        return $r1;
    }

    public int getNumberOfChars()
    {
        int $i0;
        org.apache.batik.dom.svg.SVGOMTextContentElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMTextContentElement;

        $i0 = staticinvoke <org.apache.batik.dom.svg.SVGTextContentSupport: int getNumberOfChars(org.w3c.dom.Element)>(r0);

        return $i0;
    }

    public float getComputedTextLength()
    {
        float $f0;
        org.apache.batik.dom.svg.SVGOMTextContentElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMTextContentElement;

        $f0 = staticinvoke <org.apache.batik.dom.svg.SVGTextContentSupport: float getComputedTextLength(org.w3c.dom.Element)>(r0);

        return $f0;
    }

    public float getSubStringLength(int, int) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGOMTextContentElement r0;
        int i0, i1;
        float $f0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMTextContentElement;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $f0 = staticinvoke <org.apache.batik.dom.svg.SVGTextContentSupport: float getSubStringLength(org.w3c.dom.Element,int,int)>(r0, i0, i1);

        return $f0;
    }

    public org.w3c.dom.svg.SVGPoint getStartPositionOfChar(int) throws org.w3c.dom.DOMException
    {
        int i0;
        org.apache.batik.dom.svg.SVGOMTextContentElement r0;
        org.w3c.dom.svg.SVGPoint $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMTextContentElement;

        i0 := @parameter0: int;

        $r1 = staticinvoke <org.apache.batik.dom.svg.SVGTextContentSupport: org.w3c.dom.svg.SVGPoint getStartPositionOfChar(org.w3c.dom.Element,int)>(r0, i0);

        return $r1;
    }

    public org.w3c.dom.svg.SVGPoint getEndPositionOfChar(int) throws org.w3c.dom.DOMException
    {
        int i0;
        org.apache.batik.dom.svg.SVGOMTextContentElement r0;
        org.w3c.dom.svg.SVGPoint $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMTextContentElement;

        i0 := @parameter0: int;

        $r1 = staticinvoke <org.apache.batik.dom.svg.SVGTextContentSupport: org.w3c.dom.svg.SVGPoint getEndPositionOfChar(org.w3c.dom.Element,int)>(r0, i0);

        return $r1;
    }

    public org.w3c.dom.svg.SVGRect getExtentOfChar(int) throws org.w3c.dom.DOMException
    {
        int i0;
        org.apache.batik.dom.svg.SVGOMTextContentElement r0;
        org.w3c.dom.svg.SVGRect $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMTextContentElement;

        i0 := @parameter0: int;

        $r1 = staticinvoke <org.apache.batik.dom.svg.SVGTextContentSupport: org.w3c.dom.svg.SVGRect getExtentOfChar(org.w3c.dom.Element,int)>(r0, i0);

        return $r1;
    }

    public float getRotationOfChar(int) throws org.w3c.dom.DOMException
    {
        int i0;
        float $f0;
        org.apache.batik.dom.svg.SVGOMTextContentElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMTextContentElement;

        i0 := @parameter0: int;

        $f0 = staticinvoke <org.apache.batik.dom.svg.SVGTextContentSupport: float getRotationOfChar(org.w3c.dom.Element,int)>(r0, i0);

        return $f0;
    }

    public int getCharNumAtPosition(org.w3c.dom.svg.SVGPoint)
    {
        org.apache.batik.dom.svg.SVGOMTextContentElement r0;
        int $i0;
        float $f0, $f1;
        org.w3c.dom.svg.SVGPoint r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMTextContentElement;

        r1 := @parameter0: org.w3c.dom.svg.SVGPoint;

        $f0 = interfaceinvoke r1.<org.w3c.dom.svg.SVGPoint: float getX()>();

        $f1 = interfaceinvoke r1.<org.w3c.dom.svg.SVGPoint: float getY()>();

        $i0 = staticinvoke <org.apache.batik.dom.svg.SVGTextContentSupport: int getCharNumAtPosition(org.w3c.dom.Element,float,float)>(r0, $f0, $f1);

        return $i0;
    }

    public void selectSubString(int, int) throws org.w3c.dom.DOMException
    {
        int i0, i1;
        org.apache.batik.dom.svg.SVGOMTextContentElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMTextContentElement;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        staticinvoke <org.apache.batik.dom.svg.SVGTextContentSupport: void selectSubString(org.w3c.dom.Element,int,int)>(r0, i0, i1);

        return;
    }

    public org.w3c.dom.svg.SVGAnimatedBoolean getExternalResourcesRequired()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedBoolean $r1;
        org.apache.batik.dom.svg.SVGOMTextContentElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMTextContentElement;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMTextContentElement: org.apache.batik.dom.svg.SVGOMAnimatedBoolean externalResourcesRequired>;

        return $r1;
    }

    public java.lang.String getXMLlang()
    {
        java.lang.String $r1;
        org.apache.batik.dom.svg.SVGOMTextContentElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMTextContentElement;

        $r1 = staticinvoke <org.apache.batik.dom.util.XMLSupport: java.lang.String getXMLLang(org.w3c.dom.Element)>(r0);

        return $r1;
    }

    public void setXMLlang(java.lang.String)
    {
        java.lang.String r1;
        org.apache.batik.dom.svg.SVGOMTextContentElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMTextContentElement;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.batik.dom.AbstractElement: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/XML/1998/namespace", "xml:lang", r1);

        return;
    }

    public java.lang.String getXMLspace()
    {
        java.lang.String $r1;
        org.apache.batik.dom.svg.SVGOMTextContentElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMTextContentElement;

        $r1 = staticinvoke <org.apache.batik.dom.util.XMLSupport: java.lang.String getXMLSpace(org.w3c.dom.Element)>(r0);

        return $r1;
    }

    public void setXMLspace(java.lang.String)
    {
        java.lang.String r1;
        org.apache.batik.dom.svg.SVGOMTextContentElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMTextContentElement;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.batik.dom.AbstractElement: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/XML/1998/namespace", "xml:space", r1);

        return;
    }

    public org.w3c.dom.svg.SVGStringList getRequiredFeatures()
    {
        org.apache.batik.dom.svg.SVGOMTextContentElement r0;
        org.w3c.dom.svg.SVGStringList $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMTextContentElement;

        $r1 = staticinvoke <org.apache.batik.dom.svg.SVGTestsSupport: org.w3c.dom.svg.SVGStringList getRequiredFeatures(org.w3c.dom.Element)>(r0);

        return $r1;
    }

    public org.w3c.dom.svg.SVGStringList getRequiredExtensions()
    {
        org.apache.batik.dom.svg.SVGOMTextContentElement r0;
        org.w3c.dom.svg.SVGStringList $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMTextContentElement;

        $r1 = staticinvoke <org.apache.batik.dom.svg.SVGTestsSupport: org.w3c.dom.svg.SVGStringList getRequiredExtensions(org.w3c.dom.Element)>(r0);

        return $r1;
    }

    public org.w3c.dom.svg.SVGStringList getSystemLanguage()
    {
        org.apache.batik.dom.svg.SVGOMTextContentElement r0;
        org.w3c.dom.svg.SVGStringList $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMTextContentElement;

        $r1 = staticinvoke <org.apache.batik.dom.svg.SVGTestsSupport: org.w3c.dom.svg.SVGStringList getSystemLanguage(org.w3c.dom.Element)>(r0);

        return $r1;
    }

    public boolean hasExtension(java.lang.String)
    {
        java.lang.String r1;
        org.apache.batik.dom.svg.SVGOMTextContentElement r0;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMTextContentElement;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.batik.dom.svg.SVGTestsSupport: boolean hasExtension(org.w3c.dom.Element,java.lang.String)>(r0, r1);

        return $z0;
    }

    protected org.apache.batik.util.DoublyIndexedTable getTraitInformationTable()
    {
        org.apache.batik.util.DoublyIndexedTable $r0;
        org.apache.batik.dom.svg.SVGOMTextContentElement r1;

        r1 := @this: org.apache.batik.dom.svg.SVGOMTextContentElement;

        $r0 = <org.apache.batik.dom.svg.SVGOMTextContentElement: org.apache.batik.util.DoublyIndexedTable xmlTraitInformation>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.String[] $r5;
        org.apache.batik.util.DoublyIndexedTable $r0, $r1;
        org.apache.batik.dom.svg.TraitInformation $r2, $r3, $r4;

        $r0 = new org.apache.batik.util.DoublyIndexedTable;

        $r1 = <org.apache.batik.dom.svg.SVGStylableElement: org.apache.batik.util.DoublyIndexedTable xmlTraitInformation>;

        specialinvoke $r0.<org.apache.batik.util.DoublyIndexedTable: void <init>(org.apache.batik.util.DoublyIndexedTable)>($r1);

        $r2 = new org.apache.batik.dom.svg.TraitInformation;

        specialinvoke $r2.<org.apache.batik.dom.svg.TraitInformation: void <init>(boolean,int,short)>(1, 3, 3);

        virtualinvoke $r0.<org.apache.batik.util.DoublyIndexedTable: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>(null, "textLength", $r2);

        $r3 = new org.apache.batik.dom.svg.TraitInformation;

        specialinvoke $r3.<org.apache.batik.dom.svg.TraitInformation: void <init>(boolean,int)>(1, 15);

        virtualinvoke $r0.<org.apache.batik.util.DoublyIndexedTable: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>(null, "lengthAdjust", $r3);

        $r4 = new org.apache.batik.dom.svg.TraitInformation;

        specialinvoke $r4.<org.apache.batik.dom.svg.TraitInformation: void <init>(boolean,int)>(1, 49);

        virtualinvoke $r0.<org.apache.batik.util.DoublyIndexedTable: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>(null, "externalResourcesRequired", $r4);

        <org.apache.batik.dom.svg.SVGOMTextContentElement: org.apache.batik.util.DoublyIndexedTable xmlTraitInformation> = $r0;

        $r5 = newarray (java.lang.String)[3];

        $r5[0] = "";

        $r5[1] = "spacing";

        $r5[2] = "spacingAndGlyphs";

        <org.apache.batik.dom.svg.SVGOMTextContentElement: java.lang.String[] LENGTH_ADJUST_VALUES> = $r5;

        return;
    }
}
