public abstract class com.mycila.inject.internal.cglib.transform.AbstractProcessTask extends org.apache.tools.ant.Task
{
    private java.util.Vector filesets;

    public void <init>()
    {
        java.util.Vector $r1;
        com.mycila.inject.internal.cglib.transform.AbstractProcessTask r0;

        r0 := @this: com.mycila.inject.internal.cglib.transform.AbstractProcessTask;

        specialinvoke r0.<org.apache.tools.ant.Task: void <init>()>();

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        r0.<com.mycila.inject.internal.cglib.transform.AbstractProcessTask: java.util.Vector filesets> = $r1;

        return;
    }

    public void addFileset(org.apache.tools.ant.types.FileSet)
    {
        java.util.Vector $r2;
        org.apache.tools.ant.types.FileSet r1;
        com.mycila.inject.internal.cglib.transform.AbstractProcessTask r0;

        r0 := @this: com.mycila.inject.internal.cglib.transform.AbstractProcessTask;

        r1 := @parameter0: org.apache.tools.ant.types.FileSet;

        $r2 = r0.<com.mycila.inject.internal.cglib.transform.AbstractProcessTask: java.util.Vector filesets>;

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>(r1);

        return;
    }

    protected java.util.Collection getFiles()
    {
        java.util.HashMap $r0;
        java.lang.String[] $r9;
        java.util.Vector $r3, $r5;
        org.apache.tools.ant.types.FileSet r7;
        int $i0, $i1, i2, i3;
        org.apache.tools.ant.Project $r2;
        java.lang.String $r12, $r13;
        java.util.Collection $r4;
        org.apache.tools.ant.DirectoryScanner $r8;
        java.io.File $r10, $r11;
        com.mycila.inject.internal.cglib.transform.AbstractProcessTask r1;
        java.lang.Object $r6;

        r1 := @this: com.mycila.inject.internal.cglib.transform.AbstractProcessTask;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = virtualinvoke r1.<com.mycila.inject.internal.cglib.transform.AbstractProcessTask: org.apache.tools.ant.Project getProject()>();

        i2 = 0;

     label1:
        $r3 = r1.<com.mycila.inject.internal.cglib.transform.AbstractProcessTask: java.util.Vector filesets>;

        $i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

        if i2 >= $i0 goto label4;

        $r5 = r1.<com.mycila.inject.internal.cglib.transform.AbstractProcessTask: java.util.Vector filesets>;

        $r6 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        r7 = (org.apache.tools.ant.types.FileSet) $r6;

        $r8 = virtualinvoke r7.<org.apache.tools.ant.types.FileSet: org.apache.tools.ant.DirectoryScanner getDirectoryScanner(org.apache.tools.ant.Project)>($r2);

        $r9 = virtualinvoke $r8.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] getIncludedFiles()>();

        $r10 = virtualinvoke r7.<org.apache.tools.ant.types.FileSet: java.io.File getDir(org.apache.tools.ant.Project)>($r2);

        i3 = 0;

     label2:
        $i1 = lengthof $r9;

        if i3 >= $i1 goto label3;

        $r11 = new java.io.File;

        $r12 = $r9[i3];

        specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>($r10, $r12);

        $r13 = virtualinvoke $r11.<java.io.File: java.lang.String getAbsolutePath()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r11);

        i3 = i3 + 1;

        goto label2;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        $r4 = interfaceinvoke $r0.<java.util.Map: java.util.Collection values()>();

        return $r4;
    }

    public void execute() throws org.apache.tools.ant.BuildException
    {
        java.lang.Throwable $r8;
        java.util.Iterator $r2;
        java.util.Collection $r1;
        org.apache.tools.ant.BuildException $r7;
        java.io.File $r4;
        java.lang.Exception $r5;
        com.mycila.inject.internal.cglib.transform.AbstractProcessTask r0;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.cglib.transform.AbstractProcessTask;

        virtualinvoke r0.<com.mycila.inject.internal.cglib.transform.AbstractProcessTask: void beforeExecute()>();

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.cglib.transform.AbstractProcessTask: java.util.Collection getFiles()>();

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.io.File) $r3;

        virtualinvoke r0.<com.mycila.inject.internal.cglib.transform.AbstractProcessTask: void processFile(java.io.File)>($r4);

     label3:
        goto label1;

     label4:
        $r5 := @caughtexception;

        $r7 = new org.apache.tools.ant.BuildException;

        specialinvoke $r7.<org.apache.tools.ant.BuildException: void <init>(java.lang.Throwable)>($r5);

        $r8 = (java.lang.Throwable) $r7;

        throw $r8;

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    protected void beforeExecute() throws org.apache.tools.ant.BuildException
    {
        com.mycila.inject.internal.cglib.transform.AbstractProcessTask r0;

        r0 := @this: com.mycila.inject.internal.cglib.transform.AbstractProcessTask;

        return;
    }

    protected abstract void processFile(java.io.File) throws java.lang.Exception;
}
