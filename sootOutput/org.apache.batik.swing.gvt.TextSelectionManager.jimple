public class org.apache.batik.swing.gvt.TextSelectionManager extends java.lang.Object
{
    public static final java.awt.Cursor TEXT_CURSOR;
    protected org.apache.batik.gvt.text.ConcreteTextSelector textSelector;
    protected org.apache.batik.swing.gvt.AbstractJGVTComponent component;
    protected org.apache.batik.swing.gvt.Overlay selectionOverlay;
    protected org.apache.batik.swing.gvt.TextSelectionManager$MouseListener mouseListener;
    protected java.awt.Cursor previousCursor;
    protected java.awt.Shape selectionHighlight;
    protected org.apache.batik.gvt.event.SelectionListener textSelectionListener;
    protected java.awt.Color selectionOverlayColor;
    protected java.awt.Color selectionOverlayStrokeColor;
    protected boolean xorMode;
    java.lang.Object selection;

    public void <init>(org.apache.batik.swing.gvt.AbstractJGVTComponent, org.apache.batik.gvt.event.EventDispatcher)
    {
        java.awt.Color $r2, $r3;
        org.apache.batik.swing.gvt.TextSelectionManager$TextSelectionListener $r5;
        org.apache.batik.gvt.text.ConcreteTextSelector $r4, $r7;
        org.apache.batik.gvt.event.SelectionListener $r6;
        org.apache.batik.swing.gvt.TextSelectionManager$MouseListener $r8, $r14;
        org.apache.batik.swing.gvt.TextSelectionManager$SelectionOverlay $r1;
        org.apache.batik.swing.gvt.AbstractJGVTComponent r9, $r10;
        java.util.List $r11;
        org.apache.batik.swing.gvt.Overlay $r12;
        org.apache.batik.swing.gvt.TextSelectionManager r0;
        org.apache.batik.gvt.event.EventDispatcher r13;

        r0 := @this: org.apache.batik.swing.gvt.TextSelectionManager;

        r9 := @parameter0: org.apache.batik.swing.gvt.AbstractJGVTComponent;

        r13 := @parameter1: org.apache.batik.gvt.event.EventDispatcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.batik.swing.gvt.TextSelectionManager$SelectionOverlay;

        specialinvoke $r1.<org.apache.batik.swing.gvt.TextSelectionManager$SelectionOverlay: void <init>(org.apache.batik.swing.gvt.TextSelectionManager)>(r0);

        r0.<org.apache.batik.swing.gvt.TextSelectionManager: org.apache.batik.swing.gvt.Overlay selectionOverlay> = $r1;

        $r2 = new java.awt.Color;

        specialinvoke $r2.<java.awt.Color: void <init>(int,int,int,int)>(100, 100, 255, 100);

        r0.<org.apache.batik.swing.gvt.TextSelectionManager: java.awt.Color selectionOverlayColor> = $r2;

        $r3 = <java.awt.Color: java.awt.Color white>;

        r0.<org.apache.batik.swing.gvt.TextSelectionManager: java.awt.Color selectionOverlayStrokeColor> = $r3;

        r0.<org.apache.batik.swing.gvt.TextSelectionManager: boolean xorMode> = 0;

        r0.<org.apache.batik.swing.gvt.TextSelectionManager: java.lang.Object selection> = null;

        $r4 = new org.apache.batik.gvt.text.ConcreteTextSelector;

        specialinvoke $r4.<org.apache.batik.gvt.text.ConcreteTextSelector: void <init>()>();

        r0.<org.apache.batik.swing.gvt.TextSelectionManager: org.apache.batik.gvt.text.ConcreteTextSelector textSelector> = $r4;

        $r5 = new org.apache.batik.swing.gvt.TextSelectionManager$TextSelectionListener;

        specialinvoke $r5.<org.apache.batik.swing.gvt.TextSelectionManager$TextSelectionListener: void <init>(org.apache.batik.swing.gvt.TextSelectionManager)>(r0);

        r0.<org.apache.batik.swing.gvt.TextSelectionManager: org.apache.batik.gvt.event.SelectionListener textSelectionListener> = $r5;

        $r7 = r0.<org.apache.batik.swing.gvt.TextSelectionManager: org.apache.batik.gvt.text.ConcreteTextSelector textSelector>;

        $r6 = r0.<org.apache.batik.swing.gvt.TextSelectionManager: org.apache.batik.gvt.event.SelectionListener textSelectionListener>;

        virtualinvoke $r7.<org.apache.batik.gvt.text.ConcreteTextSelector: void addSelectionListener(org.apache.batik.gvt.event.SelectionListener)>($r6);

        $r8 = new org.apache.batik.swing.gvt.TextSelectionManager$MouseListener;

        specialinvoke $r8.<org.apache.batik.swing.gvt.TextSelectionManager$MouseListener: void <init>(org.apache.batik.swing.gvt.TextSelectionManager)>(r0);

        r0.<org.apache.batik.swing.gvt.TextSelectionManager: org.apache.batik.swing.gvt.TextSelectionManager$MouseListener mouseListener> = $r8;

        r0.<org.apache.batik.swing.gvt.TextSelectionManager: org.apache.batik.swing.gvt.AbstractJGVTComponent component> = r9;

        $r10 = r0.<org.apache.batik.swing.gvt.TextSelectionManager: org.apache.batik.swing.gvt.AbstractJGVTComponent component>;

        $r11 = virtualinvoke $r10.<org.apache.batik.swing.gvt.AbstractJGVTComponent: java.util.List getOverlays()>();

        $r12 = r0.<org.apache.batik.swing.gvt.TextSelectionManager: org.apache.batik.swing.gvt.Overlay selectionOverlay>;

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r14 = r0.<org.apache.batik.swing.gvt.TextSelectionManager: org.apache.batik.swing.gvt.TextSelectionManager$MouseListener mouseListener>;

        interfaceinvoke r13.<org.apache.batik.gvt.event.EventDispatcher: void addGraphicsNodeMouseListener(org.apache.batik.gvt.event.GraphicsNodeMouseListener)>($r14);

        return;
    }

    public void addSelectionListener(org.apache.batik.gvt.event.SelectionListener)
    {
        org.apache.batik.gvt.event.SelectionListener r1;
        org.apache.batik.gvt.text.ConcreteTextSelector $r2;
        org.apache.batik.swing.gvt.TextSelectionManager r0;

        r0 := @this: org.apache.batik.swing.gvt.TextSelectionManager;

        r1 := @parameter0: org.apache.batik.gvt.event.SelectionListener;

        $r2 = r0.<org.apache.batik.swing.gvt.TextSelectionManager: org.apache.batik.gvt.text.ConcreteTextSelector textSelector>;

        virtualinvoke $r2.<org.apache.batik.gvt.text.ConcreteTextSelector: void addSelectionListener(org.apache.batik.gvt.event.SelectionListener)>(r1);

        return;
    }

    public void removeSelectionListener(org.apache.batik.gvt.event.SelectionListener)
    {
        org.apache.batik.gvt.event.SelectionListener r1;
        org.apache.batik.gvt.text.ConcreteTextSelector $r2;
        org.apache.batik.swing.gvt.TextSelectionManager r0;

        r0 := @this: org.apache.batik.swing.gvt.TextSelectionManager;

        r1 := @parameter0: org.apache.batik.gvt.event.SelectionListener;

        $r2 = r0.<org.apache.batik.swing.gvt.TextSelectionManager: org.apache.batik.gvt.text.ConcreteTextSelector textSelector>;

        virtualinvoke $r2.<org.apache.batik.gvt.text.ConcreteTextSelector: void removeSelectionListener(org.apache.batik.gvt.event.SelectionListener)>(r1);

        return;
    }

    public void setSelectionOverlayColor(java.awt.Color)
    {
        java.awt.Color r1;
        org.apache.batik.swing.gvt.TextSelectionManager r0;

        r0 := @this: org.apache.batik.swing.gvt.TextSelectionManager;

        r1 := @parameter0: java.awt.Color;

        r0.<org.apache.batik.swing.gvt.TextSelectionManager: java.awt.Color selectionOverlayColor> = r1;

        return;
    }

    public java.awt.Color getSelectionOverlayColor()
    {
        java.awt.Color $r1;
        org.apache.batik.swing.gvt.TextSelectionManager r0;

        r0 := @this: org.apache.batik.swing.gvt.TextSelectionManager;

        $r1 = r0.<org.apache.batik.swing.gvt.TextSelectionManager: java.awt.Color selectionOverlayColor>;

        return $r1;
    }

    public void setSelectionOverlayStrokeColor(java.awt.Color)
    {
        java.awt.Color r1;
        org.apache.batik.swing.gvt.TextSelectionManager r0;

        r0 := @this: org.apache.batik.swing.gvt.TextSelectionManager;

        r1 := @parameter0: java.awt.Color;

        r0.<org.apache.batik.swing.gvt.TextSelectionManager: java.awt.Color selectionOverlayStrokeColor> = r1;

        return;
    }

    public java.awt.Color getSelectionOverlayStrokeColor()
    {
        java.awt.Color $r1;
        org.apache.batik.swing.gvt.TextSelectionManager r0;

        r0 := @this: org.apache.batik.swing.gvt.TextSelectionManager;

        $r1 = r0.<org.apache.batik.swing.gvt.TextSelectionManager: java.awt.Color selectionOverlayStrokeColor>;

        return $r1;
    }

    public void setSelectionOverlayXORMode(boolean)
    {
        org.apache.batik.swing.gvt.TextSelectionManager r0;
        boolean z0;

        r0 := @this: org.apache.batik.swing.gvt.TextSelectionManager;

        z0 := @parameter0: boolean;

        r0.<org.apache.batik.swing.gvt.TextSelectionManager: boolean xorMode> = z0;

        return;
    }

    public boolean isSelectionOverlayXORMode()
    {
        org.apache.batik.swing.gvt.TextSelectionManager r0;
        boolean $z0;

        r0 := @this: org.apache.batik.swing.gvt.TextSelectionManager;

        $z0 = r0.<org.apache.batik.swing.gvt.TextSelectionManager: boolean xorMode>;

        return $z0;
    }

    public org.apache.batik.swing.gvt.Overlay getSelectionOverlay()
    {
        org.apache.batik.swing.gvt.Overlay $r1;
        org.apache.batik.swing.gvt.TextSelectionManager r0;

        r0 := @this: org.apache.batik.swing.gvt.TextSelectionManager;

        $r1 = r0.<org.apache.batik.swing.gvt.TextSelectionManager: org.apache.batik.swing.gvt.Overlay selectionOverlay>;

        return $r1;
    }

    public java.lang.Object getSelection()
    {
        java.lang.Object $r1;
        org.apache.batik.swing.gvt.TextSelectionManager r0;

        r0 := @this: org.apache.batik.swing.gvt.TextSelectionManager;

        $r1 = r0.<org.apache.batik.swing.gvt.TextSelectionManager: java.lang.Object selection>;

        return $r1;
    }

    public void setSelection(org.apache.batik.gvt.text.Mark, org.apache.batik.gvt.text.Mark)
    {
        org.apache.batik.gvt.text.Mark r1, r2;
        org.apache.batik.gvt.text.ConcreteTextSelector $r3;
        org.apache.batik.swing.gvt.TextSelectionManager r0;

        r0 := @this: org.apache.batik.swing.gvt.TextSelectionManager;

        r1 := @parameter0: org.apache.batik.gvt.text.Mark;

        r2 := @parameter1: org.apache.batik.gvt.text.Mark;

        $r3 = r0.<org.apache.batik.swing.gvt.TextSelectionManager: org.apache.batik.gvt.text.ConcreteTextSelector textSelector>;

        virtualinvoke $r3.<org.apache.batik.gvt.text.ConcreteTextSelector: void setSelection(org.apache.batik.gvt.text.Mark,org.apache.batik.gvt.text.Mark)>(r1, r2);

        return;
    }

    public void clearSelection()
    {
        org.apache.batik.gvt.text.ConcreteTextSelector $r1;
        org.apache.batik.swing.gvt.TextSelectionManager r0;

        r0 := @this: org.apache.batik.swing.gvt.TextSelectionManager;

        $r1 = r0.<org.apache.batik.swing.gvt.TextSelectionManager: org.apache.batik.gvt.text.ConcreteTextSelector textSelector>;

        virtualinvoke $r1.<org.apache.batik.gvt.text.ConcreteTextSelector: void clearSelection()>();

        return;
    }

    protected java.awt.Rectangle outset(java.awt.Rectangle, int)
    {
        java.awt.Rectangle r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        org.apache.batik.swing.gvt.TextSelectionManager r1;

        r1 := @this: org.apache.batik.swing.gvt.TextSelectionManager;

        r0 := @parameter0: java.awt.Rectangle;

        i0 := @parameter1: int;

        $i1 = r0.<java.awt.Rectangle: int x>;

        $i2 = $i1 - i0;

        r0.<java.awt.Rectangle: int x> = $i2;

        $i3 = r0.<java.awt.Rectangle: int y>;

        $i4 = $i3 - i0;

        r0.<java.awt.Rectangle: int y> = $i4;

        $i6 = r0.<java.awt.Rectangle: int width>;

        $i5 = 2 * i0;

        $i7 = $i6 + $i5;

        r0.<java.awt.Rectangle: int width> = $i7;

        $i9 = r0.<java.awt.Rectangle: int height>;

        $i8 = 2 * i0;

        $i10 = $i9 + $i8;

        r0.<java.awt.Rectangle: int height> = $i10;

        return r0;
    }

    protected java.awt.Rectangle getHighlightBounds()
    {
        java.awt.Shape $r3, $r4;
        org.apache.batik.swing.gvt.AbstractJGVTComponent $r1;
        java.awt.Rectangle $r5, $r6;
        org.apache.batik.swing.gvt.TextSelectionManager r0;
        java.awt.geom.AffineTransform $r2;

        r0 := @this: org.apache.batik.swing.gvt.TextSelectionManager;

        $r1 = r0.<org.apache.batik.swing.gvt.TextSelectionManager: org.apache.batik.swing.gvt.AbstractJGVTComponent component>;

        $r2 = virtualinvoke $r1.<org.apache.batik.swing.gvt.AbstractJGVTComponent: java.awt.geom.AffineTransform getRenderingTransform()>();

        $r3 = r0.<org.apache.batik.swing.gvt.TextSelectionManager: java.awt.Shape selectionHighlight>;

        $r4 = virtualinvoke $r2.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>($r3);

        $r5 = interfaceinvoke $r4.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        $r6 = virtualinvoke r0.<org.apache.batik.swing.gvt.TextSelectionManager: java.awt.Rectangle outset(java.awt.Rectangle,int)>($r5, 1);

        return $r6;
    }

    static void <clinit>()
    {
        java.awt.Cursor $r0;

        $r0 = new java.awt.Cursor;

        specialinvoke $r0.<java.awt.Cursor: void <init>(int)>(2);

        <org.apache.batik.swing.gvt.TextSelectionManager: java.awt.Cursor TEXT_CURSOR> = $r0;

        return;
    }
}
