public class com.hp.hpl.jena.sparql.resultset.ResultSetPeeking extends java.lang.Object implements com.hp.hpl.jena.sparql.resultset.ResultSetPeekable, org.apache.jena.atlas.lib.Closeable
{
    private static final org.slf4j.Logger LOGGER;
    public static boolean warnOnSyncErrors;
    private com.hp.hpl.jena.query.ResultSet results;
    private com.hp.hpl.jena.rdf.model.Model model;
    private com.hp.hpl.jena.sparql.engine.binding.Binding peeked;
    private int rowNumber;

    public void <init>(com.hp.hpl.jena.query.ResultSet)
    {
        com.hp.hpl.jena.rdf.model.Model $r2;
        com.hp.hpl.jena.sparql.resultset.ResultSetPeeking r0;
        com.hp.hpl.jena.query.ResultSet r1;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.ResultSetPeeking;

        r1 := @parameter0: com.hp.hpl.jena.query.ResultSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.sparql.engine.binding.Binding peeked> = null;

        r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: int rowNumber> = 0;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Inner result set cannot be null");

        throw $r3;

     label1:
        r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.query.ResultSet results> = r1;

        $r2 = interfaceinvoke r1.<com.hp.hpl.jena.query.ResultSet: com.hp.hpl.jena.rdf.model.Model getResourceModel()>();

        r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.rdf.model.Model model> = $r2;

        return;
    }

    public boolean hasNext()
    {
        com.hp.hpl.jena.sparql.resultset.ResultSetPeeking r0;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.ResultSetPeeking;

        $z0 = specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: boolean hasPeeked()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: boolean canPeek()>();

        return $z1;
    }

    public com.hp.hpl.jena.query.QuerySolution next()
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r3;
        com.hp.hpl.jena.sparql.core.ResultBinding $r0;
        com.hp.hpl.jena.rdf.model.Model $r2;
        com.hp.hpl.jena.sparql.resultset.ResultSetPeeking r1;

        r1 := @this: com.hp.hpl.jena.sparql.resultset.ResultSetPeeking;

        $r0 = new com.hp.hpl.jena.sparql.core.ResultBinding;

        $r2 = r1.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.rdf.model.Model model>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.sparql.engine.binding.Binding nextBinding()>();

        specialinvoke $r0.<com.hp.hpl.jena.sparql.core.ResultBinding: void <init>(com.hp.hpl.jena.rdf.model.Model,com.hp.hpl.jena.sparql.engine.binding.Binding)>($r2, $r3);

        return $r0;
    }

    public com.hp.hpl.jena.query.QuerySolution nextSolution()
    {
        com.hp.hpl.jena.sparql.resultset.ResultSetPeeking r0;
        com.hp.hpl.jena.query.QuerySolution $r1;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.ResultSetPeeking;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.query.QuerySolution next()>();

        return $r1;
    }

    public com.hp.hpl.jena.sparql.engine.binding.Binding nextBinding()
    {
        com.hp.hpl.jena.sparql.resultset.ResultSetPeeking r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r2, r3;
        int $i0, $i1, $i2, $i3;
        java.util.NoSuchElementException $r1;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.ResultSetPeeking;

        $z0 = specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: boolean hasPeeked()>();

        if $z0 == 0 goto label1;

        r3 = r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.sparql.engine.binding.Binding peeked>;

        r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.sparql.engine.binding.Binding peeked> = null;

        $i2 = r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: int rowNumber>;

        $i3 = $i2 + 1;

        r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: int rowNumber> = $i3;

        return r3;

     label1:
        $z1 = specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: boolean canPeek()>();

        if $z1 == 0 goto label2;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.sparql.engine.binding.Binding peekBinding()>();

        r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.sparql.engine.binding.Binding peeked> = null;

        $i0 = r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: int rowNumber>;

        $i1 = $i0 + 1;

        r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: int rowNumber> = $i1;

        return $r2;

     label2:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;
    }

    public int getRowNumber()
    {
        int $i0, $i1;
        com.hp.hpl.jena.sparql.resultset.ResultSetPeeking r0;
        com.hp.hpl.jena.query.ResultSet $r1, $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.ResultSetPeeking;

        $z0 = specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: boolean hasPeeked()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.query.ResultSet results>;

        $i0 = interfaceinvoke $r2.<com.hp.hpl.jena.query.ResultSet: int getRowNumber()>();

        $i1 = $i0 - 1;

        goto label2;

     label1:
        $r1 = r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.query.ResultSet results>;

        $i1 = interfaceinvoke $r1.<com.hp.hpl.jena.query.ResultSet: int getRowNumber()>();

     label2:
        return $i1;
    }

    public java.util.List getResultVars()
    {
        com.hp.hpl.jena.sparql.resultset.ResultSetPeeking r0;
        java.util.List $r2;
        com.hp.hpl.jena.query.ResultSet $r1;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.ResultSetPeeking;

        $r1 = r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.query.ResultSet results>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.query.ResultSet: java.util.List getResultVars()>();

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Model getResourceModel()
    {
        com.hp.hpl.jena.rdf.model.Model $r1;
        com.hp.hpl.jena.sparql.resultset.ResultSetPeeking r0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.ResultSetPeeking;

        $r1 = r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.rdf.model.Model model>;

        return $r1;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        com.hp.hpl.jena.sparql.resultset.ResultSetPeeking r1;

        r1 := @this: com.hp.hpl.jena.sparql.resultset.ResultSetPeeking;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("remove() is not supported");

        throw $r0;
    }

    private boolean hasPeeked()
    {
        java.lang.IllegalStateException $r2;
        com.hp.hpl.jena.sparql.resultset.ResultSetPeeking r0;
        int $i0, $i1, i2, $i3, $i4;
        java.lang.String $r9;
        boolean $z0;
        org.slf4j.Logger $r5;
        com.hp.hpl.jena.query.ResultSet $r1, $r3;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r10;
        java.lang.StringBuilder $r4, $r6, $r7, $r8;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.ResultSetPeeking;

        $r1 = r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.query.ResultSet results>;

        $i0 = interfaceinvoke $r1.<com.hp.hpl.jena.query.ResultSet: int getRowNumber()>();

        $i1 = r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: int rowNumber>;

        i2 = $i0 - $i1;

        if i2 != 0 goto label1;

        return 0;

     label1:
        if i2 != 1 goto label2;

        $r10 = r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.sparql.engine.binding.Binding peeked>;

        if $r10 == null goto label2;

        return 1;

     label2:
        if i2 < 1 goto label4;

        $z0 = <com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: boolean warnOnSyncErrors>;

        if $z0 == 0 goto label3;

        $r5 = <com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: org.slf4j.Logger LOGGER>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Underlying result set was moved forward ");

        $i4 = i2 - 1;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" result(s), this result set was synced back up but some results have been missed");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void warn(java.lang.String)>($r9);

     label3:
        $r3 = r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.query.ResultSet results>;

        $i3 = interfaceinvoke $r3.<com.hp.hpl.jena.query.ResultSet: int getRowNumber()>();

        r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: int rowNumber> = $i3;

        r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.sparql.engine.binding.Binding peeked> = null;

        return 0;

     label4:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Underlying result set position has moved backwards, this result set is no longer usable");

        throw $r2;
    }

    private boolean canPeek()
    {
        com.hp.hpl.jena.sparql.resultset.ResultSetPeeking r0;
        com.hp.hpl.jena.query.ResultSet $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.ResultSetPeeking;

        $r1 = r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.query.ResultSet results>;

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.query.ResultSet: boolean hasNext()>();

        return $z0;
    }

    public com.hp.hpl.jena.query.QuerySolution peek()
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r3;
        com.hp.hpl.jena.sparql.core.ResultBinding $r0;
        com.hp.hpl.jena.rdf.model.Model $r2;
        com.hp.hpl.jena.sparql.resultset.ResultSetPeeking r1;

        r1 := @this: com.hp.hpl.jena.sparql.resultset.ResultSetPeeking;

        $r0 = new com.hp.hpl.jena.sparql.core.ResultBinding;

        $r2 = r1.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.rdf.model.Model model>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.sparql.engine.binding.Binding peekBinding()>();

        specialinvoke $r0.<com.hp.hpl.jena.sparql.core.ResultBinding: void <init>(com.hp.hpl.jena.rdf.model.Model,com.hp.hpl.jena.sparql.engine.binding.Binding)>($r2, $r3);

        return $r0;
    }

    public com.hp.hpl.jena.sparql.engine.binding.Binding peekBinding()
    {
        com.hp.hpl.jena.sparql.resultset.ResultSetPeeking r0;
        com.hp.hpl.jena.query.ResultSet $r2;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r3, $r4, $r5;
        java.util.NoSuchElementException $r1;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.ResultSetPeeking;

        $z0 = specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: boolean hasPeeked()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.sparql.engine.binding.Binding peeked>;

        return $r5;

     label1:
        $z1 = specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: boolean canPeek()>();

        if $z1 == 0 goto label2;

        $r2 = r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.query.ResultSet results>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.query.ResultSet: com.hp.hpl.jena.sparql.engine.binding.Binding nextBinding()>();

        r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.sparql.engine.binding.Binding peeked> = $r3;

        $r4 = r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.sparql.engine.binding.Binding peeked>;

        return $r4;

     label2:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;
    }

    public void close()
    {
        org.apache.jena.atlas.lib.Closeable $r3;
        com.hp.hpl.jena.sparql.resultset.ResultSetPeeking r0;
        com.hp.hpl.jena.query.ResultSet $r1, $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.ResultSetPeeking;

        $r1 = r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.query.ResultSet results>;

        $z0 = $r1 instanceof org.apache.jena.atlas.lib.Closeable;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.query.ResultSet results>;

        $r3 = (org.apache.jena.atlas.lib.Closeable) $r2;

        interfaceinvoke $r3.<org.apache.jena.atlas.lib.Closeable: void close()>();

     label1:
        return;
    }

    public volatile java.lang.Object next()
    {
        com.hp.hpl.jena.sparql.resultset.ResultSetPeeking r0;
        com.hp.hpl.jena.query.QuerySolution $r1;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.ResultSetPeeking;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: com.hp.hpl.jena.query.QuerySolution next()>();

        return $r1;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/hp/hpl/jena/sparql/resultset/ResultSetPeekable;");

        <com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: org.slf4j.Logger LOGGER> = $r0;

        <com.hp.hpl.jena.sparql.resultset.ResultSetPeeking: boolean warnOnSyncErrors> = 1;

        return;
    }
}
