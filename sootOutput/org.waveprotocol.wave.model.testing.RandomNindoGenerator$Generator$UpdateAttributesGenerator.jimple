class org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$UpdateAttributesGenerator extends org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$AttributesOnlyRandomMutationComponentGenerator
{
    final org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator this$0;

    void <init>(org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator)
    {
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$UpdateAttributesGenerator r0;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator r1;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$UpdateAttributesGenerator;

        r1 := @parameter0: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator;

        r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$UpdateAttributesGenerator: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator this$0> = r1;

        specialinvoke r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$AttributesOnlyRandomMutationComponentGenerator: void <init>(org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator)>(r1);

        return;
    }

    int potential()
    {
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$UpdateAttributesGenerator r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$UpdateAttributesGenerator;

        return 0;
    }

    org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult check(org.waveprotocol.wave.model.document.operation.Attributes, org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)
    {
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator $r1;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector r3;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$UpdateAttributesGenerator r0;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r5;
        org.waveprotocol.wave.model.document.operation.Attributes r2;
        org.waveprotocol.wave.model.document.operation.NindoAutomaton $r4;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$UpdateAttributesGenerator;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.Attributes;

        r3 := @parameter1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector;

        $r1 = r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$UpdateAttributesGenerator: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator this$0>;

        $r4 = $r1.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator: org.waveprotocol.wave.model.document.operation.NindoAutomaton a>;

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkUpdateAttributes(java.util.Map,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>(r2, r3);

        return $r5;
    }

    void apply(org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator $r1, $r4;
        org.waveprotocol.wave.model.document.operation.Nindo$NindoCursor $r5;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$UpdateAttributesGenerator r0;
        org.waveprotocol.wave.model.document.operation.Attributes r2;
        org.waveprotocol.wave.model.document.operation.NindoAutomaton $r3;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$UpdateAttributesGenerator;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.Attributes;

        $r1 = r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$UpdateAttributesGenerator: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator this$0>;

        $r3 = $r1.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator: org.waveprotocol.wave.model.document.operation.NindoAutomaton a>;

        virtualinvoke $r3.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: void doUpdateAttributes(java.util.Map)>(r2);

        $r4 = r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$UpdateAttributesGenerator: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator this$0>;

        $r5 = $r4.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator: org.waveprotocol.wave.model.document.operation.Nindo$NindoCursor targetDoc>;

        interfaceinvoke $r5.<org.waveprotocol.wave.model.document.operation.Nindo$NindoCursor: void updateAttributes(java.util.Map)>(r2);

        return;
    }
}
