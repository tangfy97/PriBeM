public class org.apache.commons.collections.map.TransformedMap extends org.apache.commons.collections.map.AbstractInputCheckedMapDecorator implements java.io.Serializable
{
    private static final long serialVersionUID;
    protected final org.apache.commons.collections.Transformer keyTransformer;
    protected final org.apache.commons.collections.Transformer valueTransformer;

    public static java.util.Map decorate(java.util.Map, org.apache.commons.collections.Transformer, org.apache.commons.collections.Transformer)
    {
        org.apache.commons.collections.Transformer r2, r3;
        java.util.Map r1;
        org.apache.commons.collections.map.TransformedMap $r0;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: org.apache.commons.collections.Transformer;

        r3 := @parameter2: org.apache.commons.collections.Transformer;

        $r0 = new org.apache.commons.collections.map.TransformedMap;

        specialinvoke $r0.<org.apache.commons.collections.map.TransformedMap: void <init>(java.util.Map,org.apache.commons.collections.Transformer,org.apache.commons.collections.Transformer)>(r1, r2, r3);

        return $r0;
    }

    public static java.util.Map decorateTransform(java.util.Map, org.apache.commons.collections.Transformer, org.apache.commons.collections.Transformer)
    {
        org.apache.commons.collections.Transformer r2, r3;
        java.util.Map r1, $r4, $r5;
        org.apache.commons.collections.map.TransformedMap $r0;
        int $i0;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: org.apache.commons.collections.Transformer;

        r3 := @parameter2: org.apache.commons.collections.Transformer;

        $r0 = new org.apache.commons.collections.map.TransformedMap;

        specialinvoke $r0.<org.apache.commons.collections.map.TransformedMap: void <init>(java.util.Map,org.apache.commons.collections.Transformer,org.apache.commons.collections.Transformer)>(r1, r2, r3);

        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        if $i0 <= 0 goto label1;

        $r4 = virtualinvoke $r0.<org.apache.commons.collections.map.TransformedMap: java.util.Map transformMap(java.util.Map)>(r1);

        virtualinvoke $r0.<org.apache.commons.collections.map.TransformedMap: void clear()>();

        $r5 = virtualinvoke $r0.<org.apache.commons.collections.map.TransformedMap: java.util.Map getMap()>();

        interfaceinvoke $r5.<java.util.Map: void putAll(java.util.Map)>($r4);

     label1:
        return $r0;
    }

    protected void <init>(java.util.Map, org.apache.commons.collections.Transformer, org.apache.commons.collections.Transformer)
    {
        org.apache.commons.collections.Transformer r2, r3;
        java.util.Map r1;
        org.apache.commons.collections.map.TransformedMap r0;

        r0 := @this: org.apache.commons.collections.map.TransformedMap;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: org.apache.commons.collections.Transformer;

        r3 := @parameter2: org.apache.commons.collections.Transformer;

        specialinvoke r0.<org.apache.commons.collections.map.AbstractInputCheckedMapDecorator: void <init>(java.util.Map)>(r1);

        r0.<org.apache.commons.collections.map.TransformedMap: org.apache.commons.collections.Transformer keyTransformer> = r2;

        r0.<org.apache.commons.collections.map.TransformedMap: org.apache.commons.collections.Transformer valueTransformer> = r3;

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.commons.collections.map.TransformedMap r1;
        java.io.ObjectOutputStream r0;
        java.util.Map $r2;

        r1 := @this: org.apache.commons.collections.map.TransformedMap;

        r0 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r0.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r2 = r1.<org.apache.commons.collections.map.TransformedMap: java.util.Map map>;

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.util.Map $r3;
        java.io.ObjectInputStream r0;
        org.apache.commons.collections.map.TransformedMap r1;
        java.lang.Object $r2;

        r1 := @this: org.apache.commons.collections.map.TransformedMap;

        r0 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = virtualinvoke r0.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r3 = (java.util.Map) $r2;

        r1.<org.apache.commons.collections.map.TransformedMap: java.util.Map map> = $r3;

        return;
    }

    protected java.lang.Object transformKey(java.lang.Object)
    {
        org.apache.commons.collections.Transformer $r1, $r3;
        org.apache.commons.collections.map.TransformedMap r0;
        java.lang.Object r2, $r4;

        r0 := @this: org.apache.commons.collections.map.TransformedMap;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.map.TransformedMap: org.apache.commons.collections.Transformer keyTransformer>;

        if $r1 != null goto label1;

        return r2;

     label1:
        $r3 = r0.<org.apache.commons.collections.map.TransformedMap: org.apache.commons.collections.Transformer keyTransformer>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.collections.Transformer: java.lang.Object transform(java.lang.Object)>(r2);

        return $r4;
    }

    protected java.lang.Object transformValue(java.lang.Object)
    {
        org.apache.commons.collections.Transformer $r1, $r3;
        org.apache.commons.collections.map.TransformedMap r0;
        java.lang.Object r2, $r4;

        r0 := @this: org.apache.commons.collections.map.TransformedMap;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.map.TransformedMap: org.apache.commons.collections.Transformer valueTransformer>;

        if $r1 != null goto label1;

        return r2;

     label1:
        $r3 = r0.<org.apache.commons.collections.map.TransformedMap: org.apache.commons.collections.Transformer valueTransformer>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.collections.Transformer: java.lang.Object transform(java.lang.Object)>(r2);

        return $r4;
    }

    protected java.util.Map transformMap(java.util.Map)
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.Map r0;
        int $i0;
        org.apache.commons.collections.map.TransformedMap r6;
        java.lang.Object $r4, $r7, $r8, $r9, $r10;
        org.apache.commons.collections.map.LinkedMap $r1;
        boolean $z0, $z1;

        r6 := @this: org.apache.commons.collections.map.TransformedMap;

        r0 := @parameter0: java.util.Map;

        $z0 = interfaceinvoke r0.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r1 = new org.apache.commons.collections.map.LinkedMap;

        $i0 = interfaceinvoke r0.<java.util.Map: int size()>();

        specialinvoke $r1.<org.apache.commons.collections.map.LinkedMap: void <init>(int)>($i0);

        $r2 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r7 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = virtualinvoke r6.<org.apache.commons.collections.map.TransformedMap: java.lang.Object transformKey(java.lang.Object)>($r7);

        $r9 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = virtualinvoke r6.<org.apache.commons.collections.map.TransformedMap: java.lang.Object transformValue(java.lang.Object)>($r9);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r10);

        goto label2;

     label3:
        return $r1;
    }

    protected java.lang.Object checkSetValue(java.lang.Object)
    {
        org.apache.commons.collections.Transformer $r2;
        org.apache.commons.collections.map.TransformedMap r0;
        java.lang.Object r1, $r3;

        r0 := @this: org.apache.commons.collections.map.TransformedMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.map.TransformedMap: org.apache.commons.collections.Transformer valueTransformer>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.collections.Transformer: java.lang.Object transform(java.lang.Object)>(r1);

        return $r3;
    }

    protected boolean isSetValueChecking()
    {
        org.apache.commons.collections.map.TransformedMap r0;
        org.apache.commons.collections.Transformer $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.TransformedMap;

        $r1 = r0.<org.apache.commons.collections.map.TransformedMap: org.apache.commons.collections.Transformer valueTransformer>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        java.util.Map $r3;
        org.apache.commons.collections.map.TransformedMap r0;
        java.lang.Object $r1, $r2, $r4, r5, r6;

        r0 := @this: org.apache.commons.collections.map.TransformedMap;

        r5 := @parameter0: java.lang.Object;

        r6 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.map.TransformedMap: java.lang.Object transformKey(java.lang.Object)>(r5);

        $r2 = virtualinvoke r0.<org.apache.commons.collections.map.TransformedMap: java.lang.Object transformValue(java.lang.Object)>(r6);

        $r3 = virtualinvoke r0.<org.apache.commons.collections.map.TransformedMap: java.util.Map getMap()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return $r4;
    }

    public void putAll(java.util.Map)
    {
        java.util.Map $r1, $r2, r3;
        org.apache.commons.collections.map.TransformedMap r0;

        r0 := @this: org.apache.commons.collections.map.TransformedMap;

        r3 := @parameter0: java.util.Map;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.map.TransformedMap: java.util.Map transformMap(java.util.Map)>(r3);

        $r2 = virtualinvoke r0.<org.apache.commons.collections.map.TransformedMap: java.util.Map getMap()>();

        interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>($r1);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections.map.TransformedMap: long serialVersionUID> = 7023152376788900464L;

        return;
    }
}
