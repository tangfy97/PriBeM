public final class org.apache.poi.hssf.record.MergeCellsRecord extends org.apache.poi.hssf.record.StandardRecord
{
    public static final short sid;
    private org.apache.poi.ss.util.CellRangeAddress[] _regions;
    private final int _startIndex;
    private final int _numberOfRegions;

    public void <init>(org.apache.poi.ss.util.CellRangeAddress[], int, int)
    {
        org.apache.poi.hssf.record.MergeCellsRecord r0;
        int i0, i1;
        org.apache.poi.ss.util.CellRangeAddress[] r1;

        r0 := @this: org.apache.poi.hssf.record.MergeCellsRecord;

        r1 := @parameter0: org.apache.poi.ss.util.CellRangeAddress[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.poi.hssf.record.StandardRecord: void <init>()>();

        r0.<org.apache.poi.hssf.record.MergeCellsRecord: org.apache.poi.ss.util.CellRangeAddress[] _regions> = r1;

        r0.<org.apache.poi.hssf.record.MergeCellsRecord: int _startIndex> = i0;

        r0.<org.apache.poi.hssf.record.MergeCellsRecord: int _numberOfRegions> = i1;

        return;
    }

    public void <init>(org.apache.poi.hssf.record.RecordInputStream)
    {
        org.apache.poi.ss.util.CellRangeAddress $r3;
        org.apache.poi.hssf.record.RecordInputStream r1;
        org.apache.poi.hssf.record.MergeCellsRecord r0;
        int $i0, i1;
        org.apache.poi.ss.util.CellRangeAddress[] r2;

        r0 := @this: org.apache.poi.hssf.record.MergeCellsRecord;

        r1 := @parameter0: org.apache.poi.hssf.record.RecordInputStream;

        specialinvoke r0.<org.apache.poi.hssf.record.StandardRecord: void <init>()>();

        $i0 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int readUShort()>();

        r2 = newarray (org.apache.poi.ss.util.CellRangeAddress)[$i0];

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r3 = new org.apache.poi.ss.util.CellRangeAddress;

        specialinvoke $r3.<org.apache.poi.ss.util.CellRangeAddress: void <init>(org.apache.poi.hssf.record.RecordInputStream)>(r1);

        r2[i1] = $r3;

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<org.apache.poi.hssf.record.MergeCellsRecord: int _numberOfRegions> = $i0;

        r0.<org.apache.poi.hssf.record.MergeCellsRecord: int _startIndex> = 0;

        r0.<org.apache.poi.hssf.record.MergeCellsRecord: org.apache.poi.ss.util.CellRangeAddress[] _regions> = r2;

        return;
    }

    public short getNumAreas()
    {
        int $i0;
        short $s1;
        org.apache.poi.hssf.record.MergeCellsRecord r0;

        r0 := @this: org.apache.poi.hssf.record.MergeCellsRecord;

        $i0 = r0.<org.apache.poi.hssf.record.MergeCellsRecord: int _numberOfRegions>;

        $s1 = (short) $i0;

        return $s1;
    }

    public org.apache.poi.ss.util.CellRangeAddress getAreaAt(int)
    {
        org.apache.poi.ss.util.CellRangeAddress $r2;
        org.apache.poi.hssf.record.MergeCellsRecord r0;
        int i0, $i1, $i2;
        org.apache.poi.ss.util.CellRangeAddress[] $r1;

        r0 := @this: org.apache.poi.hssf.record.MergeCellsRecord;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hssf.record.MergeCellsRecord: org.apache.poi.ss.util.CellRangeAddress[] _regions>;

        $i1 = r0.<org.apache.poi.hssf.record.MergeCellsRecord: int _startIndex>;

        $i2 = $i1 + i0;

        $r2 = $r1[$i2];

        return $r2;
    }

    protected int getDataSize()
    {
        int $i0, $i1;
        org.apache.poi.hssf.record.MergeCellsRecord r0;

        r0 := @this: org.apache.poi.hssf.record.MergeCellsRecord;

        $i0 = r0.<org.apache.poi.hssf.record.MergeCellsRecord: int _numberOfRegions>;

        $i1 = staticinvoke <org.apache.poi.ss.util.CellRangeAddressList: int getEncodedSize(int)>($i0);

        return $i1;
    }

    public short getSid()
    {
        org.apache.poi.hssf.record.MergeCellsRecord r0;

        r0 := @this: org.apache.poi.hssf.record.MergeCellsRecord;

        return 229;
    }

    public void serialize(org.apache.poi.util.LittleEndianOutput)
    {
        org.apache.poi.ss.util.CellRangeAddress $r3;
        org.apache.poi.hssf.record.MergeCellsRecord r0;
        org.apache.poi.ss.util.CellRangeAddress[] $r2;
        org.apache.poi.util.LittleEndianOutput r1;
        int i0, $i1, $i2, $i3, i4;

        r0 := @this: org.apache.poi.hssf.record.MergeCellsRecord;

        r1 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        i0 = r0.<org.apache.poi.hssf.record.MergeCellsRecord: int _numberOfRegions>;

        interfaceinvoke r1.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>(i0);

        i4 = 0;

     label1:
        $i1 = r0.<org.apache.poi.hssf.record.MergeCellsRecord: int _numberOfRegions>;

        if i4 >= $i1 goto label2;

        $r2 = r0.<org.apache.poi.hssf.record.MergeCellsRecord: org.apache.poi.ss.util.CellRangeAddress[] _regions>;

        $i2 = r0.<org.apache.poi.hssf.record.MergeCellsRecord: int _startIndex>;

        $i3 = $i2 + i4;

        $r3 = $r2[$i3];

        virtualinvoke $r3.<org.apache.poi.ss.util.CellRangeAddress: void serialize(org.apache.poi.util.LittleEndianOutput)>(r1);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    public java.lang.String toString()
    {
        org.apache.poi.hssf.record.MergeCellsRecord r3;
        org.apache.poi.ss.util.CellRangeAddress[] $r7;
        short $s0;
        java.lang.StringBuffer $r1, $r2, $r4, $r5, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9;
        java.lang.String $r6;
        org.apache.poi.ss.util.CellRangeAddress r8;

        r3 := @this: org.apache.poi.hssf.record.MergeCellsRecord;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[MERGEDCELLS]");

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r2 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("     .numregions =");

        $s0 = virtualinvoke r3.<org.apache.poi.hssf.record.MergeCellsRecord: short getNumAreas()>();

        $i9 = (int) $s0;

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i9);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        i8 = 0;

     label1:
        $i1 = r3.<org.apache.poi.hssf.record.MergeCellsRecord: int _numberOfRegions>;

        if i8 >= $i1 goto label2;

        $r7 = r3.<org.apache.poi.hssf.record.MergeCellsRecord: org.apache.poi.ss.util.CellRangeAddress[] _regions>;

        $i2 = r3.<org.apache.poi.hssf.record.MergeCellsRecord: int _startIndex>;

        $i3 = $i2 + i8;

        r8 = $r7[$i3];

        $r9 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("     .rowfrom =");

        $i4 = virtualinvoke r8.<org.apache.poi.ss.util.CellRangeAddress: int getFirstRow()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r11 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("     .rowto   =");

        $i5 = virtualinvoke r8.<org.apache.poi.ss.util.CellRangeAddress: int getLastRow()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i5);

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r13 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("     .colfrom =");

        $i6 = virtualinvoke r8.<org.apache.poi.ss.util.CellRangeAddress: int getFirstColumn()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i6);

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r15 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("     .colto   =");

        $i7 = virtualinvoke r8.<org.apache.poi.ss.util.CellRangeAddress: int getLastColumn()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i7);

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        i8 = i8 + 1;

        goto label1;

     label2:
        $r5 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[MERGEDCELLS]");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r6 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    public java.lang.Object clone()
    {
        org.apache.poi.ss.util.CellRangeAddress $r4, $r5;
        org.apache.poi.hssf.record.MergeCellsRecord r0, $r2;
        org.apache.poi.ss.util.CellRangeAddress[] r1, $r3;
        int i0, $i1, $i2, $i3, i4;

        r0 := @this: org.apache.poi.hssf.record.MergeCellsRecord;

        i0 = r0.<org.apache.poi.hssf.record.MergeCellsRecord: int _numberOfRegions>;

        r1 = newarray (org.apache.poi.ss.util.CellRangeAddress)[i0];

        i4 = 0;

     label1:
        $i1 = lengthof r1;

        if i4 >= $i1 goto label2;

        $r3 = r0.<org.apache.poi.hssf.record.MergeCellsRecord: org.apache.poi.ss.util.CellRangeAddress[] _regions>;

        $i2 = r0.<org.apache.poi.hssf.record.MergeCellsRecord: int _startIndex>;

        $i3 = $i2 + i4;

        $r4 = $r3[$i3];

        $r5 = virtualinvoke $r4.<org.apache.poi.ss.util.CellRangeAddress: org.apache.poi.ss.util.CellRangeAddress copy()>();

        r1[i4] = $r5;

        i4 = i4 + 1;

        goto label1;

     label2:
        $r2 = new org.apache.poi.hssf.record.MergeCellsRecord;

        specialinvoke $r2.<org.apache.poi.hssf.record.MergeCellsRecord: void <init>(org.apache.poi.ss.util.CellRangeAddress[],int,int)>(r1, 0, i0);

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.poi.hssf.record.MergeCellsRecord: short sid> = 229;

        return;
    }
}
