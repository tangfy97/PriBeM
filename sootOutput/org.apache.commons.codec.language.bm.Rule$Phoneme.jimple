public final class org.apache.commons.codec.language.bm.Rule$Phoneme extends java.lang.Object implements org.apache.commons.codec.language.bm.Rule$PhonemeExpr
{
    public static final java.util.Comparator COMPARATOR;
    private final java.lang.CharSequence phonemeText;
    private final org.apache.commons.codec.language.bm.Languages$LanguageSet languages;

    public void <init>(java.lang.CharSequence, org.apache.commons.codec.language.bm.Languages$LanguageSet)
    {
        org.apache.commons.codec.language.bm.Languages$LanguageSet r2;
        java.lang.CharSequence r1;
        org.apache.commons.codec.language.bm.Rule$Phoneme r0;

        r0 := @this: org.apache.commons.codec.language.bm.Rule$Phoneme;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: org.apache.commons.codec.language.bm.Languages$LanguageSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.codec.language.bm.Rule$Phoneme: java.lang.CharSequence phonemeText> = r1;

        r0.<org.apache.commons.codec.language.bm.Rule$Phoneme: org.apache.commons.codec.language.bm.Languages$LanguageSet languages> = r2;

        return;
    }

    public org.apache.commons.codec.language.bm.Rule$Phoneme append(java.lang.CharSequence)
    {
        java.lang.CharSequence $r3, r6;
        org.apache.commons.codec.language.bm.Rule$Phoneme $r0, r2;
        org.apache.commons.codec.language.bm.Languages$LanguageSet $r10;
        java.lang.StringBuilder $r1, $r5, $r8;
        java.lang.String $r4, $r7, $r9;

        r2 := @this: org.apache.commons.codec.language.bm.Rule$Phoneme;

        r6 := @parameter0: java.lang.CharSequence;

        $r0 = new org.apache.commons.codec.language.bm.Rule$Phoneme;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = r2.<org.apache.commons.codec.language.bm.Rule$Phoneme: java.lang.CharSequence phonemeText>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = r2.<org.apache.commons.codec.language.bm.Rule$Phoneme: org.apache.commons.codec.language.bm.Languages$LanguageSet languages>;

        specialinvoke $r0.<org.apache.commons.codec.language.bm.Rule$Phoneme: void <init>(java.lang.CharSequence,org.apache.commons.codec.language.bm.Languages$LanguageSet)>($r9, $r10);

        return $r0;
    }

    public org.apache.commons.codec.language.bm.Languages$LanguageSet getLanguages()
    {
        org.apache.commons.codec.language.bm.Languages$LanguageSet $r1;
        org.apache.commons.codec.language.bm.Rule$Phoneme r0;

        r0 := @this: org.apache.commons.codec.language.bm.Rule$Phoneme;

        $r1 = r0.<org.apache.commons.codec.language.bm.Rule$Phoneme: org.apache.commons.codec.language.bm.Languages$LanguageSet languages>;

        return $r1;
    }

    public java.lang.Iterable getPhonemes()
    {
        java.util.Set $r1;
        org.apache.commons.codec.language.bm.Rule$Phoneme r0;

        r0 := @this: org.apache.commons.codec.language.bm.Rule$Phoneme;

        $r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r0);

        return $r1;
    }

    public java.lang.CharSequence getPhonemeText()
    {
        java.lang.CharSequence $r1;
        org.apache.commons.codec.language.bm.Rule$Phoneme r0;

        r0 := @this: org.apache.commons.codec.language.bm.Rule$Phoneme;

        $r1 = r0.<org.apache.commons.codec.language.bm.Rule$Phoneme: java.lang.CharSequence phonemeText>;

        return $r1;
    }

    public org.apache.commons.codec.language.bm.Rule$Phoneme join(org.apache.commons.codec.language.bm.Rule$Phoneme)
    {
        java.lang.CharSequence $r3, $r7;
        org.apache.commons.codec.language.bm.Rule$Phoneme $r0, r2, r6;
        org.apache.commons.codec.language.bm.Languages$LanguageSet $r11, $r12, $r13;
        java.lang.StringBuilder $r1, $r5, $r9;
        java.lang.String $r4, $r8, $r10;

        r2 := @this: org.apache.commons.codec.language.bm.Rule$Phoneme;

        r6 := @parameter0: org.apache.commons.codec.language.bm.Rule$Phoneme;

        $r0 = new org.apache.commons.codec.language.bm.Rule$Phoneme;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = r2.<org.apache.commons.codec.language.bm.Rule$Phoneme: java.lang.CharSequence phonemeText>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = r6.<org.apache.commons.codec.language.bm.Rule$Phoneme: java.lang.CharSequence phonemeText>;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = r2.<org.apache.commons.codec.language.bm.Rule$Phoneme: org.apache.commons.codec.language.bm.Languages$LanguageSet languages>;

        $r11 = r6.<org.apache.commons.codec.language.bm.Rule$Phoneme: org.apache.commons.codec.language.bm.Languages$LanguageSet languages>;

        $r13 = virtualinvoke $r12.<org.apache.commons.codec.language.bm.Languages$LanguageSet: org.apache.commons.codec.language.bm.Languages$LanguageSet restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)>($r11);

        specialinvoke $r0.<org.apache.commons.codec.language.bm.Rule$Phoneme: void <init>(java.lang.CharSequence,org.apache.commons.codec.language.bm.Languages$LanguageSet)>($r10, $r13);

        return $r0;
    }

    static java.lang.CharSequence access$000(org.apache.commons.codec.language.bm.Rule$Phoneme)
    {
        java.lang.CharSequence $r1;
        org.apache.commons.codec.language.bm.Rule$Phoneme r0;

        r0 := @parameter0: org.apache.commons.codec.language.bm.Rule$Phoneme;

        $r1 = r0.<org.apache.commons.codec.language.bm.Rule$Phoneme: java.lang.CharSequence phonemeText>;

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.commons.codec.language.bm.Rule$Phoneme$1 $r0;

        $r0 = new org.apache.commons.codec.language.bm.Rule$Phoneme$1;

        specialinvoke $r0.<org.apache.commons.codec.language.bm.Rule$Phoneme$1: void <init>()>();

        <org.apache.commons.codec.language.bm.Rule$Phoneme: java.util.Comparator COMPARATOR> = $r0;

        return;
    }
}
