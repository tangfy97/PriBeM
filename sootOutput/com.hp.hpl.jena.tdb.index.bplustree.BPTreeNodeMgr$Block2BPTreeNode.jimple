class com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr$Block2BPTreeNode extends java.lang.Object implements com.hp.hpl.jena.tdb.base.block.BlockConverter
{
    private final com.hp.hpl.jena.tdb.index.bplustree.BPlusTree bpTree;

    void <init>(com.hp.hpl.jena.tdb.index.bplustree.BPlusTree)
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr$Block2BPTreeNode r0;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree r1;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr$Block2BPTreeNode;

        r1 := @parameter0: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr$Block2BPTreeNode: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree bpTree> = r1;

        return;
    }

    public com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode createFromBlock(com.hp.hpl.jena.tdb.base.block.Block, com.hp.hpl.jena.tdb.base.block.BlockType)
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode $r5;
        com.hp.hpl.jena.tdb.base.block.BlockType r2, $r3;
        com.hp.hpl.jena.tdb.base.block.Block r1;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr$Block2BPTreeNode r0;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree $r4;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr$Block2BPTreeNode;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.block.Block;

        r2 := @parameter1: com.hp.hpl.jena.tdb.base.block.BlockType;

        $r4 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr$Block2BPTreeNode: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree bpTree>;

        $r3 = <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType RECORD_BLOCK>;

        if r2 != $r3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r5 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode access$000(com.hp.hpl.jena.tdb.index.bplustree.BPlusTree,com.hp.hpl.jena.tdb.base.block.Block,boolean,int)>($r4, r1, $z0, 0);

        return $r5;
    }

    public com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode fromBlock(com.hp.hpl.jena.tdb.base.block.Block)
    {
        java.lang.Throwable $r14;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr$Block2BPTreeNode r4;
        java.nio.ByteBuffer $r1;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeException $r9;
        int $i0, $i1;
        java.lang.String $r13;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree $r6;
        boolean $z0;
        com.hp.hpl.jena.tdb.base.block.BlockType $r2, $r3, $r5, $r8;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode $r7;
        com.hp.hpl.jena.tdb.base.block.Block r0;
        java.lang.StringBuilder $r10, $r11, $r12;

        r4 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr$Block2BPTreeNode;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.block.Block;

        entermonitor r0;

     label1:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.block.Block: java.nio.ByteBuffer getByteBuffer()>();

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int getInt(int)>(0);

        $r2 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr: com.hp.hpl.jena.tdb.base.block.BlockType access$100(int)>($i0);

        $r3 = <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType BPTREE_BRANCH>;

        if $r2 == $r3 goto label2;

        $r8 = <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType BPTREE_LEAF>;

        if $r2 == $r8 goto label2;

        $r9 = new com.hp.hpl.jena.tdb.index.bplustree.BPTreeException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong block type: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label2:
        $i1 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr: int access$200(int)>($i0);

        $r6 = r4.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr$Block2BPTreeNode: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree bpTree>;

        $r5 = <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType BPTREE_LEAF>;

        if $r2 != $r5 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        $r7 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode access$000(com.hp.hpl.jena.tdb.index.bplustree.BPlusTree,com.hp.hpl.jena.tdb.base.block.Block,boolean,int)>($r6, r0, $z0, $i1);

        exitmonitor r0;

     label5:
        return $r7;

     label6:
        $r14 := @caughtexception;

        exitmonitor r0;

     label7:
        throw $r14;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public com.hp.hpl.jena.tdb.base.block.Block toBlock(com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode)
    {
        com.hp.hpl.jena.tdb.base.block.BlockType $r4;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr$Block2BPTreeNode r3;
        java.nio.ByteBuffer $r2;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode r0;
        com.hp.hpl.jena.tdb.base.block.Block $r1;
        int $i0, $i1;
        boolean $z0;

        r3 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr$Block2BPTreeNode;

        r0 := @parameter0: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: com.hp.hpl.jena.tdb.base.block.Block getBackingBlock()>();

        $z0 = r0.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: boolean isLeaf>;

        if $z0 == 0 goto label1;

        $r4 = <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType BPTREE_LEAF>;

        goto label2;

     label1:
        $r4 = <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType BPTREE_BRANCH>;

     label2:
        $i0 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode: int getCount()>();

        $i1 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr: int access$300(com.hp.hpl.jena.tdb.base.block.BlockType,int)>($r4, $i0);

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.block.Block: java.nio.ByteBuffer getByteBuffer()>();

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int,int)>(0, $i1);

        return $r1;
    }

    public volatile com.hp.hpl.jena.tdb.base.page.Page createFromBlock(com.hp.hpl.jena.tdb.base.block.Block, com.hp.hpl.jena.tdb.base.block.BlockType)
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode $r3;
        com.hp.hpl.jena.tdb.base.block.BlockType r2;
        com.hp.hpl.jena.tdb.base.block.Block r1;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr$Block2BPTreeNode r0;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr$Block2BPTreeNode;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.block.Block;

        r2 := @parameter1: com.hp.hpl.jena.tdb.base.block.BlockType;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr$Block2BPTreeNode: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode createFromBlock(com.hp.hpl.jena.tdb.base.block.Block,com.hp.hpl.jena.tdb.base.block.BlockType)>(r1, r2);

        return $r3;
    }

    public volatile com.hp.hpl.jena.tdb.base.block.Block toBlock(com.hp.hpl.jena.tdb.base.page.Page)
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode $r2;
        com.hp.hpl.jena.tdb.base.page.Page r1;
        com.hp.hpl.jena.tdb.base.block.Block $r3;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr$Block2BPTreeNode r0;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr$Block2BPTreeNode;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.page.Page;

        $r2 = (com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode) r1;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr$Block2BPTreeNode: com.hp.hpl.jena.tdb.base.block.Block toBlock(com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode)>($r2);

        return $r3;
    }

    public volatile com.hp.hpl.jena.tdb.base.page.Page fromBlock(com.hp.hpl.jena.tdb.base.block.Block)
    {
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr$Block2BPTreeNode r0;
        com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode $r2;
        com.hp.hpl.jena.tdb.base.block.Block r1;

        r0 := @this: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr$Block2BPTreeNode;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.block.Block;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.bplustree.BPTreeNodeMgr$Block2BPTreeNode: com.hp.hpl.jena.tdb.index.bplustree.BPTreeNode fromBlock(com.hp.hpl.jena.tdb.base.block.Block)>(r1);

        return $r2;
    }
}
