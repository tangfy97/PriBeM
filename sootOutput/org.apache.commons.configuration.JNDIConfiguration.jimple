public class org.apache.commons.configuration.JNDIConfiguration extends org.apache.commons.configuration.AbstractConfiguration
{
    private java.lang.String prefix;
    private javax.naming.Context context;
    private javax.naming.Context baseContext;
    private java.util.Set clearedProperties;

    public void <init>() throws javax.naming.NamingException
    {
        org.apache.commons.configuration.JNDIConfiguration r0;

        r0 := @this: org.apache.commons.configuration.JNDIConfiguration;

        specialinvoke r0.<org.apache.commons.configuration.JNDIConfiguration: void <init>(java.lang.String)>(null);

        return;
    }

    public void <init>(java.lang.String) throws javax.naming.NamingException
    {
        javax.naming.InitialContext $r1;
        java.lang.String r2;
        org.apache.commons.configuration.JNDIConfiguration r0;

        r0 := @this: org.apache.commons.configuration.JNDIConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = new javax.naming.InitialContext;

        specialinvoke $r1.<javax.naming.InitialContext: void <init>()>();

        specialinvoke r0.<org.apache.commons.configuration.JNDIConfiguration: void <init>(javax.naming.Context,java.lang.String)>($r1, r2);

        return;
    }

    public void <init>(javax.naming.Context)
    {
        javax.naming.Context r1;
        org.apache.commons.configuration.JNDIConfiguration r0;

        r0 := @this: org.apache.commons.configuration.JNDIConfiguration;

        r1 := @parameter0: javax.naming.Context;

        specialinvoke r0.<org.apache.commons.configuration.JNDIConfiguration: void <init>(javax.naming.Context,java.lang.String)>(r1, null);

        return;
    }

    public void <init>(javax.naming.Context, java.lang.String)
    {
        java.util.HashSet $r1;
        org.apache.commons.configuration.JNDIConfiguration r0;
        java.lang.Class $r4;
        org.apache.commons.logging.Log $r5;
        javax.naming.Context r2;
        java.lang.String r3;

        r0 := @this: org.apache.commons.configuration.JNDIConfiguration;

        r2 := @parameter0: javax.naming.Context;

        r3 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.commons.configuration.AbstractConfiguration: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.apache.commons.configuration.JNDIConfiguration: java.util.Set clearedProperties> = $r1;

        r0.<org.apache.commons.configuration.JNDIConfiguration: javax.naming.Context context> = r2;

        r0.<org.apache.commons.configuration.JNDIConfiguration: java.lang.String prefix> = r3;

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r4);

        virtualinvoke r0.<org.apache.commons.configuration.JNDIConfiguration: void setLogger(org.apache.commons.logging.Log)>($r5);

        virtualinvoke r0.<org.apache.commons.configuration.JNDIConfiguration: void addErrorLogListener()>();

        return;
    }

    private void recursiveGetKeys(java.util.Set, javax.naming.Context, java.lang.String, java.util.Set) throws javax.naming.NamingException
    {
        java.lang.Throwable $r14;
        org.apache.commons.configuration.JNDIConfiguration r12;
        java.lang.StringBuffer $r7;
        int $i0;
        javax.naming.Context r1, r11;
        java.lang.String $r5, r8, $r10, $r13;
        boolean $z0, $z1, $z2;
        javax.naming.NameClassPair r4;
        java.util.Set r0, r9;
        javax.naming.NamingEnumeration $r2, r15;
        java.lang.Object $r3, $r6;

        r12 := @this: org.apache.commons.configuration.JNDIConfiguration;

        r9 := @parameter0: java.util.Set;

        r1 := @parameter1: javax.naming.Context;

        r8 := @parameter2: java.lang.String;

        r0 := @parameter3: java.util.Set;

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>(r1);

        r15 = null;

     label01:
        $r2 = interfaceinvoke r1.<javax.naming.Context: javax.naming.NamingEnumeration list(java.lang.String)>("");

        r15 = $r2;

     label02:
        $z0 = interfaceinvoke $r2.<javax.naming.NamingEnumeration: boolean hasMore()>();

        if $z0 == 0 goto label07;

        $r3 = interfaceinvoke $r2.<javax.naming.NamingEnumeration: java.lang.Object next()>();

        r4 = (javax.naming.NameClassPair) $r3;

        $r5 = virtualinvoke r4.<javax.naming.NameClassPair: java.lang.String getName()>();

        $r6 = interfaceinvoke r1.<javax.naming.Context: java.lang.Object lookup(java.lang.String)>($r5);

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r8);

        $i0 = virtualinvoke $r7.<java.lang.StringBuffer: int length()>();

        if $i0 <= 0 goto label03;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

     label03:
        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $z1 = $r6 instanceof javax.naming.Context;

        if $z1 == 0 goto label05;

        r11 = (javax.naming.Context) $r6;

        $z2 = interfaceinvoke r0.<java.util.Set: boolean contains(java.lang.Object)>(r11);

        if $z2 != 0 goto label04;

        $r13 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r12.<org.apache.commons.configuration.JNDIConfiguration: void recursiveGetKeys(java.util.Set,javax.naming.Context,java.lang.String,java.util.Set)>(r9, r11, $r13, r0);

     label04:
        goto label06;

     label05:
        $r10 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r9.<java.util.Set: boolean add(java.lang.Object)>($r10);

     label06:
        goto label02;

     label07:
        if $r2 == null goto label11;

        interfaceinvoke $r2.<javax.naming.NamingEnumeration: void close()>();

        goto label11;

     label08:
        $r14 := @caughtexception;

     label09:
        if r15 == null goto label10;

        interfaceinvoke r15.<javax.naming.NamingEnumeration: void close()>();

     label10:
        throw $r14;

     label11:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public java.util.Iterator getKeys()
    {
        java.util.Iterator $r1;
        org.apache.commons.configuration.JNDIConfiguration r0;

        r0 := @this: org.apache.commons.configuration.JNDIConfiguration;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.JNDIConfiguration: java.util.Iterator getKeys(java.lang.String)>("");

        return $r1;
    }

    public java.util.Iterator getKeys(java.lang.String)
    {
        org.apache.commons.configuration.JNDIConfiguration r3;
        java.lang.String[] $r1;
        javax.naming.NamingException $r9;
        java.util.ArrayList $r2, $r10;
        java.util.HashSet $r6, $r7;
        int $i0, i1;
        java.lang.String r0, $r8;
        javax.naming.Context $r4, $r5;
        boolean $z0;
        java.util.Iterator $r11, $r12;

        r3 := @this: org.apache.commons.configuration.JNDIConfiguration;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String[] split(java.lang.String,java.lang.String)>(r0, ".");

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r8 = $r1[i1];

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke r3.<org.apache.commons.configuration.JNDIConfiguration: javax.naming.Context getBaseContext()>();

        $r5 = specialinvoke r3.<org.apache.commons.configuration.JNDIConfiguration: javax.naming.Context getContext(java.util.List,javax.naming.Context)>($r2, $r4);

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        if $r5 == null goto label3;

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        specialinvoke r3.<org.apache.commons.configuration.JNDIConfiguration: void recursiveGetKeys(java.util.Set,javax.naming.Context,java.lang.String,java.util.Set)>($r6, $r5, r0, $r7);

        goto label4;

     label3:
        $z0 = virtualinvoke r3.<org.apache.commons.configuration.JNDIConfiguration: boolean containsKey(java.lang.String)>(r0);

        if $z0 == 0 goto label4;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r0);

     label4:
        $r12 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        return $r12;

     label6:
        $r9 := @caughtexception;

        virtualinvoke r3.<org.apache.commons.configuration.JNDIConfiguration: void fireError(int,java.lang.String,java.lang.Object,java.lang.Throwable)>(5, null, null, $r9);

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.util.Iterator iterator()>();

        return $r11;

        catch javax.naming.NamingException from label2 to label5 with label6;
    }

    private javax.naming.Context getContext(java.util.List, javax.naming.Context) throws javax.naming.NamingException
    {
        java.lang.Throwable $r13;
        org.apache.commons.configuration.JNDIConfiguration r10;
        int $i0;
        javax.naming.Context r1, r9, $r12;
        java.lang.String r3, $r7;
        boolean $z0, $z1, $z2, $z3;
        javax.naming.NameClassPair r6;
        java.util.List r0, $r11;
        javax.naming.NamingEnumeration $r4, r14;
        java.lang.Object $r2, $r5, $r8;

        r10 := @this: org.apache.commons.configuration.JNDIConfiguration;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: javax.naming.Context;

        if r0 == null goto label01;

        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label02;

     label01:
        return r1;

     label02:
        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        r3 = (java.lang.String) $r2;

        r14 = null;

     label03:
        $r4 = interfaceinvoke r1.<javax.naming.Context: javax.naming.NamingEnumeration list(java.lang.String)>("");

        r14 = $r4;

     label04:
        $z1 = interfaceinvoke $r4.<javax.naming.NamingEnumeration: boolean hasMore()>();

        if $z1 == 0 goto label08;

        $r5 = interfaceinvoke $r4.<javax.naming.NamingEnumeration: java.lang.Object next()>();

        r6 = (javax.naming.NameClassPair) $r5;

        $r7 = virtualinvoke r6.<javax.naming.NameClassPair: java.lang.String getName()>();

        $r8 = interfaceinvoke r1.<javax.naming.Context: java.lang.Object lookup(java.lang.String)>($r7);

        $z2 = $r8 instanceof javax.naming.Context;

        if $z2 == 0 goto label07;

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z3 == 0 goto label07;

        r9 = (javax.naming.Context) $r8;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $r11 = interfaceinvoke r0.<java.util.List: java.util.List subList(int,int)>(1, $i0);

        $r12 = specialinvoke r10.<org.apache.commons.configuration.JNDIConfiguration: javax.naming.Context getContext(java.util.List,javax.naming.Context)>($r11, r9);

     label05:
        if $r4 == null goto label06;

        interfaceinvoke $r4.<javax.naming.NamingEnumeration: void close()>();

     label06:
        return $r12;

     label07:
        goto label04;

     label08:
        if $r4 == null goto label12;

        interfaceinvoke $r4.<javax.naming.NamingEnumeration: void close()>();

        goto label12;

     label09:
        $r13 := @caughtexception;

     label10:
        if r14 == null goto label11;

        interfaceinvoke r14.<javax.naming.NamingEnumeration: void close()>();

     label11:
        throw $r13;

     label12:
        return null;

        catch java.lang.Throwable from label03 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public boolean isEmpty()
    {
        java.lang.Throwable $r4;
        org.apache.commons.configuration.JNDIConfiguration r0;
        javax.naming.NamingException $r3;
        javax.naming.NamingEnumeration $r2, r5;
        javax.naming.Context $r1;
        boolean $z0, z1, $z2;

        r0 := @this: org.apache.commons.configuration.JNDIConfiguration;

     label01:
        r5 = null;

     label02:
        $r1 = virtualinvoke r0.<org.apache.commons.configuration.JNDIConfiguration: javax.naming.Context getBaseContext()>();

        $r2 = interfaceinvoke $r1.<javax.naming.Context: javax.naming.NamingEnumeration list(java.lang.String)>("");

        r5 = $r2;

        $z0 = interfaceinvoke $r2.<javax.naming.NamingEnumeration: boolean hasMore()>();

        if $z0 != 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        z1 = $z2;

     label05:
        if $r2 == null goto label06;

        interfaceinvoke $r2.<javax.naming.NamingEnumeration: void close()>();

     label06:
        return z1;

     label07:
        $r4 := @caughtexception;

     label08:
        if r5 == null goto label09;

        interfaceinvoke r5.<javax.naming.NamingEnumeration: void close()>();

     label09:
        throw $r4;

     label10:
        $r3 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.configuration.JNDIConfiguration: void fireError(int,java.lang.String,java.lang.Object,java.lang.Throwable)>(5, null, null, $r3);

        return 1;

        catch java.lang.Throwable from label02 to label05 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch javax.naming.NamingException from label01 to label06 with label10;
        catch javax.naming.NamingException from label07 to label10 with label10;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.configuration.JNDIConfiguration r1;
        java.lang.Object r3;
        java.lang.String r2;

        r1 := @this: org.apache.commons.configuration.JNDIConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This operation is not supported");

        throw $r0;
    }

    public void clearProperty(java.lang.String)
    {
        java.util.Set $r2;
        java.lang.String r1;
        org.apache.commons.configuration.JNDIConfiguration r0;

        r0 := @this: org.apache.commons.configuration.JNDIConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.configuration.JNDIConfiguration: java.util.Set clearedProperties>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    public boolean containsKey(java.lang.String)
    {
        org.apache.commons.configuration.JNDIConfiguration r0;
        java.util.Set $r1;
        javax.naming.NamingException $r4;
        java.lang.String $r2, r6;
        javax.naming.Context $r3;
        javax.naming.NameNotFoundException $r5;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.JNDIConfiguration;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.commons.configuration.JNDIConfiguration: java.util.Set clearedProperties>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>(r6);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r6, ".", "/");

     label2:
        $r3 = virtualinvoke r0.<org.apache.commons.configuration.JNDIConfiguration: javax.naming.Context getBaseContext()>();

        interfaceinvoke $r3.<javax.naming.Context: java.lang.Object lookup(java.lang.String)>($r2);

     label3:
        return 1;

     label4:
        $r5 := @caughtexception;

        return 0;

     label5:
        $r4 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.configuration.JNDIConfiguration: void fireError(int,java.lang.String,java.lang.Object,java.lang.Throwable)>(5, $r2, null, $r4);

        return 0;

        catch javax.naming.NameNotFoundException from label2 to label3 with label4;
        catch javax.naming.NamingException from label2 to label3 with label5;
    }

    public java.lang.String getPrefix()
    {
        java.lang.String $r1;
        org.apache.commons.configuration.JNDIConfiguration r0;

        r0 := @this: org.apache.commons.configuration.JNDIConfiguration;

        $r1 = r0.<org.apache.commons.configuration.JNDIConfiguration: java.lang.String prefix>;

        return $r1;
    }

    public void setPrefix(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.configuration.JNDIConfiguration r0;

        r0 := @this: org.apache.commons.configuration.JNDIConfiguration;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.configuration.JNDIConfiguration: java.lang.String prefix> = r1;

        r0.<org.apache.commons.configuration.JNDIConfiguration: javax.naming.Context baseContext> = null;

        return;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        org.apache.commons.configuration.JNDIConfiguration r0;
        java.util.Set $r1;
        javax.naming.NotContextException $r6;
        javax.naming.NamingException $r5;
        java.lang.Object $r4;
        java.lang.String $r2, r8;
        javax.naming.Context $r3;
        javax.naming.NameNotFoundException $r7;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.JNDIConfiguration;

        r8 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.commons.configuration.JNDIConfiguration: java.util.Set clearedProperties>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>(r8);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r8, ".", "/");

        r8 = $r2;

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.JNDIConfiguration: javax.naming.Context getBaseContext()>();

        $r4 = interfaceinvoke $r3.<javax.naming.Context: java.lang.Object lookup(java.lang.String)>($r2);

     label2:
        return $r4;

     label3:
        $r7 := @caughtexception;

        return null;

     label4:
        $r6 := @caughtexception;

        return null;

     label5:
        $r5 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.configuration.JNDIConfiguration: void fireError(int,java.lang.String,java.lang.Object,java.lang.Throwable)>(5, r8, null, $r5);

        return null;

        catch javax.naming.NameNotFoundException from label1 to label2 with label3;
        catch javax.naming.NotContextException from label1 to label2 with label4;
        catch javax.naming.NamingException from label1 to label2 with label5;
    }

    protected void addPropertyDirect(java.lang.String, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.configuration.JNDIConfiguration r1;
        java.lang.Object r3;
        java.lang.String r2;

        r1 := @this: org.apache.commons.configuration.JNDIConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This operation is not supported");

        throw $r0;
    }

    public javax.naming.Context getBaseContext() throws javax.naming.NamingException
    {
        org.apache.commons.configuration.JNDIConfiguration r0;
        java.lang.Object $r4;
        javax.naming.Context $r1, $r2, $r5, $r7;
        java.lang.String $r3, $r6;

        r0 := @this: org.apache.commons.configuration.JNDIConfiguration;

        $r1 = r0.<org.apache.commons.configuration.JNDIConfiguration: javax.naming.Context baseContext>;

        if $r1 != null goto label3;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.JNDIConfiguration: javax.naming.Context getContext()>();

        $r3 = r0.<org.apache.commons.configuration.JNDIConfiguration: java.lang.String prefix>;

        if $r3 != null goto label1;

        $r6 = "";

        goto label2;

     label1:
        $r6 = r0.<org.apache.commons.configuration.JNDIConfiguration: java.lang.String prefix>;

     label2:
        $r4 = interfaceinvoke $r2.<javax.naming.Context: java.lang.Object lookup(java.lang.String)>($r6);

        $r5 = (javax.naming.Context) $r4;

        r0.<org.apache.commons.configuration.JNDIConfiguration: javax.naming.Context baseContext> = $r5;

     label3:
        $r7 = r0.<org.apache.commons.configuration.JNDIConfiguration: javax.naming.Context baseContext>;

        return $r7;
    }

    public javax.naming.Context getContext()
    {
        javax.naming.Context $r1;
        org.apache.commons.configuration.JNDIConfiguration r0;

        r0 := @this: org.apache.commons.configuration.JNDIConfiguration;

        $r1 = r0.<org.apache.commons.configuration.JNDIConfiguration: javax.naming.Context context>;

        return $r1;
    }

    public void setContext(javax.naming.Context)
    {
        java.util.Set $r1;
        javax.naming.Context r2;
        org.apache.commons.configuration.JNDIConfiguration r0;

        r0 := @this: org.apache.commons.configuration.JNDIConfiguration;

        r2 := @parameter0: javax.naming.Context;

        $r1 = r0.<org.apache.commons.configuration.JNDIConfiguration: java.util.Set clearedProperties>;

        interfaceinvoke $r1.<java.util.Set: void clear()>();

        r0.<org.apache.commons.configuration.JNDIConfiguration: javax.naming.Context context> = r2;

        return;
    }
}
