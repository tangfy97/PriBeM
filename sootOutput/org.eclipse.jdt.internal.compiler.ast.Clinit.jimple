public class org.eclipse.jdt.internal.compiler.ast.Clinit extends org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
{
    private org.eclipse.jdt.internal.compiler.lookup.FieldBinding assertionSyntheticFieldBinding;
    private org.eclipse.jdt.internal.compiler.lookup.FieldBinding classLiteralSyntheticField;

    public void <init>(org.eclipse.jdt.internal.compiler.CompilationResult)
    {
        org.eclipse.jdt.internal.compiler.CompilationResult r1;
        char[] $r2;
        org.eclipse.jdt.internal.compiler.ast.Clinit r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Clinit;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.CompilationResult;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: void <init>(org.eclipse.jdt.internal.compiler.CompilationResult)>(r1);

        r0.<org.eclipse.jdt.internal.compiler.ast.Clinit: org.eclipse.jdt.internal.compiler.lookup.FieldBinding assertionSyntheticFieldBinding> = null;

        r0.<org.eclipse.jdt.internal.compiler.ast.Clinit: org.eclipse.jdt.internal.compiler.lookup.FieldBinding classLiteralSyntheticField> = null;

        r0.<org.eclipse.jdt.internal.compiler.ast.Clinit: int modifiers> = 0;

        $r2 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] CLINIT>;

        r0.<org.eclipse.jdt.internal.compiler.ast.Clinit: char[] selector> = $r2;

        return;
    }

    public void analyseCode(org.eclipse.jdt.internal.compiler.lookup.ClassScope, org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r15;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding $r12, $r13, $r18;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r4, $r9, $r14, $r16, $r20;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r5;
        org.eclipse.jdt.internal.compiler.flow.FlowContext $r6;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding[] $r11;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r19;
        boolean $z0, $z1, $z2, $z3;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r17;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r10;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r23;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r22;
        int $i0, $i1, $i2, $i3, $i4, i5;
        org.eclipse.jdt.internal.compiler.ast.Clinit r0;
        org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo $r3, $r7, $r8;
        org.eclipse.jdt.internal.compiler.problem.AbortMethod $r21;
        org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext r2;
        org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Clinit;

        r22 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext;

        r23 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.ast.Clinit: boolean ignoreFurtherInvestigation>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext;

        $r6 = r2.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: org.eclipse.jdt.internal.compiler.flow.FlowContext parent>;

        $r5 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] NO_EXCEPTIONS>;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.Clinit: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r3 = <org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo DEAD_END>;

        specialinvoke $r1.<org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext: void <init>(org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[],org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo)>($r6, r0, $r5, $r4, $r3);

        $i0 = r23.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: int tagBits>;

        $i1 = $i0 & 1;

        if $i1 != 0 goto label2;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.Clinit: int bits>;

        $i3 = $i2 | 64;

        r0.<org.eclipse.jdt.internal.compiler.ast.Clinit: int bits> = $i3;

     label2:
        $r7 = r2.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo initsOnReturn>;

        $r8 = virtualinvoke r23.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo mergedWith(org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo)>($r7);

        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.Clinit: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding enclosingSourceType()>();

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.FieldBinding[] fields()>();

        i5 = 0;

        $i4 = lengthof $r11;

        goto label5;

     label3:
        $r12 = $r11[i5];

        $z1 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isStatic()>();

        if $z1 == 0 goto label4;

        $z2 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isFinal()>();

        if $z2 == 0 goto label4;

        $r13 = $r11[i5];

        $z3 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>($r13);

        if $z3 != 0 goto label4;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.Clinit: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r15 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.Clinit: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r17 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration referenceType()>();

        $r18 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.FieldBinding original()>();

        $r19 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration declarationOf(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>($r18);

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void uninitializedBlankFinalField(org.eclipse.jdt.internal.compiler.lookup.FieldBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r12, $r19);

     label4:
        i5 = i5 + 1;

     label5:
        if i5 < $i4 goto label3;

        $r20 = r0.<org.eclipse.jdt.internal.compiler.ast.Clinit: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: void checkInitializerExceptions(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r20, $r1, $r8);

     label6:
        goto label8;

     label7:
        $r21 := @caughtexception;

        r0.<org.eclipse.jdt.internal.compiler.ast.Clinit: boolean ignoreFurtherInvestigation> = 1;

     label8:
        return;

        catch org.eclipse.jdt.internal.compiler.problem.AbortMethod from label1 to label6 with label7;
    }

    public void generateCode(org.eclipse.jdt.internal.compiler.lookup.ClassScope, org.eclipse.jdt.internal.compiler.ClassFile)
    {
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.ast.Clinit r0;
        org.eclipse.jdt.internal.compiler.ClassFile r1;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream $r7;
        org.eclipse.jdt.internal.compiler.CompilationResult $r5, $r6;
        org.eclipse.jdt.internal.compiler.problem.AbortMethod $r3, $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Clinit;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.ClassFile;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.ast.Clinit: boolean ignoreFurtherInvestigation>;

        if $z0 == 0 goto label1;

        return;

     label1:
        i6 = r1.<org.eclipse.jdt.internal.compiler.ClassFile: int contentsOffset>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Clinit: void generateCode(org.eclipse.jdt.internal.compiler.lookup.ClassScope,org.eclipse.jdt.internal.compiler.ClassFile,int)>(r2, r1, i6);

     label2:
        goto label8;

     label3:
        $r4 := @caughtexception;

        $r6 = $r4.<org.eclipse.jdt.internal.compiler.problem.AbortMethod: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $r5 = <org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.CompilationResult RESTART_IN_WIDE_MODE>;

        if $r6 != $r5 goto label7;

     label4:
        r1.<org.eclipse.jdt.internal.compiler.ClassFile: int contentsOffset> = i6;

        $i4 = r1.<org.eclipse.jdt.internal.compiler.ClassFile: int methodCount>;

        $i5 = $i4 - 1;

        r1.<org.eclipse.jdt.internal.compiler.ClassFile: int methodCount> = $i5;

        $r7 = r1.<org.eclipse.jdt.internal.compiler.ClassFile: org.eclipse.jdt.internal.compiler.codegen.CodeStream codeStream>;

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resetInWideMode()>();

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Clinit: void generateCode(org.eclipse.jdt.internal.compiler.lookup.ClassScope,org.eclipse.jdt.internal.compiler.ClassFile,int)>(r2, r1, i6);

     label5:
        goto label8;

     label6:
        $r3 := @caughtexception;

        r1.<org.eclipse.jdt.internal.compiler.ClassFile: int contentsOffset> = i6;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ClassFile: int methodCount>;

        $i1 = $i0 - 1;

        r1.<org.eclipse.jdt.internal.compiler.ClassFile: int methodCount> = $i1;

        goto label8;

     label7:
        r1.<org.eclipse.jdt.internal.compiler.ClassFile: int contentsOffset> = i6;

        $i2 = r1.<org.eclipse.jdt.internal.compiler.ClassFile: int methodCount>;

        $i3 = $i2 - 1;

        r1.<org.eclipse.jdt.internal.compiler.ClassFile: int methodCount> = $i3;

     label8:
        return;

        catch org.eclipse.jdt.internal.compiler.problem.AbortMethod from label1 to label2 with label3;
        catch org.eclipse.jdt.internal.compiler.problem.AbortMethod from label4 to label5 with label6;
    }

    private void generateCode(org.eclipse.jdt.internal.compiler.lookup.ClassScope, org.eclipse.jdt.internal.compiler.ClassFile, int)
    {
        org.eclipse.jdt.internal.compiler.ast.Block $r9, $r13;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding $r7, $r10, $r14, $r15, $r16, $r19, $r22, $r27;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope r6;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] $r23;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r25, r26, r28, r29;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.eclipse.jdt.internal.compiler.ClassFile r0;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r5;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r11, $r18;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r24;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel $r20, $r21;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r4, $r17;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, $i25, i26, $i27;
        org.eclipse.jdt.internal.compiler.ast.Clinit r3;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r2;
        org.eclipse.jdt.internal.compiler.codegen.ConstantPool r1;
        org.eclipse.jdt.internal.compiler.ast.Initializer $r8, $r12;

        r3 := @this: org.eclipse.jdt.internal.compiler.ast.Clinit;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.ClassFile;

        i7 := @parameter2: int;

        r1 = r0.<org.eclipse.jdt.internal.compiler.ClassFile: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        i0 = r1.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int currentOffset>;

        i1 = r1.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int currentIndex>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ClassFile: void generateMethodInfoHeaderForClinit()>();

        i2 = r0.<org.eclipse.jdt.internal.compiler.ClassFile: int contentsOffset>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ClassFile: void generateCodeAttributeHeader()>();

        r2 = r0.<org.eclipse.jdt.internal.compiler.ClassFile: org.eclipse.jdt.internal.compiler.codegen.CodeStream codeStream>;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.ast.Clinit: void resolve(org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r4);

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void reset(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration,org.eclipse.jdt.internal.compiler.ClassFile)>(r3, r0);

        r5 = r4.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration referenceContext>;

        r6 = r5.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope staticInitializerScope>;

        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: void computeLocalVariablePositions(int,org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(0, r2);

        $r7 = r3.<org.eclipse.jdt.internal.compiler.ast.Clinit: org.eclipse.jdt.internal.compiler.lookup.FieldBinding assertionSyntheticFieldBinding>;

        if $r7 == null goto label01;

        $r17 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.lookup.ClassScope outerMostClassScope()>();

        $r18 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding enclosingSourceType()>();

        $r19 = r3.<org.eclipse.jdt.internal.compiler.ast.Clinit: org.eclipse.jdt.internal.compiler.lookup.FieldBinding classLiteralSyntheticField>;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateClassLiteralAccessForType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>($r18, $r19);

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeJavaLangClassDesiredAssertionStatus()>();

        $r20 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r20.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r2);

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifne(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r20);

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_1()>();

        $r21 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r21.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r2);

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void decrStackSize(int)>(1);

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void goto_(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r21);

        virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_0()>();

        virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        $r22 = r3.<org.eclipse.jdt.internal.compiler.ast.Clinit: org.eclipse.jdt.internal.compiler.lookup.FieldBinding assertionSyntheticFieldBinding>;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void putstatic(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>($r22);

     label01:
        $r23 = r5.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        r24 = null;

        $i3 = r5.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int modifiers>;

        $i4 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int kind(int)>($i3);

        if $i4 != 3 goto label19;

        i15 = 0;

        i16 = 0;

        if $r23 == null goto label06;

        i17 = 0;

        i18 = lengthof $r23;

        goto label05;

     label02:
        r25 = $r23[i17];

        $z4 = virtualinvoke r25.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: boolean isStatic()>();

        if $z4 == 0 goto label04;

        $i14 = virtualinvoke r25.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int getKind()>();

        if $i14 != 3 goto label03;

        virtualinvoke r25.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r6, r2);

        i15 = i15 + 1;

        goto label04;

     label03:
        i16 = i16 + 1;

     label04:
        i17 = i17 + 1;

     label05:
        if i17 < i18 goto label02;

     label06:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateInlinedValue(int)>(i15);

        $r11 = r5.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void anewarray(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r11);

        if i15 <= 0 goto label10;

        if $r23 == null goto label10;

        i19 = 0;

        i20 = lengthof $r23;

        goto label09;

     label07:
        r26 = $r23[i19];

        $i12 = virtualinvoke r26.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int getKind()>();

        if $i12 != 3 goto label08;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

        $r15 = r26.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.lookup.FieldBinding binding>;

        $i13 = $r15.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: int id>;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateInlinedValue(int)>($i13);

        $r16 = r26.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.lookup.FieldBinding binding>;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void getstatic(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>($r16);

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aastore()>();

     label08:
        i19 = i19 + 1;

     label09:
        if i19 < i20 goto label07;

     label10:
        $r27 = r5.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.FieldBinding enumValuesSyntheticfield>;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void putstatic(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>($r27);

        if i16 == 0 goto label27;

        i21 = 0;

        i22 = lengthof $r23;

        goto label18;

     label11:
        r28 = $r23[i21];

        $i11 = virtualinvoke r28.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int getKind()>();

        tableswitch($i11)
        {
            case 1: goto label15;
            case 2: goto label13;
            case 3: goto label12;
            default: goto label17;
        };

     label12:
        goto label17;

     label13:
        $z2 = virtualinvoke r28.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: boolean isStatic()>();

        if $z2 != 0 goto label14;

        goto label17;

     label14:
        $r12 = (org.eclipse.jdt.internal.compiler.ast.Initializer) r28;

        $r13 = $r12.<org.eclipse.jdt.internal.compiler.ast.Initializer: org.eclipse.jdt.internal.compiler.ast.Block block>;

        r24 = $r13.<org.eclipse.jdt.internal.compiler.ast.Block: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke r28.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r6, r2);

        goto label17;

     label15:
        $r14 = r28.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.lookup.FieldBinding binding>;

        $z3 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isStatic()>();

        if $z3 != 0 goto label16;

        goto label17;

     label16:
        r24 = null;

        virtualinvoke r28.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r6, r2);

     label17:
        i21 = i21 + 1;

     label18:
        if i21 < i22 goto label11;

        goto label27;

     label19:
        if $r23 == null goto label27;

        i23 = 0;

        i24 = lengthof $r23;

        goto label26;

     label20:
        r29 = $r23[i23];

        $i10 = virtualinvoke r29.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int getKind()>();

        tableswitch($i10)
        {
            case 1: goto label23;
            case 2: goto label21;
            default: goto label25;
        };

     label21:
        $z0 = virtualinvoke r29.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: boolean isStatic()>();

        if $z0 != 0 goto label22;

        goto label25;

     label22:
        $r8 = (org.eclipse.jdt.internal.compiler.ast.Initializer) r29;

        $r9 = $r8.<org.eclipse.jdt.internal.compiler.ast.Initializer: org.eclipse.jdt.internal.compiler.ast.Block block>;

        r24 = $r9.<org.eclipse.jdt.internal.compiler.ast.Block: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke r29.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r6, r2);

        goto label25;

     label23:
        $r10 = r29.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.lookup.FieldBinding binding>;

        $z1 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isStatic()>();

        if $z1 != 0 goto label24;

        goto label25;

     label24:
        r24 = null;

        virtualinvoke r29.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r6, r2);

     label25:
        i23 = i23 + 1;

     label26:
        if i23 < i24 goto label20;

     label27:
        $i25 = r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        if $i25 != 0 goto label28;

        r0.<org.eclipse.jdt.internal.compiler.ClassFile: int contentsOffset> = i7;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.ClassFile: int methodCount>;

        $i9 = $i8 - 1;

        r0.<org.eclipse.jdt.internal.compiler.ClassFile: int methodCount> = $i9;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: void resetForClinit(int,int)>(i1, i0);

        goto label30;

     label28:
        $i5 = r3.<org.eclipse.jdt.internal.compiler.ast.Clinit: int bits>;

        $i6 = $i5 & 64;

        if $i6 == 0 goto label29;

        i26 = r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void return_()>();

        if r24 == null goto label29;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void updateLastRecordedEndPC(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r24, i26);

     label29:
        $i27 = r5.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(0, $i27);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ClassFile: void completeCodeAttributeForClinit(int)>(i2);

     label30:
        return;
    }

    public boolean isClinit()
    {
        org.eclipse.jdt.internal.compiler.ast.Clinit r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Clinit;

        return 1;
    }

    public boolean isInitializationMethod()
    {
        org.eclipse.jdt.internal.compiler.ast.Clinit r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Clinit;

        return 1;
    }

    public boolean isStatic()
    {
        org.eclipse.jdt.internal.compiler.ast.Clinit r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Clinit;

        return 1;
    }

    public void parseStatements(org.eclipse.jdt.internal.compiler.parser.Parser, org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration)
    {
        org.eclipse.jdt.internal.compiler.ast.Clinit r0;
        org.eclipse.jdt.internal.compiler.parser.Parser r1;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Clinit;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.parser.Parser;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        return;
    }

    public java.lang.StringBuffer print(int, java.lang.StringBuffer)
    {
        org.eclipse.jdt.internal.compiler.ast.Clinit r2;
        java.lang.StringBuffer r0, $r1;
        int i0, $i1;

        r2 := @this: org.eclipse.jdt.internal.compiler.ast.Clinit;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.StringBuffer;

        $r1 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.Clinit: java.lang.StringBuffer printIndent(int,java.lang.StringBuffer)>(i0, r0);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<clinit>()");

        $i1 = i0 + 1;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.ast.Clinit: java.lang.StringBuffer printBody(int,java.lang.StringBuffer)>($i1, r0);

        return r0;
    }

    public void resolve(org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ast.Clinit r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r3;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Clinit;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        $r1 = new org.eclipse.jdt.internal.compiler.lookup.MethodScope;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration referenceContext>;

        specialinvoke $r1.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: void <init>(org.eclipse.jdt.internal.compiler.lookup.ClassScope,org.eclipse.jdt.internal.compiler.impl.ReferenceContext,boolean)>(r2, $r3, 1);

        r0.<org.eclipse.jdt.internal.compiler.ast.Clinit: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope> = $r1;

        return;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.Clinit r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.Clinit;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.Clinit,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r1, r2);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.Clinit,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r1, r2);

        return;
    }

    public void setAssertionSupport(org.eclipse.jdt.internal.compiler.lookup.FieldBinding, boolean)
    {
        org.eclipse.jdt.internal.compiler.ast.Clinit r0;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r4;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r1, $r6;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r2, $r5;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope $r3;
        boolean z0, $z1, $z2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Clinit;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        z0 := @parameter1: boolean;

        r0.<org.eclipse.jdt.internal.compiler.ast.Clinit: org.eclipse.jdt.internal.compiler.lookup.FieldBinding assertionSyntheticFieldBinding> = r1;

        if z0 == 0 goto label1;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.Clinit: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.lookup.ClassScope outerMostClassScope()>();

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding enclosingSourceType()>();

        $z1 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isInterface()>();

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isBaseType()>();

        if $z2 != 0 goto label1;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.Clinit: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r6 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.FieldBinding addSyntheticFieldForClassLiteral(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>($r4, $r5);

        r0.<org.eclipse.jdt.internal.compiler.ast.Clinit: org.eclipse.jdt.internal.compiler.lookup.FieldBinding classLiteralSyntheticField> = $r6;

     label1:
        return;
    }
}
