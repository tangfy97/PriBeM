public class com.sun.xml.bind.v2.runtime.BinderImpl extends javax.xml.bind.Binder
{
    private final com.sun.xml.bind.v2.runtime.JAXBContextImpl context;
    private com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl unmarshaller;
    private com.sun.xml.bind.v2.runtime.MarshallerImpl marshaller;
    private final com.sun.xml.bind.unmarshaller.InfosetScanner scanner;
    private final com.sun.xml.bind.v2.runtime.AssociationMap assoc;

    void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl, com.sun.xml.bind.unmarshaller.InfosetScanner)
    {
        com.sun.xml.bind.v2.runtime.AssociationMap $r1;
        com.sun.xml.bind.unmarshaller.InfosetScanner r3;
        com.sun.xml.bind.v2.runtime.BinderImpl r0;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.BinderImpl;

        r2 := @parameter0: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r3 := @parameter1: com.sun.xml.bind.unmarshaller.InfosetScanner;

        specialinvoke r0.<javax.xml.bind.Binder: void <init>()>();

        $r1 = new com.sun.xml.bind.v2.runtime.AssociationMap;

        specialinvoke $r1.<com.sun.xml.bind.v2.runtime.AssociationMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.AssociationMap assoc> = $r1;

        r0.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.JAXBContextImpl context> = r2;

        r0.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.unmarshaller.InfosetScanner scanner> = r3;

        return;
    }

    private com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl getUnmarshaller()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl $r1, $r2, $r3;
        com.sun.xml.bind.v2.runtime.AssociationMap $r4;
        com.sun.xml.bind.v2.runtime.BinderImpl r0;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r5;

        r0 := @this: com.sun.xml.bind.v2.runtime.BinderImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl unmarshaller>;

        if $r1 != null goto label1;

        $r3 = new com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        $r5 = r0.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.JAXBContextImpl context>;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.AssociationMap assoc>;

        specialinvoke $r3.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.runtime.AssociationMap)>($r5, $r4);

        r0.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl unmarshaller> = $r3;

     label1:
        $r2 = r0.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl unmarshaller>;

        return $r2;
    }

    private com.sun.xml.bind.v2.runtime.MarshallerImpl getMarshaller()
    {
        com.sun.xml.bind.v2.runtime.MarshallerImpl $r1, $r2, $r3;
        com.sun.xml.bind.v2.runtime.AssociationMap $r4;
        com.sun.xml.bind.v2.runtime.BinderImpl r0;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r5;

        r0 := @this: com.sun.xml.bind.v2.runtime.BinderImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.MarshallerImpl marshaller>;

        if $r1 != null goto label1;

        $r3 = new com.sun.xml.bind.v2.runtime.MarshallerImpl;

        $r5 = r0.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.JAXBContextImpl context>;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.AssociationMap assoc>;

        specialinvoke $r3.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.runtime.AssociationMap)>($r5, $r4);

        r0.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.MarshallerImpl marshaller> = $r3;

     label1:
        $r2 = r0.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.MarshallerImpl marshaller>;

        return $r2;
    }

    public void marshal(java.lang.Object, java.lang.Object) throws javax.xml.bind.JAXBException
    {
        com.sun.xml.bind.v2.runtime.output.DOMOutput $r5;
        com.sun.xml.bind.v2.runtime.MarshallerImpl $r4;
        java.lang.Object r0, r2;
        com.sun.xml.bind.v2.runtime.BinderImpl r3;
        java.lang.IllegalArgumentException $r1;

        r3 := @this: com.sun.xml.bind.v2.runtime.BinderImpl;

        r2 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Object;

        if r0 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label2:
        $r4 = specialinvoke r3.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.MarshallerImpl getMarshaller()>();

        $r5 = specialinvoke r3.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.output.DOMOutput createOutput(java.lang.Object)>(r0);

        virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void marshal(java.lang.Object,com.sun.xml.bind.v2.runtime.output.XmlOutput)>(r2, $r5);

        return;
    }

    private com.sun.xml.bind.v2.runtime.output.DOMOutput createOutput(java.lang.Object)
    {
        com.sun.xml.bind.v2.runtime.output.DOMOutput $r0;
        org.w3c.dom.Node $r4;
        com.sun.xml.bind.v2.runtime.AssociationMap $r3;
        java.lang.Object r1;
        com.sun.xml.bind.v2.runtime.BinderImpl r2;

        r2 := @this: com.sun.xml.bind.v2.runtime.BinderImpl;

        r1 := @parameter0: java.lang.Object;

        $r0 = new com.sun.xml.bind.v2.runtime.output.DOMOutput;

        $r4 = (org.w3c.dom.Node) r1;

        $r3 = r2.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.AssociationMap assoc>;

        specialinvoke $r0.<com.sun.xml.bind.v2.runtime.output.DOMOutput: void <init>(org.w3c.dom.Node,com.sun.xml.bind.v2.runtime.AssociationMap)>($r4, $r3);

        return $r0;
    }

    public java.lang.Object updateJAXB(java.lang.Object) throws javax.xml.bind.JAXBException
    {
        java.lang.Object r1, $r2;
        com.sun.xml.bind.v2.runtime.BinderImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.BinderImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.BinderImpl: java.lang.Object associativeUnmarshal(java.lang.Object,boolean,java.lang.Class)>(r1, 1, null);

        return $r2;
    }

    public java.lang.Object unmarshal(java.lang.Object) throws javax.xml.bind.JAXBException
    {
        java.lang.Object r1, $r2;
        com.sun.xml.bind.v2.runtime.BinderImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.BinderImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.BinderImpl: java.lang.Object associativeUnmarshal(java.lang.Object,boolean,java.lang.Class)>(r1, 0, null);

        return $r2;
    }

    public javax.xml.bind.JAXBElement unmarshal(java.lang.Object, java.lang.Class) throws javax.xml.bind.JAXBException
    {
        javax.xml.bind.JAXBElement $r4;
        java.lang.Class r0;
        java.lang.Object r2, $r3;
        com.sun.xml.bind.v2.runtime.BinderImpl r1;
        java.lang.IllegalArgumentException $r5;

        r1 := @this: com.sun.xml.bind.v2.runtime.BinderImpl;

        r2 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Class;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label1:
        $r3 = specialinvoke r1.<com.sun.xml.bind.v2.runtime.BinderImpl: java.lang.Object associativeUnmarshal(java.lang.Object,boolean,java.lang.Class)>(r2, 1, r0);

        $r4 = (javax.xml.bind.JAXBElement) $r3;

        return $r4;
    }

    public void setSchema(javax.xml.validation.Schema)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl $r3;
        com.sun.xml.bind.v2.runtime.MarshallerImpl $r1;
        com.sun.xml.bind.v2.runtime.BinderImpl r0;
        javax.xml.validation.Schema r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.BinderImpl;

        r2 := @parameter0: javax.xml.validation.Schema;

        $r1 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.MarshallerImpl getMarshaller()>();

        virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void setSchema(javax.xml.validation.Schema)>(r2);

        $r3 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl getUnmarshaller()>();

        virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: void setSchema(javax.xml.validation.Schema)>(r2);

        return;
    }

    public javax.xml.validation.Schema getSchema()
    {
        com.sun.xml.bind.v2.runtime.BinderImpl r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl $r1;
        javax.xml.validation.Schema $r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.BinderImpl;

        $r1 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl getUnmarshaller()>();

        $r2 = virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: javax.xml.validation.Schema getSchema()>();

        return $r2;
    }

    private java.lang.Object associativeUnmarshal(java.lang.Object, boolean, java.lang.Class) throws javax.xml.bind.JAXBException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx $r10;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext $r12;
        com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor $r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl $r4, $r17;
        com.sun.xml.bind.v2.runtime.BinderImpl r3;
        boolean z0;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r14;
        javax.xml.bind.UnmarshalException $r18;
        java.lang.IllegalArgumentException $r15;
        com.sun.xml.bind.v2.runtime.unmarshaller.SAXConnector $r7;
        org.xml.sax.SAXException $r16;
        com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor $r6;
        com.sun.xml.bind.unmarshaller.InfosetScanner $r5, $r8, $r9, $r11;
        java.lang.Object r0, $r13;
        java.lang.Class r1;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo r19;

        r3 := @this: com.sun.xml.bind.v2.runtime.BinderImpl;

        r0 := @parameter0: java.lang.Object;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.Class;

        if r0 != null goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r15;

     label1:
        r19 = null;

        if r1 == null goto label2;

        $r14 = r3.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.JAXBContextImpl context>;

        r19 = virtualinvoke $r14.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Class,boolean)>(r1, 1);

     label2:
        $r2 = new com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor;

        $r4 = specialinvoke r3.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl getUnmarshaller()>();

        $r5 = r3.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.unmarshaller.InfosetScanner scanner>;

        $r6 = virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor createUnmarshallerHandler(com.sun.xml.bind.unmarshaller.InfosetScanner,boolean,com.sun.xml.bind.v2.runtime.JaxBeanInfo)>($r5, z0, r19);

        specialinvoke $r2.<com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor)>($r6);

        $r9 = r3.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.unmarshaller.InfosetScanner scanner>;

        $r7 = new com.sun.xml.bind.v2.runtime.unmarshaller.SAXConnector;

        $r8 = r3.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.unmarshaller.InfosetScanner scanner>;

        $r10 = interfaceinvoke $r8.<com.sun.xml.bind.unmarshaller.InfosetScanner: com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx getLocator()>();

        specialinvoke $r7.<com.sun.xml.bind.v2.runtime.unmarshaller.SAXConnector: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor,com.sun.xml.bind.v2.runtime.unmarshaller.LocatorEx)>($r2, $r10);

        interfaceinvoke $r9.<com.sun.xml.bind.unmarshaller.InfosetScanner: void setContentHandler(org.xml.sax.ContentHandler)>($r7);

     label3:
        $r11 = r3.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.unmarshaller.InfosetScanner scanner>;

        interfaceinvoke $r11.<com.sun.xml.bind.unmarshaller.InfosetScanner: void scan(java.lang.Object)>(r0);

     label4:
        goto label6;

     label5:
        $r16 := @caughtexception;

        $r17 = r3.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl unmarshaller>;

        $r18 = virtualinvoke $r17.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: javax.xml.bind.UnmarshalException createUnmarshalException(org.xml.sax.SAXException)>($r16);

        throw $r18;

     label6:
        $r12 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext getContext()>();

        $r13 = virtualinvoke $r12.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.Object getResult()>();

        return $r13;

        catch org.xml.sax.SAXException from label3 to label4 with label5;
    }

    public java.lang.Object getXMLNode(java.lang.Object)
    {
        com.sun.xml.bind.v2.runtime.AssociationMap$Entry $r3;
        com.sun.xml.bind.v2.runtime.AssociationMap $r2;
        java.lang.Object r0, $r4;
        com.sun.xml.bind.v2.runtime.BinderImpl r1;
        java.lang.IllegalArgumentException $r5;

        r1 := @this: com.sun.xml.bind.v2.runtime.BinderImpl;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label1:
        $r2 = r1.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.AssociationMap assoc>;

        $r3 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.AssociationMap: com.sun.xml.bind.v2.runtime.AssociationMap$Entry byPeer(java.lang.Object)>(r0);

        if $r3 != null goto label2;

        return null;

     label2:
        $r4 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.AssociationMap$Entry: java.lang.Object element()>();

        return $r4;
    }

    public java.lang.Object getJAXBNode(java.lang.Object)
    {
        com.sun.xml.bind.v2.runtime.AssociationMap $r2;
        java.lang.IllegalArgumentException $r7;
        com.sun.xml.bind.v2.runtime.AssociationMap$Entry $r3;
        java.lang.Object r0, $r4, $r5, $r6;
        com.sun.xml.bind.v2.runtime.BinderImpl r1;

        r1 := @this: com.sun.xml.bind.v2.runtime.BinderImpl;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r7;

     label1:
        $r2 = r1.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.AssociationMap assoc>;

        $r3 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.AssociationMap: com.sun.xml.bind.v2.runtime.AssociationMap$Entry byElement(java.lang.Object)>(r0);

        if $r3 != null goto label2;

        return null;

     label2:
        $r4 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.AssociationMap$Entry: java.lang.Object outer()>();

        if $r4 == null goto label3;

        $r6 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.AssociationMap$Entry: java.lang.Object outer()>();

        return $r6;

     label3:
        $r5 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.AssociationMap$Entry: java.lang.Object inner()>();

        return $r5;
    }

    public java.lang.Object updateXML(java.lang.Object) throws javax.xml.bind.JAXBException
    {
        java.lang.Object r1, $r2, $r3;
        com.sun.xml.bind.v2.runtime.BinderImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.BinderImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.BinderImpl: java.lang.Object getXMLNode(java.lang.Object)>(r1);

        $r3 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.BinderImpl: java.lang.Object updateXML(java.lang.Object,java.lang.Object)>(r1, $r2);

        return $r3;
    }

    public java.lang.Object updateXML(java.lang.Object, java.lang.Object) throws javax.xml.bind.JAXBException
    {
        org.w3c.dom.Node $r3, $r4, $r9;
        com.sun.xml.bind.v2.runtime.BinderImpl r5;
        java.lang.String $r12, $r13;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r6;
        boolean $z0;
        javax.xml.bind.JAXBElement $r10;
        java.lang.IllegalArgumentException $r0;
        org.w3c.dom.Element r2;
        com.sun.xml.bind.v2.runtime.MarshallerImpl $r8;
        java.lang.Object r1, r15;
        java.lang.Class $r14;
        javax.xml.namespace.QName $r11;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r7;

        r5 := @this: com.sun.xml.bind.v2.runtime.BinderImpl;

        r15 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r15 == null goto label1;

        if r1 != null goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r0;

     label2:
        r2 = (org.w3c.dom.Element) r1;

        $r3 = interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Node getNextSibling()>();

        $r4 = interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Node getParentNode()>();

        interfaceinvoke $r4.<org.w3c.dom.Node: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>(r2);

        $r6 = r5.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.JAXBContextImpl context>;

        $r7 = virtualinvoke $r6.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Object,boolean)>(r15, 1);

        $z0 = virtualinvoke $r7.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: boolean isElement()>();

        if $z0 != 0 goto label3;

        $r10 = new javax.xml.bind.JAXBElement;

        $r11 = new javax.xml.namespace.QName;

        $r12 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        $r13 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        specialinvoke $r11.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r12, $r13);

        $r14 = $r7.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.lang.Class jaxbType>;

        specialinvoke $r10.<javax.xml.bind.JAXBElement: void <init>(javax.xml.namespace.QName,java.lang.Class,java.lang.Object)>($r11, $r14, r15);

        r15 = $r10;

     label3:
        $r8 = specialinvoke r5.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.MarshallerImpl getMarshaller()>();

        virtualinvoke $r8.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void marshal(java.lang.Object,org.w3c.dom.Node)>(r15, $r4);

        $r9 = interfaceinvoke $r4.<org.w3c.dom.Node: org.w3c.dom.Node getLastChild()>();

        interfaceinvoke $r4.<org.w3c.dom.Node: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>($r9);

        interfaceinvoke $r4.<org.w3c.dom.Node: org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)>($r9, $r3);

        return $r9;
    }

    public void setEventHandler(javax.xml.bind.ValidationEventHandler) throws javax.xml.bind.JAXBException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl $r1;
        com.sun.xml.bind.v2.runtime.MarshallerImpl $r3;
        javax.xml.bind.ValidationEventHandler r2;
        com.sun.xml.bind.v2.runtime.BinderImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.BinderImpl;

        r2 := @parameter0: javax.xml.bind.ValidationEventHandler;

        $r1 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl getUnmarshaller()>();

        virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: void setEventHandler(javax.xml.bind.ValidationEventHandler)>(r2);

        $r3 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.MarshallerImpl getMarshaller()>();

        virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void setEventHandler(javax.xml.bind.ValidationEventHandler)>(r2);

        return;
    }

    public javax.xml.bind.ValidationEventHandler getEventHandler()
    {
        javax.xml.bind.ValidationEventHandler $r2;
        com.sun.xml.bind.v2.runtime.BinderImpl r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl $r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.BinderImpl;

        $r1 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl getUnmarshaller()>();

        $r2 = virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: javax.xml.bind.ValidationEventHandler getEventHandler()>();

        return $r2;
    }

    public java.lang.Object getProperty(java.lang.String) throws javax.xml.bind.PropertyException
    {
        java.lang.Object[] $r6;
        javax.xml.bind.PropertyException $r4, $r9, $r12;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl $r13;
        java.lang.Thread $r10;
        com.sun.xml.bind.v2.runtime.Messages $r7;
        java.lang.String r0, $r8;
        com.sun.xml.bind.v2.runtime.BinderImpl r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;
        java.lang.StackTraceElement[] $r11;
        com.sun.xml.bind.v2.runtime.MarshallerImpl $r2;
        java.lang.Object $r3, $r14;

        r1 := @this: com.sun.xml.bind.v2.runtime.BinderImpl;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r7 = <com.sun.xml.bind.v2.runtime.Messages: com.sun.xml.bind.v2.runtime.Messages NULL_PROPERTY_NAME>;

        $r6 = newarray (java.lang.Object)[0];

        $r8 = virtualinvoke $r7.<com.sun.xml.bind.v2.runtime.Messages: java.lang.String format(java.lang.Object[])>($r6);

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r5;

     label1:
        $z0 = specialinvoke r1.<com.sun.xml.bind.v2.runtime.BinderImpl: boolean excludeProperty(java.lang.String)>(r0);

        if $z0 == 0 goto label2;

        $r4 = new javax.xml.bind.PropertyException;

        specialinvoke $r4.<javax.xml.bind.PropertyException: void <init>(java.lang.String)>(r0);

        throw $r4;

     label2:
        $r2 = specialinvoke r1.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.MarshallerImpl getMarshaller()>();

        $r3 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.MarshallerImpl: java.lang.Object getProperty(java.lang.String)>(r0);

     label3:
        return $r3;

     label4:
        $r12 := @caughtexception;

     label5:
        $r13 = specialinvoke r1.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl getUnmarshaller()>();

        $r14 = virtualinvoke $r13.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: java.lang.Object getProperty(java.lang.String)>(r0);

     label6:
        return $r14;

     label7:
        $r9 := @caughtexception;

        $r10 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r11 = virtualinvoke $r10.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        virtualinvoke $r9.<javax.xml.bind.PropertyException: void setStackTrace(java.lang.StackTraceElement[])>($r11);

        throw $r9;

        catch javax.xml.bind.PropertyException from label2 to label3 with label4;
        catch javax.xml.bind.PropertyException from label5 to label6 with label7;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws javax.xml.bind.PropertyException
    {
        java.lang.Object[] $r6;
        javax.xml.bind.PropertyException $r4, $r9, $r12;
        java.lang.IllegalArgumentException $r5;
        java.lang.StackTraceElement[] $r11;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl $r13;
        com.sun.xml.bind.v2.runtime.MarshallerImpl $r2;
        java.lang.Thread $r10;
        java.lang.Object r3;
        com.sun.xml.bind.v2.runtime.Messages $r7;
        java.lang.String r0, $r8;
        com.sun.xml.bind.v2.runtime.BinderImpl r1;
        boolean $z0;

        r1 := @this: com.sun.xml.bind.v2.runtime.BinderImpl;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r7 = <com.sun.xml.bind.v2.runtime.Messages: com.sun.xml.bind.v2.runtime.Messages NULL_PROPERTY_NAME>;

        $r6 = newarray (java.lang.Object)[0];

        $r8 = virtualinvoke $r7.<com.sun.xml.bind.v2.runtime.Messages: java.lang.String format(java.lang.Object[])>($r6);

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r5;

     label1:
        $z0 = specialinvoke r1.<com.sun.xml.bind.v2.runtime.BinderImpl: boolean excludeProperty(java.lang.String)>(r0);

        if $z0 == 0 goto label2;

        $r4 = new javax.xml.bind.PropertyException;

        specialinvoke $r4.<javax.xml.bind.PropertyException: void <init>(java.lang.String,java.lang.Object)>(r0, r3);

        throw $r4;

     label2:
        $r2 = specialinvoke r1.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.MarshallerImpl getMarshaller()>();

        virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void setProperty(java.lang.String,java.lang.Object)>(r0, r3);

     label3:
        return;

     label4:
        $r12 := @caughtexception;

     label5:
        $r13 = specialinvoke r1.<com.sun.xml.bind.v2.runtime.BinderImpl: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl getUnmarshaller()>();

        virtualinvoke $r13.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: void setProperty(java.lang.String,java.lang.Object)>(r0, r3);

     label6:
        return;

     label7:
        $r9 := @caughtexception;

        $r10 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r11 = virtualinvoke $r10.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        virtualinvoke $r9.<javax.xml.bind.PropertyException: void setStackTrace(java.lang.StackTraceElement[])>($r11);

        throw $r9;

        catch javax.xml.bind.PropertyException from label2 to label3 with label4;
        catch javax.xml.bind.PropertyException from label5 to label6 with label7;
    }

    private boolean excludeProperty(java.lang.String)
    {
        java.lang.String r0;
        com.sun.xml.bind.v2.runtime.BinderImpl r1;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: com.sun.xml.bind.v2.runtime.BinderImpl;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("com.sun.xml.bind.characterEscapeHandler");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("com.sun.xml.bind.xmlDeclaration");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("com.sun.xml.bind.xmlHeaders");

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }
}
