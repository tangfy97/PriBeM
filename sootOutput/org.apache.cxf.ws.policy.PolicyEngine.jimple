public interface  org.apache.cxf.ws.policy.PolicyEngine extends java.lang.Object
{

    public abstract boolean isEnabled();

    public abstract void setEnabled(boolean);

    public abstract org.apache.cxf.ws.policy.AlternativeSelector getAlternativeSelector();

    public abstract void setAlternativeSelector(org.apache.cxf.ws.policy.AlternativeSelector);

    public abstract boolean isIgnoreUnknownAssertions();

    public abstract void setIgnoreUnknownAssertions(boolean);

    public abstract boolean supportsAlternative(java.util.Collection, org.apache.cxf.ws.policy.Assertor);

    public abstract org.apache.cxf.ws.policy.EffectivePolicy getEffectiveClientRequestPolicy(org.apache.cxf.service.model.EndpointInfo, org.apache.cxf.service.model.BindingOperationInfo, org.apache.cxf.transport.Conduit);

    public abstract void setEffectiveClientRequestPolicy(org.apache.cxf.service.model.EndpointInfo, org.apache.cxf.service.model.BindingOperationInfo, org.apache.cxf.ws.policy.EffectivePolicy);

    public abstract org.apache.cxf.ws.policy.EffectivePolicy getEffectiveServerResponsePolicy(org.apache.cxf.service.model.EndpointInfo, org.apache.cxf.service.model.BindingOperationInfo, org.apache.cxf.transport.Destination, java.util.List);

    public abstract void setEffectiveServerResponsePolicy(org.apache.cxf.service.model.EndpointInfo, org.apache.cxf.service.model.BindingOperationInfo, org.apache.cxf.ws.policy.EffectivePolicy);

    public abstract org.apache.cxf.ws.policy.EffectivePolicy getEffectiveServerFaultPolicy(org.apache.cxf.service.model.EndpointInfo, org.apache.cxf.service.model.BindingOperationInfo, org.apache.cxf.service.model.BindingFaultInfo, org.apache.cxf.transport.Destination);

    public abstract void setEffectiveServerFaultPolicy(org.apache.cxf.service.model.EndpointInfo, org.apache.cxf.service.model.BindingFaultInfo, org.apache.cxf.ws.policy.EffectivePolicy);

    public abstract org.apache.cxf.ws.policy.EndpointPolicy getClientEndpointPolicy(org.apache.cxf.service.model.EndpointInfo, org.apache.cxf.transport.Conduit);

    public abstract org.apache.cxf.ws.policy.EndpointPolicy getServerEndpointPolicy(org.apache.cxf.service.model.EndpointInfo, org.apache.cxf.transport.Destination);

    public abstract void setServerEndpointPolicy(org.apache.cxf.service.model.EndpointInfo, org.apache.cxf.ws.policy.EndpointPolicy);

    public abstract void setClientEndpointPolicy(org.apache.cxf.service.model.EndpointInfo, org.apache.cxf.ws.policy.EndpointPolicy);

    public abstract org.apache.cxf.ws.policy.EffectivePolicy getEffectiveServerRequestPolicy(org.apache.cxf.service.model.EndpointInfo, org.apache.cxf.service.model.BindingOperationInfo);

    public abstract void setEffectiveServerRequestPolicy(org.apache.cxf.service.model.EndpointInfo, org.apache.cxf.service.model.BindingOperationInfo, org.apache.cxf.ws.policy.EffectivePolicy);

    public abstract org.apache.cxf.ws.policy.EffectivePolicy getEffectiveClientResponsePolicy(org.apache.cxf.service.model.EndpointInfo, org.apache.cxf.service.model.BindingOperationInfo);

    public abstract void setEffectiveClientResponsePolicy(org.apache.cxf.service.model.EndpointInfo, org.apache.cxf.service.model.BindingOperationInfo, org.apache.cxf.ws.policy.EffectivePolicy);

    public abstract org.apache.cxf.ws.policy.EffectivePolicy getEffectiveClientFaultPolicy(org.apache.cxf.service.model.EndpointInfo, org.apache.cxf.service.model.BindingOperationInfo, org.apache.cxf.service.model.BindingFaultInfo);

    public abstract void setEffectiveClientFaultPolicy(org.apache.cxf.service.model.EndpointInfo, org.apache.cxf.service.model.BindingFaultInfo, org.apache.cxf.ws.policy.EffectivePolicy);

    public abstract org.apache.neethi.PolicyRegistry getRegistry();
}
