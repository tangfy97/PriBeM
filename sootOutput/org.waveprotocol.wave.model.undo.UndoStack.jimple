final class org.waveprotocol.wave.model.undo.UndoStack extends java.lang.Object
{
    private final java.util.Stack stack;
    private final org.waveprotocol.wave.model.undo.UndoManagerImpl$Algorithms algorithms;

    void <init>(org.waveprotocol.wave.model.undo.UndoManagerImpl$Algorithms)
    {
        org.waveprotocol.wave.model.undo.UndoStack r0;
        java.util.Stack $r1;
        org.waveprotocol.wave.model.undo.UndoManagerImpl$Algorithms r2;

        r0 := @this: org.waveprotocol.wave.model.undo.UndoStack;

        r2 := @parameter0: org.waveprotocol.wave.model.undo.UndoManagerImpl$Algorithms;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Stack;

        specialinvoke $r1.<java.util.Stack: void <init>()>();

        r0.<org.waveprotocol.wave.model.undo.UndoStack: java.util.Stack stack> = $r1;

        r0.<org.waveprotocol.wave.model.undo.UndoStack: org.waveprotocol.wave.model.undo.UndoManagerImpl$Algorithms algorithms> = r2;

        return;
    }

    void push(java.lang.Object)
    {
        org.waveprotocol.wave.model.undo.UndoStack$StackEntry $r1;
        org.waveprotocol.wave.model.undo.UndoStack r0;
        java.lang.Object r2;
        java.util.Stack $r3;

        r0 := @this: org.waveprotocol.wave.model.undo.UndoStack;

        r2 := @parameter0: java.lang.Object;

        $r3 = r0.<org.waveprotocol.wave.model.undo.UndoStack: java.util.Stack stack>;

        $r1 = new org.waveprotocol.wave.model.undo.UndoStack$StackEntry;

        specialinvoke $r1.<org.waveprotocol.wave.model.undo.UndoStack$StackEntry: void <init>(java.lang.Object)>(r2);

        virtualinvoke $r3.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r1);

        return;
    }

    org.waveprotocol.wave.model.util.Pair pop()
    {
        java.lang.IllegalStateException $r24;
        org.waveprotocol.wave.model.undo.UndoStack r0;
        org.waveprotocol.wave.model.undo.UndoManagerImpl$Algorithms $r6, $r10, $r11;
        org.waveprotocol.wave.model.operation.TransformException $r23;
        java.util.Stack $r1, $r2, $r14, $r15;
        org.waveprotocol.wave.model.undo.UndoStack$StackEntry r4, $r25;
        boolean $z0, $z1, $z2;
        org.waveprotocol.wave.model.operation.OperationPair $r13;
        org.waveprotocol.wave.model.util.Pair $r17, $r22;
        java.util.List $r8, $r9, $r20;
        java.lang.Object $r3, $r5, $r7, $r12, $r16, $r18, $r19, $r21;

        r0 := @this: org.waveprotocol.wave.model.undo.UndoStack;

        $r1 = r0.<org.waveprotocol.wave.model.undo.UndoStack: java.util.Stack stack>;

        $z0 = virtualinvoke $r1.<java.util.Stack: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = r0.<org.waveprotocol.wave.model.undo.UndoStack: java.util.Stack stack>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object pop()>();

        r4 = (org.waveprotocol.wave.model.undo.UndoStack$StackEntry) $r3;

        $r6 = r0.<org.waveprotocol.wave.model.undo.UndoStack: org.waveprotocol.wave.model.undo.UndoManagerImpl$Algorithms algorithms>;

        $r5 = r4.<org.waveprotocol.wave.model.undo.UndoStack$StackEntry: java.lang.Object op>;

        $r7 = interfaceinvoke $r6.<org.waveprotocol.wave.model.undo.UndoManagerImpl$Algorithms: java.lang.Object invert(java.lang.Object)>($r5);

        $r8 = r4.<org.waveprotocol.wave.model.undo.UndoStack$StackEntry: java.util.List nonUndoables>;

        $z1 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        $r22 = new org.waveprotocol.wave.model.util.Pair;

        specialinvoke $r22.<org.waveprotocol.wave.model.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r7, null);

        return $r22;

     label2:
        $r11 = r0.<org.waveprotocol.wave.model.undo.UndoStack: org.waveprotocol.wave.model.undo.UndoManagerImpl$Algorithms algorithms>;

        $r10 = r0.<org.waveprotocol.wave.model.undo.UndoStack: org.waveprotocol.wave.model.undo.UndoManagerImpl$Algorithms algorithms>;

        $r9 = r4.<org.waveprotocol.wave.model.undo.UndoStack$StackEntry: java.util.List nonUndoables>;

        $r12 = interfaceinvoke $r10.<org.waveprotocol.wave.model.undo.UndoManagerImpl$Algorithms: java.lang.Object compose(java.util.List)>($r9);

        $r13 = interfaceinvoke $r11.<org.waveprotocol.wave.model.undo.UndoManagerImpl$Algorithms: org.waveprotocol.wave.model.operation.OperationPair transform(java.lang.Object,java.lang.Object)>($r7, $r12);

     label3:
        goto label5;

     label4:
        $r23 := @caughtexception;

        $r24 = new java.lang.IllegalStateException;

        specialinvoke $r24.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("invalid operation transformation encountered", $r23);

        throw $r24;

     label5:
        $r14 = r0.<org.waveprotocol.wave.model.undo.UndoStack: java.util.Stack stack>;

        $z2 = virtualinvoke $r14.<java.util.Stack: boolean isEmpty()>();

        if $z2 == 0 goto label6;

        $r25 = null;

        goto label7;

     label6:
        $r15 = r0.<org.waveprotocol.wave.model.undo.UndoStack: java.util.Stack stack>;

        $r16 = virtualinvoke $r15.<java.util.Stack: java.lang.Object peek()>();

        $r25 = (org.waveprotocol.wave.model.undo.UndoStack$StackEntry) $r16;

     label7:
        if $r25 == null goto label8;

        $r20 = $r25.<org.waveprotocol.wave.model.undo.UndoStack$StackEntry: java.util.List nonUndoables>;

        $r21 = virtualinvoke $r13.<org.waveprotocol.wave.model.operation.OperationPair: java.lang.Object serverOp()>();

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r21);

     label8:
        $r17 = new org.waveprotocol.wave.model.util.Pair;

        $r18 = virtualinvoke $r13.<org.waveprotocol.wave.model.operation.OperationPair: java.lang.Object clientOp()>();

        $r19 = virtualinvoke $r13.<org.waveprotocol.wave.model.operation.OperationPair: java.lang.Object serverOp()>();

        specialinvoke $r17.<org.waveprotocol.wave.model.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r18, $r19);

        return $r17;

        catch org.waveprotocol.wave.model.operation.TransformException from label2 to label3 with label4;
    }

    void nonUndoableOperation(java.lang.Object)
    {
        org.waveprotocol.wave.model.undo.UndoStack r0;
        java.util.Stack $r1, $r2;
        org.waveprotocol.wave.model.undo.UndoStack$StackEntry $r4;
        java.util.List $r6;
        java.lang.Object $r3, r5;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.undo.UndoStack;

        r5 := @parameter0: java.lang.Object;

        $r1 = r0.<org.waveprotocol.wave.model.undo.UndoStack: java.util.Stack stack>;

        $z0 = virtualinvoke $r1.<java.util.Stack: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<org.waveprotocol.wave.model.undo.UndoStack: java.util.Stack stack>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object peek()>();

        $r4 = (org.waveprotocol.wave.model.undo.UndoStack$StackEntry) $r3;

        $r6 = $r4.<org.waveprotocol.wave.model.undo.UndoStack$StackEntry: java.util.List nonUndoables>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r5);

     label1:
        return;
    }

    void clear()
    {
        org.waveprotocol.wave.model.undo.UndoStack r0;
        java.util.Stack $r1;

        r0 := @this: org.waveprotocol.wave.model.undo.UndoStack;

        $r1 = r0.<org.waveprotocol.wave.model.undo.UndoStack: java.util.Stack stack>;

        virtualinvoke $r1.<java.util.Stack: void clear()>();

        return;
    }
}
