public class com.hp.hpl.jena.sparql.core.DatasetGraphCaching$Helper extends java.lang.Object
{

    protected void <init>()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphCaching$Helper r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphCaching$Helper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void addToDftGraph(com.hp.hpl.jena.sparql.core.DatasetGraphCaching, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r3, r4, r5;
        com.hp.hpl.jena.sparql.core.DatasetGraphCaching r0;
        com.hp.hpl.jena.graph.Graph $r1;
        com.hp.hpl.jena.graph.Triple $r2;

        r0 := @parameter0: com.hp.hpl.jena.sparql.core.DatasetGraphCaching;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        r4 := @parameter2: com.hp.hpl.jena.graph.Node;

        r5 := @parameter3: com.hp.hpl.jena.graph.Node;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphCaching: com.hp.hpl.jena.graph.Graph getDefaultGraph()>();

        $r2 = new com.hp.hpl.jena.graph.Triple;

        specialinvoke $r2.<com.hp.hpl.jena.graph.Triple: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r3, r4, r5);

        interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: void add(com.hp.hpl.jena.graph.Triple)>($r2);

        return;
    }

    public static void addToNamedGraph(com.hp.hpl.jena.sparql.core.DatasetGraphCaching, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r1, r4, r5, r6;
        com.hp.hpl.jena.sparql.core.DatasetGraphCaching r0;
        com.hp.hpl.jena.graph.Graph $r2;
        com.hp.hpl.jena.graph.Triple $r3;

        r0 := @parameter0: com.hp.hpl.jena.sparql.core.DatasetGraphCaching;

        r1 := @parameter1: com.hp.hpl.jena.graph.Node;

        r4 := @parameter2: com.hp.hpl.jena.graph.Node;

        r5 := @parameter3: com.hp.hpl.jena.graph.Node;

        r6 := @parameter4: com.hp.hpl.jena.graph.Node;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphCaching: com.hp.hpl.jena.graph.Graph getGraph(com.hp.hpl.jena.graph.Node)>(r1);

        $r3 = new com.hp.hpl.jena.graph.Triple;

        specialinvoke $r3.<com.hp.hpl.jena.graph.Triple: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r4, r5, r6);

        interfaceinvoke $r2.<com.hp.hpl.jena.graph.Graph: void add(com.hp.hpl.jena.graph.Triple)>($r3);

        return;
    }

    public static void deleteFromDftGraph(com.hp.hpl.jena.sparql.core.DatasetGraphCaching, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r3, r4, r5;
        com.hp.hpl.jena.sparql.core.DatasetGraphCaching r0;
        com.hp.hpl.jena.graph.Graph $r1;
        com.hp.hpl.jena.graph.Triple $r2;

        r0 := @parameter0: com.hp.hpl.jena.sparql.core.DatasetGraphCaching;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        r4 := @parameter2: com.hp.hpl.jena.graph.Node;

        r5 := @parameter3: com.hp.hpl.jena.graph.Node;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphCaching: com.hp.hpl.jena.graph.Graph getDefaultGraph()>();

        $r2 = new com.hp.hpl.jena.graph.Triple;

        specialinvoke $r2.<com.hp.hpl.jena.graph.Triple: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r3, r4, r5);

        interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: void delete(com.hp.hpl.jena.graph.Triple)>($r2);

        return;
    }

    public static void deleteFromNamedGraph(com.hp.hpl.jena.sparql.core.DatasetGraphCaching, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r1, r4, r5, r6;
        com.hp.hpl.jena.sparql.core.DatasetGraphCaching r0;
        com.hp.hpl.jena.graph.Graph $r2;
        com.hp.hpl.jena.graph.Triple $r3;

        r0 := @parameter0: com.hp.hpl.jena.sparql.core.DatasetGraphCaching;

        r1 := @parameter1: com.hp.hpl.jena.graph.Node;

        r4 := @parameter2: com.hp.hpl.jena.graph.Node;

        r5 := @parameter3: com.hp.hpl.jena.graph.Node;

        r6 := @parameter4: com.hp.hpl.jena.graph.Node;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphCaching: com.hp.hpl.jena.graph.Graph getGraph(com.hp.hpl.jena.graph.Node)>(r1);

        $r3 = new com.hp.hpl.jena.graph.Triple;

        specialinvoke $r3.<com.hp.hpl.jena.graph.Triple: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r4, r5, r6);

        interfaceinvoke $r2.<com.hp.hpl.jena.graph.Graph: void delete(com.hp.hpl.jena.graph.Triple)>($r3);

        return;
    }

    public static java.util.Iterator findInAnyNamedGraphs(com.hp.hpl.jena.sparql.core.DatasetGraphCaching, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        java.util.Iterator $r1, $r7, r8;
        com.hp.hpl.jena.graph.Node r3, r4, r5, r6;
        com.hp.hpl.jena.sparql.core.DatasetGraphCaching r0;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.core.DatasetGraphCaching;

        r4 := @parameter1: com.hp.hpl.jena.graph.Node;

        r5 := @parameter2: com.hp.hpl.jena.graph.Node;

        r6 := @parameter3: com.hp.hpl.jena.graph.Node;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphCaching: java.util.Iterator listGraphNodes()>();

        r8 = null;

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.hp.hpl.jena.graph.Node) $r2;

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.core.DatasetGraphCaching$Helper: java.util.Iterator findInSpecificNamedGraph(com.hp.hpl.jena.sparql.core.DatasetGraphCaching,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r0, r3, r4, r5, r6);

        r8 = staticinvoke <org.apache.jena.atlas.iterator.Iter: java.util.Iterator append(java.util.Iterator,java.util.Iterator)>(r8, $r7);

        goto label1;

     label2:
        return r8;
    }

    public static java.util.Iterator findInDftGraph(com.hp.hpl.jena.sparql.core.DatasetGraphCaching, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5;
        java.util.Iterator $r6;
        com.hp.hpl.jena.graph.Node r2, r3, r4;
        com.hp.hpl.jena.sparql.core.DatasetGraphCaching r0;
        com.hp.hpl.jena.graph.Graph $r1;

        r0 := @parameter0: com.hp.hpl.jena.sparql.core.DatasetGraphCaching;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: com.hp.hpl.jena.graph.Node;

        r4 := @parameter3: com.hp.hpl.jena.graph.Node;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphCaching: com.hp.hpl.jena.graph.Graph getDefaultGraph()>();

        $r5 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.util.iterator.ExtendedIterator find(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r2, r3, r4);

        $r6 = staticinvoke <com.hp.hpl.jena.sparql.core.DatasetGraphBase: java.util.Iterator triples2quadsDftGraph(java.util.Iterator)>($r5);

        return $r6;
    }

    public static java.util.Iterator findInSpecificNamedGraph(com.hp.hpl.jena.sparql.core.DatasetGraphCaching, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        java.util.Iterator $r7;
        com.hp.hpl.jena.graph.Node r1, r3, r4, r5;
        com.hp.hpl.jena.sparql.core.DatasetGraphCaching r0;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r6;
        com.hp.hpl.jena.graph.Graph $r2;

        r0 := @parameter0: com.hp.hpl.jena.sparql.core.DatasetGraphCaching;

        r1 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: com.hp.hpl.jena.graph.Node;

        r4 := @parameter3: com.hp.hpl.jena.graph.Node;

        r5 := @parameter4: com.hp.hpl.jena.graph.Node;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphCaching: com.hp.hpl.jena.graph.Graph getGraph(com.hp.hpl.jena.graph.Node)>(r1);

        $r6 = interfaceinvoke $r2.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.util.iterator.ExtendedIterator find(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r3, r4, r5);

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.core.DatasetGraphBase: java.util.Iterator triples2quadsDftGraph(java.util.Iterator)>($r6);

        return $r7;
    }
}
