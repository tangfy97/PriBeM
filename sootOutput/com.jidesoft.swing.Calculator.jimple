public class com.jidesoft.swing.Calculator extends javax.swing.JPanel implements java.awt.event.ActionListener
{
    private double _result;
    private java.lang.StringBuffer _op1;
    private java.lang.StringBuffer _op2;
    private int _operator;
    private java.lang.String _displayText;
    private boolean _overflow;
    private boolean _negationOp1;
    private boolean _backspaceOp1;
    private boolean _backspaceOp2;
    private boolean _clearOperatorPending;
    private boolean _isFakedEqualPressed;
    private boolean _resultCalculated;
    public static final int OPERATOR_NONE;
    public static final int OPERATOR_ADD;
    public static final int OPERATOR_MINUS;
    public static final int OPERATOR_MULTIPLY;
    public static final int OPERATOR_DIVIDE;
    private javax.swing.AbstractButton _addButton;
    private javax.swing.AbstractButton _minusButton;
    private javax.swing.AbstractButton _multiplyButton;
    private javax.swing.AbstractButton _divideButton;
    private javax.swing.AbstractButton _pointButton;
    private javax.swing.AbstractButton _equalButton;
    private javax.swing.AbstractButton _backspaceButton;
    private javax.swing.AbstractButton _clearButton;
    private javax.swing.AbstractButton _negativeButton;
    private javax.swing.AbstractButton[] _numberButtons;
    private char _actualCharPoint;
    private java.text.NumberFormat _displayFormat;
    public static final char CHAR_CLEAR;
    public static final char CHAR_POINT;
    public static final char CHAR_ADD;
    public static final char CHAR_MINUS;
    public static final char CHAR_MULTIPLY;
    public static final char CHAR_DIVIDE;
    public static final char CHAR_EQUAL;
    public static final char CHAR_NEGATIVE;
    public static final char CHAR_BACKSPACE;
    public static final char CHAR_0;
    public static final char CHAR_1;
    public static final char CHAR_2;
    public static final char CHAR_3;
    public static final char CHAR_4;
    public static final char CHAR_5;
    public static final char CHAR_6;
    public static final char CHAR_7;
    public static final char CHAR_8;
    public static final char CHAR_9;
    public static final java.lang.String PROPERTY_DISPLAY_TEXT;
    public static final java.lang.String PROPERTY_OPERATOR;
    private int _buttonWidth;
    private int _buttonHeight;
    private int _buttonGap;

    public void <init>()
    {
        java.lang.StringBuffer $r4, $r5;
        int $i1;
        com.jidesoft.swing.Calculator r0;
        java.text.NumberFormat $r3;

        r0 := @this: com.jidesoft.swing.Calculator;

        specialinvoke r0.<javax.swing.JPanel: void <init>()>();

        $i1 = (int) -1;

        r0.<com.jidesoft.swing.Calculator: int _operator> = $i1;

        r0.<com.jidesoft.swing.Calculator: boolean _overflow> = 0;

        r0.<com.jidesoft.swing.Calculator: boolean _negationOp1> = 1;

        r0.<com.jidesoft.swing.Calculator: boolean _backspaceOp1> = 0;

        r0.<com.jidesoft.swing.Calculator: boolean _backspaceOp2> = 0;

        r0.<com.jidesoft.swing.Calculator: boolean _clearOperatorPending> = 0;

        r0.<com.jidesoft.swing.Calculator: boolean _isFakedEqualPressed> = 0;

        r0.<com.jidesoft.swing.Calculator: boolean _resultCalculated> = 0;

        r0.<com.jidesoft.swing.Calculator: int _buttonWidth> = 24;

        r0.<com.jidesoft.swing.Calculator: int _buttonHeight> = 24;

        r0.<com.jidesoft.swing.Calculator: int _buttonGap> = 2;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op1> = $r4;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op2> = $r5;

        $r3 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getNumberInstance()>();

        r0.<com.jidesoft.swing.Calculator: java.text.NumberFormat _displayFormat> = $r3;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void configureNumberFormat()>();

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void initComponents()>();

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void registerKeyboardActions(javax.swing.JComponent,int)>(r0, 1);

        return;
    }

    public void setLocale(java.util.Locale)
    {
        char $c0, $c1;
        java.text.NumberFormat $r5, $r6;
        java.util.Locale r1, $r4;
        java.lang.StringBuffer $r2, $r3;
        java.lang.StringBuilder $r8, $r10, $r11;
        java.lang.String $r7, $r12;
        javax.swing.AbstractButton $r9;
        com.jidesoft.swing.Calculator r0;

        r0 := @this: com.jidesoft.swing.Calculator;

        r1 := @parameter0: java.util.Locale;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void unregisterKeyboardActions(javax.swing.JComponent)>(r0);

        specialinvoke r0.<javax.swing.JPanel: void setLocale(java.util.Locale)>(r1);

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op1> = $r2;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op2> = $r3;

        $r4 = virtualinvoke r0.<com.jidesoft.swing.Calculator: java.util.Locale getLocale()>();

        $r5 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getNumberInstance(java.util.Locale)>($r4);

        r0.<com.jidesoft.swing.Calculator: java.text.NumberFormat _displayFormat> = $r5;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void configureNumberFormat()>();

        $r6 = virtualinvoke r0.<com.jidesoft.swing.Calculator: java.text.NumberFormat getDisplayFormat()>();

        $r7 = virtualinvoke $r6.<java.text.NumberFormat: java.lang.String format(double)>(2.01);

        $c0 = virtualinvoke $r7.<java.lang.String: char charAt(int)>(1);

        r0.<com.jidesoft.swing.Calculator: char _actualCharPoint> = $c0;

        $r9 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _pointButton>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c1 = r0.<com.jidesoft.swing.Calculator: char _actualCharPoint>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<javax.swing.AbstractButton: void setText(java.lang.String)>($r12);

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void registerKeyboardActions(javax.swing.JComponent,int)>(r0, 1);

        return;
    }

    protected void configureNumberFormat()
    {
        com.jidesoft.swing.Calculator r0;
        java.text.NumberFormat $r1, $r2, $r3;

        r0 := @this: com.jidesoft.swing.Calculator;

        $r1 = r0.<com.jidesoft.swing.Calculator: java.text.NumberFormat _displayFormat>;

        virtualinvoke $r1.<java.text.NumberFormat: void setMaximumFractionDigits(int)>(20);

        $r2 = r0.<com.jidesoft.swing.Calculator: java.text.NumberFormat _displayFormat>;

        virtualinvoke $r2.<java.text.NumberFormat: void setMinimumFractionDigits(int)>(0);

        $r3 = r0.<com.jidesoft.swing.Calculator: java.text.NumberFormat _displayFormat>;

        virtualinvoke $r3.<java.text.NumberFormat: void setGroupingUsed(boolean)>(0);

        return;
    }

    public static boolean isValidKeyEvent(java.awt.event.KeyEvent)
    {
        int $i1, $i2, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean $z0, $z1, $z2, $z3;
        char $c0, $c3;
        java.awt.event.KeyEvent r0;

        r0 := @parameter0: java.awt.event.KeyEvent;

        $c0 = virtualinvoke r0.<java.awt.event.KeyEvent: char getKeyChar()>();

        $i1 = virtualinvoke r0.<java.awt.event.KeyEvent: int getModifiers()>();

        $i5 = (int) -2;

        $i2 = $i1 & $i5;

        if $i2 != 0 goto label1;

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <com.jidesoft.swing.Calculator: boolean isOperator(java.awt.event.KeyEvent)>(r0);

        if $z1 != 0 goto label1;

        $z2 = staticinvoke <com.jidesoft.swing.Calculator: boolean isEnterOrEqual(java.awt.event.KeyEvent)>(r0);

        if $z2 != 0 goto label1;

        $i6 = (int) $c0;

        if $i6 == 46 goto label1;

        $i7 = (int) $c0;

        if $i7 == 44 goto label1;

        $i8 = (int) $c0;

        if $i8 == 99 goto label1;

        $c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c0);

        $i9 = (int) $c3;

        if $i9 == 99 goto label1;

        $i10 = (int) $c0;

        if $i10 == 27 goto label1;

        $i11 = (int) $c0;

        if $i11 != 8 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public static boolean isOperator(java.awt.event.KeyEvent)
    {
        int $i1, $i2, $i3, $i4;
        char $c0;
        java.awt.event.KeyEvent r0;
        boolean $z0;

        r0 := @parameter0: java.awt.event.KeyEvent;

        $c0 = virtualinvoke r0.<java.awt.event.KeyEvent: char getKeyChar()>();

        $i1 = (int) $c0;

        if $i1 == 43 goto label1;

        $i2 = (int) $c0;

        if $i2 == 45 goto label1;

        $i3 = (int) $c0;

        if $i3 == 42 goto label1;

        $i4 = (int) $c0;

        if $i4 != 47 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static boolean isEnterOrEqual(java.awt.event.KeyEvent)
    {
        int $i1, $i2;
        char $c0;
        java.awt.event.KeyEvent r0;
        boolean $z0;

        r0 := @parameter0: java.awt.event.KeyEvent;

        $c0 = virtualinvoke r0.<java.awt.event.KeyEvent: char getKeyChar()>();

        $i1 = (int) $c0;

        if $i1 == 10 goto label1;

        $i2 = (int) $c0;

        if $i2 != 61 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public void registerKeyboardActions(javax.swing.JComponent, int)
    {
        boolean $z0;
        javax.swing.KeyStroke $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r21, $r22, $r23, $r24, $r25, $r26, $r27;
        java.lang.StringBuilder $r17, $r18, $r19;
        com.jidesoft.swing.Calculator r0;
        int i0;
        java.lang.String $r20;
        javax.swing.JComponent r1;
        char $c1, $c2, $c3, $c4;

        r0 := @this: com.jidesoft.swing.Calculator;

        r1 := @parameter0: javax.swing.JComponent;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.Calculator: boolean isCellEditor()>();

        $r2 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(43);

        virtualinvoke r1.<javax.swing.JComponent: void registerKeyboardAction(java.awt.event.ActionListener,java.lang.String,javax.swing.KeyStroke,int)>(r0, "+", $r2, i0);

        $r3 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(45);

        virtualinvoke r1.<javax.swing.JComponent: void registerKeyboardAction(java.awt.event.ActionListener,java.lang.String,javax.swing.KeyStroke,int)>(r0, "-", $r3, i0);

        $r4 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(42);

        virtualinvoke r1.<javax.swing.JComponent: void registerKeyboardAction(java.awt.event.ActionListener,java.lang.String,javax.swing.KeyStroke,int)>(r0, "*", $r4, i0);

        $r5 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(47);

        virtualinvoke r1.<javax.swing.JComponent: void registerKeyboardAction(java.awt.event.ActionListener,java.lang.String,javax.swing.KeyStroke,int)>(r0, "/", $r5, i0);

        $r6 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(61);

        virtualinvoke r1.<javax.swing.JComponent: void registerKeyboardAction(java.awt.event.ActionListener,java.lang.String,javax.swing.KeyStroke,int)>(r0, "=", $r6, i0);

        if $z0 != 0 goto label1;

        $r27 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(10, 0);

        virtualinvoke r1.<javax.swing.JComponent: void registerKeyboardAction(java.awt.event.ActionListener,java.lang.String,javax.swing.KeyStroke,int)>(r0, "=", $r27, i0);

     label1:
        $r7 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(48);

        virtualinvoke r1.<javax.swing.JComponent: void registerKeyboardAction(java.awt.event.ActionListener,java.lang.String,javax.swing.KeyStroke,int)>(r0, "0", $r7, i0);

        $r8 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(49);

        virtualinvoke r1.<javax.swing.JComponent: void registerKeyboardAction(java.awt.event.ActionListener,java.lang.String,javax.swing.KeyStroke,int)>(r0, "1", $r8, i0);

        $r9 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(50);

        virtualinvoke r1.<javax.swing.JComponent: void registerKeyboardAction(java.awt.event.ActionListener,java.lang.String,javax.swing.KeyStroke,int)>(r0, "2", $r9, i0);

        $r10 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(51);

        virtualinvoke r1.<javax.swing.JComponent: void registerKeyboardAction(java.awt.event.ActionListener,java.lang.String,javax.swing.KeyStroke,int)>(r0, "3", $r10, i0);

        $r11 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(52);

        virtualinvoke r1.<javax.swing.JComponent: void registerKeyboardAction(java.awt.event.ActionListener,java.lang.String,javax.swing.KeyStroke,int)>(r0, "4", $r11, i0);

        $r12 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(53);

        virtualinvoke r1.<javax.swing.JComponent: void registerKeyboardAction(java.awt.event.ActionListener,java.lang.String,javax.swing.KeyStroke,int)>(r0, "5", $r12, i0);

        $r13 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(54);

        virtualinvoke r1.<javax.swing.JComponent: void registerKeyboardAction(java.awt.event.ActionListener,java.lang.String,javax.swing.KeyStroke,int)>(r0, "6", $r13, i0);

        $r14 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(55);

        virtualinvoke r1.<javax.swing.JComponent: void registerKeyboardAction(java.awt.event.ActionListener,java.lang.String,javax.swing.KeyStroke,int)>(r0, "7", $r14, i0);

        $r15 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(56);

        virtualinvoke r1.<javax.swing.JComponent: void registerKeyboardAction(java.awt.event.ActionListener,java.lang.String,javax.swing.KeyStroke,int)>(r0, "8", $r15, i0);

        $r16 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(57);

        virtualinvoke r1.<javax.swing.JComponent: void registerKeyboardAction(java.awt.event.ActionListener,java.lang.String,javax.swing.KeyStroke,int)>(r0, "9", $r16, i0);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c1 = r0.<com.jidesoft.swing.Calculator: char _actualCharPoint>;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $c2 = r0.<com.jidesoft.swing.Calculator: char _actualCharPoint>;

        $r21 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>($c2);

        virtualinvoke r1.<javax.swing.JComponent: void registerKeyboardAction(java.awt.event.ActionListener,java.lang.String,javax.swing.KeyStroke,int)>(r0, $r20, $r21, i0);

        $r22 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(8, 0);

        virtualinvoke r1.<javax.swing.JComponent: void registerKeyboardAction(java.awt.event.ActionListener,java.lang.String,javax.swing.KeyStroke,int)>(r0, "<", $r22, i0);

        if $z0 != 0 goto label2;

        $r26 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(27, 0);

        virtualinvoke r1.<javax.swing.JComponent: void registerKeyboardAction(java.awt.event.ActionListener,java.lang.String,javax.swing.KeyStroke,int)>(r0, "c", $r26, i0);

     label2:
        if $z0 != 0 goto label3;

        $r25 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(27, 0);

        virtualinvoke r1.<javax.swing.JComponent: void registerKeyboardAction(java.awt.event.ActionListener,java.lang.String,javax.swing.KeyStroke,int)>(r0, "c", $r25, 1);

     label3:
        $c3 = staticinvoke <java.lang.Character: char toUpperCase(char)>(99);

        $r23 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>($c3);

        virtualinvoke r1.<javax.swing.JComponent: void registerKeyboardAction(java.awt.event.ActionListener,java.lang.String,javax.swing.KeyStroke,int)>(r0, "c", $r23, i0);

        $c4 = staticinvoke <java.lang.Character: char toLowerCase(char)>(99);

        $r24 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>($c4);

        virtualinvoke r1.<javax.swing.JComponent: void registerKeyboardAction(java.awt.event.ActionListener,java.lang.String,javax.swing.KeyStroke,int)>(r0, "c", $r24, i0);

        return;
    }

    public void unregisterKeyboardActions(javax.swing.JComponent)
    {
        boolean $z0;
        javax.swing.JComponent r1;
        javax.swing.KeyStroke $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        char $c0, $c1, $c2;
        com.jidesoft.swing.Calculator r0;

        r0 := @this: com.jidesoft.swing.Calculator;

        r1 := @parameter0: javax.swing.JComponent;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.Calculator: boolean isCellEditor()>();

        $r2 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(43);

        virtualinvoke r1.<javax.swing.JComponent: void unregisterKeyboardAction(javax.swing.KeyStroke)>($r2);

        $r3 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(45);

        virtualinvoke r1.<javax.swing.JComponent: void unregisterKeyboardAction(javax.swing.KeyStroke)>($r3);

        $r4 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(42);

        virtualinvoke r1.<javax.swing.JComponent: void unregisterKeyboardAction(javax.swing.KeyStroke)>($r4);

        $r5 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(47);

        virtualinvoke r1.<javax.swing.JComponent: void unregisterKeyboardAction(javax.swing.KeyStroke)>($r5);

        $r6 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(61);

        virtualinvoke r1.<javax.swing.JComponent: void unregisterKeyboardAction(javax.swing.KeyStroke)>($r6);

        if $z0 != 0 goto label1;

        $r22 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(10, 0);

        virtualinvoke r1.<javax.swing.JComponent: void unregisterKeyboardAction(javax.swing.KeyStroke)>($r22);

     label1:
        $r7 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(48);

        virtualinvoke r1.<javax.swing.JComponent: void unregisterKeyboardAction(javax.swing.KeyStroke)>($r7);

        $r8 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(49);

        virtualinvoke r1.<javax.swing.JComponent: void unregisterKeyboardAction(javax.swing.KeyStroke)>($r8);

        $r9 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(50);

        virtualinvoke r1.<javax.swing.JComponent: void unregisterKeyboardAction(javax.swing.KeyStroke)>($r9);

        $r10 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(51);

        virtualinvoke r1.<javax.swing.JComponent: void unregisterKeyboardAction(javax.swing.KeyStroke)>($r10);

        $r11 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(52);

        virtualinvoke r1.<javax.swing.JComponent: void unregisterKeyboardAction(javax.swing.KeyStroke)>($r11);

        $r12 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(53);

        virtualinvoke r1.<javax.swing.JComponent: void unregisterKeyboardAction(javax.swing.KeyStroke)>($r12);

        $r13 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(54);

        virtualinvoke r1.<javax.swing.JComponent: void unregisterKeyboardAction(javax.swing.KeyStroke)>($r13);

        $r14 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(55);

        virtualinvoke r1.<javax.swing.JComponent: void unregisterKeyboardAction(javax.swing.KeyStroke)>($r14);

        $r15 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(56);

        virtualinvoke r1.<javax.swing.JComponent: void unregisterKeyboardAction(javax.swing.KeyStroke)>($r15);

        $r16 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>(57);

        virtualinvoke r1.<javax.swing.JComponent: void unregisterKeyboardAction(javax.swing.KeyStroke)>($r16);

        $c0 = r0.<com.jidesoft.swing.Calculator: char _actualCharPoint>;

        $r17 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>($c0);

        virtualinvoke r1.<javax.swing.JComponent: void unregisterKeyboardAction(javax.swing.KeyStroke)>($r17);

        $r18 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(8, 0);

        virtualinvoke r1.<javax.swing.JComponent: void unregisterKeyboardAction(javax.swing.KeyStroke)>($r18);

        if $z0 != 0 goto label2;

        $r21 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(27, 0);

        virtualinvoke r1.<javax.swing.JComponent: void unregisterKeyboardAction(javax.swing.KeyStroke)>($r21);

     label2:
        $c1 = staticinvoke <java.lang.Character: char toUpperCase(char)>(99);

        $r19 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>($c1);

        virtualinvoke r1.<javax.swing.JComponent: void unregisterKeyboardAction(javax.swing.KeyStroke)>($r19);

        $c2 = staticinvoke <java.lang.Character: char toLowerCase(char)>(99);

        $r20 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(char)>($c2);

        virtualinvoke r1.<javax.swing.JComponent: void unregisterKeyboardAction(javax.swing.KeyStroke)>($r20);

        return;
    }

    protected void initComponents()
    {
        com.jidesoft.swing.Calculator$ToggleNegativeIcon $r17;
        java.text.NumberFormat $r7;
        com.jidesoft.swing.Calculator$CalculatorLayoutManager $r1;
        int i2;
        javax.swing.AbstractButton $r2, $r3, $r4, $r5, $r13, $r14, $r16, $r18, $r19, $r25;
        java.lang.String $r8, $r12, $r24;
        javax.swing.AbstractButton[] $r6, $r21;
        com.jidesoft.swing.Calculator$BackspaceIcon $r15;
        char $c0, $c1;
        java.lang.StringBuilder $r9, $r10, $r11, $r20, $r22, $r23;
        com.jidesoft.swing.Calculator r0;

        r0 := @this: com.jidesoft.swing.Calculator;

        $r1 = new com.jidesoft.swing.Calculator$CalculatorLayoutManager;

        specialinvoke $r1.<com.jidesoft.swing.Calculator$CalculatorLayoutManager: void <init>(com.jidesoft.swing.Calculator)>(r0);

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void setLayout(java.awt.LayoutManager)>($r1);

        $r2 = virtualinvoke r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton createButton(java.lang.String)>("+");

        r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _addButton> = $r2;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: java.awt.Component add(java.awt.Component)>($r2);

        $r3 = virtualinvoke r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton createButton(java.lang.String)>("-");

        r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _minusButton> = $r3;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: java.awt.Component add(java.awt.Component)>($r3);

        $r4 = virtualinvoke r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton createButton(java.lang.String)>("*");

        r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _multiplyButton> = $r4;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: java.awt.Component add(java.awt.Component)>($r4);

        $r5 = virtualinvoke r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton createButton(java.lang.String)>("/");

        r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _divideButton> = $r5;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: java.awt.Component add(java.awt.Component)>($r5);

        $r6 = newarray (javax.swing.AbstractButton)[10];

        r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton[] _numberButtons> = $r6;

        i2 = 0;

     label1:
        if i2 > 9 goto label2;

        $r21 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton[] _numberButtons>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = virtualinvoke r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton createButton(java.lang.String)>($r24);

        $r21[i2] = $r25;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: java.awt.Component add(java.awt.Component)>($r25);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r7 = virtualinvoke r0.<com.jidesoft.swing.Calculator: java.text.NumberFormat getDisplayFormat()>();

        $r8 = virtualinvoke $r7.<java.text.NumberFormat: java.lang.String format(double)>(2.01);

        $c0 = virtualinvoke $r8.<java.lang.String: char charAt(int)>(1);

        r0.<com.jidesoft.swing.Calculator: char _actualCharPoint> = $c0;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c1 = r0.<com.jidesoft.swing.Calculator: char _actualCharPoint>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton createButton(java.lang.String)>($r12);

        r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _pointButton> = $r13;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: java.awt.Component add(java.awt.Component)>($r13);

        $r14 = virtualinvoke r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton createButton(java.lang.String)>("=");

        r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _equalButton> = $r14;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: java.awt.Component add(java.awt.Component)>($r14);

        $r15 = new com.jidesoft.swing.Calculator$BackspaceIcon;

        specialinvoke $r15.<com.jidesoft.swing.Calculator$BackspaceIcon: void <init>(com.jidesoft.swing.Calculator)>(r0);

        $r16 = virtualinvoke r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton createButton(java.lang.String,javax.swing.Icon)>(null, $r15);

        r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _backspaceButton> = $r16;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: java.awt.Component add(java.awt.Component)>($r16);

        $r17 = new com.jidesoft.swing.Calculator$ToggleNegativeIcon;

        specialinvoke $r17.<com.jidesoft.swing.Calculator$ToggleNegativeIcon: void <init>(com.jidesoft.swing.Calculator)>(r0);

        $r18 = virtualinvoke r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton createButton(java.lang.String,javax.swing.Icon)>(null, $r17);

        r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _negativeButton> = $r18;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: java.awt.Component add(java.awt.Component)>($r18);

        $r19 = virtualinvoke r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton createButton(java.lang.String)>("C");

        r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _clearButton> = $r19;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: java.awt.Component add(java.awt.Component)>($r19);

        return;
    }

    public boolean isResultCalculated()
    {
        com.jidesoft.swing.Calculator r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.Calculator;

        $z0 = r0.<com.jidesoft.swing.Calculator: boolean _resultCalculated>;

        return $z0;
    }

    public void setResultCalculated(boolean)
    {
        com.jidesoft.swing.Calculator r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.Calculator;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.swing.Calculator: boolean _resultCalculated> = z0;

        return;
    }

    protected javax.swing.AbstractButton createButton(java.lang.String)
    {
        java.lang.String r1;
        javax.swing.AbstractButton $r2;
        com.jidesoft.swing.Calculator r0;

        r0 := @this: com.jidesoft.swing.Calculator;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton createButton(java.lang.String,javax.swing.Icon)>(r1, null);

        return $r2;
    }

    protected javax.swing.AbstractButton createButton(java.lang.String, javax.swing.Icon)
    {
        com.jidesoft.swing.JideButton $r0;
        javax.swing.Icon r2;
        java.lang.String r1;
        com.jidesoft.swing.Calculator r3;

        r3 := @this: com.jidesoft.swing.Calculator;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.swing.Icon;

        $r0 = new com.jidesoft.swing.JideButton;

        specialinvoke $r0.<com.jidesoft.swing.JideButton: void <init>(java.lang.String,javax.swing.Icon)>(r1, r2);

        virtualinvoke $r0.<javax.swing.AbstractButton: void setOpaque(boolean)>(1);

        virtualinvoke $r0.<javax.swing.AbstractButton: void setContentAreaFilled(boolean)>(1);

        virtualinvoke $r0.<javax.swing.AbstractButton: void setRequestFocusEnabled(boolean)>(0);

        virtualinvoke $r0.<javax.swing.AbstractButton: void setFocusable(boolean)>(0);

        virtualinvoke $r0.<javax.swing.AbstractButton: void addActionListener(java.awt.event.ActionListener)>(r3);

        return $r0;
    }

    public boolean isOverflow()
    {
        com.jidesoft.swing.Calculator r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.Calculator;

        $z0 = r0.<com.jidesoft.swing.Calculator: boolean _overflow>;

        return $z0;
    }

    public void setOverflow(boolean)
    {
        com.jidesoft.swing.Calculator r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.Calculator;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.swing.Calculator: boolean _overflow> = z0;

        return;
    }

    public void input(char)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r6, $r7, $r14, $r15, $r30, $r31;
        com.jidesoft.swing.Calculator r0;
        java.lang.StringBuffer $r1, $r2, $r5, $r9, $r10, $r13, $r17, $r18, $r19, $r21, $r22, $r24, $r25, $r27, $r28;
        int $i3, $i6, $i9, $i11, $i12, $i13, $i14, $i16, $i18, $i19, $i20, $i22, $i23, $i24, $i26, $i27;
        java.lang.String $r3, $r8, $r11, $r16, $r20, $r23, $r26, $r29;
        char c0, $c1, $c2, $c4, $c5, $c7, $c8, $c10;

        r0 := @this: com.jidesoft.swing.Calculator;

        c0 := @parameter0: char;

        $c1 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c0);

        $i11 = (int) $c1;

        if 99 == $i11 goto label01;

        $c2 = staticinvoke <java.lang.Character: char toUpperCase(char)>(c0);

        $i12 = (int) $c2;

        if 99 != $i12 goto label02;

     label01:
        virtualinvoke r0.<com.jidesoft.swing.Calculator: void clear()>();

        return;

     label02:
        $z0 = r0.<com.jidesoft.swing.Calculator: boolean _overflow>;

        if $z0 == 0 goto label03;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void beep()>();

        return;

     label03:
        $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);

        if $z1 != 0 goto label04;

        $c10 = r0.<com.jidesoft.swing.Calculator: char _actualCharPoint>;

        $i13 = (int) $c10;

        $i14 = (int) c0;

        if $i13 != $i14 goto label11;

     label04:
        $z2 = r0.<com.jidesoft.swing.Calculator: boolean _clearOperatorPending>;

        if $z2 == 0 goto label05;

        $i16 = (int) -1;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void setOperator(int)>($i16);

        $r17 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op1>;

        virtualinvoke $r17.<java.lang.StringBuffer: void setLength(int)>(0);

        r0.<com.jidesoft.swing.Calculator: boolean _clearOperatorPending> = 0;

     label05:
        $i3 = virtualinvoke r0.<com.jidesoft.swing.Calculator: int getOperator()>();

        $i18 = (int) -1;

        if $i3 != $i18 goto label08;

        $c7 = r0.<com.jidesoft.swing.Calculator: char _actualCharPoint>;

        $i19 = (int) $c7;

        $i20 = (int) c0;

        if $i19 != $i20 goto label06;

        $r13 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op1>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c8 = r0.<com.jidesoft.swing.Calculator: char _actualCharPoint>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c8);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $i9 = virtualinvoke $r13.<java.lang.StringBuffer: int indexOf(java.lang.String)>($r16);

        $i22 = (int) -1;

        if $i9 != $i22 goto label07;

     label06:
        $r9 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op1>;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);

        r0.<com.jidesoft.swing.Calculator: boolean _backspaceOp1> = 1;

        r0.<com.jidesoft.swing.Calculator: boolean _backspaceOp2> = 0;

        $r10 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op1>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void setDisplayText(java.lang.String)>($r11);

        goto label22;

     label07:
        virtualinvoke r0.<com.jidesoft.swing.Calculator: void beep()>();

        goto label22;

     label08:
        $c4 = r0.<com.jidesoft.swing.Calculator: char _actualCharPoint>;

        $i23 = (int) $c4;

        $i24 = (int) c0;

        if $i23 != $i24 goto label09;

        $r5 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op2>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c5 = r0.<com.jidesoft.swing.Calculator: char _actualCharPoint>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $i6 = virtualinvoke $r5.<java.lang.StringBuffer: int indexOf(java.lang.String)>($r8);

        $i26 = (int) -1;

        if $i6 != $i26 goto label10;

     label09:
        $r1 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op2>;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);

        r0.<com.jidesoft.swing.Calculator: boolean _backspaceOp2> = 1;

        r0.<com.jidesoft.swing.Calculator: boolean _backspaceOp1> = 0;

        $r2 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op2>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void setDisplayText(java.lang.String)>($r3);

        goto label22;

     label10:
        virtualinvoke r0.<com.jidesoft.swing.Calculator: void beep()>();

        goto label22;

     label11:
        $i27 = (int) c0;

        lookupswitch($i27)
        {
            case 33: goto label17;
            case 42: goto label14;
            case 43: goto label12;
            case 45: goto label13;
            case 47: goto label15;
            case 60: goto label19;
            case 61: goto label16;
            default: goto label22;
        };

     label12:
        specialinvoke r0.<com.jidesoft.swing.Calculator: void operatorPressed(int)>(0);

        goto label22;

     label13:
        specialinvoke r0.<com.jidesoft.swing.Calculator: void operatorPressed(int)>(1);

        goto label22;

     label14:
        specialinvoke r0.<com.jidesoft.swing.Calculator: void operatorPressed(int)>(2);

        goto label22;

     label15:
        specialinvoke r0.<com.jidesoft.swing.Calculator: void operatorPressed(int)>(3);

        goto label22;

     label16:
        specialinvoke r0.<com.jidesoft.swing.Calculator: void calculateResult(boolean)>(1);

        r0.<com.jidesoft.swing.Calculator: boolean _clearOperatorPending> = 1;

        goto label22;

     label17:
        $z5 = r0.<com.jidesoft.swing.Calculator: boolean _negationOp1>;

        if $z5 == 0 goto label18;

        $r27 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op1>;

        specialinvoke r0.<com.jidesoft.swing.Calculator: void negativePressed(java.lang.StringBuffer)>($r27);

        $r28 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op1>;

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void setDisplayText(java.lang.String)>($r29);

        goto label22;

     label18:
        $r24 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op2>;

        specialinvoke r0.<com.jidesoft.swing.Calculator: void negativePressed(java.lang.StringBuffer)>($r24);

        $r25 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op2>;

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void setDisplayText(java.lang.String)>($r26);

        goto label22;

     label19:
        $z3 = r0.<com.jidesoft.swing.Calculator: boolean _backspaceOp1>;

        if $z3 == 0 goto label20;

        $r21 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op1>;

        specialinvoke r0.<com.jidesoft.swing.Calculator: void backspacePressed(java.lang.StringBuffer)>($r21);

        $r22 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op1>;

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void setDisplayText(java.lang.String)>($r23);

        goto label22;

     label20:
        $z4 = r0.<com.jidesoft.swing.Calculator: boolean _backspaceOp2>;

        if $z4 == 0 goto label21;

        $r18 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op2>;

        specialinvoke r0.<com.jidesoft.swing.Calculator: void backspacePressed(java.lang.StringBuffer)>($r18);

        $r19 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op2>;

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void setDisplayText(java.lang.String)>($r20);

        goto label22;

     label21:
        virtualinvoke r0.<com.jidesoft.swing.Calculator: void beep()>();

     label22:
        return;
    }

    private void operatorPressed(int)
    {
        java.lang.Double $r7;
        java.text.NumberFormat $r6;
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r5, $r9, $r10;
        int $i0, $i1, i2, $i3, $i5;
        java.lang.String $r8;
        boolean $z0;
        double $d0;
        com.jidesoft.swing.Calculator r0;

        r0 := @this: com.jidesoft.swing.Calculator;

        i2 := @parameter0: int;

        $r1 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op1>;

        $i0 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        if $i0 != 0 goto label1;

        $r10 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op1>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

        goto label5;

     label1:
        $i1 = virtualinvoke r0.<com.jidesoft.swing.Calculator: int getOperator()>();

        $i5 = (int) -1;

        if $i1 == $i5 goto label2;

        $z0 = r0.<com.jidesoft.swing.Calculator: boolean _clearOperatorPending>;

        if $z0 == 0 goto label3;

     label2:
        $r2 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op2>;

        virtualinvoke $r2.<java.lang.StringBuffer: void setLength(int)>(0);

        specialinvoke r0.<com.jidesoft.swing.Calculator: void calculateResult(boolean)>(0);

        goto label5;

     label3:
        $r3 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op2>;

        $i3 = virtualinvoke $r3.<java.lang.StringBuffer: int length()>();

        if $i3 != 0 goto label4;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void beep()>();

        return;

     label4:
        r0.<com.jidesoft.swing.Calculator: boolean _isFakedEqualPressed> = 0;

        specialinvoke r0.<com.jidesoft.swing.Calculator: void calculateResult(boolean)>(1);

        $r4 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op1>;

        virtualinvoke $r4.<java.lang.StringBuffer: void setLength(int)>(0);

        $r5 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op1>;

        $r6 = virtualinvoke r0.<com.jidesoft.swing.Calculator: java.text.NumberFormat getDisplayFormat()>();

        $d0 = r0.<com.jidesoft.swing.Calculator: double _result>;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r8 = virtualinvoke $r6.<java.text.NumberFormat: java.lang.String format(java.lang.Object)>($r7);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r9 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op2>;

        virtualinvoke $r9.<java.lang.StringBuffer: void setLength(int)>(0);

     label5:
        virtualinvoke r0.<com.jidesoft.swing.Calculator: void setOperator(int)>(i2);

        r0.<com.jidesoft.swing.Calculator: boolean _negationOp1> = 0;

        r0.<com.jidesoft.swing.Calculator: boolean _clearOperatorPending> = 0;

        return;
    }

    protected void beep()
    {
        com.jidesoft.swing.Calculator r0;

        r0 := @this: com.jidesoft.swing.Calculator;

        staticinvoke <com.jidesoft.utils.PortingUtils: void notifyUser()>();

        return;
    }

    private void negativePressed(java.lang.StringBuffer)
    {
        java.lang.StringBuffer r0;
        int $i0, $i2;
        char $c1;
        com.jidesoft.swing.Calculator r1;

        r1 := @this: com.jidesoft.swing.Calculator;

        r0 := @parameter0: java.lang.StringBuffer;

        $i0 = virtualinvoke r0.<java.lang.StringBuffer: int length()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $c1 = virtualinvoke r0.<java.lang.StringBuffer: char charAt(int)>(0);

        $i2 = (int) $c1;

        if $i2 != 45 goto label2;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>(0);

        goto label3;

     label2:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>(0, 45);

     label3:
        return;
    }

    private void backspacePressed(java.lang.StringBuffer)
    {
        java.lang.StringBuffer r0;
        int $i0, $i1, $i2;
        com.jidesoft.swing.Calculator r1;

        r1 := @this: com.jidesoft.swing.Calculator;

        r0 := @parameter0: java.lang.StringBuffer;

        $i0 = virtualinvoke r0.<java.lang.StringBuffer: int length()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $i1 = virtualinvoke r0.<java.lang.StringBuffer: int length()>();

        $i2 = $i1 - 1;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i2);

        return;
    }

    public void updateResult()
    {
        com.jidesoft.swing.Calculator r0;

        r0 := @this: com.jidesoft.swing.Calculator;

        r0.<com.jidesoft.swing.Calculator: boolean _isFakedEqualPressed> = 0;

        specialinvoke r0.<com.jidesoft.swing.Calculator: void calculateResult(boolean)>(1);

        return;
    }

    private void calculateResult(boolean)
    {
        byte $b4;
        java.text.ParseException $r17;
        boolean z0, $z1, $z2;
        java.lang.Exception $r16;
        java.lang.StringBuilder $r6, $r7, $r28;
        com.jidesoft.swing.Calculator r0;
        java.lang.Double r22, r27;
        java.text.NumberFormat $r4, $r11, $r18, $r23;
        java.lang.StringBuffer $r1, $r2, $r3, $r9, $r13, $r14, $r15, $r19, $r24;
        int $i0, $i1, $i2, $i3, $i5, $i7;
        java.lang.String $r8, $r10, $r12, $r20, $r25;
        java.lang.Number $r21, $r26;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;

        r0 := @this: com.jidesoft.swing.Calculator;

        z0 := @parameter0: boolean;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.Calculator: int getOperator()>();

        $i7 = (int) -1;

        if $i0 != $i7 goto label01;

        return;

     label01:
        $r1 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op1>;

        $i1 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        if $i1 != 0 goto label02;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void beep()>();

        return;

     label02:
        if z0 == 0 goto label03;

        $r13 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op2>;

        $i5 = virtualinvoke $r13.<java.lang.StringBuffer: int length()>();

        if $i5 != 0 goto label04;

        $r15 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op2>;

        $r14 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op1>;

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>($r14);

        goto label04;

     label03:
        $r2 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op2>;

        $i2 = virtualinvoke $r2.<java.lang.StringBuffer: int length()>();

        if $i2 != 0 goto label04;

        return;

     label04:
        $r18 = virtualinvoke r0.<com.jidesoft.swing.Calculator: java.text.NumberFormat getDisplayFormat()>();

        $r19 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op1>;

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        $r21 = virtualinvoke $r18.<java.text.NumberFormat: java.lang.Number parse(java.lang.String)>($r20);

        $d15 = virtualinvoke $r21.<java.lang.Number: double doubleValue()>();

        r22 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d15);

        $r23 = virtualinvoke r0.<com.jidesoft.swing.Calculator: java.text.NumberFormat getDisplayFormat()>();

        $r24 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op2>;

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        $r26 = virtualinvoke $r23.<java.text.NumberFormat: java.lang.Number parse(java.lang.String)>($r25);

        $d16 = virtualinvoke $r26.<java.lang.Number: double doubleValue()>();

        r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d16);

     label05:
        goto label07;

     label06:
        $r17 := @caughtexception;

        r22 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

     label07:
        $z1 = r0.<com.jidesoft.swing.Calculator: boolean _isFakedEqualPressed>;

        if $z1 != 0 goto label16;

     label08:
        $i3 = virtualinvoke r0.<com.jidesoft.swing.Calculator: int getOperator()>();

        tableswitch($i3)
        {
            case 0: goto label09;
            case 1: goto label10;
            case 2: goto label11;
            case 3: goto label12;
            default: goto label14;
        };

     label09:
        $d12 = virtualinvoke r22.<java.lang.Double: double doubleValue()>();

        $d13 = virtualinvoke r27.<java.lang.Double: double doubleValue()>();

        $d14 = $d12 + $d13;

        r0.<com.jidesoft.swing.Calculator: double _result> = $d14;

        goto label14;

     label10:
        $d9 = virtualinvoke r22.<java.lang.Double: double doubleValue()>();

        $d10 = virtualinvoke r27.<java.lang.Double: double doubleValue()>();

        $d11 = $d9 - $d10;

        r0.<com.jidesoft.swing.Calculator: double _result> = $d11;

        goto label14;

     label11:
        $d6 = virtualinvoke r22.<java.lang.Double: double doubleValue()>();

        $d7 = virtualinvoke r27.<java.lang.Double: double doubleValue()>();

        $d8 = $d6 * $d7;

        r0.<com.jidesoft.swing.Calculator: double _result> = $d8;

        goto label14;

     label12:
        $d2 = virtualinvoke r27.<java.lang.Double: double doubleValue()>();

        $b4 = $d2 cmpl 0.0;

        if $b4 != 0 goto label13;

        r0.<com.jidesoft.swing.Calculator: double _result> = #NaN;

        r0.<com.jidesoft.swing.Calculator: boolean _overflow> = 1;

        goto label14;

     label13:
        $d3 = virtualinvoke r22.<java.lang.Double: double doubleValue()>();

        $d4 = virtualinvoke r27.<java.lang.Double: double doubleValue()>();

        $d5 = $d3 / $d4;

        r0.<com.jidesoft.swing.Calculator: double _result> = $d5;

     label14:
        goto label16;

     label15:
        $r16 := @caughtexception;

        r0.<com.jidesoft.swing.Calculator: boolean _overflow> = 1;

     label16:
        $z2 = r0.<com.jidesoft.swing.Calculator: boolean _overflow>;

        if $z2 == 0 goto label17;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void setDisplayText(java.lang.String)>("E");

        goto label20;

     label17:
        virtualinvoke r0.<com.jidesoft.swing.Calculator: void setResultCalculated(boolean)>(1);

        $r3 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op1>;

        virtualinvoke $r3.<java.lang.StringBuffer: void setLength(int)>(0);

        $r4 = r0.<com.jidesoft.swing.Calculator: java.text.NumberFormat _displayFormat>;

        if $r4 == null goto label18;

        $r11 = r0.<com.jidesoft.swing.Calculator: java.text.NumberFormat _displayFormat>;

        $d1 = r0.<com.jidesoft.swing.Calculator: double _result>;

        $r12 = virtualinvoke $r11.<java.text.NumberFormat: java.lang.String format(double)>($d1);

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void setDisplayText(java.lang.String)>($r12);

        goto label19;

     label18:
        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $d0 = r0.<com.jidesoft.swing.Calculator: double _result>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void setDisplayText(java.lang.String)>($r8);

     label19:
        $r9 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op1>;

        $r10 = virtualinvoke r0.<com.jidesoft.swing.Calculator: java.lang.String getDisplayText()>();

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        r0.<com.jidesoft.swing.Calculator: boolean _negationOp1> = 1;

        r0.<com.jidesoft.swing.Calculator: boolean _backspaceOp1> = 1;

        r0.<com.jidesoft.swing.Calculator: boolean _backspaceOp2> = 0;

     label20:
        return;

        catch java.text.ParseException from label04 to label05 with label06;
        catch java.lang.Exception from label08 to label14 with label15;
    }

    private void clearOps()
    {
        java.lang.StringBuffer $r1, $r2;
        int $i1;
        com.jidesoft.swing.Calculator r0;

        r0 := @this: com.jidesoft.swing.Calculator;

        $i1 = (int) -1;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void setOperator(int)>($i1);

        $r1 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op1>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r2 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op2>;

        virtualinvoke $r2.<java.lang.StringBuffer: void setLength(int)>(0);

        return;
    }

    public void clear()
    {
        com.jidesoft.swing.Calculator r0;

        r0 := @this: com.jidesoft.swing.Calculator;

        specialinvoke r0.<com.jidesoft.swing.Calculator: void clearOps()>();

        r0.<com.jidesoft.swing.Calculator: boolean _overflow> = 0;

        r0.<com.jidesoft.swing.Calculator: boolean _clearOperatorPending> = 0;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void setDisplayText(java.lang.String)>("0");

        return;
    }

    public double getResult()
    {
        com.jidesoft.swing.Calculator r0;
        double $d0;

        r0 := @this: com.jidesoft.swing.Calculator;

        $d0 = r0.<com.jidesoft.swing.Calculator: double _result>;

        return $d0;
    }

    public java.lang.String getDisplayText()
    {
        java.lang.String $r1;
        com.jidesoft.swing.Calculator r0;

        r0 := @this: com.jidesoft.swing.Calculator;

        $r1 = r0.<com.jidesoft.swing.Calculator: java.lang.String _displayText>;

        return $r1;
    }

    public void setDisplayText(java.lang.String)
    {
        java.lang.String r1, r2, $r3;
        com.jidesoft.swing.Calculator r0;

        r0 := @this: com.jidesoft.swing.Calculator;

        r2 := @parameter0: java.lang.String;

        r1 = r0.<com.jidesoft.swing.Calculator: java.lang.String _displayText>;

        r0.<com.jidesoft.swing.Calculator: java.lang.String _displayText> = r2;

        $r3 = r0.<com.jidesoft.swing.Calculator: java.lang.String _displayText>;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("displayText", r1, $r3);

        return;
    }

    public int getOperator()
    {
        int $i0;
        com.jidesoft.swing.Calculator r0;

        r0 := @this: com.jidesoft.swing.Calculator;

        $i0 = r0.<com.jidesoft.swing.Calculator: int _operator>;

        return $i0;
    }

    public void setOperator(int)
    {
        int i0, i1;
        com.jidesoft.swing.Calculator r0;
        java.lang.Integer $r1, $r2;

        r0 := @this: com.jidesoft.swing.Calculator;

        i1 := @parameter0: int;

        i0 = r0.<com.jidesoft.swing.Calculator: int _operator>;

        if i0 == i1 goto label1;

        r0.<com.jidesoft.swing.Calculator: int _operator> = i1;

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i0);

        $r2 = new java.lang.Integer;

        specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i1);

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("operator", $r1, $r2);

     label1:
        return;
    }

    public void actionPerformed(java.awt.event.ActionEvent)
    {
        int $i0, i4;
        javax.swing.AbstractButton $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r16;
        java.lang.String $r12, $r13, $r14, $r20, $r21, $r22;
        boolean $z0, $z1, z2;
        javax.swing.AbstractButton[] $r15;
        char $c1, $c2, $c3;
        java.awt.event.ActionEvent r0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r17, $r18, $r19;
        com.jidesoft.swing.Calculator r2;

        r2 := @this: com.jidesoft.swing.Calculator;

        r0 := @parameter0: java.awt.event.ActionEvent;

        $r1 = virtualinvoke r0.<java.awt.event.ActionEvent: java.lang.Object getSource()>();

        $r3 = r2.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _addButton>;

        if $r3 != $r1 goto label01;

        virtualinvoke r2.<com.jidesoft.swing.Calculator: void input(char)>(43);

        goto label16;

     label01:
        $r4 = r2.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _minusButton>;

        if $r4 != $r1 goto label02;

        virtualinvoke r2.<com.jidesoft.swing.Calculator: void input(char)>(45);

        goto label16;

     label02:
        $r5 = r2.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _multiplyButton>;

        if $r5 != $r1 goto label03;

        virtualinvoke r2.<com.jidesoft.swing.Calculator: void input(char)>(42);

        goto label16;

     label03:
        $r6 = r2.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _divideButton>;

        if $r6 != $r1 goto label04;

        virtualinvoke r2.<com.jidesoft.swing.Calculator: void input(char)>(47);

        goto label16;

     label04:
        $r7 = r2.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _equalButton>;

        if $r7 != $r1 goto label07;

        $r21 = virtualinvoke r0.<java.awt.event.ActionEvent: java.lang.String getActionCommand()>();

        if $r21 == null goto label05;

        $r22 = virtualinvoke r0.<java.awt.event.ActionEvent: java.lang.String getActionCommand()>();

        $z0 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>("Faked");

        if $z0 == 0 goto label05;

        $z1 = 1;

        goto label06;

     label05:
        $z1 = 0;

     label06:
        r2.<com.jidesoft.swing.Calculator: boolean _isFakedEqualPressed> = $z1;

        virtualinvoke r2.<com.jidesoft.swing.Calculator: void input(char)>(61);

        goto label16;

     label07:
        $r8 = r2.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _pointButton>;

        if $r8 != $r1 goto label08;

        $c3 = r2.<com.jidesoft.swing.Calculator: char _actualCharPoint>;

        virtualinvoke r2.<com.jidesoft.swing.Calculator: void input(char)>($c3);

        goto label16;

     label08:
        $r9 = r2.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _negativeButton>;

        if $r9 != $r1 goto label09;

        virtualinvoke r2.<com.jidesoft.swing.Calculator: void input(char)>(33);

        goto label16;

     label09:
        $r10 = r2.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _backspaceButton>;

        if $r10 != $r1 goto label10;

        virtualinvoke r2.<com.jidesoft.swing.Calculator: void input(char)>(60);

        goto label16;

     label10:
        $r11 = r2.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _clearButton>;

        if $r11 != $r1 goto label11;

        virtualinvoke r2.<com.jidesoft.swing.Calculator: void input(char)>(99);

        goto label16;

     label11:
        z2 = 0;

        i4 = 0;

     label12:
        if i4 > 9 goto label14;

        $r15 = r2.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton[] _numberButtons>;

        $r16 = $r15[i4];

        if $r16 != $r1 goto label13;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $c2 = virtualinvoke $r20.<java.lang.String: char charAt(int)>(0);

        virtualinvoke r2.<com.jidesoft.swing.Calculator: void input(char)>($c2);

        z2 = 1;

        goto label14;

     label13:
        i4 = i4 + 1;

        goto label12;

     label14:
        if z2 != 0 goto label16;

        $r12 = virtualinvoke r0.<java.awt.event.ActionEvent: java.lang.String getActionCommand()>();

        if $r12 == null goto label15;

        $r13 = virtualinvoke r0.<java.awt.event.ActionEvent: java.lang.String getActionCommand()>();

        $i0 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i0 <= 0 goto label15;

        $r14 = virtualinvoke r0.<java.awt.event.ActionEvent: java.lang.String getActionCommand()>();

        $c1 = virtualinvoke $r14.<java.lang.String: char charAt(int)>(0);

        specialinvoke r2.<com.jidesoft.swing.Calculator: void fakePressButton(char)>($c1);

        goto label16;

     label15:
        specialinvoke r2.<com.jidesoft.swing.Calculator: void fakePressButton(char)>(61);

     label16:
        return;
    }

    protected void fakePressButton(javax.swing.AbstractButton)
    {
        javax.swing.AbstractButton r2;
        com.jidesoft.swing.Calculator r0;
        java.awt.event.ActionEvent $r1;

        r0 := @this: com.jidesoft.swing.Calculator;

        r2 := @parameter0: javax.swing.AbstractButton;

        $r1 = new java.awt.event.ActionEvent;

        specialinvoke $r1.<java.awt.event.ActionEvent: void <init>(java.lang.Object,int,java.lang.String)>(r2, 0, null);

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void actionPerformed(java.awt.event.ActionEvent)>($r1);

        return;
    }

    private void fakePressButton(char)
    {
        javax.swing.AbstractButton[] $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22;
        com.jidesoft.swing.Calculator r0;
        int $i2, $i3, $i4;
        javax.swing.AbstractButton $r1, $r2, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r24, $r25, $r26, $r27, $r28, $r29;
        char c0, $c1;

        r0 := @this: com.jidesoft.swing.Calculator;

        c0 := @parameter0: char;

        $c1 = r0.<com.jidesoft.swing.Calculator: char _actualCharPoint>;

        $i2 = (int) c0;

        $i3 = (int) $c1;

        if $i2 != $i3 goto label01;

        $r29 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _pointButton>;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void fakePressButton(javax.swing.AbstractButton)>($r29);

        return;

     label01:
        $i4 = (int) c0;

        tableswitch($i4)
        {
            case 33: goto label05;
            case 34: goto label20;
            case 35: goto label20;
            case 36: goto label20;
            case 37: goto label20;
            case 38: goto label20;
            case 39: goto label20;
            case 40: goto label20;
            case 41: goto label20;
            case 42: goto label08;
            case 43: goto label06;
            case 44: goto label20;
            case 45: goto label07;
            case 46: goto label20;
            case 47: goto label09;
            case 48: goto label10;
            case 49: goto label11;
            case 50: goto label12;
            case 51: goto label13;
            case 52: goto label14;
            case 53: goto label15;
            case 54: goto label16;
            case 55: goto label17;
            case 56: goto label18;
            case 57: goto label19;
            case 58: goto label20;
            case 59: goto label20;
            case 60: goto label03;
            case 61: goto label04;
            case 62: goto label20;
            case 63: goto label20;
            case 64: goto label20;
            case 65: goto label20;
            case 66: goto label20;
            case 67: goto label20;
            case 68: goto label20;
            case 69: goto label20;
            case 70: goto label20;
            case 71: goto label20;
            case 72: goto label20;
            case 73: goto label20;
            case 74: goto label20;
            case 75: goto label20;
            case 76: goto label20;
            case 77: goto label20;
            case 78: goto label20;
            case 79: goto label20;
            case 80: goto label20;
            case 81: goto label20;
            case 82: goto label20;
            case 83: goto label20;
            case 84: goto label20;
            case 85: goto label20;
            case 86: goto label20;
            case 87: goto label20;
            case 88: goto label20;
            case 89: goto label20;
            case 90: goto label20;
            case 91: goto label20;
            case 92: goto label20;
            case 93: goto label20;
            case 94: goto label20;
            case 95: goto label20;
            case 96: goto label20;
            case 97: goto label20;
            case 98: goto label20;
            case 99: goto label02;
            default: goto label20;
        };

     label02:
        $r1 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _clearButton>;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void fakePressButton(javax.swing.AbstractButton)>($r1);

        goto label20;

     label03:
        $r3 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _backspaceButton>;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void fakePressButton(javax.swing.AbstractButton)>($r3);

        goto label20;

     label04:
        $r2 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _equalButton>;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void fakePressButton(javax.swing.AbstractButton)>($r2);

        goto label20;

     label05:
        $r28 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _negativeButton>;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void fakePressButton(javax.swing.AbstractButton)>($r28);

        goto label20;

     label06:
        $r26 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _addButton>;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void fakePressButton(javax.swing.AbstractButton)>($r26);

        goto label20;

     label07:
        $r25 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _minusButton>;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void fakePressButton(javax.swing.AbstractButton)>($r25);

        goto label20;

     label08:
        $r27 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _multiplyButton>;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void fakePressButton(javax.swing.AbstractButton)>($r27);

        goto label20;

     label09:
        $r24 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _divideButton>;

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void fakePressButton(javax.swing.AbstractButton)>($r24);

        goto label20;

     label10:
        $r22 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton[] _numberButtons>;

        $r23 = $r22[0];

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void fakePressButton(javax.swing.AbstractButton)>($r23);

        goto label20;

     label11:
        $r20 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton[] _numberButtons>;

        $r21 = $r20[1];

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void fakePressButton(javax.swing.AbstractButton)>($r21);

        goto label20;

     label12:
        $r18 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton[] _numberButtons>;

        $r19 = $r18[2];

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void fakePressButton(javax.swing.AbstractButton)>($r19);

        goto label20;

     label13:
        $r16 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton[] _numberButtons>;

        $r17 = $r16[3];

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void fakePressButton(javax.swing.AbstractButton)>($r17);

        goto label20;

     label14:
        $r14 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton[] _numberButtons>;

        $r15 = $r14[4];

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void fakePressButton(javax.swing.AbstractButton)>($r15);

        goto label20;

     label15:
        $r12 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton[] _numberButtons>;

        $r13 = $r12[5];

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void fakePressButton(javax.swing.AbstractButton)>($r13);

        goto label20;

     label16:
        $r10 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton[] _numberButtons>;

        $r11 = $r10[6];

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void fakePressButton(javax.swing.AbstractButton)>($r11);

        goto label20;

     label17:
        $r8 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton[] _numberButtons>;

        $r9 = $r8[7];

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void fakePressButton(javax.swing.AbstractButton)>($r9);

        goto label20;

     label18:
        $r6 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton[] _numberButtons>;

        $r7 = $r6[8];

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void fakePressButton(javax.swing.AbstractButton)>($r7);

        goto label20;

     label19:
        $r4 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton[] _numberButtons>;

        $r5 = $r4[9];

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void fakePressButton(javax.swing.AbstractButton)>($r5);

     label20:
        return;
    }

    public java.text.NumberFormat getDisplayFormat()
    {
        com.jidesoft.swing.Calculator r0;
        java.text.NumberFormat $r1;

        r0 := @this: com.jidesoft.swing.Calculator;

        $r1 = r0.<com.jidesoft.swing.Calculator: java.text.NumberFormat _displayFormat>;

        return $r1;
    }

    public void setDisplayFormat(java.text.NumberFormat)
    {
        com.jidesoft.swing.Calculator r0;
        java.text.NumberFormat r1;

        r0 := @this: com.jidesoft.swing.Calculator;

        r1 := @parameter0: java.text.NumberFormat;

        r0.<com.jidesoft.swing.Calculator: java.text.NumberFormat _displayFormat> = r1;

        return;
    }

    public void commit()
    {
        javax.swing.AbstractButton $r2;
        com.jidesoft.swing.Calculator r0;
        java.awt.event.ActionEvent $r1;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.Calculator;

        $z0 = r0.<com.jidesoft.swing.Calculator: boolean _clearOperatorPending>;

        if $z0 != 0 goto label1;

        $r1 = new java.awt.event.ActionEvent;

        $r2 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _equalButton>;

        specialinvoke $r1.<java.awt.event.ActionEvent: void <init>(java.lang.Object,int,java.lang.String)>($r2, 0, "Faked");

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void actionPerformed(java.awt.event.ActionEvent)>($r1);

     label1:
        return;
    }

    public int getButtonWidth()
    {
        int $i0;
        com.jidesoft.swing.Calculator r0;

        r0 := @this: com.jidesoft.swing.Calculator;

        $i0 = r0.<com.jidesoft.swing.Calculator: int _buttonWidth>;

        return $i0;
    }

    public void setButtonWidth(int)
    {
        int i0;
        com.jidesoft.swing.Calculator r0;

        r0 := @this: com.jidesoft.swing.Calculator;

        i0 := @parameter0: int;

        r0.<com.jidesoft.swing.Calculator: int _buttonWidth> = i0;

        return;
    }

    public int getButtonHeight()
    {
        int $i0;
        com.jidesoft.swing.Calculator r0;

        r0 := @this: com.jidesoft.swing.Calculator;

        $i0 = r0.<com.jidesoft.swing.Calculator: int _buttonHeight>;

        return $i0;
    }

    public void setButtonHeight(int)
    {
        int i0;
        com.jidesoft.swing.Calculator r0;

        r0 := @this: com.jidesoft.swing.Calculator;

        i0 := @parameter0: int;

        r0.<com.jidesoft.swing.Calculator: int _buttonHeight> = i0;

        return;
    }

    public int getButtonGap()
    {
        int $i0;
        com.jidesoft.swing.Calculator r0;

        r0 := @this: com.jidesoft.swing.Calculator;

        $i0 = r0.<com.jidesoft.swing.Calculator: int _buttonGap>;

        return $i0;
    }

    public void setButtonGap(int)
    {
        int i0;
        com.jidesoft.swing.Calculator r0;

        r0 := @this: com.jidesoft.swing.Calculator;

        i0 := @parameter0: int;

        r0.<com.jidesoft.swing.Calculator: int _buttonGap> = i0;

        return;
    }

    protected boolean isCellEditor()
    {
        com.jidesoft.swing.Calculator r0;

        r0 := @this: com.jidesoft.swing.Calculator;

        return 0;
    }

    public void setInitialValue(java.lang.String)
    {
        java.lang.StringBuffer $r1, $r3, $r4;
        java.lang.String r2, $r5;
        com.jidesoft.swing.Calculator r0;

        r0 := @this: com.jidesoft.swing.Calculator;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op1>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r3 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op1>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        r0.<com.jidesoft.swing.Calculator: boolean _backspaceOp1> = 1;

        r0.<com.jidesoft.swing.Calculator: boolean _backspaceOp2> = 0;

        $r4 = r0.<com.jidesoft.swing.Calculator: java.lang.StringBuffer _op1>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.jidesoft.swing.Calculator: void setDisplayText(java.lang.String)>($r5);

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r1;
        com.jidesoft.swing.Calculator $r0;

        r1 := @parameter0: java.lang.String[];

        $r0 = new com.jidesoft.swing.Calculator;

        specialinvoke $r0.<com.jidesoft.swing.Calculator: void <init>()>();

        virtualinvoke $r0.<com.jidesoft.swing.Calculator: void input(char)>(49);

        virtualinvoke $r0.<com.jidesoft.swing.Calculator: void input(char)>(48);

        virtualinvoke $r0.<com.jidesoft.swing.Calculator: void input(char)>(42);

        virtualinvoke $r0.<com.jidesoft.swing.Calculator: void input(char)>(50);

        virtualinvoke $r0.<com.jidesoft.swing.Calculator: void input(char)>(52);

        virtualinvoke $r0.<com.jidesoft.swing.Calculator: void input(char)>(61);

        return;
    }

    static javax.swing.AbstractButton[] access$000(com.jidesoft.swing.Calculator)
    {
        javax.swing.AbstractButton[] $r1;
        com.jidesoft.swing.Calculator r0;

        r0 := @parameter0: com.jidesoft.swing.Calculator;

        $r1 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton[] _numberButtons>;

        return $r1;
    }

    static javax.swing.AbstractButton access$100(com.jidesoft.swing.Calculator)
    {
        javax.swing.AbstractButton $r1;
        com.jidesoft.swing.Calculator r0;

        r0 := @parameter0: com.jidesoft.swing.Calculator;

        $r1 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _divideButton>;

        return $r1;
    }

    static javax.swing.AbstractButton access$200(com.jidesoft.swing.Calculator)
    {
        javax.swing.AbstractButton $r1;
        com.jidesoft.swing.Calculator r0;

        r0 := @parameter0: com.jidesoft.swing.Calculator;

        $r1 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _multiplyButton>;

        return $r1;
    }

    static javax.swing.AbstractButton access$300(com.jidesoft.swing.Calculator)
    {
        javax.swing.AbstractButton $r1;
        com.jidesoft.swing.Calculator r0;

        r0 := @parameter0: com.jidesoft.swing.Calculator;

        $r1 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _minusButton>;

        return $r1;
    }

    static javax.swing.AbstractButton access$400(com.jidesoft.swing.Calculator)
    {
        javax.swing.AbstractButton $r1;
        com.jidesoft.swing.Calculator r0;

        r0 := @parameter0: com.jidesoft.swing.Calculator;

        $r1 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _pointButton>;

        return $r1;
    }

    static javax.swing.AbstractButton access$500(com.jidesoft.swing.Calculator)
    {
        javax.swing.AbstractButton $r1;
        com.jidesoft.swing.Calculator r0;

        r0 := @parameter0: com.jidesoft.swing.Calculator;

        $r1 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _negativeButton>;

        return $r1;
    }

    static javax.swing.AbstractButton access$600(com.jidesoft.swing.Calculator)
    {
        javax.swing.AbstractButton $r1;
        com.jidesoft.swing.Calculator r0;

        r0 := @parameter0: com.jidesoft.swing.Calculator;

        $r1 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _addButton>;

        return $r1;
    }

    static javax.swing.AbstractButton access$700(com.jidesoft.swing.Calculator)
    {
        javax.swing.AbstractButton $r1;
        com.jidesoft.swing.Calculator r0;

        r0 := @parameter0: com.jidesoft.swing.Calculator;

        $r1 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _clearButton>;

        return $r1;
    }

    static javax.swing.AbstractButton access$800(com.jidesoft.swing.Calculator)
    {
        javax.swing.AbstractButton $r1;
        com.jidesoft.swing.Calculator r0;

        r0 := @parameter0: com.jidesoft.swing.Calculator;

        $r1 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _backspaceButton>;

        return $r1;
    }

    static javax.swing.AbstractButton access$900(com.jidesoft.swing.Calculator)
    {
        javax.swing.AbstractButton $r1;
        com.jidesoft.swing.Calculator r0;

        r0 := @parameter0: com.jidesoft.swing.Calculator;

        $r1 = r0.<com.jidesoft.swing.Calculator: javax.swing.AbstractButton _equalButton>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.jidesoft.swing.Calculator: java.lang.String PROPERTY_OPERATOR> = "operator";

        <com.jidesoft.swing.Calculator: java.lang.String PROPERTY_DISPLAY_TEXT> = "displayText";

        <com.jidesoft.swing.Calculator: char CHAR_9> = 57;

        <com.jidesoft.swing.Calculator: char CHAR_8> = 56;

        <com.jidesoft.swing.Calculator: char CHAR_7> = 55;

        <com.jidesoft.swing.Calculator: char CHAR_6> = 54;

        <com.jidesoft.swing.Calculator: char CHAR_5> = 53;

        <com.jidesoft.swing.Calculator: char CHAR_4> = 52;

        <com.jidesoft.swing.Calculator: char CHAR_3> = 51;

        <com.jidesoft.swing.Calculator: char CHAR_2> = 50;

        <com.jidesoft.swing.Calculator: char CHAR_1> = 49;

        <com.jidesoft.swing.Calculator: char CHAR_0> = 48;

        <com.jidesoft.swing.Calculator: char CHAR_BACKSPACE> = 60;

        <com.jidesoft.swing.Calculator: char CHAR_NEGATIVE> = 33;

        <com.jidesoft.swing.Calculator: char CHAR_EQUAL> = 61;

        <com.jidesoft.swing.Calculator: char CHAR_DIVIDE> = 47;

        <com.jidesoft.swing.Calculator: char CHAR_MULTIPLY> = 42;

        <com.jidesoft.swing.Calculator: char CHAR_MINUS> = 45;

        <com.jidesoft.swing.Calculator: char CHAR_ADD> = 43;

        <com.jidesoft.swing.Calculator: char CHAR_POINT> = 46;

        <com.jidesoft.swing.Calculator: char CHAR_CLEAR> = 99;

        <com.jidesoft.swing.Calculator: int OPERATOR_DIVIDE> = 3;

        <com.jidesoft.swing.Calculator: int OPERATOR_MULTIPLY> = 2;

        <com.jidesoft.swing.Calculator: int OPERATOR_MINUS> = 1;

        <com.jidesoft.swing.Calculator: int OPERATOR_ADD> = 0;

        <com.jidesoft.swing.Calculator: int OPERATOR_NONE> = -1;

        return;
    }
}
