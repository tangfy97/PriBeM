public final class org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegateImpl_150 extends org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate
{

    public void <init>()
    {
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegateImpl_150 r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegateImpl_150;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate: void <init>()>();

        return;
    }

    public void populateAnnotationTypeIfNecessary(java.lang.Class, org.apache.xmlbeans.impl.jam.mutable.MClass, org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder)
    {
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder r3;
        java.lang.Class r1;
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegateImpl_150 r0;
        org.apache.xmlbeans.impl.jam.mutable.MClass r2;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegateImpl_150;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.xmlbeans.impl.jam.mutable.MClass;

        r3 := @parameter2: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder;

        return;
    }

    public void extractAnnotations(org.apache.xmlbeans.impl.jam.mutable.MMember, java.lang.reflect.Method)
    {
        org.apache.xmlbeans.impl.jam.mutable.MMember r1;
        java.lang.reflect.Method r2;
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegateImpl_150 r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegateImpl_150;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MMember;

        r2 := @parameter1: java.lang.reflect.Method;

        return;
    }

    public void extractAnnotations(org.apache.xmlbeans.impl.jam.mutable.MConstructor, java.lang.reflect.Constructor)
    {
        org.apache.xmlbeans.impl.jam.mutable.MConstructor r1;
        java.lang.reflect.Constructor r2;
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegateImpl_150 r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegateImpl_150;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MConstructor;

        r2 := @parameter1: java.lang.reflect.Constructor;

        return;
    }

    public void extractAnnotations(org.apache.xmlbeans.impl.jam.mutable.MField, java.lang.reflect.Field)
    {
        org.apache.xmlbeans.impl.jam.mutable.MField r1;
        java.lang.reflect.Field r2;
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegateImpl_150 r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegateImpl_150;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MField;

        r2 := @parameter1: java.lang.reflect.Field;

        return;
    }

    public void extractAnnotations(org.apache.xmlbeans.impl.jam.mutable.MClass, java.lang.Class)
    {
        java.lang.Class r2;
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegateImpl_150 r0;
        org.apache.xmlbeans.impl.jam.mutable.MClass r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegateImpl_150;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MClass;

        r2 := @parameter1: java.lang.Class;

        return;
    }

    public void extractAnnotations(org.apache.xmlbeans.impl.jam.mutable.MParameter, java.lang.reflect.Method, int)
    {
        int i0;
        org.apache.xmlbeans.impl.jam.mutable.MParameter r1;
        java.lang.reflect.Method r2;
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegateImpl_150 r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegateImpl_150;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MParameter;

        r2 := @parameter1: java.lang.reflect.Method;

        i0 := @parameter2: int;

        return;
    }

    public void extractAnnotations(org.apache.xmlbeans.impl.jam.mutable.MParameter, java.lang.reflect.Constructor, int)
    {
        int i0;
        org.apache.xmlbeans.impl.jam.mutable.MParameter r1;
        java.lang.reflect.Constructor r2;
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegateImpl_150 r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegateImpl_150;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MParameter;

        r2 := @parameter1: java.lang.reflect.Constructor;

        i0 := @parameter2: int;

        return;
    }

    public boolean isEnum(java.lang.Class)
    {
        java.lang.Class r1;
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegateImpl_150 r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegateImpl_150;

        r1 := @parameter0: java.lang.Class;

        return 0;
    }

    public java.lang.reflect.Constructor getEnclosingConstructor(java.lang.Class)
    {
        java.lang.Class r1;
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegateImpl_150 r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegateImpl_150;

        r1 := @parameter0: java.lang.Class;

        return null;
    }

    public java.lang.reflect.Method getEnclosingMethod(java.lang.Class)
    {
        java.lang.Class r1;
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegateImpl_150 r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegateImpl_150;

        r1 := @parameter0: java.lang.Class;

        return null;
    }
}
