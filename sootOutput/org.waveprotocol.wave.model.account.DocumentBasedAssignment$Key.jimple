public enum class org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key extends java.lang.Enum
{
    public static final enum org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key ADDRESS;
    public static final enum org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key ROLE;
    private static final org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key[] $VALUES;

    public static org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key[] values()
    {
        java.lang.Object $r1;
        org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key[] $r0, $r2;

        $r0 = <org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key: org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key[]) $r1;

        return $r2;
    }

    public static org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/waveprotocol/wave/model/account/DocumentBasedAssignment$Key;", r0);

        $r2 = (org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key r0;

        r0 := @this: org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    void <init>(java.lang.String, int, org.waveprotocol.wave.model.account.DocumentBasedAssignment$1)
    {
        org.waveprotocol.wave.model.account.DocumentBasedAssignment$1 r2;
        int i0;
        java.lang.String r1;
        org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key r0;

        r0 := @this: org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: org.waveprotocol.wave.model.account.DocumentBasedAssignment$1;

        specialinvoke r0.<org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key[] $r2;
        org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key$1 $r0;
        org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key $r3, $r4;
        org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key$2 $r1;

        $r0 = new org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key$1;

        specialinvoke $r0.<org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key$1: void <init>(java.lang.String,int)>("ADDRESS", 0);

        <org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key: org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key ADDRESS> = $r0;

        $r1 = new org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key$2;

        specialinvoke $r1.<org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key$2: void <init>(java.lang.String,int)>("ROLE", 1);

        <org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key: org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key ROLE> = $r1;

        $r2 = newarray (org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key)[2];

        $r3 = <org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key: org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key ADDRESS>;

        $r2[0] = $r3;

        $r4 = <org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key: org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key ROLE>;

        $r2[1] = $r4;

        <org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key: org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key[] $VALUES> = $r2;

        return;
    }
}
