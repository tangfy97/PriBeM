public class org.springframework.beans.factory.support.ReplaceOverride extends org.springframework.beans.factory.support.MethodOverride
{
    private final java.lang.String methodReplacerBeanName;
    private java.util.List typeIdentifiers;

    public void <init>(java.lang.String, java.lang.String)
    {
        org.springframework.beans.factory.support.ReplaceOverride r0;
        java.lang.String r1, r3;
        java.util.LinkedList $r2;

        r0 := @this: org.springframework.beans.factory.support.ReplaceOverride;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        specialinvoke r0.<org.springframework.beans.factory.support.MethodOverride: void <init>(java.lang.String)>(r1);

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<org.springframework.beans.factory.support.ReplaceOverride: java.util.List typeIdentifiers> = $r2;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Method replacer bean name must not be null");

        r0.<org.springframework.beans.factory.support.ReplaceOverride: java.lang.String methodReplacerBeanName> = r3;

        return;
    }

    public java.lang.String getMethodReplacerBeanName()
    {
        org.springframework.beans.factory.support.ReplaceOverride r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.beans.factory.support.ReplaceOverride;

        $r1 = r0.<org.springframework.beans.factory.support.ReplaceOverride: java.lang.String methodReplacerBeanName>;

        return $r1;
    }

    public void addTypeIdentifier(java.lang.String)
    {
        java.util.List $r2;
        org.springframework.beans.factory.support.ReplaceOverride r0;
        java.lang.String r1;

        r0 := @this: org.springframework.beans.factory.support.ReplaceOverride;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.beans.factory.support.ReplaceOverride: java.util.List typeIdentifiers>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public boolean matches(java.lang.reflect.Method)
    {
        int $i0, $i1, $i2, i3;
        java.lang.String $r1, $r3, r9, $r12;
        java.lang.reflect.Method r0;
        boolean $z0, $z1, $z2;
        java.lang.Class[] $r5, $r10;
        org.springframework.beans.factory.support.ReplaceOverride r2;
        java.util.List $r4, $r6, $r7;
        java.lang.Object $r8;
        java.lang.Class $r11;

        r2 := @this: org.springframework.beans.factory.support.ReplaceOverride;

        r0 := @parameter0: java.lang.reflect.Method;

        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String getName()>();

        $r3 = virtualinvoke r2.<org.springframework.beans.factory.support.ReplaceOverride: java.lang.String getMethodName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke r2.<org.springframework.beans.factory.support.ReplaceOverride: boolean isOverloaded()>();

        if $z1 != 0 goto label2;

        return 1;

     label2:
        $r4 = r2.<org.springframework.beans.factory.support.ReplaceOverride: java.util.List typeIdentifiers>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r5 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i1 = lengthof $r5;

        if $i0 == $i1 goto label3;

        return 0;

     label3:
        i3 = 0;

        goto label6;

     label4:
        $r7 = r2.<org.springframework.beans.factory.support.ReplaceOverride: java.util.List typeIdentifiers>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i3);

        r9 = (java.lang.String) $r8;

        $r10 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r11 = $r10[i3];

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $z2 = virtualinvoke $r12.<java.lang.String: boolean contains(java.lang.CharSequence)>(r9);

        if $z2 != 0 goto label5;

        return 0;

     label5:
        i3 = i3 + 1;

     label6:
        $r6 = r2.<org.springframework.beans.factory.support.ReplaceOverride: java.util.List typeIdentifiers>;

        $i2 = interfaceinvoke $r6.<java.util.List: int size()>();

        if i3 < $i2 goto label4;

        return 1;
    }

    public java.lang.String toString()
    {
        org.springframework.beans.factory.support.ReplaceOverride r1;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7;
        java.lang.String $r2, $r5, $r8;

        r1 := @this: org.springframework.beans.factory.support.ReplaceOverride;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Replace override for method \'");

        $r2 = virtualinvoke r1.<org.springframework.beans.factory.support.ReplaceOverride: java.lang.String getMethodName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; will call bean \'");

        $r5 = r1.<org.springframework.beans.factory.support.ReplaceOverride: java.lang.String methodReplacerBeanName>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public boolean equals(java.lang.Object)
    {
        org.springframework.beans.factory.support.ReplaceOverride r1, r2;
        java.util.List $r5, $r6;
        java.lang.Object r0;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: org.springframework.beans.factory.support.ReplaceOverride;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.springframework.beans.factory.support.ReplaceOverride;

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r1.<org.springframework.beans.factory.support.MethodOverride: boolean equals(java.lang.Object)>(r0);

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        r2 = (org.springframework.beans.factory.support.ReplaceOverride) r0;

        $r4 = r1.<org.springframework.beans.factory.support.ReplaceOverride: java.lang.String methodReplacerBeanName>;

        $r3 = r2.<org.springframework.beans.factory.support.ReplaceOverride: java.lang.String methodReplacerBeanName>;

        $z2 = staticinvoke <org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z2 == 0 goto label3;

        $r6 = r1.<org.springframework.beans.factory.support.ReplaceOverride: java.util.List typeIdentifiers>;

        $r5 = r2.<org.springframework.beans.factory.support.ReplaceOverride: java.util.List typeIdentifiers>;

        $z3 = staticinvoke <org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z3 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public int hashCode()
    {
        org.springframework.beans.factory.support.ReplaceOverride r0;
        java.util.List $r2;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        java.lang.String $r1;

        r0 := @this: org.springframework.beans.factory.support.ReplaceOverride;

        $i0 = specialinvoke r0.<org.springframework.beans.factory.support.MethodOverride: int hashCode()>();

        $i1 = 29 * $i0;

        $r1 = r0.<org.springframework.beans.factory.support.ReplaceOverride: java.lang.String methodReplacerBeanName>;

        $i2 = staticinvoke <org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>($r1);

        i5 = $i1 + $i2;

        $i3 = 29 * i5;

        $r2 = r0.<org.springframework.beans.factory.support.ReplaceOverride: java.util.List typeIdentifiers>;

        $i4 = staticinvoke <org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>($r2);

        i6 = $i3 + $i4;

        return i6;
    }
}
