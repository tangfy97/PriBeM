public class org.mortbay.util.StringMap extends java.util.AbstractMap implements java.io.Externalizable
{
    public static final boolean CASE_INSENSTIVE;
    protected static final int __HASH_WIDTH;
    protected int _width;
    protected org.mortbay.util.StringMap$Node _root;
    protected boolean _ignoreCase;
    protected org.mortbay.util.StringMap$NullEntry _nullEntry;
    protected java.lang.Object _nullValue;
    protected java.util.HashSet _entrySet;
    protected java.util.Set _umEntrySet;

    public void <init>()
    {
        java.util.HashSet $r2, $r3;
        org.mortbay.util.StringMap r0;
        org.mortbay.util.StringMap$Node $r1;
        java.util.Set $r4;

        r0 := @this: org.mortbay.util.StringMap;

        specialinvoke r0.<java.util.AbstractMap: void <init>()>();

        r0.<org.mortbay.util.StringMap: int _width> = 17;

        $r1 = new org.mortbay.util.StringMap$Node;

        specialinvoke $r1.<org.mortbay.util.StringMap$Node: void <init>()>();

        r0.<org.mortbay.util.StringMap: org.mortbay.util.StringMap$Node _root> = $r1;

        r0.<org.mortbay.util.StringMap: boolean _ignoreCase> = 0;

        r0.<org.mortbay.util.StringMap: org.mortbay.util.StringMap$NullEntry _nullEntry> = null;

        r0.<org.mortbay.util.StringMap: java.lang.Object _nullValue> = null;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>(int)>(3);

        r0.<org.mortbay.util.StringMap: java.util.HashSet _entrySet> = $r2;

        $r3 = r0.<org.mortbay.util.StringMap: java.util.HashSet _entrySet>;

        $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r3);

        r0.<org.mortbay.util.StringMap: java.util.Set _umEntrySet> = $r4;

        return;
    }

    public void <init>(boolean)
    {
        org.mortbay.util.StringMap r0;
        boolean z0;

        r0 := @this: org.mortbay.util.StringMap;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.mortbay.util.StringMap: void <init>()>();

        r0.<org.mortbay.util.StringMap: boolean _ignoreCase> = z0;

        return;
    }

    public void <init>(boolean, int)
    {
        int i0;
        org.mortbay.util.StringMap r0;
        boolean z0;

        r0 := @this: org.mortbay.util.StringMap;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        specialinvoke r0.<org.mortbay.util.StringMap: void <init>()>();

        r0.<org.mortbay.util.StringMap: boolean _ignoreCase> = z0;

        r0.<org.mortbay.util.StringMap: int _width> = i0;

        return;
    }

    public void setIgnoreCase(boolean)
    {
        java.lang.IllegalStateException $r3;
        org.mortbay.util.StringMap r0;
        org.mortbay.util.StringMap$Node $r1;
        org.mortbay.util.StringMap$Node[] $r2;
        boolean z0;

        r0 := @this: org.mortbay.util.StringMap;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.mortbay.util.StringMap: org.mortbay.util.StringMap$Node _root>;

        $r2 = $r1.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node[] _children>;

        if $r2 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must be set before first put");

        throw $r3;

     label1:
        r0.<org.mortbay.util.StringMap: boolean _ignoreCase> = z0;

        return;
    }

    public boolean isIgnoreCase()
    {
        org.mortbay.util.StringMap r0;
        boolean $z0;

        r0 := @this: org.mortbay.util.StringMap;

        $z0 = r0.<org.mortbay.util.StringMap: boolean _ignoreCase>;

        return $z0;
    }

    public void setWidth(int)
    {
        int i0;
        org.mortbay.util.StringMap r0;

        r0 := @this: org.mortbay.util.StringMap;

        i0 := @parameter0: int;

        r0.<org.mortbay.util.StringMap: int _width> = i0;

        return;
    }

    public int getWidth()
    {
        int $i0;
        org.mortbay.util.StringMap r0;

        r0 := @this: org.mortbay.util.StringMap;

        $i0 = r0.<org.mortbay.util.StringMap: int _width>;

        return $i0;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        org.mortbay.util.StringMap r1;
        java.lang.Object r0, r3, $r4, $r5;
        java.lang.String $r2;

        r1 := @this: org.mortbay.util.StringMap;

        r0 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $r5 = virtualinvoke r1.<org.mortbay.util.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>(null, r3);

        return $r5;

     label1:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke r1.<org.mortbay.util.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>($r2, r3);

        return $r4;
    }

    public java.lang.Object put(java.lang.String, java.lang.Object)
    {
        org.mortbay.util.StringMap r1;
        java.lang.String r0;
        org.mortbay.util.StringMap$Node[] $r6, $r7, $r11, $r13, $r15, $r16, $r20, $r21;
        char[] $r8, $r9, $r10, $r17, $r18, $r19;
        boolean $z0, $z1;
        org.mortbay.util.StringMap$Node $r12, $r14, r27, r28, r29, $r30, r31, $r33;
        java.util.HashSet $r3, $r25;
        int $i0, $i2, $i3, $i4, $i6, $i8, $i9, $i10, $i12, $i14, $i15, i16, i17, $i19, $i21, $i22, $i23, $i24, $i25, $i26, $i28, $i30, $i32, $i33, $i34, $i35;
        org.mortbay.util.StringMap$NullEntry $r22, $r24, $r32;
        char $c1, $c5, $c7, $c11, $c13;
        java.lang.Object r2, $r4, r26;

        r1 := @this: org.mortbay.util.StringMap;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        if r0 != null goto label02;

        r26 = r1.<org.mortbay.util.StringMap: java.lang.Object _nullValue>;

        r1.<org.mortbay.util.StringMap: java.lang.Object _nullValue> = r2;

        $r22 = r1.<org.mortbay.util.StringMap: org.mortbay.util.StringMap$NullEntry _nullEntry>;

        if $r22 != null goto label01;

        $r32 = new org.mortbay.util.StringMap$NullEntry;

        specialinvoke $r32.<org.mortbay.util.StringMap$NullEntry: void <init>(org.mortbay.util.StringMap,org.mortbay.util.StringMap$1)>(r1, null);

        r1.<org.mortbay.util.StringMap: org.mortbay.util.StringMap$NullEntry _nullEntry> = $r32;

        $r25 = r1.<org.mortbay.util.StringMap: java.util.HashSet _entrySet>;

        $r24 = r1.<org.mortbay.util.StringMap: org.mortbay.util.StringMap$NullEntry _nullEntry>;

        virtualinvoke $r25.<java.util.HashSet: boolean add(java.lang.Object)>($r24);

     label01:
        return r26;

     label02:
        r27 = r1.<org.mortbay.util.StringMap: org.mortbay.util.StringMap$Node _root>;

        $i19 = (int) -1;

        i16 = $i19;

        r28 = null;

        r29 = null;

        i17 = 0;

     label03:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i17 >= $i0 goto label19;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i17);

        $i21 = (int) -1;

        if i16 != $i21 goto label06;

        r29 = r27;

        r28 = null;

        i16 = 0;

        $r20 = r27.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node[] _children>;

        if $r20 != null goto label04;

        $r30 = null;

        goto label05;

     label04:
        $r21 = r27.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node[] _children>;

        $i14 = r1.<org.mortbay.util.StringMap: int _width>;

        $i22 = (int) $c1;

        $i15 = $i22 % $i14;

        $r30 = $r21[$i15];

     label05:
        r27 = $r30;

     label06:
        if r27 == null goto label10;

        $r17 = r27.<org.mortbay.util.StringMap$Node: char[] _char>;

        $c11 = $r17[i16];

        $i23 = (int) $c11;

        $i24 = (int) $c1;

        if $i23 == $i24 goto label07;

        $z1 = r1.<org.mortbay.util.StringMap: boolean _ignoreCase>;

        if $z1 == 0 goto label08;

        $r19 = r27.<org.mortbay.util.StringMap$Node: char[] _ochar>;

        $c13 = $r19[i16];

        $i25 = (int) $c13;

        $i26 = (int) $c1;

        if $i25 != $i26 goto label08;

     label07:
        r28 = null;

        i16 = i16 + 1;

        $r18 = r27.<org.mortbay.util.StringMap$Node: char[] _char>;

        $i12 = lengthof $r18;

        if i16 != $i12 goto label18;

        $i28 = (int) -1;

        i16 = $i28;

        goto label18;

     label08:
        if i16 != 0 goto label09;

        r28 = r27;

        r27 = r27.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node _next>;

        goto label06;

     label09:
        virtualinvoke r27.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node split(org.mortbay.util.StringMap,int)>(r1, i16);

        $i30 = (int) -1;

        i17 = i17 + $i30;

        $i32 = (int) -1;

        i16 = $i32;

        goto label18;

     label10:
        $r33 = new org.mortbay.util.StringMap$Node;

        $z0 = r1.<org.mortbay.util.StringMap: boolean _ignoreCase>;

        specialinvoke $r33.<org.mortbay.util.StringMap$Node: void <init>(boolean,java.lang.String,int)>($z0, r0, i17);

        r27 = $r33;

        if r28 == null goto label11;

        r28.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node _next> = $r33;

        goto label19;

     label11:
        if r29 == null goto label17;

        $r6 = r29.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node[] _children>;

        if $r6 != null goto label12;

        $i9 = r1.<org.mortbay.util.StringMap: int _width>;

        $r16 = newarray (org.mortbay.util.StringMap$Node)[$i9];

        r29.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node[] _children> = $r16;

     label12:
        $r7 = r29.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node[] _children>;

        $i2 = r1.<org.mortbay.util.StringMap: int _width>;

        $i33 = (int) $c1;

        $i3 = $i33 % $i2;

        $r7[$i3] = $r33;

        $r8 = $r33.<org.mortbay.util.StringMap$Node: char[] _ochar>;

        $c5 = $r8[0];

        $i4 = r1.<org.mortbay.util.StringMap: int _width>;

        $i34 = (int) $c5;

        $i10 = $i34 % $i4;

        $r9 = $r33.<org.mortbay.util.StringMap$Node: char[] _ochar>;

        if $r9 == null goto label16;

        $r10 = $r33.<org.mortbay.util.StringMap$Node: char[] _char>;

        $c7 = $r10[0];

        $i6 = r1.<org.mortbay.util.StringMap: int _width>;

        $i35 = (int) $c7;

        $i8 = $i35 % $i6;

        if $i8 == $i10 goto label16;

        $r11 = r29.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node[] _children>;

        $r12 = $r11[$i10];

        if $r12 != null goto label13;

        $r15 = r29.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node[] _children>;

        $r15[$i10] = $r33;

        goto label16;

     label13:
        $r13 = r29.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node[] _children>;

        r31 = $r13[$i10];

     label14:
        $r14 = r31.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node _next>;

        if $r14 == null goto label15;

        r31 = r31.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node _next>;

        goto label14;

     label15:
        r31.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node _next> = $r33;

     label16:
        goto label19;

     label17:
        r1.<org.mortbay.util.StringMap: org.mortbay.util.StringMap$Node _root> = $r33;

        goto label19;

     label18:
        i17 = i17 + 1;

        goto label03;

     label19:
        if r27 == null goto label21;

        if i16 <= 0 goto label20;

        virtualinvoke r27.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node split(org.mortbay.util.StringMap,int)>(r1, i16);

     label20:
        $r4 = r27.<org.mortbay.util.StringMap$Node: java.lang.Object _value>;

        r27.<org.mortbay.util.StringMap$Node: java.lang.String _key> = r0;

        r27.<org.mortbay.util.StringMap$Node: java.lang.Object _value> = r2;

        $r3 = r1.<org.mortbay.util.StringMap: java.util.HashSet _entrySet>;

        virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>(r27);

        return $r4;

     label21:
        return null;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.mortbay.util.StringMap r1;
        java.lang.Object r0, $r3, $r5, $r6;
        java.lang.String $r2, $r4;
        boolean $z0;

        r1 := @this: org.mortbay.util.StringMap;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r6 = r1.<org.mortbay.util.StringMap: java.lang.Object _nullValue>;

        return $r6;

     label1:
        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r4 = (java.lang.String) r0;

        $r5 = virtualinvoke r1.<org.mortbay.util.StringMap: java.lang.Object get(java.lang.String)>($r4);

        return $r5;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke r1.<org.mortbay.util.StringMap: java.lang.Object get(java.lang.String)>($r2);

        return $r3;
    }

    public java.lang.Object get(java.lang.String)
    {
        java.util.Map$Entry $r2;
        org.mortbay.util.StringMap r1;
        int $i0;
        java.lang.Object $r3, $r4;
        java.lang.String r0;

        r1 := @this: org.mortbay.util.StringMap;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r4 = r1.<org.mortbay.util.StringMap: java.lang.Object _nullValue>;

        return $r4;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = virtualinvoke r1.<org.mortbay.util.StringMap: java.util.Map$Entry getEntry(java.lang.String,int,int)>(r0, 0, $i0);

        if $r2 != null goto label2;

        return null;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        return $r3;
    }

    public java.util.Map$Entry getEntry(java.lang.String, int, int)
    {
        org.mortbay.util.StringMap$Node r9, $r10;
        org.mortbay.util.StringMap r1;
        int i0, i1, $i2, $i5, $i7, $i8, i9, i10, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i21;
        java.lang.String r0, $r2;
        org.mortbay.util.StringMap$NullEntry $r8;
        boolean $z0;
        org.mortbay.util.StringMap$Node[] $r6, $r7;
        char $c3, $c4, $c6;
        char[] $r3, $r4, $r5;

        r1 := @this: org.mortbay.util.StringMap;

        r0 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        if r0 != null goto label01;

        $r8 = r1.<org.mortbay.util.StringMap: org.mortbay.util.StringMap$NullEntry _nullEntry>;

        return $r8;

     label01:
        r9 = r1.<org.mortbay.util.StringMap: org.mortbay.util.StringMap$Node _root>;

        $i12 = (int) -1;

        i9 = $i12;

        i10 = 0;

     label02:
        if i10 >= i0 goto label11;

        $i2 = i1 + i10;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        $i14 = (int) -1;

        if i9 != $i14 goto label05;

        i9 = 0;

        $r6 = r9.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node[] _children>;

        if $r6 != null goto label03;

        $r10 = null;

        goto label04;

     label03:
        $r7 = r9.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node[] _children>;

        $i7 = r1.<org.mortbay.util.StringMap: int _width>;

        $i15 = (int) $c3;

        $i8 = $i15 % $i7;

        $r10 = $r7[$i8];

     label04:
        r9 = $r10;

     label05:
        if r9 == null goto label09;

        $r3 = r9.<org.mortbay.util.StringMap$Node: char[] _char>;

        $c4 = $r3[i9];

        $i16 = (int) $c4;

        $i17 = (int) $c3;

        if $i16 == $i17 goto label06;

        $z0 = r1.<org.mortbay.util.StringMap: boolean _ignoreCase>;

        if $z0 == 0 goto label07;

        $r5 = r9.<org.mortbay.util.StringMap$Node: char[] _ochar>;

        $c6 = $r5[i9];

        $i18 = (int) $c6;

        $i19 = (int) $c3;

        if $i18 != $i19 goto label07;

     label06:
        i9 = i9 + 1;

        $r4 = r9.<org.mortbay.util.StringMap$Node: char[] _char>;

        $i5 = lengthof $r4;

        if i9 != $i5 goto label10;

        $i21 = (int) -1;

        i9 = $i21;

        goto label10;

     label07:
        if i9 <= 0 goto label08;

        return null;

     label08:
        r9 = r9.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node _next>;

        goto label05;

     label09:
        return null;

     label10:
        i10 = i10 + 1;

        goto label02;

     label11:
        if i9 <= 0 goto label12;

        return null;

     label12:
        if r9 == null goto label13;

        $r2 = r9.<org.mortbay.util.StringMap$Node: java.lang.String _key>;

        if $r2 != null goto label13;

        return null;

     label13:
        return r9;
    }

    public java.util.Map$Entry getEntry(char[], int, int)
    {
        org.mortbay.util.StringMap$Node r9, $r10;
        org.mortbay.util.StringMap r1;
        int i0, i1, $i2, $i5, $i7, $i8, i9, i10, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i21;
        java.lang.String $r2;
        org.mortbay.util.StringMap$NullEntry $r8;
        boolean $z0;
        org.mortbay.util.StringMap$Node[] $r6, $r7;
        char c3, $c4, $c6;
        char[] r0, $r3, $r4, $r5;

        r1 := @this: org.mortbay.util.StringMap;

        r0 := @parameter0: char[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        if r0 != null goto label01;

        $r8 = r1.<org.mortbay.util.StringMap: org.mortbay.util.StringMap$NullEntry _nullEntry>;

        return $r8;

     label01:
        r9 = r1.<org.mortbay.util.StringMap: org.mortbay.util.StringMap$Node _root>;

        $i12 = (int) -1;

        i9 = $i12;

        i10 = 0;

     label02:
        if i10 >= i0 goto label11;

        $i2 = i1 + i10;

        c3 = r0[$i2];

        $i14 = (int) -1;

        if i9 != $i14 goto label05;

        i9 = 0;

        $r6 = r9.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node[] _children>;

        if $r6 != null goto label03;

        $r10 = null;

        goto label04;

     label03:
        $r7 = r9.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node[] _children>;

        $i7 = r1.<org.mortbay.util.StringMap: int _width>;

        $i15 = (int) c3;

        $i8 = $i15 % $i7;

        $r10 = $r7[$i8];

     label04:
        r9 = $r10;

     label05:
        if r9 == null goto label09;

        $r3 = r9.<org.mortbay.util.StringMap$Node: char[] _char>;

        $c4 = $r3[i9];

        $i16 = (int) $c4;

        $i17 = (int) c3;

        if $i16 == $i17 goto label06;

        $z0 = r1.<org.mortbay.util.StringMap: boolean _ignoreCase>;

        if $z0 == 0 goto label07;

        $r5 = r9.<org.mortbay.util.StringMap$Node: char[] _ochar>;

        $c6 = $r5[i9];

        $i18 = (int) $c6;

        $i19 = (int) c3;

        if $i18 != $i19 goto label07;

     label06:
        i9 = i9 + 1;

        $r4 = r9.<org.mortbay.util.StringMap$Node: char[] _char>;

        $i5 = lengthof $r4;

        if i9 != $i5 goto label10;

        $i21 = (int) -1;

        i9 = $i21;

        goto label10;

     label07:
        if i9 <= 0 goto label08;

        return null;

     label08:
        r9 = r9.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node _next>;

        goto label05;

     label09:
        return null;

     label10:
        i10 = i10 + 1;

        goto label02;

     label11:
        if i9 <= 0 goto label12;

        return null;

     label12:
        if r9 == null goto label13;

        $r2 = r9.<org.mortbay.util.StringMap$Node: java.lang.String _key>;

        if $r2 != null goto label13;

        return null;

     label13:
        return r9;
    }

    public java.util.Map$Entry getBestEntry(byte[], int, int)
    {
        byte[] r0;
        byte $b3;
        boolean $z0;
        org.mortbay.util.StringMap$Node r8, r10, $r11;
        org.mortbay.util.StringMap r1;
        int i0, i1, $i2, $i6, $i8, $i9, i10, i11, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i22;
        java.lang.String $r2;
        org.mortbay.util.StringMap$NullEntry $r9;
        org.mortbay.util.StringMap$Node[] $r6, $r7;
        char c4, $c5, $c7;
        char[] $r3, $r4, $r5;

        r1 := @this: org.mortbay.util.StringMap;

        r0 := @parameter0: byte[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        if r0 != null goto label01;

        $r9 = r1.<org.mortbay.util.StringMap: org.mortbay.util.StringMap$NullEntry _nullEntry>;

        return $r9;

     label01:
        r10 = r1.<org.mortbay.util.StringMap: org.mortbay.util.StringMap$Node _root>;

        $i13 = (int) -1;

        i10 = $i13;

        i11 = 0;

     label02:
        if i11 >= i0 goto label12;

        $i2 = i1 + i11;

        $b3 = r0[$i2];

        c4 = (char) $b3;

        $i15 = (int) -1;

        if i10 != $i15 goto label06;

        i10 = 0;

        $r6 = r10.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node[] _children>;

        if $r6 != null goto label03;

        $r11 = null;

        goto label04;

     label03:
        $r7 = r10.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node[] _children>;

        $i8 = r1.<org.mortbay.util.StringMap: int _width>;

        $i16 = (int) c4;

        $i9 = $i16 % $i8;

        $r11 = $r7[$i9];

     label04:
        r8 = $r11;

        if $r11 != null goto label05;

        if i11 <= 0 goto label05;

        return r10;

     label05:
        r10 = r8;

     label06:
        if r10 == null goto label10;

        $r3 = r10.<org.mortbay.util.StringMap$Node: char[] _char>;

        $c5 = $r3[i10];

        $i17 = (int) $c5;

        $i18 = (int) c4;

        if $i17 == $i18 goto label07;

        $z0 = r1.<org.mortbay.util.StringMap: boolean _ignoreCase>;

        if $z0 == 0 goto label08;

        $r5 = r10.<org.mortbay.util.StringMap$Node: char[] _ochar>;

        $c7 = $r5[i10];

        $i19 = (int) $c7;

        $i20 = (int) c4;

        if $i19 != $i20 goto label08;

     label07:
        i10 = i10 + 1;

        $r4 = r10.<org.mortbay.util.StringMap$Node: char[] _char>;

        $i6 = lengthof $r4;

        if i10 != $i6 goto label11;

        $i22 = (int) -1;

        i10 = $i22;

        goto label11;

     label08:
        if i10 <= 0 goto label09;

        return null;

     label09:
        r10 = r10.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node _next>;

        goto label06;

     label10:
        return null;

     label11:
        i11 = i11 + 1;

        goto label02;

     label12:
        if i10 <= 0 goto label13;

        return null;

     label13:
        if r10 == null goto label14;

        $r2 = r10.<org.mortbay.util.StringMap$Node: java.lang.String _key>;

        if $r2 != null goto label14;

        return null;

     label14:
        return r10;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        org.mortbay.util.StringMap r1;
        java.lang.Object r0, $r3, $r4;
        java.lang.String $r2;

        r1 := @this: org.mortbay.util.StringMap;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r4 = virtualinvoke r1.<org.mortbay.util.StringMap: java.lang.Object remove(java.lang.String)>(null);

        return $r4;

     label1:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke r1.<org.mortbay.util.StringMap: java.lang.Object remove(java.lang.String)>($r2);

        return $r3;
    }

    public java.lang.Object remove(java.lang.String)
    {
        boolean $z0;
        org.mortbay.util.StringMap$Node r14, $r15;
        java.util.HashSet $r2, $r12;
        org.mortbay.util.StringMap r1;
        int $i0, $i3, $i5, $i6, i7, i8, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i19;
        java.lang.String r0, $r3;
        org.mortbay.util.StringMap$NullEntry $r10, $r11;
        org.mortbay.util.StringMap$Node[] $r8, $r9;
        char $c1, $c2, $c4;
        char[] $r5, $r6, $r7;
        java.lang.Object $r4, r13;

        r1 := @this: org.mortbay.util.StringMap;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label02;

        r13 = r1.<org.mortbay.util.StringMap: java.lang.Object _nullValue>;

        $r10 = r1.<org.mortbay.util.StringMap: org.mortbay.util.StringMap$NullEntry _nullEntry>;

        if $r10 == null goto label01;

        $r12 = r1.<org.mortbay.util.StringMap: java.util.HashSet _entrySet>;

        $r11 = r1.<org.mortbay.util.StringMap: org.mortbay.util.StringMap$NullEntry _nullEntry>;

        virtualinvoke $r12.<java.util.HashSet: boolean remove(java.lang.Object)>($r11);

        r1.<org.mortbay.util.StringMap: org.mortbay.util.StringMap$NullEntry _nullEntry> = null;

        r1.<org.mortbay.util.StringMap: java.lang.Object _nullValue> = null;

     label01:
        return r13;

     label02:
        r14 = r1.<org.mortbay.util.StringMap: org.mortbay.util.StringMap$Node _root>;

        $i10 = (int) -1;

        i7 = $i10;

        i8 = 0;

     label03:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i8 >= $i0 goto label12;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i8);

        $i12 = (int) -1;

        if i7 != $i12 goto label06;

        i7 = 0;

        $r8 = r14.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node[] _children>;

        if $r8 != null goto label04;

        $r15 = null;

        goto label05;

     label04:
        $r9 = r14.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node[] _children>;

        $i5 = r1.<org.mortbay.util.StringMap: int _width>;

        $i13 = (int) $c1;

        $i6 = $i13 % $i5;

        $r15 = $r9[$i6];

     label05:
        r14 = $r15;

     label06:
        if r14 == null goto label10;

        $r5 = r14.<org.mortbay.util.StringMap$Node: char[] _char>;

        $c2 = $r5[i7];

        $i14 = (int) $c2;

        $i15 = (int) $c1;

        if $i14 == $i15 goto label07;

        $z0 = r1.<org.mortbay.util.StringMap: boolean _ignoreCase>;

        if $z0 == 0 goto label08;

        $r7 = r14.<org.mortbay.util.StringMap$Node: char[] _ochar>;

        $c4 = $r7[i7];

        $i16 = (int) $c4;

        $i17 = (int) $c1;

        if $i16 != $i17 goto label08;

     label07:
        i7 = i7 + 1;

        $r6 = r14.<org.mortbay.util.StringMap$Node: char[] _char>;

        $i3 = lengthof $r6;

        if i7 != $i3 goto label11;

        $i19 = (int) -1;

        i7 = $i19;

        goto label11;

     label08:
        if i7 <= 0 goto label09;

        return null;

     label09:
        r14 = r14.<org.mortbay.util.StringMap$Node: org.mortbay.util.StringMap$Node _next>;

        goto label06;

     label10:
        return null;

     label11:
        i8 = i8 + 1;

        goto label03;

     label12:
        if i7 <= 0 goto label13;

        return null;

     label13:
        if r14 == null goto label14;

        $r3 = r14.<org.mortbay.util.StringMap$Node: java.lang.String _key>;

        if $r3 != null goto label14;

        return null;

     label14:
        $r4 = r14.<org.mortbay.util.StringMap$Node: java.lang.Object _value>;

        $r2 = r1.<org.mortbay.util.StringMap: java.util.HashSet _entrySet>;

        virtualinvoke $r2.<java.util.HashSet: boolean remove(java.lang.Object)>(r14);

        r14.<org.mortbay.util.StringMap$Node: java.lang.Object _value> = null;

        r14.<org.mortbay.util.StringMap$Node: java.lang.String _key> = null;

        return $r4;
    }

    public java.util.Set entrySet()
    {
        java.util.Set $r1;
        org.mortbay.util.StringMap r0;

        r0 := @this: org.mortbay.util.StringMap;

        $r1 = r0.<org.mortbay.util.StringMap: java.util.Set _umEntrySet>;

        return $r1;
    }

    public int size()
    {
        java.util.HashSet $r1;
        int $i0;
        org.mortbay.util.StringMap r0;

        r0 := @this: org.mortbay.util.StringMap;

        $r1 = r0.<org.mortbay.util.StringMap: java.util.HashSet _entrySet>;

        $i0 = virtualinvoke $r1.<java.util.HashSet: int size()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        java.util.HashSet $r1;
        org.mortbay.util.StringMap r0;
        boolean $z0;

        r0 := @this: org.mortbay.util.StringMap;

        $r1 = r0.<org.mortbay.util.StringMap: java.util.HashSet _entrySet>;

        $z0 = virtualinvoke $r1.<java.util.HashSet: boolean isEmpty()>();

        return $z0;
    }

    public boolean containsKey(java.lang.Object)
    {
        java.util.Map$Entry $r4;
        org.mortbay.util.StringMap r1;
        int $i0;
        java.lang.Object r0;
        java.lang.String $r2, $r3;
        org.mortbay.util.StringMap$NullEntry $r5;
        boolean $z0, $z1;

        r1 := @this: org.mortbay.util.StringMap;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label3;

        $r5 = r1.<org.mortbay.util.StringMap: org.mortbay.util.StringMap$NullEntry _nullEntry>;

        if $r5 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        if r0 != null goto label4;

        $i0 = 0;

        goto label5;

     label4:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

     label5:
        $r4 = virtualinvoke r1.<org.mortbay.util.StringMap: java.util.Map$Entry getEntry(java.lang.String,int,int)>($r2, 0, $i0);

        if $r4 == null goto label6;

        $z1 = 1;

        goto label7;

     label6:
        $z1 = 0;

     label7:
        return $z1;
    }

    public void clear()
    {
        java.util.HashSet $r2;
        org.mortbay.util.StringMap r0;
        org.mortbay.util.StringMap$Node $r1;

        r0 := @this: org.mortbay.util.StringMap;

        $r1 = new org.mortbay.util.StringMap$Node;

        specialinvoke $r1.<org.mortbay.util.StringMap$Node: void <init>()>();

        r0.<org.mortbay.util.StringMap: org.mortbay.util.StringMap$Node _root> = $r1;

        r0.<org.mortbay.util.StringMap: org.mortbay.util.StringMap$NullEntry _nullEntry> = null;

        r0.<org.mortbay.util.StringMap: java.lang.Object _nullValue> = null;

        $r2 = r0.<org.mortbay.util.StringMap: java.util.HashSet _entrySet>;

        virtualinvoke $r2.<java.util.HashSet: void clear()>();

        return;
    }

    public void writeExternal(java.io.ObjectOutput) throws java.io.IOException
    {
        org.mortbay.util.StringMap r1;
        java.io.ObjectOutput r2;
        java.util.HashMap $r0;
        boolean $z0;

        r1 := @this: org.mortbay.util.StringMap;

        r2 := @parameter0: java.io.ObjectOutput;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>(java.util.Map)>(r1);

        $z0 = r1.<org.mortbay.util.StringMap: boolean _ignoreCase>;

        interfaceinvoke r2.<java.io.ObjectOutput: void writeBoolean(boolean)>($z0);

        interfaceinvoke r2.<java.io.ObjectOutput: void writeObject(java.lang.Object)>($r0);

        return;
    }

    public void readExternal(java.io.ObjectInput) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.mortbay.util.StringMap r3;
        java.io.ObjectInput r0;
        java.lang.Object $r1;
        java.util.HashMap r2;
        boolean $z0;

        r3 := @this: org.mortbay.util.StringMap;

        r0 := @parameter0: java.io.ObjectInput;

        $z0 = interfaceinvoke r0.<java.io.ObjectInput: boolean readBoolean()>();

        $r1 = interfaceinvoke r0.<java.io.ObjectInput: java.lang.Object readObject()>();

        r2 = (java.util.HashMap) $r1;

        virtualinvoke r3.<org.mortbay.util.StringMap: void setIgnoreCase(boolean)>($z0);

        virtualinvoke r3.<org.mortbay.util.StringMap: void putAll(java.util.Map)>(r2);

        return;
    }

    public static void <clinit>()
    {
        <org.mortbay.util.StringMap: int __HASH_WIDTH> = 17;

        <org.mortbay.util.StringMap: boolean CASE_INSENSTIVE> = 1;

        return;
    }
}
