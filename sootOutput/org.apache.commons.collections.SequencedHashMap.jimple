public class org.apache.commons.collections.SequencedHashMap extends java.lang.Object implements java.util.Map, java.lang.Cloneable, java.io.Externalizable
{
    private org.apache.commons.collections.SequencedHashMap$Entry sentinel;
    private java.util.HashMap entries;
    private transient long modCount;
    private static final int KEY;
    private static final int VALUE;
    private static final int ENTRY;
    private static final int REMOVED_MASK;
    private static final long serialVersionUID;

    private static final org.apache.commons.collections.SequencedHashMap$Entry createSentinel()
    {
        org.apache.commons.collections.SequencedHashMap$Entry $r0;

        $r0 = new org.apache.commons.collections.SequencedHashMap$Entry;

        specialinvoke $r0.<org.apache.commons.collections.SequencedHashMap$Entry: void <init>(java.lang.Object,java.lang.Object)>(null, null);

        $r0.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry prev> = $r0;

        $r0.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry next> = $r0;

        return $r0;
    }

    public void <init>()
    {
        org.apache.commons.collections.SequencedHashMap r0;
        org.apache.commons.collections.SequencedHashMap$Entry $r1;
        java.util.HashMap $r2;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.SequencedHashMap: long modCount> = 0L;

        $r1 = staticinvoke <org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry createSentinel()>();

        r0.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.commons.collections.SequencedHashMap: java.util.HashMap entries> = $r2;

        return;
    }

    public void <init>(int)
    {
        org.apache.commons.collections.SequencedHashMap r0;
        org.apache.commons.collections.SequencedHashMap$Entry $r1;
        int i0;
        java.util.HashMap $r2;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.SequencedHashMap: long modCount> = 0L;

        $r1 = staticinvoke <org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry createSentinel()>();

        r0.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(i0);

        r0.<org.apache.commons.collections.SequencedHashMap: java.util.HashMap entries> = $r2;

        return;
    }

    public void <init>(int, float)
    {
        org.apache.commons.collections.SequencedHashMap r0;
        org.apache.commons.collections.SequencedHashMap$Entry $r1;
        int i0;
        float f0;
        java.util.HashMap $r2;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.SequencedHashMap: long modCount> = 0L;

        $r1 = staticinvoke <org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry createSentinel()>();

        r0.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int,float)>(i0, f0);

        r0.<org.apache.commons.collections.SequencedHashMap: java.util.HashMap entries> = $r2;

        return;
    }

    public void <init>(java.util.Map)
    {
        org.apache.commons.collections.SequencedHashMap r0;
        java.util.Map r1;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.commons.collections.SequencedHashMap: void <init>()>();

        virtualinvoke r0.<org.apache.commons.collections.SequencedHashMap: void putAll(java.util.Map)>(r1);

        return;
    }

    private void removeEntry(org.apache.commons.collections.SequencedHashMap$Entry)
    {
        org.apache.commons.collections.SequencedHashMap$Entry r0, $r1, $r2, $r3, $r4;
        org.apache.commons.collections.SequencedHashMap r5;

        r5 := @this: org.apache.commons.collections.SequencedHashMap;

        r0 := @parameter0: org.apache.commons.collections.SequencedHashMap$Entry;

        $r2 = r0.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry next>;

        $r1 = r0.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry prev>;

        $r2.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry prev> = $r1;

        $r4 = r0.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry prev>;

        $r3 = r0.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry next>;

        $r4.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry next> = $r3;

        return;
    }

    private void insertEntry(org.apache.commons.collections.SequencedHashMap$Entry)
    {
        org.apache.commons.collections.SequencedHashMap r1;
        org.apache.commons.collections.SequencedHashMap$Entry r0, $r2, $r3, $r4, $r5, $r6, $r7;

        r1 := @this: org.apache.commons.collections.SequencedHashMap;

        r0 := @parameter0: org.apache.commons.collections.SequencedHashMap$Entry;

        $r2 = r1.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        r0.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry next> = $r2;

        $r3 = r1.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        $r4 = $r3.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry prev>;

        r0.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry prev> = $r4;

        $r5 = r1.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        $r6 = $r5.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry prev>;

        $r6.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry next> = r0;

        $r7 = r1.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        $r7.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry prev> = r0;

        return;
    }

    public int size()
    {
        org.apache.commons.collections.SequencedHashMap r0;
        int $i0;
        java.util.HashMap $r1;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        $r1 = r0.<org.apache.commons.collections.SequencedHashMap: java.util.HashMap entries>;

        $i0 = virtualinvoke $r1.<java.util.HashMap: int size()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        org.apache.commons.collections.SequencedHashMap r0;
        org.apache.commons.collections.SequencedHashMap$Entry $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        $r1 = r0.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        $r3 = $r1.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry next>;

        $r2 = r0.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        if $r3 != $r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean containsKey(java.lang.Object)
    {
        org.apache.commons.collections.SequencedHashMap r0;
        java.lang.Object r1;
        java.util.HashMap $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.SequencedHashMap: java.util.HashMap entries>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        org.apache.commons.collections.SequencedHashMap r1;
        org.apache.commons.collections.SequencedHashMap$Entry $r2, $r3, $r5, $r6, r8, r9;
        java.lang.Object r0, $r4, $r7;
        boolean $z0;

        r1 := @this: org.apache.commons.collections.SequencedHashMap;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label4;

        $r5 = r1.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        r8 = $r5.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry next>;

     label1:
        $r6 = r1.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        if r8 == $r6 goto label3;

        $r7 = virtualinvoke r8.<org.apache.commons.collections.SequencedHashMap$Entry: java.lang.Object getValue()>();

        if $r7 != null goto label2;

        return 1;

     label2:
        r8 = r8.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry next>;

        goto label1;

     label3:
        goto label7;

     label4:
        $r2 = r1.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        r9 = $r2.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry next>;

     label5:
        $r3 = r1.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        if r9 == $r3 goto label7;

        $r4 = virtualinvoke r9.<org.apache.commons.collections.SequencedHashMap$Entry: java.lang.Object getValue()>();

        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label6;

        return 1;

     label6:
        r9 = r9.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry next>;

        goto label5;

     label7:
        return 0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.apache.commons.collections.SequencedHashMap r0;
        org.apache.commons.collections.SequencedHashMap$Entry r4;
        java.lang.Object r1, $r3, $r5;
        java.util.HashMap $r2;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.SequencedHashMap: java.util.HashMap entries>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.commons.collections.SequencedHashMap$Entry) $r3;

        if r4 != null goto label1;

        return null;

     label1:
        $r5 = virtualinvoke r4.<org.apache.commons.collections.SequencedHashMap$Entry: java.lang.Object getValue()>();

        return $r5;
    }

    public java.util.Map$Entry getFirst()
    {
        org.apache.commons.collections.SequencedHashMap r0;
        org.apache.commons.collections.SequencedHashMap$Entry $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        $z0 = virtualinvoke r0.<org.apache.commons.collections.SequencedHashMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r1 = r0.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        $r2 = $r1.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry next>;

     label2:
        return $r2;
    }

    public java.lang.Object getFirstKey()
    {
        org.apache.commons.collections.SequencedHashMap r0;
        org.apache.commons.collections.SequencedHashMap$Entry $r1, $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        $r1 = r0.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        $r2 = $r1.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry next>;

        $r3 = virtualinvoke $r2.<org.apache.commons.collections.SequencedHashMap$Entry: java.lang.Object getKey()>();

        return $r3;
    }

    public java.lang.Object getFirstValue()
    {
        org.apache.commons.collections.SequencedHashMap r0;
        org.apache.commons.collections.SequencedHashMap$Entry $r1, $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        $r1 = r0.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        $r2 = $r1.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry next>;

        $r3 = virtualinvoke $r2.<org.apache.commons.collections.SequencedHashMap$Entry: java.lang.Object getValue()>();

        return $r3;
    }

    public java.util.Map$Entry getLast()
    {
        org.apache.commons.collections.SequencedHashMap r0;
        org.apache.commons.collections.SequencedHashMap$Entry $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        $z0 = virtualinvoke r0.<org.apache.commons.collections.SequencedHashMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r1 = r0.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        $r2 = $r1.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry prev>;

     label2:
        return $r2;
    }

    public java.lang.Object getLastKey()
    {
        org.apache.commons.collections.SequencedHashMap r0;
        org.apache.commons.collections.SequencedHashMap$Entry $r1, $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        $r1 = r0.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        $r2 = $r1.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry prev>;

        $r3 = virtualinvoke $r2.<org.apache.commons.collections.SequencedHashMap$Entry: java.lang.Object getKey()>();

        return $r3;
    }

    public java.lang.Object getLastValue()
    {
        org.apache.commons.collections.SequencedHashMap r0;
        org.apache.commons.collections.SequencedHashMap$Entry $r1, $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        $r1 = r0.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        $r2 = $r1.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry prev>;

        $r3 = virtualinvoke $r2.<org.apache.commons.collections.SequencedHashMap$Entry: java.lang.Object getValue()>();

        return $r3;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections.SequencedHashMap r0;
        long $l0, $l1;
        java.util.HashMap $r2, $r6;
        org.apache.commons.collections.SequencedHashMap$Entry $r4, r8;
        java.lang.Object r1, $r3, r5, r7;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        r1 := @parameter0: java.lang.Object;

        r5 := @parameter1: java.lang.Object;

        $l0 = r0.<org.apache.commons.collections.SequencedHashMap: long modCount>;

        $l1 = $l0 + 1L;

        r0.<org.apache.commons.collections.SequencedHashMap: long modCount> = $l1;

        r7 = null;

        $r2 = r0.<org.apache.commons.collections.SequencedHashMap: java.util.HashMap entries>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r8 = (org.apache.commons.collections.SequencedHashMap$Entry) $r3;

        if r8 == null goto label1;

        specialinvoke r0.<org.apache.commons.collections.SequencedHashMap: void removeEntry(org.apache.commons.collections.SequencedHashMap$Entry)>(r8);

        r7 = virtualinvoke r8.<org.apache.commons.collections.SequencedHashMap$Entry: java.lang.Object setValue(java.lang.Object)>(r5);

        goto label2;

     label1:
        $r4 = new org.apache.commons.collections.SequencedHashMap$Entry;

        specialinvoke $r4.<org.apache.commons.collections.SequencedHashMap$Entry: void <init>(java.lang.Object,java.lang.Object)>(r1, r5);

        r8 = $r4;

        $r6 = r0.<org.apache.commons.collections.SequencedHashMap: java.util.HashMap entries>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

     label2:
        specialinvoke r0.<org.apache.commons.collections.SequencedHashMap: void insertEntry(org.apache.commons.collections.SequencedHashMap$Entry)>(r8);

        return r7;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        org.apache.commons.collections.SequencedHashMap r0;
        org.apache.commons.collections.SequencedHashMap$Entry $r2;
        java.lang.Object r1, $r3;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry removeImpl(java.lang.Object)>(r1);

        if $r2 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = virtualinvoke $r2.<org.apache.commons.collections.SequencedHashMap$Entry: java.lang.Object getValue()>();

     label2:
        return $r3;
    }

    private org.apache.commons.collections.SequencedHashMap$Entry removeImpl(java.lang.Object)
    {
        org.apache.commons.collections.SequencedHashMap r0;
        org.apache.commons.collections.SequencedHashMap$Entry r4;
        java.lang.Object r1, $r3;
        java.util.HashMap $r2;
        long $l0, $l1;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.SequencedHashMap: java.util.HashMap entries>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        r4 = (org.apache.commons.collections.SequencedHashMap$Entry) $r3;

        if r4 != null goto label1;

        return null;

     label1:
        $l0 = r0.<org.apache.commons.collections.SequencedHashMap: long modCount>;

        $l1 = $l0 + 1L;

        r0.<org.apache.commons.collections.SequencedHashMap: long modCount> = $l1;

        specialinvoke r0.<org.apache.commons.collections.SequencedHashMap: void removeEntry(org.apache.commons.collections.SequencedHashMap$Entry)>(r4);

        return r4;
    }

    public void putAll(java.util.Map)
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        org.apache.commons.collections.SequencedHashMap r5;
        java.util.Set $r1;
        java.util.Map r0;
        java.lang.Object $r3, $r6, $r7;
        boolean $z0;

        r5 := @this: org.apache.commons.collections.SequencedHashMap;

        r0 := @parameter0: java.util.Map;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r5.<org.apache.commons.collections.SequencedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        goto label1;

     label2:
        return;
    }

    public void clear()
    {
        org.apache.commons.collections.SequencedHashMap r0;
        long $l0, $l1;
        java.util.HashMap $r1;
        org.apache.commons.collections.SequencedHashMap$Entry $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        $l0 = r0.<org.apache.commons.collections.SequencedHashMap: long modCount>;

        $l1 = $l0 + 1L;

        r0.<org.apache.commons.collections.SequencedHashMap: long modCount> = $l1;

        $r1 = r0.<org.apache.commons.collections.SequencedHashMap: java.util.HashMap entries>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

        $r3 = r0.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        $r2 = r0.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        $r3.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry next> = $r2;

        $r5 = r0.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        $r4 = r0.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        $r5.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry prev> = $r4;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Map $r3;
        org.apache.commons.collections.SequencedHashMap r1;
        java.util.Set $r2, $r4;
        java.lang.Object r0;
        boolean $z0, $z1;

        r1 := @this: org.apache.commons.collections.SequencedHashMap;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        if r0 != r1 goto label2;

        return 1;

     label2:
        $z0 = r0 instanceof java.util.Map;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $r2 = virtualinvoke r1.<org.apache.commons.collections.SequencedHashMap: java.util.Set entrySet()>();

        $r3 = (java.util.Map) r0;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $z1 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        return $z1;
    }

    public int hashCode()
    {
        org.apache.commons.collections.SequencedHashMap r0;
        int $i0;
        java.util.Set $r1;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.SequencedHashMap: java.util.Set entrySet()>();

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.commons.collections.SequencedHashMap r1;
        java.lang.StringBuffer $r0;
        org.apache.commons.collections.SequencedHashMap$Entry $r2, $r3, $r7, $r8, r9;
        java.lang.Object $r5, $r6;
        java.lang.String $r4;

        r1 := @this: org.apache.commons.collections.SequencedHashMap;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        $r2 = r1.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        r9 = $r2.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry next>;

     label1:
        $r3 = r1.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        if r9 == $r3 goto label3;

        $r5 = virtualinvoke r9.<org.apache.commons.collections.SequencedHashMap$Entry: java.lang.Object getKey()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(61);

        $r6 = virtualinvoke r9.<org.apache.commons.collections.SequencedHashMap$Entry: java.lang.Object getValue()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r8 = r9.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry next>;

        $r7 = r1.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        if $r8 == $r7 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

     label2:
        r9 = r9.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry next>;

        goto label1;

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public java.util.Set keySet()
    {
        org.apache.commons.collections.SequencedHashMap r1;
        org.apache.commons.collections.SequencedHashMap$1 $r0;

        r1 := @this: org.apache.commons.collections.SequencedHashMap;

        $r0 = new org.apache.commons.collections.SequencedHashMap$1;

        specialinvoke $r0.<org.apache.commons.collections.SequencedHashMap$1: void <init>(org.apache.commons.collections.SequencedHashMap)>(r1);

        return $r0;
    }

    public java.util.Collection values()
    {
        org.apache.commons.collections.SequencedHashMap r1;
        org.apache.commons.collections.SequencedHashMap$2 $r0;

        r1 := @this: org.apache.commons.collections.SequencedHashMap;

        $r0 = new org.apache.commons.collections.SequencedHashMap$2;

        specialinvoke $r0.<org.apache.commons.collections.SequencedHashMap$2: void <init>(org.apache.commons.collections.SequencedHashMap)>(r1);

        return $r0;
    }

    public java.util.Set entrySet()
    {
        org.apache.commons.collections.SequencedHashMap r1;
        org.apache.commons.collections.SequencedHashMap$3 $r0;

        r1 := @this: org.apache.commons.collections.SequencedHashMap;

        $r0 = new org.apache.commons.collections.SequencedHashMap$3;

        specialinvoke $r0.<org.apache.commons.collections.SequencedHashMap$3: void <init>(org.apache.commons.collections.SequencedHashMap)>(r1);

        return $r0;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.commons.collections.SequencedHashMap r0, r2;
        org.apache.commons.collections.SequencedHashMap$Entry $r3;
        java.lang.Object $r1;
        java.util.HashMap $r4;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (org.apache.commons.collections.SequencedHashMap) $r1;

        $r3 = staticinvoke <org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry createSentinel()>();

        r2.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r2.<org.apache.commons.collections.SequencedHashMap: java.util.HashMap entries> = $r4;

        virtualinvoke r2.<org.apache.commons.collections.SequencedHashMap: void putAll(java.util.Map)>(r0);

        return r2;
    }

    private java.util.Map$Entry getEntry(int)
    {
        java.lang.StringBuffer $r6, $r7, $r8, $r14, $r15, $r18, $r20;
        int i0, $i1, $i2, i3, $i5;
        java.lang.String $r9, $r16;
        org.apache.commons.collections.SequencedHashMap r0;
        java.lang.ArrayIndexOutOfBoundsException $r19, $r21;
        org.apache.commons.collections.SequencedHashMap$Entry $r1, $r2, $r3, $r10, $r11, r17;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        i0 := @parameter0: int;

        r17 = r0.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        if i0 >= 0 goto label1;

        $r19 = new java.lang.ArrayIndexOutOfBoundsException;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" < 0");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r16);

        throw $r19;

     label1:
        $i5 = (int) -1;

        i3 = $i5;

     label2:
        $i1 = i0 - 1;

        if i3 >= $i1 goto label3;

        $r11 = r17.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry next>;

        $r10 = r0.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        if $r11 == $r10 goto label3;

        i3 = i3 + 1;

        r17 = r17.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry next>;

        goto label2;

     label3:
        $r2 = r17.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry next>;

        $r1 = r0.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        if $r2 != $r1 goto label4;

        $r21 = new java.lang.ArrayIndexOutOfBoundsException;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" >= ");

        $i2 = i3 + 1;

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r9);

        throw $r21;

     label4:
        $r3 = r17.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry next>;

        return $r3;
    }

    public java.lang.Object get(int)
    {
        java.util.Map$Entry $r1;
        org.apache.commons.collections.SequencedHashMap r0;
        int i0;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.commons.collections.SequencedHashMap: java.util.Map$Entry getEntry(int)>(i0);

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        return $r2;
    }

    public java.lang.Object getValue(int)
    {
        java.util.Map$Entry $r1;
        org.apache.commons.collections.SequencedHashMap r0;
        int i0;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.commons.collections.SequencedHashMap: java.util.Map$Entry getEntry(int)>(i0);

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        return $r2;
    }

    public int indexOf(java.lang.Object)
    {
        org.apache.commons.collections.SequencedHashMap r0;
        java.util.HashMap $r2;
        org.apache.commons.collections.SequencedHashMap$Entry $r4, $r5, r6;
        int i0, $i2;
        java.lang.Object r1, $r3;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.SequencedHashMap: java.util.HashMap entries>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (org.apache.commons.collections.SequencedHashMap$Entry) $r3;

        if r6 != null goto label1;

        $i2 = (int) -1;

        return $i2;

     label1:
        i0 = 0;

     label2:
        $r5 = r6.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry prev>;

        $r4 = r0.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        if $r5 == $r4 goto label3;

        i0 = i0 + 1;

        r6 = r6.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry prev>;

        goto label2;

     label3:
        return i0;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.collections.SequencedHashMap r0;
        java.util.Set $r1;
        java.util.Iterator $r2;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.SequencedHashMap: java.util.Set keySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        return $r2;
    }

    public int lastIndexOf(java.lang.Object)
    {
        org.apache.commons.collections.SequencedHashMap r0;
        int $i0;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<org.apache.commons.collections.SequencedHashMap: int indexOf(java.lang.Object)>(r1);

        return $i0;
    }

    public java.util.List sequence()
    {
        java.util.Iterator $r3;
        org.apache.commons.collections.SequencedHashMap r1;
        java.util.Set $r2;
        java.util.ArrayList $r0;
        java.util.List $r4;
        int $i0;
        java.lang.Object $r5;
        boolean $z0;

        r1 := @this: org.apache.commons.collections.SequencedHashMap;

        $r0 = new java.util.ArrayList;

        $i0 = virtualinvoke r1.<org.apache.commons.collections.SequencedHashMap: int size()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        $r2 = virtualinvoke r1.<org.apache.commons.collections.SequencedHashMap: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        $r4 = staticinvoke <org.apache.commons.collections.list.UnmodifiableList: java.util.List decorate(java.util.List)>($r0);

        return $r4;
    }

    public java.lang.Object remove(int)
    {
        org.apache.commons.collections.SequencedHashMap r0;
        int i0;
        java.lang.Object $r1, $r2;

        r0 := @this: org.apache.commons.collections.SequencedHashMap;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.SequencedHashMap: java.lang.Object get(int)>(i0);

        $r2 = virtualinvoke r0.<org.apache.commons.collections.SequencedHashMap: java.lang.Object remove(java.lang.Object)>($r1);

        return $r2;
    }

    public void readExternal(java.io.ObjectInput) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        int $i0, i1;
        org.apache.commons.collections.SequencedHashMap r3;
        java.io.ObjectInput r0;
        java.lang.Object $r1, $r2;

        r3 := @this: org.apache.commons.collections.SequencedHashMap;

        r0 := @parameter0: java.io.ObjectInput;

        $i0 = interfaceinvoke r0.<java.io.ObjectInput: int readInt()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r1 = interfaceinvoke r0.<java.io.ObjectInput: java.lang.Object readObject()>();

        $r2 = interfaceinvoke r0.<java.io.ObjectInput: java.lang.Object readObject()>();

        virtualinvoke r3.<org.apache.commons.collections.SequencedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void writeExternal(java.io.ObjectOutput) throws java.io.IOException
    {
        java.io.ObjectOutput r0;
        org.apache.commons.collections.SequencedHashMap r1;
        int $i0;
        org.apache.commons.collections.SequencedHashMap$Entry $r2, $r3, r6;
        java.lang.Object $r4, $r5;

        r1 := @this: org.apache.commons.collections.SequencedHashMap;

        r0 := @parameter0: java.io.ObjectOutput;

        $i0 = virtualinvoke r1.<org.apache.commons.collections.SequencedHashMap: int size()>();

        interfaceinvoke r0.<java.io.ObjectOutput: void writeInt(int)>($i0);

        $r2 = r1.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        r6 = $r2.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry next>;

     label1:
        $r3 = r1.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        if r6 == $r3 goto label2;

        $r4 = virtualinvoke r6.<org.apache.commons.collections.SequencedHashMap$Entry: java.lang.Object getKey()>();

        interfaceinvoke r0.<java.io.ObjectOutput: void writeObject(java.lang.Object)>($r4);

        $r5 = virtualinvoke r6.<org.apache.commons.collections.SequencedHashMap$Entry: java.lang.Object getValue()>();

        interfaceinvoke r0.<java.io.ObjectOutput: void writeObject(java.lang.Object)>($r5);

        r6 = r6.<org.apache.commons.collections.SequencedHashMap$Entry: org.apache.commons.collections.SequencedHashMap$Entry next>;

        goto label1;

     label2:
        return;
    }

    static org.apache.commons.collections.SequencedHashMap$Entry access$000(org.apache.commons.collections.SequencedHashMap, java.lang.Object)
    {
        org.apache.commons.collections.SequencedHashMap r0;
        org.apache.commons.collections.SequencedHashMap$Entry $r2;
        java.lang.Object r1;

        r0 := @parameter0: org.apache.commons.collections.SequencedHashMap;

        r1 := @parameter1: java.lang.Object;

        $r2 = specialinvoke r0.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry removeImpl(java.lang.Object)>(r1);

        return $r2;
    }

    static org.apache.commons.collections.SequencedHashMap$Entry access$100(org.apache.commons.collections.SequencedHashMap)
    {
        org.apache.commons.collections.SequencedHashMap r0;
        org.apache.commons.collections.SequencedHashMap$Entry $r1;

        r0 := @parameter0: org.apache.commons.collections.SequencedHashMap;

        $r1 = r0.<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry sentinel>;

        return $r1;
    }

    static java.util.HashMap access$200(org.apache.commons.collections.SequencedHashMap)
    {
        org.apache.commons.collections.SequencedHashMap r0;
        java.util.HashMap $r1;

        r0 := @parameter0: org.apache.commons.collections.SequencedHashMap;

        $r1 = r0.<org.apache.commons.collections.SequencedHashMap: java.util.HashMap entries>;

        return $r1;
    }

    static long access$300(org.apache.commons.collections.SequencedHashMap)
    {
        org.apache.commons.collections.SequencedHashMap r0;
        long $l0;

        r0 := @parameter0: org.apache.commons.collections.SequencedHashMap;

        $l0 = r0.<org.apache.commons.collections.SequencedHashMap: long modCount>;

        return $l0;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections.SequencedHashMap: long serialVersionUID> = 3380552487888102930L;

        <org.apache.commons.collections.SequencedHashMap: int REMOVED_MASK> = -2147483648;

        <org.apache.commons.collections.SequencedHashMap: int ENTRY> = 2;

        <org.apache.commons.collections.SequencedHashMap: int VALUE> = 1;

        <org.apache.commons.collections.SequencedHashMap: int KEY> = 0;

        return;
    }
}
