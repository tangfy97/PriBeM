public class org.apache.commons.collections.buffer.UnboundedFifoBuffer extends java.util.AbstractCollection implements org.apache.commons.collections.Buffer, java.io.Serializable
{
    private static final long serialVersionUID;
    protected transient java.lang.Object[] buffer;
    protected transient int head;
    protected transient int tail;

    public void <init>()
    {
        org.apache.commons.collections.buffer.UnboundedFifoBuffer r0;

        r0 := @this: org.apache.commons.collections.buffer.UnboundedFifoBuffer;

        specialinvoke r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: void <init>(int)>(32);

        return;
    }

    public void <init>(int)
    {
        org.apache.commons.collections.buffer.UnboundedFifoBuffer r0;
        java.lang.Object[] $r1;
        int i0, $i1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.commons.collections.buffer.UnboundedFifoBuffer;

        i0 := @parameter0: int;

        specialinvoke r0.<java.util.AbstractCollection: void <init>()>();

        if i0 > 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The size must be greater than 0");

        throw $r2;

     label1:
        $i1 = i0 + 1;

        $r1 = newarray (java.lang.Object)[$i1];

        r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: java.lang.Object[] buffer> = $r1;

        r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int head> = 0;

        r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int tail> = 0;

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.commons.collections.buffer.UnboundedFifoBuffer r1;
        java.util.Iterator $r2;
        int $i0;
        java.io.ObjectOutputStream r0;
        java.lang.Object $r3;
        boolean $z0;

        r1 := @this: org.apache.commons.collections.buffer.UnboundedFifoBuffer;

        r0 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r0.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $i0 = virtualinvoke r1.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int size()>();

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeInt(int)>($i0);

        $r2 = virtualinvoke r1.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r3);

        goto label1;

     label2:
        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.commons.collections.buffer.UnboundedFifoBuffer r1;
        java.lang.Object[] $r2, $r3;
        java.io.ObjectInputStream r0;
        int $i0, $i1, i2;
        java.lang.Object $r4;

        r1 := @this: org.apache.commons.collections.buffer.UnboundedFifoBuffer;

        r0 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

        $i0 = virtualinvoke r0.<java.io.ObjectInputStream: int readInt()>();

        $i1 = $i0 + 1;

        $r2 = newarray (java.lang.Object)[$i1];

        r1.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: java.lang.Object[] buffer> = $r2;

        i2 = 0;

     label1:
        if i2 >= $i0 goto label2;

        $r3 = r1.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: java.lang.Object[] buffer>;

        $r4 = virtualinvoke r0.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r3[i2] = $r4;

        i2 = i2 + 1;

        goto label1;

     label2:
        r1.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int head> = 0;

        r1.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int tail> = $i0;

        return;
    }

    public int size()
    {
        org.apache.commons.collections.buffer.UnboundedFifoBuffer r0;
        java.lang.Object[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;

        r0 := @this: org.apache.commons.collections.buffer.UnboundedFifoBuffer;

        $i1 = r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int tail>;

        $i0 = r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int head>;

        if $i1 >= $i0 goto label1;

        $r1 = r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: java.lang.Object[] buffer>;

        $i5 = lengthof $r1;

        $i4 = r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int head>;

        $i7 = $i5 - $i4;

        $i6 = r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int tail>;

        i8 = $i7 + $i6;

        goto label2;

     label1:
        $i3 = r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int tail>;

        $i2 = r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int head>;

        i8 = $i3 - $i2;

     label2:
        return i8;
    }

    public boolean isEmpty()
    {
        int $i0;
        org.apache.commons.collections.buffer.UnboundedFifoBuffer r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.buffer.UnboundedFifoBuffer;

        $i0 = virtualinvoke r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int size()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean add(java.lang.Object)
    {
        org.apache.commons.collections.buffer.UnboundedFifoBuffer r1;
        java.lang.Object[] $r2, $r3, $r4, r5, $r6, $r8;
        java.lang.NullPointerException $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        java.lang.Object r0, $r7;

        r1 := @this: org.apache.commons.collections.buffer.UnboundedFifoBuffer;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("Attempted to add null object to buffer");

        throw $r9;

     label1:
        $i0 = virtualinvoke r1.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int size()>();

        $i2 = $i0 + 1;

        $r2 = r1.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: java.lang.Object[] buffer>;

        $i1 = lengthof $r2;

        if $i2 < $i1 goto label4;

        $r4 = r1.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: java.lang.Object[] buffer>;

        $i6 = lengthof $r4;

        $i7 = $i6 - 1;

        $i8 = $i7 * 2;

        $i9 = $i8 + 1;

        r5 = newarray (java.lang.Object)[$i9];

        i11 = 0;

        i12 = r1.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int head>;

     label2:
        $i10 = r1.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int tail>;

        if i12 == $i10 goto label3;

        $r6 = r1.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: java.lang.Object[] buffer>;

        $r7 = $r6[i12];

        r5[i11] = $r7;

        $r8 = r1.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: java.lang.Object[] buffer>;

        $r8[i12] = null;

        i11 = i11 + 1;

        i12 = specialinvoke r1.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int increment(int)>(i12);

        goto label2;

     label3:
        r1.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: java.lang.Object[] buffer> = r5;

        r1.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int head> = 0;

        r1.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int tail> = i11;

     label4:
        $r3 = r1.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: java.lang.Object[] buffer>;

        $i3 = r1.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int tail>;

        $r3[$i3] = r0;

        $i4 = r1.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int tail>;

        $i5 = specialinvoke r1.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int increment(int)>($i4);

        r1.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int tail> = $i5;

        return 1;
    }

    public java.lang.Object get()
    {
        org.apache.commons.collections.buffer.UnboundedFifoBuffer r0;
        java.lang.Object[] $r1;
        org.apache.commons.collections.BufferUnderflowException $r3;
        int $i0;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.buffer.UnboundedFifoBuffer;

        $z0 = virtualinvoke r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = new org.apache.commons.collections.BufferUnderflowException;

        specialinvoke $r3.<org.apache.commons.collections.BufferUnderflowException: void <init>(java.lang.String)>("The buffer is already empty");

        throw $r3;

     label1:
        $r1 = r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: java.lang.Object[] buffer>;

        $i0 = r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int head>;

        $r2 = $r1[$i0];

        return $r2;
    }

    public java.lang.Object remove()
    {
        org.apache.commons.collections.buffer.UnboundedFifoBuffer r0;
        java.lang.Object[] $r1, $r3;
        org.apache.commons.collections.BufferUnderflowException $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.buffer.UnboundedFifoBuffer;

        $z0 = virtualinvoke r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r4 = new org.apache.commons.collections.BufferUnderflowException;

        specialinvoke $r4.<org.apache.commons.collections.BufferUnderflowException: void <init>(java.lang.String)>("The buffer is already empty");

        throw $r4;

     label1:
        $r1 = r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: java.lang.Object[] buffer>;

        $i0 = r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int head>;

        r2 = $r1[$i0];

        if r2 == null goto label2;

        $r3 = r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: java.lang.Object[] buffer>;

        $i1 = r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int head>;

        $r3[$i1] = null;

        $i2 = r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int head>;

        $i3 = specialinvoke r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int increment(int)>($i2);

        r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int head> = $i3;

     label2:
        return r2;
    }

    private int increment(int)
    {
        org.apache.commons.collections.buffer.UnboundedFifoBuffer r0;
        java.lang.Object[] $r1;
        int $i0, i1, i2;

        r0 := @this: org.apache.commons.collections.buffer.UnboundedFifoBuffer;

        i1 := @parameter0: int;

        i2 = i1 + 1;

        $r1 = r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: java.lang.Object[] buffer>;

        $i0 = lengthof $r1;

        if i2 < $i0 goto label1;

        i2 = 0;

     label1:
        return i2;
    }

    private int decrement(int)
    {
        org.apache.commons.collections.buffer.UnboundedFifoBuffer r0;
        java.lang.Object[] $r1;
        int $i0, i1, i2, $i4;

        r0 := @this: org.apache.commons.collections.buffer.UnboundedFifoBuffer;

        i1 := @parameter0: int;

        $i4 = (int) -1;

        i2 = i1 + $i4;

        if i2 >= 0 goto label1;

        $r1 = r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: java.lang.Object[] buffer>;

        $i0 = lengthof $r1;

        i2 = $i0 - 1;

     label1:
        return i2;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.collections.buffer.UnboundedFifoBuffer r1;
        org.apache.commons.collections.buffer.UnboundedFifoBuffer$1 $r0;

        r1 := @this: org.apache.commons.collections.buffer.UnboundedFifoBuffer;

        $r0 = new org.apache.commons.collections.buffer.UnboundedFifoBuffer$1;

        specialinvoke $r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer$1: void <init>(org.apache.commons.collections.buffer.UnboundedFifoBuffer)>(r1);

        return $r0;
    }

    static int access$000(org.apache.commons.collections.buffer.UnboundedFifoBuffer, int)
    {
        int i0, $i1;
        org.apache.commons.collections.buffer.UnboundedFifoBuffer r0;

        r0 := @parameter0: org.apache.commons.collections.buffer.UnboundedFifoBuffer;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int increment(int)>(i0);

        return $i1;
    }

    static int access$100(org.apache.commons.collections.buffer.UnboundedFifoBuffer, int)
    {
        int i0, $i1;
        org.apache.commons.collections.buffer.UnboundedFifoBuffer r0;

        r0 := @parameter0: org.apache.commons.collections.buffer.UnboundedFifoBuffer;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<org.apache.commons.collections.buffer.UnboundedFifoBuffer: int decrement(int)>(i0);

        return $i1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections.buffer.UnboundedFifoBuffer: long serialVersionUID> = -3482960336579541419L;

        return;
    }
}
