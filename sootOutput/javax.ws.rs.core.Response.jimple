public abstract class javax.ws.rs.core.Response extends java.lang.Object
{

    protected void <init>()
    {
        javax.ws.rs.core.Response r0;

        r0 := @this: javax.ws.rs.core.Response;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract int getStatus();

    public abstract javax.ws.rs.core.Response$StatusType getStatusInfo();

    public abstract java.lang.Object getEntity() throws java.lang.IllegalStateException;

    public abstract java.lang.Object readEntity(java.lang.Class) throws javax.ws.rs.MessageProcessingException, java.lang.IllegalStateException;

    public abstract java.lang.Object readEntity(javax.ws.rs.core.GenericType) throws javax.ws.rs.MessageProcessingException, java.lang.IllegalStateException;

    public abstract java.lang.Object readEntity(java.lang.Class, java.lang.'annotation'.Annotation[]) throws javax.ws.rs.MessageProcessingException, java.lang.IllegalStateException;

    public abstract java.lang.Object readEntity(javax.ws.rs.core.GenericType, java.lang.'annotation'.Annotation[]) throws javax.ws.rs.MessageProcessingException, java.lang.IllegalStateException;

    public abstract boolean hasEntity() throws java.lang.IllegalStateException;

    public abstract boolean bufferEntity() throws javax.ws.rs.MessageProcessingException, java.lang.IllegalStateException;

    public abstract void close() throws javax.ws.rs.MessageProcessingException;

    public abstract javax.ws.rs.core.MediaType getMediaType();

    public abstract java.util.Locale getLanguage();

    public abstract int getLength();

    public abstract java.util.Set getAllowedMethods();

    public abstract java.util.Map getCookies();

    public abstract javax.ws.rs.core.EntityTag getEntityTag();

    public abstract java.util.Date getDate();

    public abstract java.util.Date getLastModified();

    public abstract java.net.URI getLocation();

    public abstract java.util.Set getLinks();

    public abstract boolean hasLink(java.lang.String);

    public abstract javax.ws.rs.core.Link getLink(java.lang.String);

    public abstract javax.ws.rs.core.Link$Builder getLinkBuilder(java.lang.String);

    public abstract javax.ws.rs.core.MultivaluedMap getMetadata();

    public javax.ws.rs.core.MultivaluedMap getHeaders()
    {
        javax.ws.rs.core.MultivaluedMap $r1;
        javax.ws.rs.core.Response r0;

        r0 := @this: javax.ws.rs.core.Response;

        $r1 = virtualinvoke r0.<javax.ws.rs.core.Response: javax.ws.rs.core.MultivaluedMap getMetadata()>();

        return $r1;
    }

    public abstract javax.ws.rs.core.MultivaluedMap getStringHeaders();

    public abstract java.lang.String getHeaderString(java.lang.String);

    public static javax.ws.rs.core.Response$ResponseBuilder fromResponse(javax.ws.rs.core.Response)
    {
        int $i0;
        java.lang.String r6;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r4, $r10;
        java.util.Set $r3;
        javax.ws.rs.core.MultivaluedMap $r2, $r7;
        java.util.List r9;
        javax.ws.rs.core.Response r0;
        javax.ws.rs.core.Response$ResponseBuilder $r1;
        java.lang.Object $r5, $r8, $r11, $r12;

        r0 := @parameter0: javax.ws.rs.core.Response;

        $i0 = virtualinvoke r0.<javax.ws.rs.core.Response: int getStatus()>();

        $r1 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(int)>($i0);

        $z0 = virtualinvoke r0.<javax.ws.rs.core.Response: boolean hasEntity()>();

        if $z0 == 0 goto label1;

        $r12 = virtualinvoke r0.<javax.ws.rs.core.Response: java.lang.Object getEntity()>();

        virtualinvoke $r1.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>($r12);

     label1:
        $r2 = virtualinvoke r0.<javax.ws.rs.core.Response: javax.ws.rs.core.MultivaluedMap getHeaders()>();

        $r3 = interfaceinvoke $r2.<javax.ws.rs.core.MultivaluedMap: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $r7 = virtualinvoke r0.<javax.ws.rs.core.Response: javax.ws.rs.core.MultivaluedMap getHeaders()>();

        $r8 = interfaceinvoke $r7.<javax.ws.rs.core.MultivaluedMap: java.lang.Object get(java.lang.Object)>(r6);

        r9 = (java.util.List) $r8;

        $r10 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r1.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)>(r6, $r11);

        goto label3;

     label4:
        goto label2;

     label5:
        return $r1;
    }

    public static javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$StatusType)
    {
        javax.ws.rs.core.Response$StatusType r1;
        javax.ws.rs.core.Response$ResponseBuilder $r0, $r2;

        r1 := @parameter0: javax.ws.rs.core.Response$StatusType;

        $r0 = staticinvoke <javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder newInstance()>();

        $r2 = virtualinvoke $r0.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$StatusType)>(r1);

        return $r2;
    }

    public static javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$Status)
    {
        javax.ws.rs.core.Response$Status r0;
        javax.ws.rs.core.Response$ResponseBuilder $r1;

        r0 := @parameter0: javax.ws.rs.core.Response$Status;

        $r1 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$StatusType)>(r0);

        return $r1;
    }

    public static javax.ws.rs.core.Response$ResponseBuilder status(int)
    {
        int i0;
        javax.ws.rs.core.Response$ResponseBuilder $r0, $r1;

        i0 := @parameter0: int;

        $r0 = staticinvoke <javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder newInstance()>();

        $r1 = virtualinvoke $r0.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder status(int)>(i0);

        return $r1;
    }

    public static javax.ws.rs.core.Response$ResponseBuilder ok()
    {
        javax.ws.rs.core.Response$Status $r0;
        javax.ws.rs.core.Response$ResponseBuilder $r1;

        $r0 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status OK>;

        $r1 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$Status)>($r0);

        return $r1;
    }

    public static javax.ws.rs.core.Response$ResponseBuilder ok(java.lang.Object)
    {
        java.lang.Object r1;
        javax.ws.rs.core.Response$ResponseBuilder $r0;

        r1 := @parameter0: java.lang.Object;

        $r0 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder ok()>();

        virtualinvoke $r0.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>(r1);

        return $r0;
    }

    public static javax.ws.rs.core.Response$ResponseBuilder ok(java.lang.Object, javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r3;
        javax.ws.rs.core.Response$ResponseBuilder $r0, $r2, $r4;
        java.lang.Object r1;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: javax.ws.rs.core.MediaType;

        $r0 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder ok()>();

        $r2 = virtualinvoke $r0.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>(r1);

        $r4 = virtualinvoke $r2.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder type(javax.ws.rs.core.MediaType)>(r3);

        return $r4;
    }

    public static javax.ws.rs.core.Response$ResponseBuilder ok(java.lang.Object, java.lang.String)
    {
        javax.ws.rs.core.Response$ResponseBuilder $r0, $r2, $r4;
        java.lang.Object r1;
        java.lang.String r3;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        $r0 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder ok()>();

        $r2 = virtualinvoke $r0.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>(r1);

        $r4 = virtualinvoke $r2.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder type(java.lang.String)>(r3);

        return $r4;
    }

    public static javax.ws.rs.core.Response$ResponseBuilder ok(java.lang.Object, javax.ws.rs.core.Variant)
    {
        javax.ws.rs.core.Response$ResponseBuilder $r0, $r2, $r4;
        java.lang.Object r1;
        javax.ws.rs.core.Variant r3;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: javax.ws.rs.core.Variant;

        $r0 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder ok()>();

        $r2 = virtualinvoke $r0.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>(r1);

        $r4 = virtualinvoke $r2.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder variant(javax.ws.rs.core.Variant)>(r3);

        return $r4;
    }

    public static javax.ws.rs.core.Response$ResponseBuilder serverError()
    {
        javax.ws.rs.core.Response$Status $r0;
        javax.ws.rs.core.Response$ResponseBuilder $r1;

        $r0 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status INTERNAL_SERVER_ERROR>;

        $r1 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$Status)>($r0);

        return $r1;
    }

    public static javax.ws.rs.core.Response$ResponseBuilder created(java.net.URI)
    {
        javax.ws.rs.core.Response$ResponseBuilder $r1, $r3;
        javax.ws.rs.core.Response$Status $r0;
        java.net.URI r2;

        r2 := @parameter0: java.net.URI;

        $r0 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status CREATED>;

        $r1 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$Status)>($r0);

        $r3 = virtualinvoke $r1.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder location(java.net.URI)>(r2);

        return $r3;
    }

    public static javax.ws.rs.core.Response$ResponseBuilder accepted()
    {
        javax.ws.rs.core.Response$Status $r0;
        javax.ws.rs.core.Response$ResponseBuilder $r1;

        $r0 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status ACCEPTED>;

        $r1 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$Status)>($r0);

        return $r1;
    }

    public static javax.ws.rs.core.Response$ResponseBuilder accepted(java.lang.Object)
    {
        java.lang.Object r1;
        javax.ws.rs.core.Response$ResponseBuilder $r0, $r2;

        r1 := @parameter0: java.lang.Object;

        $r0 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder accepted()>();

        $r2 = virtualinvoke $r0.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>(r1);

        return $r2;
    }

    public static javax.ws.rs.core.Response$ResponseBuilder noContent()
    {
        javax.ws.rs.core.Response$Status $r0;
        javax.ws.rs.core.Response$ResponseBuilder $r1;

        $r0 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NO_CONTENT>;

        $r1 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$Status)>($r0);

        return $r1;
    }

    public static javax.ws.rs.core.Response$ResponseBuilder notModified()
    {
        javax.ws.rs.core.Response$Status $r0;
        javax.ws.rs.core.Response$ResponseBuilder $r1;

        $r0 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_MODIFIED>;

        $r1 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$Status)>($r0);

        return $r1;
    }

    public static javax.ws.rs.core.Response$ResponseBuilder notModified(javax.ws.rs.core.EntityTag)
    {
        javax.ws.rs.core.EntityTag r1;
        javax.ws.rs.core.Response$ResponseBuilder $r0, $r2;

        r1 := @parameter0: javax.ws.rs.core.EntityTag;

        $r0 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder notModified()>();

        $r2 = virtualinvoke $r0.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder tag(javax.ws.rs.core.EntityTag)>(r1);

        return $r2;
    }

    public static javax.ws.rs.core.Response$ResponseBuilder notModified(java.lang.String)
    {
        java.lang.String r1;
        javax.ws.rs.core.Response$ResponseBuilder $r0, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder notModified()>();

        $r2 = virtualinvoke $r0.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder tag(java.lang.String)>(r1);

        return $r2;
    }

    public static javax.ws.rs.core.Response$ResponseBuilder seeOther(java.net.URI)
    {
        javax.ws.rs.core.Response$ResponseBuilder $r1, $r3;
        javax.ws.rs.core.Response$Status $r0;
        java.net.URI r2;

        r2 := @parameter0: java.net.URI;

        $r0 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status SEE_OTHER>;

        $r1 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$Status)>($r0);

        $r3 = virtualinvoke $r1.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder location(java.net.URI)>(r2);

        return $r3;
    }

    public static javax.ws.rs.core.Response$ResponseBuilder temporaryRedirect(java.net.URI)
    {
        javax.ws.rs.core.Response$ResponseBuilder $r1, $r3;
        javax.ws.rs.core.Response$Status $r0;
        java.net.URI r2;

        r2 := @parameter0: java.net.URI;

        $r0 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status TEMPORARY_REDIRECT>;

        $r1 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$Status)>($r0);

        $r3 = virtualinvoke $r1.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder location(java.net.URI)>(r2);

        return $r3;
    }

    public static javax.ws.rs.core.Response$ResponseBuilder notAcceptable(java.util.List)
    {
        java.util.List r2;
        javax.ws.rs.core.Response$ResponseBuilder $r1, $r3;
        javax.ws.rs.core.Response$Status $r0;

        r2 := @parameter0: java.util.List;

        $r0 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_ACCEPTABLE>;

        $r1 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$Status)>($r0);

        $r3 = virtualinvoke $r1.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder variants(java.util.List)>(r2);

        return $r3;
    }
}
