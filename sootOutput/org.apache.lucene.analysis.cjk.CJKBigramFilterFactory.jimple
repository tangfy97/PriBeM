public class org.apache.lucene.analysis.cjk.CJKBigramFilterFactory extends org.apache.lucene.analysis.util.TokenFilterFactory
{
    final int flags;
    final boolean outputUnigrams;

    public void <init>(java.util.Map)
    {
        org.apache.lucene.analysis.cjk.CJKBigramFilterFactory r0;
        java.lang.IllegalArgumentException $r2;
        byte b0;
        java.util.Map r1;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: org.apache.lucene.analysis.cjk.CJKBigramFilterFactory;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.lucene.analysis.util.TokenFilterFactory: void <init>(java.util.Map)>(r1);

        b0 = 0;

        $z0 = virtualinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilterFactory: boolean getBoolean(java.util.Map,java.lang.String,boolean)>(r1, "han", 1);

        if $z0 == 0 goto label1;

        b0 = 1;

     label1:
        $z1 = virtualinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilterFactory: boolean getBoolean(java.util.Map,java.lang.String,boolean)>(r1, "hiragana", 1);

        if $z1 == 0 goto label2;

        b0 = b0 | 2;

     label2:
        $z2 = virtualinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilterFactory: boolean getBoolean(java.util.Map,java.lang.String,boolean)>(r1, "katakana", 1);

        if $z2 == 0 goto label3;

        b0 = b0 | 4;

     label3:
        $z3 = virtualinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilterFactory: boolean getBoolean(java.util.Map,java.lang.String,boolean)>(r1, "hangul", 1);

        if $z3 == 0 goto label4;

        b0 = b0 | 8;

     label4:
        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilterFactory: int flags> = b0;

        $z4 = virtualinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilterFactory: boolean getBoolean(java.util.Map,java.lang.String,boolean)>(r1, "outputUnigrams", 0);

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilterFactory: boolean outputUnigrams> = $z4;

        $z5 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z5 != 0 goto label5;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown parameters: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label5:
        return;
    }

    public org.apache.lucene.analysis.TokenStream create(org.apache.lucene.analysis.TokenStream)
    {
        org.apache.lucene.analysis.TokenStream r1;
        int $i0;
        org.apache.lucene.analysis.cjk.CJKBigramFilter $r0;
        org.apache.lucene.analysis.cjk.CJKBigramFilterFactory r2;
        boolean $z0;

        r2 := @this: org.apache.lucene.analysis.cjk.CJKBigramFilterFactory;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        $r0 = new org.apache.lucene.analysis.cjk.CJKBigramFilter;

        $i0 = r2.<org.apache.lucene.analysis.cjk.CJKBigramFilterFactory: int flags>;

        $z0 = r2.<org.apache.lucene.analysis.cjk.CJKBigramFilterFactory: boolean outputUnigrams>;

        specialinvoke $r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: void <init>(org.apache.lucene.analysis.TokenStream,int,boolean)>(r1, $i0, $z0);

        return $r0;
    }
}
