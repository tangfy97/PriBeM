class org.waveprotocol.wave.client.editor.harness.EditorHarness$4 extends java.lang.Object implements com.google.gwt.event.dom.client.ClickHandler
{
    final org.waveprotocol.wave.client.editor.harness.EditorHarness this$0;

    void <init>(org.waveprotocol.wave.client.editor.harness.EditorHarness)
    {
        org.waveprotocol.wave.client.editor.harness.EditorHarness r1;
        org.waveprotocol.wave.client.editor.harness.EditorHarness$4 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.harness.EditorHarness$4;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.harness.EditorHarness;

        r0.<org.waveprotocol.wave.client.editor.harness.EditorHarness$4: org.waveprotocol.wave.client.editor.harness.EditorHarness this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onClick(com.google.gwt.event.dom.client.ClickEvent)
    {
        org.waveprotocol.wave.client.editor.Editor $r10;
        org.waveprotocol.wave.client.editor.harness.EditorHarness$4 r0;
        com.google.gwt.event.dom.client.ClickEvent r11;
        org.waveprotocol.wave.client.editor.harness.EditorHarness $r1, $r3, $r5, $r7, $r9;
        com.google.gwt.user.client.ui.HTML $r2, $r4, $r6, $r8;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.harness.EditorHarness$4;

        r11 := @parameter0: com.google.gwt.event.dom.client.ClickEvent;

        $z0 = staticinvoke <org.waveprotocol.wave.client.debug.logger.LogLevel: boolean showDebug()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<org.waveprotocol.wave.client.editor.harness.EditorHarness$4: org.waveprotocol.wave.client.editor.harness.EditorHarness this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.harness.EditorHarness: com.google.gwt.user.client.ui.HTML access$200(org.waveprotocol.wave.client.editor.harness.EditorHarness)>($r1);

        if $r2 == null goto label1;

        $r3 = r0.<org.waveprotocol.wave.client.editor.harness.EditorHarness$4: org.waveprotocol.wave.client.editor.harness.EditorHarness this$0>;

        $r4 = staticinvoke <org.waveprotocol.wave.client.editor.harness.EditorHarness: com.google.gwt.user.client.ui.HTML access$200(org.waveprotocol.wave.client.editor.harness.EditorHarness)>($r3);

        virtualinvoke $r4.<com.google.gwt.user.client.ui.HTML: void setHTML(java.lang.String)>("");

        $r5 = r0.<org.waveprotocol.wave.client.editor.harness.EditorHarness$4: org.waveprotocol.wave.client.editor.harness.EditorHarness this$0>;

        $r6 = staticinvoke <org.waveprotocol.wave.client.editor.harness.EditorHarness: com.google.gwt.user.client.ui.HTML access$300(org.waveprotocol.wave.client.editor.harness.EditorHarness)>($r5);

        virtualinvoke $r6.<com.google.gwt.user.client.ui.HTML: void setText(java.lang.String)>("");

        $r7 = r0.<org.waveprotocol.wave.client.editor.harness.EditorHarness$4: org.waveprotocol.wave.client.editor.harness.EditorHarness this$0>;

        $r8 = staticinvoke <org.waveprotocol.wave.client.editor.harness.EditorHarness: com.google.gwt.user.client.ui.HTML access$400(org.waveprotocol.wave.client.editor.harness.EditorHarness)>($r7);

        virtualinvoke $r8.<com.google.gwt.user.client.ui.HTML: void setText(java.lang.String)>("");

        $r9 = r0.<org.waveprotocol.wave.client.editor.harness.EditorHarness$4: org.waveprotocol.wave.client.editor.harness.EditorHarness this$0>;

        $r10 = $r9.<org.waveprotocol.wave.client.editor.harness.EditorHarness: org.waveprotocol.wave.client.editor.Editor editor1>;

        interfaceinvoke $r10.<org.waveprotocol.wave.client.editor.Editor: void focus(boolean)>(1);

     label1:
        return;
    }
}
