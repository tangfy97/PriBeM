public class org.mozilla.javascript.jdk13.VMBridge_jdk13 extends org.mozilla.javascript.VMBridge
{
    private java.lang.ThreadLocal contextLocal;
    static java.lang.Class class$java$lang$reflect$InvocationHandler;

    public void <init>()
    {
        java.lang.ThreadLocal $r1;
        org.mozilla.javascript.jdk13.VMBridge_jdk13 r0;

        r0 := @this: org.mozilla.javascript.jdk13.VMBridge_jdk13;

        specialinvoke r0.<org.mozilla.javascript.VMBridge: void <init>()>();

        $r1 = new java.lang.ThreadLocal;

        specialinvoke $r1.<java.lang.ThreadLocal: void <init>()>();

        r0.<org.mozilla.javascript.jdk13.VMBridge_jdk13: java.lang.ThreadLocal contextLocal> = $r1;

        return;
    }

    protected java.lang.Object getThreadContextHelper()
    {
        java.lang.ThreadLocal $r1, $r3;
        java.lang.Object[] r4;
        java.lang.Object $r2;
        org.mozilla.javascript.jdk13.VMBridge_jdk13 r0;

        r0 := @this: org.mozilla.javascript.jdk13.VMBridge_jdk13;

        $r1 = r0.<org.mozilla.javascript.jdk13.VMBridge_jdk13: java.lang.ThreadLocal contextLocal>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r4 = (java.lang.Object[]) $r2;

        if r4 != null goto label1;

        r4 = newarray (java.lang.Object)[1];

        $r3 = r0.<org.mozilla.javascript.jdk13.VMBridge_jdk13: java.lang.ThreadLocal contextLocal>;

        virtualinvoke $r3.<java.lang.ThreadLocal: void set(java.lang.Object)>(r4);

     label1:
        return r4;
    }

    protected org.mozilla.javascript.Context getContext(java.lang.Object)
    {
        java.lang.Object[] r1;
        org.mozilla.javascript.Context $r3;
        java.lang.Object r0, $r2;
        org.mozilla.javascript.jdk13.VMBridge_jdk13 r4;

        r4 := @this: org.mozilla.javascript.jdk13.VMBridge_jdk13;

        r0 := @parameter0: java.lang.Object;

        r1 = (java.lang.Object[]) r0;

        $r2 = r1[0];

        $r3 = (org.mozilla.javascript.Context) $r2;

        return $r3;
    }

    protected void setContext(java.lang.Object, org.mozilla.javascript.Context)
    {
        java.lang.Object[] r1;
        org.mozilla.javascript.Context r2;
        java.lang.Object r0;
        org.mozilla.javascript.jdk13.VMBridge_jdk13 r3;

        r3 := @this: org.mozilla.javascript.jdk13.VMBridge_jdk13;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.mozilla.javascript.Context;

        r1 = (java.lang.Object[]) r0;

        r1[0] = r2;

        return;
    }

    protected java.lang.ClassLoader getCurrentThreadClassLoader()
    {
        java.lang.ClassLoader $r1;
        org.mozilla.javascript.jdk13.VMBridge_jdk13 r2;
        java.lang.Thread $r0;

        r2 := @this: org.mozilla.javascript.jdk13.VMBridge_jdk13;

        $r0 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r1 = virtualinvoke $r0.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        return $r1;
    }

    protected boolean tryToMakeAccessible(java.lang.Object)
    {
        java.lang.reflect.AccessibleObject r1;
        java.lang.Object r0;
        java.lang.Exception $r2;
        org.mozilla.javascript.jdk13.VMBridge_jdk13 r3;
        boolean $z0, $z1, $z2;

        r3 := @this: org.mozilla.javascript.jdk13.VMBridge_jdk13;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.reflect.AccessibleObject;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (java.lang.reflect.AccessibleObject) r0;

        $z1 = virtualinvoke r1.<java.lang.reflect.AccessibleObject: boolean isAccessible()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        virtualinvoke r1.<java.lang.reflect.AccessibleObject: void setAccessible(boolean)>(1);

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

     label5:
        $z2 = virtualinvoke r1.<java.lang.reflect.AccessibleObject: boolean isAccessible()>();

        return $z2;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    protected java.lang.Object getInterfaceProxyHelper(org.mozilla.javascript.ContextFactory, java.lang.Class[])
    {
        java.lang.IllegalStateException $r8;
        java.lang.NoSuchMethodException $r7;
        java.lang.Class[] r0, $r4;
        java.lang.RuntimeException $r9;
        java.lang.reflect.Constructor $r6;
        org.mozilla.javascript.jdk13.VMBridge_jdk13 r10;
        java.lang.Class $r1, $r3, $r5, $r12;
        java.lang.ClassLoader $r2;
        org.mozilla.javascript.ContextFactory r11;

        r10 := @this: org.mozilla.javascript.jdk13.VMBridge_jdk13;

        r11 := @parameter0: org.mozilla.javascript.ContextFactory;

        r0 := @parameter1: java.lang.Class[];

        $r1 = r0[0];

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r3 = staticinvoke <java.lang.reflect.Proxy: java.lang.Class getProxyClass(java.lang.ClassLoader,java.lang.Class[])>($r2, r0);

     label1:
        $r4 = newarray (java.lang.Class)[1];

        $r5 = <org.mozilla.javascript.jdk13.VMBridge_jdk13: java.lang.Class class$java$lang$reflect$InvocationHandler>;

        if $r5 != null goto label2;

        $r12 = staticinvoke <org.mozilla.javascript.jdk13.VMBridge_jdk13: java.lang.Class class$(java.lang.String)>("java.lang.reflect.InvocationHandler");

        <org.mozilla.javascript.jdk13.VMBridge_jdk13: java.lang.Class class$java$lang$reflect$InvocationHandler> = $r12;

        goto label3;

     label2:
        $r12 = <org.mozilla.javascript.jdk13.VMBridge_jdk13: java.lang.Class class$java$lang$reflect$InvocationHandler>;

     label3:
        $r4[0] = $r12;

        $r6 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r4);

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>()>();

        $r9 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException initCause(java.lang.RuntimeException,java.lang.Throwable)>($r8, $r7);

        throw $r9;

     label6:
        return $r6;

        catch java.lang.NoSuchMethodException from label1 to label4 with label5;
    }

    protected java.lang.Object newInterfaceProxy(java.lang.Object, org.mozilla.javascript.ContextFactory, org.mozilla.javascript.InterfaceAdapter, java.lang.Object, org.mozilla.javascript.Scriptable)
    {
        java.lang.IllegalStateException $r11, $r14;
        java.lang.Object[] $r8;
        org.mozilla.javascript.jdk13.VMBridge_jdk13$1 $r2;
        java.lang.reflect.Constructor r1;
        java.lang.InstantiationException $r10;
        org.mozilla.javascript.ContextFactory r5;
        java.lang.IllegalAccessException $r13;
        java.lang.RuntimeException $r12, $r15, $r17;
        org.mozilla.javascript.jdk13.VMBridge_jdk13 r3;
        org.mozilla.javascript.InterfaceAdapter r4;
        java.lang.reflect.InvocationTargetException $r16;
        org.mozilla.javascript.Scriptable r7;
        java.lang.Object r0, r6, $r9;

        r3 := @this: org.mozilla.javascript.jdk13.VMBridge_jdk13;

        r0 := @parameter0: java.lang.Object;

        r5 := @parameter1: org.mozilla.javascript.ContextFactory;

        r4 := @parameter2: org.mozilla.javascript.InterfaceAdapter;

        r6 := @parameter3: java.lang.Object;

        r7 := @parameter4: org.mozilla.javascript.Scriptable;

        r1 = (java.lang.reflect.Constructor) r0;

        $r2 = new org.mozilla.javascript.jdk13.VMBridge_jdk13$1;

        specialinvoke $r2.<org.mozilla.javascript.jdk13.VMBridge_jdk13$1: void <init>(org.mozilla.javascript.jdk13.VMBridge_jdk13,org.mozilla.javascript.InterfaceAdapter,org.mozilla.javascript.ContextFactory,java.lang.Object,org.mozilla.javascript.Scriptable)>(r3, r4, r5, r6, r7);

     label1:
        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = $r2;

        $r9 = virtualinvoke r1.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r8);

     label2:
        goto label6;

     label3:
        $r16 := @caughtexception;

        $r17 = staticinvoke <org.mozilla.javascript.Context: java.lang.RuntimeException throwAsScriptRuntimeEx(java.lang.Throwable)>($r16);

        throw $r17;

     label4:
        $r13 := @caughtexception;

        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>()>();

        $r15 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException initCause(java.lang.RuntimeException,java.lang.Throwable)>($r14, $r13);

        throw $r15;

     label5:
        $r10 := @caughtexception;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>()>();

        $r12 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException initCause(java.lang.RuntimeException,java.lang.Throwable)>($r11, $r10);

        throw $r12;

     label6:
        return $r9;

        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.InstantiationException from label1 to label2 with label5;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
