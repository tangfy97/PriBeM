public final class org.apache.poi.ddf.EscherContainerRecord extends org.apache.poi.ddf.EscherRecord
{
    public static final short DGG_CONTAINER;
    public static final short BSTORE_CONTAINER;
    public static final short DG_CONTAINER;
    public static final short SPGR_CONTAINER;
    public static final short SP_CONTAINER;
    public static final short SOLVER_CONTAINER;
    private static org.apache.poi.util.POILogger log;
    private int _remainingLength;
    private final java.util.List _childRecords;

    public void <init>()
    {
        org.apache.poi.ddf.EscherContainerRecord r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.poi.ddf.EscherContainerRecord;

        specialinvoke r0.<org.apache.poi.ddf.EscherRecord: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.ddf.EscherContainerRecord: java.util.List _childRecords> = $r1;

        return;
    }

    public int fillFields(byte[], int, org.apache.poi.ddf.EscherRecordFactory)
    {
        org.apache.poi.ddf.EscherRecordFactory r2;
        byte[] r1;
        org.apache.poi.ddf.EscherRecord $r3;
        int i0, $i1, $i2, $i3, i4, i5, i6;
        java.lang.String $r10;
        boolean $z0;
        org.apache.poi.ddf.EscherContainerRecord r0;
        org.apache.poi.util.POILogger $r4, $r6;
        java.lang.StringBuilder $r5, $r7, $r8, $r9;

        r0 := @this: org.apache.poi.ddf.EscherContainerRecord;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.poi.ddf.EscherRecordFactory;

        i4 = virtualinvoke r0.<org.apache.poi.ddf.EscherContainerRecord: int readHeader(byte[],int)>(r1, i0);

        i5 = 8;

        i6 = i0 + 8;

     label1:
        if i4 <= 0 goto label3;

        $i1 = lengthof r1;

        if i6 >= $i1 goto label3;

        $r3 = interfaceinvoke r2.<org.apache.poi.ddf.EscherRecordFactory: org.apache.poi.ddf.EscherRecord createRecord(byte[],int)>(r1, i6);

        $i2 = virtualinvoke $r3.<org.apache.poi.ddf.EscherRecord: int fillFields(byte[],int,org.apache.poi.ddf.EscherRecordFactory)>(r1, i6, r2);

        i5 = i5 + $i2;

        i6 = i6 + $i2;

        i4 = i4 - $i2;

        virtualinvoke r0.<org.apache.poi.ddf.EscherContainerRecord: void addChildRecord(org.apache.poi.ddf.EscherRecord)>($r3);

        $i3 = lengthof r1;

        if i6 < $i3 goto label2;

        if i4 <= 0 goto label2;

        r0.<org.apache.poi.ddf.EscherContainerRecord: int _remainingLength> = i4;

        $r4 = <org.apache.poi.ddf.EscherContainerRecord: org.apache.poi.util.POILogger log>;

        $z0 = virtualinvoke $r4.<org.apache.poi.util.POILogger: boolean check(int)>(5);

        if $z0 == 0 goto label2;

        $r6 = <org.apache.poi.ddf.EscherContainerRecord: org.apache.poi.util.POILogger log>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not enough Escher data: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes remaining but no space left");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r10);

     label2:
        goto label1;

     label3:
        return i5;
    }

    public int serialize(int, byte[], org.apache.poi.ddf.EscherSerializationListener)
    {
        byte[] r2;
        org.apache.poi.ddf.EscherSerializationListener r0;
        org.apache.poi.ddf.EscherRecord r8, r10;
        short $s1, $s2, $s4, $s7;
        int i0, $i3, $i5, $i6, $i8, $i9, $i10, $i11, i12, i13, i14;
        boolean $z0, $z1;
        java.util.Iterator $r4, $r6;
        org.apache.poi.ddf.EscherContainerRecord r1;
        java.util.List $r3, $r5;
        java.lang.Object $r7, $r9;

        r1 := @this: org.apache.poi.ddf.EscherContainerRecord;

        i0 := @parameter0: int;

        r2 := @parameter1: byte[];

        r0 := @parameter2: org.apache.poi.ddf.EscherSerializationListener;

        $s1 = virtualinvoke r1.<org.apache.poi.ddf.EscherContainerRecord: short getRecordId()>();

        interfaceinvoke r0.<org.apache.poi.ddf.EscherSerializationListener: void beforeRecordSerialize(int,short,org.apache.poi.ddf.EscherRecord)>(i0, $s1, r1);

        $s2 = virtualinvoke r1.<org.apache.poi.ddf.EscherContainerRecord: short getOptions()>();

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r2, i0, $s2);

        $i3 = i0 + 2;

        $s4 = virtualinvoke r1.<org.apache.poi.ddf.EscherContainerRecord: short getRecordId()>();

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r2, $i3, $s4);

        i12 = 0;

        $r3 = r1.<org.apache.poi.ddf.EscherContainerRecord: java.util.List _childRecords>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.poi.ddf.EscherRecord) $r9;

        $i11 = virtualinvoke r10.<org.apache.poi.ddf.EscherRecord: int getRecordSize()>();

        i12 = i12 + $i11;

        goto label1;

     label2:
        $i5 = r1.<org.apache.poi.ddf.EscherContainerRecord: int _remainingLength>;

        i13 = i12 + $i5;

        $i6 = i0 + 4;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r2, $i6, i13);

        i14 = i0 + 8;

        $r5 = r1.<org.apache.poi.ddf.EscherContainerRecord: java.util.List _childRecords>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.poi.ddf.EscherRecord) $r7;

        $i10 = virtualinvoke r8.<org.apache.poi.ddf.EscherRecord: int serialize(int,byte[],org.apache.poi.ddf.EscherSerializationListener)>(i14, r2, r0);

        i14 = i14 + $i10;

        goto label3;

     label4:
        $s7 = virtualinvoke r1.<org.apache.poi.ddf.EscherContainerRecord: short getRecordId()>();

        $i8 = i14 - i0;

        interfaceinvoke r0.<org.apache.poi.ddf.EscherSerializationListener: void afterRecordSerialize(int,short,int,org.apache.poi.ddf.EscherRecord)>(i14, $s7, $i8, r1);

        $i9 = i14 - i0;

        return $i9;
    }

    public int getRecordSize()
    {
        java.util.Iterator $r2;
        org.apache.poi.ddf.EscherContainerRecord r0;
        org.apache.poi.ddf.EscherRecord r4;
        java.util.List $r1;
        int $i0, $i1, i2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.poi.ddf.EscherContainerRecord;

        i2 = 0;

        $r1 = r0.<org.apache.poi.ddf.EscherContainerRecord: java.util.List _childRecords>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.ddf.EscherRecord) $r3;

        $i1 = virtualinvoke r4.<org.apache.poi.ddf.EscherRecord: int getRecordSize()>();

        i2 = i2 + $i1;

        goto label1;

     label2:
        $i0 = 8 + i2;

        return $i0;
    }

    public boolean hasChildOfType(short)
    {
        java.util.Iterator $r2;
        org.apache.poi.ddf.EscherContainerRecord r0;
        org.apache.poi.ddf.EscherRecord r4;
        java.util.List $r1;
        short $s0, s1;
        int $i2, $i3;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.poi.ddf.EscherContainerRecord;

        s1 := @parameter0: short;

        $r1 = r0.<org.apache.poi.ddf.EscherContainerRecord: java.util.List _childRecords>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.ddf.EscherRecord) $r3;

        $s0 = virtualinvoke r4.<org.apache.poi.ddf.EscherRecord: short getRecordId()>();

        $i2 = (int) $s0;

        $i3 = (int) s1;

        if $i2 != $i3 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public org.apache.poi.ddf.EscherRecord getChild(int)
    {
        java.util.List $r1;
        org.apache.poi.ddf.EscherContainerRecord r0;
        int i0;
        java.lang.Object $r2;
        org.apache.poi.ddf.EscherRecord $r3;

        r0 := @this: org.apache.poi.ddf.EscherContainerRecord;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.ddf.EscherContainerRecord: java.util.List _childRecords>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.apache.poi.ddf.EscherRecord) $r2;

        return $r3;
    }

    public java.util.List getChildRecords()
    {
        java.util.List $r2;
        org.apache.poi.ddf.EscherContainerRecord r1;
        java.util.ArrayList $r0;

        r1 := @this: org.apache.poi.ddf.EscherContainerRecord;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<org.apache.poi.ddf.EscherContainerRecord: java.util.List _childRecords>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        return $r0;
    }

    public java.util.Iterator getChildIterator()
    {
        org.apache.poi.ddf.EscherContainerRecord$ReadOnlyIterator $r0;
        java.util.List $r2;
        org.apache.poi.ddf.EscherContainerRecord r1;

        r1 := @this: org.apache.poi.ddf.EscherContainerRecord;

        $r0 = new org.apache.poi.ddf.EscherContainerRecord$ReadOnlyIterator;

        $r2 = r1.<org.apache.poi.ddf.EscherContainerRecord: java.util.List _childRecords>;

        specialinvoke $r0.<org.apache.poi.ddf.EscherContainerRecord$ReadOnlyIterator: void <init>(java.util.List)>($r2);

        return $r0;
    }

    public void setChildRecords(java.util.List)
    {
        java.lang.IllegalStateException $r5;
        java.util.List r0, $r2, $r3, $r4;
        org.apache.poi.ddf.EscherContainerRecord r1;

        r1 := @this: org.apache.poi.ddf.EscherContainerRecord;

        r0 := @parameter0: java.util.List;

        $r2 = r1.<org.apache.poi.ddf.EscherContainerRecord: java.util.List _childRecords>;

        if r0 != $r2 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Child records private data member has escaped");

        throw $r5;

     label1:
        $r3 = r1.<org.apache.poi.ddf.EscherContainerRecord: java.util.List _childRecords>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        $r4 = r1.<org.apache.poi.ddf.EscherContainerRecord: java.util.List _childRecords>;

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>(r0);

        return;
    }

    public boolean removeChildRecord(org.apache.poi.ddf.EscherRecord)
    {
        java.util.List $r2;
        org.apache.poi.ddf.EscherContainerRecord r0;
        org.apache.poi.ddf.EscherRecord r1;
        boolean $z0;

        r0 := @this: org.apache.poi.ddf.EscherContainerRecord;

        r1 := @parameter0: org.apache.poi.ddf.EscherRecord;

        $r2 = r0.<org.apache.poi.ddf.EscherContainerRecord: java.util.List _childRecords>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.List getChildContainers()
    {
        java.util.Iterator $r3;
        org.apache.poi.ddf.EscherContainerRecord r1, $r6;
        org.apache.poi.ddf.EscherRecord r5;
        java.util.ArrayList $r0;
        java.util.List $r2;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r1 := @this: org.apache.poi.ddf.EscherContainerRecord;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.poi.ddf.EscherContainerRecord: java.util.List _childRecords>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.poi.ddf.EscherRecord) $r4;

        $z1 = r5 instanceof org.apache.poi.ddf.EscherContainerRecord;

        if $z1 == 0 goto label2;

        $r6 = (org.apache.poi.ddf.EscherContainerRecord) r5;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

     label2:
        goto label1;

     label3:
        return $r0;
    }

    public java.lang.String getRecordName()
    {
        org.apache.poi.ddf.EscherContainerRecord r0;
        short $s0, $s1;
        int $i2;
        java.lang.StringBuilder $r2, $r4, $r6;
        java.lang.String $r3, $r5;

        r0 := @this: org.apache.poi.ddf.EscherContainerRecord;

        $s0 = virtualinvoke r0.<org.apache.poi.ddf.EscherContainerRecord: short getRecordId()>();

        $i2 = (int) $s0;

        tableswitch($i2)
        {
            case -4096: goto label1;
            case -4095: goto label2;
            case -4094: goto label3;
            case -4093: goto label4;
            case -4092: goto label5;
            case -4091: goto label6;
            default: goto label7;
        };

     label1:
        return "DggContainer";

     label2:
        return "BStoreContainer";

     label3:
        return "DgContainer";

     label4:
        return "SpgrContainer";

     label5:
        return "SpContainer";

     label6:
        return "SolverContainer";

     label7:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Container 0x");

        $s1 = virtualinvoke r0.<org.apache.poi.ddf.EscherContainerRecord: short getRecordId()>();

        $r3 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public void display(java.io.PrintWriter, int)
    {
        java.io.PrintWriter r1;
        java.util.Iterator $r3;
        org.apache.poi.ddf.EscherContainerRecord r0;
        org.apache.poi.ddf.EscherRecord r5;
        java.util.List $r2;
        int i0, $i1;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.apache.poi.ddf.EscherContainerRecord;

        r1 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.poi.ddf.EscherRecord: void display(java.io.PrintWriter,int)>(r1, i0);

        $r2 = r0.<org.apache.poi.ddf.EscherContainerRecord: java.util.List _childRecords>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.poi.ddf.EscherRecord) $r4;

        $i1 = i0 + 1;

        virtualinvoke r5.<org.apache.poi.ddf.EscherRecord: void display(java.io.PrintWriter,int)>(r1, $i1);

        goto label1;

     label2:
        return;
    }

    public void addChildRecord(org.apache.poi.ddf.EscherRecord)
    {
        java.util.List $r2;
        org.apache.poi.ddf.EscherContainerRecord r0;
        org.apache.poi.ddf.EscherRecord r1;

        r0 := @this: org.apache.poi.ddf.EscherContainerRecord;

        r1 := @parameter0: org.apache.poi.ddf.EscherRecord;

        $r2 = r0.<org.apache.poi.ddf.EscherContainerRecord: java.util.List _childRecords>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addChildBefore(org.apache.poi.ddf.EscherRecord, int)
    {
        org.apache.poi.ddf.EscherContainerRecord r0;
        org.apache.poi.ddf.EscherRecord r4, r5;
        java.util.List $r1, $r2, $r6;
        short $s1;
        int $i0, i2, $i3, i4, $i5;
        java.lang.Object $r3;

        r0 := @this: org.apache.poi.ddf.EscherContainerRecord;

        r5 := @parameter0: org.apache.poi.ddf.EscherRecord;

        i2 := @parameter1: int;

        i4 = 0;

     label1:
        $r1 = r0.<org.apache.poi.ddf.EscherContainerRecord: java.util.List _childRecords>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i4 >= $i0 goto label3;

        $r2 = r0.<org.apache.poi.ddf.EscherContainerRecord: java.util.List _childRecords>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i4);

        r4 = (org.apache.poi.ddf.EscherRecord) $r3;

        $s1 = virtualinvoke r4.<org.apache.poi.ddf.EscherRecord: short getRecordId()>();

        $i5 = (int) $s1;

        if $i5 != i2 goto label2;

        $r6 = r0.<org.apache.poi.ddf.EscherContainerRecord: java.util.List _childRecords>;

        $i3 = i4;

        i4 = i4 + 1;

        interfaceinvoke $r6.<java.util.List: void add(int,java.lang.Object)>($i3, r5);

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return;
    }

    public java.lang.String toString()
    {
        boolean $z0, $z1;
        org.apache.poi.ddf.EscherContainerRecord r2;
        java.util.List $r3, $r29, $r39;
        java.lang.StringBuilder $r4, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r22, $r23, $r24, $r26, $r27, $r28, $r30, $r31, $r33, $r35, $r36, $r37, $r43, $r44, $r45, $r46, $r47;
        org.apache.poi.ddf.EscherRecord r42;
        short $s1, $s2, $s3;
        java.lang.StringBuffer $r1;
        int $i0, $i4, i5;
        java.lang.String $r0, $r6, $r9, $r17, $r21, $r25, $r32, $r34, $r38, $r48, $r49, $r50;
        java.util.Iterator $r40;
        java.lang.Class $r5;
        java.lang.Object $r41;

        r2 := @this: org.apache.poi.ddf.EscherContainerRecord;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = r2.<org.apache.poi.ddf.EscherContainerRecord: java.util.List _childRecords>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 <= 0 goto label2;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  children: ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r38);

        i5 = 0;

        $r39 = r2.<org.apache.poi.ddf.EscherContainerRecord: java.util.List _childRecords>;

        $r40 = interfaceinvoke $r39.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r40.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r41 = interfaceinvoke $r40.<java.util.Iterator: java.lang.Object next()>();

        r42 = (org.apache.poi.ddf.EscherRecord) $r41;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   Child ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r48);

        $r49 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r42);

        $r50 = virtualinvoke $r49.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\n", "\n    ");

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r50);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        i5 = i5 + 1;

        goto label1;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r9 = virtualinvoke r2.<org.apache.poi.ddf.EscherContainerRecord: java.lang.String getRecordName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("):");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  isContainer: ");

        $z0 = virtualinvoke r2.<org.apache.poi.ddf.EscherContainerRecord: boolean isContainerRecord()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  version: 0x");

        $s1 = virtualinvoke r2.<org.apache.poi.ddf.EscherContainerRecord: short getVersion()>();

        $r17 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s1);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  instance: 0x");

        $s2 = virtualinvoke r2.<org.apache.poi.ddf.EscherContainerRecord: short getInstance()>();

        $r21 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s2);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  recordId: 0x");

        $s3 = virtualinvoke r2.<org.apache.poi.ddf.EscherContainerRecord: short getRecordId()>();

        $r25 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s3);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  numchildren: ");

        $r29 = r2.<org.apache.poi.ddf.EscherContainerRecord: java.util.List _childRecords>;

        $i4 = interfaceinvoke $r29.<java.util.List: int size()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r32 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r34;
    }

    public java.lang.String toXml(java.lang.String)
    {
        org.apache.poi.ddf.EscherRecord r17;
        short $s0, $s1, $s2;
        java.lang.String r1, $r4, $r5, $r6, $r7, $r8, $r13, $r15, $r21, $r22;
        boolean $z0;
        java.util.Iterator $r10;
        org.apache.poi.ddf.EscherContainerRecord r3;
        java.util.List $r9;
        java.lang.StringBuilder $r0, $r2, $r11, $r12, $r14, $r18, $r19, $r20;
        java.lang.Object $r16;

        r3 := @this: org.apache.poi.ddf.EscherContainerRecord;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke r3.<org.apache.poi.ddf.EscherContainerRecord: java.lang.String getRecordName()>();

        $s0 = virtualinvoke r3.<org.apache.poi.ddf.EscherContainerRecord: short getRecordId()>();

        $r5 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s0);

        $s1 = virtualinvoke r3.<org.apache.poi.ddf.EscherContainerRecord: short getVersion()>();

        $r6 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s1);

        $s2 = virtualinvoke r3.<org.apache.poi.ddf.EscherContainerRecord: short getInstance()>();

        $r7 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s2);

        $r8 = virtualinvoke r3.<org.apache.poi.ddf.EscherContainerRecord: java.lang.String formatXmlRecordHeader(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r5, $r6, $r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = r3.<org.apache.poi.ddf.EscherContainerRecord: java.util.List _childRecords>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r16 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r17 = (org.apache.poi.ddf.EscherRecord) $r16;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = virtualinvoke r17.<org.apache.poi.ddf.EscherRecord: java.lang.String toXml(java.lang.String)>($r21);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        goto label1;

     label2:
        $r11 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");

        $r13 = virtualinvoke r3.<org.apache.poi.ddf.EscherContainerRecord: java.lang.String getRecordName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r15 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    public org.apache.poi.ddf.EscherRecord getChildById(short)
    {
        java.util.Iterator $r2;
        org.apache.poi.ddf.EscherContainerRecord r0;
        org.apache.poi.ddf.EscherRecord r4;
        java.util.List $r1;
        short $s0, s1;
        int $i2, $i3;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.poi.ddf.EscherContainerRecord;

        s1 := @parameter0: short;

        $r1 = r0.<org.apache.poi.ddf.EscherContainerRecord: java.util.List _childRecords>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.ddf.EscherRecord) $r3;

        $s0 = virtualinvoke r4.<org.apache.poi.ddf.EscherRecord: short getRecordId()>();

        $i2 = (int) $s0;

        $i3 = (int) s1;

        if $i2 != $i3 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    public void getRecordsById(short, java.util.List)
    {
        java.util.Iterator $r2;
        org.apache.poi.ddf.EscherContainerRecord r0, r6;
        org.apache.poi.ddf.EscherRecord r4;
        java.util.List $r1, r5;
        short $s0, s1;
        int $i2, $i3;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.ddf.EscherContainerRecord;

        s1 := @parameter0: short;

        r5 := @parameter1: java.util.List;

        $r1 = r0.<org.apache.poi.ddf.EscherContainerRecord: java.util.List _childRecords>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.ddf.EscherRecord) $r3;

        $z1 = r4 instanceof org.apache.poi.ddf.EscherContainerRecord;

        if $z1 == 0 goto label2;

        r6 = (org.apache.poi.ddf.EscherContainerRecord) r4;

        virtualinvoke r6.<org.apache.poi.ddf.EscherContainerRecord: void getRecordsById(short,java.util.List)>(s1, r5);

        goto label3;

     label2:
        $s0 = virtualinvoke r4.<org.apache.poi.ddf.EscherRecord: short getRecordId()>();

        $i2 = (int) $s0;

        $i3 = (int) s1;

        if $i2 != $i3 goto label3;

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r4);

     label3:
        goto label1;

     label4:
        return;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        <org.apache.poi.ddf.EscherContainerRecord: short SOLVER_CONTAINER> = -4091;

        <org.apache.poi.ddf.EscherContainerRecord: short SP_CONTAINER> = -4092;

        <org.apache.poi.ddf.EscherContainerRecord: short SPGR_CONTAINER> = -4093;

        <org.apache.poi.ddf.EscherContainerRecord: short DG_CONTAINER> = -4094;

        <org.apache.poi.ddf.EscherContainerRecord: short BSTORE_CONTAINER> = -4095;

        <org.apache.poi.ddf.EscherContainerRecord: short DGG_CONTAINER> = -4096;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/ddf/EscherContainerRecord;");

        <org.apache.poi.ddf.EscherContainerRecord: org.apache.poi.util.POILogger log> = $r0;

        return;
    }
}
