public final class org.waveprotocol.wave.model.document.util.GenericAnnotationCursor extends java.lang.Object implements org.waveprotocol.wave.model.document.AnnotationCursor
{
    private final org.waveprotocol.wave.model.document.ReadableAnnotationSet annotations;
    private final int end;
    private final java.util.Queue locations;
    int currentLocation;

    public void <init>(org.waveprotocol.wave.model.document.ReadableAnnotationSet, int, int, org.waveprotocol.wave.model.util.ReadableStringSet)
    {
        org.waveprotocol.wave.model.document.ReadableAnnotationSet r2;
        org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$1 $r6;
        java.util.PriorityQueue $r5;
        org.waveprotocol.wave.model.util.ReadableStringSet r3;
        int i0, i1, $i2, $i3, $i5;
        org.waveprotocol.wave.model.document.util.GenericAnnotationCursor r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.util.GenericAnnotationCursor;

        r2 := @parameter0: org.waveprotocol.wave.model.document.ReadableAnnotationSet;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r3 := @parameter3: org.waveprotocol.wave.model.util.ReadableStringSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.PriorityQueue;

        specialinvoke $r5.<java.util.PriorityQueue: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationCursor: java.util.Queue locations> = $r5;

        $i2 = interfaceinvoke r2.<org.waveprotocol.wave.model.document.ReadableAnnotationSet: int size()>();

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void checkPositionIndexes(int,int,int)>(i0, i1, $i2);

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r3, "GenericAnnotationCursor: Key set must not be null");

        r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationCursor: org.waveprotocol.wave.model.document.ReadableAnnotationSet annotations> = r2;

        r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationCursor: int end> = i1;

        $r6 = new org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$1;

        specialinvoke $r6.<org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$1: void <init>(org.waveprotocol.wave.model.document.util.GenericAnnotationCursor,int)>(r0, i0);

        interfaceinvoke r3.<org.waveprotocol.wave.model.util.ReadableStringSet: void each(org.waveprotocol.wave.model.util.ReadableStringSet$Proc)>($r6);

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationCursor: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $i3 = i0;

        goto label2;

     label1:
        $i5 = (int) -1;

        $i3 = $i5;

     label2:
        r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationCursor: int currentLocation> = $i3;

        return;
    }

    public org.waveprotocol.wave.model.util.ReadableStringSet nextLocation()
    {
        org.waveprotocol.wave.model.util.StringSet $r1;
        int $i0, $i1, $i2;
        org.waveprotocol.wave.model.document.util.GenericAnnotationCursor r0;
        org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation $r4, $r11, $r12;
        java.lang.String $r7;
        java.util.NoSuchElementException $r13;
        boolean $z0, $z1;
        java.lang.Object $r3, $r6, $r10;
        java.util.Queue $r2, $r5, $r8, $r9;

        r0 := @this: org.waveprotocol.wave.model.document.util.GenericAnnotationCursor;

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationCursor: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r13 = new java.util.NoSuchElementException;

        specialinvoke $r13.<java.util.NoSuchElementException: void <init>()>();

        throw $r13;

     label1:
        $r1 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: org.waveprotocol.wave.model.util.StringSet createStringSet()>();

        $r2 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationCursor: java.util.Queue locations>;

        $r3 = interfaceinvoke $r2.<java.util.Queue: java.lang.Object peek()>();

        $r4 = (org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation) $r3;

        $i0 = staticinvoke <org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation: int access$200(org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation)>($r4);

        r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationCursor: int currentLocation> = $i0;

     label2:
        $r5 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationCursor: java.util.Queue locations>;

        $r6 = interfaceinvoke $r5.<java.util.Queue: java.lang.Object remove()>();

        $r12 = (org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation) $r6;

        $r7 = staticinvoke <org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation: java.lang.String access$300(org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation)>($r12);

        interfaceinvoke $r1.<org.waveprotocol.wave.model.util.StringSet: void add(java.lang.String)>($r7);

        specialinvoke r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationCursor: void advance(org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation)>($r12);

        $r8 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationCursor: java.util.Queue locations>;

        $z1 = interfaceinvoke $r8.<java.util.Queue: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        $r9 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationCursor: java.util.Queue locations>;

        $r10 = interfaceinvoke $r9.<java.util.Queue: java.lang.Object peek()>();

        $r11 = (org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation) $r10;

        $i1 = staticinvoke <org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation: int access$200(org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation)>($r11);

        $i2 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationCursor: int currentLocation>;

        if $i1 == $i2 goto label2;

     label3:
        return $r1;
    }

    public int currentLocation()
    {
        int $i0;
        org.waveprotocol.wave.model.document.util.GenericAnnotationCursor r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.GenericAnnotationCursor;

        $i0 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationCursor: int currentLocation>;

        return $i0;
    }

    public boolean hasNext()
    {
        org.waveprotocol.wave.model.document.util.GenericAnnotationCursor r0;
        java.util.Queue $r1;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.wave.model.document.util.GenericAnnotationCursor;

        $r1 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationCursor: java.util.Queue locations>;

        $z0 = interfaceinvoke $r1.<java.util.Queue: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private void advance(org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation)
    {
        org.waveprotocol.wave.model.document.ReadableAnnotationSet $r2, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        org.waveprotocol.wave.model.document.util.GenericAnnotationCursor r0;
        org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation r1;
        java.lang.Object $r4;
        java.lang.String $r3, $r6;
        java.util.Queue $r7;

        r0 := @this: org.waveprotocol.wave.model.document.util.GenericAnnotationCursor;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation;

        $r2 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationCursor: org.waveprotocol.wave.model.document.ReadableAnnotationSet annotations>;

        $i0 = staticinvoke <org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation: int access$200(org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation)>(r1);

        $r3 = staticinvoke <org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation: java.lang.String access$300(org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation)>(r1);

        $r4 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.ReadableAnnotationSet: java.lang.Object getAnnotation(int,java.lang.String)>($i0, $r3);

        $r5 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationCursor: org.waveprotocol.wave.model.document.ReadableAnnotationSet annotations>;

        $i1 = staticinvoke <org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation: int access$200(org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation)>(r1);

        $i2 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationCursor: int end>;

        $r6 = staticinvoke <org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation: java.lang.String access$300(org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation)>(r1);

        $i3 = interfaceinvoke $r5.<org.waveprotocol.wave.model.document.ReadableAnnotationSet: int firstAnnotationChange(int,int,java.lang.String,java.lang.Object)>($i1, $i2, $r6, $r4);

        staticinvoke <org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation: int access$202(org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation,int)>(r1, $i3);

        $i4 = staticinvoke <org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation: int access$200(org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation)>(r1);

        $i6 = (int) -1;

        if $i4 == $i6 goto label1;

        $r7 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationCursor: java.util.Queue locations>;

        interfaceinvoke $r7.<java.util.Queue: boolean add(java.lang.Object)>(r1);

     label1:
        return;
    }

    static void access$100(org.waveprotocol.wave.model.document.util.GenericAnnotationCursor, org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation)
    {
        org.waveprotocol.wave.model.document.util.GenericAnnotationCursor r0;
        org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation r1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.util.GenericAnnotationCursor;

        r1 := @parameter1: org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation;

        specialinvoke r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationCursor: void advance(org.waveprotocol.wave.model.document.util.GenericAnnotationCursor$KeyLocation)>(r1);

        return;
    }
}
