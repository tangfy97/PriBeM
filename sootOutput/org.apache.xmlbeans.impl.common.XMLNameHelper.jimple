public class org.apache.xmlbeans.impl.common.XMLNameHelper extends java.lang.Object
{
    private static final char[] hexdigits;

    public void <init>()
    {
        org.apache.xmlbeans.impl.common.XMLNameHelper r0;

        r0 := @this: org.apache.xmlbeans.impl.common.XMLNameHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static javax.xml.namespace.QName getQName(org.apache.xmlbeans.xml.stream.XMLName)
    {
        java.lang.String $r1, $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.xml.stream.XMLName r0;

        r0 := @parameter0: org.apache.xmlbeans.xml.stream.XMLName;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.xml.stream.XMLName: java.lang.String getLocalName()>();

        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.xml.stream.XMLName: java.lang.String getNamespaceUri()>();

        $r3 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forLNS(java.lang.String,java.lang.String)>($r1, $r2);

        return $r3;
    }

    public static org.apache.xmlbeans.xml.stream.XMLName forLNS(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        org.apache.xmlbeans.impl.common.XmlNameImpl $r0;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r2 != null goto label1;

        r2 = "";

     label1:
        $r0 = new org.apache.xmlbeans.impl.common.XmlNameImpl;

        specialinvoke $r0.<org.apache.xmlbeans.impl.common.XmlNameImpl: void <init>(java.lang.String,java.lang.String)>(r2, r1);

        return $r0;
    }

    public static org.apache.xmlbeans.xml.stream.XMLName forLN(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xmlbeans.impl.common.XmlNameImpl $r0;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.xmlbeans.impl.common.XmlNameImpl;

        specialinvoke $r0.<org.apache.xmlbeans.impl.common.XmlNameImpl: void <init>(java.lang.String,java.lang.String)>("", r1);

        return $r0;
    }

    public static org.apache.xmlbeans.xml.stream.XMLName forPretty(java.lang.String, int)
    {
        int i0, $i1, $i2;
        java.lang.String r0, $r2, $r3, $r5;
        org.apache.xmlbeans.impl.common.XmlNameImpl $r1, $r4;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(64, i0);

        if $i1 >= 0 goto label1;

        $r4 = new org.apache.xmlbeans.impl.common.XmlNameImpl;

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i0);

        specialinvoke $r4.<org.apache.xmlbeans.impl.common.XmlNameImpl: void <init>(java.lang.String,java.lang.String)>("", $r5);

        return $r4;

     label1:
        $r1 = new org.apache.xmlbeans.impl.common.XmlNameImpl;

        $i2 = $i1 + 1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i2);

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, $i1);

        specialinvoke $r1.<org.apache.xmlbeans.impl.common.XmlNameImpl: void <init>(java.lang.String,java.lang.String)>($r2, $r3);

        return $r1;
    }

    public static java.lang.String pretty(org.apache.xmlbeans.xml.stream.XMLName)
    {
        org.apache.xmlbeans.xml.stream.XMLName r0;
        java.lang.StringBuffer $r4, $r6, $r7, $r9;
        int $i0;
        java.lang.String $r1, $r2, $r3, $r5, $r8, $r10;

        r0 := @parameter0: org.apache.xmlbeans.xml.stream.XMLName;

        if r0 != null goto label1;

        return "null";

     label1:
        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.xml.stream.XMLName: java.lang.String getNamespaceUri()>();

        if $r1 == null goto label2;

        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.xml.stream.XMLName: java.lang.String getNamespaceUri()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

     label2:
        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.xml.stream.XMLName: java.lang.String getLocalName()>();

        return $r2;

     label3:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = interfaceinvoke r0.<org.apache.xmlbeans.xml.stream.XMLName: java.lang.String getLocalName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("@");

        $r8 = interfaceinvoke r0.<org.apache.xmlbeans.xml.stream.XMLName: java.lang.String getNamespaceUri()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;
    }

    private static boolean isSafe(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 < 97 goto label1;

        if i0 > 122 goto label1;

        return 1;

     label1:
        if i0 < 65 goto label2;

        if i0 > 90 goto label2;

        return 1;

     label2:
        if i0 < 48 goto label3;

        if i0 > 57 goto label3;

        return 1;

     label3:
        return 0;
    }

    public static java.lang.String hexsafe(java.lang.String)
    {
        byte[] $r4;
        byte $b4, $b8, $b9;
        java.lang.StringBuffer $r8;
        int $i0, $i2, $i3, $i5, $i6, i11, i12, $i13, $i14, $i15;
        java.lang.String r1, $r2, $r3;
        boolean $z0;
        char $c1, $c7, $c10;
        char[] $r5, $r6;
        java.io.UnsupportedEncodingException $r7;

        r1 := @parameter0: java.lang.String;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        i11 = 0;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i11 >= $i0 goto label7;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i11);

        $i13 = (int) $c1;

        $z0 = staticinvoke <org.apache.xmlbeans.impl.common.XMLNameHelper: boolean isSafe(int)>($i13);

        if $z0 == 0 goto label2;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        goto label6;

     label2:
        $i2 = i11 + 1;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i11, $i2);

        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        i12 = 0;

     label3:
        $i3 = lengthof $r4;

        if i12 >= $i3 goto label4;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(95);

        $r5 = <org.apache.xmlbeans.impl.common.XMLNameHelper: char[] hexdigits>;

        $b4 = $r4[i12];

        $i14 = (int) $b4;

        $i5 = $i14 >> 4;

        $i6 = $i5 & 15;

        $c7 = $r5[$i6];

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c7);

        $r6 = <org.apache.xmlbeans.impl.common.XMLNameHelper: char[] hexdigits>;

        $b8 = $r4[i12];

        $b9 = $b8 & 15;

        $i15 = (int) $b9;

        $c10 = $r6[$i15];

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c10);

        i12 = i12 + 1;

        goto label3;

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_BAD_UTF8_CHAR");

     label6:
        i11 = i11 + 1;

        goto label1;

     label7:
        $r2 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;

        catch java.io.UnsupportedEncodingException from label2 to label4 with label5;
    }

    public static java.lang.String hexsafedir(org.apache.xmlbeans.xml.stream.XMLName)
    {
        org.apache.xmlbeans.xml.stream.XMLName r0;
        java.lang.StringBuffer $r2, $r3, $r6, $r9, $r12, $r13, $r16;
        int $i0;
        java.lang.String $r1, $r4, $r5, $r7, $r8, $r10, $r11, $r14, $r15, $r17;

        r0 := @parameter0: org.apache.xmlbeans.xml.stream.XMLName;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.xml.stream.XMLName: java.lang.String getNamespaceUri()>();

        if $r1 == null goto label1;

        $r8 = interfaceinvoke r0.<org.apache.xmlbeans.xml.stream.XMLName: java.lang.String getNamespaceUri()>();

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_nons/");

        $r4 = interfaceinvoke r0.<org.apache.xmlbeans.xml.stream.XMLName: java.lang.String getLocalName()>();

        $r5 = staticinvoke <org.apache.xmlbeans.impl.common.XMLNameHelper: java.lang.String hexsafe(java.lang.String)>($r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;

     label2:
        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = interfaceinvoke r0.<org.apache.xmlbeans.xml.stream.XMLName: java.lang.String getNamespaceUri()>();

        $r11 = staticinvoke <org.apache.xmlbeans.impl.common.XMLNameHelper: java.lang.String hexsafe(java.lang.String)>($r10);

        $r12 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r14 = interfaceinvoke r0.<org.apache.xmlbeans.xml.stream.XMLName: java.lang.String getLocalName()>();

        $r15 = staticinvoke <org.apache.xmlbeans.impl.common.XMLNameHelper: java.lang.String hexsafe(java.lang.String)>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r17;
    }

    static void <clinit>()
    {
        char[] $r0;

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 65;

        $r0[11] = 66;

        $r0[12] = 67;

        $r0[13] = 68;

        $r0[14] = 69;

        $r0[15] = 70;

        <org.apache.xmlbeans.impl.common.XMLNameHelper: char[] hexdigits> = $r0;

        return;
    }
}
