public class ucar.nc2.ft.point.writer.CFPointObWriter extends java.lang.Object
{
    private ucar.nc2.ft.point.writer.WriterCFPointDataset ncWriter;

    public void <init>(java.io.DataOutputStream, java.util.List, java.lang.String, java.util.List, int) throws java.io.IOException
    {
        java.util.Iterator $r7;
        ucar.nc2.ft.point.writer.CFPointObWriter r0;
        java.util.ArrayList $r5;
        ucar.nc2.ft.point.writer.WriterCFPointDataset $r1, $r8;
        java.util.List r3, r6;
        java.io.DataOutputStream r2;
        ucar.nc2.ft.point.writer.PointObVar r10;
        int $i0, i1;
        java.lang.Object $r9;
        java.lang.String r4;
        boolean $z0;
        ucar.nc2.ft.point.writer.CFPointObWriter$PointObVarAdapter $r11;

        r0 := @this: ucar.nc2.ft.point.writer.CFPointObWriter;

        r2 := @parameter0: java.io.DataOutputStream;

        r3 := @parameter1: java.util.List;

        r4 := @parameter2: java.lang.String;

        r6 := @parameter3: java.util.List;

        i1 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new ucar.nc2.ft.point.writer.WriterCFPointDataset;

        specialinvoke $r1.<ucar.nc2.ft.point.writer.WriterCFPointDataset: void <init>(java.io.DataOutputStream,java.util.List,java.lang.String)>(r2, r3, r4);

        r0.<ucar.nc2.ft.point.writer.CFPointObWriter: ucar.nc2.ft.point.writer.WriterCFPointDataset ncWriter> = $r1;

        $r5 = new java.util.ArrayList;

        $i0 = interfaceinvoke r6.<java.util.List: int size()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i0);

        $r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r10 = (ucar.nc2.ft.point.writer.PointObVar) $r9;

        $r11 = new ucar.nc2.ft.point.writer.CFPointObWriter$PointObVarAdapter;

        specialinvoke $r11.<ucar.nc2.ft.point.writer.CFPointObWriter$PointObVarAdapter: void <init>(ucar.nc2.ft.point.writer.CFPointObWriter,ucar.nc2.ft.point.writer.PointObVar)>(r0, r10);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label1;

     label2:
        $r8 = r0.<ucar.nc2.ft.point.writer.CFPointObWriter: ucar.nc2.ft.point.writer.WriterCFPointDataset ncWriter>;

        virtualinvoke $r8.<ucar.nc2.ft.point.writer.WriterCFPointDataset: void writeHeader(java.util.List,int)>($r5, i1);

        return;
    }

    public void addPoint(double, double, double, java.util.Date, double[], java.lang.String[]) throws java.io.IOException
    {
        java.util.Date r1;
        double[] r2;
        java.lang.String[] r3;
        ucar.nc2.ft.point.writer.CFPointObWriter r0;
        ucar.nc2.ft.point.writer.WriterCFPointDataset $r4;
        double d0, d1, d2;

        r0 := @this: ucar.nc2.ft.point.writer.CFPointObWriter;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        r1 := @parameter3: java.util.Date;

        r2 := @parameter4: double[];

        r3 := @parameter5: java.lang.String[];

        $r4 = r0.<ucar.nc2.ft.point.writer.CFPointObWriter: ucar.nc2.ft.point.writer.WriterCFPointDataset ncWriter>;

        virtualinvoke $r4.<ucar.nc2.ft.point.writer.WriterCFPointDataset: void writeRecord(double,double,double,java.util.Date,double[],java.lang.String[])>(d0, d1, d2, r1, r2, r3);

        return;
    }

    public void finish() throws java.io.IOException
    {
        ucar.nc2.ft.point.writer.WriterCFPointDataset $r1;
        ucar.nc2.ft.point.writer.CFPointObWriter r0;

        r0 := @this: ucar.nc2.ft.point.writer.CFPointObWriter;

        $r1 = r0.<ucar.nc2.ft.point.writer.CFPointObWriter: ucar.nc2.ft.point.writer.WriterCFPointDataset ncWriter>;

        virtualinvoke $r1.<ucar.nc2.ft.point.writer.WriterCFPointDataset: void finish()>();

        return;
    }

    public static boolean rewritePointObsDataset(java.lang.String, java.lang.String, boolean) throws java.io.IOException
    {
        long $l0, $l1, l2, $l3;
        ucar.nc2.dt.TypedDataset $r14;
        java.lang.String r3, r6, $r10, $r20;
        ucar.nc2.constants.FeatureType $r13;
        boolean z0;
        java.io.PrintStream $r1, $r16;
        ucar.nc2.dt.PointObsDataset $r21;
        java.lang.StringBuilder $r0, $r2, $r4, $r5, $r7, $r8, $r9, $r12, $r15, $r17, $r18, $r19;
        ucar.nc2.NetcdfFile $r22;
        ucar.nc2.dataset.NetcdfDataset $r11;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rewrite2 .nc files from ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" inMemory= ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r10);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        if z0 == 0 goto label1;

        $r22 = staticinvoke <ucar.nc2.NetcdfFile: ucar.nc2.NetcdfFile openInMemory(java.lang.String)>(r3);

        goto label2;

     label1:
        $r22 = staticinvoke <ucar.nc2.NetcdfFile: ucar.nc2.NetcdfFile open(java.lang.String)>(r3);

     label2:
        $r11 = new ucar.nc2.dataset.NetcdfDataset;

        specialinvoke $r11.<ucar.nc2.dataset.NetcdfDataset: void <init>(ucar.nc2.NetcdfFile)>($r22);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType POINT>;

        $r14 = staticinvoke <ucar.nc2.dt.TypedDatasetFactory: ucar.nc2.dt.TypedDataset open(ucar.nc2.constants.FeatureType,ucar.nc2.dataset.NetcdfDataset,ucar.nc2.util.CancelTask,java.lang.StringBuilder)>($r13, $r11, null, $r12);

        $r21 = (ucar.nc2.dt.PointObsDataset) $r14;

        if $r21 != null goto label3;

        return 0;

     label3:
        staticinvoke <ucar.nc2.ft.point.writer.CFPointObWriter: void writePointObsDataset(ucar.nc2.dt.PointObsDataset,java.lang.String)>($r21, r6);

        interfaceinvoke $r21.<ucar.nc2.dt.PointObsDataset: void close()>();

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l2 = $l1 - $l0;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that took ");

        $l3 = l2 - $l0;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msecs");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r20);

        return 1;
    }

    public static void writePointObsDataset(ucar.nc2.dt.PointObsDataset, java.lang.String) throws java.io.IOException
    {
        java.io.DataOutputStream $r47;
        ucar.nc2.dt.DataIterator $r1, $r11;
        ucar.nc2.VariableSimpleIF r38, r40;
        ucar.nc2.dt.PointObsDataset r0;
        double[] r39;
        java.util.ArrayList $r43;
        ucar.ma2.ArrayChar r42;
        java.lang.String r7, $r22, $r24, $r25, r35, $r37;
        java.io.FileOutputStream $r46;
        ucar.ma2.Array $r23, $r26;
        java.util.Date $r17;
        ucar.ma2.StructureData $r14;
        ucar.nc2.ft.point.writer.PointObVar r19, $r44, $r45;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        ucar.ma2.DataType $r20, $r21, $r28, $r31;
        ucar.nc2.ft.point.writer.CFPointObWriter $r48;
        java.util.List $r2, $r10;
        ucar.nc2.dt.PointObsDatatype r13, r36;
        java.lang.String[] r41;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i9, $i11;
        double $d0, $d1, $d2, $d3, $d4;
        java.util.Iterator $r4, $r5, $r15;
        ucar.unidata.geoloc.EarthLocation $r16, $r34;
        java.lang.Object $r12, $r18, $r27, $r30, $r33;

        r0 := @parameter0: ucar.nc2.dt.PointObsDataset;

        r7 := @parameter1: java.lang.String;

        r35 = null;

        $i9 = (int) -1;

        $r1 = interfaceinvoke r0.<ucar.nc2.dt.PointObsDataset: ucar.nc2.dt.DataIterator getDataIterator(int)>($i9);

        $z0 = interfaceinvoke $r1.<ucar.nc2.dt.DataIterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r33 = interfaceinvoke $r1.<ucar.nc2.dt.DataIterator: java.lang.Object nextData()>();

        r36 = (ucar.nc2.dt.PointObsDatatype) $r33;

        $r34 = interfaceinvoke r36.<ucar.nc2.dt.PointObsDatatype: ucar.unidata.geoloc.EarthLocation getLocation()>();

        $d4 = interfaceinvoke $r34.<ucar.unidata.geoloc.EarthLocation: double getAltitude()>();

        $z9 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d4);

        if $z9 == 0 goto label01;

        $r37 = null;

        goto label02;

     label01:
        $r37 = "meters";

     label02:
        r35 = $r37;

        goto label03;

     label03:
        $r2 = interfaceinvoke r0.<ucar.nc2.dt.PointObsDataset: java.util.List getDataVariables()>();

        $r43 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        specialinvoke $r43.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z10 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label06;

        $r30 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r38 = (ucar.nc2.VariableSimpleIF) $r30;

        $r31 = interfaceinvoke r38.<ucar.nc2.VariableSimpleIF: ucar.ma2.DataType getDataType()>();

        $z8 = virtualinvoke $r31.<ucar.ma2.DataType: boolean isNumeric()>();

        if $z8 == 0 goto label05;

        $r44 = new ucar.nc2.ft.point.writer.PointObVar;

        specialinvoke $r44.<ucar.nc2.ft.point.writer.PointObVar: void <init>(ucar.nc2.VariableSimpleIF)>(r38);

        interfaceinvoke $r43.<java.util.List: boolean add(java.lang.Object)>($r44);

     label05:
        goto label04;

     label06:
        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        r39 = newarray (double)[$i1];

        $r5 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r27 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r40 = (ucar.nc2.VariableSimpleIF) $r27;

        $r28 = interfaceinvoke r40.<ucar.nc2.VariableSimpleIF: ucar.ma2.DataType getDataType()>();

        $z7 = virtualinvoke $r28.<ucar.ma2.DataType: boolean isString()>();

        if $z7 == 0 goto label08;

        $r45 = new ucar.nc2.ft.point.writer.PointObVar;

        specialinvoke $r45.<ucar.nc2.ft.point.writer.PointObVar: void <init>(ucar.nc2.VariableSimpleIF)>(r40);

        interfaceinvoke $r43.<java.util.List: boolean add(java.lang.Object)>($r45);

     label08:
        goto label07;

     label09:
        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i3 = $i2 - $i1;

        r41 = newarray (java.lang.String)[$i3];

        $r46 = new java.io.FileOutputStream;

        specialinvoke $r46.<java.io.FileOutputStream: void <init>(java.lang.String)>(r7);

        $r47 = new java.io.DataOutputStream;

        specialinvoke $r47.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r46);

        $r48 = new ucar.nc2.ft.point.writer.CFPointObWriter;

        $r10 = interfaceinvoke r0.<ucar.nc2.dt.PointObsDataset: java.util.List getGlobalAttributes()>();

        $i11 = (int) -1;

        specialinvoke $r48.<ucar.nc2.ft.point.writer.CFPointObWriter: void <init>(java.io.DataOutputStream,java.util.List,java.lang.String,java.util.List,int)>($r47, $r10, r35, $r43, $i11);

        $r11 = interfaceinvoke r0.<ucar.nc2.dt.PointObsDataset: ucar.nc2.dt.DataIterator getDataIterator(int)>(1000000);

     label10:
        $z2 = interfaceinvoke $r11.<ucar.nc2.dt.DataIterator: boolean hasNext()>();

        if $z2 == 0 goto label16;

        $r12 = interfaceinvoke $r11.<ucar.nc2.dt.DataIterator: java.lang.Object nextData()>();

        r13 = (ucar.nc2.dt.PointObsDatatype) $r12;

        $r14 = interfaceinvoke r13.<ucar.nc2.dt.PointObsDatatype: ucar.ma2.StructureData getData()>();

        i6 = 0;

        i7 = 0;

        $r15 = interfaceinvoke $r43.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z3 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label15;

        $r18 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r19 = (ucar.nc2.ft.point.writer.PointObVar) $r18;

        $r20 = virtualinvoke r19.<ucar.nc2.ft.point.writer.PointObVar: ucar.ma2.DataType getDataType()>();

        $z4 = virtualinvoke $r20.<ucar.ma2.DataType: boolean isNumeric()>();

        if $z4 == 0 goto label13;

        $r25 = virtualinvoke r19.<ucar.nc2.ft.point.writer.PointObVar: java.lang.String getName()>();

        $r26 = virtualinvoke $r14.<ucar.ma2.StructureData: ucar.ma2.Array getArray(java.lang.String)>($r25);

        virtualinvoke $r26.<ucar.ma2.Array: void resetLocalIterator()>();

        $z6 = virtualinvoke $r26.<ucar.ma2.Array: boolean hasNext()>();

        if $z6 == 0 goto label12;

        $i5 = i6;

        i6 = i6 + 1;

        $d3 = virtualinvoke $r26.<ucar.ma2.Array: double nextDouble()>();

        r39[$i5] = $d3;

     label12:
        goto label14;

     label13:
        $r21 = virtualinvoke r19.<ucar.nc2.ft.point.writer.PointObVar: ucar.ma2.DataType getDataType()>();

        $z5 = virtualinvoke $r21.<ucar.ma2.DataType: boolean isString()>();

        if $z5 == 0 goto label14;

        $r22 = virtualinvoke r19.<ucar.nc2.ft.point.writer.PointObVar: java.lang.String getName()>();

        $r23 = virtualinvoke $r14.<ucar.ma2.StructureData: ucar.ma2.Array getArray(java.lang.String)>($r22);

        r42 = (ucar.ma2.ArrayChar) $r23;

        $i4 = i7;

        i7 = i7 + 1;

        $r24 = virtualinvoke r42.<ucar.ma2.ArrayChar: java.lang.String getString()>();

        r41[$i4] = $r24;

     label14:
        goto label11;

     label15:
        $r16 = interfaceinvoke r13.<ucar.nc2.dt.PointObsDatatype: ucar.unidata.geoloc.EarthLocation getLocation()>();

        $d0 = interfaceinvoke $r16.<ucar.unidata.geoloc.EarthLocation: double getLatitude()>();

        $d1 = interfaceinvoke $r16.<ucar.unidata.geoloc.EarthLocation: double getLongitude()>();

        $d2 = interfaceinvoke $r16.<ucar.unidata.geoloc.EarthLocation: double getAltitude()>();

        $r17 = interfaceinvoke r13.<ucar.nc2.dt.PointObsDatatype: java.util.Date getObservationTimeAsDate()>();

        virtualinvoke $r48.<ucar.nc2.ft.point.writer.CFPointObWriter: void addPoint(double,double,double,java.util.Date,double[],java.lang.String[])>($d0, $d1, $d2, $r17, r39, r41);

        goto label10;

     label16:
        virtualinvoke $r48.<ucar.nc2.ft.point.writer.CFPointObWriter: void finish()>();

        return;
    }

    public static boolean rewritePointFeatureDataset(java.lang.String, java.lang.String, boolean) throws java.io.IOException
    {
        long $l0, $l1, l2, $l3;
        java.util.Formatter $r12;
        java.lang.String r3, r6, $r10, $r21;
        ucar.nc2.constants.FeatureType $r13;
        boolean z0, $z1;
        java.io.PrintStream $r1, $r17;
        ucar.nc2.ft.FeatureDatasetPoint $r15;
        java.lang.StringBuilder $r0, $r2, $r4, $r5, $r7, $r8, $r9, $r16, $r18, $r19, $r20;
        ucar.nc2.NetcdfFile $r22;
        ucar.nc2.dataset.NetcdfDataset $r11;
        ucar.nc2.ft.FeatureDataset $r14;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rewrite2 .nc files from ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" inMemory= ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r10);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        if z0 == 0 goto label1;

        $r22 = staticinvoke <ucar.nc2.NetcdfFile: ucar.nc2.NetcdfFile openInMemory(java.lang.String)>(r3);

        goto label2;

     label1:
        $r22 = staticinvoke <ucar.nc2.NetcdfFile: ucar.nc2.NetcdfFile open(java.lang.String)>(r3);

     label2:
        $r11 = new ucar.nc2.dataset.NetcdfDataset;

        specialinvoke $r11.<ucar.nc2.dataset.NetcdfDataset: void <init>(ucar.nc2.NetcdfFile)>($r22);

        $r12 = new java.util.Formatter;

        specialinvoke $r12.<java.util.Formatter: void <init>()>();

        $r13 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType ANY_POINT>;

        $r14 = staticinvoke <ucar.nc2.ft.FeatureDatasetFactoryManager: ucar.nc2.ft.FeatureDataset wrap(ucar.nc2.constants.FeatureType,ucar.nc2.dataset.NetcdfDataset,ucar.nc2.util.CancelTask,java.util.Formatter)>($r13, $r11, null, $r12);

        if $r14 != null goto label3;

        return 0;

     label3:
        $z1 = $r14 instanceof ucar.nc2.ft.FeatureDatasetPoint;

        if $z1 == 0 goto label4;

        $r15 = (ucar.nc2.ft.FeatureDatasetPoint) $r14;

        staticinvoke <ucar.nc2.ft.point.writer.CFPointObWriter: int writePointFeatureCollection(ucar.nc2.ft.FeatureDatasetPoint,java.lang.String)>($r15, r6);

        interfaceinvoke $r14.<ucar.nc2.ft.FeatureDataset: void close()>();

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l2 = $l1 - $l0;

        $r17 = <java.lang.System: java.io.PrintStream out>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that took ");

        $l3 = l2 - $l0;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msecs");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r21);

        return 1;

     label4:
        return 0;
    }

    public static int writePointFeatureCollection(ucar.nc2.ft.FeatureDatasetPoint, java.lang.String) throws java.io.IOException
    {
        java.lang.Integer $r9;
        ucar.ma2.StructureData $r13;
        java.io.DataOutputStream $r33;
        java.lang.Long $r11;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r1, $r16, $r17;
        ucar.nc2.ft.FeatureCollection r25;
        ucar.nc2.ft.FeatureDatasetPoint r0;
        java.lang.StringBuilder $r20, $r22, $r29;
        java.lang.Object[] $r7;
        ucar.nc2.ft.PointFeatureCollection r26;
        long $l0, $l1, l3;
        java.io.BufferedOutputStream $r32;
        ucar.nc2.ft.PointFeature $r12;
        int i2, $i5;
        java.lang.String r4, $r10, $r21, $r23, $r28;
        double $d0;
        java.io.PrintStream $r8;
        java.util.Iterator $r2;
        java.io.FileOutputStream $r31;
        java.io.IOException $r30;
        ucar.nc2.ft.point.writer.WriterCFPointDataset r27, $r34;
        ucar.unidata.geoloc.EarthLocation $r14;
        java.lang.Object $r24;

        r0 := @parameter0: ucar.nc2.ft.FeatureDatasetPoint;

        r4 := @parameter1: java.lang.String;

        r26 = null;

        $r1 = interfaceinvoke r0.<ucar.nc2.ft.FeatureDatasetPoint: java.util.List getPointFeatureCollectionList()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r24 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r25 = (ucar.nc2.ft.FeatureCollection) $r24;

        $z3 = r25 instanceof ucar.nc2.ft.PointFeatureCollection;

        if $z3 == 0 goto label2;

        r26 = (ucar.nc2.ft.PointFeatureCollection) r25;

     label2:
        goto label1;

     label3:
        if null != r26 goto label4;

        $r30 = new java.io.IOException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There is no PointFeatureCollection in  ");

        $r21 = interfaceinvoke r0.<ucar.nc2.ft.FeatureDatasetPoint: java.lang.String getLocation()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.io.IOException: void <init>(java.lang.String)>($r23);

        throw $r30;

     label4:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r31 = new java.io.FileOutputStream;

        specialinvoke $r31.<java.io.FileOutputStream: void <init>(java.lang.String)>(r4);

        $r33 = new java.io.DataOutputStream;

        $r32 = new java.io.BufferedOutputStream;

        specialinvoke $r32.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r31, 10000);

        specialinvoke $r33.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r32);

        r27 = null;

        i2 = 0;

        interfaceinvoke r26.<ucar.nc2.ft.PointFeatureCollection: void resetIteration()>();

     label5:
        $z1 = interfaceinvoke r26.<ucar.nc2.ft.PointFeatureCollection: boolean hasNext()>();

        if $z1 == 0 goto label9;

        $r12 = interfaceinvoke r26.<ucar.nc2.ft.PointFeatureCollection: ucar.nc2.ft.PointFeature next()>();

        $r13 = interfaceinvoke $r12.<ucar.nc2.ft.PointFeature: ucar.ma2.StructureData getData()>();

        if i2 != 0 goto label8;

        $r14 = interfaceinvoke $r12.<ucar.nc2.ft.PointFeature: ucar.unidata.geoloc.EarthLocation getLocation()>();

        $d0 = interfaceinvoke $r14.<ucar.unidata.geoloc.EarthLocation: double getAltitude()>();

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z2 == 0 goto label6;

        $r28 = null;

        goto label7;

     label6:
        $r28 = "meters";

     label7:
        $r34 = new ucar.nc2.ft.point.writer.WriterCFPointDataset;

        $r16 = interfaceinvoke r0.<ucar.nc2.ft.FeatureDatasetPoint: java.util.List getGlobalAttributes()>();

        specialinvoke $r34.<ucar.nc2.ft.point.writer.WriterCFPointDataset: void <init>(java.io.DataOutputStream,java.util.List,java.lang.String)>($r33, $r16, $r28);

        r27 = $r34;

        $r17 = interfaceinvoke r0.<ucar.nc2.ft.FeatureDatasetPoint: java.util.List getDataVariables()>();

        $i5 = (int) -1;

        virtualinvoke $r34.<ucar.nc2.ft.point.writer.WriterCFPointDataset: void writeHeader(java.util.List,int)>($r17, $i5);

     label8:
        virtualinvoke r27.<ucar.nc2.ft.point.writer.WriterCFPointDataset: void writeRecord(ucar.nc2.ft.PointFeature,ucar.ma2.StructureData)>($r12, $r13);

        i2 = i2 + 1;

        goto label5;

     label9:
        virtualinvoke r27.<ucar.nc2.ft.point.writer.WriterCFPointDataset: void finish()>();

        virtualinvoke $r33.<java.io.DataOutputStream: void flush()>();

        virtualinvoke $r33.<java.io.DataOutputStream: void close()>();

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l3 = $l1 - $l0;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = newarray (java.lang.Object)[4];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r7[0] = $r9;

        $r10 = interfaceinvoke r0.<ucar.nc2.ft.FeatureDatasetPoint: java.lang.String getLocation()>();

        $r7[1] = $r10;

        $r7[2] = r4;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        $r7[3] = $r11;

        virtualinvoke $r8.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Write %d records from %s to %s took %d msecs %n", $r7);

        return i2;
    }

    public static void main2(java.lang.String[]) throws java.io.IOException
    {
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String[] r6;
        java.lang.String $r3, $r5;
        java.io.File $r0;

        r6 := @parameter0: java.lang.String[];

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>("R:/testdata/point/netcdf/madis.nc");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("C:/TEMP/");

        $r3 = virtualinvoke $r0.<java.io.File: java.lang.String getName()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ucar.nc2.ft.point.writer.CFPointObWriter: boolean rewritePointFeatureDataset(java.lang.String,java.lang.String,boolean)>("R:/testdata/point/netcdf/madis.nc", $r5, 1);

        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.util.Date $r12;
        double[] r10;
        ucar.ma2.DataType $r2, $r4;
        java.io.FileOutputStream $r5;
        java.lang.String[] $r11, r13;
        ucar.nc2.ft.point.writer.CFPointObWriter $r8;
        java.util.ArrayList $r0, $r9;
        java.io.BufferedOutputStream $r7;
        java.io.DataOutputStream $r6;
        ucar.nc2.ft.point.writer.PointObVar $r1, $r3;

        r13 := @parameter0: java.lang.String[];

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new ucar.nc2.ft.point.writer.PointObVar;

        $r2 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        specialinvoke $r1.<ucar.nc2.ft.point.writer.PointObVar: void <init>(java.lang.String,java.lang.String,java.lang.String,ucar.ma2.DataType,int)>("test1", "units1", "desc1", $r2, 4);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r3 = new ucar.nc2.ft.point.writer.PointObVar;

        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        specialinvoke $r3.<ucar.nc2.ft.point.writer.PointObVar: void <init>(java.lang.String,java.lang.String,java.lang.String,ucar.ma2.DataType,int)>("test2", "units2", "desc3", $r4, 4);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r5 = new java.io.FileOutputStream;

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.lang.String)>("C:/temp/test.out");

        $r6 = new java.io.DataOutputStream;

        $r7 = new java.io.BufferedOutputStream;

        specialinvoke $r7.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r5, 10000);

        specialinvoke $r6.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r7);

        $r8 = new ucar.nc2.ft.point.writer.CFPointObWriter;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        specialinvoke $r8.<ucar.nc2.ft.point.writer.CFPointObWriter: void <init>(java.io.DataOutputStream,java.util.List,java.lang.String,java.util.List,int)>($r6, $r9, "meters", $r0, 1);

        r10 = newarray (double)[0];

        $r11 = newarray (java.lang.String)[2];

        $r11[0] = "valu";

        $r11[1] = "value";

        $r12 = new java.util.Date;

        specialinvoke $r12.<java.util.Date: void <init>()>();

        virtualinvoke $r8.<ucar.nc2.ft.point.writer.CFPointObWriter: void addPoint(double,double,double,java.util.Date,double[],java.lang.String[])>(1.0, 2.0, 3.0, $r12, r10, $r11);

        virtualinvoke $r8.<ucar.nc2.ft.point.writer.CFPointObWriter: void finish()>();

        return;
    }
}
