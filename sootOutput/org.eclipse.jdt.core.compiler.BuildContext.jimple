public class org.eclipse.jdt.core.compiler.BuildContext extends org.eclipse.jdt.internal.core.builder.CompilationParticipantResult
{

    public void <init>(org.eclipse.jdt.internal.core.builder.SourceFile)
    {
        org.eclipse.jdt.internal.core.builder.SourceFile r1;
        org.eclipse.jdt.core.compiler.BuildContext r0;

        r0 := @this: org.eclipse.jdt.core.compiler.BuildContext;

        r1 := @parameter0: org.eclipse.jdt.internal.core.builder.SourceFile;

        specialinvoke r0.<org.eclipse.jdt.internal.core.builder.CompilationParticipantResult: void <init>(org.eclipse.jdt.internal.core.builder.SourceFile)>(r1);

        return;
    }

    public char[] getContents()
    {
        char[] $r2;
        org.eclipse.jdt.internal.core.builder.SourceFile $r1;
        org.eclipse.jdt.core.compiler.BuildContext r0;

        r0 := @this: org.eclipse.jdt.core.compiler.BuildContext;

        $r1 = r0.<org.eclipse.jdt.core.compiler.BuildContext: org.eclipse.jdt.internal.core.builder.SourceFile sourceFile>;

        $r2 = virtualinvoke $r1.<org.eclipse.jdt.internal.core.builder.SourceFile: char[] getContents()>();

        return $r2;
    }

    public org.eclipse.core.resources.IFile getFile()
    {
        org.eclipse.core.resources.IFile $r2;
        org.eclipse.jdt.internal.core.builder.SourceFile $r1;
        org.eclipse.jdt.core.compiler.BuildContext r0;

        r0 := @this: org.eclipse.jdt.core.compiler.BuildContext;

        $r1 = r0.<org.eclipse.jdt.core.compiler.BuildContext: org.eclipse.jdt.internal.core.builder.SourceFile sourceFile>;

        $r2 = $r1.<org.eclipse.jdt.internal.core.builder.SourceFile: org.eclipse.core.resources.IFile resource>;

        return $r2;
    }

    public boolean hasAnnotations()
    {
        org.eclipse.jdt.core.compiler.BuildContext r0;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.core.compiler.BuildContext;

        $z0 = r0.<org.eclipse.jdt.core.compiler.BuildContext: boolean hasAnnotations>;

        return $z0;
    }

    public void recordAddedGeneratedFiles(org.eclipse.core.resources.IFile[])
    {
        org.eclipse.core.resources.IFile[] r0, $r2, $r3, $r4, $r5;
        org.eclipse.jdt.core.compiler.BuildContext r1;
        int i0, i1, $i2, $i3;

        r1 := @this: org.eclipse.jdt.core.compiler.BuildContext;

        r0 := @parameter0: org.eclipse.core.resources.IFile[];

        i0 = lengthof r0;

        if i0 != 0 goto label1;

        return;

     label1:
        $r2 = r1.<org.eclipse.jdt.core.compiler.BuildContext: org.eclipse.core.resources.IFile[] addedFiles>;

        if $r2 != null goto label2;

        $i3 = 0;

        goto label3;

     label2:
        $r3 = r1.<org.eclipse.jdt.core.compiler.BuildContext: org.eclipse.core.resources.IFile[] addedFiles>;

        $i3 = lengthof $r3;

     label3:
        i1 = $i3;

        $i2 = $i3 + i0;

        $r5 = newarray (org.eclipse.core.resources.IFile)[$i2];

        if $i3 <= 0 goto label4;

        $r4 = r1.<org.eclipse.jdt.core.compiler.BuildContext: org.eclipse.core.resources.IFile[] addedFiles>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r5, 0, $i3);

     label4:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, $r5, i1, i0);

        r1.<org.eclipse.jdt.core.compiler.BuildContext: org.eclipse.core.resources.IFile[] addedFiles> = $r5;

        return;
    }

    public void recordDeletedGeneratedFiles(org.eclipse.core.resources.IFile[])
    {
        org.eclipse.core.resources.IFile[] r0, $r2, $r3, $r4, $r5;
        org.eclipse.jdt.core.compiler.BuildContext r1;
        int i0, i1, $i2, $i3;

        r1 := @this: org.eclipse.jdt.core.compiler.BuildContext;

        r0 := @parameter0: org.eclipse.core.resources.IFile[];

        i0 = lengthof r0;

        if i0 != 0 goto label1;

        return;

     label1:
        $r2 = r1.<org.eclipse.jdt.core.compiler.BuildContext: org.eclipse.core.resources.IFile[] deletedFiles>;

        if $r2 != null goto label2;

        $i3 = 0;

        goto label3;

     label2:
        $r3 = r1.<org.eclipse.jdt.core.compiler.BuildContext: org.eclipse.core.resources.IFile[] deletedFiles>;

        $i3 = lengthof $r3;

     label3:
        i1 = $i3;

        $i2 = $i3 + i0;

        $r5 = newarray (org.eclipse.core.resources.IFile)[$i2];

        if $i3 <= 0 goto label4;

        $r4 = r1.<org.eclipse.jdt.core.compiler.BuildContext: org.eclipse.core.resources.IFile[] deletedFiles>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r5, 0, $i3);

     label4:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, $r5, i1, i0);

        r1.<org.eclipse.jdt.core.compiler.BuildContext: org.eclipse.core.resources.IFile[] deletedFiles> = $r5;

        return;
    }

    public void recordDependencies(java.lang.String[])
    {
        java.lang.String[] r0, $r2, $r3, $r4, $r5;
        org.eclipse.jdt.core.compiler.BuildContext r1;
        int i0, i1, $i2, $i3;

        r1 := @this: org.eclipse.jdt.core.compiler.BuildContext;

        r0 := @parameter0: java.lang.String[];

        i0 = lengthof r0;

        if i0 != 0 goto label1;

        return;

     label1:
        $r2 = r1.<org.eclipse.jdt.core.compiler.BuildContext: java.lang.String[] dependencies>;

        if $r2 != null goto label2;

        $i3 = 0;

        goto label3;

     label2:
        $r3 = r1.<org.eclipse.jdt.core.compiler.BuildContext: java.lang.String[] dependencies>;

        $i3 = lengthof $r3;

     label3:
        i1 = $i3;

        $i2 = $i3 + i0;

        $r5 = newarray (java.lang.String)[$i2];

        if $i3 <= 0 goto label4;

        $r4 = r1.<org.eclipse.jdt.core.compiler.BuildContext: java.lang.String[] dependencies>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r5, 0, $i3);

     label4:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, $r5, i1, i0);

        r1.<org.eclipse.jdt.core.compiler.BuildContext: java.lang.String[] dependencies> = $r5;

        return;
    }

    public void recordNewProblems(org.eclipse.jdt.core.compiler.CategorizedProblem[])
    {
        org.eclipse.jdt.core.compiler.CategorizedProblem[] r0, $r2, $r3, $r4, $r5;
        org.eclipse.jdt.core.compiler.BuildContext r1;
        int i0, i1, $i2, $i3;

        r1 := @this: org.eclipse.jdt.core.compiler.BuildContext;

        r0 := @parameter0: org.eclipse.jdt.core.compiler.CategorizedProblem[];

        i0 = lengthof r0;

        if i0 != 0 goto label1;

        return;

     label1:
        $r2 = r1.<org.eclipse.jdt.core.compiler.BuildContext: org.eclipse.jdt.core.compiler.CategorizedProblem[] problems>;

        if $r2 != null goto label2;

        $i3 = 0;

        goto label3;

     label2:
        $r3 = r1.<org.eclipse.jdt.core.compiler.BuildContext: org.eclipse.jdt.core.compiler.CategorizedProblem[] problems>;

        $i3 = lengthof $r3;

     label3:
        i1 = $i3;

        $i2 = $i3 + i0;

        $r5 = newarray (org.eclipse.jdt.core.compiler.CategorizedProblem)[$i2];

        if $i3 <= 0 goto label4;

        $r4 = r1.<org.eclipse.jdt.core.compiler.BuildContext: org.eclipse.jdt.core.compiler.CategorizedProblem[] problems>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r5, 0, $i3);

     label4:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, $r5, i1, i0);

        r1.<org.eclipse.jdt.core.compiler.BuildContext: org.eclipse.jdt.core.compiler.CategorizedProblem[] problems> = $r5;

        return;
    }
}
