public class com.hp.hpl.jena.tdb.nodetable.NodeTableLogger extends java.lang.Object implements com.hp.hpl.jena.tdb.nodetable.NodeTable
{
    private static org.slf4j.Logger defaultLogger;
    private final org.slf4j.Logger log;
    private final java.lang.String label;
    private final com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable;

    public void <init>(java.lang.String, com.hp.hpl.jena.tdb.nodetable.NodeTable)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableLogger r0;
        org.slf4j.Logger $r3;
        com.hp.hpl.jena.tdb.nodetable.NodeTable r1;
        java.lang.String r2;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableLogger;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.tdb.nodetable.NodeTable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableLogger: com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable> = r1;

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableLogger: java.lang.String label> = r2;

        $r3 = <com.hp.hpl.jena.tdb.nodetable.NodeTableLogger: org.slf4j.Logger defaultLogger>;

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableLogger: org.slf4j.Logger log> = $r3;

        return;
    }

    public com.hp.hpl.jena.tdb.store.NodeId getAllocateNodeId(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTableLogger r0;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r2;
        com.hp.hpl.jena.tdb.store.NodeId $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableLogger;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableLogger: com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.tdb.store.NodeId getAllocateNodeId(com.hp.hpl.jena.graph.Node)>(r1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAllocateNodeId(");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") => ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableLogger: void info(java.lang.String)>($r9);

        return $r3;
    }

    public com.hp.hpl.jena.tdb.store.NodeId getNodeIdForNode(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTableLogger r0;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r2;
        com.hp.hpl.jena.tdb.store.NodeId $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableLogger;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableLogger: com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.tdb.store.NodeId getNodeIdForNode(com.hp.hpl.jena.graph.Node)>(r1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getNodeIdForNode(");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") => ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableLogger: void info(java.lang.String)>($r9);

        return $r3;
    }

    public com.hp.hpl.jena.graph.Node getNodeForNodeId(com.hp.hpl.jena.tdb.store.NodeId)
    {
        com.hp.hpl.jena.graph.Node $r3;
        com.hp.hpl.jena.tdb.nodetable.NodeTableLogger r0;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r2;
        com.hp.hpl.jena.tdb.store.NodeId r1;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableLogger;

        r1 := @parameter0: com.hp.hpl.jena.tdb.store.NodeId;

        $r2 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableLogger: com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.graph.Node getNodeForNodeId(com.hp.hpl.jena.tdb.store.NodeId)>(r1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getNodeForNodeId(");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") => ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableLogger: void info(java.lang.String)>($r9);

        return $r3;
    }

    public com.hp.hpl.jena.tdb.store.NodeId allocOffset()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableLogger r0;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r1;
        com.hp.hpl.jena.tdb.store.NodeId $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableLogger;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableLogger: com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.tdb.store.NodeId allocOffset()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allocOffset() => ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableLogger: void info(java.lang.String)>($r6);

        return $r2;
    }

    public java.util.Iterator all()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableLogger r0;
        java.util.Iterator $r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r1;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableLogger;

        specialinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableLogger: void info(java.lang.String)>("all()");

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableLogger: com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTable: java.util.Iterator all()>();

        return $r2;
    }

    public boolean isEmpty()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableLogger r0;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableLogger;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableLogger: com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable>;

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTable: boolean isEmpty()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isEmpty() => ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableLogger: void info(java.lang.String)>($r5);

        return $z0;
    }

    public void sync()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableLogger r0;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r1;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableLogger;

        specialinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableLogger: void info(java.lang.String)>("sync()");

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableLogger: com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable>;

        interfaceinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTable: void sync()>();

        return;
    }

    public void close()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableLogger r0;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r1;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableLogger;

        specialinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableLogger: void info(java.lang.String)>("close()");

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableLogger: com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable>;

        interfaceinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTable: void close()>();

        return;
    }

    private void info(java.lang.String)
    {
        org.slf4j.Logger $r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTableLogger r0;
        java.lang.StringBuilder $r3, $r5, $r6, $r7;
        java.lang.String $r1, $r4, r8;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableLogger;

        r8 := @parameter0: java.lang.String;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableLogger: java.lang.String label>;

        if $r1 == null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableLogger: java.lang.String label>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r2 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableLogger: org.slf4j.Logger log>;

        interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>(r8);

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/hp/hpl/jena/tdb/nodetable/NodeTable;");

        <com.hp.hpl.jena.tdb.nodetable.NodeTableLogger: org.slf4j.Logger defaultLogger> = $r0;

        return;
    }
}
