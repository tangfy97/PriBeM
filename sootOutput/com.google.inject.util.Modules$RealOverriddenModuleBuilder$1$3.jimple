class com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$3 extends com.google.inject.util.Modules$ModuleWriter
{
    final java.util.Set val$overridesScopeAnnotations;
    final java.util.Map val$scopeInstancesInUse;
    final com.google.inject.util.Modules$RealOverriddenModuleBuilder$1 this$1;

    void <init>(com.google.inject.util.Modules$RealOverriddenModuleBuilder$1, com.google.inject.Binder, java.util.Set, java.util.Map)
    {
        com.google.inject.util.Modules$RealOverriddenModuleBuilder$1 r1;
        com.google.inject.Binder r4;
        java.util.Map r3;
        java.util.Set r2;
        com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$3 r0;

        r0 := @this: com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$3;

        r1 := @parameter0: com.google.inject.util.Modules$RealOverriddenModuleBuilder$1;

        r4 := @parameter1: com.google.inject.Binder;

        r2 := @parameter2: java.util.Set;

        r3 := @parameter3: java.util.Map;

        r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$3: com.google.inject.util.Modules$RealOverriddenModuleBuilder$1 this$1> = r1;

        r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$3: java.util.Set val$overridesScopeAnnotations> = r2;

        r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$3: java.util.Map val$scopeInstancesInUse> = r3;

        specialinvoke r0.<com.google.inject.util.Modules$ModuleWriter: void <init>(com.google.inject.Binder)>(r4);

        return;
    }

    public java.lang.Void visit(com.google.inject.spi.ScopeBinding)
    {
        java.lang.Object[] $r9;
        com.google.inject.spi.ScopeBinding r1;
        java.util.Set $r2;
        com.google.inject.Scope $r5;
        com.google.inject.Binder $r7, $r8;
        java.util.Map $r4;
        java.lang.Class $r3, $r10;
        java.lang.Object $r6;
        com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$3 r0;
        java.lang.String $r11;
        boolean $z0;

        r0 := @this: com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$3;

        r1 := @parameter0: com.google.inject.spi.ScopeBinding;

        $r2 = r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$3: java.util.Set val$overridesScopeAnnotations>;

        $r3 = virtualinvoke r1.<com.google.inject.spi.ScopeBinding: java.lang.Class getAnnotationType()>();

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.google.inject.util.Modules$ModuleWriter: java.lang.Object visit(com.google.inject.spi.ScopeBinding)>(r1);

        goto label2;

     label1:
        $r4 = r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$3: java.util.Map val$scopeInstancesInUse>;

        $r5 = virtualinvoke r1.<com.google.inject.spi.ScopeBinding: com.google.inject.Scope getScope()>();

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        if $r6 == null goto label2;

        $r7 = r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$3: com.google.inject.Binder binder>;

        $r8 = interfaceinvoke $r7.<com.google.inject.Binder: com.google.inject.Binder withSource(java.lang.Object)>($r6);

        $r9 = newarray (java.lang.Object)[1];

        $r10 = virtualinvoke r1.<com.google.inject.spi.ScopeBinding: java.lang.Class getAnnotationType()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getSimpleName()>();

        $r9[0] = $r11;

        interfaceinvoke $r8.<com.google.inject.Binder: void addError(java.lang.String,java.lang.Object[])>("The scope for @%s is bound directly and cannot be overridden.", $r9);

     label2:
        return null;
    }

    public volatile java.lang.Object visit(com.google.inject.spi.ScopeBinding)
    {
        java.lang.Void $r2;
        com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$3 r0;
        com.google.inject.spi.ScopeBinding r1;

        r0 := @this: com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$3;

        r1 := @parameter0: com.google.inject.spi.ScopeBinding;

        $r2 = virtualinvoke r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$3: java.lang.Void visit(com.google.inject.spi.ScopeBinding)>(r1);

        return $r2;
    }
}
