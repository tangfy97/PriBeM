class org.waveprotocol.wave.client.editor.harness.EditorHarness$12 extends java.lang.Object implements com.google.gwt.event.dom.client.ChangeHandler
{
    final org.waveprotocol.wave.client.editor.harness.EditorHarness this$0;

    void <init>(org.waveprotocol.wave.client.editor.harness.EditorHarness)
    {
        org.waveprotocol.wave.client.editor.harness.EditorHarness r1;
        org.waveprotocol.wave.client.editor.harness.EditorHarness$12 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.harness.EditorHarness$12;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.harness.EditorHarness;

        r0.<org.waveprotocol.wave.client.editor.harness.EditorHarness$12: org.waveprotocol.wave.client.editor.harness.EditorHarness this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onChange(com.google.gwt.event.dom.client.ChangeEvent)
    {
        com.google.gwt.event.dom.client.ChangeEvent r2;
        org.waveprotocol.wave.client.editor.harness.EditorHarness $r1;
        org.waveprotocol.wave.client.editor.harness.EditorHarness$12 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.harness.EditorHarness$12;

        r2 := @parameter0: com.google.gwt.event.dom.client.ChangeEvent;

        $r1 = r0.<org.waveprotocol.wave.client.editor.harness.EditorHarness$12: org.waveprotocol.wave.client.editor.harness.EditorHarness this$0>;

        staticinvoke <org.waveprotocol.wave.client.editor.harness.EditorHarness: void access$1100(org.waveprotocol.wave.client.editor.harness.EditorHarness)>($r1);

        return;
    }
}
