class com.hp.hpl.jena.sparql.expr.aggregate.AggCountVar$AccCountVar extends com.hp.hpl.jena.sparql.expr.aggregate.AccumulatorExpr
{
    private long count;

    public void <init>(com.hp.hpl.jena.sparql.expr.Expr)
    {
        com.hp.hpl.jena.sparql.expr.aggregate.AggCountVar$AccCountVar r0;
        com.hp.hpl.jena.sparql.expr.Expr r1;

        r0 := @this: com.hp.hpl.jena.sparql.expr.aggregate.AggCountVar$AccCountVar;

        r1 := @parameter0: com.hp.hpl.jena.sparql.expr.Expr;

        specialinvoke r0.<com.hp.hpl.jena.sparql.expr.aggregate.AccumulatorExpr: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>(r1);

        r0.<com.hp.hpl.jena.sparql.expr.aggregate.AggCountVar$AccCountVar: long count> = 0L;

        return;
    }

    public void accumulate(com.hp.hpl.jena.sparql.expr.NodeValue, com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.function.FunctionEnv)
    {
        com.hp.hpl.jena.sparql.expr.aggregate.AggCountVar$AccCountVar r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding r2;
        com.hp.hpl.jena.sparql.expr.NodeValue r1;
        long $l0, $l1;
        com.hp.hpl.jena.sparql.function.FunctionEnv r3;

        r0 := @this: com.hp.hpl.jena.sparql.expr.aggregate.AggCountVar$AccCountVar;

        r1 := @parameter0: com.hp.hpl.jena.sparql.expr.NodeValue;

        r2 := @parameter1: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r3 := @parameter2: com.hp.hpl.jena.sparql.function.FunctionEnv;

        $l0 = r0.<com.hp.hpl.jena.sparql.expr.aggregate.AggCountVar$AccCountVar: long count>;

        $l1 = $l0 + 1L;

        r0.<com.hp.hpl.jena.sparql.expr.aggregate.AggCountVar$AccCountVar: long count> = $l1;

        return;
    }

    protected void accumulateError(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.function.FunctionEnv)
    {
        com.hp.hpl.jena.sparql.expr.aggregate.AggCountVar$AccCountVar r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding r1;
        com.hp.hpl.jena.sparql.function.FunctionEnv r2;

        r0 := @this: com.hp.hpl.jena.sparql.expr.aggregate.AggCountVar$AccCountVar;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r2 := @parameter1: com.hp.hpl.jena.sparql.function.FunctionEnv;

        return;
    }

    public com.hp.hpl.jena.sparql.expr.NodeValue getValue()
    {
        com.hp.hpl.jena.sparql.expr.aggregate.AggCountVar$AccCountVar r0;
        com.hp.hpl.jena.sparql.expr.NodeValue $r1;

        r0 := @this: com.hp.hpl.jena.sparql.expr.aggregate.AggCountVar$AccCountVar;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.aggregate.AggCountVar$AccCountVar: com.hp.hpl.jena.sparql.expr.NodeValue getAccValue()>();

        return $r1;
    }

    public com.hp.hpl.jena.sparql.expr.NodeValue getAccValue()
    {
        com.hp.hpl.jena.sparql.expr.aggregate.AggCountVar$AccCountVar r0;
        long $l0;
        com.hp.hpl.jena.sparql.expr.NodeValue $r1;

        r0 := @this: com.hp.hpl.jena.sparql.expr.aggregate.AggCountVar$AccCountVar;

        $l0 = r0.<com.hp.hpl.jena.sparql.expr.aggregate.AggCountVar$AccCountVar: long count>;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.expr.NodeValue: com.hp.hpl.jena.sparql.expr.NodeValue makeInteger(long)>($l0);

        return $r1;
    }
}
