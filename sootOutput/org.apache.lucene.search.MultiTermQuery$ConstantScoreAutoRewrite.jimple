public class org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite extends org.apache.lucene.search.ConstantScoreAutoRewrite
{

    public void <init>()
    {
        org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite r0;

        r0 := @this: org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite;

        specialinvoke r0.<org.apache.lucene.search.ConstantScoreAutoRewrite: void <init>()>();

        return;
    }

    public volatile boolean equals(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<org.apache.lucene.search.ConstantScoreAutoRewrite: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public volatile int hashCode()
    {
        int $i0;
        org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite r0;

        r0 := @this: org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite;

        $i0 = specialinvoke r0.<org.apache.lucene.search.ConstantScoreAutoRewrite: int hashCode()>();

        return $i0;
    }

    public volatile org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader, org.apache.lucene.search.MultiTermQuery) throws java.io.IOException
    {
        org.apache.lucene.search.Query $r3;
        org.apache.lucene.search.MultiTermQuery r2;
        org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite r0;
        org.apache.lucene.index.IndexReader r1;

        r0 := @this: org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite;

        r1 := @parameter0: org.apache.lucene.index.IndexReader;

        r2 := @parameter1: org.apache.lucene.search.MultiTermQuery;

        $r3 = specialinvoke r0.<org.apache.lucene.search.ConstantScoreAutoRewrite: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader,org.apache.lucene.search.MultiTermQuery)>(r1, r2);

        return $r3;
    }

    public volatile double getDocCountPercent()
    {
        org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite r0;
        double $d0;

        r0 := @this: org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite;

        $d0 = specialinvoke r0.<org.apache.lucene.search.ConstantScoreAutoRewrite: double getDocCountPercent()>();

        return $d0;
    }

    public volatile void setDocCountPercent(double)
    {
        org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite r0;
        double d0;

        r0 := @this: org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite;

        d0 := @parameter0: double;

        specialinvoke r0.<org.apache.lucene.search.ConstantScoreAutoRewrite: void setDocCountPercent(double)>(d0);

        return;
    }

    public volatile int getTermCountCutoff()
    {
        int $i0;
        org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite r0;

        r0 := @this: org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite;

        $i0 = specialinvoke r0.<org.apache.lucene.search.ConstantScoreAutoRewrite: int getTermCountCutoff()>();

        return $i0;
    }

    public volatile void setTermCountCutoff(int)
    {
        int i0;
        org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite r0;

        r0 := @this: org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.lucene.search.ConstantScoreAutoRewrite: void setTermCountCutoff(int)>(i0);

        return;
    }
}
