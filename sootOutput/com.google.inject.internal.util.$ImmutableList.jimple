public abstract class com.google.inject.internal.util.$ImmutableList extends com.google.inject.internal.util.$ImmutableCollection implements java.util.List, java.util.RandomAccess
{
    private static final com.google.inject.internal.util.$ImmutableList EMPTY_IMMUTABLE_LIST;

    public static com.google.inject.internal.util.$ImmutableList of()
    {
        com.google.inject.internal.util.$ImmutableList $r0;

        $r0 = <com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList EMPTY_IMMUTABLE_LIST>;

        return $r0;
    }

    public static com.google.inject.internal.util.$ImmutableList of(java.lang.Object)
    {
        java.lang.Object[] $r1, $r3;
        java.lang.Object r2;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList $r0;

        r2 := @parameter0: java.lang.Object;

        $r0 = new com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r2;

        $r3 = staticinvoke <com.google.inject.internal.util.$ImmutableList: java.lang.Object[] copyIntoArray(java.lang.Object[])>($r1);

        specialinvoke $r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: void <init>(java.lang.Object[],com.google.inject.internal.util.$ImmutableList$1)>($r3, null);

        return $r0;
    }

    public static com.google.inject.internal.util.$ImmutableList of(java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r1, $r4;
        java.lang.Object r2, r3;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList $r0;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r0 = new com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = r2;

        $r1[1] = r3;

        $r4 = staticinvoke <com.google.inject.internal.util.$ImmutableList: java.lang.Object[] copyIntoArray(java.lang.Object[])>($r1);

        specialinvoke $r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: void <init>(java.lang.Object[],com.google.inject.internal.util.$ImmutableList$1)>($r4, null);

        return $r0;
    }

    public static com.google.inject.internal.util.$ImmutableList of(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r1, $r5;
        java.lang.Object r2, r3, r4;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList $r0;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object;

        $r0 = new com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        $r1 = newarray (java.lang.Object)[3];

        $r1[0] = r2;

        $r1[1] = r3;

        $r1[2] = r4;

        $r5 = staticinvoke <com.google.inject.internal.util.$ImmutableList: java.lang.Object[] copyIntoArray(java.lang.Object[])>($r1);

        specialinvoke $r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: void <init>(java.lang.Object[],com.google.inject.internal.util.$ImmutableList$1)>($r5, null);

        return $r0;
    }

    public static com.google.inject.internal.util.$ImmutableList of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r1, $r6;
        java.lang.Object r2, r3, r4, r5;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList $r0;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object;

        r5 := @parameter3: java.lang.Object;

        $r0 = new com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        $r1 = newarray (java.lang.Object)[4];

        $r1[0] = r2;

        $r1[1] = r3;

        $r1[2] = r4;

        $r1[3] = r5;

        $r6 = staticinvoke <com.google.inject.internal.util.$ImmutableList: java.lang.Object[] copyIntoArray(java.lang.Object[])>($r1);

        specialinvoke $r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: void <init>(java.lang.Object[],com.google.inject.internal.util.$ImmutableList$1)>($r6, null);

        return $r0;
    }

    public static com.google.inject.internal.util.$ImmutableList of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r1, $r7;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList $r0;
        java.lang.Object r2, r3, r4, r5, r6;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object;

        r5 := @parameter3: java.lang.Object;

        r6 := @parameter4: java.lang.Object;

        $r0 = new com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        $r1 = newarray (java.lang.Object)[5];

        $r1[0] = r2;

        $r1[1] = r3;

        $r1[2] = r4;

        $r1[3] = r5;

        $r1[4] = r6;

        $r7 = staticinvoke <com.google.inject.internal.util.$ImmutableList: java.lang.Object[] copyIntoArray(java.lang.Object[])>($r1);

        specialinvoke $r0.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: void <init>(java.lang.Object[],com.google.inject.internal.util.$ImmutableList$1)>($r7, null);

        return $r0;
    }

    public static transient com.google.inject.internal.util.$ImmutableList of(java.lang.Object[])
    {
        java.lang.Object[] r0, $r1;
        com.google.inject.internal.util.$ImmutableList $r2;
        int $i0;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList $r3;

        r0 := @parameter0: java.lang.Object[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r2 = staticinvoke <com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList of()>();

        goto label2;

     label1:
        $r3 = new com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        $r2 = $r3;

        $r1 = staticinvoke <com.google.inject.internal.util.$ImmutableList: java.lang.Object[] copyIntoArray(java.lang.Object[])>(r0);

        specialinvoke $r3.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: void <init>(java.lang.Object[],com.google.inject.internal.util.$ImmutableList$1)>($r1, null);

     label2:
        return $r2;
    }

    public static com.google.inject.internal.util.$ImmutableList copyOf(java.lang.Iterable)
    {
        com.google.inject.internal.util.$ImmutableList $r2, $r3, r4;
        java.util.Collection r5;
        java.lang.Iterable r0;
        java.util.ArrayList $r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Iterable;

        $z0 = r0 instanceof com.google.inject.internal.util.$ImmutableList;

        if $z0 == 0 goto label1;

        r4 = (com.google.inject.internal.util.$ImmutableList) r0;

        return r4;

     label1:
        $z1 = r0 instanceof java.util.Collection;

        if $z1 == 0 goto label2;

        r5 = (java.util.Collection) r0;

        $r3 = staticinvoke <com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList copyOfInternal(java.util.Collection)>(r5);

        return $r3;

     label2:
        $r1 = staticinvoke <com.google.inject.internal.util.$Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>(r0);

        $r2 = staticinvoke <com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList copyOfInternal(java.util.ArrayList)>($r1);

        return $r2;
    }

    public static com.google.inject.internal.util.$ImmutableList copyOf(java.util.Iterator)
    {
        com.google.inject.internal.util.$ImmutableList $r2;
        java.util.Iterator r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: java.util.Iterator;

        $r1 = staticinvoke <com.google.inject.internal.util.$Lists: java.util.ArrayList newArrayList(java.util.Iterator)>(r0);

        $r2 = staticinvoke <com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList copyOfInternal(java.util.ArrayList)>($r1);

        return $r2;
    }

    private static com.google.inject.internal.util.$ImmutableList copyOfInternal(java.util.ArrayList)
    {
        java.lang.Object[] $r1, $r2;
        com.google.inject.internal.util.$ImmutableList $r3;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList $r4;
        java.util.ArrayList r0;
        boolean $z0;

        r0 := @parameter0: java.util.ArrayList;

        $z0 = virtualinvoke r0.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList of()>();

        goto label2;

     label1:
        $r4 = new com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        $r3 = $r4;

        $r1 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object[] toArray()>();

        $r2 = staticinvoke <com.google.inject.internal.util.$ImmutableList: java.lang.Object[] nullChecked(java.lang.Object[])>($r1);

        specialinvoke $r4.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: void <init>(java.lang.Object[],com.google.inject.internal.util.$ImmutableList$1)>($r2, null);

     label2:
        return $r3;
    }

    private static java.lang.Object[] nullChecked(java.lang.Object[])
    {
        java.lang.Object[] r0;
        java.lang.NullPointerException $r2;
        int i0, i1;
        java.lang.Object $r1;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @parameter0: java.lang.Object[];

        i1 = 0;

        i0 = lengthof r0;

     label1:
        if i1 >= i0 goto label3;

        $r1 = r0[i1];

        if $r1 != null goto label2;

        $r2 = new java.lang.NullPointerException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("at index ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r0;
    }

    private static com.google.inject.internal.util.$ImmutableList copyOfInternal(java.util.Collection)
    {
        int $i0;
        com.google.inject.internal.util.$ImmutableList $r1;
        java.util.Collection r0;

        r0 := @parameter0: java.util.Collection;

        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        if $i0 != 0 goto label1;

        $r1 = staticinvoke <com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList of()>();

        goto label2;

     label1:
        $r1 = staticinvoke <com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList createFromIterable(java.lang.Iterable,int)>(r0, $i0);

     label2:
        return $r1;
    }

    private void <init>()
    {
        com.google.inject.internal.util.$ImmutableList r0;

        r0 := @this: com.google.inject.internal.util.$ImmutableList;

        specialinvoke r0.<com.google.inject.internal.util.$ImmutableCollection: void <init>()>();

        return;
    }

    public abstract com.google.inject.internal.util.$UnmodifiableIterator iterator();

    public abstract int indexOf(java.lang.Object);

    public abstract int lastIndexOf(java.lang.Object);

    public abstract com.google.inject.internal.util.$ImmutableList subList(int, int);

    public final boolean addAll(int, java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.inject.internal.util.$ImmutableList r1;
        java.util.Collection r2;
        int i0;

        r1 := @this: com.google.inject.internal.util.$ImmutableList;

        i0 := @parameter0: int;

        r2 := @parameter1: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public final java.lang.Object set(int, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.inject.internal.util.$ImmutableList r1;
        int i0;
        java.lang.Object r2;

        r1 := @this: com.google.inject.internal.util.$ImmutableList;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public final void add(int, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.inject.internal.util.$ImmutableList r1;
        int i0;
        java.lang.Object r2;

        r1 := @this: com.google.inject.internal.util.$ImmutableList;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public final java.lang.Object remove(int)
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;
        com.google.inject.internal.util.$ImmutableList r1;

        r1 := @this: com.google.inject.internal.util.$ImmutableList;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    private static transient java.lang.Object[] copyIntoArray(java.lang.Object[])
    {
        java.lang.Object[] r0, r1;
        java.lang.NullPointerException $r3;
        int $i0, i1, $i2, i3, i4;
        java.lang.Object r2;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @parameter0: java.lang.Object[];

        $i0 = lengthof r0;

        r1 = newarray (java.lang.Object)[$i0];

        i3 = 0;

        i1 = lengthof r0;

        i4 = 0;

     label1:
        if i4 >= i1 goto label3;

        r2 = r0[i4];

        if r2 != null goto label2;

        $r3 = new java.lang.NullPointerException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("at index ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label2:
        $i2 = i3;

        i3 = i3 + 1;

        r1[$i2] = r2;

        i4 = i4 + 1;

        goto label1;

     label3:
        return r1;
    }

    private static com.google.inject.internal.util.$ImmutableList createFromIterable(java.lang.Iterable, int)
    {
        java.lang.Object[] r10;
        com.google.inject.internal.util.$ImmutableList$RegularImmutableList $r2;
        java.lang.Iterable r0;
        java.lang.NullPointerException $r5;
        int $i0, $i1, $i2, i3, i4;
        java.lang.String $r9;
        boolean $z0;
        com.google.inject.internal.util.$ImmutableList $r3;
        java.util.Iterator $r1;
        java.lang.Object $r4;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @parameter0: java.lang.Iterable;

        i3 := @parameter1: int;

        r10 = newarray (java.lang.Object)[i3];

        i4 = 0;

        $r1 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        if i4 != i3 goto label2;

        $i1 = i3 / 2;

        $i2 = $i1 + 1;

        i3 = $i2 * 3;

        r10 = staticinvoke <com.google.inject.internal.util.$ImmutableList: java.lang.Object[] copyOf(java.lang.Object[],int)>(r10, i3);

     label2:
        if $r4 != null goto label3;

        $r5 = new java.lang.NullPointerException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("at index ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label3:
        $i0 = i4;

        i4 = i4 + 1;

        r10[$i0] = $r4;

        goto label1;

     label4:
        if i4 != 0 goto label5;

        $r3 = staticinvoke <com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList of()>();

        return $r3;

     label5:
        if i4 == i3 goto label6;

        r10 = staticinvoke <com.google.inject.internal.util.$ImmutableList: java.lang.Object[] copyOf(java.lang.Object[],int)>(r10, i4);

     label6:
        $r2 = new com.google.inject.internal.util.$ImmutableList$RegularImmutableList;

        specialinvoke $r2.<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: void <init>(java.lang.Object[],int,int,com.google.inject.internal.util.$ImmutableList$1)>(r10, 0, i4, null);

        return $r2;
    }

    private static java.lang.Object[] copyOf(java.lang.Object[], int)
    {
        java.lang.Object[] r0, r1;
        int i0, $i1, $i2;

        r1 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        r0 = newarray (java.lang.Object)[i0];

        $i1 = lengthof r1;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, i0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, $i2);

        return r0;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.InvalidObjectException
    {
        java.io.ObjectInputStream r2;
        java.io.InvalidObjectException $r0;
        com.google.inject.internal.util.$ImmutableList r1;

        r1 := @this: com.google.inject.internal.util.$ImmutableList;

        r2 := @parameter0: java.io.ObjectInputStream;

        $r0 = new java.io.InvalidObjectException;

        specialinvoke $r0.<java.io.InvalidObjectException: void <init>(java.lang.String)>("Use SerializedForm");

        throw $r0;
    }

    java.lang.Object writeReplace()
    {
        com.google.inject.internal.util.$ImmutableList r1;
        java.lang.Object[] $r2;
        com.google.inject.internal.util.$ImmutableList$SerializedForm $r0;

        r1 := @this: com.google.inject.internal.util.$ImmutableList;

        $r0 = new com.google.inject.internal.util.$ImmutableList$SerializedForm;

        $r2 = virtualinvoke r1.<com.google.inject.internal.util.$ImmutableList: java.lang.Object[] toArray()>();

        specialinvoke $r0.<com.google.inject.internal.util.$ImmutableList$SerializedForm: void <init>(java.lang.Object[])>($r2);

        return $r0;
    }

    public static com.google.inject.internal.util.$ImmutableList$Builder builder()
    {
        com.google.inject.internal.util.$ImmutableList$Builder $r0;

        $r0 = new com.google.inject.internal.util.$ImmutableList$Builder;

        specialinvoke $r0.<com.google.inject.internal.util.$ImmutableList$Builder: void <init>()>();

        return $r0;
    }

    public volatile java.util.Iterator iterator()
    {
        com.google.inject.internal.util.$ImmutableList r0;
        com.google.inject.internal.util.$UnmodifiableIterator $r1;

        r0 := @this: com.google.inject.internal.util.$ImmutableList;

        $r1 = virtualinvoke r0.<com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$UnmodifiableIterator iterator()>();

        return $r1;
    }

    public volatile java.util.List subList(int, int)
    {
        com.google.inject.internal.util.$ImmutableList r0, $r1;
        int i0, i1;

        r0 := @this: com.google.inject.internal.util.$ImmutableList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList subList(int,int)>(i0, i1);

        return $r1;
    }

    void <init>(com.google.inject.internal.util.$ImmutableList$1)
    {
        com.google.inject.internal.util.$ImmutableList r0;
        com.google.inject.internal.util.$ImmutableList$1 r1;

        r0 := @this: com.google.inject.internal.util.$ImmutableList;

        r1 := @parameter0: com.google.inject.internal.util.$ImmutableList$1;

        specialinvoke r0.<com.google.inject.internal.util.$ImmutableList: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        com.google.inject.internal.util.$ImmutableList$EmptyImmutableList $r0;

        $r0 = new com.google.inject.internal.util.$ImmutableList$EmptyImmutableList;

        specialinvoke $r0.<com.google.inject.internal.util.$ImmutableList$EmptyImmutableList: void <init>(com.google.inject.internal.util.$ImmutableList$1)>(null);

        <com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList EMPTY_IMMUTABLE_LIST> = $r0;

        return;
    }
}
