class org.apache.xmlbeans.impl.tool.CodeGenUtil$ThreadedReader$1 extends java.lang.Object implements java.lang.Runnable
{
    private final java.io.BufferedReader val$reader;
    private final java.lang.StringBuffer val$output;
    private final org.apache.xmlbeans.impl.tool.CodeGenUtil$ThreadedReader this$0;

    void <init>(org.apache.xmlbeans.impl.tool.CodeGenUtil$ThreadedReader, java.io.BufferedReader, java.lang.StringBuffer)
    {
        org.apache.xmlbeans.impl.tool.CodeGenUtil$ThreadedReader r1;
        org.apache.xmlbeans.impl.tool.CodeGenUtil$ThreadedReader$1 r0;
        java.lang.StringBuffer r3;
        java.io.BufferedReader r2;

        r0 := @this: org.apache.xmlbeans.impl.tool.CodeGenUtil$ThreadedReader$1;

        r1 := @parameter0: org.apache.xmlbeans.impl.tool.CodeGenUtil$ThreadedReader;

        r2 := @parameter1: java.io.BufferedReader;

        r3 := @parameter2: java.lang.StringBuffer;

        r0.<org.apache.xmlbeans.impl.tool.CodeGenUtil$ThreadedReader$1: org.apache.xmlbeans.impl.tool.CodeGenUtil$ThreadedReader this$0> = r1;

        r0.<org.apache.xmlbeans.impl.tool.CodeGenUtil$ThreadedReader$1: java.io.BufferedReader val$reader> = r2;

        r0.<org.apache.xmlbeans.impl.tool.CodeGenUtil$ThreadedReader$1: java.lang.StringBuffer val$output> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        org.apache.xmlbeans.impl.tool.CodeGenUtil$ThreadedReader$1 r0;
        java.lang.Exception $r8;
        java.lang.StringBuffer $r3, $r4, $r5, $r6;
        java.io.BufferedReader $r1;
        java.lang.String $r2, $r7;

        r0 := @this: org.apache.xmlbeans.impl.tool.CodeGenUtil$ThreadedReader$1;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.tool.CodeGenUtil$ThreadedReader$1: java.io.BufferedReader val$reader>;

        $r2 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r2 == null goto label2;

        $r4 = r0.<org.apache.xmlbeans.impl.tool.CodeGenUtil$ThreadedReader$1: java.lang.StringBuffer val$output>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        goto label1;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
