public class org.eclipse.jetty.server.handler.HandlerCollection extends org.eclipse.jetty.server.handler.AbstractHandlerContainer
{
    private final boolean _mutableWhenRunning;
    private volatile org.eclipse.jetty.server.Handler[] _handlers;
    private boolean _parallelStart;

    public void <init>()
    {
        org.eclipse.jetty.server.handler.HandlerCollection r0;

        r0 := @this: org.eclipse.jetty.server.handler.HandlerCollection;

        specialinvoke r0.<org.eclipse.jetty.server.handler.AbstractHandlerContainer: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.HandlerCollection: boolean _parallelStart> = 0;

        r0.<org.eclipse.jetty.server.handler.HandlerCollection: boolean _mutableWhenRunning> = 0;

        return;
    }

    public void <init>(boolean)
    {
        org.eclipse.jetty.server.handler.HandlerCollection r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.server.handler.HandlerCollection;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.eclipse.jetty.server.handler.AbstractHandlerContainer: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.HandlerCollection: boolean _parallelStart> = 0;

        r0.<org.eclipse.jetty.server.handler.HandlerCollection: boolean _mutableWhenRunning> = z0;

        return;
    }

    public org.eclipse.jetty.server.Handler[] getHandlers()
    {
        org.eclipse.jetty.server.Handler[] $r1;
        org.eclipse.jetty.server.handler.HandlerCollection r0;

        r0 := @this: org.eclipse.jetty.server.handler.HandlerCollection;

        $r1 = r0.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Handler[] _handlers>;

        return $r1;
    }

    public void setHandlers(org.eclipse.jetty.server.Handler[])
    {
        java.lang.Throwable $r18;
        org.eclipse.jetty.server.Handler $r9, $r10, $r11, $r14, $r16;
        java.lang.IllegalStateException $r17;
        org.eclipse.jetty.util.component.Container $r13;
        int $i0, $i1, i2, i3;
        org.eclipse.jetty.util.MultiException $r7;
        org.eclipse.jetty.server.Server $r6, $r8, $r12, $r15;
        boolean $z0, $z1, $z2;
        org.eclipse.jetty.server.Handler[] $r1, $r2, r4, r5, $r19;
        java.lang.Object $r3;
        org.eclipse.jetty.server.handler.HandlerCollection r0;

        r0 := @this: org.eclipse.jetty.server.handler.HandlerCollection;

        r5 := @parameter0: org.eclipse.jetty.server.Handler[];

        $z0 = r0.<org.eclipse.jetty.server.handler.HandlerCollection: boolean _mutableWhenRunning>;

        if $z0 != 0 goto label01;

        $z2 = virtualinvoke r0.<org.eclipse.jetty.server.handler.HandlerCollection: boolean isStarted()>();

        if $z2 == 0 goto label01;

        $r17 = new java.lang.IllegalStateException;

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("STARTED");

        throw $r17;

     label01:
        $r1 = r0.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Handler[] _handlers>;

        if $r1 != null goto label02;

        $r19 = null;

        goto label03;

     label02:
        $r2 = r0.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Handler[] _handlers>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r19 = (org.eclipse.jetty.server.Handler[]) $r3;

     label03:
        r4 = $r19;

        r0.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Handler[] _handlers> = r5;

        $r6 = virtualinvoke r0.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Server getServer()>();

        $r7 = new org.eclipse.jetty.util.MultiException;

        specialinvoke $r7.<org.eclipse.jetty.util.MultiException: void <init>()>();

        i2 = 0;

     label04:
        if r5 == null goto label06;

        $i1 = lengthof r5;

        if i2 >= $i1 goto label06;

        $r14 = r5[i2];

        $r15 = interfaceinvoke $r14.<org.eclipse.jetty.server.Handler: org.eclipse.jetty.server.Server getServer()>();

        if $r15 == $r6 goto label05;

        $r16 = r5[i2];

        interfaceinvoke $r16.<org.eclipse.jetty.server.Handler: void setServer(org.eclipse.jetty.server.Server)>($r6);

     label05:
        i2 = i2 + 1;

        goto label04;

     label06:
        $r8 = virtualinvoke r0.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Server getServer()>();

        if $r8 == null goto label07;

        $r12 = virtualinvoke r0.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Server getServer()>();

        $r13 = virtualinvoke $r12.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        virtualinvoke $r13.<org.eclipse.jetty.util.component.Container: void update(java.lang.Object,java.lang.Object[],java.lang.Object[],java.lang.String)>(r0, r4, r5, "handler");

     label07:
        i3 = 0;

     label08:
        if r4 == null goto label13;

        $i0 = lengthof r4;

        if i3 >= $i0 goto label13;

        $r9 = r4[i3];

        if $r9 == null goto label12;

     label09:
        $r10 = r4[i3];

        $z1 = interfaceinvoke $r10.<org.eclipse.jetty.server.Handler: boolean isStarted()>();

        if $z1 == 0 goto label10;

        $r11 = r4[i3];

        interfaceinvoke $r11.<org.eclipse.jetty.server.Handler: void stop()>();

     label10:
        goto label12;

     label11:
        $r18 := @caughtexception;

        virtualinvoke $r7.<org.eclipse.jetty.util.MultiException: void add(java.lang.Throwable)>($r18);

     label12:
        i3 = i3 + 1;

        goto label08;

     label13:
        virtualinvoke $r7.<org.eclipse.jetty.util.MultiException: void ifExceptionThrowRuntime()>();

        return;

        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public boolean isParallelStart()
    {
        org.eclipse.jetty.server.handler.HandlerCollection r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.handler.HandlerCollection;

        $z0 = r0.<org.eclipse.jetty.server.handler.HandlerCollection: boolean _parallelStart>;

        return $z0;
    }

    public void setParallelStart(boolean)
    {
        org.eclipse.jetty.server.handler.HandlerCollection r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.server.handler.HandlerCollection;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.server.handler.HandlerCollection: boolean _parallelStart> = z0;

        return;
    }

    public void handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException, javax.servlet.ServletException
    {
        java.lang.Throwable $r5;
        org.eclipse.jetty.server.Request r8;
        org.eclipse.jetty.server.Handler $r11;
        javax.servlet.ServletException $r3, $r4;
        javax.servlet.http.HttpServletRequest r9;
        int $i0, $i1, i2;
        java.lang.String r7;
        org.eclipse.jetty.util.MultiException $r13, r16;
        boolean $z0;
        javax.servlet.http.HttpServletResponse r10;
        java.io.IOException $r15;
        java.lang.RuntimeException $r14;
        org.eclipse.jetty.server.Handler[] $r1, $r2, $r6;
        java.lang.Exception $r12;
        org.eclipse.jetty.server.handler.HandlerCollection r0;

        r0 := @this: org.eclipse.jetty.server.handler.HandlerCollection;

        r7 := @parameter0: java.lang.String;

        r8 := @parameter1: org.eclipse.jetty.server.Request;

        r9 := @parameter2: javax.servlet.http.HttpServletRequest;

        r10 := @parameter3: javax.servlet.http.HttpServletResponse;

        $r1 = r0.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Handler[] _handlers>;

        if $r1 == null goto label11;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.server.handler.HandlerCollection: boolean isStarted()>();

        if $z0 == 0 goto label11;

        r16 = null;

        i2 = 0;

     label01:
        $r2 = r0.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Handler[] _handlers>;

        $i0 = lengthof $r2;

        if i2 >= $i0 goto label09;

     label02:
        $r6 = r0.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Handler[] _handlers>;

        $r11 = $r6[i2];

        interfaceinvoke $r11.<org.eclipse.jetty.server.Handler: void handle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r7, r8, r9, r10);

     label03:
        goto label08;

     label04:
        $r15 := @caughtexception;

        throw $r15;

     label05:
        $r14 := @caughtexception;

        throw $r14;

     label06:
        $r12 := @caughtexception;

        if r16 != null goto label07;

        $r13 = new org.eclipse.jetty.util.MultiException;

        specialinvoke $r13.<org.eclipse.jetty.util.MultiException: void <init>()>();

        r16 = $r13;

     label07:
        virtualinvoke r16.<org.eclipse.jetty.util.MultiException: void add(java.lang.Throwable)>($r12);

     label08:
        i2 = i2 + 1;

        goto label01;

     label09:
        if r16 == null goto label11;

        $i1 = virtualinvoke r16.<org.eclipse.jetty.util.MultiException: int size()>();

        if $i1 != 1 goto label10;

        $r4 = new javax.servlet.ServletException;

        $r5 = virtualinvoke r16.<org.eclipse.jetty.util.MultiException: java.lang.Throwable getThrowable(int)>(0);

        specialinvoke $r4.<javax.servlet.ServletException: void <init>(java.lang.Throwable)>($r5);

        throw $r4;

     label10:
        $r3 = new javax.servlet.ServletException;

        specialinvoke $r3.<javax.servlet.ServletException: void <init>(java.lang.Throwable)>(r16);

        throw $r3;

     label11:
        return;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.RuntimeException from label02 to label03 with label05;
        catch java.lang.Exception from label02 to label03 with label06;
    }

    protected void doStart() throws java.lang.Exception
    {
        java.lang.Throwable $r14;
        org.eclipse.jetty.server.Handler $r5;
        java.lang.Thread $r8;
        int $i0, $i1, $i2, i3, i4;
        org.eclipse.jetty.server.handler.HandlerCollection$1 $r13;
        org.eclipse.jetty.util.MultiException $r0;
        org.eclipse.jetty.server.Server $r11;
        boolean $z0;
        org.eclipse.jetty.server.Handler[] $r2, $r3, $r4, $r7, $r10;
        org.eclipse.jetty.util.thread.ThreadPool $r12;
        java.util.concurrent.CountDownLatch $r6;
        java.lang.ClassLoader $r9;
        org.eclipse.jetty.server.handler.HandlerCollection r1;

        r1 := @this: org.eclipse.jetty.server.handler.HandlerCollection;

        $r0 = new org.eclipse.jetty.util.MultiException;

        specialinvoke $r0.<org.eclipse.jetty.util.MultiException: void <init>()>();

        $r2 = r1.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Handler[] _handlers>;

        if $r2 == null goto label9;

        $z0 = r1.<org.eclipse.jetty.server.handler.HandlerCollection: boolean _parallelStart>;

        if $z0 == 0 goto label3;

        $r6 = new java.util.concurrent.CountDownLatch;

        $r7 = r1.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Handler[] _handlers>;

        $i1 = lengthof $r7;

        specialinvoke $r6.<java.util.concurrent.CountDownLatch: void <init>(int)>($i1);

        $r8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r9 = virtualinvoke $r8.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        i3 = 0;

     label1:
        $r10 = r1.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Handler[] _handlers>;

        $i2 = lengthof $r10;

        if i3 >= $i2 goto label2;

        $r11 = virtualinvoke r1.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Server getServer()>();

        $r12 = virtualinvoke $r11.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.thread.ThreadPool getThreadPool()>();

        $r13 = new org.eclipse.jetty.server.handler.HandlerCollection$1;

        specialinvoke $r13.<org.eclipse.jetty.server.handler.HandlerCollection$1: void <init>(org.eclipse.jetty.server.handler.HandlerCollection,java.lang.ClassLoader,int,org.eclipse.jetty.util.MultiException,java.util.concurrent.CountDownLatch)>(r1, $r9, i3, $r0, $r6);

        interfaceinvoke $r12.<org.eclipse.jetty.util.thread.ThreadPool: boolean dispatch(java.lang.Runnable)>($r13);

        i3 = i3 + 1;

        goto label1;

     label2:
        virtualinvoke $r6.<java.util.concurrent.CountDownLatch: void await()>();

        goto label9;

     label3:
        i4 = 0;

     label4:
        $r3 = r1.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Handler[] _handlers>;

        $i0 = lengthof $r3;

        if i4 >= $i0 goto label9;

     label5:
        $r4 = r1.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Handler[] _handlers>;

        $r5 = $r4[i4];

        interfaceinvoke $r5.<org.eclipse.jetty.server.Handler: void start()>();

     label6:
        goto label8;

     label7:
        $r14 := @caughtexception;

        virtualinvoke $r0.<org.eclipse.jetty.util.MultiException: void add(java.lang.Throwable)>($r14);

     label8:
        i4 = i4 + 1;

        goto label4;

     label9:
        specialinvoke r1.<org.eclipse.jetty.server.handler.AbstractHandlerContainer: void doStart()>();

        virtualinvoke $r0.<org.eclipse.jetty.util.MultiException: void ifExceptionThrow()>();

        return;

        catch java.lang.Throwable from label5 to label6 with label7;
    }

    protected void doStop() throws java.lang.Exception
    {
        java.lang.Throwable $r6, $r7;
        org.eclipse.jetty.server.Handler $r5;
        org.eclipse.jetty.server.Handler[] $r2, $r3, $r4;
        int i0, $i1, $i3;
        org.eclipse.jetty.util.MultiException $r8;
        org.eclipse.jetty.server.handler.HandlerCollection r1;

        r1 := @this: org.eclipse.jetty.server.handler.HandlerCollection;

        $r8 = new org.eclipse.jetty.util.MultiException;

        specialinvoke $r8.<org.eclipse.jetty.util.MultiException: void <init>()>();

     label1:
        specialinvoke r1.<org.eclipse.jetty.server.handler.AbstractHandlerContainer: void doStop()>();

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        virtualinvoke $r8.<org.eclipse.jetty.util.MultiException: void add(java.lang.Throwable)>($r7);

     label4:
        $r2 = r1.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Handler[] _handlers>;

        if $r2 == null goto label9;

        $r3 = r1.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Handler[] _handlers>;

        i0 = lengthof $r3;

     label5:
        $i1 = i0;

        $i3 = (int) -1;

        i0 = i0 + $i3;

        if $i1 <= 0 goto label9;

     label6:
        $r4 = r1.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Handler[] _handlers>;

        $r5 = $r4[i0];

        interfaceinvoke $r5.<org.eclipse.jetty.server.Handler: void stop()>();

     label7:
        goto label5;

     label8:
        $r6 := @caughtexception;

        virtualinvoke $r8.<org.eclipse.jetty.util.MultiException: void add(java.lang.Throwable)>($r6);

        goto label5;

     label9:
        virtualinvoke $r8.<org.eclipse.jetty.util.MultiException: void ifExceptionThrow()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setServer(org.eclipse.jetty.server.Server)
    {
        org.eclipse.jetty.server.Handler $r6;
        java.lang.IllegalStateException $r7;
        org.eclipse.jetty.server.Handler[] $r3, $r5;
        org.eclipse.jetty.util.component.Container $r4;
        int $i0, i1;
        org.eclipse.jetty.server.Server $r1, r2;
        org.eclipse.jetty.server.handler.HandlerCollection r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.handler.HandlerCollection;

        r2 := @parameter0: org.eclipse.jetty.server.Server;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.server.handler.HandlerCollection: boolean isStarted()>();

        if $z0 == 0 goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("STARTED");

        throw $r7;

     label1:
        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Server getServer()>();

        specialinvoke r0.<org.eclipse.jetty.server.handler.AbstractHandlerContainer: void setServer(org.eclipse.jetty.server.Server)>(r2);

        $r3 = virtualinvoke r0.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Handler[] getHandlers()>();

        i1 = 0;

     label2:
        if $r3 == null goto label3;

        $i0 = lengthof $r3;

        if i1 >= $i0 goto label3;

        $r6 = $r3[i1];

        interfaceinvoke $r6.<org.eclipse.jetty.server.Handler: void setServer(org.eclipse.jetty.server.Server)>(r2);

        i1 = i1 + 1;

        goto label2;

     label3:
        if r2 == null goto label4;

        if r2 == $r1 goto label4;

        $r4 = virtualinvoke r2.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        $r5 = r0.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Handler[] _handlers>;

        virtualinvoke $r4.<org.eclipse.jetty.util.component.Container: void update(java.lang.Object,java.lang.Object[],java.lang.Object[],java.lang.String)>(r0, null, $r5, "handler");

     label4:
        return;
    }

    public void addHandler(org.eclipse.jetty.server.Handler)
    {
        org.eclipse.jetty.server.Handler r2;
        java.lang.Object[] $r3;
        org.eclipse.jetty.server.Handler[] $r1, $r4, $r5;
        org.eclipse.jetty.server.handler.HandlerCollection r0;

        r0 := @this: org.eclipse.jetty.server.handler.HandlerCollection;

        r2 := @parameter0: org.eclipse.jetty.server.Handler;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Handler[] getHandlers()>();

        $r3 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object[] addToArray(java.lang.Object[],java.lang.Object,java.lang.Class)>($r1, r2, class "Lorg/eclipse/jetty/server/Handler;");

        $r4 = (org.eclipse.jetty.server.Handler[]) $r3;

        $r5 = (org.eclipse.jetty.server.Handler[]) $r4;

        virtualinvoke r0.<org.eclipse.jetty.server.handler.HandlerCollection: void setHandlers(org.eclipse.jetty.server.Handler[])>($r5);

        return;
    }

    public void removeHandler(org.eclipse.jetty.server.Handler)
    {
        org.eclipse.jetty.server.Handler r2;
        java.lang.Object[] $r3;
        int $i0;
        org.eclipse.jetty.server.Handler[] $r1, $r4, $r5;
        org.eclipse.jetty.server.handler.HandlerCollection r0;

        r0 := @this: org.eclipse.jetty.server.handler.HandlerCollection;

        r2 := @parameter0: org.eclipse.jetty.server.Handler;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Handler[] getHandlers()>();

        if $r1 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $r3 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object[] removeFromArray(java.lang.Object[],java.lang.Object)>($r1, r2);

        $r4 = (org.eclipse.jetty.server.Handler[]) $r3;

        $r5 = (org.eclipse.jetty.server.Handler[]) $r4;

        virtualinvoke r0.<org.eclipse.jetty.server.handler.HandlerCollection: void setHandlers(org.eclipse.jetty.server.Handler[])>($r5);

     label1:
        return;
    }

    protected java.lang.Object expandChildren(java.lang.Object, java.lang.Class)
    {
        org.eclipse.jetty.server.Handler $r3;
        int $i0, i1;
        java.lang.Class r2;
        java.lang.Object r4;
        org.eclipse.jetty.server.Handler[] $r1;
        org.eclipse.jetty.server.handler.HandlerCollection r0;

        r0 := @this: org.eclipse.jetty.server.handler.HandlerCollection;

        r4 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Handler[] getHandlers()>();

        i1 = 0;

     label1:
        if $r1 == null goto label2;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r3 = $r1[i1];

        r4 = virtualinvoke r0.<org.eclipse.jetty.server.handler.HandlerCollection: java.lang.Object expandHandler(org.eclipse.jetty.server.Handler,java.lang.Object,java.lang.Class)>($r3, r4, r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r4;
    }

    public void destroy()
    {
        org.eclipse.jetty.server.Handler r2;
        java.lang.IllegalStateException $r3;
        int i0, i1;
        org.eclipse.jetty.server.Handler[] $r1;
        org.eclipse.jetty.server.handler.HandlerCollection r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.handler.HandlerCollection;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.server.handler.HandlerCollection: boolean isStopped()>();

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("!STOPPED");

        throw $r3;

     label1:
        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Handler[] getChildHandlers()>();

        virtualinvoke r0.<org.eclipse.jetty.server.handler.HandlerCollection: void setHandlers(org.eclipse.jetty.server.Handler[])>(null);

        i0 = lengthof $r1;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r2 = $r1[i1];

        interfaceinvoke r2.<org.eclipse.jetty.server.Handler: void destroy()>();

        i1 = i1 + 1;

        goto label2;

     label3:
        specialinvoke r0.<org.eclipse.jetty.server.handler.AbstractHandlerContainer: void destroy()>();

        return;
    }

    static org.eclipse.jetty.server.Handler[] access$000(org.eclipse.jetty.server.handler.HandlerCollection)
    {
        org.eclipse.jetty.server.Handler[] $r1;
        org.eclipse.jetty.server.handler.HandlerCollection r0;

        r0 := @parameter0: org.eclipse.jetty.server.handler.HandlerCollection;

        $r1 = r0.<org.eclipse.jetty.server.handler.HandlerCollection: org.eclipse.jetty.server.Handler[] _handlers>;

        return $r1;
    }
}
