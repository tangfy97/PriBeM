public class org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser extends org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser
{
    private static final java.lang.String SECURITY_NS;

    public void <init>()
    {
        org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser r0;

        r0 := @this: org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser;

        specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: void <init>()>();

        return;
    }

    public void doParse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder)
    {
        org.springframework.beans.factory.support.AbstractBeanDefinition $r16, $r19;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate $r15, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.Exception $r30;
        org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser r22;
        java.util.List $r17, $r20;
        java.lang.Object[] $r23, $r24, $r25;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r2;
        org.springframework.beans.factory.config.ConstructorArgumentValues $r36;
        org.springframework.beans.factory.xml.ParserContext r4;
        org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder $r37;
        int $i0, $i1;
        org.springframework.beans.factory.config.BeanDefinition $r35, $r41, $r42;
        java.lang.String $r1, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r26, $r27, $r28, $r29, $r32, $r33, $r34;
        java.lang.RuntimeException $r40;
        org.w3c.dom.Element r0, r39;
        java.lang.Object $r21, $r38;

        r22 := @this: org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser;

        r0 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        r2 := @parameter2: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("port");

        virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>("port", $r1);

        $r3 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("host");

        if $r3 == null goto label01;

        $r28 = "";

        $r29 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $z9 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>($r29);

        if $z9 != 0 goto label01;

        virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>("host", $r3);

     label01:
        $r32 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("continuationsEnabled");

        if $r32 == null goto label02;

        $i1 = virtualinvoke $r32.<java.lang.String: int length()>();

        if $i1 <= 0 goto label02;

        virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>("continuationsEnabled", $r32);

     label02:
        $r33 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("maxIdleTime");

        if $r33 == null goto label03;

        $r26 = "";

        $r27 = virtualinvoke $r33.<java.lang.String: java.lang.String trim()>();

        $z8 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r27);

        if $z8 != 0 goto label03;

        virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>("maxIdleTime", $r33);

     label03:
        $r34 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("sendServerVersion");

        if $r34 == null goto label04;

        $i0 = virtualinvoke $r34.<java.lang.String: int length()>();

        if $i0 <= 0 goto label04;

        virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>("sendServerVersion", $r34);

     label04:
        $r35 = virtualinvoke r4.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.config.BeanDefinition getContainingBeanDefinition()>();

        $r36 = interfaceinvoke $r35.<org.springframework.beans.factory.config.BeanDefinition: org.springframework.beans.factory.config.ConstructorArgumentValues getConstructorArgumentValues()>();

        $r37 = virtualinvoke $r36.<org.springframework.beans.factory.config.ConstructorArgumentValues: org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder getArgumentValue(int,java.lang.Class)>(0, class "Lorg/apache/cxf/Bus;");

        $r38 = virtualinvoke $r37.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: java.lang.Object getValue()>();

        virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>("bus", $r38);

     label05:
        r39 = staticinvoke <org.apache.cxf.helpers.DOMUtils: org.w3c.dom.Element getFirstElement(org.w3c.dom.Node)>(r0);

     label06:
        if r39 == null goto label15;

        $r5 = interfaceinvoke r39.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $r6 = "tlsServerParameters";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label07;

        specialinvoke r22.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser: void mapTLSServerParameters(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)>(r39, r2);

        goto label14;

     label07:
        $r7 = "threadingParameters";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label08;

        $r25 = newarray (java.lang.Object)[0];

        virtualinvoke r22.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser: void mapElementToJaxbPropertyFactory(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r39, r2, "threadingParameters", class "Lorg/apache/cxf/transports/http_jetty/configuration/ThreadingParametersType;", class "Lorg/apache/cxf/transport/http_jetty/spring/JettyHTTPServerEngineBeanDefinitionParser;", "createThreadingParameters", $r25);

        goto label14;

     label08:
        $r8 = "tlsServerParametersRef";

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label09;

        $r24 = newarray (java.lang.Object)[0];

        virtualinvoke r22.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser: void mapElementToJaxbPropertyFactory(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r39, r2, "tlsServerParametersRef", class "Lorg/apache/cxf/transports/http_jetty/configuration/TLSServerParametersIdentifiedType;", class "Lorg/apache/cxf/transport/http_jetty/spring/JettyHTTPServerEngineBeanDefinitionParser;", "createTLSServerParametersConfigRef", $r24);

        goto label14;

     label09:
        $r9 = "threadingParametersRef";

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z3 == 0 goto label10;

        $r23 = newarray (java.lang.Object)[0];

        virtualinvoke r22.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser: void mapElementToJaxbPropertyFactory(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r39, r2, "threadingParametersRef", class "Lorg/apache/cxf/transports/http_jetty/configuration/ThreadingParametersIdentifiedType;", class "Lorg/apache/cxf/transport/http_jetty/spring/JettyHTTPServerEngineBeanDefinitionParser;", "createThreadingParametersRef", $r23);

        goto label14;

     label10:
        $r10 = "connector";

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z4 == 0 goto label11;

        $r18 = virtualinvoke r4.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate getDelegate()>();

        $r19 = virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getBeanDefinition()>();

        $r41 = (org.springframework.beans.factory.config.BeanDefinition) $r19;

        $r20 = virtualinvoke $r18.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.util.List parseListElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition)>(r39, $r41);

        $r21 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(0);

        virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>("connector", $r21);

        goto label14;

     label11:
        $r11 = "handlers";

        $z5 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z5 == 0 goto label12;

        $r15 = virtualinvoke r4.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate getDelegate()>();

        $r16 = virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getBeanDefinition()>();

        $r42 = (org.springframework.beans.factory.config.BeanDefinition) $r16;

        $r17 = virtualinvoke $r15.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.util.List parseListElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition)>(r39, $r42);

        virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>("handlers", $r17);

        goto label14;

     label12:
        $r12 = "sessionSupport";

        $z6 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z6 != 0 goto label13;

        $r14 = "reuseAddress";

        $z7 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z7 == 0 goto label14;

     label13:
        $r13 = interfaceinvoke r39.<org.w3c.dom.Element: java.lang.String getTextContent()>();

        virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>($r5, $r13);

     label14:
        r39 = staticinvoke <org.apache.cxf.helpers.DOMUtils: org.w3c.dom.Element getNextElement(org.w3c.dom.Element)>(r39);

        goto label06;

     label15:
        goto label17;

     label16:
        $r30 := @caughtexception;

        $r40 = new java.lang.RuntimeException;

        specialinvoke $r40.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Could not process configuration.", $r30);

        throw $r40;

     label17:
        virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setLazyInit(boolean)>(0);

        return;

        catch java.lang.Exception from label05 to label15 with label16;
    }

    private void mapTLSServerParameters(org.w3c.dom.Element, org.springframework.beans.factory.support.BeanDefinitionBuilder)
    {
        org.springframework.beans.factory.support.AbstractBeanDefinition $r4, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser r21;
        org.springframework.beans.factory.support.BeanDefinitionBuilder $r0, $r3, r5;
        org.w3c.dom.Attr r35;
        short $s1;
        org.w3c.dom.Node $r29, r36;
        int $i0, $i2, $i3, i4;
        org.w3c.dom.NamedNodeMap $r2;
        java.lang.String $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r30, $r31, $r32, $r33, $r34;
        org.w3c.dom.Element r1, $r10, $r22, $r23, $r24, $r25, $r26, $r27, $r28;

        r21 := @this: org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        r5 := @parameter1: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        $r0 = staticinvoke <org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder rootBeanDefinition(java.lang.Class)>(class "Lorg/apache/cxf/configuration/jsse/TLSServerParametersConfig$TLSServerParametersTypeInternal;");

        $r2 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        i4 = 0;

     label01:
        $i0 = interfaceinvoke $r2.<org.w3c.dom.NamedNodeMap: int getLength()>();

        if i4 >= $i0 goto label04;

        $r29 = interfaceinvoke $r2.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i4);

        r35 = (org.w3c.dom.Attr) $r29;

        $r30 = interfaceinvoke r35.<org.w3c.dom.Attr: java.lang.String getNamespaceURI()>();

        if $r30 != null goto label03;

        $r31 = interfaceinvoke r35.<org.w3c.dom.Attr: java.lang.String getLocalName()>();

        $r32 = "jsseProvider";

        $z9 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        if $z9 != 0 goto label02;

        $r34 = "secureSocketProtocol";

        $z10 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        if $z10 == 0 goto label03;

     label02:
        $r33 = interfaceinvoke r35.<org.w3c.dom.Attr: java.lang.String getValue()>();

        virtualinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>($r31, $r33);

     label03:
        i4 = i4 + 1;

        goto label01;

     label04:
        r36 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

     label05:
        if r36 == null goto label18;

        $s1 = interfaceinvoke r36.<org.w3c.dom.Node: short getNodeType()>();

        if 1 != $s1 goto label06;

        $r7 = "http://cxf.apache.org/configuration/security";

        $r8 = interfaceinvoke r36.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label07;

     label06:
        r36 = interfaceinvoke r36.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label05;

     label07:
        $r9 = interfaceinvoke r36.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $r10 = (org.w3c.dom.Element) r36;

        $r11 = interfaceinvoke $r10.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("ref");

        $r12 = "keyManagers";

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 == 0 goto label09;

        if $r11 == null goto label08;

        $i3 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i3 <= 0 goto label08;

        virtualinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyReference(java.lang.String,java.lang.String)>("keyManagersRef", $r11);

        goto label17;

     label08:
        $r28 = (org.w3c.dom.Element) r36;

        virtualinvoke r21.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser: void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)>($r28, $r0, $r9, class "Lorg/apache/cxf/configuration/security/KeyManagersType;");

        goto label17;

     label09:
        $r13 = "trustManagers";

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label11;

        if $r11 == null goto label10;

        $i2 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i2 <= 0 goto label10;

        virtualinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyReference(java.lang.String,java.lang.String)>("trustManagersRef", $r11);

        goto label17;

     label10:
        $r27 = (org.w3c.dom.Element) r36;

        virtualinvoke r21.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser: void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)>($r27, $r0, $r9, class "Lorg/apache/cxf/configuration/security/TrustManagersType;");

        goto label17;

     label11:
        $r14 = "cipherSuites";

        $z3 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z3 == 0 goto label12;

        $r26 = (org.w3c.dom.Element) r36;

        virtualinvoke r21.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser: void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)>($r26, $r0, $r9, class "Lorg/apache/cxf/configuration/security/CipherSuites;");

        goto label17;

     label12:
        $r15 = "cipherSuitesFilter";

        $z4 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z4 == 0 goto label13;

        $r25 = (org.w3c.dom.Element) r36;

        virtualinvoke r21.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser: void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)>($r25, $r0, $r9, class "Lorg/apache/cxf/configuration/security/FiltersType;");

        goto label17;

     label13:
        $r16 = "secureRandomParameters";

        $z5 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z5 == 0 goto label14;

        $r24 = (org.w3c.dom.Element) r36;

        virtualinvoke r21.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser: void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)>($r24, $r0, $r9, class "Lorg/apache/cxf/configuration/security/SecureRandomParameters;");

        goto label17;

     label14:
        $r17 = "clientAuthentication";

        $z6 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z6 == 0 goto label15;

        $r23 = (org.w3c.dom.Element) r36;

        virtualinvoke r21.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser: void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)>($r23, $r0, $r9, class "Lorg/apache/cxf/configuration/security/ClientAuthentication;");

        goto label17;

     label15:
        $r18 = "certConstraints";

        $z7 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z7 == 0 goto label16;

        $r22 = (org.w3c.dom.Element) r36;

        virtualinvoke r21.<org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser: void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)>($r22, $r0, $r9, class "Lorg/apache/cxf/configuration/security/CertificateConstraintsType;");

        goto label17;

     label16:
        $r19 = "certAlias";

        $z8 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z8 == 0 goto label17;

        $r20 = interfaceinvoke r36.<org.w3c.dom.Node: java.lang.String getTextContent()>();

        virtualinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>($r9, $r20);

     label17:
        r36 = interfaceinvoke r36.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label05;

     label18:
        $r3 = staticinvoke <org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder rootBeanDefinition(java.lang.Class)>(class "Lorg/apache/cxf/configuration/jsse/TLSServerParametersConfig;");

        $r4 = virtualinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getBeanDefinition()>();

        virtualinvoke $r3.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addConstructorArgValue(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r3.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getBeanDefinition()>();

        virtualinvoke r5.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>("tlsServerParameters", $r6);

        return;
    }

    private static org.apache.cxf.transport.http_jetty.ThreadingParameters toThreadingParameters(org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersType)
    {
        org.apache.cxf.transport.http_jetty.ThreadingParameters $r0;
        java.lang.Integer $r2, $r3, $r4, $r5;
        int $i0, $i1;
        org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersType r1;

        r1 := @parameter0: org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersType;

        $r0 = new org.apache.cxf.transport.http_jetty.ThreadingParameters;

        specialinvoke $r0.<org.apache.cxf.transport.http_jetty.ThreadingParameters: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersType: java.lang.Integer getMaxThreads()>();

        if $r2 == null goto label1;

        $r5 = virtualinvoke r1.<org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersType: java.lang.Integer getMaxThreads()>();

        $i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        virtualinvoke $r0.<org.apache.cxf.transport.http_jetty.ThreadingParameters: void setMaxThreads(int)>($i1);

     label1:
        $r3 = virtualinvoke r1.<org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersType: java.lang.Integer getMinThreads()>();

        if $r3 == null goto label2;

        $r4 = virtualinvoke r1.<org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersType: java.lang.Integer getMinThreads()>();

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        virtualinvoke $r0.<org.apache.cxf.transport.http_jetty.ThreadingParameters: void setMinThreads(int)>($i0);

     label2:
        return $r0;
    }

    protected boolean shouldGenerateId()
    {
        org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser r0;

        r0 := @this: org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser;

        return 1;
    }

    protected java.lang.Class getBeanClass(org.w3c.dom.Element)
    {
        org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser r0;
        org.w3c.dom.Element r1;

        r0 := @this: org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        return class "Lorg/apache/cxf/transport/http_jetty/spring/JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine;";
    }

    public static org.apache.cxf.configuration.jsse.TLSServerParametersConfig createTLSServerParametersConfig(java.lang.String, javax.xml.bind.JAXBContext) throws java.security.GeneralSecurityException, java.io.IOException
    {
        org.apache.cxf.configuration.security.TLSServerParametersType r3;
        java.lang.Object $r2;
        java.lang.String r0;
        javax.xml.bind.JAXBContext r1;
        org.apache.cxf.configuration.jsse.TLSServerParametersConfig $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: javax.xml.bind.JAXBContext;

        $r2 = staticinvoke <org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser: java.lang.Object unmarshalFactoryString(java.lang.String,javax.xml.bind.JAXBContext,java.lang.Class)>(r0, r1, class "Lorg/apache/cxf/configuration/security/TLSServerParametersType;");

        r3 = (org.apache.cxf.configuration.security.TLSServerParametersType) $r2;

        $r4 = new org.apache.cxf.configuration.jsse.TLSServerParametersConfig;

        specialinvoke $r4.<org.apache.cxf.configuration.jsse.TLSServerParametersConfig: void <init>(org.apache.cxf.configuration.security.TLSServerParametersType)>(r3);

        return $r4;
    }

    public static java.lang.String createTLSServerParametersConfigRef(java.lang.String, javax.xml.bind.JAXBContext) throws java.security.GeneralSecurityException, java.io.IOException
    {
        java.lang.Object $r2;
        java.lang.String r0, $r4;
        org.apache.cxf.transports.http_jetty.configuration.TLSServerParametersIdentifiedType r3;
        javax.xml.bind.JAXBContext r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: javax.xml.bind.JAXBContext;

        $r2 = staticinvoke <org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser: java.lang.Object unmarshalFactoryString(java.lang.String,javax.xml.bind.JAXBContext,java.lang.Class)>(r0, r1, class "Lorg/apache/cxf/transports/http_jetty/configuration/TLSServerParametersIdentifiedType;");

        r3 = (org.apache.cxf.transports.http_jetty.configuration.TLSServerParametersIdentifiedType) $r2;

        $r4 = virtualinvoke r3.<org.apache.cxf.transports.http_jetty.configuration.TLSServerParametersIdentifiedType: java.lang.String getId()>();

        return $r4;
    }

    public static org.apache.cxf.transport.http_jetty.ThreadingParameters createThreadingParameters(java.lang.String, javax.xml.bind.JAXBContext)
    {
        org.apache.cxf.transport.http_jetty.ThreadingParameters $r4;
        java.lang.Object $r2;
        java.lang.String r0;
        javax.xml.bind.JAXBContext r1;
        org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersType r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: javax.xml.bind.JAXBContext;

        $r2 = staticinvoke <org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser: java.lang.Object unmarshalFactoryString(java.lang.String,javax.xml.bind.JAXBContext,java.lang.Class)>(r0, r1, class "Lorg/apache/cxf/transports/http_jetty/configuration/ThreadingParametersType;");

        r3 = (org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersType) $r2;

        $r4 = staticinvoke <org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser: org.apache.cxf.transport.http_jetty.ThreadingParameters toThreadingParameters(org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersType)>(r3);

        return $r4;
    }

    public static java.lang.String createThreadingParametersRef(java.lang.String, javax.xml.bind.JAXBContext)
    {
        java.lang.Object $r2;
        java.lang.String r0, $r4;
        org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersIdentifiedType r3;
        javax.xml.bind.JAXBContext r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: javax.xml.bind.JAXBContext;

        $r2 = staticinvoke <org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser: java.lang.Object unmarshalFactoryString(java.lang.String,javax.xml.bind.JAXBContext,java.lang.Class)>(r0, r1, class "Lorg/apache/cxf/transports/http_jetty/configuration/ThreadingParametersIdentifiedType;");

        r3 = (org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersIdentifiedType) $r2;

        $r4 = virtualinvoke r3.<org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersIdentifiedType: java.lang.String getId()>();

        return $r4;
    }

    public static void <clinit>()
    {
        <org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser: java.lang.String SECURITY_NS> = "http://cxf.apache.org/configuration/security";

        return;
    }
}
