class kodkod.util.nodes.PrettyPrinter$1 extends java.lang.Object
{
    static final int[] $SwitchMap$kodkod$ast$operator$IntOperator;
    static final int[] $SwitchMap$kodkod$ast$operator$ExprCastOperator;
    static final int[] $SwitchMap$kodkod$ast$RelationPredicate$Name;

    static void <clinit>()
    {
        kodkod.ast.operator.ExprCastOperator $r10, $r12;
        java.lang.NoSuchFieldError $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35;
        int[] $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25;
        kodkod.ast.RelationPredicate$Name $r2, $r4, $r6;
        kodkod.ast.operator.IntOperator $r16, $r18, $r20, $r22, $r24;
        kodkod.ast.operator.ExprCastOperator[] $r8;
        kodkod.ast.operator.IntOperator[] $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        kodkod.ast.RelationPredicate$Name[] $r0;

        $r0 = staticinvoke <kodkod.ast.RelationPredicate$Name: kodkod.ast.RelationPredicate$Name[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <kodkod.util.nodes.PrettyPrinter$1: int[] $SwitchMap$kodkod$ast$RelationPredicate$Name> = $r1;

     label01:
        $r3 = <kodkod.util.nodes.PrettyPrinter$1: int[] $SwitchMap$kodkod$ast$RelationPredicate$Name>;

        $r2 = <kodkod.ast.RelationPredicate$Name: kodkod.ast.RelationPredicate$Name ACYCLIC>;

        $i1 = virtualinvoke $r2.<kodkod.ast.RelationPredicate$Name: int ordinal()>();

        $r3[$i1] = 1;

     label02:
        goto label04;

     label03:
        $r35 := @caughtexception;

     label04:
        $r5 = <kodkod.util.nodes.PrettyPrinter$1: int[] $SwitchMap$kodkod$ast$RelationPredicate$Name>;

        $r4 = <kodkod.ast.RelationPredicate$Name: kodkod.ast.RelationPredicate$Name FUNCTION>;

        $i2 = virtualinvoke $r4.<kodkod.ast.RelationPredicate$Name: int ordinal()>();

        $r5[$i2] = 2;

     label05:
        goto label07;

     label06:
        $r34 := @caughtexception;

     label07:
        $r7 = <kodkod.util.nodes.PrettyPrinter$1: int[] $SwitchMap$kodkod$ast$RelationPredicate$Name>;

        $r6 = <kodkod.ast.RelationPredicate$Name: kodkod.ast.RelationPredicate$Name TOTAL_ORDERING>;

        $i3 = virtualinvoke $r6.<kodkod.ast.RelationPredicate$Name: int ordinal()>();

        $r7[$i3] = 3;

     label08:
        goto label10;

     label09:
        $r33 := @caughtexception;

     label10:
        $r8 = staticinvoke <kodkod.ast.operator.ExprCastOperator: kodkod.ast.operator.ExprCastOperator[] values()>();

        $i4 = lengthof $r8;

        $r9 = newarray (int)[$i4];

        <kodkod.util.nodes.PrettyPrinter$1: int[] $SwitchMap$kodkod$ast$operator$ExprCastOperator> = $r9;

     label11:
        $r11 = <kodkod.util.nodes.PrettyPrinter$1: int[] $SwitchMap$kodkod$ast$operator$ExprCastOperator>;

        $r10 = <kodkod.ast.operator.ExprCastOperator: kodkod.ast.operator.ExprCastOperator SUM>;

        $i5 = virtualinvoke $r10.<kodkod.ast.operator.ExprCastOperator: int ordinal()>();

        $r11[$i5] = 1;

     label12:
        goto label14;

     label13:
        $r32 := @caughtexception;

     label14:
        $r13 = <kodkod.util.nodes.PrettyPrinter$1: int[] $SwitchMap$kodkod$ast$operator$ExprCastOperator>;

        $r12 = <kodkod.ast.operator.ExprCastOperator: kodkod.ast.operator.ExprCastOperator CARDINALITY>;

        $i6 = virtualinvoke $r12.<kodkod.ast.operator.ExprCastOperator: int ordinal()>();

        $r13[$i6] = 2;

     label15:
        goto label17;

     label16:
        $r31 := @caughtexception;

     label17:
        $r14 = staticinvoke <kodkod.ast.operator.IntOperator: kodkod.ast.operator.IntOperator[] values()>();

        $i7 = lengthof $r14;

        $r15 = newarray (int)[$i7];

        <kodkod.util.nodes.PrettyPrinter$1: int[] $SwitchMap$kodkod$ast$operator$IntOperator> = $r15;

     label18:
        $r17 = <kodkod.util.nodes.PrettyPrinter$1: int[] $SwitchMap$kodkod$ast$operator$IntOperator>;

        $r16 = <kodkod.ast.operator.IntOperator: kodkod.ast.operator.IntOperator DIVIDE>;

        $i8 = virtualinvoke $r16.<kodkod.ast.operator.IntOperator: int ordinal()>();

        $r17[$i8] = 1;

     label19:
        goto label21;

     label20:
        $r30 := @caughtexception;

     label21:
        $r19 = <kodkod.util.nodes.PrettyPrinter$1: int[] $SwitchMap$kodkod$ast$operator$IntOperator>;

        $r18 = <kodkod.ast.operator.IntOperator: kodkod.ast.operator.IntOperator MODULO>;

        $i9 = virtualinvoke $r18.<kodkod.ast.operator.IntOperator: int ordinal()>();

        $r19[$i9] = 2;

     label22:
        goto label24;

     label23:
        $r29 := @caughtexception;

     label24:
        $r21 = <kodkod.util.nodes.PrettyPrinter$1: int[] $SwitchMap$kodkod$ast$operator$IntOperator>;

        $r20 = <kodkod.ast.operator.IntOperator: kodkod.ast.operator.IntOperator SHA>;

        $i10 = virtualinvoke $r20.<kodkod.ast.operator.IntOperator: int ordinal()>();

        $r21[$i10] = 3;

     label25:
        goto label27;

     label26:
        $r28 := @caughtexception;

     label27:
        $r23 = <kodkod.util.nodes.PrettyPrinter$1: int[] $SwitchMap$kodkod$ast$operator$IntOperator>;

        $r22 = <kodkod.ast.operator.IntOperator: kodkod.ast.operator.IntOperator SHL>;

        $i11 = virtualinvoke $r22.<kodkod.ast.operator.IntOperator: int ordinal()>();

        $r23[$i11] = 4;

     label28:
        goto label30;

     label29:
        $r27 := @caughtexception;

     label30:
        $r25 = <kodkod.util.nodes.PrettyPrinter$1: int[] $SwitchMap$kodkod$ast$operator$IntOperator>;

        $r24 = <kodkod.ast.operator.IntOperator: kodkod.ast.operator.IntOperator SHR>;

        $i12 = virtualinvoke $r24.<kodkod.ast.operator.IntOperator: int ordinal()>();

        $r25[$i12] = 5;

     label31:
        goto label33;

     label32:
        $r26 := @caughtexception;

     label33:
        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label04 to label05 with label06;
        catch java.lang.NoSuchFieldError from label07 to label08 with label09;
        catch java.lang.NoSuchFieldError from label11 to label12 with label13;
        catch java.lang.NoSuchFieldError from label14 to label15 with label16;
        catch java.lang.NoSuchFieldError from label18 to label19 with label20;
        catch java.lang.NoSuchFieldError from label21 to label22 with label23;
        catch java.lang.NoSuchFieldError from label24 to label25 with label26;
        catch java.lang.NoSuchFieldError from label27 to label28 with label29;
        catch java.lang.NoSuchFieldError from label30 to label31 with label32;
    }
}
