public class org.apache.ws.commons.schema.extensions.DefaultExtensionSerializer extends java.lang.Object implements org.apache.ws.commons.schema.extensions.ExtensionSerializer
{

    public void <init>()
    {
        org.apache.ws.commons.schema.extensions.DefaultExtensionSerializer r0;

        r0 := @this: org.apache.ws.commons.schema.extensions.DefaultExtensionSerializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void serialize(org.apache.ws.commons.schema.XmlSchemaObject, java.lang.Class, org.w3c.dom.Node)
    {
        org.w3c.dom.Attr $r17;
        short $s0;
        org.w3c.dom.Document $r3;
        java.util.Map $r1, r20, r21;
        org.w3c.dom.Node r2, $r8, $r9, $r15, $r16;
        boolean $z0, $z1, $z2, $z3;
        org.apache.ws.commons.schema.extensions.DefaultExtensionSerializer r18;
        java.util.Iterator $r6, $r12;
        java.util.Collection $r5, $r11;
        org.w3c.dom.Element $r13;
        org.apache.ws.commons.schema.XmlSchemaObject r0;
        java.lang.Object $r4, $r7, $r10, $r14;
        java.lang.Class r19;

        r18 := @this: org.apache.ws.commons.schema.extensions.DefaultExtensionSerializer;

        r0 := @parameter0: org.apache.ws.commons.schema.XmlSchemaObject;

        r19 := @parameter1: java.lang.Class;

        r2 := @parameter2: org.w3c.dom.Node;

        $r1 = virtualinvoke r0.<org.apache.ws.commons.schema.XmlSchemaObject: java.util.Map getMetaInfoMap()>();

        $r3 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>("EXTERNAL_ATTRIBUTES");

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("EXTERNAL_ATTRIBUTES");

        r20 = (java.util.Map) $r10;

        $r11 = interfaceinvoke r20.<java.util.Map: java.util.Collection values()>();

        $r12 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        $s0 = interfaceinvoke r2.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label1;

        $r13 = (org.w3c.dom.Element) r2;

        $r14 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (org.w3c.dom.Node) $r14;

        $r16 = interfaceinvoke $r3.<org.w3c.dom.Document: org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean)>($r15, 1);

        $r17 = (org.w3c.dom.Attr) $r16;

        interfaceinvoke $r13.<org.w3c.dom.Element: org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr)>($r17);

        goto label1;

     label2:
        $z1 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>("EXTERNAL_ELEMENTS");

        if $z1 == 0 goto label4;

        $r4 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("EXTERNAL_ELEMENTS");

        r21 = (java.util.Map) $r4;

        $r5 = interfaceinvoke r21.<java.util.Map: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.w3c.dom.Node) $r7;

        $r9 = interfaceinvoke $r3.<org.w3c.dom.Document: org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean)>($r8, 1);

        interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r9);

        goto label3;

     label4:
        return;
    }
}
