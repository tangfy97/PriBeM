public class com.mongodb.DBCallback extends org.bson.BasicBSONCallback
{
    public static com.mongodb.DBCallback$Factory FACTORY;
    private java.lang.String _lastName;
    private boolean _lastArray;
    final com.mongodb.DBCollection _collection;
    final com.mongodb.DB _db;
    static final java.util.logging.Logger LOGGER;

    public void <init>(com.mongodb.DBCollection)
    {
        com.mongodb.DBCallback r0;
        com.mongodb.DBCollection r1, $r2, $r3;
        com.mongodb.DB $r4;

        r0 := @this: com.mongodb.DBCallback;

        r1 := @parameter0: com.mongodb.DBCollection;

        specialinvoke r0.<org.bson.BasicBSONCallback: void <init>()>();

        r0.<com.mongodb.DBCallback: boolean _lastArray> = 0;

        r0.<com.mongodb.DBCallback: com.mongodb.DBCollection _collection> = r1;

        $r2 = r0.<com.mongodb.DBCallback: com.mongodb.DBCollection _collection>;

        if $r2 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r3 = r0.<com.mongodb.DBCallback: com.mongodb.DBCollection _collection>;

        $r4 = virtualinvoke $r3.<com.mongodb.DBCollection: com.mongodb.DB getDB()>();

     label2:
        r0.<com.mongodb.DBCallback: com.mongodb.DB _db> = $r4;

        return;
    }

    public void gotDBRef(java.lang.String, java.lang.String, org.bson.types.ObjectId)
    {
        com.mongodb.DBPointer $r5;
        com.mongodb.DBCollection $r11;
        org.bson.BSONObject $r3, $r6, $r10;
        com.mongodb.DBCallback r2;
        com.mongodb.DBObject $r9;
        org.bson.types.ObjectId r0, $r1;
        com.mongodb.DB $r8;
        java.lang.String r4, r7;
        boolean $z0;

        r2 := @this: com.mongodb.DBCallback;

        r4 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        r0 := @parameter2: org.bson.types.ObjectId;

        $r1 = <com.mongodb.Bytes: org.bson.types.ObjectId COLLECTION_REF_ID>;

        $z0 = virtualinvoke r0.<org.bson.types.ObjectId: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r10 = virtualinvoke r2.<com.mongodb.DBCallback: org.bson.BSONObject cur()>();

        $r11 = r2.<com.mongodb.DBCallback: com.mongodb.DBCollection _collection>;

        interfaceinvoke $r10.<org.bson.BSONObject: java.lang.Object put(java.lang.String,java.lang.Object)>(r4, $r11);

        goto label2;

     label1:
        $r3 = virtualinvoke r2.<com.mongodb.DBCallback: org.bson.BSONObject cur()>();

        $r5 = new com.mongodb.DBPointer;

        $r6 = virtualinvoke r2.<com.mongodb.DBCallback: org.bson.BSONObject cur()>();

        $r9 = (com.mongodb.DBObject) $r6;

        $r8 = r2.<com.mongodb.DBCallback: com.mongodb.DB _db>;

        specialinvoke $r5.<com.mongodb.DBPointer: void <init>(com.mongodb.DBObject,java.lang.String,com.mongodb.DB,java.lang.String,org.bson.types.ObjectId)>($r9, r4, $r8, r7, r0);

        interfaceinvoke $r3.<org.bson.BSONObject: java.lang.Object put(java.lang.String,java.lang.Object)>(r4, $r5);

     label2:
        return;
    }

    public void objectStart(boolean, java.lang.String)
    {
        java.lang.String r1;
        com.mongodb.DBCallback r0;
        boolean z0;

        r0 := @this: com.mongodb.DBCallback;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        r0.<com.mongodb.DBCallback: java.lang.String _lastName> = r1;

        r0.<com.mongodb.DBCallback: boolean _lastArray> = z0;

        specialinvoke r0.<org.bson.BasicBSONCallback: void objectStart(boolean,java.lang.String)>(z0, r1);

        return;
    }

    public java.lang.Object objectDone()
    {
        org.bson.BSONObject r2, $r3;
        com.mongodb.DBCallback r0;
        com.mongodb.DBRef $r4;
        java.lang.Object $r1, $r7;
        com.mongodb.DB $r5;
        java.lang.String $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: com.mongodb.DBCallback;

        $r1 = specialinvoke r0.<org.bson.BasicBSONCallback: java.lang.Object objectDone()>();

        r2 = (org.bson.BSONObject) $r1;

        $z0 = r0.<com.mongodb.DBCallback: boolean _lastArray>;

        if $z0 != 0 goto label1;

        $z1 = interfaceinvoke r2.<org.bson.BSONObject: boolean containsKey(java.lang.String)>("$ref");

        if $z1 == 0 goto label1;

        $z2 = interfaceinvoke r2.<org.bson.BSONObject: boolean containsKey(java.lang.String)>("$id");

        if $z2 == 0 goto label1;

        $r3 = virtualinvoke r0.<com.mongodb.DBCallback: org.bson.BSONObject cur()>();

        $r6 = r0.<com.mongodb.DBCallback: java.lang.String _lastName>;

        $r4 = new com.mongodb.DBRef;

        $r5 = r0.<com.mongodb.DBCallback: com.mongodb.DB _db>;

        specialinvoke $r4.<com.mongodb.DBRef: void <init>(com.mongodb.DB,org.bson.BSONObject)>($r5, r2);

        $r7 = interfaceinvoke $r3.<org.bson.BSONObject: java.lang.Object put(java.lang.String,java.lang.Object)>($r6, $r4);

        return $r7;

     label1:
        return r2;
    }

    public org.bson.BSONObject create()
    {
        com.mongodb.DBCallback r0;
        com.mongodb.DBObject $r1;

        r0 := @this: com.mongodb.DBCallback;

        $r1 = specialinvoke r0.<com.mongodb.DBCallback: com.mongodb.DBObject _create(java.util.List)>(null);

        return $r1;
    }

    public org.bson.BSONObject create(boolean, java.util.List)
    {
        java.util.List r1;
        com.mongodb.DBCallback r0;
        com.mongodb.DBObject $r2;
        com.mongodb.BasicDBList $r3;
        boolean z0;

        r0 := @this: com.mongodb.DBCallback;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.util.List;

        if z0 == 0 goto label1;

        $r3 = new com.mongodb.BasicDBList;

        specialinvoke $r3.<com.mongodb.BasicDBList: void <init>()>();

        return $r3;

     label1:
        $r2 = specialinvoke r0.<com.mongodb.DBCallback: com.mongodb.DBObject _create(java.util.List)>(r1);

        return $r2;
    }

    private com.mongodb.DBObject _create(java.util.List)
    {
        com.mongodb.CommandResult $r6;
        com.mongodb.DBCallback r0;
        com.mongodb.DBObject $r8;
        java.lang.InstantiationException $r30;
        boolean $z0;
        java.lang.IllegalAccessException $r18;
        java.util.logging.Logger $r20, $r32;
        java.util.List r11;
        java.lang.StringBuilder $r13, $r19, $r22, $r23, $r26, $r27, $r28, $r31, $r34, $r35, $r38, $r39, $r40;
        com.mongodb.MongoInternalException $r25, $r37;
        java.util.logging.Level $r21, $r33;
        int $i0, $i1, i2;
        java.lang.String $r5, $r15, $r17, $r24, $r29, $r36, $r41;
        com.mongodb.DBCollection $r1, $r2, $r4, $r9, $r12, $r14;
        com.mongodb.BasicDBObject $r3;
        java.lang.Object $r7, $r16;
        java.lang.Class $r10, r42;

        r0 := @this: com.mongodb.DBCallback;

        r11 := @parameter0: java.util.List;

        r42 = null;

        $r1 = r0.<com.mongodb.DBCallback: com.mongodb.DBCollection _collection>;

        if $r1 == null goto label06;

        $r9 = r0.<com.mongodb.DBCallback: com.mongodb.DBCollection _collection>;

        $r10 = $r9.<com.mongodb.DBCollection: java.lang.Class _objectClass>;

        if $r10 == null goto label06;

        if r11 == null goto label01;

        $i0 = interfaceinvoke r11.<java.util.List: int size()>();

        if $i0 != 0 goto label02;

     label01:
        $r12 = r0.<com.mongodb.DBCallback: com.mongodb.DBCollection _collection>;

        r42 = $r12.<com.mongodb.DBCollection: java.lang.Class _objectClass>;

        goto label06;

     label02:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        i2 = 0;

     label03:
        $i1 = interfaceinvoke r11.<java.util.List: int size()>();

        if i2 >= $i1 goto label05;

        if i2 <= 0 goto label04;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

     label04:
        $r16 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(i2);

        $r17 = (java.lang.String) $r16;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        i2 = i2 + 1;

        goto label03;

     label05:
        $r14 = r0.<com.mongodb.DBCallback: com.mongodb.DBCollection _collection>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        r42 = virtualinvoke $r14.<com.mongodb.DBCollection: java.lang.Class getInternalClass(java.lang.String)>($r15);

     label06:
        if r42 == null goto label11;

     label07:
        $r7 = virtualinvoke r42.<java.lang.Class: java.lang.Object newInstance()>();

        $r8 = (com.mongodb.DBObject) $r7;

     label08:
        return $r8;

     label09:
        $r30 := @caughtexception;

        $r32 = <com.mongodb.DBCallback: java.util.logging.Logger LOGGER>;

        $r33 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t create a: ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r32.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r33, $r36, $r30);

        $r37 = new com.mongodb.MongoInternalException;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t instantiate a : ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<com.mongodb.MongoInternalException: void <init>(java.lang.String,java.lang.Throwable)>($r41, $r30);

        throw $r37;

     label10:
        $r18 := @caughtexception;

        $r20 = <com.mongodb.DBCallback: java.util.logging.Logger LOGGER>;

        $r21 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t create a: ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r21, $r24, $r18);

        $r25 = new com.mongodb.MongoInternalException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t instantiate a : ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<com.mongodb.MongoInternalException: void <init>(java.lang.String,java.lang.Throwable)>($r29, $r18);

        throw $r25;

     label11:
        $r2 = r0.<com.mongodb.DBCallback: com.mongodb.DBCollection _collection>;

        if $r2 == null goto label12;

        $r4 = r0.<com.mongodb.DBCallback: com.mongodb.DBCollection _collection>;

        $r5 = $r4.<com.mongodb.DBCollection: java.lang.String _name>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("$cmd");

        if $z0 == 0 goto label12;

        $r6 = new com.mongodb.CommandResult;

        specialinvoke $r6.<com.mongodb.CommandResult: void <init>()>();

        return $r6;

     label12:
        $r3 = new com.mongodb.BasicDBObject;

        specialinvoke $r3.<com.mongodb.BasicDBObject: void <init>()>();

        return $r3;

        catch java.lang.InstantiationException from label07 to label08 with label09;
        catch java.lang.IllegalAccessException from label07 to label08 with label10;
    }

    com.mongodb.DBObject dbget()
    {
        java.lang.Object $r1;
        com.mongodb.DBCallback r0;
        com.mongodb.DBObject r2;

        r0 := @this: com.mongodb.DBCallback;

        $r1 = virtualinvoke r0.<com.mongodb.DBCallback: java.lang.Object get()>();

        r2 = (com.mongodb.DBObject) $r1;

        return r2;
    }

    public void reset()
    {
        com.mongodb.DBCallback r0;

        r0 := @this: com.mongodb.DBCallback;

        r0.<com.mongodb.DBCallback: java.lang.String _lastName> = null;

        r0.<com.mongodb.DBCallback: boolean _lastArray> = 0;

        specialinvoke r0.<org.bson.BasicBSONCallback: void reset()>();

        return;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r1;
        com.mongodb.DBCallback$DefaultFactory $r0;

        $r0 = new com.mongodb.DBCallback$DefaultFactory;

        specialinvoke $r0.<com.mongodb.DBCallback$DefaultFactory: void <init>()>();

        <com.mongodb.DBCallback: com.mongodb.DBCallback$Factory FACTORY> = $r0;

        $r1 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>("com.mongo.DECODING");

        <com.mongodb.DBCallback: java.util.logging.Logger LOGGER> = $r1;

        return;
    }
}
