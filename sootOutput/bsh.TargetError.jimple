public class bsh.TargetError extends bsh.EvalError
{
    java.lang.Throwable target;
    boolean inNativeCode;

    public void <init>(java.lang.String, java.lang.Throwable, bsh.SimpleNode, bsh.CallStack, boolean)
    {
        java.lang.Throwable r4;
        bsh.TargetError r0;
        bsh.SimpleNode r2;
        java.lang.String r1;
        bsh.CallStack r3;
        boolean z0;

        r0 := @this: bsh.TargetError;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Throwable;

        r2 := @parameter2: bsh.SimpleNode;

        r3 := @parameter3: bsh.CallStack;

        z0 := @parameter4: boolean;

        specialinvoke r0.<bsh.EvalError: void <init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)>(r1, r2, r3);

        r0.<bsh.TargetError: java.lang.Throwable target> = r4;

        r0.<bsh.TargetError: boolean inNativeCode> = z0;

        return;
    }

    public void <init>(java.lang.Throwable, bsh.SimpleNode, bsh.CallStack)
    {
        java.lang.Throwable r1;
        bsh.TargetError r0;
        bsh.SimpleNode r2;
        bsh.CallStack r3;

        r0 := @this: bsh.TargetError;

        r1 := @parameter0: java.lang.Throwable;

        r2 := @parameter1: bsh.SimpleNode;

        r3 := @parameter2: bsh.CallStack;

        specialinvoke r0.<bsh.TargetError: void <init>(java.lang.String,java.lang.Throwable,bsh.SimpleNode,bsh.CallStack,boolean)>("TargetError", r1, r2, r3, 0);

        return;
    }

    public java.lang.Throwable getTarget()
    {
        java.lang.Throwable $r1, $r2, $r3, $r5;
        bsh.TargetError r0;
        boolean $z0;
        java.lang.reflect.InvocationTargetException $r4;

        r0 := @this: bsh.TargetError;

        $r1 = r0.<bsh.TargetError: java.lang.Throwable target>;

        $z0 = $r1 instanceof java.lang.reflect.InvocationTargetException;

        if $z0 == 0 goto label1;

        $r3 = r0.<bsh.TargetError: java.lang.Throwable target>;

        $r4 = (java.lang.reflect.InvocationTargetException) $r3;

        $r5 = virtualinvoke $r4.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        return $r5;

     label1:
        $r2 = r0.<bsh.TargetError: java.lang.Throwable target>;

        return $r2;
    }

    public java.lang.String toString()
    {
        java.lang.Throwable $r5;
        bsh.TargetError r1;
        java.lang.StringBuffer $r0, $r3, $r4, $r7;
        java.lang.String $r2, $r6, $r8;

        r1 := @this: bsh.TargetError;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = specialinvoke r1.<bsh.EvalError: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nTarget exception: ");

        $r5 = r1.<bsh.TargetError: java.lang.Throwable target>;

        $r6 = virtualinvoke r1.<bsh.TargetError: java.lang.String printTargetError(java.lang.Throwable)>($r5);

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    public void printStackTrace()
    {
        java.io.PrintStream $r1;
        bsh.TargetError r0;

        r0 := @this: bsh.TargetError;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke r0.<bsh.TargetError: void printStackTrace(boolean,java.io.PrintStream)>(0, $r1);

        return;
    }

    public void printStackTrace(java.io.PrintStream)
    {
        java.io.PrintStream r1;
        bsh.TargetError r0;

        r0 := @this: bsh.TargetError;

        r1 := @parameter0: java.io.PrintStream;

        virtualinvoke r0.<bsh.TargetError: void printStackTrace(boolean,java.io.PrintStream)>(0, r1);

        return;
    }

    public void printStackTrace(boolean, java.io.PrintStream)
    {
        java.io.PrintStream r1;
        java.lang.Throwable $r2;
        bsh.TargetError r0;
        boolean z0;

        r0 := @this: bsh.TargetError;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.io.PrintStream;

        if z0 == 0 goto label1;

        specialinvoke r0.<bsh.EvalError: void printStackTrace(java.io.PrintStream)>(r1);

        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>("--- Target Stack Trace ---");

     label1:
        $r2 = r0.<bsh.TargetError: java.lang.Throwable target>;

        virtualinvoke $r2.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>(r1);

        return;
    }

    public java.lang.String printTargetError(java.lang.Throwable)
    {
        java.lang.Throwable $r1, r6;
        bsh.TargetError r0;
        java.lang.StringBuffer $r3, $r4, $r5, $r8;
        java.lang.String $r2, $r7, r9;
        boolean $z0;

        r0 := @this: bsh.TargetError;

        r6 := @parameter0: java.lang.Throwable;

        $r1 = r0.<bsh.TargetError: java.lang.Throwable target>;

        $r2 = virtualinvoke $r1.<java.lang.Throwable: java.lang.String toString()>();

        r9 = $r2;

        $z0 = staticinvoke <bsh.Capabilities: boolean canGenerateInterfaces()>();

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r7 = virtualinvoke r0.<bsh.TargetError: java.lang.String xPrintTargetError(java.lang.Throwable)>(r6);

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        return r9;
    }

    public java.lang.String xPrintTargetError(java.lang.Throwable)
    {
        java.lang.Throwable r1;
        bsh.TargetError r11;
        bsh.EvalError $r4;
        bsh.Interpreter $r0;
        java.lang.StringBuffer $r6, $r7, $r9;
        java.lang.Object $r2;
        java.lang.String $r3, $r8, $r10;
        bsh.InterpreterError $r5;

        r11 := @this: bsh.TargetError;

        r1 := @parameter0: java.lang.Throwable;

        $r0 = new bsh.Interpreter;

        specialinvoke $r0.<bsh.Interpreter: void <init>()>();

     label1:
        virtualinvoke $r0.<bsh.Interpreter: void set(java.lang.String,java.lang.Object)>("target", r1);

        $r2 = virtualinvoke $r0.<bsh.Interpreter: java.lang.Object eval(java.lang.String)>("import java.lang.reflect.UndeclaredThrowableException;String result=\"\";while ( target instanceof UndeclaredThrowableException ) {\ttarget=target.getUndeclaredThrowable(); \tresult+=\"Nested: \"+target.toString();}return result;");

        $r3 = (java.lang.String) $r2;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new bsh.InterpreterError;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("xprintarget: ");

        $r8 = virtualinvoke $r4.<bsh.EvalError: java.lang.String toString()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<bsh.InterpreterError: void <init>(java.lang.String)>($r10);

        throw $r5;

        catch bsh.EvalError from label1 to label2 with label3;
    }

    public boolean inNativeCode()
    {
        bsh.TargetError r0;
        boolean $z0;

        r0 := @this: bsh.TargetError;

        $z0 = r0.<bsh.TargetError: boolean inNativeCode>;

        return $z0;
    }
}
