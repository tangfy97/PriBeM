public class org.jdesktop.swingx.painter.effects.NeonBorderEffect extends org.jdesktop.swingx.painter.effects.AbstractAreaEffect
{
    private java.awt.Color edgeColor;
    private java.awt.Color centerColor;
    private org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition borderPosition;

    public void <init>()
    {
        java.awt.Color $r1, $r2;
        org.jdesktop.swingx.painter.effects.NeonBorderEffect r0;

        r0 := @this: org.jdesktop.swingx.painter.effects.NeonBorderEffect;

        $r2 = <java.awt.Color: java.awt.Color GREEN>;

        $r1 = <java.awt.Color: java.awt.Color WHITE>;

        specialinvoke r0.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: void <init>(java.awt.Color,java.awt.Color,int)>($r2, $r1, 10);

        return;
    }

    public void <init>(java.awt.Color, java.awt.Color, int)
    {
        java.awt.Color r2, r3;
        org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition $r1;
        int i0;
        java.awt.Point $r4;
        org.jdesktop.swingx.painter.effects.NeonBorderEffect r0;

        r0 := @this: org.jdesktop.swingx.painter.effects.NeonBorderEffect;

        r2 := @parameter0: java.awt.Color;

        r3 := @parameter1: java.awt.Color;

        i0 := @parameter2: int;

        specialinvoke r0.<org.jdesktop.swingx.painter.effects.AbstractAreaEffect: void <init>()>();

        $r1 = <org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition: org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition Outside>;

        r0.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition borderPosition> = $r1;

        virtualinvoke r0.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: void setEffectWidth(int)>(i0);

        virtualinvoke r0.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: void setEdgeColor(java.awt.Color)>(r2);

        virtualinvoke r0.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: void setCenterColor(java.awt.Color)>(r3);

        virtualinvoke r0.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: void setRenderInsideShape(boolean)>(0);

        virtualinvoke r0.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: void setShouldFillShape(boolean)>(0);

        $r4 = new java.awt.Point;

        specialinvoke $r4.<java.awt.Point: void <init>(int,int)>(0, 0);

        virtualinvoke r0.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: void setOffset(java.awt.geom.Point2D)>($r4);

        return;
    }

    protected void paintBorderGlow(java.awt.Graphics2D, java.awt.Shape, int, int)
    {
        java.awt.Color $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r20;
        java.awt.geom.Point2D $r2, $r3, $r7, $r8;
        org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition $r5, $r6, $r9, $r10;
        byte $b4;
        java.awt.Shape r14;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        java.awt.BasicStroke $r22;
        java.awt.AlphaComposite $r4;
        java.awt.Graphics2D r0;
        int $i0, $i1, $i2, $i3, $i5, i6, i7, i8, i9, $i10;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        org.jdesktop.swingx.painter.effects.NeonBorderEffect r1;

        r1 := @this: org.jdesktop.swingx.painter.effects.NeonBorderEffect;

        r0 := @parameter0: java.awt.Graphics2D;

        r14 := @parameter1: java.awt.Shape;

        i6 := @parameter2: int;

        i7 := @parameter3: int;

        $r2 = virtualinvoke r1.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: java.awt.geom.Point2D getOffset()>();

        $d0 = virtualinvoke $r2.<java.awt.geom.Point2D: double getX()>();

        $r3 = virtualinvoke r1.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: java.awt.geom.Point2D getOffset()>();

        $d1 = virtualinvoke $r3.<java.awt.geom.Point2D: double getY()>();

        virtualinvoke r0.<java.awt.Graphics2D: void translate(double,double)>($d0, $d1);

        $r4 = <java.awt.AlphaComposite: java.awt.AlphaComposite SrcOver>;

        virtualinvoke r0.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r4);

        $i0 = virtualinvoke r1.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: int getEffectWidth()>();

        i8 = $i0;

        $r6 = r1.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition borderPosition>;

        $r5 = <org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition: org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition Centered>;

        if $r6 != $r5 goto label1;

        i8 = $i0 / 2;

     label1:
        i9 = 0;

     label2:
        if i9 >= i8 goto label6;

        $i1 = i8 + 1;

        $i2 = $i1 - i9;

        f0 = (float) $i2;

        $i3 = i8 / 2;

        f1 = (float) $i3;

        $r10 = r1.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition borderPosition>;

        $r9 = <org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition: org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition Centered>;

        if $r10 != $r9 goto label3;

        $i5 = i8 - i9;

        $f10 = (float) $i5;

        $f9 = (float) i8;

        $f11 = $f10 / $f9;

        $r18 = virtualinvoke r1.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: java.awt.Color getEdgeColor()>();

        $r19 = virtualinvoke r1.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: java.awt.Color getCenterColor()>();

        $r20 = virtualinvoke r1.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: java.awt.Color interpolateColor(float,java.awt.Color,java.awt.Color)>($f11, $r18, $r19);

        virtualinvoke r0.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r20);

        goto label5;

     label3:
        $f2 = (float) i9;

        $b4 = $f2 cmpg f1;

        $i10 = (int) $b4;

        if $i10 >= 0 goto label4;

        $f6 = (float) i9;

        $f7 = f1 - $f6;

        $f8 = $f7 / f1;

        $r15 = virtualinvoke r1.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: java.awt.Color getEdgeColor()>();

        $r16 = virtualinvoke r1.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: java.awt.Color getCenterColor()>();

        $r17 = virtualinvoke r1.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: java.awt.Color interpolateColor(float,java.awt.Color,java.awt.Color)>($f8, $r15, $r16);

        virtualinvoke r0.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r17);

        goto label5;

     label4:
        $f3 = (float) i9;

        $f4 = $f3 - f1;

        $f5 = $f4 / f1;

        $r11 = virtualinvoke r1.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: java.awt.Color getEdgeColor()>();

        $r12 = virtualinvoke r1.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: java.awt.Color getCenterColor()>();

        $r13 = virtualinvoke r1.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: java.awt.Color interpolateColor(float,java.awt.Color,java.awt.Color)>($f5, $r11, $r12);

        virtualinvoke r0.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r13);

     label5:
        $r22 = new java.awt.BasicStroke;

        specialinvoke $r22.<java.awt.BasicStroke: void <init>(float,int,int)>(f0, 1, 1);

        virtualinvoke r0.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r22);

        virtualinvoke r0.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r14);

        i9 = i9 + 1;

        goto label2;

     label6:
        $r7 = virtualinvoke r1.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: java.awt.geom.Point2D getOffset()>();

        $d2 = virtualinvoke $r7.<java.awt.geom.Point2D: double getX()>();

        $d3 = neg $d2;

        $r8 = virtualinvoke r1.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: java.awt.geom.Point2D getOffset()>();

        $d4 = virtualinvoke $r8.<java.awt.geom.Point2D: double getY()>();

        $d5 = neg $d4;

        virtualinvoke r0.<java.awt.Graphics2D: void translate(double,double)>($d3, $d5);

        return;
    }

    protected java.awt.Color interpolateColor(float, java.awt.Color, java.awt.Color)
    {
        java.awt.Color r0, r2, $r5;
        float[] $r1, $r3, r4;
        int i0;
        float $f0, $f1, $f2, $f3, $f4, $f5, f6, $f7, $f8, $f9, $f10;
        org.jdesktop.swingx.painter.effects.NeonBorderEffect r6;

        r6 := @this: org.jdesktop.swingx.painter.effects.NeonBorderEffect;

        f6 := @parameter0: float;

        r0 := @parameter1: java.awt.Color;

        r2 := @parameter2: java.awt.Color;

        $r1 = virtualinvoke r0.<java.awt.Color: float[] getRGBComponents(float[])>(null);

        $r3 = virtualinvoke r2.<java.awt.Color: float[] getRGBComponents(float[])>(null);

        r4 = newarray (float)[4];

        i0 = 0;

     label1:
        if i0 >= 4 goto label2;

        $f5 = $r1[i0];

        $f4 = $r3[i0];

        $f7 = $f5 - $f4;

        $f9 = $f7 * f6;

        $f8 = $r3[i0];

        $f10 = $f9 + $f8;

        r4[i0] = $f10;

        i0 = i0 + 1;

        goto label1;

     label2:
        $r5 = new java.awt.Color;

        $f3 = r4[0];

        $f2 = r4[1];

        $f1 = r4[2];

        $f0 = r4[3];

        specialinvoke $r5.<java.awt.Color: void <init>(float,float,float,float)>($f3, $f2, $f1, $f0);

        return $r5;
    }

    public java.awt.Color getEdgeColor()
    {
        java.awt.Color $r1;
        org.jdesktop.swingx.painter.effects.NeonBorderEffect r0;

        r0 := @this: org.jdesktop.swingx.painter.effects.NeonBorderEffect;

        $r1 = r0.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: java.awt.Color edgeColor>;

        return $r1;
    }

    public void setEdgeColor(java.awt.Color)
    {
        java.awt.Color r1;
        org.jdesktop.swingx.painter.effects.NeonBorderEffect r0;

        r0 := @this: org.jdesktop.swingx.painter.effects.NeonBorderEffect;

        r1 := @parameter0: java.awt.Color;

        r0.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: java.awt.Color edgeColor> = r1;

        return;
    }

    public java.awt.Color getCenterColor()
    {
        java.awt.Color $r1;
        org.jdesktop.swingx.painter.effects.NeonBorderEffect r0;

        r0 := @this: org.jdesktop.swingx.painter.effects.NeonBorderEffect;

        $r1 = r0.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: java.awt.Color centerColor>;

        return $r1;
    }

    public void setCenterColor(java.awt.Color)
    {
        java.awt.Color r1;
        org.jdesktop.swingx.painter.effects.NeonBorderEffect r0;

        r0 := @this: org.jdesktop.swingx.painter.effects.NeonBorderEffect;

        r1 := @parameter0: java.awt.Color;

        r0.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: java.awt.Color centerColor> = r1;

        return;
    }

    public org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition getBorderPosition()
    {
        org.jdesktop.swingx.painter.effects.NeonBorderEffect r0;
        org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition $r1;

        r0 := @this: org.jdesktop.swingx.painter.effects.NeonBorderEffect;

        $r1 = r0.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition borderPosition>;

        return $r1;
    }

    public void setBorderPosition(org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition)
    {
        int[] $r2;
        org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition r1, $r3;
        int $i0, $i1;
        org.jdesktop.swingx.painter.effects.NeonBorderEffect r0;

        r0 := @this: org.jdesktop.swingx.painter.effects.NeonBorderEffect;

        r1 := @parameter0: org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition;

        r0.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition borderPosition> = r1;

        $r2 = <org.jdesktop.swingx.painter.effects.NeonBorderEffect$1: int[] $SwitchMap$org$jdesktop$swingx$painter$effects$NeonBorderEffect$BorderPosition>;

        $i0 = virtualinvoke r1.<org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        virtualinvoke r0.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: void setShapeMasked(boolean)>(0);

        goto label4;

     label2:
        virtualinvoke r0.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: void setShapeMasked(boolean)>(1);

        virtualinvoke r0.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: void setRenderInsideShape(boolean)>(1);

        goto label4;

     label3:
        virtualinvoke r0.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: void setShapeMasked(boolean)>(1);

        virtualinvoke r0.<org.jdesktop.swingx.painter.effects.NeonBorderEffect: void setRenderInsideShape(boolean)>(0);

     label4:
        $r3 = <org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition: org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition Centered>;

        if r1 != $r3 goto label5;

     label5:
        return;
    }
}
