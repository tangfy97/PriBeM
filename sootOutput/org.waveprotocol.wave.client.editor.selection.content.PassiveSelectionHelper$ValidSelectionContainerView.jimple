class org.waveprotocol.wave.client.editor.selection.content.PassiveSelectionHelper$ValidSelectionContainerView extends org.waveprotocol.wave.model.document.util.FilteredView
{

    public void <init>(org.waveprotocol.wave.client.editor.content.ContentView)
    {
        org.waveprotocol.wave.client.editor.content.ContentView r1;
        org.waveprotocol.wave.client.editor.selection.content.PassiveSelectionHelper$ValidSelectionContainerView r0;

        r0 := @this: org.waveprotocol.wave.client.editor.selection.content.PassiveSelectionHelper$ValidSelectionContainerView;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentView;

        specialinvoke r0.<org.waveprotocol.wave.model.document.util.FilteredView: void <init>(org.waveprotocol.wave.model.document.ReadableDocument)>(r1);

        return;
    }

    protected org.waveprotocol.wave.model.document.util.FilteredView$Skip getSkipLevel(org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode r0;
        org.waveprotocol.wave.client.editor.selection.content.PassiveSelectionHelper$ValidSelectionContainerView r2;
        java.lang.Object $r3;
        org.waveprotocol.wave.model.document.util.FilteredView$Skip $r1, $r4, $r5;
        boolean $z0, $z1;

        r2 := @this: org.waveprotocol.wave.client.editor.selection.content.PassiveSelectionHelper$ValidSelectionContainerView;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentNode;

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentNode: boolean isRendered()>();

        if $z0 == 0 goto label4;

        $r3 = virtualinvoke r2.<org.waveprotocol.wave.client.editor.selection.content.PassiveSelectionHelper$ValidSelectionContainerView: java.lang.Object asText(java.lang.Object)>(r0);

        if $r3 == null goto label1;

        $r4 = <org.waveprotocol.wave.model.document.util.FilteredView$Skip: org.waveprotocol.wave.model.document.util.FilteredView$Skip DEEP>;

        return $r4;

     label1:
        $z1 = staticinvoke <org.waveprotocol.wave.client.editor.selection.content.PassiveSelectionHelper: boolean access$000(org.waveprotocol.wave.client.editor.content.ContentNode)>(r0);

        if $z1 == 0 goto label2;

        $r5 = <org.waveprotocol.wave.model.document.util.FilteredView$Skip: org.waveprotocol.wave.model.document.util.FilteredView$Skip SHALLOW>;

        goto label3;

     label2:
        $r5 = <org.waveprotocol.wave.model.document.util.FilteredView$Skip: org.waveprotocol.wave.model.document.util.FilteredView$Skip NONE>;

     label3:
        return $r5;

     label4:
        $r1 = <org.waveprotocol.wave.model.document.util.FilteredView$Skip: org.waveprotocol.wave.model.document.util.FilteredView$Skip DEEP>;

        return $r1;
    }

    protected volatile org.waveprotocol.wave.model.document.util.FilteredView$Skip getSkipLevel(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode $r2;
        org.waveprotocol.wave.client.editor.selection.content.PassiveSelectionHelper$ValidSelectionContainerView r0;
        java.lang.Object r1;
        org.waveprotocol.wave.model.document.util.FilteredView$Skip $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.selection.content.PassiveSelectionHelper$ValidSelectionContainerView;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentNode) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.selection.content.PassiveSelectionHelper$ValidSelectionContainerView: org.waveprotocol.wave.model.document.util.FilteredView$Skip getSkipLevel(org.waveprotocol.wave.client.editor.content.ContentNode)>($r2);

        return $r3;
    }
}
