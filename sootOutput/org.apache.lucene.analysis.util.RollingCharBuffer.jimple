public final class org.apache.lucene.analysis.util.RollingCharBuffer extends java.lang.Object
{
    private java.io.Reader reader;
    private char[] buffer;
    private int nextWrite;
    private int nextPos;
    private int count;
    private boolean end;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.apache.lucene.analysis.util.RollingCharBuffer r0;
        char[] $r1;

        r0 := @this: org.apache.lucene.analysis.util.RollingCharBuffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (char)[512];

        r0.<org.apache.lucene.analysis.util.RollingCharBuffer: char[] buffer> = $r1;

        return;
    }

    public void reset(java.io.Reader)
    {
        org.apache.lucene.analysis.util.RollingCharBuffer r0;
        java.io.Reader r1;

        r0 := @this: org.apache.lucene.analysis.util.RollingCharBuffer;

        r1 := @parameter0: java.io.Reader;

        r0.<org.apache.lucene.analysis.util.RollingCharBuffer: java.io.Reader reader> = r1;

        r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextPos> = 0;

        r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextWrite> = 0;

        r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int count> = 0;

        r0.<org.apache.lucene.analysis.util.RollingCharBuffer: boolean end> = 0;

        return;
    }

    public int get(int) throws java.io.IOException
    {
        java.io.Reader $r16;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r25;
        java.lang.AssertionError $r24, $r26;
        java.lang.String $r10;
        char[] $r1, $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r21, $r22, r23;
        org.apache.lucene.analysis.util.RollingCharBuffer r0;
        boolean $z0, $z1, $z2;
        int i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i42, $i44, $i46, $i47, $i48;
        char $c3, c21;

        r0 := @this: org.apache.lucene.analysis.util.RollingCharBuffer;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextPos>;

        if i0 != $i1 goto label5;

        $z2 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: boolean end>;

        if $z2 == 0 goto label1;

        $i42 = (int) -1;

        return $i42;

     label1:
        $i11 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int count>;

        $r12 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: char[] buffer>;

        $i10 = lengthof $r12;

        if $i11 != $i10 goto label2;

        $i29 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int count>;

        $i30 = 1 + $i29;

        $i31 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>($i30, 2);

        r23 = newarray (char)[$i31];

        $r19 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: char[] buffer>;

        $i35 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextWrite>;

        $r18 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: char[] buffer>;

        $i33 = lengthof $r18;

        $i32 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextWrite>;

        $i34 = $i33 - $i32;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r19, $i35, r23, 0, $i34);

        $r21 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: char[] buffer>;

        $r20 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: char[] buffer>;

        $i37 = lengthof $r20;

        $i36 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextWrite>;

        $i39 = $i37 - $i36;

        $i38 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextWrite>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r21, 0, r23, $i39, $i38);

        $r22 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: char[] buffer>;

        $i40 = lengthof $r22;

        r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextWrite> = $i40;

        r0.<org.apache.lucene.analysis.util.RollingCharBuffer: char[] buffer> = r23;

     label2:
        $i13 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextWrite>;

        $r13 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: char[] buffer>;

        $i12 = lengthof $r13;

        if $i13 != $i12 goto label3;

        r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextWrite> = 0;

     label3:
        $r14 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: char[] buffer>;

        $i16 = lengthof $r14;

        $i15 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int count>;

        $i14 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextWrite>;

        $i17 = staticinvoke <java.lang.Math: int max(int,int)>($i15, $i14);

        $i28 = $i16 - $i17;

        $r16 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: java.io.Reader reader>;

        $r15 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: char[] buffer>;

        $i18 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextWrite>;

        $i19 = virtualinvoke $r16.<java.io.Reader: int read(char[],int,int)>($r15, $i18, $i28);

        $i44 = (int) -1;

        if $i19 != $i44 goto label4;

        r0.<org.apache.lucene.analysis.util.RollingCharBuffer: boolean end> = 1;

        $i46 = (int) -1;

        return $i46;

     label4:
        $r17 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: char[] buffer>;

        $i20 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextWrite>;

        c21 = $r17[$i20];

        $i22 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextWrite>;

        $i23 = $i22 + $i19;

        r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextWrite> = $i23;

        $i24 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int count>;

        $i25 = $i24 + $i19;

        r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int count> = $i25;

        $i26 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextPos>;

        $i27 = $i26 + $i19;

        r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextPos> = $i27;

        $i47 = (int) c21;

        return $i47;

     label5:
        $z0 = <org.apache.lucene.analysis.util.RollingCharBuffer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label6;

        $i9 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextPos>;

        if i0 < $i9 goto label6;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label6:
        $z1 = <org.apache.lucene.analysis.util.RollingCharBuffer: boolean $assertionsDisabled>;

        if $z1 != 0 goto label7;

        $i4 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextPos>;

        $i6 = $i4 - i0;

        $i5 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int count>;

        if $i6 <= $i5 goto label7;

        $r26 = new java.lang.AssertionError;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nextPos=");

        $i7 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextPos>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pos=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" count=");

        $i8 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int count>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.AssertionError: void <init>(java.lang.Object)>($r10);

        throw $r26;

     label7:
        $r1 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: char[] buffer>;

        $i2 = specialinvoke r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int getIndex(int)>(i0);

        $c3 = $r1[$i2];

        $i48 = (int) $c3;

        return $i48;
    }

    private boolean inBounds(int)
    {
        org.apache.lucene.analysis.util.RollingCharBuffer r0;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.util.RollingCharBuffer;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextPos>;

        if i0 >= $i1 goto label1;

        $i3 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextPos>;

        $i2 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int count>;

        $i4 = $i3 - $i2;

        if i0 < $i4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private int getIndex(int)
    {
        org.apache.lucene.analysis.util.RollingCharBuffer r0;
        java.lang.AssertionError $r2;
        int i0, $i1, $i2, $i3, $i4, i5;
        char[] $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.util.RollingCharBuffer;

        i0 := @parameter0: int;

        $i3 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextWrite>;

        $i1 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextPos>;

        $i2 = $i1 - i0;

        i5 = $i3 - $i2;

        if i5 >= 0 goto label1;

        $r1 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: char[] buffer>;

        $i4 = lengthof $r1;

        i5 = i5 + $i4;

        $z0 = <org.apache.lucene.analysis.util.RollingCharBuffer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i5 >= 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        return i5;
    }

    public char[] get(int, int)
    {
        org.apache.lucene.analysis.util.RollingCharBuffer r0;
        java.lang.AssertionError $r8, $r15;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.String $r14;
        boolean $z0, $z1, $z2;
        char[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13;

        r0 := @this: org.apache.lucene.analysis.util.RollingCharBuffer;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $z0 = <org.apache.lucene.analysis.util.RollingCharBuffer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i2 > 0 goto label1;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label1:
        $z1 = <org.apache.lucene.analysis.util.RollingCharBuffer: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z2 = specialinvoke r0.<org.apache.lucene.analysis.util.RollingCharBuffer: boolean inBounds(int)>(i0);

        if $z2 != 0 goto label2;

        $r8 = new java.lang.AssertionError;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("posStart=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" length=");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>($r14);

        throw $r8;

     label2:
        $i1 = specialinvoke r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int getIndex(int)>(i0);

        $i3 = i0 + i2;

        $i4 = specialinvoke r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int getIndex(int)>($i3);

        $r7 = newarray (char)[i2];

        if $i4 < $i1 goto label3;

        $r5 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: char[] buffer>;

        $i9 = lengthof $r5;

        if i2 >= $i9 goto label3;

        $r6 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: char[] buffer>;

        $i11 = $i4 - $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, $i1, $r7, 0, $i11);

        goto label4;

     label3:
        $r1 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: char[] buffer>;

        $i5 = lengthof $r1;

        $i10 = $i5 - $i1;

        $r2 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: char[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, $r7, 0, $i10);

        $r4 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: char[] buffer>;

        $r3 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: char[] buffer>;

        $i6 = lengthof $r3;

        $i8 = $i6 - $i1;

        $i7 = i2 - $i10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r7, $i8, $i7);

     label4:
        return $r7;
    }

    public void freeBefore(int)
    {
        org.apache.lucene.analysis.util.RollingCharBuffer r0;
        java.lang.AssertionError $r2, $r10, $r17, $r18;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r9, $r16;
        boolean $z0, $z1, $z2, $z3;
        char[] $r1, $r7;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r8, $r11, $r12, $r13, $r14, $r15;

        r0 := @this: org.apache.lucene.analysis.util.RollingCharBuffer;

        i0 := @parameter0: int;

        $z0 = <org.apache.lucene.analysis.util.RollingCharBuffer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i0 >= 0 goto label1;

        $r18 = new java.lang.AssertionError;

        specialinvoke $r18.<java.lang.AssertionError: void <init>()>();

        throw $r18;

     label1:
        $z1 = <org.apache.lucene.analysis.util.RollingCharBuffer: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $i6 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextPos>;

        if i0 <= $i6 goto label2;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>()>();

        throw $r17;

     label2:
        $i1 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int nextPos>;

        $i7 = $i1 - i0;

        $z2 = <org.apache.lucene.analysis.util.RollingCharBuffer: boolean $assertionsDisabled>;

        if $z2 != 0 goto label3;

        $i4 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int count>;

        if $i7 <= $i4 goto label3;

        $r10 = new java.lang.AssertionError;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("newCount=");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" count=");

        $i5 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int count>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>($r16);

        throw $r10;

     label3:
        $z3 = <org.apache.lucene.analysis.util.RollingCharBuffer: boolean $assertionsDisabled>;

        if $z3 != 0 goto label4;

        $r1 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: char[] buffer>;

        $i2 = lengthof $r1;

        if $i7 <= $i2 goto label4;

        $r2 = new java.lang.AssertionError;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("newCount=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" buf.length=");

        $r7 = r0.<org.apache.lucene.analysis.util.RollingCharBuffer: char[] buffer>;

        $i3 = lengthof $r7;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>($r9);

        throw $r2;

     label4:
        r0.<org.apache.lucene.analysis.util.RollingCharBuffer: int count> = $i7;

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/analysis/util/RollingCharBuffer;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.analysis.util.RollingCharBuffer: boolean $assertionsDisabled> = $z1;

        return;
    }
}
