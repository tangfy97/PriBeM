public class org.apache.zookeeper.server.util.KerberosUtil extends java.lang.Object
{

    public void <init>()
    {
        org.apache.zookeeper.server.util.KerberosUtil r0;

        r0 := @this: org.apache.zookeeper.server.util.KerberosUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getDefaultRealm() throws java.lang.ClassNotFoundException, java.lang.NoSuchMethodException, java.lang.IllegalArgumentException, java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException
    {
        java.lang.Object[] $r3, $r7;
        java.lang.Class[] $r1, $r5;
        java.lang.Object $r4, $r8;
        java.lang.Class r10;
        java.lang.String $r0, $r9;
        java.lang.reflect.Method $r2, $r6;
        boolean $z0;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.vendor");

        $z0 = virtualinvoke $r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("IBM");

        if $z0 == 0 goto label1;

        r10 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.ibm.security.krb5.internal.Config");

        goto label2;

     label1:
        r10 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("sun.security.krb5.Config");

     label2:
        $r1 = newarray (java.lang.Class)[0];

        $r2 = virtualinvoke r10.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getInstance", $r1);

        $r3 = newarray (java.lang.Object)[0];

        $r4 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r10, $r3);

        $r5 = newarray (java.lang.Class)[0];

        $r6 = virtualinvoke r10.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getDefaultRealm", $r5);

        $r7 = newarray (java.lang.Object)[0];

        $r8 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, $r7);

        $r9 = (java.lang.String) $r8;

        return $r9;
    }
}
