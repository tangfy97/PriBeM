final class org.apache.lucene.index.SegmentCoreReaders extends java.lang.Object
{
    private final java.util.concurrent.atomic.AtomicInteger ref;
    final org.apache.lucene.index.FieldInfos fieldInfos;
    final org.apache.lucene.codecs.FieldsProducer fields;
    final org.apache.lucene.codecs.DocValuesProducer dvProducer;
    final org.apache.lucene.codecs.DocValuesProducer normsProducer;
    final int termsIndexDivisor;
    private final org.apache.lucene.index.SegmentReader owner;
    final org.apache.lucene.codecs.StoredFieldsReader fieldsReaderOrig;
    final org.apache.lucene.codecs.TermVectorsReader termVectorsReaderOrig;
    final org.apache.lucene.store.CompoundFileDirectory cfsReader;
    final org.apache.lucene.util.CloseableThreadLocal fieldsReaderLocal;
    final org.apache.lucene.util.CloseableThreadLocal termVectorsLocal;
    final org.apache.lucene.util.CloseableThreadLocal docValuesLocal;
    final org.apache.lucene.util.CloseableThreadLocal normsLocal;
    private final java.util.Set coreClosedListeners;
    static final boolean $assertionsDisabled;

    void <init>(org.apache.lucene.index.SegmentReader, org.apache.lucene.store.Directory, org.apache.lucene.index.SegmentInfoPerCommit, org.apache.lucene.store.IOContext, int) throws java.io.IOException
    {
        org.apache.lucene.codecs.DocValuesProducer $r34, $r35, $r38, $r39;
        org.apache.lucene.index.SegmentInfoPerCommit r8;
        org.apache.lucene.index.FieldInfos $r18, $r22, $r25, $r30, $r50, $r55, $r57;
        org.apache.lucene.store.IOContext $r16, r21;
        org.apache.lucene.index.SegmentInfo $r9, $r11, $r15, $r23, $r27, $r31, $r44, $r51, $r54;
        java.util.Set $r7;
        org.apache.lucene.codecs.PostingsFormat $r19;
        java.lang.Throwable $r48;
        java.lang.AssertionError $r36, $r40, $r42;
        org.apache.lucene.store.CompoundFileDirectory $r43;
        java.lang.String $r17, $r45, $r46;
        java.util.LinkedHashSet $r6;
        org.apache.lucene.codecs.DocValuesFormat $r37;
        org.apache.lucene.codecs.FieldsProducer $r24, $r41;
        org.apache.lucene.codecs.StoredFieldsFormat $r53;
        org.apache.lucene.index.SegmentCoreReaders$4 $r5;
        org.apache.lucene.codecs.FieldInfosReader $r14;
        org.apache.lucene.codecs.TermVectorsReader $r32;
        org.apache.lucene.index.SegmentCoreReaders$2 $r3;
        java.util.concurrent.atomic.AtomicInteger $r1;
        org.apache.lucene.index.SegmentCoreReaders$3 $r4;
        org.apache.lucene.index.SegmentCoreReaders$1 $r2;
        org.apache.lucene.store.Directory r12, r49;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.lucene.index.SegmentReadState $r20;
        org.apache.lucene.codecs.TermVectorsFormat $r29;
        org.apache.lucene.codecs.FieldInfosFormat $r13;
        org.apache.lucene.codecs.NormsFormat $r33;
        org.apache.lucene.index.SegmentCoreReaders r0;
        org.apache.lucene.codecs.StoredFieldsReader $r56;
        int i0;
        org.apache.lucene.index.SegmentReader r26;
        java.lang.IllegalArgumentException $r47;
        org.apache.lucene.codecs.Codec $r10, $r28, $r52;

        r0 := @this: org.apache.lucene.index.SegmentCoreReaders;

        r26 := @parameter0: org.apache.lucene.index.SegmentReader;

        r12 := @parameter1: org.apache.lucene.store.Directory;

        r8 := @parameter2: org.apache.lucene.index.SegmentInfoPerCommit;

        r21 := @parameter3: org.apache.lucene.store.IOContext;

        i0 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(1);

        r0.<org.apache.lucene.index.SegmentCoreReaders: java.util.concurrent.atomic.AtomicInteger ref> = $r1;

        $r2 = new org.apache.lucene.index.SegmentCoreReaders$1;

        specialinvoke $r2.<org.apache.lucene.index.SegmentCoreReaders$1: void <init>(org.apache.lucene.index.SegmentCoreReaders)>(r0);

        r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.util.CloseableThreadLocal fieldsReaderLocal> = $r2;

        $r3 = new org.apache.lucene.index.SegmentCoreReaders$2;

        specialinvoke $r3.<org.apache.lucene.index.SegmentCoreReaders$2: void <init>(org.apache.lucene.index.SegmentCoreReaders)>(r0);

        r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.util.CloseableThreadLocal termVectorsLocal> = $r3;

        $r4 = new org.apache.lucene.index.SegmentCoreReaders$3;

        specialinvoke $r4.<org.apache.lucene.index.SegmentCoreReaders$3: void <init>(org.apache.lucene.index.SegmentCoreReaders)>(r0);

        r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.util.CloseableThreadLocal docValuesLocal> = $r4;

        $r5 = new org.apache.lucene.index.SegmentCoreReaders$4;

        specialinvoke $r5.<org.apache.lucene.index.SegmentCoreReaders$4: void <init>(org.apache.lucene.index.SegmentCoreReaders)>(r0);

        r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.util.CloseableThreadLocal normsLocal> = $r5;

        $r6 = new java.util.LinkedHashSet;

        specialinvoke $r6.<java.util.LinkedHashSet: void <init>()>();

        $r7 = staticinvoke <java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>($r6);

        r0.<org.apache.lucene.index.SegmentCoreReaders: java.util.Set coreClosedListeners> = $r7;

        if i0 != 0 goto label01;

        $r47 = new java.lang.IllegalArgumentException;

        specialinvoke $r47.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("indexDivisor must be < 0 (don\'t load terms index) or greater than 0 (got 0)");

        throw $r47;

     label01:
        $r9 = r8.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r10 = virtualinvoke $r9.<org.apache.lucene.index.SegmentInfo: org.apache.lucene.codecs.Codec getCodec()>();

     label02:
        $r11 = r8.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $z0 = virtualinvoke $r11.<org.apache.lucene.index.SegmentInfo: boolean getUseCompoundFile()>();

        if $z0 == 0 goto label03;

        $r43 = new org.apache.lucene.store.CompoundFileDirectory;

        $r44 = r8.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r45 = $r44.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r46 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r45, "", "cfs");

        specialinvoke $r43.<org.apache.lucene.store.CompoundFileDirectory: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.store.IOContext,boolean)>(r12, $r46, r21, 0);

        r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.store.CompoundFileDirectory cfsReader> = $r43;

        r49 = $r43;

        goto label04;

     label03:
        r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.store.CompoundFileDirectory cfsReader> = null;

        r49 = r12;

     label04:
        $r13 = virtualinvoke $r10.<org.apache.lucene.codecs.Codec: org.apache.lucene.codecs.FieldInfosFormat fieldInfosFormat()>();

        $r14 = virtualinvoke $r13.<org.apache.lucene.codecs.FieldInfosFormat: org.apache.lucene.codecs.FieldInfosReader getFieldInfosReader()>();

        $r15 = r8.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r17 = $r15.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r16 = <org.apache.lucene.store.IOContext: org.apache.lucene.store.IOContext READONCE>;

        $r18 = virtualinvoke $r14.<org.apache.lucene.codecs.FieldInfosReader: org.apache.lucene.index.FieldInfos read(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.store.IOContext)>(r49, $r17, $r16);

        r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.index.FieldInfos fieldInfos> = $r18;

        r0.<org.apache.lucene.index.SegmentCoreReaders: int termsIndexDivisor> = i0;

        $r19 = virtualinvoke $r10.<org.apache.lucene.codecs.Codec: org.apache.lucene.codecs.PostingsFormat postingsFormat()>();

        $r20 = new org.apache.lucene.index.SegmentReadState;

        $r23 = r8.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r22 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.index.FieldInfos fieldInfos>;

        specialinvoke $r20.<org.apache.lucene.index.SegmentReadState: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.index.SegmentInfo,org.apache.lucene.index.FieldInfos,org.apache.lucene.store.IOContext,int)>(r49, $r23, $r22, r21, i0);

        $r24 = virtualinvoke $r19.<org.apache.lucene.codecs.PostingsFormat: org.apache.lucene.codecs.FieldsProducer fieldsProducer(org.apache.lucene.index.SegmentReadState)>($r20);

        r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.FieldsProducer fields> = $r24;

        $z1 = <org.apache.lucene.index.SegmentCoreReaders: boolean $assertionsDisabled>;

        if $z1 != 0 goto label05;

        $r41 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.FieldsProducer fields>;

        if $r41 != null goto label05;

        $r42 = new java.lang.AssertionError;

        specialinvoke $r42.<java.lang.AssertionError: void <init>()>();

        throw $r42;

     label05:
        $r25 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.index.FieldInfos fieldInfos>;

        $z2 = virtualinvoke $r25.<org.apache.lucene.index.FieldInfos: boolean hasDocValues()>();

        if $z2 == 0 goto label06;

        $r37 = virtualinvoke $r10.<org.apache.lucene.codecs.Codec: org.apache.lucene.codecs.DocValuesFormat docValuesFormat()>();

        $r38 = virtualinvoke $r37.<org.apache.lucene.codecs.DocValuesFormat: org.apache.lucene.codecs.DocValuesProducer fieldsProducer(org.apache.lucene.index.SegmentReadState)>($r20);

        r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.DocValuesProducer dvProducer> = $r38;

        $z4 = <org.apache.lucene.index.SegmentCoreReaders: boolean $assertionsDisabled>;

        if $z4 != 0 goto label07;

        $r39 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.DocValuesProducer dvProducer>;

        if $r39 != null goto label07;

        $r40 = new java.lang.AssertionError;

        specialinvoke $r40.<java.lang.AssertionError: void <init>()>();

        throw $r40;

     label06:
        r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.DocValuesProducer dvProducer> = null;

     label07:
        $r50 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.index.FieldInfos fieldInfos>;

        $z5 = virtualinvoke $r50.<org.apache.lucene.index.FieldInfos: boolean hasNorms()>();

        if $z5 == 0 goto label08;

        $r33 = virtualinvoke $r10.<org.apache.lucene.codecs.Codec: org.apache.lucene.codecs.NormsFormat normsFormat()>();

        $r34 = virtualinvoke $r33.<org.apache.lucene.codecs.NormsFormat: org.apache.lucene.codecs.DocValuesProducer normsProducer(org.apache.lucene.index.SegmentReadState)>($r20);

        r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.DocValuesProducer normsProducer> = $r34;

        $z3 = <org.apache.lucene.index.SegmentCoreReaders: boolean $assertionsDisabled>;

        if $z3 != 0 goto label09;

        $r35 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.DocValuesProducer normsProducer>;

        if $r35 != null goto label09;

        $r36 = new java.lang.AssertionError;

        specialinvoke $r36.<java.lang.AssertionError: void <init>()>();

        throw $r36;

     label08:
        r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.DocValuesProducer normsProducer> = null;

     label09:
        $r51 = r8.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r52 = virtualinvoke $r51.<org.apache.lucene.index.SegmentInfo: org.apache.lucene.codecs.Codec getCodec()>();

        $r53 = virtualinvoke $r52.<org.apache.lucene.codecs.Codec: org.apache.lucene.codecs.StoredFieldsFormat storedFieldsFormat()>();

        $r54 = r8.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r55 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.index.FieldInfos fieldInfos>;

        $r56 = virtualinvoke $r53.<org.apache.lucene.codecs.StoredFieldsFormat: org.apache.lucene.codecs.StoredFieldsReader fieldsReader(org.apache.lucene.store.Directory,org.apache.lucene.index.SegmentInfo,org.apache.lucene.index.FieldInfos,org.apache.lucene.store.IOContext)>(r49, $r54, $r55, r21);

        r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.StoredFieldsReader fieldsReaderOrig> = $r56;

        $r57 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.index.FieldInfos fieldInfos>;

        $z6 = virtualinvoke $r57.<org.apache.lucene.index.FieldInfos: boolean hasVectors()>();

        if $z6 == 0 goto label10;

        $r27 = r8.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r28 = virtualinvoke $r27.<org.apache.lucene.index.SegmentInfo: org.apache.lucene.codecs.Codec getCodec()>();

        $r29 = virtualinvoke $r28.<org.apache.lucene.codecs.Codec: org.apache.lucene.codecs.TermVectorsFormat termVectorsFormat()>();

        $r31 = r8.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r30 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.index.FieldInfos fieldInfos>;

        $r32 = virtualinvoke $r29.<org.apache.lucene.codecs.TermVectorsFormat: org.apache.lucene.codecs.TermVectorsReader vectorsReader(org.apache.lucene.store.Directory,org.apache.lucene.index.SegmentInfo,org.apache.lucene.index.FieldInfos,org.apache.lucene.store.IOContext)>(r49, $r31, $r30, r21);

        r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.TermVectorsReader termVectorsReaderOrig> = $r32;

        goto label11;

     label10:
        r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.TermVectorsReader termVectorsReaderOrig> = null;

     label11:
        if 1 != 0 goto label15;

        virtualinvoke r0.<org.apache.lucene.index.SegmentCoreReaders: void decRef()>();

        goto label15;

     label12:
        $r48 := @caughtexception;

     label13:
        if 0 != 0 goto label14;

        virtualinvoke r0.<org.apache.lucene.index.SegmentCoreReaders: void decRef()>();

     label14:
        throw $r48;

     label15:
        r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.index.SegmentReader owner> = r26;

        return;

        catch java.lang.Throwable from label02 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    void incRef()
    {
        org.apache.lucene.index.SegmentCoreReaders r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @this: org.apache.lucene.index.SegmentCoreReaders;

        $r1 = r0.<org.apache.lucene.index.SegmentCoreReaders: java.util.concurrent.atomic.AtomicInteger ref>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        return;
    }

    org.apache.lucene.index.NumericDocValues getNumericDocValues(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.codecs.DocValuesProducer $r10, $r12;
        org.apache.lucene.index.NumericDocValues $r11, $r14, r16;
        org.apache.lucene.index.SegmentCoreReaders r0;
        java.lang.AssertionError $r15;
        java.util.Map $r13;
        java.lang.String r1;
        org.apache.lucene.index.FieldInfos $r2;
        boolean $z0;
        org.apache.lucene.util.CloseableThreadLocal $r7;
        org.apache.lucene.index.FieldInfo$DocValuesType $r4, $r5, $r6;
        org.apache.lucene.index.FieldInfo $r3;
        java.lang.Object $r8, $r9;

        r0 := @this: org.apache.lucene.index.SegmentCoreReaders;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.index.FieldInfos fieldInfos>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(java.lang.String)>(r1);

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke $r3.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$DocValuesType getDocValuesType()>();

        if $r4 != null goto label2;

        return null;

     label2:
        $r5 = virtualinvoke $r3.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$DocValuesType getDocValuesType()>();

        $r6 = <org.apache.lucene.index.FieldInfo$DocValuesType: org.apache.lucene.index.FieldInfo$DocValuesType NUMERIC>;

        if $r5 == $r6 goto label3;

        return null;

     label3:
        $z0 = <org.apache.lucene.index.SegmentCoreReaders: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $r12 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.DocValuesProducer dvProducer>;

        if $r12 != null goto label4;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label4:
        $r7 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.util.CloseableThreadLocal docValuesLocal>;

        $r8 = virtualinvoke $r7.<org.apache.lucene.util.CloseableThreadLocal: java.lang.Object get()>();

        $r13 = (java.util.Map) $r8;

        $r9 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r14 = (org.apache.lucene.index.NumericDocValues) $r9;

        r16 = $r14;

        if $r14 != null goto label5;

        $r10 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.DocValuesProducer dvProducer>;

        $r11 = virtualinvoke $r10.<org.apache.lucene.codecs.DocValuesProducer: org.apache.lucene.index.NumericDocValues getNumeric(org.apache.lucene.index.FieldInfo)>($r3);

        r16 = $r11;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r11);

     label5:
        return r16;
    }

    org.apache.lucene.index.BinaryDocValues getBinaryDocValues(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.codecs.DocValuesProducer $r10, $r12;
        org.apache.lucene.index.SegmentCoreReaders r0;
        java.lang.AssertionError $r15;
        java.util.Map $r13;
        java.lang.String r1;
        org.apache.lucene.index.FieldInfos $r2;
        boolean $z0;
        org.apache.lucene.util.CloseableThreadLocal $r7;
        org.apache.lucene.index.FieldInfo$DocValuesType $r4, $r5, $r6;
        org.apache.lucene.index.FieldInfo $r3;
        java.lang.Object $r8, $r9;
        org.apache.lucene.index.BinaryDocValues $r11, $r14, r16;

        r0 := @this: org.apache.lucene.index.SegmentCoreReaders;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.index.FieldInfos fieldInfos>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(java.lang.String)>(r1);

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke $r3.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$DocValuesType getDocValuesType()>();

        if $r4 != null goto label2;

        return null;

     label2:
        $r5 = virtualinvoke $r3.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$DocValuesType getDocValuesType()>();

        $r6 = <org.apache.lucene.index.FieldInfo$DocValuesType: org.apache.lucene.index.FieldInfo$DocValuesType BINARY>;

        if $r5 == $r6 goto label3;

        return null;

     label3:
        $z0 = <org.apache.lucene.index.SegmentCoreReaders: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $r12 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.DocValuesProducer dvProducer>;

        if $r12 != null goto label4;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label4:
        $r7 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.util.CloseableThreadLocal docValuesLocal>;

        $r8 = virtualinvoke $r7.<org.apache.lucene.util.CloseableThreadLocal: java.lang.Object get()>();

        $r13 = (java.util.Map) $r8;

        $r9 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r14 = (org.apache.lucene.index.BinaryDocValues) $r9;

        r16 = $r14;

        if $r14 != null goto label5;

        $r10 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.DocValuesProducer dvProducer>;

        $r11 = virtualinvoke $r10.<org.apache.lucene.codecs.DocValuesProducer: org.apache.lucene.index.BinaryDocValues getBinary(org.apache.lucene.index.FieldInfo)>($r3);

        r16 = $r11;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r11);

     label5:
        return r16;
    }

    org.apache.lucene.index.SortedDocValues getSortedDocValues(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.codecs.DocValuesProducer $r10, $r12;
        org.apache.lucene.index.SegmentCoreReaders r0;
        java.lang.AssertionError $r15;
        java.util.Map $r13;
        java.lang.String r1;
        org.apache.lucene.index.FieldInfos $r2;
        org.apache.lucene.index.SortedDocValues $r11, $r14, r16;
        boolean $z0;
        org.apache.lucene.util.CloseableThreadLocal $r7;
        org.apache.lucene.index.FieldInfo$DocValuesType $r4, $r5, $r6;
        org.apache.lucene.index.FieldInfo $r3;
        java.lang.Object $r8, $r9;

        r0 := @this: org.apache.lucene.index.SegmentCoreReaders;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.index.FieldInfos fieldInfos>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(java.lang.String)>(r1);

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke $r3.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$DocValuesType getDocValuesType()>();

        if $r4 != null goto label2;

        return null;

     label2:
        $r5 = virtualinvoke $r3.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$DocValuesType getDocValuesType()>();

        $r6 = <org.apache.lucene.index.FieldInfo$DocValuesType: org.apache.lucene.index.FieldInfo$DocValuesType SORTED>;

        if $r5 == $r6 goto label3;

        return null;

     label3:
        $z0 = <org.apache.lucene.index.SegmentCoreReaders: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $r12 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.DocValuesProducer dvProducer>;

        if $r12 != null goto label4;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label4:
        $r7 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.util.CloseableThreadLocal docValuesLocal>;

        $r8 = virtualinvoke $r7.<org.apache.lucene.util.CloseableThreadLocal: java.lang.Object get()>();

        $r13 = (java.util.Map) $r8;

        $r9 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r14 = (org.apache.lucene.index.SortedDocValues) $r9;

        r16 = $r14;

        if $r14 != null goto label5;

        $r10 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.DocValuesProducer dvProducer>;

        $r11 = virtualinvoke $r10.<org.apache.lucene.codecs.DocValuesProducer: org.apache.lucene.index.SortedDocValues getSorted(org.apache.lucene.index.FieldInfo)>($r3);

        r16 = $r11;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r11);

     label5:
        return r16;
    }

    org.apache.lucene.index.SortedSetDocValues getSortedSetDocValues(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.codecs.DocValuesProducer $r10, $r12;
        org.apache.lucene.index.SegmentCoreReaders r0;
        java.lang.AssertionError $r15;
        java.util.Map $r13;
        org.apache.lucene.index.SortedSetDocValues $r11, $r14, r16;
        java.lang.String r1;
        org.apache.lucene.index.FieldInfos $r2;
        boolean $z0;
        org.apache.lucene.util.CloseableThreadLocal $r7;
        org.apache.lucene.index.FieldInfo$DocValuesType $r4, $r5, $r6;
        org.apache.lucene.index.FieldInfo $r3;
        java.lang.Object $r8, $r9;

        r0 := @this: org.apache.lucene.index.SegmentCoreReaders;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.index.FieldInfos fieldInfos>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(java.lang.String)>(r1);

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke $r3.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$DocValuesType getDocValuesType()>();

        if $r4 != null goto label2;

        return null;

     label2:
        $r5 = virtualinvoke $r3.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$DocValuesType getDocValuesType()>();

        $r6 = <org.apache.lucene.index.FieldInfo$DocValuesType: org.apache.lucene.index.FieldInfo$DocValuesType SORTED_SET>;

        if $r5 == $r6 goto label3;

        return null;

     label3:
        $z0 = <org.apache.lucene.index.SegmentCoreReaders: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $r12 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.DocValuesProducer dvProducer>;

        if $r12 != null goto label4;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label4:
        $r7 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.util.CloseableThreadLocal docValuesLocal>;

        $r8 = virtualinvoke $r7.<org.apache.lucene.util.CloseableThreadLocal: java.lang.Object get()>();

        $r13 = (java.util.Map) $r8;

        $r9 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r14 = (org.apache.lucene.index.SortedSetDocValues) $r9;

        r16 = $r14;

        if $r14 != null goto label5;

        $r10 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.DocValuesProducer dvProducer>;

        $r11 = virtualinvoke $r10.<org.apache.lucene.codecs.DocValuesProducer: org.apache.lucene.index.SortedSetDocValues getSortedSet(org.apache.lucene.index.FieldInfo)>($r3);

        r16 = $r11;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r11);

     label5:
        return r16;
    }

    org.apache.lucene.index.NumericDocValues getNormValues(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.codecs.DocValuesProducer $r7, $r9;
        org.apache.lucene.index.NumericDocValues $r8, $r11, r13;
        org.apache.lucene.index.SegmentCoreReaders r0;
        java.lang.AssertionError $r12;
        java.util.Map $r10;
        java.lang.String r1;
        org.apache.lucene.index.FieldInfos $r2;
        boolean $z0, $z1;
        org.apache.lucene.util.CloseableThreadLocal $r4;
        org.apache.lucene.index.FieldInfo $r3;
        java.lang.Object $r5, $r6;

        r0 := @this: org.apache.lucene.index.SegmentCoreReaders;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.index.FieldInfos fieldInfos>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(java.lang.String)>(r1);

        if $r3 != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke $r3.<org.apache.lucene.index.FieldInfo: boolean hasNorms()>();

        if $z0 != 0 goto label2;

        return null;

     label2:
        $z1 = <org.apache.lucene.index.SegmentCoreReaders: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $r9 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.DocValuesProducer normsProducer>;

        if $r9 != null goto label3;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label3:
        $r4 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.util.CloseableThreadLocal normsLocal>;

        $r5 = virtualinvoke $r4.<org.apache.lucene.util.CloseableThreadLocal: java.lang.Object get()>();

        $r10 = (java.util.Map) $r5;

        $r6 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r11 = (org.apache.lucene.index.NumericDocValues) $r6;

        r13 = $r11;

        if $r11 != null goto label4;

        $r7 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.DocValuesProducer normsProducer>;

        $r8 = virtualinvoke $r7.<org.apache.lucene.codecs.DocValuesProducer: org.apache.lucene.index.NumericDocValues getNumeric(org.apache.lucene.index.FieldInfo)>($r3);

        r13 = $r8;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r8);

     label4:
        return r13;
    }

    void decRef() throws java.io.IOException
    {
        org.apache.lucene.codecs.FieldsProducer $r7;
        org.apache.lucene.codecs.TermVectorsReader $r9;
        org.apache.lucene.codecs.DocValuesProducer $r8, $r12;
        org.apache.lucene.index.SegmentCoreReaders r0;
        org.apache.lucene.codecs.StoredFieldsReader $r10;
        org.apache.lucene.util.CloseableThreadLocal $r3, $r4, $r5, $r6;
        java.util.concurrent.atomic.AtomicInteger $r1;
        org.apache.lucene.store.CompoundFileDirectory $r11;
        int $i0;
        java.io.Closeable[] $r2;

        r0 := @this: org.apache.lucene.index.SegmentCoreReaders;

        $r1 = r0.<org.apache.lucene.index.SegmentCoreReaders: java.util.concurrent.atomic.AtomicInteger ref>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        if $i0 != 0 goto label1;

        $r2 = newarray (java.io.Closeable)[10];

        $r3 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.util.CloseableThreadLocal termVectorsLocal>;

        $r2[0] = $r3;

        $r4 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.util.CloseableThreadLocal fieldsReaderLocal>;

        $r2[1] = $r4;

        $r5 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.util.CloseableThreadLocal docValuesLocal>;

        $r2[2] = $r5;

        $r6 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.util.CloseableThreadLocal normsLocal>;

        $r2[3] = $r6;

        $r7 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.FieldsProducer fields>;

        $r2[4] = $r7;

        $r8 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.DocValuesProducer dvProducer>;

        $r2[5] = $r8;

        $r9 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.TermVectorsReader termVectorsReaderOrig>;

        $r2[6] = $r9;

        $r10 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.StoredFieldsReader fieldsReaderOrig>;

        $r2[7] = $r10;

        $r11 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.store.CompoundFileDirectory cfsReader>;

        $r2[8] = $r11;

        $r12 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.codecs.DocValuesProducer normsProducer>;

        $r2[9] = $r12;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r2);

        specialinvoke r0.<org.apache.lucene.index.SegmentCoreReaders: void notifyCoreClosedListeners()>();

     label1:
        return;
    }

    private void notifyCoreClosedListeners()
    {
        java.lang.Throwable $r7;
        java.util.Iterator $r3;
        org.apache.lucene.index.SegmentCoreReaders r0;
        java.util.Set $r1, $r2;
        java.lang.Object $r4;
        org.apache.lucene.index.SegmentReader$CoreClosedListener r5;
        org.apache.lucene.index.SegmentReader $r6;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.SegmentCoreReaders;

        $r1 = r0.<org.apache.lucene.index.SegmentCoreReaders: java.util.Set coreClosedListeners>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.lucene.index.SegmentCoreReaders: java.util.Set coreClosedListeners>;

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.lucene.index.SegmentReader$CoreClosedListener) $r4;

        $r6 = r0.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.index.SegmentReader owner>;

        interfaceinvoke r5.<org.apache.lucene.index.SegmentReader$CoreClosedListener: void onClose(org.apache.lucene.index.SegmentReader)>($r6);

        goto label2;

     label3:
        exitmonitor $r1;

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r7;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    void addCoreClosedListener(org.apache.lucene.index.SegmentReader$CoreClosedListener)
    {
        org.apache.lucene.index.SegmentCoreReaders r0;
        java.util.Set $r2;
        org.apache.lucene.index.SegmentReader$CoreClosedListener r1;

        r0 := @this: org.apache.lucene.index.SegmentCoreReaders;

        r1 := @parameter0: org.apache.lucene.index.SegmentReader$CoreClosedListener;

        $r2 = r0.<org.apache.lucene.index.SegmentCoreReaders: java.util.Set coreClosedListeners>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    void removeCoreClosedListener(org.apache.lucene.index.SegmentReader$CoreClosedListener)
    {
        org.apache.lucene.index.SegmentCoreReaders r0;
        java.util.Set $r2;
        org.apache.lucene.index.SegmentReader$CoreClosedListener r1;

        r0 := @this: org.apache.lucene.index.SegmentCoreReaders;

        r1 := @parameter0: org.apache.lucene.index.SegmentReader$CoreClosedListener;

        $r2 = r0.<org.apache.lucene.index.SegmentCoreReaders: java.util.Set coreClosedListeners>;

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.index.SegmentCoreReaders r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        org.apache.lucene.index.SegmentReader $r3;
        java.lang.String $r6;

        r2 := @this: org.apache.lucene.index.SegmentCoreReaders;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SegmentCoreReader(owner=");

        $r3 = r2.<org.apache.lucene.index.SegmentCoreReaders: org.apache.lucene.index.SegmentReader owner>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/SegmentCoreReaders;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.SegmentCoreReaders: boolean $assertionsDisabled> = $z1;

        return;
    }
}
