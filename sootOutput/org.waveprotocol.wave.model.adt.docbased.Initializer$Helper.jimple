public final class org.waveprotocol.wave.model.adt.docbased.Initializer$Helper extends java.lang.Object
{

    public void <init>()
    {
        org.waveprotocol.wave.model.adt.docbased.Initializer$Helper r0;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.Initializer$Helper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.Map buildAttributes(java.lang.Object, org.waveprotocol.wave.model.adt.docbased.Factory)
    {
        org.waveprotocol.wave.model.adt.docbased.Factory r1;
        org.waveprotocol.wave.model.adt.docbased.Initializer $r3;
        java.util.HashMap $r0;
        java.lang.Object r2;

        r2 := @parameter0: java.lang.Object;

        r1 := @parameter1: org.waveprotocol.wave.model.adt.docbased.Factory;

        $r0 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: java.util.HashMap newHashMap()>();

        $r3 = interfaceinvoke r1.<org.waveprotocol.wave.model.adt.docbased.Factory: org.waveprotocol.wave.model.adt.docbased.Initializer createInitializer(java.lang.Object)>(r2);

        interfaceinvoke $r3.<org.waveprotocol.wave.model.adt.docbased.Initializer: void initialize(java.util.Map)>($r0);

        return $r0;
    }

    public static void initialiseAttribute(java.util.Map, java.lang.String, java.lang.String)
    {
        java.util.Map r0;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String r1, r2, $r7;
        boolean $z0;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $z0 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate initialiser key \'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' in initialiser");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void illegalArgument(java.lang.Object)>($r7);

     label1:
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }
}
