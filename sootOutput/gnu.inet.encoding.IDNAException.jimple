public class gnu.inet.encoding.IDNAException extends java.lang.Exception
{
    public static java.lang.String CONTAINS_NON_LDH;
    public static java.lang.String CONTAINS_HYPHEN;
    public static java.lang.String CONTAINS_ACE_PREFIX;
    public static java.lang.String TOO_LONG;

    static void <clinit>()
    {
        <gnu.inet.encoding.IDNAException: java.lang.String CONTAINS_NON_LDH> = "Contains non-LDH characters.";

        <gnu.inet.encoding.IDNAException: java.lang.String CONTAINS_HYPHEN> = "Leading or trailing hyphen not allowed.";

        <gnu.inet.encoding.IDNAException: java.lang.String CONTAINS_ACE_PREFIX> = "ACE prefix (xn--) not allowed.";

        <gnu.inet.encoding.IDNAException: java.lang.String TOO_LONG> = "String too long.";

        return;
    }

    public void <init>(java.lang.String)
    {
        gnu.inet.encoding.IDNAException r0;
        java.lang.String r1;

        r0 := @this: gnu.inet.encoding.IDNAException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(gnu.inet.encoding.StringprepException)
    {
        gnu.inet.encoding.IDNAException r0;
        gnu.inet.encoding.StringprepException r1;

        r0 := @this: gnu.inet.encoding.IDNAException;

        r1 := @parameter0: gnu.inet.encoding.StringprepException;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.Throwable)>(r1);

        return;
    }

    public void <init>(gnu.inet.encoding.PunycodeException)
    {
        gnu.inet.encoding.IDNAException r0;
        gnu.inet.encoding.PunycodeException r1;

        r0 := @this: gnu.inet.encoding.IDNAException;

        r1 := @parameter0: gnu.inet.encoding.PunycodeException;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.Throwable)>(r1);

        return;
    }
}
