public class org.waveprotocol.wave.model.testing.FakeSilentOperationSink extends java.lang.Object implements org.waveprotocol.wave.model.operation.SilentOperationSink
{
    private java.util.LinkedList ops;

    public void <init>()
    {
        java.util.LinkedList $r1;
        org.waveprotocol.wave.model.testing.FakeSilentOperationSink r0;

        r0 := @this: org.waveprotocol.wave.model.testing.FakeSilentOperationSink;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.waveprotocol.wave.model.testing.FakeSilentOperationSink: java.util.LinkedList ops> = $r1;

        return;
    }

    public org.waveprotocol.wave.model.operation.Operation getConsumedOp()
    {
        int $i0, $i1;
        org.waveprotocol.wave.model.operation.Operation $r4;
        java.lang.Object $r3;
        java.util.LinkedList $r1, $r2;
        org.waveprotocol.wave.model.testing.FakeSilentOperationSink r0;

        r0 := @this: org.waveprotocol.wave.model.testing.FakeSilentOperationSink;

        $r1 = r0.<org.waveprotocol.wave.model.testing.FakeSilentOperationSink: java.util.LinkedList ops>;

        $i0 = virtualinvoke $r1.<java.util.LinkedList: int size()>();

        if $i0 != 0 goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.waveprotocol.wave.model.testing.FakeSilentOperationSink: java.util.LinkedList ops>;

        $i1 = $i0 - 1;

        $r3 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object get(int)>($i1);

        $r4 = (org.waveprotocol.wave.model.operation.Operation) $r3;

     label2:
        return $r4;
    }

    public void consume(org.waveprotocol.wave.model.operation.Operation)
    {
        org.waveprotocol.wave.model.operation.Operation r1;
        java.util.LinkedList $r2;
        org.waveprotocol.wave.model.testing.FakeSilentOperationSink r0;

        r0 := @this: org.waveprotocol.wave.model.testing.FakeSilentOperationSink;

        r1 := @parameter0: org.waveprotocol.wave.model.operation.Operation;

        $r2 = r0.<org.waveprotocol.wave.model.testing.FakeSilentOperationSink: java.util.LinkedList ops>;

        virtualinvoke $r2.<java.util.LinkedList: void addLast(java.lang.Object)>(r1);

        return;
    }

    public void clear()
    {
        java.util.LinkedList $r1;
        org.waveprotocol.wave.model.testing.FakeSilentOperationSink r0;

        r0 := @this: org.waveprotocol.wave.model.testing.FakeSilentOperationSink;

        $r1 = r0.<org.waveprotocol.wave.model.testing.FakeSilentOperationSink: java.util.LinkedList ops>;

        virtualinvoke $r1.<java.util.LinkedList: void clear()>();

        return;
    }

    public java.util.List getOps()
    {
        java.util.List $r2;
        java.util.LinkedList $r1;
        org.waveprotocol.wave.model.testing.FakeSilentOperationSink r0;

        r0 := @this: org.waveprotocol.wave.model.testing.FakeSilentOperationSink;

        $r1 = r0.<org.waveprotocol.wave.model.testing.FakeSilentOperationSink: java.util.LinkedList ops>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }
}
