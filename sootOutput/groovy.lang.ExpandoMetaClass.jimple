public class groovy.lang.ExpandoMetaClass extends groovy.lang.MetaClassImpl implements groovy.lang.GroovyObject
{
    private static final java.lang.String META_CLASS;
    private static final java.lang.String CLASS;
    private static final java.lang.String META_METHODS;
    private static final java.lang.String METHODS;
    private static final java.lang.String PROPERTIES;
    public static final java.lang.String STATIC_QUALIFIER;
    private static final java.lang.Class[] ZERO_ARGUMENTS;
    private static final java.lang.String CONSTRUCTOR;
    private static final java.lang.String GET_PROPERTY_METHOD;
    private static final java.lang.String SET_PROPERTY_METHOD;
    private static final java.lang.String INVOKE_METHOD_METHOD;
    private static final java.lang.String CLASS_PROPERTY;
    private static final java.lang.String META_CLASS_PROPERTY;
    private static final java.lang.String GROOVY_CONSTRUCTOR;
    private groovy.lang.MetaClass myMetaClass;
    private boolean allowChangesAfterInit;
    private boolean initialized;
    private boolean initCalled;
    private boolean modified;
    private boolean inRegistry;
    private final java.util.Set inheritedMetaMethods;
    private final java.util.Map beanPropertyCache;
    private final java.util.Map staticBeanPropertyCache;
    private final java.util.Map expandoMethods;
    private final java.util.Map expandoProperties;
    private org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod getPropertyMethod;
    private org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod invokeMethodMethod;
    private org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod setPropertyMethod;
    private org.codehaus.groovy.runtime.metaclass.ClosureStaticMetaMethod invokeStaticMethodMethod;
    static java.lang.Class class$java$lang$Object;
    static java.lang.Class array$Ljava$lang$Object;

    public void <init>(java.lang.Class)
    {
        groovy.lang.MetaClass $r8;
        groovy.lang.ExpandoMetaClass r0;
        java.util.HashSet $r3;
        groovy.lang.MetaClassRegistry $r1;
        org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap $r4, $r5, $r6, $r7;
        java.lang.Class r2;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        r2 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <groovy.lang.GroovySystem: groovy.lang.MetaClassRegistry getMetaClassRegistry()>();

        specialinvoke r0.<groovy.lang.MetaClassImpl: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class)>($r1, r2);

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<groovy.lang.ExpandoMetaClass: java.util.Set inheritedMetaMethods> = $r3;

        $r4 = new org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap;

        specialinvoke $r4.<org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap: void <init>()>();

        r0.<groovy.lang.ExpandoMetaClass: java.util.Map beanPropertyCache> = $r4;

        $r5 = new org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap;

        specialinvoke $r5.<org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap: void <init>()>();

        r0.<groovy.lang.ExpandoMetaClass: java.util.Map staticBeanPropertyCache> = $r5;

        $r6 = new org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap;

        specialinvoke $r6.<org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap: void <init>()>();

        r0.<groovy.lang.ExpandoMetaClass: java.util.Map expandoMethods> = $r6;

        $r7 = new org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap;

        specialinvoke $r7.<org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap: void <init>()>();

        r0.<groovy.lang.ExpandoMetaClass: java.util.Map expandoProperties> = $r7;

        $r8 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClass getMetaClass(java.lang.Object)>(r0);

        r0.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaClass myMetaClass> = $r8;

        return;
    }

    public void <init>(java.lang.Class, boolean)
    {
        java.lang.Class r1;
        groovy.lang.ExpandoMetaClass r0;
        boolean z0;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        r1 := @parameter0: java.lang.Class;

        z0 := @parameter1: boolean;

        specialinvoke r0.<groovy.lang.ExpandoMetaClass: void <init>(java.lang.Class)>(r1);

        r0.<groovy.lang.ExpandoMetaClass: boolean inRegistry> = z0;

        return;
    }

    public void <init>(java.lang.Class, boolean, boolean)
    {
        groovy.lang.ExpandoMetaClass r0;
        java.lang.Class r1;
        boolean z0, z1;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        r1 := @parameter0: java.lang.Class;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        specialinvoke r0.<groovy.lang.ExpandoMetaClass: void <init>(java.lang.Class)>(r1);

        r0.<groovy.lang.ExpandoMetaClass: boolean inRegistry> = z0;

        r0.<groovy.lang.ExpandoMetaClass: boolean allowChangesAfterInit> = z1;

        return;
    }

    public java.lang.Object invokeMissingMethod(java.lang.Object, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] $r1, r3;
        groovy.lang.ExpandoMetaClass r4;
        java.lang.String r2;
        boolean $z0, $z1;
        groovy.lang.MetaMethod $r6, $r10;
        org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod $r8;
        java.lang.Object r0, $r7, $r9, $r11;
        java.lang.Class $r5, $r12, $r13, r14, $r15, $r16;

        r4 := @this: groovy.lang.ExpandoMetaClass;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $z0 = r0 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        $r13 = (java.lang.Class) r0;

        goto label2;

     label1:
        $r13 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

     label2:
        r14 = $r13;

     label3:
        $r12 = r14;

        $r15 = <groovy.lang.ExpandoMetaClass: java.lang.Class class$java$lang$Object>;

        if $r15 != null goto label4;

        $r16 = staticinvoke <groovy.lang.ExpandoMetaClass: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <groovy.lang.ExpandoMetaClass: java.lang.Class class$java$lang$Object> = $r16;

        goto label5;

     label4:
        $r16 = <groovy.lang.ExpandoMetaClass: java.lang.Class class$java$lang$Object>;

     label5:
        if $r12 == $r16 goto label7;

        $r10 = specialinvoke r4.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaMethod findMethodInClassHeirarchy(java.lang.String,java.lang.Object[],java.lang.Class)>(r2, r3, r14);

        if $r10 == null goto label6;

        specialinvoke r4.<groovy.lang.ExpandoMetaClass: void addSuperMethodIfNotOverriden(groovy.lang.MetaMethod)>($r10);

        $r11 = virtualinvoke $r10.<groovy.lang.MetaMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, r3);

        return $r11;

     label6:
        r14 = virtualinvoke r14.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label3;

     label7:
        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = r2;

        $r1[1] = r3;

        $r5 = r4.<groovy.lang.ExpandoMetaClass: java.lang.Class theClass>;

        $r6 = specialinvoke r4.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaMethod findMethodInClassHeirarchy(java.lang.String,java.lang.Object[],java.lang.Class)>("invokeMethod", $r1, $r5);

        if $r6 == null goto label8;

        $z1 = $r6 instanceof org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod;

        if $z1 == 0 goto label8;

        $r8 = (org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod) $r6;

        r4.<groovy.lang.ExpandoMetaClass: org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod invokeMethodMethod> = $r8;

        $r9 = virtualinvoke $r6.<groovy.lang.MetaMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r1);

        return $r9;

     label8:
        $r7 = specialinvoke r4.<groovy.lang.MetaClassImpl: java.lang.Object invokeMissingMethod(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, r2, r3);

        return $r7;
    }

    public java.lang.Object invokeMissingProperty(java.lang.Object, java.lang.String, java.lang.Object, boolean)
    {
        java.lang.Object[] $r3, $r9;
        groovy.lang.ExpandoMetaClass r2;
        groovy.lang.MetaBeanProperty $r13;
        java.lang.String r4;
        boolean $z0, z1, $z2, $z3;
        org.codehaus.groovy.reflection.CachedClass r16, $r17;
        groovy.lang.MetaMethod $r6, $r10;
        org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod $r7, $r11;
        java.lang.Object r0, r5, $r8, $r12, $r14, $r18;
        java.lang.Class r1, $r15;

        r2 := @this: groovy.lang.ExpandoMetaClass;

        r0 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.Object;

        z1 := @parameter3: boolean;

        $z0 = r0 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        $r15 = (java.lang.Class) r0;

        goto label2;

     label1:
        $r15 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

     label2:
        r1 = $r15;

        r16 = r2.<groovy.lang.ExpandoMetaClass: org.codehaus.groovy.reflection.CachedClass theCachedClass>;

     label3:
        $r17 = <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass OBJECT_CLASS>;

        if r16 == $r17 goto label6;

        $r13 = specialinvoke r2.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaBeanProperty findPropertyInClassHierarchy(java.lang.String,org.codehaus.groovy.reflection.CachedClass)>(r4, r16);

        if $r13 == null goto label5;

        virtualinvoke r2.<groovy.lang.ExpandoMetaClass: void addMetaBeanProperty(groovy.lang.MetaBeanProperty)>($r13);

        if z1 != 0 goto label4;

        virtualinvoke $r13.<groovy.lang.MetaBeanProperty: void setProperty(java.lang.Object,java.lang.Object)>(r0, r5);

        return null;

     label4:
        $r14 = virtualinvoke $r13.<groovy.lang.MetaBeanProperty: java.lang.Object getProperty(java.lang.Object)>(r0);

        return $r14;

     label5:
        r16 = virtualinvoke r16.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedClass getCachedSuperClass()>();

        goto label3;

     label6:
        if z1 == 0 goto label8;

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r4;

        $r10 = specialinvoke r2.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaMethod findMethodInClassHeirarchy(java.lang.String,java.lang.Object[],java.lang.Class)>("getProperty", $r9, r1);

        if $r10 == null goto label7;

        $z3 = $r10 instanceof org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod;

        if $z3 == 0 goto label7;

        $r11 = (org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod) $r10;

        r2.<groovy.lang.ExpandoMetaClass: org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod getPropertyMethod> = $r11;

        $r12 = virtualinvoke $r10.<groovy.lang.MetaMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r9);

        return $r12;

     label7:
        goto label9;

     label8:
        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r4;

        $r3[1] = r5;

        $r6 = specialinvoke r2.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaMethod findMethodInClassHeirarchy(java.lang.String,java.lang.Object[],java.lang.Class)>("setProperty", $r3, r1);

        if $r6 == null goto label9;

        $z2 = $r6 instanceof org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod;

        if $z2 == 0 goto label9;

        $r7 = (org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod) $r6;

        r2.<groovy.lang.ExpandoMetaClass: org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod setPropertyMethod> = $r7;

        $r8 = virtualinvoke $r6.<groovy.lang.MetaMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r3);

        return $r8;

     label9:
        $r18 = specialinvoke r2.<groovy.lang.MetaClassImpl: java.lang.Object invokeMissingProperty(java.lang.Object,java.lang.String,java.lang.Object,boolean)>(r0, r4, r5, z1);

        return $r18;
    }

    private groovy.lang.MetaBeanProperty findPropertyInClassHierarchy(java.lang.String, org.codehaus.groovy.reflection.CachedClass)
    {
        groovy.lang.MetaClass $r5;
        groovy.lang.ExpandoMetaClass r2;
        java.lang.Class[] $r10;
        org.codehaus.groovy.reflection.CachedClass r0, $r1, $r8;
        groovy.lang.MetaBeanProperty $r7, r11;
        groovy.lang.MetaClassRegistry $r3;
        java.lang.Class $r4, $r9;
        java.lang.String r6;
        boolean $z0;

        r2 := @this: groovy.lang.ExpandoMetaClass;

        r6 := @parameter0: java.lang.String;

        r0 := @parameter1: org.codehaus.groovy.reflection.CachedClass;

        r11 = null;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedClass getCachedSuperClass()>();

        $r3 = r2.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaClassRegistry registry>;

        $r4 = virtualinvoke $r1.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r5 = interfaceinvoke $r3.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r4);

        $z0 = $r5 instanceof groovy.lang.MutableMetaClass;

        if $z0 == 0 goto label2;

        $r7 = specialinvoke r2.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaBeanProperty getMetaPropertyFromMutableMetaClass(java.lang.String,groovy.lang.MetaClass)>(r6, $r5);

        r11 = $r7;

        if $r7 != null goto label2;

        $r8 = <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass OBJECT_CLASS>;

        if $r1 == $r8 goto label1;

        r11 = specialinvoke r2.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaBeanProperty findPropertyInClassHierarchy(java.lang.String,org.codehaus.groovy.reflection.CachedClass)>(r6, $r1);

     label1:
        if r11 != null goto label2;

        $r9 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        r11 = specialinvoke r2.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaBeanProperty searchInterfacesForMetaProperty(java.lang.String,java.lang.Class[])>(r6, $r10);

     label2:
        return r11;
    }

    private groovy.lang.MetaBeanProperty searchInterfacesForMetaProperty(java.lang.String, java.lang.Class[])
    {
        groovy.lang.MetaClass $r4;
        groovy.lang.ExpandoMetaClass r2;
        java.lang.Class[] r0, $r5;
        groovy.lang.MetaBeanProperty $r7, $r8, r9;
        groovy.lang.MetaClassRegistry $r3;
        int $i0, $i1, i2;
        java.lang.Class r1;
        java.lang.String r6;
        boolean $z0;

        r2 := @this: groovy.lang.ExpandoMetaClass;

        r6 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Class[];

        r9 = null;

        i2 = 0;

     label1:
        $i0 = lengthof r0;

        if i2 >= $i0 goto label4;

        r1 = r0[i2];

        $r3 = r2.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaClassRegistry registry>;

        $r4 = interfaceinvoke $r3.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>(r1);

        $z0 = $r4 instanceof groovy.lang.MutableMetaClass;

        if $z0 == 0 goto label2;

        $r8 = specialinvoke r2.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaBeanProperty getMetaPropertyFromMutableMetaClass(java.lang.String,groovy.lang.MetaClass)>(r6, $r4);

        r9 = $r8;

        if $r8 == null goto label2;

        goto label4;

     label2:
        $r5 = virtualinvoke r1.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        $i1 = lengthof $r5;

        if $i1 <= 0 goto label3;

        $r7 = specialinvoke r2.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaBeanProperty searchInterfacesForMetaProperty(java.lang.String,java.lang.Class[])>(r6, $r5);

        r9 = $r7;

        if $r7 == null goto label3;

        goto label4;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return r9;
    }

    private groovy.lang.MetaBeanProperty getMetaPropertyFromMutableMetaClass(java.lang.String, groovy.lang.MetaClass)
    {
        groovy.lang.MetaClass r0;
        groovy.lang.ExpandoMetaClass r4;
        groovy.lang.MutableMetaClass $r1;
        groovy.lang.MetaBeanProperty $r5;
        java.lang.String r2;
        groovy.lang.MetaProperty $r3;
        boolean $z0, $z1;

        r4 := @this: groovy.lang.ExpandoMetaClass;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: groovy.lang.MetaClass;

        $r1 = (groovy.lang.MutableMetaClass) r0;

        $z0 = interfaceinvoke $r1.<groovy.lang.MutableMetaClass: boolean isModified()>();

        $r3 = interfaceinvoke r0.<groovy.lang.MetaClass: groovy.lang.MetaProperty getMetaProperty(java.lang.String)>(r2);

        $z1 = $r3 instanceof groovy.lang.MetaBeanProperty;

        if $z1 == 0 goto label3;

        if $z0 == 0 goto label1;

        $r5 = (groovy.lang.MetaBeanProperty) $r3;

        goto label2;

     label1:
        $r5 = null;

     label2:
        return $r5;

     label3:
        return null;
    }

    private groovy.lang.MetaMethod findMethodInClassHeirarchy(java.lang.String, java.lang.Object[], java.lang.Class)
    {
        groovy.lang.MetaClass $r4;
        java.lang.Object[] r6;
        groovy.lang.ExpandoMetaClass r2;
        java.lang.Class[] $r9;
        groovy.lang.MetaMethod $r7, r10;
        groovy.lang.MetaClassRegistry $r3;
        java.lang.Class r0, $r1, $r8, $r11;
        java.lang.String r5;
        boolean $z0;

        r2 := @this: groovy.lang.ExpandoMetaClass;

        r5 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.Object[];

        r0 := @parameter2: java.lang.Class;

        r10 = null;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Class getSuperclass()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r2.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaClassRegistry registry>;

        $r4 = interfaceinvoke $r3.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r1);

        $z0 = $r4 instanceof groovy.lang.MutableMetaClass;

        if $z0 == 0 goto label5;

        $r7 = specialinvoke r2.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaMethod getMetaMethodFromMutableMetaClass(java.lang.String,java.lang.Object[],groovy.lang.MetaClass)>(r5, r6, $r4);

        r10 = $r7;

        if $r7 != null goto label5;

        $r8 = <groovy.lang.ExpandoMetaClass: java.lang.Class class$java$lang$Object>;

        if $r8 != null goto label2;

        $r11 = staticinvoke <groovy.lang.ExpandoMetaClass: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <groovy.lang.ExpandoMetaClass: java.lang.Class class$java$lang$Object> = $r11;

        goto label3;

     label2:
        $r11 = <groovy.lang.ExpandoMetaClass: java.lang.Class class$java$lang$Object>;

     label3:
        if $r1 == $r11 goto label4;

        r10 = specialinvoke r2.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaMethod findMethodInClassHeirarchy(java.lang.String,java.lang.Object[],java.lang.Class)>(r5, r6, $r1);

     label4:
        if r10 != null goto label5;

        $r9 = virtualinvoke r0.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        r10 = specialinvoke r2.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaMethod searchInterfacesForMetaMethod(java.lang.String,java.lang.Object[],java.lang.Class[])>(r5, r6, $r9);

     label5:
        return r10;
    }

    private groovy.lang.MetaMethod searchInterfacesForMetaMethod(java.lang.String, java.lang.Object[], java.lang.Class[])
    {
        groovy.lang.MetaClass $r4;
        java.lang.Object[] r7;
        groovy.lang.ExpandoMetaClass r2;
        java.lang.Class[] r0, $r5;
        groovy.lang.MetaMethod $r8, $r9, r10;
        groovy.lang.MetaClassRegistry $r3;
        int $i0, $i1, i2;
        java.lang.Class r1;
        java.lang.String r6;
        boolean $z0;

        r2 := @this: groovy.lang.ExpandoMetaClass;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.Object[];

        r0 := @parameter2: java.lang.Class[];

        r10 = null;

        i2 = 0;

     label1:
        $i0 = lengthof r0;

        if i2 >= $i0 goto label4;

        r1 = r0[i2];

        $r3 = r2.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaClassRegistry registry>;

        $r4 = interfaceinvoke $r3.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>(r1);

        $z0 = $r4 instanceof groovy.lang.MutableMetaClass;

        if $z0 == 0 goto label2;

        $r9 = specialinvoke r2.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaMethod getMetaMethodFromMutableMetaClass(java.lang.String,java.lang.Object[],groovy.lang.MetaClass)>(r6, r7, $r4);

        r10 = $r9;

        if $r9 == null goto label2;

        goto label4;

     label2:
        $r5 = virtualinvoke r1.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        $i1 = lengthof $r5;

        if $i1 <= 0 goto label3;

        $r8 = specialinvoke r2.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaMethod searchInterfacesForMetaMethod(java.lang.String,java.lang.Object[],java.lang.Class[])>(r6, r7, $r5);

        r10 = $r8;

        if $r8 == null goto label3;

        goto label4;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return r10;
    }

    private groovy.lang.MetaMethod getMetaMethodFromMutableMetaClass(java.lang.String, java.lang.Object[], groovy.lang.MetaClass)
    {
        groovy.lang.MetaClass r0;
        groovy.lang.MetaMethod $r5;
        java.lang.Object[] r3;
        groovy.lang.ExpandoMetaClass r4;
        java.lang.String r2;
        groovy.lang.MutableMetaClass $r1;
        boolean $z0;

        r4 := @this: groovy.lang.ExpandoMetaClass;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object[];

        r0 := @parameter2: groovy.lang.MetaClass;

        $r1 = (groovy.lang.MutableMetaClass) r0;

        $z0 = interfaceinvoke $r1.<groovy.lang.MutableMetaClass: boolean isModified()>();

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r0.<groovy.lang.MetaClass: groovy.lang.MetaMethod getMetaMethod(java.lang.String,java.lang.Object[])>(r2, r3);

        goto label2;

     label1:
        $r5 = null;

     label2:
        return $r5;
    }

    public synchronized boolean isModified()
    {
        groovy.lang.ExpandoMetaClass r0;
        boolean $z0;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        $z0 = r0.<groovy.lang.ExpandoMetaClass: boolean modified>;

        return $z0;
    }

    public static void enableGlobally()
    {
        staticinvoke <groovy.lang.ExpandoMetaClassCreationHandle: void enable()>();

        return;
    }

    public static void disableGlobally()
    {
        staticinvoke <groovy.lang.ExpandoMetaClassCreationHandle: void disable()>();

        return;
    }

    public synchronized void initialize()
    {
        groovy.lang.ExpandoMetaClass r0;
        boolean $z0;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        $z0 = virtualinvoke r0.<groovy.lang.ExpandoMetaClass: boolean isInitialized()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<groovy.lang.MetaClassImpl: void initialize()>();

        virtualinvoke r0.<groovy.lang.ExpandoMetaClass: void setInitialized(boolean)>(1);

        r0.<groovy.lang.ExpandoMetaClass: boolean initCalled> = 1;

     label1:
        return;
    }

    protected synchronized boolean isInitialized()
    {
        groovy.lang.ExpandoMetaClass r0;
        boolean $z0;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        $z0 = r0.<groovy.lang.ExpandoMetaClass: boolean initialized>;

        return $z0;
    }

    protected synchronized void setInitialized(boolean)
    {
        groovy.lang.ExpandoMetaClass r0;
        boolean z0;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        z0 := @parameter0: boolean;

        r0.<groovy.lang.ExpandoMetaClass: boolean initialized> = z0;

        return;
    }

    private void addSuperMethodIfNotOverriden(groovy.lang.MetaMethod)
    {
        groovy.lang.MetaMethod r2;
        groovy.lang.ExpandoMetaClass r0;
        groovy.lang.ExpandoMetaClass$1 $r1;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        r2 := @parameter0: groovy.lang.MetaMethod;

        $r1 = new groovy.lang.ExpandoMetaClass$1;

        specialinvoke $r1.<groovy.lang.ExpandoMetaClass$1: void <init>(groovy.lang.ExpandoMetaClass,groovy.lang.MetaMethod)>(r0, r2);

        virtualinvoke r0.<groovy.lang.ExpandoMetaClass: void performOperationOnMetaClass(groovy.lang.ExpandoMetaClass$Callable)>($r1);

        return;
    }

    public java.lang.Object invokeConstructor(java.lang.Object[])
    {
        java.lang.Object[] r0;
        groovy.lang.ExpandoMetaClass r2;
        org.codehaus.groovy.reflection.CachedClass[] $r5;
        java.lang.Class[] $r1;
        groovy.lang.MetaMethod $r3;
        int $i0, $i1;
        java.lang.Object $r4, $r7;
        java.lang.Class $r6;

        r2 := @this: groovy.lang.ExpandoMetaClass;

        r0 := @parameter0: java.lang.Object[];

        $r1 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.Class[] convertToTypeArray(java.lang.Object[])>(r0);

        $r3 = virtualinvoke r2.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaMethod pickMethod(java.lang.String,java.lang.Class[])>("<init>", $r1);

        if $r3 == null goto label1;

        $r5 = virtualinvoke $r3.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $i1 = lengthof $r5;

        $i0 = lengthof r0;

        if $i1 != $i0 goto label1;

        $r6 = r2.<groovy.lang.ExpandoMetaClass: java.lang.Class theClass>;

        $r7 = virtualinvoke $r3.<groovy.lang.MetaMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r6, r0);

        return $r7;

     label1:
        $r4 = specialinvoke r2.<groovy.lang.MetaClassImpl: java.lang.Object invokeConstructor(java.lang.Object[])>(r0);

        return $r4;
    }

    protected java.util.LinkedList getSuperClasses()
    {
        groovy.lang.ExpandoMetaClass r1;
        java.lang.Class $r2, $r3, $r4, $r5, $r6, $r7, r8, $r9, $r10;
        java.util.LinkedList $r0;
        boolean $z0, $z1;

        r1 := @this: groovy.lang.ExpandoMetaClass;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        r8 = r1.<groovy.lang.ExpandoMetaClass: java.lang.Class theClass>;

     label1:
        if r8 == null goto label2;

        virtualinvoke $r0.<java.util.LinkedList: void addFirst(java.lang.Object)>(r8);

        r8 = virtualinvoke r8.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label2:
        $r2 = virtualinvoke r1.<groovy.lang.ExpandoMetaClass: java.lang.Class getJavaClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label7;

        $r3 = virtualinvoke r1.<groovy.lang.ExpandoMetaClass: java.lang.Class getJavaClass()>();

        $r4 = <groovy.lang.ExpandoMetaClass: java.lang.Class array$Ljava$lang$Object>;

        if $r4 != null goto label3;

        $r9 = staticinvoke <groovy.lang.ExpandoMetaClass: java.lang.Class class$(java.lang.String)>("[Ljava.lang.Object;");

        <groovy.lang.ExpandoMetaClass: java.lang.Class array$Ljava$lang$Object> = $r9;

        goto label4;

     label3:
        $r9 = <groovy.lang.ExpandoMetaClass: java.lang.Class array$Ljava$lang$Object>;

     label4:
        if $r3 == $r9 goto label7;

        $r5 = virtualinvoke r1.<groovy.lang.ExpandoMetaClass: java.lang.Class getJavaClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.Class getComponentType()>();

        $z1 = virtualinvoke $r6.<java.lang.Class: boolean isPrimitive()>();

        if $z1 != 0 goto label7;

        $r7 = <groovy.lang.ExpandoMetaClass: java.lang.Class array$Ljava$lang$Object>;

        if $r7 != null goto label5;

        $r10 = staticinvoke <groovy.lang.ExpandoMetaClass: java.lang.Class class$(java.lang.String)>("[Ljava.lang.Object;");

        <groovy.lang.ExpandoMetaClass: java.lang.Class array$Ljava$lang$Object> = $r10;

        goto label6;

     label5:
        $r10 = <groovy.lang.ExpandoMetaClass: java.lang.Class array$Ljava$lang$Object>;

     label6:
        virtualinvoke $r0.<java.util.LinkedList: void addFirst(java.lang.Object)>($r10);

     label7:
        return $r0;
    }

    public groovy.lang.MetaClass getMetaClass()
    {
        groovy.lang.MetaClass $r1;
        groovy.lang.ExpandoMetaClass r0;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        $r1 = r0.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaClass myMetaClass>;

        return $r1;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        groovy.lang.MetaClass $r2, $r4, $r6;
        groovy.lang.ExpandoMetaClass r0;
        groovy.lang.ExpandoMetaClass$ExpandoMetaConstructor $r9;
        java.lang.Object $r3, $r7;
        java.lang.String r1;
        groovy.lang.MetaProperty $r5;
        groovy.lang.ExpandoMetaClass$ExpandoMetaProperty $r8, $r10;
        boolean $z0, $z1, $z2;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<groovy.lang.ExpandoMetaClass: boolean isValidExpandoProperty(java.lang.String)>(r1);

        if $z0 == 0 goto label4;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("static");

        if $z1 == 0 goto label1;

        $r10 = new groovy.lang.ExpandoMetaClass$ExpandoMetaProperty;

        specialinvoke $r10.<groovy.lang.ExpandoMetaClass$ExpandoMetaProperty: void <init>(groovy.lang.ExpandoMetaClass,java.lang.String,boolean)>(r0, r1, 1);

        return $r10;

     label1:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("constructor");

        if $z2 == 0 goto label2;

        $r9 = new groovy.lang.ExpandoMetaClass$ExpandoMetaConstructor;

        specialinvoke $r9.<groovy.lang.ExpandoMetaClass$ExpandoMetaConstructor: void <init>(groovy.lang.ExpandoMetaClass)>(r0);

        return $r9;

     label2:
        $r4 = r0.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaClass myMetaClass>;

        $r5 = interfaceinvoke $r4.<groovy.lang.MetaClass: groovy.lang.MetaProperty hasProperty(java.lang.Object,java.lang.String)>(r0, r1);

        if $r5 != null goto label3;

        $r8 = new groovy.lang.ExpandoMetaClass$ExpandoMetaProperty;

        specialinvoke $r8.<groovy.lang.ExpandoMetaClass$ExpandoMetaProperty: void <init>(groovy.lang.ExpandoMetaClass,java.lang.String)>(r0, r1);

        return $r8;

     label3:
        $r6 = r0.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaClass myMetaClass>;

        $r7 = interfaceinvoke $r6.<groovy.lang.MetaClass: java.lang.Object getProperty(java.lang.Object,java.lang.String)>(r0, r1);

        return $r7;

     label4:
        $r2 = r0.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaClass myMetaClass>;

        $r3 = interfaceinvoke $r2.<groovy.lang.MetaClass: java.lang.Object getProperty(java.lang.Object,java.lang.String)>(r0, r1);

        return $r3;
    }

    private boolean isValidExpandoProperty(java.lang.String)
    {
        groovy.lang.ExpandoMetaClass r1;
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r1 := @this: groovy.lang.ExpandoMetaClass;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("metaClass");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("class");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("metaMethods");

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("methods");

        if $z3 != 0 goto label1;

        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("properties");

        if $z4 != 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        return $z5;
    }

    public java.lang.Object invokeMethod(java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r3;
        groovy.lang.ExpandoMetaClass r0;
        java.lang.Object r2, $r4;
        java.lang.String r1;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaClass myMetaClass>;

        $r4 = interfaceinvoke $r3.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r0, r1, r2);

        return $r4;
    }

    public void setMetaClass(groovy.lang.MetaClass)
    {
        groovy.lang.MetaClass r1;
        groovy.lang.ExpandoMetaClass r0;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        r1 := @parameter0: groovy.lang.MetaClass;

        r0.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaClass myMetaClass> = r1;

        return;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        groovy.lang.ExpandoMetaClass r1;
        groovy.lang.Closure $r2;
        java.lang.Object r0;
        java.lang.String r3;
        boolean $z0, $z1;

        r1 := @this: groovy.lang.ExpandoMetaClass;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof groovy.lang.Closure;

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("constructor");

        if $z1 == 0 goto label1;

        r3 = "<init>";

     label1:
        $r2 = (groovy.lang.Closure) r0;

        virtualinvoke r1.<groovy.lang.ExpandoMetaClass: void registerInstanceMethod(java.lang.String,groovy.lang.Closure)>(r3, $r2);

        goto label3;

     label2:
        virtualinvoke r1.<groovy.lang.ExpandoMetaClass: void registerBeanProperty(java.lang.String,java.lang.Object)>(r3, r0);

     label3:
        return;
    }

    protected synchronized void performOperationOnMetaClass(groovy.lang.ExpandoMetaClass$Callable)
    {
        groovy.lang.ExpandoMetaClass$Callable r1;
        java.lang.Throwable $r2;
        groovy.lang.ExpandoMetaClass r0;
        boolean $z0, $z1, $z2;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        r1 := @parameter0: groovy.lang.ExpandoMetaClass$Callable;

     label1:
        $z0 = r0.<groovy.lang.ExpandoMetaClass: boolean allowChangesAfterInit>;

        if $z0 == 0 goto label2;

        virtualinvoke r0.<groovy.lang.ExpandoMetaClass: void setInitialized(boolean)>(0);

     label2:
        interfaceinvoke r1.<groovy.lang.ExpandoMetaClass$Callable: void call()>();

     label3:
        $z1 = r0.<groovy.lang.ExpandoMetaClass: boolean initCalled>;

        if $z1 == 0 goto label7;

        virtualinvoke r0.<groovy.lang.ExpandoMetaClass: void setInitialized(boolean)>(1);

        goto label7;

     label4:
        $r2 := @caughtexception;

     label5:
        $z2 = r0.<groovy.lang.ExpandoMetaClass: boolean initCalled>;

        if $z2 == 0 goto label6;

        virtualinvoke r0.<groovy.lang.ExpandoMetaClass: void setInitialized(boolean)>(1);

     label6:
        throw $r2;

     label7:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected void registerBeanProperty(java.lang.String, java.lang.Object)
    {
        groovy.lang.ExpandoMetaClass r0;
        groovy.lang.ExpandoMetaClass$2 $r1;
        java.lang.Object r2;
        java.lang.String r3;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        r3 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r1 = new groovy.lang.ExpandoMetaClass$2;

        specialinvoke $r1.<groovy.lang.ExpandoMetaClass$2: void <init>(groovy.lang.ExpandoMetaClass,java.lang.Object,java.lang.String)>(r0, r2, r3);

        virtualinvoke r0.<groovy.lang.ExpandoMetaClass: void performOperationOnMetaClass(groovy.lang.ExpandoMetaClass$Callable)>($r1);

        return;
    }

    protected void registerInstanceMethod(java.lang.String, groovy.lang.Closure)
    {
        groovy.lang.ExpandoMetaClass r0;
        groovy.lang.ExpandoMetaClass$3 $r1;
        groovy.lang.Closure r3;
        java.lang.String r2;
        boolean z0;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: groovy.lang.Closure;

        z0 = r0.<groovy.lang.ExpandoMetaClass: boolean initCalled>;

        $r1 = new groovy.lang.ExpandoMetaClass$3;

        specialinvoke $r1.<groovy.lang.ExpandoMetaClass$3: void <init>(groovy.lang.ExpandoMetaClass,java.lang.String,groovy.lang.Closure,boolean)>(r0, r2, r3, z0);

        virtualinvoke r0.<groovy.lang.ExpandoMetaClass: void performOperationOnMetaClass(groovy.lang.ExpandoMetaClass$Callable)>($r1);

        return;
    }

    public java.util.List getMethods()
    {
        java.util.List $r4;
        groovy.lang.ExpandoMetaClass r1;
        java.util.Map $r2;
        java.util.Collection $r3;
        java.util.ArrayList $r0;

        r1 := @this: groovy.lang.ExpandoMetaClass;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<groovy.lang.ExpandoMetaClass: java.util.Map expandoMethods>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r3);

        $r4 = specialinvoke r1.<groovy.lang.MetaClassImpl: java.util.List getMethods()>();

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        return $r0;
    }

    public java.util.List getProperties()
    {
        java.util.List $r2;
        groovy.lang.ExpandoMetaClass r1;
        java.util.ArrayList $r0;

        r1 := @this: groovy.lang.ExpandoMetaClass;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = specialinvoke r1.<groovy.lang.MetaClassImpl: java.util.List getProperties()>();

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r2);

        return $r0;
    }

    private void checkIfGroovyObjectMethod(org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod, java.lang.String)
    {
        org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod r2;
        groovy.lang.ExpandoMetaClass r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        r2 := @parameter0: org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod;

        r1 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<groovy.lang.ExpandoMetaClass: boolean isGetPropertyMethod(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        r0.<groovy.lang.ExpandoMetaClass: org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod getPropertyMethod> = r2;

        goto label3;

     label1:
        $z1 = specialinvoke r0.<groovy.lang.ExpandoMetaClass: boolean isInvokeMethod(java.lang.String,org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod)>(r1, r2);

        if $z1 == 0 goto label2;

        r0.<groovy.lang.ExpandoMetaClass: org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod invokeMethodMethod> = r2;

        goto label3;

     label2:
        $z2 = specialinvoke r0.<groovy.lang.ExpandoMetaClass: boolean isSetPropertyMethod(java.lang.String,org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod)>(r1, r2);

        if $z2 == 0 goto label3;

        r0.<groovy.lang.ExpandoMetaClass: org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod setPropertyMethod> = r2;

     label3:
        return;
    }

    private boolean isSetPropertyMethod(java.lang.String, org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod)
    {
        org.codehaus.groovy.reflection.CachedClass[] $r3;
        groovy.lang.ExpandoMetaClass r4;
        org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod r2;
        int $i0;
        java.lang.String r0, $r1;
        boolean $z0, $z1;

        r4 := @this: groovy.lang.ExpandoMetaClass;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod;

        $r1 = "setProperty";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r2.<org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $i0 = lengthof $r3;

        if $i0 != 2 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private boolean isGetPropertyMethod(java.lang.String)
    {
        groovy.lang.ExpandoMetaClass r2;
        java.lang.String r0, $r1;
        boolean $z0;

        r2 := @this: groovy.lang.ExpandoMetaClass;

        r0 := @parameter0: java.lang.String;

        $r1 = "getProperty";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        return $z0;
    }

    private boolean isInvokeMethod(java.lang.String, org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod)
    {
        org.codehaus.groovy.reflection.CachedClass[] $r3;
        groovy.lang.ExpandoMetaClass r4;
        org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod r2;
        int $i0;
        java.lang.String r0, $r1;
        boolean $z0, $z1;

        r4 := @this: groovy.lang.ExpandoMetaClass;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod;

        $r1 = "invokeMethod";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r2.<org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $i0 = lengthof $r3;

        if $i0 != 2 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private void performRegistryCallbacks()
    {
        groovy.lang.MetaClass $r4;
        groovy.lang.MetaClassRegistry$MetaClassCreationHandle $r2, $r7;
        groovy.lang.ExpandoMetaClass r1;
        groovy.lang.ExpandoMetaClassCreationHandle r8;
        groovy.lang.MetaClassRegistry $r0;
        java.lang.Class $r3, $r5;
        groovy.lang.AdaptingMetaClass $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r1 := @this: groovy.lang.ExpandoMetaClass;

        $r0 = staticinvoke <groovy.lang.GroovySystem: groovy.lang.MetaClassRegistry getMetaClassRegistry()>();

        $z0 = r1.<groovy.lang.ExpandoMetaClass: boolean modified>;

        if $z0 != 0 goto label2;

        r1.<groovy.lang.ExpandoMetaClass: boolean modified> = 1;

        $z2 = r1.<groovy.lang.ExpandoMetaClass: boolean inRegistry>;

        if $z2 == 0 goto label2;

        $r3 = r1.<groovy.lang.ExpandoMetaClass: java.lang.Class theClass>;

        $r4 = interfaceinvoke $r0.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r3);

        $z3 = $r4 instanceof groovy.lang.ExpandoMetaClass;

        if $z3 != 0 goto label1;

        $z4 = $r4 instanceof groovy.lang.AdaptingMetaClass;

        if $z4 == 0 goto label1;

        $r6 = (groovy.lang.AdaptingMetaClass) $r4;

        interfaceinvoke $r6.<groovy.lang.AdaptingMetaClass: void setAdaptee(groovy.lang.MetaClass)>(r1);

        goto label2;

     label1:
        $r5 = r1.<groovy.lang.ExpandoMetaClass: java.lang.Class theClass>;

        interfaceinvoke $r0.<groovy.lang.MetaClassRegistry: void setMetaClass(java.lang.Class,groovy.lang.MetaClass)>($r5, r1);

     label2:
        $r7 = interfaceinvoke $r0.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClassRegistry$MetaClassCreationHandle getMetaClassCreationHandler()>();

        $z5 = $r7 instanceof groovy.lang.ExpandoMetaClassCreationHandle;

        if $z5 == 0 goto label3;

        $r2 = interfaceinvoke $r0.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClassRegistry$MetaClassCreationHandle getMetaClassCreationHandler()>();

        r8 = (groovy.lang.ExpandoMetaClassCreationHandle) $r2;

        $z1 = virtualinvoke r8.<groovy.lang.ExpandoMetaClassCreationHandle: boolean hasModifiedMetaClass(groovy.lang.ExpandoMetaClass)>(r1);

        if $z1 != 0 goto label3;

        virtualinvoke r8.<groovy.lang.ExpandoMetaClassCreationHandle: void registerModifiedMetaClass(groovy.lang.ExpandoMetaClass)>(r1);

     label3:
        return;
    }

    private void registerBeanPropertyForMethod(groovy.lang.MetaMethod, java.lang.String, boolean, boolean)
    {
        groovy.lang.ExpandoMetaClass r0;
        org.codehaus.groovy.reflection.CachedClass[] $r7, $r12;
        groovy.lang.MetaBeanProperty $r5, $r14, $r16, $r18, r21, $r24;
        java.util.Map r1, $r19, $r25;
        java.lang.String r2, $r26;
        boolean z0, z1;
        org.codehaus.groovy.reflection.CachedClass $r8, $r13;
        groovy.lang.MetaMethod $r4, r6, $r10;
        java.lang.Object $r3;
        java.lang.Class $r9, $r11, $r15, $r17, $r20, $r22, $r23;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        r6 := @parameter0: groovy.lang.MetaMethod;

        r2 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        z0 := @parameter3: boolean;

        if z0 == 0 goto label01;

        $r19 = r0.<groovy.lang.ExpandoMetaClass: java.util.Map staticBeanPropertyCache>;

        goto label02;

     label01:
        $r19 = r0.<groovy.lang.ExpandoMetaClass: java.util.Map beanPropertyCache>;

     label02:
        r1 = $r19;

        $r3 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r18 = (groovy.lang.MetaBeanProperty) $r3;

        if $r18 != null goto label09;

        if z1 == 0 goto label05;

        $r16 = new groovy.lang.MetaBeanProperty;

        $r17 = <groovy.lang.ExpandoMetaClass: java.lang.Class class$java$lang$Object>;

        if $r17 != null goto label03;

        $r20 = staticinvoke <groovy.lang.ExpandoMetaClass: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <groovy.lang.ExpandoMetaClass: java.lang.Class class$java$lang$Object> = $r20;

        goto label04;

     label03:
        $r20 = <groovy.lang.ExpandoMetaClass: java.lang.Class class$java$lang$Object>;

     label04:
        specialinvoke $r16.<groovy.lang.MetaBeanProperty: void <init>(java.lang.String,java.lang.Class,groovy.lang.MetaMethod,groovy.lang.MetaMethod)>(r2, $r20, r6, null);

        r21 = $r16;

        goto label08;

     label05:
        $r14 = new groovy.lang.MetaBeanProperty;

        $r15 = <groovy.lang.ExpandoMetaClass: java.lang.Class class$java$lang$Object>;

        if $r15 != null goto label06;

        $r22 = staticinvoke <groovy.lang.ExpandoMetaClass: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <groovy.lang.ExpandoMetaClass: java.lang.Class class$java$lang$Object> = $r22;

        goto label07;

     label06:
        $r22 = <groovy.lang.ExpandoMetaClass: java.lang.Class class$java$lang$Object>;

     label07:
        specialinvoke $r14.<groovy.lang.MetaBeanProperty: void <init>(java.lang.String,java.lang.Class,groovy.lang.MetaMethod,groovy.lang.MetaMethod)>(r2, $r22, null, r6);

        r21 = $r14;

     label08:
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r21);

        goto label14;

     label09:
        if z1 == 0 goto label13;

        $r10 = virtualinvoke $r18.<groovy.lang.MetaBeanProperty: groovy.lang.MetaMethod getSetter()>();

        if $r10 == null goto label10;

        $r12 = virtualinvoke $r10.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $r13 = $r12[0];

        $r23 = virtualinvoke $r13.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        goto label12;

     label10:
        $r11 = <groovy.lang.ExpandoMetaClass: java.lang.Class class$java$lang$Object>;

        if $r11 != null goto label11;

        $r23 = staticinvoke <groovy.lang.ExpandoMetaClass: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <groovy.lang.ExpandoMetaClass: java.lang.Class class$java$lang$Object> = $r23;

        goto label12;

     label11:
        $r23 = <groovy.lang.ExpandoMetaClass: java.lang.Class class$java$lang$Object>;

     label12:
        $r24 = new groovy.lang.MetaBeanProperty;

        specialinvoke $r24.<groovy.lang.MetaBeanProperty: void <init>(java.lang.String,java.lang.Class,groovy.lang.MetaMethod,groovy.lang.MetaMethod)>(r2, $r23, r6, $r10);

        r21 = $r24;

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r24);

        goto label14;

     label13:
        $r4 = virtualinvoke $r18.<groovy.lang.MetaBeanProperty: groovy.lang.MetaMethod getGetter()>();

        $r5 = new groovy.lang.MetaBeanProperty;

        $r7 = virtualinvoke r6.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $r8 = $r7[0];

        $r9 = virtualinvoke $r8.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        specialinvoke $r5.<groovy.lang.MetaBeanProperty: void <init>(java.lang.String,java.lang.Class,groovy.lang.MetaMethod,groovy.lang.MetaMethod)>(r2, $r9, $r4, r6);

        r21 = $r5;

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r5);

     label14:
        $r25 = r0.<groovy.lang.ExpandoMetaClass: java.util.Map expandoProperties>;

        $r26 = virtualinvoke r21.<groovy.lang.MetaBeanProperty: java.lang.String getName()>();

        interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, r21);

        virtualinvoke r0.<groovy.lang.ExpandoMetaClass: void addMetaBeanProperty(groovy.lang.MetaBeanProperty)>(r21);

        return;
    }

    protected void registerStaticMethod(java.lang.String, groovy.lang.Closure)
    {
        groovy.lang.ExpandoMetaClass r0;
        groovy.lang.Closure r3;
        groovy.lang.ExpandoMetaClass$4 $r1;
        java.lang.String r2;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: groovy.lang.Closure;

        $r1 = new groovy.lang.ExpandoMetaClass$4;

        specialinvoke $r1.<groovy.lang.ExpandoMetaClass$4: void <init>(groovy.lang.ExpandoMetaClass,java.lang.String,groovy.lang.Closure)>(r0, r2, r3);

        virtualinvoke r0.<groovy.lang.ExpandoMetaClass: void performOperationOnMetaClass(groovy.lang.ExpandoMetaClass$Callable)>($r1);

        return;
    }

    public java.lang.Class getJavaClass()
    {
        java.lang.Class $r1;
        groovy.lang.ExpandoMetaClass r0;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        $r1 = r0.<groovy.lang.ExpandoMetaClass: java.lang.Class theClass>;

        return $r1;
    }

    public void refreshInheritedMethods(java.util.Set)
    {
        groovy.lang.ExpandoMetaClass r3, r4;
        groovy.lang.MetaBeanProperty r10;
        java.util.Map $r11;
        java.lang.String $r12;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r1, $r6, $r8;
        java.util.Collection $r7;
        java.util.Set r0;
        java.util.List $r5;
        groovy.lang.MetaMethod r14;
        java.lang.Object $r2, $r9, $r13;

        r4 := @this: groovy.lang.ExpandoMetaClass;

        r0 := @parameter0: java.util.Set;

        $r1 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (groovy.lang.ExpandoMetaClass) $r2;

        if r3 == r4 goto label6;

        $r5 = virtualinvoke r3.<groovy.lang.ExpandoMetaClass: java.util.List getExpandoMethods()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r13 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r14 = (groovy.lang.MetaMethod) $r13;

        $z2 = virtualinvoke r14.<groovy.lang.MetaMethod: boolean isStatic()>();

        if $z2 == 0 goto label3;

        goto label2;

     label3:
        specialinvoke r4.<groovy.lang.ExpandoMetaClass: void addSuperMethodIfNotOverriden(groovy.lang.MetaMethod)>(r14);

        goto label2;

     label4:
        $r7 = virtualinvoke r3.<groovy.lang.ExpandoMetaClass: java.util.Collection getExpandoProperties()>();

        $r8 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (groovy.lang.MetaBeanProperty) $r9;

        $r11 = r4.<groovy.lang.ExpandoMetaClass: java.util.Map expandoProperties>;

        $r12 = virtualinvoke r10.<groovy.lang.MetaBeanProperty: java.lang.String getName()>();

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, r10);

        virtualinvoke r4.<groovy.lang.ExpandoMetaClass: void addMetaBeanProperty(groovy.lang.MetaBeanProperty)>(r10);

        goto label5;

     label6:
        goto label1;

     label7:
        return;
    }

    public java.util.List getExpandoMethods()
    {
        java.util.List $r3, $r4;
        groovy.lang.ExpandoMetaClass r0;
        java.util.Map $r1;
        java.util.Collection $r2;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        $r1 = r0.<groovy.lang.ExpandoMetaClass: java.util.Map expandoMethods>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.util.List toList(java.util.Collection)>($r2);

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r3);

        return $r4;
    }

    public java.util.Collection getExpandoProperties()
    {
        groovy.lang.ExpandoMetaClass r0;
        java.util.Map $r1;
        java.util.Collection $r2, $r3;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        $r1 = r0.<groovy.lang.ExpandoMetaClass: java.util.Map expandoProperties>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r2);

        return $r3;
    }

    public java.lang.Object invokeMethod(java.lang.Class, java.lang.Object, java.lang.String, java.lang.Object[], boolean, boolean)
    {
        java.lang.Object[] r5, $r7;
        groovy.lang.ExpandoMetaClass r0;
        org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod $r1, $r8;
        java.lang.Class r2;
        java.lang.Object r3, $r6, $r9;
        java.lang.String r4;
        boolean z0, z1;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        r2 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.Object[];

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        $r1 = r0.<groovy.lang.ExpandoMetaClass: org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod invokeMethodMethod>;

        if $r1 == null goto label1;

        $r8 = r0.<groovy.lang.ExpandoMetaClass: org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod invokeMethodMethod>;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = r4;

        $r7[1] = r5;

        $r9 = virtualinvoke $r8.<org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r3, $r7);

        return $r9;

     label1:
        $r6 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object invokeMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean,boolean)>(r2, r3, r4, r5, z0, z1);

        return $r6;
    }

    public java.lang.Object invokeStaticMethod(java.lang.Object, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r4, $r6;
        groovy.lang.ExpandoMetaClass r0;
        org.codehaus.groovy.runtime.metaclass.ClosureStaticMetaMethod $r1, $r7;
        java.lang.Object r2, $r5, $r8;
        java.lang.String r3;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Object[];

        $r1 = r0.<groovy.lang.ExpandoMetaClass: org.codehaus.groovy.runtime.metaclass.ClosureStaticMetaMethod invokeStaticMethodMethod>;

        if $r1 == null goto label1;

        $r7 = r0.<groovy.lang.ExpandoMetaClass: org.codehaus.groovy.runtime.metaclass.ClosureStaticMetaMethod invokeStaticMethodMethod>;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = r3;

        $r6[1] = r4;

        $r8 = virtualinvoke $r7.<org.codehaus.groovy.runtime.metaclass.ClosureStaticMetaMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r6);

        return $r8;

     label1:
        $r5 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object invokeStaticMethod(java.lang.Object,java.lang.String,java.lang.Object[])>(r2, r3, r4);

        return $r5;
    }

    public java.lang.Object getProperty(java.lang.Class, java.lang.Object, java.lang.String, boolean, boolean)
    {
        java.lang.Object[] $r6;
        groovy.lang.ExpandoMetaClass r0;
        org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod $r7;
        java.lang.Class r2, $r5;
        java.lang.Object r3, $r4, $r8;
        java.lang.String r1;
        boolean $z0, z1, z2, $z3;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        r2 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.Object;

        r1 := @parameter2: java.lang.String;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        $z0 = specialinvoke r0.<groovy.lang.ExpandoMetaClass: boolean hasOverrideGetProperty(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<groovy.lang.ExpandoMetaClass: java.lang.Class getJavaClass()>();

        $z3 = virtualinvoke $r5.<java.lang.Class: boolean isInstance(java.lang.Object)>(r3);

        if $z3 == 0 goto label1;

        $r7 = r0.<groovy.lang.ExpandoMetaClass: org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod getPropertyMethod>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r1;

        $r8 = virtualinvoke $r7.<org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r3, $r6);

        return $r8;

     label1:
        $r4 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String,boolean,boolean)>(r2, r3, r1, z1, z2);

        return $r4;
    }

    public java.lang.Object getProperty(java.lang.Object, java.lang.String)
    {
        java.lang.Object[] $r5;
        groovy.lang.ExpandoMetaClass r0;
        org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod $r6;
        java.lang.Object r2, $r3, $r7;
        java.lang.Class $r4;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        r2 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<groovy.lang.ExpandoMetaClass: boolean hasOverrideGetProperty(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<groovy.lang.ExpandoMetaClass: java.lang.Class getJavaClass()>();

        $z1 = virtualinvoke $r4.<java.lang.Class: boolean isInstance(java.lang.Object)>(r2);

        if $z1 == 0 goto label1;

        $r6 = r0.<groovy.lang.ExpandoMetaClass: org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod getPropertyMethod>;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r1;

        $r7 = virtualinvoke $r6.<org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r5);

        return $r7;

     label1:
        $r3 = specialinvoke r0.<groovy.lang.MetaClassImpl: java.lang.Object getProperty(java.lang.Object,java.lang.String)>(r2, r1);

        return $r3;
    }

    private boolean hasOverrideGetProperty(java.lang.String)
    {
        org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod $r1;
        groovy.lang.ExpandoMetaClass r0;
        java.lang.String r2;
        boolean $z0, $z1, $z2;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<groovy.lang.ExpandoMetaClass: org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod getPropertyMethod>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("metaClass");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("class");

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void setProperty(java.lang.Class, java.lang.Object, java.lang.String, java.lang.Object, boolean, boolean)
    {
        java.lang.Object[] $r7;
        groovy.lang.ExpandoMetaClass r0;
        org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod $r1, $r8;
        java.lang.Class r2, $r6;
        java.lang.Object r3, r5;
        java.lang.String r4;
        boolean z0, z1, $z2, $z3;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        r2 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.Object;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        $r1 = r0.<groovy.lang.ExpandoMetaClass: org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod setPropertyMethod>;

        if $r1 == null goto label1;

        $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("metaClass");

        if $z2 != 0 goto label1;

        $r6 = virtualinvoke r0.<groovy.lang.ExpandoMetaClass: java.lang.Class getJavaClass()>();

        $z3 = virtualinvoke $r6.<java.lang.Class: boolean isInstance(java.lang.Object)>(r3);

        if $z3 == 0 goto label1;

        $r8 = r0.<groovy.lang.ExpandoMetaClass: org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod setPropertyMethod>;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = r4;

        $r7[1] = r5;

        virtualinvoke $r8.<org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r3, $r7);

        return;

     label1:
        specialinvoke r0.<groovy.lang.MetaClassImpl: void setProperty(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object,boolean,boolean)>(r2, r3, r4, r5, z0, z1);

        return;
    }

    public groovy.lang.MetaProperty getMetaProperty(java.lang.String)
    {
        groovy.lang.ExpandoMetaClass r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        groovy.lang.MetaProperty r4, $r5;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<groovy.lang.ExpandoMetaClass: java.util.Map expandoProperties>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (groovy.lang.MetaProperty) $r3;

        if r4 == null goto label1;

        return r4;

     label1:
        $r5 = specialinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaProperty getMetaProperty(java.lang.String)>(r1);

        return $r5;
    }

    public boolean hasMetaProperty(java.lang.String)
    {
        groovy.lang.ExpandoMetaClass r0;
        java.lang.String r1;
        groovy.lang.MetaProperty $r2;
        boolean $z0;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<groovy.lang.ExpandoMetaClass: groovy.lang.MetaProperty getMetaProperty(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasMetaMethod(java.lang.String, java.lang.Class[])
    {
        groovy.lang.MetaMethod $r3;
        groovy.lang.ExpandoMetaClass r0;
        java.lang.Class[] r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: groovy.lang.ExpandoMetaClass;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class[];

        $r3 = specialinvoke r0.<groovy.lang.MetaClassImpl: groovy.lang.MetaMethod pickMethod(java.lang.String,java.lang.Class[])>(r1, r2);

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private boolean isGetter(java.lang.String, org.codehaus.groovy.reflection.CachedClass[])
    {
        org.codehaus.groovy.reflection.CachedClass[] r0;
        groovy.lang.ExpandoMetaClass r3;
        char $c3, $c5;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r1, $r2, r4;
        boolean $z0, $z1, $z2, $z3;

        r3 := @this: groovy.lang.ExpandoMetaClass;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: org.codehaus.groovy.reflection.CachedClass[];

        if r4 == null goto label1;

        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        if r0 != null goto label2;

     label1:
        return 0;

     label2:
        $i1 = lengthof r0;

        if $i1 == 0 goto label3;

        return 0;

     label3:
        $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("get");

        if $z0 == 0 goto label4;

        $r2 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>(3);

        $i4 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i4 <= 0 goto label5;

        $c5 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        $z3 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c5);

        if $z3 == 0 goto label5;

        return 1;

     label4:
        $z1 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("is");

        if $z1 == 0 goto label5;

        $r1 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>(2);

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i2 <= 0 goto label5;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $z2 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c3);

        if $z2 == 0 goto label5;

        return 1;

     label5:
        return 0;
    }

    private java.lang.String getPropertyForGetter(java.lang.String)
    {
        groovy.lang.ExpandoMetaClass r2;
        int $i0;
        java.lang.String r0, $r1, $r3, $r4, $r5;
        boolean $z0, $z1;

        r2 := @this: groovy.lang.ExpandoMetaClass;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("get");

        if $z0 == 0 goto label3;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(3);

        $r5 = specialinvoke r2.<groovy.lang.ExpandoMetaClass: java.lang.String convertPropertyName(java.lang.String)>($r4);

        return $r5;

     label3:
        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("is");

        if $z1 == 0 goto label4;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(2);

        $r3 = specialinvoke r2.<groovy.lang.ExpandoMetaClass: java.lang.String convertPropertyName(java.lang.String)>($r1);

        return $r3;

     label4:
        return null;
    }

    private java.lang.String convertPropertyName(java.lang.String)
    {
        groovy.lang.ExpandoMetaClass r5;
        java.lang.StringBuffer $r1, $r2, $r3;
        int $i3, $i4;
        java.lang.String r0, $r4, $r6;
        boolean $z0, $z1, $z2;
        char $c0, $c1, $c2, $c5, $c6;

        r5 := @this: groovy.lang.ExpandoMetaClass;

        r0 := @parameter0: java.lang.String;

        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c0);

        if $z0 == 0 goto label1;

        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i4 <= 1 goto label1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $z1 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c5);

        if $z1 == 0 goto label1;

        return r0;

     label1:
        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z2 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c6);

        if $z2 == 0 goto label2;

        return r0;

     label2:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $c2 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c1);

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i3 <= 1 goto label3;

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        goto label4;

     label3:
        $r6 = "";

     label4:
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String getPropertyForSetter(java.lang.String)
    {
        groovy.lang.ExpandoMetaClass r2;
        int $i0;
        java.lang.String r0, $r1, $r3;
        boolean $z0;

        r2 := @this: groovy.lang.ExpandoMetaClass;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("set");

        if $z0 == 0 goto label3;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(3);

        $r3 = specialinvoke r2.<groovy.lang.ExpandoMetaClass: java.lang.String convertPropertyName(java.lang.String)>($r1);

        return $r3;

     label3:
        return null;
    }

    public boolean isSetter(java.lang.String, org.codehaus.groovy.reflection.CachedClass[])
    {
        org.codehaus.groovy.reflection.CachedClass[] r0;
        groovy.lang.ExpandoMetaClass r2;
        char $c3;
        int $i0, $i1, $i2;
        java.lang.String $r1, r3;
        boolean $z0, $z1;

        r2 := @this: groovy.lang.ExpandoMetaClass;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: org.codehaus.groovy.reflection.CachedClass[];

        if r3 == null goto label1;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        if r0 != null goto label2;

     label1:
        return 0;

     label2:
        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("set");

        if $z0 == 0 goto label4;

        $i1 = lengthof r0;

        if $i1 == 1 goto label3;

        return 0;

     label3:
        $r1 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>(3);

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i2 <= 0 goto label4;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $z1 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c3);

        if $z1 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static java.util.Set access$000(groovy.lang.ExpandoMetaClass)
    {
        java.util.Set $r1;
        groovy.lang.ExpandoMetaClass r0;

        r0 := @parameter0: groovy.lang.ExpandoMetaClass;

        $r1 = r0.<groovy.lang.ExpandoMetaClass: java.util.Set inheritedMetaMethods>;

        return $r1;
    }

    static void access$100(groovy.lang.ExpandoMetaClass, org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod, java.lang.String)
    {
        org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod r1;
        java.lang.String r2;
        groovy.lang.ExpandoMetaClass r0;

        r0 := @parameter0: groovy.lang.ExpandoMetaClass;

        r1 := @parameter1: org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<groovy.lang.ExpandoMetaClass: void checkIfGroovyObjectMethod(org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod,java.lang.String)>(r1, r2);

        return;
    }

    static java.util.Map access$200(groovy.lang.ExpandoMetaClass)
    {
        groovy.lang.ExpandoMetaClass r0;
        java.util.Map $r1;

        r0 := @parameter0: groovy.lang.ExpandoMetaClass;

        $r1 = r0.<groovy.lang.ExpandoMetaClass: java.util.Map expandoMethods>;

        return $r1;
    }

    static java.lang.Class[] access$300()
    {
        java.lang.Class[] $r0;

        $r0 = <groovy.lang.ExpandoMetaClass: java.lang.Class[] ZERO_ARGUMENTS>;

        return $r0;
    }

    static java.util.Map access$400(groovy.lang.ExpandoMetaClass)
    {
        groovy.lang.ExpandoMetaClass r0;
        java.util.Map $r1;

        r0 := @parameter0: groovy.lang.ExpandoMetaClass;

        $r1 = r0.<groovy.lang.ExpandoMetaClass: java.util.Map expandoProperties>;

        return $r1;
    }

    static void access$500(groovy.lang.ExpandoMetaClass)
    {
        groovy.lang.ExpandoMetaClass r0;

        r0 := @parameter0: groovy.lang.ExpandoMetaClass;

        specialinvoke r0.<groovy.lang.ExpandoMetaClass: void performRegistryCallbacks()>();

        return;
    }

    static boolean access$600(groovy.lang.ExpandoMetaClass, java.lang.String, org.codehaus.groovy.reflection.CachedClass[])
    {
        groovy.lang.ExpandoMetaClass r0;
        org.codehaus.groovy.reflection.CachedClass[] r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: groovy.lang.ExpandoMetaClass;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.codehaus.groovy.reflection.CachedClass[];

        $z0 = specialinvoke r0.<groovy.lang.ExpandoMetaClass: boolean isGetter(java.lang.String,org.codehaus.groovy.reflection.CachedClass[])>(r1, r2);

        return $z0;
    }

    static java.lang.String access$700(groovy.lang.ExpandoMetaClass, java.lang.String)
    {
        java.lang.String r1, $r2;
        groovy.lang.ExpandoMetaClass r0;

        r0 := @parameter0: groovy.lang.ExpandoMetaClass;

        r1 := @parameter1: java.lang.String;

        $r2 = specialinvoke r0.<groovy.lang.ExpandoMetaClass: java.lang.String getPropertyForGetter(java.lang.String)>(r1);

        return $r2;
    }

    static void access$800(groovy.lang.ExpandoMetaClass, groovy.lang.MetaMethod, java.lang.String, boolean, boolean)
    {
        groovy.lang.MetaMethod r1;
        groovy.lang.ExpandoMetaClass r0;
        java.lang.String r2;
        boolean z0, z1;

        r0 := @parameter0: groovy.lang.ExpandoMetaClass;

        r1 := @parameter1: groovy.lang.MetaMethod;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        specialinvoke r0.<groovy.lang.ExpandoMetaClass: void registerBeanPropertyForMethod(groovy.lang.MetaMethod,java.lang.String,boolean,boolean)>(r1, r2, z0, z1);

        return;
    }

    static org.codehaus.groovy.runtime.metaclass.ClosureStaticMetaMethod access$902(groovy.lang.ExpandoMetaClass, org.codehaus.groovy.runtime.metaclass.ClosureStaticMetaMethod)
    {
        org.codehaus.groovy.runtime.metaclass.ClosureStaticMetaMethod r1;
        groovy.lang.ExpandoMetaClass r0;

        r0 := @parameter0: groovy.lang.ExpandoMetaClass;

        r1 := @parameter1: org.codehaus.groovy.runtime.metaclass.ClosureStaticMetaMethod;

        r0.<groovy.lang.ExpandoMetaClass: org.codehaus.groovy.runtime.metaclass.ClosureStaticMetaMethod invokeStaticMethodMethod> = r1;

        return r1;
    }

    static void <clinit>()
    {
        java.lang.Class[] $r0;

        <groovy.lang.ExpandoMetaClass: java.lang.String GROOVY_CONSTRUCTOR> = "<init>";

        <groovy.lang.ExpandoMetaClass: java.lang.String META_CLASS_PROPERTY> = "metaClass";

        <groovy.lang.ExpandoMetaClass: java.lang.String CLASS_PROPERTY> = "class";

        <groovy.lang.ExpandoMetaClass: java.lang.String INVOKE_METHOD_METHOD> = "invokeMethod";

        <groovy.lang.ExpandoMetaClass: java.lang.String SET_PROPERTY_METHOD> = "setProperty";

        <groovy.lang.ExpandoMetaClass: java.lang.String GET_PROPERTY_METHOD> = "getProperty";

        <groovy.lang.ExpandoMetaClass: java.lang.String CONSTRUCTOR> = "constructor";

        <groovy.lang.ExpandoMetaClass: java.lang.String STATIC_QUALIFIER> = "static";

        <groovy.lang.ExpandoMetaClass: java.lang.String PROPERTIES> = "properties";

        <groovy.lang.ExpandoMetaClass: java.lang.String METHODS> = "methods";

        <groovy.lang.ExpandoMetaClass: java.lang.String META_METHODS> = "metaMethods";

        <groovy.lang.ExpandoMetaClass: java.lang.String CLASS> = "class";

        <groovy.lang.ExpandoMetaClass: java.lang.String META_CLASS> = "metaClass";

        $r0 = newarray (java.lang.Class)[0];

        <groovy.lang.ExpandoMetaClass: java.lang.Class[] ZERO_ARGUMENTS> = $r0;

        return;
    }
}
