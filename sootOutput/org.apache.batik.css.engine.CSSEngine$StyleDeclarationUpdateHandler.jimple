public class org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler extends org.apache.batik.css.engine.CSSEngine$DocumentAdapter implements org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler
{
    public org.apache.batik.css.engine.StyleMap styleMap;
    public boolean[] updatedProperties;
    private final org.apache.batik.css.engine.CSSEngine this$0;

    protected void <init>(org.apache.batik.css.engine.CSSEngine)
    {
        org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler r0;
        int $i0;
        boolean[] $r3;
        org.apache.batik.css.engine.CSSEngine r1, $r2;

        r0 := @this: org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler;

        r1 := @parameter0: org.apache.batik.css.engine.CSSEngine;

        specialinvoke r0.<org.apache.batik.css.engine.CSSEngine$DocumentAdapter: void <init>()>();

        r0.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler: org.apache.batik.css.engine.CSSEngine this$0> = r1;

        $r2 = r0.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler: org.apache.batik.css.engine.CSSEngine this$0>;

        $i0 = virtualinvoke $r2.<org.apache.batik.css.engine.CSSEngine: int getNumberOfProperties()>();

        $r3 = newarray (boolean)[$i0];

        r0.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler: boolean[] updatedProperties> = $r3;

        return;
    }

    public void property(java.lang.String, org.w3c.css.sac.LexicalUnit, boolean) throws org.w3c.css.sac.CSSException
    {
        org.apache.batik.css.engine.CSSEngine $r2, $r5, $r8, $r14, $r15, $r17;
        org.apache.batik.css.engine.value.ShorthandManager $r18;
        org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler r0;
        org.apache.batik.css.engine.StyleMap $r3, $r11, $r12, $r13;
        int $i0, $i1, $i3, $i5;
        org.w3c.css.sac.LexicalUnit r7;
        java.lang.String r1;
        boolean $z0, z1;
        org.apache.batik.css.engine.value.ShorthandManager[] $r16;
        boolean[] $r4;
        org.apache.batik.css.engine.value.ValueManager[] $r6;
        org.apache.batik.css.engine.value.Value $r10;
        org.apache.batik.css.engine.value.ValueManager $r9;

        r0 := @this: org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler;

        r1 := @parameter0: java.lang.String;

        r7 := @parameter1: org.w3c.css.sac.LexicalUnit;

        z1 := @parameter2: boolean;

        $r2 = r0.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler: org.apache.batik.css.engine.CSSEngine this$0>;

        $i0 = virtualinvoke $r2.<org.apache.batik.css.engine.CSSEngine: int getPropertyIndex(java.lang.String)>(r1);

        $i3 = (int) -1;

        if $i0 != $i3 goto label2;

        $r14 = r0.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler: org.apache.batik.css.engine.CSSEngine this$0>;

        $i1 = virtualinvoke $r14.<org.apache.batik.css.engine.CSSEngine: int getShorthandIndex(java.lang.String)>(r1);

        $i5 = (int) -1;

        if $i1 != $i5 goto label1;

        return;

     label1:
        $r15 = r0.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler: org.apache.batik.css.engine.CSSEngine this$0>;

        $r16 = $r15.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.value.ShorthandManager[] shorthandManagers>;

        $r18 = $r16[$i1];

        $r17 = r0.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler: org.apache.batik.css.engine.CSSEngine this$0>;

        interfaceinvoke $r18.<org.apache.batik.css.engine.value.ShorthandManager: void setValues(org.apache.batik.css.engine.CSSEngine,org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler,org.w3c.css.sac.LexicalUnit,boolean)>($r17, r0, r7, z1);

        goto label4;

     label2:
        $r3 = r0.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler: org.apache.batik.css.engine.StyleMap styleMap>;

        $z0 = virtualinvoke $r3.<org.apache.batik.css.engine.StyleMap: boolean isImportant(int)>($i0);

        if $z0 == 0 goto label3;

        return;

     label3:
        $r4 = r0.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler: boolean[] updatedProperties>;

        $r4[$i0] = 1;

        $r5 = r0.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler: org.apache.batik.css.engine.CSSEngine this$0>;

        $r6 = $r5.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.value.ValueManager[] valueManagers>;

        $r9 = $r6[$i0];

        $r8 = r0.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler: org.apache.batik.css.engine.CSSEngine this$0>;

        $r10 = interfaceinvoke $r9.<org.apache.batik.css.engine.value.ValueManager: org.apache.batik.css.engine.value.Value createValue(org.w3c.css.sac.LexicalUnit,org.apache.batik.css.engine.CSSEngine)>(r7, $r8);

        $r11 = r0.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler: org.apache.batik.css.engine.StyleMap styleMap>;

        virtualinvoke $r11.<org.apache.batik.css.engine.StyleMap: void putMask(int,short)>($i0, 0);

        $r12 = r0.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler: org.apache.batik.css.engine.StyleMap styleMap>;

        virtualinvoke $r12.<org.apache.batik.css.engine.StyleMap: void putValue(int,org.apache.batik.css.engine.value.Value)>($i0, $r10);

        $r13 = r0.<org.apache.batik.css.engine.CSSEngine$StyleDeclarationUpdateHandler: org.apache.batik.css.engine.StyleMap styleMap>;

        virtualinvoke $r13.<org.apache.batik.css.engine.StyleMap: void putOrigin(int,short)>($i0, -32768);

     label4:
        return;
    }
}
