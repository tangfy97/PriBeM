public class org.apache.lucene.search.SpanQueryFilter extends org.apache.lucene.search.SpanFilter
{
    protected org.apache.lucene.search.spans.SpanQuery query;

    protected void <init>()
    {
        org.apache.lucene.search.SpanQueryFilter r0;

        r0 := @this: org.apache.lucene.search.SpanQueryFilter;

        specialinvoke r0.<org.apache.lucene.search.SpanFilter: void <init>()>();

        return;
    }

    public void <init>(org.apache.lucene.search.spans.SpanQuery)
    {
        org.apache.lucene.search.SpanQueryFilter r0;
        org.apache.lucene.search.spans.SpanQuery r1;

        r0 := @this: org.apache.lucene.search.SpanQueryFilter;

        r1 := @parameter0: org.apache.lucene.search.spans.SpanQuery;

        specialinvoke r0.<org.apache.lucene.search.SpanFilter: void <init>()>();

        r0.<org.apache.lucene.search.SpanQueryFilter: org.apache.lucene.search.spans.SpanQuery query> = r1;

        return;
    }

    public org.apache.lucene.search.DocIdSet getDocIdSet(org.apache.lucene.index.IndexReader) throws java.io.IOException
    {
        org.apache.lucene.search.SpanFilterResult $r2;
        org.apache.lucene.search.DocIdSet $r3;
        org.apache.lucene.search.SpanQueryFilter r0;
        org.apache.lucene.index.IndexReader r1;

        r0 := @this: org.apache.lucene.search.SpanQueryFilter;

        r1 := @parameter0: org.apache.lucene.index.IndexReader;

        $r2 = virtualinvoke r0.<org.apache.lucene.search.SpanQueryFilter: org.apache.lucene.search.SpanFilterResult bitSpans(org.apache.lucene.index.IndexReader)>(r1);

        $r3 = virtualinvoke $r2.<org.apache.lucene.search.SpanFilterResult: org.apache.lucene.search.DocIdSet getDocIdSet()>();

        return $r3;
    }

    public org.apache.lucene.search.SpanFilterResult bitSpans(org.apache.lucene.index.IndexReader) throws java.io.IOException
    {
        org.apache.lucene.util.FixedBitSet $r9;
        java.util.ArrayList $r10;
        org.apache.lucene.search.SpanFilterResult $r12;
        org.apache.lucene.search.SpanFilterResult$PositionInfo r8, $r11;
        int $i0, $i1, $i2, $i3, i4, $i6;
        org.apache.lucene.search.spans.SpanQuery $r3;
        boolean $z0;
        org.apache.lucene.search.SpanQueryFilter r2;
        org.apache.lucene.index.IndexReader r1;
        org.apache.lucene.search.spans.Spans $r4;

        r2 := @this: org.apache.lucene.search.SpanQueryFilter;

        r1 := @parameter0: org.apache.lucene.index.IndexReader;

        $r9 = new org.apache.lucene.util.FixedBitSet;

        $i0 = virtualinvoke r1.<org.apache.lucene.index.IndexReader: int maxDoc()>();

        specialinvoke $r9.<org.apache.lucene.util.FixedBitSet: void <init>(int)>($i0);

        $r3 = r2.<org.apache.lucene.search.SpanQueryFilter: org.apache.lucene.search.spans.SpanQuery query>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.search.spans.SpanQuery: org.apache.lucene.search.spans.Spans getSpans(org.apache.lucene.index.IndexReader)>(r1);

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>(20);

        $i6 = (int) -1;

        i4 = $i6;

        r8 = null;

     label1:
        $z0 = virtualinvoke $r4.<org.apache.lucene.search.spans.Spans: boolean next()>();

        if $z0 == 0 goto label3;

        $i1 = virtualinvoke $r4.<org.apache.lucene.search.spans.Spans: int doc()>();

        virtualinvoke $r9.<org.apache.lucene.util.FixedBitSet: void set(int)>($i1);

        if i4 == $i1 goto label2;

        $r11 = new org.apache.lucene.search.SpanFilterResult$PositionInfo;

        specialinvoke $r11.<org.apache.lucene.search.SpanFilterResult$PositionInfo: void <init>(int)>($i1);

        r8 = $r11;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11);

        i4 = $i1;

     label2:
        $i2 = virtualinvoke $r4.<org.apache.lucene.search.spans.Spans: int start()>();

        $i3 = virtualinvoke $r4.<org.apache.lucene.search.spans.Spans: int end()>();

        virtualinvoke r8.<org.apache.lucene.search.SpanFilterResult$PositionInfo: void addPosition(int,int)>($i2, $i3);

        goto label1;

     label3:
        $r12 = new org.apache.lucene.search.SpanFilterResult;

        specialinvoke $r12.<org.apache.lucene.search.SpanFilterResult: void <init>(org.apache.lucene.search.DocIdSet,java.util.List)>($r9, $r10);

        return $r12;
    }

    public org.apache.lucene.search.spans.SpanQuery getQuery()
    {
        org.apache.lucene.search.SpanQueryFilter r0;
        org.apache.lucene.search.spans.SpanQuery $r1;

        r0 := @this: org.apache.lucene.search.SpanQueryFilter;

        $r1 = r0.<org.apache.lucene.search.SpanQueryFilter: org.apache.lucene.search.spans.SpanQuery query>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        java.lang.String $r6;
        org.apache.lucene.search.SpanQueryFilter r2;
        org.apache.lucene.search.spans.SpanQuery $r3;

        r2 := @this: org.apache.lucene.search.SpanQueryFilter;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SpanQueryFilter(");

        $r3 = r2.<org.apache.lucene.search.SpanQueryFilter: org.apache.lucene.search.spans.SpanQuery query>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        org.apache.lucene.search.SpanQueryFilter r1, $r2;
        org.apache.lucene.search.spans.SpanQuery $r3, $r4;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.lucene.search.SpanQueryFilter;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.lucene.search.SpanQueryFilter;

        if $z0 == 0 goto label1;

        $r4 = r1.<org.apache.lucene.search.SpanQueryFilter: org.apache.lucene.search.spans.SpanQuery query>;

        $r2 = (org.apache.lucene.search.SpanQueryFilter) r0;

        $r3 = $r2.<org.apache.lucene.search.SpanQueryFilter: org.apache.lucene.search.spans.SpanQuery query>;

        $z1 = virtualinvoke $r4.<org.apache.lucene.search.spans.SpanQuery: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public int hashCode()
    {
        int $i0, $i1;
        org.apache.lucene.search.SpanQueryFilter r0;
        org.apache.lucene.search.spans.SpanQuery $r1;

        r0 := @this: org.apache.lucene.search.SpanQueryFilter;

        $r1 = r0.<org.apache.lucene.search.SpanQueryFilter: org.apache.lucene.search.spans.SpanQuery query>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.search.spans.SpanQuery: int hashCode()>();

        $i1 = $i0 ^ -1841339207;

        return $i1;
    }
}
