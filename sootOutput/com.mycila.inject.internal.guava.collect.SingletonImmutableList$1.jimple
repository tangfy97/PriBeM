class com.mycila.inject.internal.guava.collect.SingletonImmutableList$1 extends com.mycila.inject.internal.guava.collect.UnmodifiableListIterator
{
    boolean hasNext;
    final int val$start;
    final com.mycila.inject.internal.guava.collect.SingletonImmutableList this$0;

    void <init>(com.mycila.inject.internal.guava.collect.SingletonImmutableList, int)
    {
        com.mycila.inject.internal.guava.collect.SingletonImmutableList$1 r0;
        int i0, $i1;
        com.mycila.inject.internal.guava.collect.SingletonImmutableList r1;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.SingletonImmutableList$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.SingletonImmutableList;

        i0 := @parameter1: int;

        r0.<com.mycila.inject.internal.guava.collect.SingletonImmutableList$1: com.mycila.inject.internal.guava.collect.SingletonImmutableList this$0> = r1;

        r0.<com.mycila.inject.internal.guava.collect.SingletonImmutableList$1: int val$start> = i0;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.UnmodifiableListIterator: void <init>()>();

        $i1 = r0.<com.mycila.inject.internal.guava.collect.SingletonImmutableList$1: int val$start>;

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<com.mycila.inject.internal.guava.collect.SingletonImmutableList$1: boolean hasNext> = $z0;

        return;
    }

    public boolean hasNext()
    {
        com.mycila.inject.internal.guava.collect.SingletonImmutableList$1 r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.SingletonImmutableList$1;

        $z0 = r0.<com.mycila.inject.internal.guava.collect.SingletonImmutableList$1: boolean hasNext>;

        return $z0;
    }

    public boolean hasPrevious()
    {
        com.mycila.inject.internal.guava.collect.SingletonImmutableList$1 r0;
        boolean $z0, $z1;

        r0 := @this: com.mycila.inject.internal.guava.collect.SingletonImmutableList$1;

        $z0 = r0.<com.mycila.inject.internal.guava.collect.SingletonImmutableList$1: boolean hasNext>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.lang.Object next()
    {
        com.mycila.inject.internal.guava.collect.SingletonImmutableList$1 r0;
        com.mycila.inject.internal.guava.collect.SingletonImmutableList $r1;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r3;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.SingletonImmutableList$1;

        $z0 = r0.<com.mycila.inject.internal.guava.collect.SingletonImmutableList$1: boolean hasNext>;

        if $z0 != 0 goto label1;

        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;

     label1:
        r0.<com.mycila.inject.internal.guava.collect.SingletonImmutableList$1: boolean hasNext> = 0;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.SingletonImmutableList$1: com.mycila.inject.internal.guava.collect.SingletonImmutableList this$0>;

        $r2 = $r1.<com.mycila.inject.internal.guava.collect.SingletonImmutableList: java.lang.Object element>;

        return $r2;
    }

    public int nextIndex()
    {
        com.mycila.inject.internal.guava.collect.SingletonImmutableList$1 r0;
        byte $b0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.SingletonImmutableList$1;

        $z0 = r0.<com.mycila.inject.internal.guava.collect.SingletonImmutableList$1: boolean hasNext>;

        if $z0 == 0 goto label1;

        $b0 = 0;

        goto label2;

     label1:
        $b0 = 1;

     label2:
        return $b0;
    }

    public java.lang.Object previous()
    {
        com.mycila.inject.internal.guava.collect.SingletonImmutableList$1 r0;
        com.mycila.inject.internal.guava.collect.SingletonImmutableList $r1;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r3;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.SingletonImmutableList$1;

        $z0 = r0.<com.mycila.inject.internal.guava.collect.SingletonImmutableList$1: boolean hasNext>;

        if $z0 == 0 goto label1;

        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;

     label1:
        r0.<com.mycila.inject.internal.guava.collect.SingletonImmutableList$1: boolean hasNext> = 1;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.SingletonImmutableList$1: com.mycila.inject.internal.guava.collect.SingletonImmutableList this$0>;

        $r2 = $r1.<com.mycila.inject.internal.guava.collect.SingletonImmutableList: java.lang.Object element>;

        return $r2;
    }

    public int previousIndex()
    {
        com.mycila.inject.internal.guava.collect.SingletonImmutableList$1 r0;
        byte $b0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.SingletonImmutableList$1;

        $z0 = r0.<com.mycila.inject.internal.guava.collect.SingletonImmutableList$1: boolean hasNext>;

        if $z0 == 0 goto label1;

        $b0 = -1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        return $b0;
    }
}
