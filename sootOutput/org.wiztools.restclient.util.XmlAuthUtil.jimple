class org.wiztools.restclient.util.XmlAuthUtil extends java.lang.Object
{

    private void <init>()
    {
        org.wiztools.restclient.util.XmlAuthUtil r0;

        r0 := @this: org.wiztools.restclient.util.XmlAuthUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static nu.xom.Element getAuthElement(org.wiztools.restclient.bean.Auth)
    {
        org.wiztools.restclient.bean.BasicAuth $r8;
        nu.xom.Element $r0, $r3, $r5, $r7, $r9;
        org.wiztools.restclient.bean.OAuth2BearerAuth $r2;
        org.wiztools.restclient.bean.Auth r1;
        org.wiztools.restclient.bean.NtlmAuth $r4;
        org.wiztools.restclient.bean.DigestAuth $r6;
        boolean $z0, $z1, $z2, $z3;

        r1 := @parameter0: org.wiztools.restclient.bean.Auth;

        $r0 = new nu.xom.Element;

        specialinvoke $r0.<nu.xom.Element: void <init>(java.lang.String)>("auth");

        $z0 = r1 instanceof org.wiztools.restclient.bean.BasicAuth;

        if $z0 == 0 goto label1;

        $r8 = (org.wiztools.restclient.bean.BasicAuth) r1;

        $r9 = staticinvoke <org.wiztools.restclient.util.XmlAuthUtil: nu.xom.Element getBasicAuthElement(org.wiztools.restclient.bean.BasicAuth)>($r8);

        virtualinvoke $r0.<nu.xom.Element: void appendChild(nu.xom.Node)>($r9);

        goto label4;

     label1:
        $z1 = r1 instanceof org.wiztools.restclient.bean.DigestAuth;

        if $z1 == 0 goto label2;

        $r6 = (org.wiztools.restclient.bean.DigestAuth) r1;

        $r7 = staticinvoke <org.wiztools.restclient.util.XmlAuthUtil: nu.xom.Element getDigestAuthElement(org.wiztools.restclient.bean.DigestAuth)>($r6);

        virtualinvoke $r0.<nu.xom.Element: void appendChild(nu.xom.Node)>($r7);

        goto label4;

     label2:
        $z2 = r1 instanceof org.wiztools.restclient.bean.NtlmAuth;

        if $z2 == 0 goto label3;

        $r4 = (org.wiztools.restclient.bean.NtlmAuth) r1;

        $r5 = staticinvoke <org.wiztools.restclient.util.XmlAuthUtil: nu.xom.Element getNtlmAuthElement(org.wiztools.restclient.bean.NtlmAuth)>($r4);

        virtualinvoke $r0.<nu.xom.Element: void appendChild(nu.xom.Node)>($r5);

        goto label4;

     label3:
        $z3 = r1 instanceof org.wiztools.restclient.bean.OAuth2BearerAuth;

        if $z3 == 0 goto label4;

        $r2 = (org.wiztools.restclient.bean.OAuth2BearerAuth) r1;

        $r3 = staticinvoke <org.wiztools.restclient.util.XmlAuthUtil: nu.xom.Element getOAuth2BearerElement(org.wiztools.restclient.bean.OAuth2BearerAuth)>($r2);

        virtualinvoke $r0.<nu.xom.Element: void appendChild(nu.xom.Node)>($r3);

     label4:
        return $r0;
    }

    static nu.xom.Element getBasicAuthElement(org.wiztools.restclient.bean.BasicAuth)
    {
        org.wiztools.restclient.bean.BasicAuth r1;
        nu.xom.Element $r0;

        r1 := @parameter0: org.wiztools.restclient.bean.BasicAuth;

        $r0 = new nu.xom.Element;

        specialinvoke $r0.<nu.xom.Element: void <init>(java.lang.String)>("basic");

        staticinvoke <org.wiztools.restclient.util.XmlAuthUtil: void populateBasicDigestElement(nu.xom.Element,org.wiztools.restclient.bean.BasicDigestAuth)>($r0, r1);

        return $r0;
    }

    static nu.xom.Element getDigestAuthElement(org.wiztools.restclient.bean.DigestAuth)
    {
        org.wiztools.restclient.bean.DigestAuth r1;
        nu.xom.Element $r0;

        r1 := @parameter0: org.wiztools.restclient.bean.DigestAuth;

        $r0 = new nu.xom.Element;

        specialinvoke $r0.<nu.xom.Element: void <init>(java.lang.String)>("digest");

        staticinvoke <org.wiztools.restclient.util.XmlAuthUtil: void populateBasicDigestElement(nu.xom.Element,org.wiztools.restclient.bean.BasicDigestAuth)>($r0, r1);

        return $r0;
    }

    static nu.xom.Element getNtlmAuthElement(org.wiztools.restclient.bean.NtlmAuth)
    {
        nu.xom.Element $r0, $r4, $r6;
        org.wiztools.restclient.bean.NtlmAuth r1;
        java.lang.String $r2, $r3, $r5, $r7;
        boolean $z0, $z1;

        r1 := @parameter0: org.wiztools.restclient.bean.NtlmAuth;

        $r0 = new nu.xom.Element;

        specialinvoke $r0.<nu.xom.Element: void <init>(java.lang.String)>("ntlm");

        $r2 = interfaceinvoke r1.<org.wiztools.restclient.bean.NtlmAuth: java.lang.String getDomain()>();

        $z0 = staticinvoke <org.wiztools.commons.StringUtil: boolean isNotEmpty(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        $r6 = new nu.xom.Element;

        specialinvoke $r6.<nu.xom.Element: void <init>(java.lang.String)>("domain");

        $r7 = interfaceinvoke r1.<org.wiztools.restclient.bean.NtlmAuth: java.lang.String getDomain()>();

        virtualinvoke $r6.<nu.xom.Element: void appendChild(java.lang.String)>($r7);

        virtualinvoke $r0.<nu.xom.Element: void appendChild(nu.xom.Node)>($r6);

     label1:
        $r3 = interfaceinvoke r1.<org.wiztools.restclient.bean.NtlmAuth: java.lang.String getWorkstation()>();

        $z1 = staticinvoke <org.wiztools.commons.StringUtil: boolean isNotEmpty(java.lang.String)>($r3);

        if $z1 == 0 goto label2;

        $r4 = new nu.xom.Element;

        specialinvoke $r4.<nu.xom.Element: void <init>(java.lang.String)>("workstation");

        $r5 = interfaceinvoke r1.<org.wiztools.restclient.bean.NtlmAuth: java.lang.String getWorkstation()>();

        virtualinvoke $r4.<nu.xom.Element: void appendChild(java.lang.String)>($r5);

        virtualinvoke $r0.<nu.xom.Element: void appendChild(nu.xom.Node)>($r4);

     label2:
        staticinvoke <org.wiztools.restclient.util.XmlAuthUtil: void populateUsernamePasswordElement(nu.xom.Element,org.wiztools.restclient.bean.UsernamePasswordAuth)>($r0, r1);

        return $r0;
    }

    static nu.xom.Element getOAuth2BearerElement(org.wiztools.restclient.bean.OAuth2BearerAuth)
    {
        nu.xom.Element $r0, $r3;
        org.wiztools.restclient.bean.OAuth2BearerAuth r1;
        java.lang.String $r2, $r4;
        boolean $z0;

        r1 := @parameter0: org.wiztools.restclient.bean.OAuth2BearerAuth;

        $r0 = new nu.xom.Element;

        specialinvoke $r0.<nu.xom.Element: void <init>(java.lang.String)>("oauth2-bearer");

        $r2 = interfaceinvoke r1.<org.wiztools.restclient.bean.OAuth2BearerAuth: java.lang.String getOAuth2BearerToken()>();

        $z0 = staticinvoke <org.wiztools.commons.StringUtil: boolean isNotEmpty(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        $r3 = new nu.xom.Element;

        specialinvoke $r3.<nu.xom.Element: void <init>(java.lang.String)>("token");

        $r4 = interfaceinvoke r1.<org.wiztools.restclient.bean.OAuth2BearerAuth: java.lang.String getOAuth2BearerToken()>();

        virtualinvoke $r3.<nu.xom.Element: void appendChild(java.lang.String)>($r4);

        virtualinvoke $r0.<nu.xom.Element: void appendChild(nu.xom.Node)>($r3);

     label1:
        return $r0;
    }

    static org.wiztools.restclient.bean.OAuth2BearerAuth getOAuth2BearerAuth(nu.xom.Element)
    {
        org.wiztools.restclient.bean.OAuth2BearerAuthBean $r0;
        nu.xom.Element r1, $r3;
        org.wiztools.restclient.XMLException $r5;
        int $i0, i1;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r4, $r9, $r10;
        nu.xom.Elements $r2;
        boolean $z0;

        r1 := @parameter0: nu.xom.Element;

        $r0 = new org.wiztools.restclient.bean.OAuth2BearerAuthBean;

        specialinvoke $r0.<org.wiztools.restclient.bean.OAuth2BearerAuthBean: void <init>()>();

        $r2 = virtualinvoke r1.<nu.xom.Element: nu.xom.Elements getChildElements()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke $r2.<nu.xom.Elements: int size()>();

        if i1 >= $i0 goto label4;

        $r3 = virtualinvoke $r2.<nu.xom.Elements: nu.xom.Element get(int)>(i1);

        $r4 = virtualinvoke $r3.<nu.xom.Element: java.lang.String getLocalName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("token");

        if $z0 == 0 goto label2;

        $r10 = virtualinvoke $r3.<nu.xom.Element: java.lang.String getValue()>();

        virtualinvoke $r0.<org.wiztools.restclient.bean.OAuth2BearerAuthBean: void setOAuth2BearerToken(java.lang.String)>($r10);

        goto label3;

     label2:
        $r5 = new org.wiztools.restclient.XMLException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element in oauth2-bearer auth: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.wiztools.restclient.XMLException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return $r0;
    }

    static void populateBasicDigestElement(nu.xom.Element, org.wiztools.restclient.bean.BasicDigestAuth)
    {
        nu.xom.Element r3, $r4, $r5, $r7;
        org.wiztools.restclient.bean.BasicDigestAuth r0;
        java.lang.String $r1, $r2, $r6, $r8;
        boolean $z0, $z1, $z2;

        r3 := @parameter0: nu.xom.Element;

        r0 := @parameter1: org.wiztools.restclient.bean.BasicDigestAuth;

        $r1 = interfaceinvoke r0.<org.wiztools.restclient.bean.BasicDigestAuth: java.lang.String getHost()>();

        $z0 = staticinvoke <org.wiztools.commons.StringUtil: boolean isNotEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r7 = new nu.xom.Element;

        specialinvoke $r7.<nu.xom.Element: void <init>(java.lang.String)>("host");

        $r8 = interfaceinvoke r0.<org.wiztools.restclient.bean.BasicDigestAuth: java.lang.String getHost()>();

        virtualinvoke $r7.<nu.xom.Element: void appendChild(java.lang.String)>($r8);

        virtualinvoke r3.<nu.xom.Element: void appendChild(nu.xom.Node)>($r7);

     label1:
        $r2 = interfaceinvoke r0.<org.wiztools.restclient.bean.BasicDigestAuth: java.lang.String getRealm()>();

        $z1 = staticinvoke <org.wiztools.commons.StringUtil: boolean isNotEmpty(java.lang.String)>($r2);

        if $z1 == 0 goto label2;

        $r5 = new nu.xom.Element;

        specialinvoke $r5.<nu.xom.Element: void <init>(java.lang.String)>("realm");

        $r6 = interfaceinvoke r0.<org.wiztools.restclient.bean.BasicDigestAuth: java.lang.String getRealm()>();

        virtualinvoke $r5.<nu.xom.Element: void appendChild(java.lang.String)>($r6);

        virtualinvoke r3.<nu.xom.Element: void appendChild(nu.xom.Node)>($r5);

     label2:
        $z2 = interfaceinvoke r0.<org.wiztools.restclient.bean.BasicDigestAuth: boolean isPreemptive()>();

        if $z2 == 0 goto label3;

        $r4 = new nu.xom.Element;

        specialinvoke $r4.<nu.xom.Element: void <init>(java.lang.String)>("preemptive");

        virtualinvoke r3.<nu.xom.Element: void appendChild(nu.xom.Node)>($r4);

     label3:
        staticinvoke <org.wiztools.restclient.util.XmlAuthUtil: void populateUsernamePasswordElement(nu.xom.Element,org.wiztools.restclient.bean.UsernamePasswordAuth)>(r3, r0);

        return;
    }

    static void populateUsernamePasswordElement(nu.xom.Element, org.wiztools.restclient.bean.UsernamePasswordAuth)
    {
        nu.xom.Element $r4, r8, $r9;
        org.wiztools.restclient.bean.UsernamePasswordAuth r0;
        int $i0;
        char[] $r2, $r3, $r6;
        java.lang.String $r1, $r5, $r7, $r10;
        boolean $z0;

        r8 := @parameter0: nu.xom.Element;

        r0 := @parameter1: org.wiztools.restclient.bean.UsernamePasswordAuth;

        $r1 = interfaceinvoke r0.<org.wiztools.restclient.bean.UsernamePasswordAuth: java.lang.String getUsername()>();

        $z0 = staticinvoke <org.wiztools.commons.StringUtil: boolean isNotEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r9 = new nu.xom.Element;

        specialinvoke $r9.<nu.xom.Element: void <init>(java.lang.String)>("username");

        $r10 = interfaceinvoke r0.<org.wiztools.restclient.bean.UsernamePasswordAuth: java.lang.String getUsername()>();

        virtualinvoke $r9.<nu.xom.Element: void appendChild(java.lang.String)>($r10);

        virtualinvoke r8.<nu.xom.Element: void appendChild(nu.xom.Node)>($r9);

     label1:
        $r2 = interfaceinvoke r0.<org.wiztools.restclient.bean.UsernamePasswordAuth: char[] getPassword()>();

        if $r2 == null goto label2;

        $r3 = interfaceinvoke r0.<org.wiztools.restclient.bean.UsernamePasswordAuth: char[] getPassword()>();

        $i0 = lengthof $r3;

        if $i0 <= 0 goto label2;

        $r4 = new nu.xom.Element;

        specialinvoke $r4.<nu.xom.Element: void <init>(java.lang.String)>("password");

        $r5 = new java.lang.String;

        $r6 = interfaceinvoke r0.<org.wiztools.restclient.bean.UsernamePasswordAuth: char[] getPassword()>();

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r6);

        $r7 = staticinvoke <org.wiztools.restclient.util.Util: java.lang.String base64encode(java.lang.String)>($r5);

        virtualinvoke $r4.<nu.xom.Element: void appendChild(java.lang.String)>($r7);

        virtualinvoke r8.<nu.xom.Element: void appendChild(nu.xom.Node)>($r4);

     label2:
        return;
    }

    static org.wiztools.restclient.bean.Auth getAuth(nu.xom.Element)
    {
        nu.xom.Element r0, $r2;
        org.wiztools.restclient.bean.OAuth2BearerAuth $r9;
        org.wiztools.restclient.bean.NtlmAuth $r10;
        org.wiztools.restclient.XMLException $r4;
        int $i0;
        java.lang.String $r3, $r8;
        boolean $z0, $z1, $z2, $z3;
        org.wiztools.restclient.bean.BasicAuth $r12;
        java.lang.StringBuilder $r5, $r6, $r7;
        org.wiztools.restclient.bean.DigestAuth $r11;
        nu.xom.Elements $r1;

        r0 := @parameter0: nu.xom.Element;

        $r1 = virtualinvoke r0.<nu.xom.Element: nu.xom.Elements getChildElements()>();

        $i0 = virtualinvoke $r1.<nu.xom.Elements: int size()>();

        if 0 >= $i0 goto label5;

        $r2 = virtualinvoke $r1.<nu.xom.Elements: nu.xom.Element get(int)>(0);

        $r3 = virtualinvoke $r2.<nu.xom.Element: java.lang.String getLocalName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("basic");

        if $z0 == 0 goto label1;

        $r12 = staticinvoke <org.wiztools.restclient.util.XmlAuthUtil: org.wiztools.restclient.bean.BasicAuth getBasicAuth(nu.xom.Element)>($r2);

        return $r12;

     label1:
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("digest");

        if $z1 == 0 goto label2;

        $r11 = staticinvoke <org.wiztools.restclient.util.XmlAuthUtil: org.wiztools.restclient.bean.DigestAuth getDigestAuth(nu.xom.Element)>($r2);

        return $r11;

     label2:
        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("ntlm");

        if $z2 == 0 goto label3;

        $r10 = staticinvoke <org.wiztools.restclient.util.XmlAuthUtil: org.wiztools.restclient.bean.NtlmAuth getNtlmAuth(nu.xom.Element)>($r2);

        return $r10;

     label3:
        $z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("oauth2-bearer");

        if $z3 == 0 goto label4;

        $r9 = staticinvoke <org.wiztools.restclient.util.XmlAuthUtil: org.wiztools.restclient.bean.OAuth2BearerAuth getOAuth2BearerAuth(nu.xom.Element)>($r2);

        return $r9;

     label4:
        $r4 = new org.wiztools.restclient.XMLException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid auth element encountered: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.wiztools.restclient.XMLException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label5:
        return null;
    }

    static org.wiztools.restclient.bean.BasicAuth getBasicAuth(nu.xom.Element)
    {
        nu.xom.Element r1;
        org.wiztools.restclient.bean.BasicAuthBean $r0;

        r1 := @parameter0: nu.xom.Element;

        $r0 = new org.wiztools.restclient.bean.BasicAuthBean;

        specialinvoke $r0.<org.wiztools.restclient.bean.BasicAuthBean: void <init>()>();

        staticinvoke <org.wiztools.restclient.util.XmlAuthUtil: void populateBasicDigestAuth(org.wiztools.restclient.bean.BasicDigestAuthBaseBean,nu.xom.Element)>($r0, r1);

        return $r0;
    }

    static org.wiztools.restclient.bean.DigestAuth getDigestAuth(nu.xom.Element)
    {
        org.wiztools.restclient.bean.DigestAuthBean $r0;
        nu.xom.Element r1;

        r1 := @parameter0: nu.xom.Element;

        $r0 = new org.wiztools.restclient.bean.DigestAuthBean;

        specialinvoke $r0.<org.wiztools.restclient.bean.DigestAuthBean: void <init>()>();

        staticinvoke <org.wiztools.restclient.util.XmlAuthUtil: void populateBasicDigestAuth(org.wiztools.restclient.bean.BasicDigestAuthBaseBean,nu.xom.Element)>($r0, r1);

        return $r0;
    }

    static void populateBasicDigestAuth(org.wiztools.restclient.bean.BasicDigestAuthBaseBean, nu.xom.Element)
    {
        nu.xom.Element r0, $r2;
        org.wiztools.restclient.bean.BasicDigestAuthBaseBean r9;
        org.wiztools.restclient.XMLException $r4;
        int $i0, i1;
        java.lang.String $r3, $r8, $r11, $r12, $r13;
        boolean $z0, $z1, $z2, $z3, $z4;
        char[] $r10;
        java.lang.StringBuilder $r5, $r6, $r7;
        nu.xom.Elements $r1;

        r9 := @parameter0: org.wiztools.restclient.bean.BasicDigestAuthBaseBean;

        r0 := @parameter1: nu.xom.Element;

        $r1 = virtualinvoke r0.<nu.xom.Element: nu.xom.Elements getChildElements()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke $r1.<nu.xom.Elements: int size()>();

        if i1 >= $i0 goto label8;

        $r2 = virtualinvoke $r1.<nu.xom.Elements: nu.xom.Element get(int)>(i1);

        $r3 = virtualinvoke $r2.<nu.xom.Element: java.lang.String getLocalName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("host");

        if $z0 == 0 goto label2;

        $r13 = virtualinvoke $r2.<nu.xom.Element: java.lang.String getValue()>();

        virtualinvoke r9.<org.wiztools.restclient.bean.BasicDigestAuthBaseBean: void setHost(java.lang.String)>($r13);

        goto label7;

     label2:
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("realm");

        if $z1 == 0 goto label3;

        $r12 = virtualinvoke $r2.<nu.xom.Element: java.lang.String getValue()>();

        virtualinvoke r9.<org.wiztools.restclient.bean.BasicDigestAuthBaseBean: void setRealm(java.lang.String)>($r12);

        goto label7;

     label3:
        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("username");

        if $z2 == 0 goto label4;

        $r11 = virtualinvoke $r2.<nu.xom.Element: java.lang.String getValue()>();

        virtualinvoke r9.<org.wiztools.restclient.bean.BasicDigestAuthBaseBean: void setUsername(java.lang.String)>($r11);

        goto label7;

     label4:
        $z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("password");

        if $z3 == 0 goto label5;

        $r10 = staticinvoke <org.wiztools.restclient.util.XmlAuthUtil: char[] getPassword(nu.xom.Element)>($r2);

        virtualinvoke r9.<org.wiztools.restclient.bean.BasicDigestAuthBaseBean: void setPassword(char[])>($r10);

        goto label7;

     label5:
        $z4 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("preemptive");

        if $z4 == 0 goto label6;

        virtualinvoke r9.<org.wiztools.restclient.bean.BasicDigestAuthBaseBean: void setPreemptive(boolean)>(1);

        goto label7;

     label6:
        $r4 = new org.wiztools.restclient.XMLException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element in basic/digest auth: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.wiztools.restclient.XMLException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label7:
        i1 = i1 + 1;

        goto label1;

     label8:
        return;
    }

    static org.wiztools.restclient.bean.NtlmAuth getNtlmAuth(nu.xom.Element)
    {
        nu.xom.Element r1, $r3;
        org.wiztools.restclient.XMLException $r5;
        int $i0, i1;
        java.lang.String $r4, $r9, $r11, $r12, $r13;
        boolean $z0, $z1, $z2, $z3;
        org.wiztools.restclient.bean.NtlmAuthBean $r0;
        char[] $r10;
        java.lang.StringBuilder $r6, $r7, $r8;
        nu.xom.Elements $r2;

        r1 := @parameter0: nu.xom.Element;

        $r0 = new org.wiztools.restclient.bean.NtlmAuthBean;

        specialinvoke $r0.<org.wiztools.restclient.bean.NtlmAuthBean: void <init>()>();

        $r2 = virtualinvoke r1.<nu.xom.Element: nu.xom.Elements getChildElements()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke $r2.<nu.xom.Elements: int size()>();

        if i1 >= $i0 goto label7;

        $r3 = virtualinvoke $r2.<nu.xom.Elements: nu.xom.Element get(int)>(i1);

        $r4 = virtualinvoke $r3.<nu.xom.Element: java.lang.String getLocalName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("domain");

        if $z0 == 0 goto label2;

        $r13 = virtualinvoke $r3.<nu.xom.Element: java.lang.String getValue()>();

        virtualinvoke $r0.<org.wiztools.restclient.bean.NtlmAuthBean: void setDomain(java.lang.String)>($r13);

        goto label6;

     label2:
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("workstation");

        if $z1 == 0 goto label3;

        $r12 = virtualinvoke $r3.<nu.xom.Element: java.lang.String getValue()>();

        virtualinvoke $r0.<org.wiztools.restclient.bean.NtlmAuthBean: void setWorkstation(java.lang.String)>($r12);

        goto label6;

     label3:
        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("username");

        if $z2 == 0 goto label4;

        $r11 = virtualinvoke $r3.<nu.xom.Element: java.lang.String getValue()>();

        virtualinvoke $r0.<org.wiztools.restclient.bean.NtlmAuthBean: void setUsername(java.lang.String)>($r11);

        goto label6;

     label4:
        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("password");

        if $z3 == 0 goto label5;

        $r10 = staticinvoke <org.wiztools.restclient.util.XmlAuthUtil: char[] getPassword(nu.xom.Element)>($r3);

        virtualinvoke $r0.<org.wiztools.restclient.bean.NtlmAuthBean: void setPassword(char[])>($r10);

        goto label6;

     label5:
        $r5 = new org.wiztools.restclient.XMLException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element in ntlm auth: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.wiztools.restclient.XMLException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label6:
        i1 = i1 + 1;

        goto label1;

     label7:
        return $r0;
    }

    static char[] getPassword(nu.xom.Element)
    {
        nu.xom.Element r0;
        char[] $r3;
        java.lang.String $r1, $r2;

        r0 := @parameter0: nu.xom.Element;

        $r1 = virtualinvoke r0.<nu.xom.Element: java.lang.String getValue()>();

        $r2 = staticinvoke <org.wiztools.restclient.util.Util: java.lang.String base64decode(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        return $r3;
    }
}
