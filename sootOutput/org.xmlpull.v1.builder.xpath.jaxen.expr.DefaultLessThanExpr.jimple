class org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultLessThanExpr extends org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultRelationalExpr
{

    public void <init>(org.xmlpull.v1.builder.xpath.jaxen.expr.Expr, org.xmlpull.v1.builder.xpath.jaxen.expr.Expr)
    {
        org.xmlpull.v1.builder.xpath.jaxen.expr.Expr r1, r2;
        org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultLessThanExpr r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultLessThanExpr;

        r1 := @parameter0: org.xmlpull.v1.builder.xpath.jaxen.expr.Expr;

        r2 := @parameter1: org.xmlpull.v1.builder.xpath.jaxen.expr.Expr;

        specialinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultRelationalExpr: void <init>(org.xmlpull.v1.builder.xpath.jaxen.expr.Expr,org.xmlpull.v1.builder.xpath.jaxen.expr.Expr)>(r1, r2);

        return;
    }

    public java.lang.String getOperator()
    {
        org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultLessThanExpr r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultLessThanExpr;

        return "<";
    }

    protected boolean evaluateDoubleDouble(java.lang.Double, java.lang.Double)
    {
        java.lang.Double r0, r1;
        int $i0;
        org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultLessThanExpr r2;
        boolean $z0;

        r2 := @this: org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultLessThanExpr;

        r0 := @parameter0: java.lang.Double;

        r1 := @parameter1: java.lang.Double;

        $i0 = virtualinvoke r0.<java.lang.Double: int compareTo(java.lang.Double)>(r1);

        if $i0 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}
