public class org.apache.batik.svggen.SVGCustomPaint extends org.apache.batik.svggen.AbstractSVGConverter
{

    public void <init>(org.apache.batik.svggen.SVGGeneratorContext)
    {
        org.apache.batik.svggen.SVGCustomPaint r0;
        org.apache.batik.svggen.SVGGeneratorContext r1;

        r0 := @this: org.apache.batik.svggen.SVGCustomPaint;

        r1 := @parameter0: org.apache.batik.svggen.SVGGeneratorContext;

        specialinvoke r0.<org.apache.batik.svggen.AbstractSVGConverter: void <init>(org.apache.batik.svggen.SVGGeneratorContext)>(r1);

        return;
    }

    public org.apache.batik.svggen.SVGDescriptor toSVG(org.apache.batik.ext.awt.g2d.GraphicContext)
    {
        org.apache.batik.svggen.SVGPaintDescriptor $r3;
        java.awt.Paint $r2;
        org.apache.batik.svggen.SVGCustomPaint r0;
        org.apache.batik.ext.awt.g2d.GraphicContext r1;

        r0 := @this: org.apache.batik.svggen.SVGCustomPaint;

        r1 := @parameter0: org.apache.batik.ext.awt.g2d.GraphicContext;

        $r2 = virtualinvoke r1.<org.apache.batik.ext.awt.g2d.GraphicContext: java.awt.Paint getPaint()>();

        $r3 = virtualinvoke r0.<org.apache.batik.svggen.SVGCustomPaint: org.apache.batik.svggen.SVGPaintDescriptor toSVG(java.awt.Paint)>($r2);

        return $r3;
    }

    public org.apache.batik.svggen.SVGPaintDescriptor toSVG(java.awt.Paint)
    {
        org.apache.batik.svggen.ExtensionHandler $r6;
        java.util.List $r10;
        org.w3c.dom.Element $r8;
        org.apache.batik.svggen.SVGPaintDescriptor $r7, r11;
        java.awt.Paint r1;
        org.apache.batik.svggen.SVGGeneratorContext $r4, $r5;
        java.util.Map $r2, $r9;
        org.apache.batik.svggen.SVGCustomPaint r0;
        java.lang.Object $r3;

        r0 := @this: org.apache.batik.svggen.SVGCustomPaint;

        r1 := @parameter0: java.awt.Paint;

        $r2 = r0.<org.apache.batik.svggen.AbstractSVGConverter: java.util.Map descMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r11 = (org.apache.batik.svggen.SVGPaintDescriptor) $r3;

        if r11 != null goto label2;

        $r4 = r0.<org.apache.batik.svggen.AbstractSVGConverter: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        $r6 = $r4.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.ExtensionHandler extensionHandler>;

        $r5 = r0.<org.apache.batik.svggen.AbstractSVGConverter: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        $r7 = interfaceinvoke $r6.<org.apache.batik.svggen.ExtensionHandler: org.apache.batik.svggen.SVGPaintDescriptor handlePaint(java.awt.Paint,org.apache.batik.svggen.SVGGeneratorContext)>(r1, $r5);

        r11 = $r7;

        if $r7 == null goto label2;

        $r8 = virtualinvoke $r7.<org.apache.batik.svggen.SVGPaintDescriptor: org.w3c.dom.Element getDef()>();

        if $r8 == null goto label1;

        $r10 = r0.<org.apache.batik.svggen.AbstractSVGConverter: java.util.List defSet>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r8);

     label1:
        $r9 = r0.<org.apache.batik.svggen.AbstractSVGConverter: java.util.Map descMap>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

     label2:
        return r11;
    }
}
