class org.jdom.DescendantIterator extends java.lang.Object implements java.util.Iterator
{
    private java.util.Iterator iterator;
    private java.util.Iterator nextIterator;
    private java.util.List stack;
    private static final java.lang.String CVS_ID;

    void <init>(org.jdom.Parent)
    {
        org.jdom.Parent r2;
        java.util.List $r3;
        java.util.Iterator $r4;
        java.lang.IllegalArgumentException $r5;
        org.jdom.DescendantIterator r0;
        java.util.ArrayList $r1;

        r0 := @this: org.jdom.DescendantIterator;

        r2 := @parameter0: org.jdom.Parent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.jdom.DescendantIterator: java.util.List stack> = $r1;

        if r2 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("parent parameter was null");

        throw $r5;

     label1:
        $r3 = interfaceinvoke r2.<org.jdom.Parent: java.util.List getContent()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        r0.<org.jdom.DescendantIterator: java.util.Iterator iterator> = $r4;

        return;
    }

    public boolean hasNext()
    {
        java.util.Iterator $r1, $r2, $r3, $r4;
        org.jdom.DescendantIterator r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.jdom.DescendantIterator;

        $r1 = r0.<org.jdom.DescendantIterator: java.util.Iterator iterator>;

        if $r1 == null goto label1;

        $r4 = r0.<org.jdom.DescendantIterator: java.util.Iterator iterator>;

        $z2 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $r2 = r0.<org.jdom.DescendantIterator: java.util.Iterator nextIterator>;

        if $r2 == null goto label2;

        $r3 = r0.<org.jdom.DescendantIterator: java.util.Iterator nextIterator>;

        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z0 = specialinvoke r0.<org.jdom.DescendantIterator: boolean stackHasAnyNext()>();

        if $z0 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public java.lang.Object next()
    {
        org.jdom.Content r7;
        int $i0;
        java.util.NoSuchElementException $r3, $r13;
        org.jdom.DescendantIterator r0;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r1, $r4, $r5, $r10, $r11, $r12, $r14;
        java.util.List $r2, $r9;
        java.lang.Object $r6;
        org.jdom.Element $r8;

        r0 := @this: org.jdom.DescendantIterator;

        $z0 = virtualinvoke r0.<org.jdom.DescendantIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r13 = new java.util.NoSuchElementException;

        specialinvoke $r13.<java.util.NoSuchElementException: void <init>()>();

        throw $r13;

     label1:
        $r1 = r0.<org.jdom.DescendantIterator: java.util.Iterator nextIterator>;

        if $r1 == null goto label4;

        $r11 = r0.<org.jdom.DescendantIterator: java.util.Iterator iterator>;

        specialinvoke r0.<org.jdom.DescendantIterator: void push(java.util.Iterator)>($r11);

        $r12 = r0.<org.jdom.DescendantIterator: java.util.Iterator nextIterator>;

        r0.<org.jdom.DescendantIterator: java.util.Iterator iterator> = $r12;

        r0.<org.jdom.DescendantIterator: java.util.Iterator nextIterator> = null;

        goto label4;

     label2:
        $r2 = r0.<org.jdom.DescendantIterator: java.util.List stack>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 <= 0 goto label3;

        $r4 = specialinvoke r0.<org.jdom.DescendantIterator: java.util.Iterator pop()>();

        r0.<org.jdom.DescendantIterator: java.util.Iterator iterator> = $r4;

        goto label4;

     label3:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Somehow we lost our iterator");

        throw $r3;

     label4:
        $r14 = r0.<org.jdom.DescendantIterator: java.util.Iterator iterator>;

        $z2 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r5 = r0.<org.jdom.DescendantIterator: java.util.Iterator iterator>;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.jdom.Content) $r6;

        $z1 = r7 instanceof org.jdom.Element;

        if $z1 == 0 goto label5;

        $r8 = (org.jdom.Element) r7;

        $r9 = virtualinvoke $r8.<org.jdom.Element: java.util.List getContent()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

        r0.<org.jdom.DescendantIterator: java.util.Iterator nextIterator> = $r10;

     label5:
        return r7;
    }

    private java.util.Iterator pop()
    {
        java.util.Iterator $r4;
        java.util.List $r1, $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        java.util.NoSuchElementException $r5;
        org.jdom.DescendantIterator r0;

        r0 := @this: org.jdom.DescendantIterator;

        $r1 = r0.<org.jdom.DescendantIterator: java.util.List stack>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("empty stack");

        throw $r5;

     label1:
        $r2 = r0.<org.jdom.DescendantIterator: java.util.List stack>;

        $i1 = $i0 - 1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>($i1);

        $r4 = (java.util.Iterator) $r3;

        return $r4;
    }

    private void push(java.util.Iterator)
    {
        java.util.List $r2;
        java.util.Iterator r1;
        org.jdom.DescendantIterator r0;

        r0 := @this: org.jdom.DescendantIterator;

        r1 := @parameter0: java.util.Iterator;

        $r2 = r0.<org.jdom.DescendantIterator: java.util.List stack>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void remove()
    {
        java.util.Iterator $r1;
        org.jdom.DescendantIterator r0;

        r0 := @this: org.jdom.DescendantIterator;

        $r1 = r0.<org.jdom.DescendantIterator: java.util.Iterator iterator>;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        return;
    }

    private boolean stackHasAnyNext()
    {
        java.util.Iterator r4;
        java.util.List $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        org.jdom.DescendantIterator r0;
        boolean $z0;

        r0 := @this: org.jdom.DescendantIterator;

        $r1 = r0.<org.jdom.DescendantIterator: java.util.List stack>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        i1 = 0;

        goto label3;

     label1:
        $r2 = r0.<org.jdom.DescendantIterator: java.util.List stack>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (java.util.Iterator) $r3;

        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < $i0 goto label1;

        return 0;
    }

    public static void <clinit>()
    {
        <org.jdom.DescendantIterator: java.lang.String CVS_ID> = "@(#) $RCSfile: DescendantIterator.java,v $ $Revision: 1.5 $ $Date: 2004/02/27 11:32:57 $ $Name: jdom_1_0 $";

        return;
    }
}
