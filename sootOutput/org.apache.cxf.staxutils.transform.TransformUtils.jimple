public final class org.apache.cxf.staxutils.transform.TransformUtils extends java.lang.Object
{

    private void <init>()
    {
        org.apache.cxf.staxutils.transform.TransformUtils r0;

        r0 := @this: org.apache.cxf.staxutils.transform.TransformUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static javax.xml.stream.XMLStreamReader createNewReaderIfNeeded(javax.xml.stream.XMLStreamReader, java.io.InputStream)
    {
        javax.xml.stream.XMLStreamReader r0, $r2;
        java.io.InputStream r1;

        r0 := @parameter0: javax.xml.stream.XMLStreamReader;

        r1 := @parameter1: java.io.InputStream;

        if r0 != null goto label1;

        $r2 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)>(r1);

        goto label2;

     label1:
        $r2 = r0;

     label2:
        return $r2;
    }

    public static javax.xml.stream.XMLStreamWriter createNewWriterIfNeeded(javax.xml.stream.XMLStreamWriter, java.io.OutputStream)
    {
        java.io.OutputStream r1;
        javax.xml.stream.XMLStreamWriter r0, $r2;

        r0 := @parameter0: javax.xml.stream.XMLStreamWriter;

        r1 := @parameter1: java.io.OutputStream;

        if r0 != null goto label1;

        $r2 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream)>(r1);

        goto label2;

     label1:
        $r2 = r0;

     label2:
        return $r2;
    }

    public static javax.xml.stream.XMLStreamWriter createTransformWriterIfNeeded(javax.xml.stream.XMLStreamWriter, java.io.OutputStream, java.util.Map, java.util.List, java.util.Map, boolean, java.lang.String)
    {
        java.io.OutputStream r1;
        org.apache.cxf.staxutils.transform.OutTransformWriter $r7;
        java.util.List r3;
        java.util.Map r0, r2;
        javax.xml.stream.XMLStreamWriter r5, $r6;
        java.lang.String r4;
        boolean z0;

        r5 := @parameter0: javax.xml.stream.XMLStreamWriter;

        r1 := @parameter1: java.io.OutputStream;

        r0 := @parameter2: java.util.Map;

        r3 := @parameter3: java.util.List;

        r2 := @parameter4: java.util.Map;

        z0 := @parameter5: boolean;

        r4 := @parameter6: java.lang.String;

        if r0 != null goto label1;

        if r3 != null goto label1;

        if r2 != null goto label1;

        if z0 == 0 goto label2;

     label1:
        $r6 = staticinvoke <org.apache.cxf.staxutils.transform.TransformUtils: javax.xml.stream.XMLStreamWriter createNewWriterIfNeeded(javax.xml.stream.XMLStreamWriter,java.io.OutputStream)>(r5, r1);

        $r7 = new org.apache.cxf.staxutils.transform.OutTransformWriter;

        specialinvoke $r7.<org.apache.cxf.staxutils.transform.OutTransformWriter: void <init>(javax.xml.stream.XMLStreamWriter,java.util.Map,java.util.Map,java.util.List,boolean,java.lang.String)>($r6, r0, r2, r3, z0, r4);

        r5 = $r7;

     label2:
        return r5;
    }

    public static javax.xml.stream.XMLStreamReader createTransformReaderIfNeeded(javax.xml.stream.XMLStreamReader, java.io.InputStream, java.util.List, java.util.Map, java.util.Map, boolean)
    {
        java.util.List r2;
        javax.xml.stream.XMLStreamReader r0, $r5;
        java.util.Map r3, r4;
        java.io.InputStream r1;
        boolean z0;

        r0 := @parameter0: javax.xml.stream.XMLStreamReader;

        r1 := @parameter1: java.io.InputStream;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.util.Map;

        r4 := @parameter4: java.util.Map;

        z0 := @parameter5: boolean;

        $r5 = staticinvoke <org.apache.cxf.staxutils.transform.TransformUtils: javax.xml.stream.XMLStreamReader createTransformReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream,java.util.List,java.util.Map,java.util.Map,java.util.Map,boolean)>(r0, r1, r2, r3, r4, null, z0);

        return $r5;
    }

    public static javax.xml.stream.XMLStreamReader createTransformReaderIfNeeded(javax.xml.stream.XMLStreamReader, java.io.InputStream, java.util.List, java.util.Map, java.util.Map, java.util.Map, boolean)
    {
        org.apache.cxf.staxutils.transform.InTransformReader $r6;
        java.util.List r3;
        javax.xml.stream.XMLStreamReader r5, $r7;
        java.util.Map r0, r2, r4;
        java.io.InputStream r1;
        boolean z0;

        r5 := @parameter0: javax.xml.stream.XMLStreamReader;

        r1 := @parameter1: java.io.InputStream;

        r3 := @parameter2: java.util.List;

        r0 := @parameter3: java.util.Map;

        r2 := @parameter4: java.util.Map;

        r4 := @parameter5: java.util.Map;

        z0 := @parameter6: boolean;

        if r0 != null goto label1;

        if r2 != null goto label1;

        if r3 != null goto label1;

        if r4 == null goto label2;

     label1:
        $r6 = new org.apache.cxf.staxutils.transform.InTransformReader;

        $r7 = staticinvoke <org.apache.cxf.staxutils.transform.TransformUtils: javax.xml.stream.XMLStreamReader createNewReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream)>(r5, r1);

        specialinvoke $r6.<org.apache.cxf.staxutils.transform.InTransformReader: void <init>(javax.xml.stream.XMLStreamReader,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean)>($r7, r0, r2, r3, r4, z0);

        r5 = $r6;

     label2:
        return r5;
    }

    protected static void convertToQNamesMap(java.util.Map, org.apache.cxf.staxutils.transform.QNamesMap, java.util.Map)
    {
        java.util.Map r0, r12;
        java.lang.String $r6, $r9, $r13, $r14, $r15, $r16, $r17, $r18;
        boolean $z0, $z1, $z2, $z3;
        org.apache.cxf.staxutils.transform.QNamesMap r11;
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.Set $r1;
        java.lang.Object $r3, $r5, $r8;
        javax.xml.namespace.QName $r7, $r10;

        r0 := @parameter0: java.util.Map;

        r11 := @parameter1: org.apache.cxf.staxutils.transform.QNamesMap;

        r12 := @parameter2: java.util.Map;

        if r0 == null goto label3;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r5 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.String) $r5;

        $r7 = staticinvoke <org.apache.cxf.helpers.XMLUtils: javax.xml.namespace.QName convertStringToQName(java.lang.String)>($r6);

        $r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.lang.String) $r8;

        $r10 = staticinvoke <org.apache.cxf.helpers.XMLUtils: javax.xml.namespace.QName convertStringToQName(java.lang.String)>($r9);

        virtualinvoke r11.<org.apache.cxf.staxutils.transform.QNamesMap: void put(javax.xml.namespace.QName,javax.xml.namespace.QName)>($r7, $r10);

        if r12 == null goto label2;

        $z1 = staticinvoke <org.apache.cxf.staxutils.transform.TransformUtils: boolean isEmptyQName(javax.xml.namespace.QName)>($r10);

        if $z1 != 0 goto label2;

        $r13 = "*";

        $r14 = virtualinvoke $r7.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z2 == 0 goto label2;

        $r15 = "*";

        $r16 = virtualinvoke $r10.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z3 == 0 goto label2;

        $r17 = virtualinvoke $r7.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r18 = virtualinvoke $r10.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r18);

     label2:
        goto label1;

     label3:
        return;
    }

    protected static void convertToMapOfQNames(java.util.Map, java.util.Map)
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.Set $r1;
        java.util.Map r0, r11;
        java.lang.Object $r3, $r5, $r8;
        java.lang.String $r6, $r9;
        javax.xml.namespace.QName $r7, $r10;
        boolean $z0;

        r0 := @parameter0: java.util.Map;

        r11 := @parameter1: java.util.Map;

        if r0 == null goto label2;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r5 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.String) $r5;

        $r7 = staticinvoke <org.apache.cxf.helpers.XMLUtils: javax.xml.namespace.QName convertStringToQName(java.lang.String)>($r6);

        $r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.lang.String) $r8;

        $r10 = staticinvoke <org.apache.cxf.helpers.XMLUtils: javax.xml.namespace.QName convertStringToQName(java.lang.String)>($r9);

        interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r10);

        goto label1;

     label2:
        return;
    }

    static void convertToMapOfElementProperties(java.util.Map, java.util.Map)
    {
        java.util.Map r0, r10;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r11, r12, r13, r14;
        boolean $z0, $z1, z2;
        org.apache.cxf.staxutils.transform.ElementProperty $r9;
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.Set $r1;
        java.lang.Object $r3, $r5, $r6;
        javax.xml.namespace.QName $r7, $r8;

        r0 := @parameter0: java.util.Map;

        r10 := @parameter1: java.util.Map;

        if r0 == null goto label6;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r5 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r12 = (java.lang.String) $r5;

        $r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        r13 = (java.lang.String) $r6;

        r14 = null;

        z2 = 0;

        $i0 = virtualinvoke r13.<java.lang.String: int indexOf(int)>(125);

        $r11 = r13;

        if $i0 >= 0 goto label2;

        $i5 = 0;

        goto label3;

     label2:
        $i5 = $i0;

     label3:
        $i1 = virtualinvoke $r11.<java.lang.String: int indexOf(int,int)>(61, $i5);

        if $i1 <= 0 goto label4;

        $i4 = $i1 + 1;

        r14 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int)>($i4);

        r13 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label4:
        $z1 = virtualinvoke r12.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z1 == 0 goto label5;

        $i2 = virtualinvoke r12.<java.lang.String: int length()>();

        $i3 = $i2 - 1;

        r12 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        z2 = 1;

     label5:
        $r7 = staticinvoke <org.apache.cxf.helpers.XMLUtils: javax.xml.namespace.QName convertStringToQName(java.lang.String)>(r12);

        $r8 = staticinvoke <org.apache.cxf.helpers.XMLUtils: javax.xml.namespace.QName convertStringToQName(java.lang.String)>(r13);

        $r9 = new org.apache.cxf.staxutils.transform.ElementProperty;

        specialinvoke $r9.<org.apache.cxf.staxutils.transform.ElementProperty: void <init>(javax.xml.namespace.QName,java.lang.String,boolean)>($r8, r14, z2);

        interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r9);

        goto label1;

     label6:
        return;
    }

    protected static void convertToSetOfQNames(java.util.List, java.util.Set)
    {
        java.util.List r0;
        java.util.Iterator $r1;
        java.util.Set r5;
        java.lang.Object $r2;
        java.lang.String r3;
        javax.xml.namespace.QName $r4;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        r5 := @parameter1: java.util.Set;

        if r0 == null goto label2;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r2;

        $r4 = staticinvoke <org.apache.cxf.helpers.XMLUtils: javax.xml.namespace.QName convertStringToQName(java.lang.String)>(r3);

        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        return;
    }

    static boolean isEmptyQName(javax.xml.namespace.QName)
    {
        javax.xml.namespace.QName r0;
        java.lang.String $r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: javax.xml.namespace.QName;

        $r1 = "";

        $r2 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r3 = "";

        $r4 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    static org.apache.cxf.staxutils.transform.ParsingEvent createStartElementEvent(javax.xml.namespace.QName)
    {
        org.apache.cxf.staxutils.transform.ParsingEvent $r0;
        javax.xml.namespace.QName r1;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r0 = new org.apache.cxf.staxutils.transform.ParsingEvent;

        specialinvoke $r0.<org.apache.cxf.staxutils.transform.ParsingEvent: void <init>(int,javax.xml.namespace.QName,java.lang.String)>(1, r1, null);

        return $r0;
    }

    static org.apache.cxf.staxutils.transform.ParsingEvent createEndElementEvent(javax.xml.namespace.QName)
    {
        org.apache.cxf.staxutils.transform.ParsingEvent $r0;
        javax.xml.namespace.QName r1;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r0 = new org.apache.cxf.staxutils.transform.ParsingEvent;

        specialinvoke $r0.<org.apache.cxf.staxutils.transform.ParsingEvent: void <init>(int,javax.xml.namespace.QName,java.lang.String)>(2, r1, null);

        return $r0;
    }

    static org.apache.cxf.staxutils.transform.ParsingEvent createCharactersEvent(java.lang.String)
    {
        org.apache.cxf.staxutils.transform.ParsingEvent $r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.cxf.staxutils.transform.ParsingEvent;

        specialinvoke $r0.<org.apache.cxf.staxutils.transform.ParsingEvent: void <init>(int,javax.xml.namespace.QName,java.lang.String)>(4, null, r1);

        return $r0;
    }
}
