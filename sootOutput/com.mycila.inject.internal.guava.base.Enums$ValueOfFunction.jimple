final class com.mycila.inject.internal.guava.base.Enums$ValueOfFunction extends java.lang.Object implements com.mycila.inject.internal.guava.base.Function, java.io.Serializable
{
    private final java.lang.Class enumClass;
    private static final long serialVersionUID;

    private void <init>(java.lang.Class)
    {
        java.lang.Class r1, $r3;
        java.lang.Object $r2;
        com.mycila.inject.internal.guava.base.Enums$ValueOfFunction r0;

        r0 := @this: com.mycila.inject.internal.guava.base.Enums$ValueOfFunction;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (java.lang.Class) $r2;

        r0.<com.mycila.inject.internal.guava.base.Enums$ValueOfFunction: java.lang.Class enumClass> = $r3;

        return;
    }

    public java.lang.Enum apply(java.lang.String)
    {
        java.lang.Enum $r3;
        java.lang.Class $r2;
        java.lang.String r1;
        com.mycila.inject.internal.guava.base.Enums$ValueOfFunction r0;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: com.mycila.inject.internal.guava.base.Enums$ValueOfFunction;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<com.mycila.inject.internal.guava.base.Enums$ValueOfFunction: java.lang.Class enumClass>;

        $r3 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>($r2, r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return null;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Class $r3, $r4;
        com.mycila.inject.internal.guava.base.Enums$ValueOfFunction r1, $r2;
        boolean $z0, $z1, $z2;

        r1 := @this: com.mycila.inject.internal.guava.base.Enums$ValueOfFunction;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof com.mycila.inject.internal.guava.base.Enums$ValueOfFunction;

        if $z0 == 0 goto label1;

        $r4 = r1.<com.mycila.inject.internal.guava.base.Enums$ValueOfFunction: java.lang.Class enumClass>;

        $r2 = (com.mycila.inject.internal.guava.base.Enums$ValueOfFunction) r0;

        $r3 = $r2.<com.mycila.inject.internal.guava.base.Enums$ValueOfFunction: java.lang.Class enumClass>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public int hashCode()
    {
        int $i0;
        java.lang.Class $r1;
        com.mycila.inject.internal.guava.base.Enums$ValueOfFunction r0;

        r0 := @this: com.mycila.inject.internal.guava.base.Enums$ValueOfFunction;

        $r1 = r0.<com.mycila.inject.internal.guava.base.Enums$ValueOfFunction: java.lang.Class enumClass>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        java.lang.Class $r3;
        java.lang.String $r6;
        com.mycila.inject.internal.guava.base.Enums$ValueOfFunction r2;

        r2 := @this: com.mycila.inject.internal.guava.base.Enums$ValueOfFunction;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Enums.valueOf(");

        $r3 = r2.<com.mycila.inject.internal.guava.base.Enums$ValueOfFunction: java.lang.Class enumClass>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        java.lang.Enum $r3;
        java.lang.Object r1;
        java.lang.String $r2;
        com.mycila.inject.internal.guava.base.Enums$ValueOfFunction r0;

        r0 := @this: com.mycila.inject.internal.guava.base.Enums$ValueOfFunction;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) r1;

        $r3 = virtualinvoke r0.<com.mycila.inject.internal.guava.base.Enums$ValueOfFunction: java.lang.Enum apply(java.lang.String)>($r2);

        return $r3;
    }

    void <init>(java.lang.Class, com.mycila.inject.internal.guava.base.Enums$1)
    {
        com.mycila.inject.internal.guava.base.Enums$1 r2;
        java.lang.Class r1;
        com.mycila.inject.internal.guava.base.Enums$ValueOfFunction r0;

        r0 := @this: com.mycila.inject.internal.guava.base.Enums$ValueOfFunction;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: com.mycila.inject.internal.guava.base.Enums$1;

        specialinvoke r0.<com.mycila.inject.internal.guava.base.Enums$ValueOfFunction: void <init>(java.lang.Class)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <com.mycila.inject.internal.guava.base.Enums$ValueOfFunction: long serialVersionUID> = 0L;

        return;
    }
}
