public class org.junit.internal.requests.ClassRequest extends org.junit.runner.Request
{
    private final java.lang.Object fRunnerLock;
    private final java.lang.Class fTestClass;
    private final boolean fCanUseSuiteMethod;
    private org.junit.runner.Runner fRunner;

    public void <init>(java.lang.Class, boolean)
    {
        org.junit.internal.requests.ClassRequest r0;
        java.lang.Object $r1;
        java.lang.Class r2;
        boolean z0;

        r0 := @this: org.junit.internal.requests.ClassRequest;

        r2 := @parameter0: java.lang.Class;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.junit.runner.Request: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<org.junit.internal.requests.ClassRequest: java.lang.Object fRunnerLock> = $r1;

        r0.<org.junit.internal.requests.ClassRequest: java.lang.Class fTestClass> = r2;

        r0.<org.junit.internal.requests.ClassRequest: boolean fCanUseSuiteMethod> = z0;

        return;
    }

    public void <init>(java.lang.Class)
    {
        org.junit.internal.requests.ClassRequest r0;
        java.lang.Class r1;

        r0 := @this: org.junit.internal.requests.ClassRequest;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.junit.internal.requests.ClassRequest: void <init>(java.lang.Class,boolean)>(r1, 1);

        return;
    }

    public org.junit.runner.Runner getRunner()
    {
        java.lang.Throwable $r7;
        org.junit.runner.Runner $r2, $r3, $r6;
        org.junit.internal.builders.AllDefaultPossibilitiesBuilder $r4;
        org.junit.internal.requests.ClassRequest r0;
        java.lang.Object $r1;
        java.lang.Class $r5;
        boolean $z0;

        r0 := @this: org.junit.internal.requests.ClassRequest;

        $r1 = r0.<org.junit.internal.requests.ClassRequest: java.lang.Object fRunnerLock>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.junit.internal.requests.ClassRequest: org.junit.runner.Runner fRunner>;

        if $r2 != null goto label2;

        $r4 = new org.junit.internal.builders.AllDefaultPossibilitiesBuilder;

        $z0 = r0.<org.junit.internal.requests.ClassRequest: boolean fCanUseSuiteMethod>;

        specialinvoke $r4.<org.junit.internal.builders.AllDefaultPossibilitiesBuilder: void <init>(boolean)>($z0);

        $r5 = r0.<org.junit.internal.requests.ClassRequest: java.lang.Class fTestClass>;

        $r6 = virtualinvoke $r4.<org.junit.internal.builders.AllDefaultPossibilitiesBuilder: org.junit.runner.Runner safeRunnerForClass(java.lang.Class)>($r5);

        r0.<org.junit.internal.requests.ClassRequest: org.junit.runner.Runner fRunner> = $r6;

     label2:
        $r3 = r0.<org.junit.internal.requests.ClassRequest: org.junit.runner.Runner fRunner>;

        exitmonitor $r1;

     label3:
        return $r3;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
}
