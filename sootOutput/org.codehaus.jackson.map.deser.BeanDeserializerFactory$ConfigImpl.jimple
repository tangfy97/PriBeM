public class org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl extends org.codehaus.jackson.map.DeserializerFactory$Config
{
    protected static final org.codehaus.jackson.map.KeyDeserializers[] NO_KEY_DESERIALIZERS;
    protected static final org.codehaus.jackson.map.deser.BeanDeserializerModifier[] NO_MODIFIERS;
    protected static final org.codehaus.jackson.map.AbstractTypeResolver[] NO_ABSTRACT_TYPE_RESOLVERS;
    protected static final org.codehaus.jackson.map.deser.ValueInstantiators[] NO_VALUE_INSTANTIATORS;
    protected final org.codehaus.jackson.map.Deserializers[] _additionalDeserializers;
    protected final org.codehaus.jackson.map.KeyDeserializers[] _additionalKeyDeserializers;
    protected final org.codehaus.jackson.map.deser.BeanDeserializerModifier[] _modifiers;
    protected final org.codehaus.jackson.map.AbstractTypeResolver[] _abstractTypeResolvers;
    protected final org.codehaus.jackson.map.deser.ValueInstantiators[] _valueInstantiators;

    public void <init>()
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl;

        specialinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: void <init>(org.codehaus.jackson.map.Deserializers[],org.codehaus.jackson.map.KeyDeserializers[],org.codehaus.jackson.map.deser.BeanDeserializerModifier[],org.codehaus.jackson.map.AbstractTypeResolver[],org.codehaus.jackson.map.deser.ValueInstantiators[])>(null, null, null, null, null);

        return;
    }

    protected void <init>(org.codehaus.jackson.map.Deserializers[], org.codehaus.jackson.map.KeyDeserializers[], org.codehaus.jackson.map.deser.BeanDeserializerModifier[], org.codehaus.jackson.map.AbstractTypeResolver[], org.codehaus.jackson.map.deser.ValueInstantiators[])
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl r0;
        org.codehaus.jackson.map.deser.BeanDeserializerModifier[] r3, $r8;
        org.codehaus.jackson.map.deser.ValueInstantiators[] r5, $r10;
        org.codehaus.jackson.map.KeyDeserializers[] r2, $r7;
        org.codehaus.jackson.map.AbstractTypeResolver[] r4, $r9;
        org.codehaus.jackson.map.Deserializers[] r1, $r6;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl;

        r1 := @parameter0: org.codehaus.jackson.map.Deserializers[];

        r2 := @parameter1: org.codehaus.jackson.map.KeyDeserializers[];

        r3 := @parameter2: org.codehaus.jackson.map.deser.BeanDeserializerModifier[];

        r4 := @parameter3: org.codehaus.jackson.map.AbstractTypeResolver[];

        r5 := @parameter4: org.codehaus.jackson.map.deser.ValueInstantiators[];

        specialinvoke r0.<org.codehaus.jackson.map.DeserializerFactory$Config: void <init>()>();

        if r1 != null goto label01;

        $r6 = staticinvoke <org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.Deserializers[] access$000()>();

        goto label02;

     label01:
        $r6 = r1;

     label02:
        r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.Deserializers[] _additionalDeserializers> = $r6;

        if r2 != null goto label03;

        $r7 = <org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.KeyDeserializers[] NO_KEY_DESERIALIZERS>;

        goto label04;

     label03:
        $r7 = r2;

     label04:
        r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.KeyDeserializers[] _additionalKeyDeserializers> = $r7;

        if r3 != null goto label05;

        $r8 = <org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.deser.BeanDeserializerModifier[] NO_MODIFIERS>;

        goto label06;

     label05:
        $r8 = r3;

     label06:
        r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.deser.BeanDeserializerModifier[] _modifiers> = $r8;

        if r4 != null goto label07;

        $r9 = <org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.AbstractTypeResolver[] NO_ABSTRACT_TYPE_RESOLVERS>;

        goto label08;

     label07:
        $r9 = r4;

     label08:
        r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.AbstractTypeResolver[] _abstractTypeResolvers> = $r9;

        if r5 != null goto label09;

        $r10 = <org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.deser.ValueInstantiators[] NO_VALUE_INSTANTIATORS>;

        goto label10;

     label09:
        $r10 = r5;

     label10:
        r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.deser.ValueInstantiators[] _valueInstantiators> = $r10;

        return;
    }

    public org.codehaus.jackson.map.DeserializerFactory$Config withAdditionalDeserializers(org.codehaus.jackson.map.Deserializers)
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl r1, $r5;
        java.lang.Object[] $r3;
        org.codehaus.jackson.map.deser.BeanDeserializerModifier[] $r8;
        java.lang.IllegalArgumentException $r10;
        org.codehaus.jackson.map.deser.ValueInstantiators[] $r6;
        org.codehaus.jackson.map.KeyDeserializers[] $r9;
        org.codehaus.jackson.map.Deserializers r0;
        org.codehaus.jackson.map.AbstractTypeResolver[] $r7;
        org.codehaus.jackson.map.Deserializers[] $r2, r4;

        r1 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl;

        r0 := @parameter0: org.codehaus.jackson.map.Deserializers;

        if r0 != null goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can not pass null Deserializers");

        throw $r10;

     label1:
        $r2 = r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.Deserializers[] _additionalDeserializers>;

        $r3 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.lang.Object[] insertInListNoDup(java.lang.Object[],java.lang.Object)>($r2, r0);

        r4 = (org.codehaus.jackson.map.Deserializers[]) $r3;

        $r5 = new org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl;

        $r9 = r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.KeyDeserializers[] _additionalKeyDeserializers>;

        $r8 = r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.deser.BeanDeserializerModifier[] _modifiers>;

        $r7 = r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.AbstractTypeResolver[] _abstractTypeResolvers>;

        $r6 = r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.deser.ValueInstantiators[] _valueInstantiators>;

        specialinvoke $r5.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: void <init>(org.codehaus.jackson.map.Deserializers[],org.codehaus.jackson.map.KeyDeserializers[],org.codehaus.jackson.map.deser.BeanDeserializerModifier[],org.codehaus.jackson.map.AbstractTypeResolver[],org.codehaus.jackson.map.deser.ValueInstantiators[])>(r4, $r9, $r8, $r7, $r6);

        return $r5;
    }

    public org.codehaus.jackson.map.DeserializerFactory$Config withAdditionalKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers)
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl r1, $r5;
        java.lang.Object[] $r3;
        org.codehaus.jackson.map.deser.BeanDeserializerModifier[] $r8;
        java.lang.IllegalArgumentException $r10;
        org.codehaus.jackson.map.deser.ValueInstantiators[] $r6;
        org.codehaus.jackson.map.KeyDeserializers[] $r2, r4;
        org.codehaus.jackson.map.AbstractTypeResolver[] $r7;
        org.codehaus.jackson.map.Deserializers[] $r9;
        org.codehaus.jackson.map.KeyDeserializers r0;

        r1 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl;

        r0 := @parameter0: org.codehaus.jackson.map.KeyDeserializers;

        if r0 != null goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can not pass null KeyDeserializers");

        throw $r10;

     label1:
        $r2 = r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.KeyDeserializers[] _additionalKeyDeserializers>;

        $r3 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.lang.Object[] insertInListNoDup(java.lang.Object[],java.lang.Object)>($r2, r0);

        r4 = (org.codehaus.jackson.map.KeyDeserializers[]) $r3;

        $r5 = new org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl;

        $r9 = r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.Deserializers[] _additionalDeserializers>;

        $r8 = r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.deser.BeanDeserializerModifier[] _modifiers>;

        $r7 = r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.AbstractTypeResolver[] _abstractTypeResolvers>;

        $r6 = r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.deser.ValueInstantiators[] _valueInstantiators>;

        specialinvoke $r5.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: void <init>(org.codehaus.jackson.map.Deserializers[],org.codehaus.jackson.map.KeyDeserializers[],org.codehaus.jackson.map.deser.BeanDeserializerModifier[],org.codehaus.jackson.map.AbstractTypeResolver[],org.codehaus.jackson.map.deser.ValueInstantiators[])>($r9, r4, $r8, $r7, $r6);

        return $r5;
    }

    public org.codehaus.jackson.map.DeserializerFactory$Config withDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier)
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl r1, $r5;
        java.lang.Object[] $r3;
        org.codehaus.jackson.map.deser.BeanDeserializerModifier r0;
        org.codehaus.jackson.map.deser.BeanDeserializerModifier[] $r2, r4;
        java.lang.IllegalArgumentException $r10;
        org.codehaus.jackson.map.deser.ValueInstantiators[] $r6;
        org.codehaus.jackson.map.KeyDeserializers[] $r8;
        org.codehaus.jackson.map.AbstractTypeResolver[] $r7;
        org.codehaus.jackson.map.Deserializers[] $r9;

        r1 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl;

        r0 := @parameter0: org.codehaus.jackson.map.deser.BeanDeserializerModifier;

        if r0 != null goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can not pass null modifier");

        throw $r10;

     label1:
        $r2 = r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.deser.BeanDeserializerModifier[] _modifiers>;

        $r3 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.lang.Object[] insertInListNoDup(java.lang.Object[],java.lang.Object)>($r2, r0);

        r4 = (org.codehaus.jackson.map.deser.BeanDeserializerModifier[]) $r3;

        $r5 = new org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl;

        $r9 = r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.Deserializers[] _additionalDeserializers>;

        $r8 = r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.KeyDeserializers[] _additionalKeyDeserializers>;

        $r7 = r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.AbstractTypeResolver[] _abstractTypeResolvers>;

        $r6 = r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.deser.ValueInstantiators[] _valueInstantiators>;

        specialinvoke $r5.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: void <init>(org.codehaus.jackson.map.Deserializers[],org.codehaus.jackson.map.KeyDeserializers[],org.codehaus.jackson.map.deser.BeanDeserializerModifier[],org.codehaus.jackson.map.AbstractTypeResolver[],org.codehaus.jackson.map.deser.ValueInstantiators[])>($r9, $r8, r4, $r7, $r6);

        return $r5;
    }

    public org.codehaus.jackson.map.DeserializerFactory$Config withAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver)
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl r1, $r5;
        java.lang.Object[] $r3;
        org.codehaus.jackson.map.deser.BeanDeserializerModifier[] $r7;
        java.lang.IllegalArgumentException $r10;
        org.codehaus.jackson.map.deser.ValueInstantiators[] $r6;
        org.codehaus.jackson.map.KeyDeserializers[] $r8;
        org.codehaus.jackson.map.AbstractTypeResolver r0;
        org.codehaus.jackson.map.AbstractTypeResolver[] $r2, r4;
        org.codehaus.jackson.map.Deserializers[] $r9;

        r1 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl;

        r0 := @parameter0: org.codehaus.jackson.map.AbstractTypeResolver;

        if r0 != null goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can not pass null resolver");

        throw $r10;

     label1:
        $r2 = r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.AbstractTypeResolver[] _abstractTypeResolvers>;

        $r3 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.lang.Object[] insertInListNoDup(java.lang.Object[],java.lang.Object)>($r2, r0);

        r4 = (org.codehaus.jackson.map.AbstractTypeResolver[]) $r3;

        $r5 = new org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl;

        $r9 = r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.Deserializers[] _additionalDeserializers>;

        $r8 = r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.KeyDeserializers[] _additionalKeyDeserializers>;

        $r7 = r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.deser.BeanDeserializerModifier[] _modifiers>;

        $r6 = r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.deser.ValueInstantiators[] _valueInstantiators>;

        specialinvoke $r5.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: void <init>(org.codehaus.jackson.map.Deserializers[],org.codehaus.jackson.map.KeyDeserializers[],org.codehaus.jackson.map.deser.BeanDeserializerModifier[],org.codehaus.jackson.map.AbstractTypeResolver[],org.codehaus.jackson.map.deser.ValueInstantiators[])>($r9, $r8, $r7, r4, $r6);

        return $r5;
    }

    public org.codehaus.jackson.map.DeserializerFactory$Config withValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators)
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl r1, $r5;
        java.lang.Object[] $r3;
        org.codehaus.jackson.map.deser.BeanDeserializerModifier[] $r7;
        java.lang.IllegalArgumentException $r10;
        org.codehaus.jackson.map.deser.ValueInstantiators[] $r2, r4;
        org.codehaus.jackson.map.KeyDeserializers[] $r8;
        org.codehaus.jackson.map.AbstractTypeResolver[] $r6;
        org.codehaus.jackson.map.Deserializers[] $r9;
        org.codehaus.jackson.map.deser.ValueInstantiators r0;

        r1 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl;

        r0 := @parameter0: org.codehaus.jackson.map.deser.ValueInstantiators;

        if r0 != null goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can not pass null resolver");

        throw $r10;

     label1:
        $r2 = r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.deser.ValueInstantiators[] _valueInstantiators>;

        $r3 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.lang.Object[] insertInListNoDup(java.lang.Object[],java.lang.Object)>($r2, r0);

        r4 = (org.codehaus.jackson.map.deser.ValueInstantiators[]) $r3;

        $r5 = new org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl;

        $r9 = r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.Deserializers[] _additionalDeserializers>;

        $r8 = r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.KeyDeserializers[] _additionalKeyDeserializers>;

        $r7 = r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.deser.BeanDeserializerModifier[] _modifiers>;

        $r6 = r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.AbstractTypeResolver[] _abstractTypeResolvers>;

        specialinvoke $r5.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: void <init>(org.codehaus.jackson.map.Deserializers[],org.codehaus.jackson.map.KeyDeserializers[],org.codehaus.jackson.map.deser.BeanDeserializerModifier[],org.codehaus.jackson.map.AbstractTypeResolver[],org.codehaus.jackson.map.deser.ValueInstantiators[])>($r9, $r8, $r7, $r6, r4);

        return $r5;
    }

    public boolean hasDeserializers()
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl r0;
        int $i0;
        org.codehaus.jackson.map.Deserializers[] $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.Deserializers[] _additionalDeserializers>;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasKeyDeserializers()
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl r0;
        int $i0;
        org.codehaus.jackson.map.KeyDeserializers[] $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.KeyDeserializers[] _additionalKeyDeserializers>;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasDeserializerModifiers()
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl r0;
        int $i0;
        org.codehaus.jackson.map.deser.BeanDeserializerModifier[] $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.deser.BeanDeserializerModifier[] _modifiers>;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasAbstractTypeResolvers()
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl r0;
        org.codehaus.jackson.map.AbstractTypeResolver[] $r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.AbstractTypeResolver[] _abstractTypeResolvers>;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasValueInstantiators()
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl r0;
        int $i0;
        org.codehaus.jackson.map.deser.ValueInstantiators[] $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.deser.ValueInstantiators[] _valueInstantiators>;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Iterable deserializers()
    {
        org.codehaus.jackson.map.Deserializers[] $r1;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl r0;
        java.lang.Iterable $r2;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.Deserializers[] _additionalDeserializers>;

        $r2 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.lang.Iterable arrayAsIterable(java.lang.Object[])>($r1);

        return $r2;
    }

    public java.lang.Iterable keyDeserializers()
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl r0;
        java.lang.Iterable $r2;
        org.codehaus.jackson.map.KeyDeserializers[] $r1;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.KeyDeserializers[] _additionalKeyDeserializers>;

        $r2 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.lang.Iterable arrayAsIterable(java.lang.Object[])>($r1);

        return $r2;
    }

    public java.lang.Iterable deserializerModifiers()
    {
        org.codehaus.jackson.map.deser.BeanDeserializerModifier[] $r1;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl r0;
        java.lang.Iterable $r2;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.deser.BeanDeserializerModifier[] _modifiers>;

        $r2 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.lang.Iterable arrayAsIterable(java.lang.Object[])>($r1);

        return $r2;
    }

    public java.lang.Iterable abstractTypeResolvers()
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl r0;
        java.lang.Iterable $r2;
        org.codehaus.jackson.map.AbstractTypeResolver[] $r1;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.AbstractTypeResolver[] _abstractTypeResolvers>;

        $r2 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.lang.Iterable arrayAsIterable(java.lang.Object[])>($r1);

        return $r2;
    }

    public java.lang.Iterable valueInstantiators()
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl r0;
        org.codehaus.jackson.map.deser.ValueInstantiators[] $r1;
        java.lang.Iterable $r2;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.deser.ValueInstantiators[] _valueInstantiators>;

        $r2 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.lang.Iterable arrayAsIterable(java.lang.Object[])>($r1);

        return $r2;
    }

    static void <clinit>()
    {
        org.codehaus.jackson.map.AbstractTypeResolver[] $r2;
        org.codehaus.jackson.map.deser.BeanDeserializerModifier[] $r1;
        org.codehaus.jackson.map.deser.ValueInstantiators[] $r3;
        org.codehaus.jackson.map.KeyDeserializers[] $r0;

        $r0 = newarray (org.codehaus.jackson.map.KeyDeserializers)[0];

        <org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.KeyDeserializers[] NO_KEY_DESERIALIZERS> = $r0;

        $r1 = newarray (org.codehaus.jackson.map.deser.BeanDeserializerModifier)[0];

        <org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.deser.BeanDeserializerModifier[] NO_MODIFIERS> = $r1;

        $r2 = newarray (org.codehaus.jackson.map.AbstractTypeResolver)[0];

        <org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.AbstractTypeResolver[] NO_ABSTRACT_TYPE_RESOLVERS> = $r2;

        $r3 = newarray (org.codehaus.jackson.map.deser.ValueInstantiators)[0];

        <org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.deser.ValueInstantiators[] NO_VALUE_INSTANTIATORS> = $r3;

        return;
    }
}
