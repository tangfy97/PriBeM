abstract class org.apache.poi.ss.formula.ptg.Ref2DPtgBase extends org.apache.poi.ss.formula.ptg.RefPtgBase
{
    private static final int SIZE;

    protected void <init>(int, int, boolean, boolean)
    {
        int i0, i1;
        org.apache.poi.ss.formula.ptg.Ref2DPtgBase r0;
        boolean z0, z1;

        r0 := @this: org.apache.poi.ss.formula.ptg.Ref2DPtgBase;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        specialinvoke r0.<org.apache.poi.ss.formula.ptg.RefPtgBase: void <init>()>();

        virtualinvoke r0.<org.apache.poi.ss.formula.ptg.Ref2DPtgBase: void setRow(int)>(i0);

        virtualinvoke r0.<org.apache.poi.ss.formula.ptg.Ref2DPtgBase: void setColumn(int)>(i1);

        virtualinvoke r0.<org.apache.poi.ss.formula.ptg.Ref2DPtgBase: void setRowRelative(boolean)>(z0);

        virtualinvoke r0.<org.apache.poi.ss.formula.ptg.Ref2DPtgBase: void setColRelative(boolean)>(z1);

        return;
    }

    protected void <init>(org.apache.poi.util.LittleEndianInput)
    {
        org.apache.poi.util.LittleEndianInput r1;
        org.apache.poi.ss.formula.ptg.Ref2DPtgBase r0;

        r0 := @this: org.apache.poi.ss.formula.ptg.Ref2DPtgBase;

        r1 := @parameter0: org.apache.poi.util.LittleEndianInput;

        specialinvoke r0.<org.apache.poi.ss.formula.ptg.RefPtgBase: void <init>()>();

        virtualinvoke r0.<org.apache.poi.ss.formula.ptg.Ref2DPtgBase: void readCoordinates(org.apache.poi.util.LittleEndianInput)>(r1);

        return;
    }

    protected void <init>(org.apache.poi.ss.util.CellReference)
    {
        org.apache.poi.ss.formula.ptg.Ref2DPtgBase r0;
        org.apache.poi.ss.util.CellReference r1;

        r0 := @this: org.apache.poi.ss.formula.ptg.Ref2DPtgBase;

        r1 := @parameter0: org.apache.poi.ss.util.CellReference;

        specialinvoke r0.<org.apache.poi.ss.formula.ptg.RefPtgBase: void <init>(org.apache.poi.ss.util.CellReference)>(r1);

        return;
    }

    public void write(org.apache.poi.util.LittleEndianOutput)
    {
        byte $b0, $b1;
        org.apache.poi.util.LittleEndianOutput r0;
        int $i2, $i3, $i4;
        org.apache.poi.ss.formula.ptg.Ref2DPtgBase r1;

        r1 := @this: org.apache.poi.ss.formula.ptg.Ref2DPtgBase;

        r0 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        $b0 = virtualinvoke r1.<org.apache.poi.ss.formula.ptg.Ref2DPtgBase: byte getSid()>();

        $b1 = virtualinvoke r1.<org.apache.poi.ss.formula.ptg.Ref2DPtgBase: byte getPtgClass()>();

        $i3 = (int) $b0;

        $i4 = (int) $b1;

        $i2 = $i3 + $i4;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($i2);

        virtualinvoke r1.<org.apache.poi.ss.formula.ptg.Ref2DPtgBase: void writeCoordinates(org.apache.poi.util.LittleEndianOutput)>(r0);

        return;
    }

    public final java.lang.String toFormulaString()
    {
        java.lang.String $r1;
        org.apache.poi.ss.formula.ptg.Ref2DPtgBase r0;

        r0 := @this: org.apache.poi.ss.formula.ptg.Ref2DPtgBase;

        $r1 = virtualinvoke r0.<org.apache.poi.ss.formula.ptg.Ref2DPtgBase: java.lang.String formatReferenceAsString()>();

        return $r1;
    }

    protected abstract byte getSid();

    public final int getSize()
    {
        org.apache.poi.ss.formula.ptg.Ref2DPtgBase r0;

        r0 := @this: org.apache.poi.ss.formula.ptg.Ref2DPtgBase;

        return 5;
    }

    public final java.lang.String toString()
    {
        java.lang.StringBuffer $r0;
        java.lang.Class $r2;
        java.lang.String $r3, $r4, $r5;
        org.apache.poi.ss.formula.ptg.Ref2DPtgBase r1;

        r1 := @this: org.apache.poi.ss.formula.ptg.Ref2DPtgBase;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" [");

        $r4 = virtualinvoke r1.<org.apache.poi.ss.formula.ptg.Ref2DPtgBase: java.lang.String formatReferenceAsString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public static void <clinit>()
    {
        <org.apache.poi.ss.formula.ptg.Ref2DPtgBase: int SIZE> = 5;

        return;
    }
}
