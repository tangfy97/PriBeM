public class org.jdesktop.swingx.JXMonthView extends javax.swing.JComponent
{
    private static final java.util.logging.Logger LOG;
    public static final java.lang.String COMMIT_KEY;
    public static final java.lang.String CANCEL_KEY;
    public static final java.lang.String BOX_PADDING_X;
    public static final java.lang.String BOX_PADDING_Y;
    public static final java.lang.String DAYS_OF_THE_WEEK;
    public static final java.lang.String SELECTION_MODEL;
    public static final java.lang.String TRAVERSABLE;
    public static final java.lang.String FLAGGED_DATES;
    public static final java.lang.String uiClassID;
    public static final int DAYS_IN_WEEK;
    public static final int MONTHS_IN_YEAR;
    private java.util.Date firstDisplayedDay;
    private java.util.Calendar cal;
    private java.util.Calendar anchor;
    private java.util.Date today;
    private javax.swing.Timer todayTimer;
    private int firstDayOfWeek;
    private org.jdesktop.swingx.calendar.DateSelectionModel model;
    private org.jdesktop.swingx.event.DateSelectionListener modelListener;
    private org.jdesktop.swingx.calendar.DaySelectionModel flaggedDates;
    private org.jdesktop.swingx.event.EventListenerMap listenerMap;
    private boolean traversable;
    private boolean leadingDays;
    private boolean trailingDays;
    private boolean showWeekNumber;
    private boolean componentInputMapEnabled;
    protected java.util.Date modifiedStartDate;
    protected java.util.Date modifiedEndDate;
    private java.lang.String[] _daysOfTheWeek;
    protected java.awt.Insets _monthStringInsets;
    private int boxPaddingX;
    private int boxPaddingY;
    private int minCalCols;
    private int minCalRows;
    private java.awt.Color todayBackgroundColor;
    private java.awt.Color monthStringBackground;
    private java.awt.Color monthStringForeground;
    private java.awt.Color daysOfTheWeekForeground;
    private java.awt.Color selectedBackground;
    private java.util.Hashtable dayToColorTable;
    private java.awt.Color flaggedDayForeground;
    private java.awt.Color selectedForeground;
    private boolean zoomable;

    public void <init>()
    {
        org.jdesktop.swingx.JXMonthView r0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        specialinvoke r0.<org.jdesktop.swingx.JXMonthView: void <init>(java.util.Date,org.jdesktop.swingx.calendar.DateSelectionModel,java.util.Locale)>(null, null, null);

        return;
    }

    public void <init>(java.util.Locale)
    {
        org.jdesktop.swingx.JXMonthView r0;
        java.util.Locale r1;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r1 := @parameter0: java.util.Locale;

        specialinvoke r0.<org.jdesktop.swingx.JXMonthView: void <init>(java.util.Date,org.jdesktop.swingx.calendar.DateSelectionModel,java.util.Locale)>(null, null, r1);

        return;
    }

    public void <init>(java.util.Date)
    {
        org.jdesktop.swingx.JXMonthView r0;
        java.util.Date r1;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r1 := @parameter0: java.util.Date;

        specialinvoke r0.<org.jdesktop.swingx.JXMonthView: void <init>(java.util.Date,org.jdesktop.swingx.calendar.DateSelectionModel,java.util.Locale)>(r1, null, null);

        return;
    }

    public void <init>(java.util.Date, org.jdesktop.swingx.calendar.DateSelectionModel)
    {
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel r2;
        java.util.Date r1;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r1 := @parameter0: java.util.Date;

        r2 := @parameter1: org.jdesktop.swingx.calendar.DateSelectionModel;

        specialinvoke r0.<org.jdesktop.swingx.JXMonthView: void <init>(java.util.Date,org.jdesktop.swingx.calendar.DateSelectionModel,java.util.Locale)>(r1, r2, null);

        return;
    }

    public void <init>(java.util.Date, org.jdesktop.swingx.calendar.DateSelectionModel, java.util.Locale)
    {
        java.awt.Color $r7;
        java.awt.Insets $r1;
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel r4;
        org.jdesktop.swingx.event.EventListenerMap $r3;
        java.util.Date r6, $r8;
        java.util.Locale r5;
        java.util.Hashtable $r2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r6 := @parameter0: java.util.Date;

        r4 := @parameter1: org.jdesktop.swingx.calendar.DateSelectionModel;

        r5 := @parameter2: java.util.Locale;

        specialinvoke r0.<javax.swing.JComponent: void <init>()>();

        $r1 = new java.awt.Insets;

        specialinvoke $r1.<java.awt.Insets: void <init>(int,int,int,int)>(0, 0, 0, 0);

        r0.<org.jdesktop.swingx.JXMonthView: java.awt.Insets _monthStringInsets> = $r1;

        r0.<org.jdesktop.swingx.JXMonthView: int minCalCols> = 1;

        r0.<org.jdesktop.swingx.JXMonthView: int minCalRows> = 1;

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<org.jdesktop.swingx.JXMonthView: java.util.Hashtable dayToColorTable> = $r2;

        $r3 = new org.jdesktop.swingx.event.EventListenerMap;

        specialinvoke $r3.<org.jdesktop.swingx.event.EventListenerMap: void <init>()>();

        r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.event.EventListenerMap listenerMap> = $r3;

        specialinvoke r0.<org.jdesktop.swingx.JXMonthView: void initModel(org.jdesktop.swingx.calendar.DateSelectionModel,java.util.Locale)>(r4, r5);

        specialinvoke r0.<org.jdesktop.swingx.JXMonthView: void superSetLocale(java.util.Locale)>(r5);

        if r6 == null goto label1;

        $r8 = r6;

        goto label2;

     label1:
        $r8 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.util.Date getCurrentDate()>();

     label2:
        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void setFirstDisplayedDay(java.util.Date)>($r8);

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void updateTodayFromCurrentTime()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void updateUI()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void setFocusable(boolean)>(1);

        $r7 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color getForeground()>();

        r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color todayBackgroundColor> = $r7;

        return;
    }

    public void setLocale(java.util.Locale)
    {
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r2;
        java.util.Locale r1;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r1 := @parameter0: java.util.Locale;

        $r2 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel model>;

        interfaceinvoke $r2.<org.jdesktop.swingx.calendar.DateSelectionModel: void setLocale(java.util.Locale)>(r1);

        return;
    }

    private void superSetLocale(java.util.Locale)
    {
        org.jdesktop.swingx.JXMonthView r1;
        java.util.Locale r0;

        r1 := @this: org.jdesktop.swingx.JXMonthView;

        r0 := @parameter0: java.util.Locale;

        if r0 == null goto label1;

        specialinvoke r1.<javax.swing.JComponent: void setLocale(java.util.Locale)>(r0);

        virtualinvoke r1.<org.jdesktop.swingx.JXMonthView: void repaint()>();

     label1:
        return;
    }

    public java.util.Calendar getCalendar()
    {
        java.lang.IllegalStateException $r6;
        java.util.Calendar $r1, $r2, r4;
        org.jdesktop.swingx.JXMonthView r0;
        java.util.Date $r5;
        java.lang.Object $r3;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        if $r1 != null goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("must not be called before instantiation is complete");

        throw $r6;

     label1:
        $r2 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $r3 = virtualinvoke $r2.<java.util.Calendar: java.lang.Object clone()>();

        r4 = (java.util.Calendar) $r3;

        $r5 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Date firstDisplayedDay>;

        virtualinvoke r4.<java.util.Calendar: void setTime(java.util.Date)>($r5);

        return r4;
    }

    public java.util.TimeZone getTimeZone()
    {
        java.util.Calendar $r1;
        org.jdesktop.swingx.JXMonthView r0;
        java.util.TimeZone $r2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $r2 = virtualinvoke $r1.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        return $r2;
    }

    public void setTimeZone(java.util.TimeZone)
    {
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r2;
        java.util.TimeZone r1;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r1 := @parameter0: java.util.TimeZone;

        $r2 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel model>;

        interfaceinvoke $r2.<org.jdesktop.swingx.calendar.DateSelectionModel: void setTimeZone(java.util.TimeZone)>(r1);

        return;
    }

    public int getFirstDayOfWeek()
    {
        int $i0;
        org.jdesktop.swingx.JXMonthView r0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $i0 = r0.<org.jdesktop.swingx.JXMonthView: int firstDayOfWeek>;

        return $i0;
    }

    public void setFirstDayOfWeek(int)
    {
        int i0;
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r1;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        interfaceinvoke $r1.<org.jdesktop.swingx.calendar.DateSelectionModel: void setFirstDayOfWeek(int)>(i0);

        return;
    }

    private void initModel(org.jdesktop.swingx.calendar.DateSelectionModel, java.util.Locale)
    {
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel r6;
        org.jdesktop.swingx.calendar.DaySelectionModel $r1, $r3, $r5;
        org.jdesktop.swingx.calendar.DateSelectionModel$SelectionMode $r2;
        org.jdesktop.swingx.event.DateSelectionListener $r4;
        java.util.Locale r7;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r6 := @parameter0: org.jdesktop.swingx.calendar.DateSelectionModel;

        r7 := @parameter1: java.util.Locale;

        if r7 != null goto label1;

        r7 = staticinvoke <javax.swing.JComponent: java.util.Locale getDefaultLocale()>();

     label1:
        if r6 != null goto label2;

        $r5 = new org.jdesktop.swingx.calendar.DaySelectionModel;

        specialinvoke $r5.<org.jdesktop.swingx.calendar.DaySelectionModel: void <init>(java.util.Locale)>(r7);

        r6 = $r5;

     label2:
        r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel model> = r6;

        $r1 = new org.jdesktop.swingx.calendar.DaySelectionModel;

        specialinvoke $r1.<org.jdesktop.swingx.calendar.DaySelectionModel: void <init>(java.util.Locale)>(r7);

        r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DaySelectionModel flaggedDates> = $r1;

        $r3 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DaySelectionModel flaggedDates>;

        $r2 = <org.jdesktop.swingx.calendar.DateSelectionModel$SelectionMode: org.jdesktop.swingx.calendar.DateSelectionModel$SelectionMode MULTIPLE_INTERVAL_SELECTION>;

        virtualinvoke $r3.<org.jdesktop.swingx.calendar.DaySelectionModel: void setSelectionMode(org.jdesktop.swingx.calendar.DateSelectionModel$SelectionMode)>($r2);

        specialinvoke r0.<org.jdesktop.swingx.JXMonthView: void installCalendar()>();

        $r4 = specialinvoke r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.event.DateSelectionListener getDateSelectionListener()>();

        interfaceinvoke r6.<org.jdesktop.swingx.calendar.DateSelectionModel: void addDateSelectionListener(org.jdesktop.swingx.event.DateSelectionListener)>($r4);

        return;
    }

    private org.jdesktop.swingx.event.DateSelectionListener getDateSelectionListener()
    {
        org.jdesktop.swingx.JXMonthView$1 $r3;
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.event.DateSelectionListener $r1, $r2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.event.DateSelectionListener modelListener>;

        if $r1 != null goto label1;

        $r3 = new org.jdesktop.swingx.JXMonthView$1;

        specialinvoke $r3.<org.jdesktop.swingx.JXMonthView$1: void <init>(org.jdesktop.swingx.JXMonthView)>(r0);

        r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.event.DateSelectionListener modelListener> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.event.DateSelectionListener modelListener>;

        return $r2;
    }

    private void installCalendar()
    {
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r1;
        java.util.Date $r4;
        java.util.Calendar $r2, $r3, $r5, $r7;
        int $i0;
        java.lang.Object $r6;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel model>;

        $r2 = interfaceinvoke $r1.<org.jdesktop.swingx.calendar.DateSelectionModel: java.util.Calendar getCalendar()>();

        r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal> = $r2;

        $r3 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $i0 = virtualinvoke $r3.<java.util.Calendar: int getFirstDayOfWeek()>();

        r0.<org.jdesktop.swingx.JXMonthView: int firstDayOfWeek> = $i0;

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.util.Date getAnchorDate()>();

        $r5 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $r6 = virtualinvoke $r5.<java.util.Calendar: java.lang.Object clone()>();

        $r7 = (java.util.Calendar) $r6;

        r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar anchor> = $r7;

        if $r4 == null goto label1;

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void setFirstDisplayedDay(java.util.Date)>($r4);

     label1:
        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void updateTodayFromCurrentTime()>();

        return;
    }

    protected java.util.Date getAnchorDate()
    {
        java.util.Calendar $r1, $r2;
        org.jdesktop.swingx.JXMonthView r0;
        java.util.Date $r3;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar anchor>;

        if $r1 == null goto label1;

        $r2 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar anchor>;

        $r3 = virtualinvoke $r2.<java.util.Calendar: java.util.Date getTime()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    private void updateCalendar()
    {
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r2, $r4, $r8, $r10, $r11;
        java.util.Calendar $r7, $r9;
        java.util.Locale $r1, $r3, $r12;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        java.util.TimeZone $r5, $r6;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.util.Locale getLocale()>();

        $r2 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel model>;

        $r3 = interfaceinvoke $r2.<org.jdesktop.swingx.calendar.DateSelectionModel: java.util.Locale getLocale()>();

        $z0 = virtualinvoke $r1.<java.util.Locale: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.jdesktop.swingx.JXMonthView: void installCalendar()>();

        $r11 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel model>;

        $r12 = interfaceinvoke $r11.<org.jdesktop.swingx.calendar.DateSelectionModel: java.util.Locale getLocale()>();

        specialinvoke r0.<org.jdesktop.swingx.JXMonthView: void superSetLocale(java.util.Locale)>($r12);

        goto label4;

     label1:
        $r4 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel model>;

        $r5 = interfaceinvoke $r4.<org.jdesktop.swingx.calendar.DateSelectionModel: java.util.TimeZone getTimeZone()>();

        $r6 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.util.TimeZone getTimeZone()>();

        $z1 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label2;

        specialinvoke r0.<org.jdesktop.swingx.JXMonthView: void updateTimeZone()>();

     label2:
        $r7 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $i0 = virtualinvoke $r7.<java.util.Calendar: int getMinimalDaysInFirstWeek()>();

        $r8 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel model>;

        $i1 = interfaceinvoke $r8.<org.jdesktop.swingx.calendar.DateSelectionModel: int getMinimalDaysInFirstWeek()>();

        if $i0 == $i1 goto label3;

        specialinvoke r0.<org.jdesktop.swingx.JXMonthView: void updateMinimalDaysOfFirstWeek()>();

     label3:
        $r9 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $i2 = virtualinvoke $r9.<java.util.Calendar: int getFirstDayOfWeek()>();

        $r10 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel model>;

        $i3 = interfaceinvoke $r10.<org.jdesktop.swingx.calendar.DateSelectionModel: int getFirstDayOfWeek()>();

        if $i2 == $i3 goto label4;

        specialinvoke r0.<org.jdesktop.swingx.JXMonthView: void updateFirstDayOfWeek()>();

     label4:
        return;
    }

    private void updateTimeZone()
    {
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r2;
        java.util.TimeZone $r1, $r3, $r8;
        java.util.Date $r7;
        java.util.Calendar $r4, $r5, $r6;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.util.TimeZone getTimeZone()>();

        $r2 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel model>;

        $r3 = interfaceinvoke $r2.<org.jdesktop.swingx.calendar.DateSelectionModel: java.util.TimeZone getTimeZone()>();

        $r4 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        virtualinvoke $r4.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r3);

        $r5 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar anchor>;

        virtualinvoke $r5.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r3);

        $r6 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar anchor>;

        $r7 = virtualinvoke $r6.<java.util.Calendar: java.util.Date getTime()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void setFirstDisplayedDay(java.util.Date)>($r7);

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void updateTodayFromCurrentTime()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void updateDatesAfterTimeZoneChange(java.util.TimeZone)>($r1);

        $r8 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.util.TimeZone getTimeZone()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("timeZone", $r1, $r8);

        return;
    }

    protected void updateDatesAfterTimeZoneChange(java.util.TimeZone)
    {
        org.jdesktop.swingx.JXMonthView r0;
        java.util.SortedSet $r1, $r4;
        org.jdesktop.swingx.calendar.DaySelectionModel $r2;
        java.util.TimeZone $r3, r5;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r5 := @parameter0: java.util.TimeZone;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.util.SortedSet getFlaggedDates()>();

        $r2 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DaySelectionModel flaggedDates>;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.util.TimeZone getTimeZone()>();

        virtualinvoke $r2.<org.jdesktop.swingx.calendar.DaySelectionModel: void setTimeZone(java.util.TimeZone)>($r3);

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.util.SortedSet getFlaggedDates()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("flaggedDates", $r1, $r4);

        return;
    }

    private void updateFirstDayOfWeek()
    {
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r1;
        java.util.Calendar $r2, $r3;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        i0 = r0.<org.jdesktop.swingx.JXMonthView: int firstDayOfWeek>;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        $i1 = interfaceinvoke $r1.<org.jdesktop.swingx.calendar.DateSelectionModel: int getFirstDayOfWeek()>();

        r0.<org.jdesktop.swingx.JXMonthView: int firstDayOfWeek> = $i1;

        $r2 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $i2 = r0.<org.jdesktop.swingx.JXMonthView: int firstDayOfWeek>;

        virtualinvoke $r2.<java.util.Calendar: void setFirstDayOfWeek(int)>($i2);

        $r3 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar anchor>;

        $i3 = r0.<org.jdesktop.swingx.JXMonthView: int firstDayOfWeek>;

        virtualinvoke $r3.<java.util.Calendar: void setFirstDayOfWeek(int)>($i3);

        $i4 = r0.<org.jdesktop.swingx.JXMonthView: int firstDayOfWeek>;

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,int,int)>("firstDayOfWeek", i0, $i4);

        return;
    }

    private void updateMinimalDaysOfFirstWeek()
    {
        java.util.Calendar $r2, $r4;
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r1, $r3;
        int $i0, $i1;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r2 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel model>;

        $i0 = interfaceinvoke $r1.<org.jdesktop.swingx.calendar.DateSelectionModel: int getMinimalDaysInFirstWeek()>();

        virtualinvoke $r2.<java.util.Calendar: void setMinimalDaysInFirstWeek(int)>($i0);

        $r4 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar anchor>;

        $r3 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel model>;

        $i1 = interfaceinvoke $r3.<org.jdesktop.swingx.calendar.DateSelectionModel: int getMinimalDaysInFirstWeek()>();

        virtualinvoke $r4.<java.util.Calendar: void setMinimalDaysInFirstWeek(int)>($i1);

        return;
    }

    public java.util.Date getLastDisplayedDay()
    {
        org.jdesktop.swingx.plaf.MonthViewUI $r1;
        org.jdesktop.swingx.JXMonthView r0;
        java.util.Date $r2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.plaf.MonthViewUI getUI()>();

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.plaf.MonthViewUI: java.util.Date getLastDisplayedDay()>();

        return $r2;
    }

    public java.util.Date getFirstDisplayedDay()
    {
        org.jdesktop.swingx.JXMonthView r0;
        java.util.Date $r1;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Date firstDisplayedDay>;

        return $r1;
    }

    public void setFirstDisplayedDay(java.util.Date)
    {
        org.jdesktop.swingx.JXMonthView r0;
        java.util.Date r1, $r3, $r6, $r9, $r10;
        java.util.Calendar $r2, $r4, $r5, $r7, $r8;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r1 := @parameter0: java.util.Date;

        $r2 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar anchor>;

        virtualinvoke $r2.<java.util.Calendar: void setTime(java.util.Date)>(r1);

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.util.Date getFirstDisplayedDay()>();

        $r5 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $r4 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar anchor>;

        $r6 = virtualinvoke $r4.<java.util.Calendar: java.util.Date getTime()>();

        virtualinvoke $r5.<java.util.Calendar: void setTime(java.util.Date)>($r6);

        $r7 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        staticinvoke <org.jdesktop.swingx.calendar.CalendarUtils: void startOfMonth(java.util.Calendar)>($r7);

        $r8 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $r9 = virtualinvoke $r8.<java.util.Calendar: java.util.Date getTime()>();

        r0.<org.jdesktop.swingx.JXMonthView: java.util.Date firstDisplayedDay> = $r9;

        $r10 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.util.Date getFirstDisplayedDay()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("firstDisplayedDay", $r3, $r10);

        return;
    }

    public void ensureDateVisible(java.util.Date)
    {
        org.jdesktop.swingx.JXMonthView r1;
        java.util.Date r0, $r2, $r3, $r10, $r14;
        java.util.Calendar $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        boolean $z0, $z1;

        r1 := @this: org.jdesktop.swingx.JXMonthView;

        r0 := @parameter0: java.util.Date;

        $r2 = r1.<org.jdesktop.swingx.JXMonthView: java.util.Date firstDisplayedDay>;

        $z0 = virtualinvoke r0.<java.util.Date: boolean before(java.util.Date)>($r2);

        if $z0 == 0 goto label1;

        virtualinvoke r1.<org.jdesktop.swingx.JXMonthView: void setFirstDisplayedDay(java.util.Date)>(r0);

        goto label2;

     label1:
        $r3 = virtualinvoke r1.<org.jdesktop.swingx.JXMonthView: java.util.Date getLastDisplayedDay()>();

        $z1 = virtualinvoke r0.<java.util.Date: boolean after(java.util.Date)>($r3);

        if $z1 == 0 goto label2;

        $r4 = r1.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        virtualinvoke $r4.<java.util.Calendar: void setTime(java.util.Date)>(r0);

        $r5 = r1.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $i0 = virtualinvoke $r5.<java.util.Calendar: int get(int)>(2);

        $r6 = r1.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $i1 = virtualinvoke $r6.<java.util.Calendar: int get(int)>(1);

        $r7 = r1.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        virtualinvoke $r7.<java.util.Calendar: void setTime(java.util.Date)>($r3);

        $r8 = r1.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $i2 = virtualinvoke $r8.<java.util.Calendar: int get(int)>(2);

        $r9 = r1.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $i3 = virtualinvoke $r9.<java.util.Calendar: int get(int)>(1);

        $i6 = $i0 - $i2;

        $i4 = $i1 - $i3;

        $i5 = $i4 * 12;

        i7 = $i6 + $i5;

        $r11 = r1.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $r10 = r1.<org.jdesktop.swingx.JXMonthView: java.util.Date firstDisplayedDay>;

        virtualinvoke $r11.<java.util.Calendar: void setTime(java.util.Date)>($r10);

        $r12 = r1.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        virtualinvoke $r12.<java.util.Calendar: void add(int,int)>(2, i7);

        $r13 = r1.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $r14 = virtualinvoke $r13.<java.util.Calendar: java.util.Date getTime()>();

        virtualinvoke r1.<org.jdesktop.swingx.JXMonthView: void setFirstDisplayedDay(java.util.Date)>($r14);

     label2:
        return;
    }

    public java.util.Date getDayAtLocation(int, int)
    {
        org.jdesktop.swingx.plaf.MonthViewUI $r1;
        org.jdesktop.swingx.JXMonthView r0;
        java.util.Date $r2;
        int i0, i1;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.plaf.MonthViewUI getUI()>();

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.plaf.MonthViewUI: java.util.Date getDayAtLocation(int,int)>(i0, i1);

        return $r2;
    }

    java.util.Date getCurrentDate()
    {
        long $l0;
        org.jdesktop.swingx.JXMonthView r1;
        java.util.Date $r0;

        r1 := @this: org.jdesktop.swingx.JXMonthView;

        $r0 = new java.util.Date;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r0.<java.util.Date: void <init>(long)>($l0);

        return $r0;
    }

    protected void updateTodayFromCurrentTime()
    {
        org.jdesktop.swingx.JXMonthView r0;
        java.util.Date $r1;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.util.Date getCurrentDate()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void setToday(java.util.Date)>($r1);

        return;
    }

    protected void incrementToday()
    {
        java.util.Calendar $r1, $r3, $r4;
        org.jdesktop.swingx.JXMonthView r0;
        java.util.Date $r2, $r5;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.util.Date getToday()>();

        virtualinvoke $r1.<java.util.Calendar: void setTime(java.util.Date)>($r2);

        $r3 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        virtualinvoke $r3.<java.util.Calendar: void add(int,int)>(5, 1);

        $r4 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $r5 = virtualinvoke $r4.<java.util.Calendar: java.util.Date getTime()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void setToday(java.util.Date)>($r5);

        return;
    }

    protected void setToday(java.util.Date)
    {
        org.jdesktop.swingx.JXMonthView r0;
        java.util.Date $r1, r2, $r3, $r4;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r2 := @parameter0: java.util.Date;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.util.Date getToday()>();

        $r3 = specialinvoke r0.<org.jdesktop.swingx.JXMonthView: java.util.Date startOfDay(java.util.Date)>(r2);

        r0.<org.jdesktop.swingx.JXMonthView: java.util.Date today> = $r3;

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.util.Date getToday()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("today", $r1, $r4);

        return;
    }

    public java.util.Date getToday()
    {
        org.jdesktop.swingx.JXMonthView r0;
        java.util.Date $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Date today>;

        if $r1 == null goto label1;

        $r2 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Date today>;

        $r3 = virtualinvoke $r2.<java.util.Date: java.lang.Object clone()>();

        $r4 = (java.util.Date) $r3;

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    private java.util.Date startOfDay(java.util.Date)
    {
        java.util.Calendar $r2;
        org.jdesktop.swingx.JXMonthView r0;
        java.util.Date r1, $r3;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r1 := @parameter0: java.util.Date;

        $r2 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $r3 = staticinvoke <org.jdesktop.swingx.calendar.CalendarUtils: java.util.Date startOfDay(java.util.Calendar,java.util.Date)>($r2, r1);

        return $r3;
    }

    public org.jdesktop.swingx.plaf.MonthViewUI getUI()
    {
        org.jdesktop.swingx.plaf.MonthViewUI $r2;
        javax.swing.plaf.ComponentUI $r1;
        org.jdesktop.swingx.JXMonthView r0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: javax.swing.plaf.ComponentUI ui>;

        $r2 = (org.jdesktop.swingx.plaf.MonthViewUI) $r1;

        return $r2;
    }

    public void setUI(org.jdesktop.swingx.plaf.MonthViewUI)
    {
        org.jdesktop.swingx.plaf.MonthViewUI r1;
        org.jdesktop.swingx.JXMonthView r0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r1 := @parameter0: org.jdesktop.swingx.plaf.MonthViewUI;

        specialinvoke r0.<javax.swing.JComponent: void setUI(javax.swing.plaf.ComponentUI)>(r1);

        return;
    }

    public void updateUI()
    {
        org.jdesktop.swingx.plaf.MonthViewUI $r2;
        javax.swing.plaf.ComponentUI $r1;
        org.jdesktop.swingx.JXMonthView r0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = staticinvoke <org.jdesktop.swingx.plaf.LookAndFeelAddons: javax.swing.plaf.ComponentUI getUI(javax.swing.JComponent,java.lang.Class)>(r0, class "Lorg/jdesktop/swingx/plaf/MonthViewUI;");

        $r2 = (org.jdesktop.swingx.plaf.MonthViewUI) $r1;

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void setUI(org.jdesktop.swingx.plaf.MonthViewUI)>($r2);

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void invalidate()>();

        return;
    }

    public java.lang.String getUIClassID()
    {
        org.jdesktop.swingx.JXMonthView r0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        return "MonthViewUI";
    }

    public org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()
    {
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r1;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel model>;

        return $r1;
    }

    public void setSelectionModel(org.jdesktop.swingx.calendar.DateSelectionModel)
    {
        org.jdesktop.swingx.JXMonthView r1;
        org.jdesktop.swingx.calendar.DateSelectionModel r0, $r2, $r7;
        org.jdesktop.swingx.event.DateSelectionListener $r3, $r6;
        java.util.Locale $r4, $r5, $r8;
        boolean $z0;

        r1 := @this: org.jdesktop.swingx.JXMonthView;

        r0 := @parameter0: org.jdesktop.swingx.calendar.DateSelectionModel;

        staticinvoke <org.jdesktop.swingx.util.Contract: java.lang.Object asNotNull(java.lang.Object,java.lang.String)>(r0, "date selection model must not be null");

        $r2 = virtualinvoke r1.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        $r3 = specialinvoke r1.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.event.DateSelectionListener getDateSelectionListener()>();

        interfaceinvoke r0.<org.jdesktop.swingx.calendar.DateSelectionModel: void removeDateSelectionListener(org.jdesktop.swingx.event.DateSelectionListener)>($r3);

        r1.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel model> = r0;

        specialinvoke r1.<org.jdesktop.swingx.JXMonthView: void installCalendar()>();

        $r4 = interfaceinvoke r0.<org.jdesktop.swingx.calendar.DateSelectionModel: java.util.Locale getLocale()>();

        $r5 = virtualinvoke r1.<org.jdesktop.swingx.JXMonthView: java.util.Locale getLocale()>();

        $z0 = virtualinvoke $r4.<java.util.Locale: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r8 = interfaceinvoke r0.<org.jdesktop.swingx.calendar.DateSelectionModel: java.util.Locale getLocale()>();

        specialinvoke r1.<javax.swing.JComponent: void setLocale(java.util.Locale)>($r8);

     label1:
        $r6 = specialinvoke r1.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.event.DateSelectionListener getDateSelectionListener()>();

        interfaceinvoke r0.<org.jdesktop.swingx.calendar.DateSelectionModel: void addDateSelectionListener(org.jdesktop.swingx.event.DateSelectionListener)>($r6);

        $r7 = virtualinvoke r1.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        virtualinvoke r1.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("selectionModel", $r2, $r7);

        return;
    }

    public void clearSelection()
    {
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r1;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        interfaceinvoke $r1.<org.jdesktop.swingx.calendar.DateSelectionModel: void clearSelection()>();

        return;
    }

    public boolean isSelectionEmpty()
    {
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        $z0 = interfaceinvoke $r1.<org.jdesktop.swingx.calendar.DateSelectionModel: boolean isSelectionEmpty()>();

        return $z0;
    }

    public java.util.SortedSet getSelection()
    {
        org.jdesktop.swingx.JXMonthView r0;
        java.util.SortedSet $r2;
        org.jdesktop.swingx.calendar.DateSelectionModel $r1;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        $r2 = interfaceinvoke $r1.<org.jdesktop.swingx.calendar.DateSelectionModel: java.util.SortedSet getSelection()>();

        return $r2;
    }

    public void addSelectionInterval(java.util.Date, java.util.Date)
    {
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r1;
        java.util.Date r2, r3;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r2 := @parameter0: java.util.Date;

        r3 := @parameter1: java.util.Date;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        interfaceinvoke $r1.<org.jdesktop.swingx.calendar.DateSelectionModel: void addSelectionInterval(java.util.Date,java.util.Date)>(r2, r3);

        return;
    }

    public void setSelectionInterval(java.util.Date, java.util.Date)
    {
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r1;
        java.util.Date r2, r3;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r2 := @parameter0: java.util.Date;

        r3 := @parameter1: java.util.Date;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        interfaceinvoke $r1.<org.jdesktop.swingx.calendar.DateSelectionModel: void setSelectionInterval(java.util.Date,java.util.Date)>(r2, r3);

        return;
    }

    public void removeSelectionInterval(java.util.Date, java.util.Date)
    {
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r1;
        java.util.Date r2, r3;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r2 := @parameter0: java.util.Date;

        r3 := @parameter1: java.util.Date;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        interfaceinvoke $r1.<org.jdesktop.swingx.calendar.DateSelectionModel: void removeSelectionInterval(java.util.Date,java.util.Date)>(r2, r3);

        return;
    }

    public org.jdesktop.swingx.calendar.DateSelectionModel$SelectionMode getSelectionMode()
    {
        org.jdesktop.swingx.calendar.DateSelectionModel$SelectionMode $r2;
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r1;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        $r2 = interfaceinvoke $r1.<org.jdesktop.swingx.calendar.DateSelectionModel: org.jdesktop.swingx.calendar.DateSelectionModel$SelectionMode getSelectionMode()>();

        return $r2;
    }

    public void setSelectionMode(org.jdesktop.swingx.calendar.DateSelectionModel$SelectionMode)
    {
        org.jdesktop.swingx.calendar.DateSelectionModel$SelectionMode r2;
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r1;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r2 := @parameter0: org.jdesktop.swingx.calendar.DateSelectionModel$SelectionMode;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        interfaceinvoke $r1.<org.jdesktop.swingx.calendar.DateSelectionModel: void setSelectionMode(org.jdesktop.swingx.calendar.DateSelectionModel$SelectionMode)>(r2);

        return;
    }

    public java.util.Date getFirstSelectionDate()
    {
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r1;
        java.util.Date $r2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        $r2 = interfaceinvoke $r1.<org.jdesktop.swingx.calendar.DateSelectionModel: java.util.Date getFirstSelectionDate()>();

        return $r2;
    }

    public java.util.Date getLastSelectionDate()
    {
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r1;
        java.util.Date $r2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        $r2 = interfaceinvoke $r1.<org.jdesktop.swingx.calendar.DateSelectionModel: java.util.Date getLastSelectionDate()>();

        return $r2;
    }

    public java.util.Date getSelectionDate()
    {
        org.jdesktop.swingx.JXMonthView r0;
        java.util.Date $r1;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.util.Date getFirstSelectionDate()>();

        return $r1;
    }

    public void setSelectionDate(java.util.Date)
    {
        org.jdesktop.swingx.JXMonthView r1;
        java.util.Date r0;

        r1 := @this: org.jdesktop.swingx.JXMonthView;

        r0 := @parameter0: java.util.Date;

        if r0 != null goto label1;

        virtualinvoke r1.<org.jdesktop.swingx.JXMonthView: void clearSelection()>();

        goto label2;

     label1:
        virtualinvoke r1.<org.jdesktop.swingx.JXMonthView: void setSelectionInterval(java.util.Date,java.util.Date)>(r0, r0);

     label2:
        return;
    }

    public boolean isSelected(java.util.Date)
    {
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r1;
        java.util.Date r2;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r2 := @parameter0: java.util.Date;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        $z0 = interfaceinvoke $r1.<org.jdesktop.swingx.calendar.DateSelectionModel: boolean isSelected(java.util.Date)>(r2);

        return $z0;
    }

    public void setLowerBound(java.util.Date)
    {
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r1;
        java.util.Date r2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r2 := @parameter0: java.util.Date;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        interfaceinvoke $r1.<org.jdesktop.swingx.calendar.DateSelectionModel: void setLowerBound(java.util.Date)>(r2);

        return;
    }

    public void setUpperBound(java.util.Date)
    {
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r1;
        java.util.Date r2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r2 := @parameter0: java.util.Date;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        interfaceinvoke $r1.<org.jdesktop.swingx.calendar.DateSelectionModel: void setUpperBound(java.util.Date)>(r2);

        return;
    }

    public java.util.Date getLowerBound()
    {
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r1;
        java.util.Date $r2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        $r2 = interfaceinvoke $r1.<org.jdesktop.swingx.calendar.DateSelectionModel: java.util.Date getLowerBound()>();

        return $r2;
    }

    public java.util.Date getUpperBound()
    {
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r1;
        java.util.Date $r2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        $r2 = interfaceinvoke $r1.<org.jdesktop.swingx.calendar.DateSelectionModel: java.util.Date getUpperBound()>();

        return $r2;
    }

    public boolean isUnselectableDate(java.util.Date)
    {
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r1;
        java.util.Date r2;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r2 := @parameter0: java.util.Date;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        $z0 = interfaceinvoke $r1.<org.jdesktop.swingx.calendar.DateSelectionModel: boolean isUnselectableDate(java.util.Date)>(r2);

        return $z0;
    }

    public transient void setUnselectableDates(java.util.Date[])
    {
        org.jdesktop.swingx.JXMonthView r2;
        org.jdesktop.swingx.calendar.DateSelectionModel $r3;
        java.util.Date r4;
        int i0, i1;
        java.util.Date[] r0;
        java.util.TreeSet $r1;

        r2 := @this: org.jdesktop.swingx.JXMonthView;

        r0 := @parameter0: java.util.Date[];

        staticinvoke <org.jdesktop.swingx.util.Contract: java.lang.Object asNotNull(java.lang.Object,java.lang.String)>(r0, "unselectable dates must not be null");

        $r1 = new java.util.TreeSet;

        specialinvoke $r1.<java.util.TreeSet: void <init>()>();

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r4 = r0[i1];

        interfaceinvoke $r1.<java.util.SortedSet: boolean add(java.lang.Object)>(r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke r2.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        interfaceinvoke $r3.<org.jdesktop.swingx.calendar.DateSelectionModel: void setUnselectableDates(java.util.SortedSet)>($r1);

        virtualinvoke r2.<org.jdesktop.swingx.JXMonthView: void repaint()>();

        return;
    }

    public boolean isFlaggedDate(java.util.Date)
    {
        org.jdesktop.swingx.JXMonthView r1;
        java.util.Date r0;
        org.jdesktop.swingx.calendar.DaySelectionModel $r2;
        boolean $z0;

        r1 := @this: org.jdesktop.swingx.JXMonthView;

        r0 := @parameter0: java.util.Date;

        if r0 != null goto label1;

        return 0;

     label1:
        $r2 = r1.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DaySelectionModel flaggedDates>;

        $z0 = virtualinvoke $r2.<org.jdesktop.swingx.calendar.DaySelectionModel: boolean isSelected(java.util.Date)>(r0);

        return $z0;
    }

    public transient void setFlaggedDates(java.util.Date[])
    {
        org.jdesktop.swingx.JXMonthView r0;
        java.util.SortedSet $r1, $r4;
        org.jdesktop.swingx.calendar.DaySelectionModel $r2, $r6;
        java.util.Date r5;
        int i0, i1;
        java.util.Date[] r3;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r3 := @parameter0: java.util.Date[];

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.util.SortedSet getFlaggedDates()>();

        $r2 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DaySelectionModel flaggedDates>;

        virtualinvoke $r2.<org.jdesktop.swingx.calendar.DaySelectionModel: void clearSelection()>();

        if r3 == null goto label2;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r5 = r3[i1];

        $r6 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DaySelectionModel flaggedDates>;

        virtualinvoke $r6.<org.jdesktop.swingx.calendar.DaySelectionModel: void addSelectionInterval(java.util.Date,java.util.Date)>(r5, r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.util.SortedSet getFlaggedDates()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("flaggedDates", $r1, $r4);

        return;
    }

    public transient void addFlaggedDates(java.util.Date[])
    {
        org.jdesktop.swingx.JXMonthView r0;
        java.util.SortedSet $r2, $r5;
        org.jdesktop.swingx.calendar.DaySelectionModel $r1, $r4, $r7;
        java.util.Date r6;
        int i0, i1;
        java.util.Date[] r3;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r3 := @parameter0: java.util.Date[];

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DaySelectionModel flaggedDates>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.calendar.DaySelectionModel: java.util.SortedSet getSelection()>();

        if r3 == null goto label2;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r6 = r3[i1];

        $r7 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DaySelectionModel flaggedDates>;

        virtualinvoke $r7.<org.jdesktop.swingx.calendar.DaySelectionModel: void addSelectionInterval(java.util.Date,java.util.Date)>(r6, r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DaySelectionModel flaggedDates>;

        $r5 = virtualinvoke $r4.<org.jdesktop.swingx.calendar.DaySelectionModel: java.util.SortedSet getSelection()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("flaggedDates", $r2, $r5);

        return;
    }

    public transient void removeFlaggedDates(java.util.Date[])
    {
        org.jdesktop.swingx.JXMonthView r0;
        java.util.SortedSet $r2, $r5;
        org.jdesktop.swingx.calendar.DaySelectionModel $r1, $r4, $r7;
        java.util.Date r6;
        int i0, i1;
        java.util.Date[] r3;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r3 := @parameter0: java.util.Date[];

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DaySelectionModel flaggedDates>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.calendar.DaySelectionModel: java.util.SortedSet getSelection()>();

        if r3 == null goto label2;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r6 = r3[i1];

        $r7 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DaySelectionModel flaggedDates>;

        virtualinvoke $r7.<org.jdesktop.swingx.calendar.DaySelectionModel: void removeSelectionInterval(java.util.Date,java.util.Date)>(r6, r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DaySelectionModel flaggedDates>;

        $r5 = virtualinvoke $r4.<org.jdesktop.swingx.calendar.DaySelectionModel: java.util.SortedSet getSelection()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("flaggedDates", $r2, $r5);

        return;
    }

    public void clearFlaggedDates()
    {
        org.jdesktop.swingx.JXMonthView r0;
        java.util.SortedSet $r2, $r5;
        org.jdesktop.swingx.calendar.DaySelectionModel $r1, $r3, $r4;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DaySelectionModel flaggedDates>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.calendar.DaySelectionModel: java.util.SortedSet getSelection()>();

        $r3 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DaySelectionModel flaggedDates>;

        virtualinvoke $r3.<org.jdesktop.swingx.calendar.DaySelectionModel: void clearSelection()>();

        $r4 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DaySelectionModel flaggedDates>;

        $r5 = virtualinvoke $r4.<org.jdesktop.swingx.calendar.DaySelectionModel: java.util.SortedSet getSelection()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("flaggedDates", $r2, $r5);

        return;
    }

    public java.util.SortedSet getFlaggedDates()
    {
        org.jdesktop.swingx.JXMonthView r0;
        java.util.SortedSet $r2;
        org.jdesktop.swingx.calendar.DaySelectionModel $r1;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DaySelectionModel flaggedDates>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.calendar.DaySelectionModel: java.util.SortedSet getSelection()>();

        return $r2;
    }

    public boolean hasFlaggedDates()
    {
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DaySelectionModel $r1;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DaySelectionModel flaggedDates>;

        $z0 = virtualinvoke $r1.<org.jdesktop.swingx.calendar.DaySelectionModel: boolean isSelectionEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void setShowingLeadingDays(boolean)
    {
        org.jdesktop.swingx.JXMonthView r0;
        boolean $z0, z1, $z2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: boolean isShowingLeadingDays()>();

        r0.<org.jdesktop.swingx.JXMonthView: boolean leadingDays> = z1;

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: boolean isShowingLeadingDays()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,boolean,boolean)>("showingLeadingDays", $z0, $z2);

        return;
    }

    public boolean isShowingLeadingDays()
    {
        org.jdesktop.swingx.JXMonthView r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $z0 = r0.<org.jdesktop.swingx.JXMonthView: boolean leadingDays>;

        return $z0;
    }

    public void setShowingTrailingDays(boolean)
    {
        org.jdesktop.swingx.JXMonthView r0;
        boolean $z0, z1, $z2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: boolean isShowingTrailingDays()>();

        r0.<org.jdesktop.swingx.JXMonthView: boolean trailingDays> = z1;

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: boolean isShowingTrailingDays()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,boolean,boolean)>("showingTrailingDays", $z0, $z2);

        return;
    }

    public boolean isShowingTrailingDays()
    {
        org.jdesktop.swingx.JXMonthView r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $z0 = r0.<org.jdesktop.swingx.JXMonthView: boolean trailingDays>;

        return $z0;
    }

    public boolean isTraversable()
    {
        org.jdesktop.swingx.JXMonthView r0;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: boolean isZoomable()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = r0.<org.jdesktop.swingx.JXMonthView: boolean traversable>;

        return $z1;
    }

    public void setTraversable(boolean)
    {
        org.jdesktop.swingx.JXMonthView r0;
        boolean $z0, z1, $z2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: boolean isTraversable()>();

        r0.<org.jdesktop.swingx.JXMonthView: boolean traversable> = z1;

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: boolean isTraversable()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,boolean,boolean)>("traversable", $z0, $z2);

        return;
    }

    public boolean isZoomable()
    {
        org.jdesktop.swingx.JXMonthView r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $z0 = r0.<org.jdesktop.swingx.JXMonthView: boolean zoomable>;

        return $z0;
    }

    public void setZoomable(boolean)
    {
        org.jdesktop.swingx.JXMonthView r0;
        boolean $z0, z1, $z2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: boolean isZoomable()>();

        r0.<org.jdesktop.swingx.JXMonthView: boolean zoomable> = z1;

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: boolean isZoomable()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,boolean,boolean)>("zoomable", $z0, $z2);

        return;
    }

    public boolean isShowingWeekNumber()
    {
        org.jdesktop.swingx.JXMonthView r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $z0 = r0.<org.jdesktop.swingx.JXMonthView: boolean showWeekNumber>;

        return $z0;
    }

    public void setShowingWeekNumber(boolean)
    {
        org.jdesktop.swingx.JXMonthView r0;
        boolean $z0, z1, $z2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: boolean isShowingWeekNumber()>();

        r0.<org.jdesktop.swingx.JXMonthView: boolean showWeekNumber> = z1;

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: boolean isShowingWeekNumber()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,boolean,boolean)>("showingWeekNumber", $z0, $z2);

        return;
    }

    public void setDaysOfTheWeek(java.lang.String[])
    {
        org.jdesktop.swingx.JXMonthView r1;
        int $i0;
        java.lang.String[] r0, $r2;
        java.lang.IllegalArgumentException $r3;

        r1 := @this: org.jdesktop.swingx.JXMonthView;

        r0 := @parameter0: java.lang.String[];

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 == 7 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array of days is not of length 7 as expected.");

        throw $r3;

     label1:
        $r2 = virtualinvoke r1.<org.jdesktop.swingx.JXMonthView: java.lang.String[] getDaysOfTheWeek()>();

        r1.<org.jdesktop.swingx.JXMonthView: java.lang.String[] _daysOfTheWeek> = r0;

        virtualinvoke r1.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("daysOfTheWeek", $r2, r0);

        return;
    }

    public java.lang.String[] getDaysOfTheWeek()
    {
        org.jdesktop.swingx.plaf.MonthViewUI $r2;
        org.jdesktop.swingx.JXMonthView r0;
        java.lang.String[] $r1, $r3, r4, $r5;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: java.lang.String[] _daysOfTheWeek>;

        if $r1 == null goto label1;

        r4 = newarray (java.lang.String)[7];

        $r5 = r0.<org.jdesktop.swingx.JXMonthView: java.lang.String[] _daysOfTheWeek>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r4, 0, 7);

        return r4;

     label1:
        $r2 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.plaf.MonthViewUI getUI()>();

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.plaf.MonthViewUI: java.lang.String[] getDaysOfTheWeek()>();

        return $r3;
    }

    public java.lang.String getDayOfTheWeek(int)
    {
        org.jdesktop.swingx.JXMonthView r0;
        int i0, $i1;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.lang.String[] getDaysOfTheWeek()>();

        $i1 = i0 - 1;

        $r2 = $r1[$i1];

        return $r2;
    }

    public int getBoxPaddingX()
    {
        int $i0;
        org.jdesktop.swingx.JXMonthView r0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $i0 = r0.<org.jdesktop.swingx.JXMonthView: int boxPaddingX>;

        return $i0;
    }

    public void setBoxPaddingX(int)
    {
        org.jdesktop.swingx.JXMonthView r0;
        int $i0, i1, $i2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: int getBoxPaddingX()>();

        r0.<org.jdesktop.swingx.JXMonthView: int boxPaddingX> = i1;

        $i2 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: int getBoxPaddingX()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,int,int)>("boxPaddingX", $i0, $i2);

        return;
    }

    public int getBoxPaddingY()
    {
        int $i0;
        org.jdesktop.swingx.JXMonthView r0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $i0 = r0.<org.jdesktop.swingx.JXMonthView: int boxPaddingY>;

        return $i0;
    }

    public void setBoxPaddingY(int)
    {
        org.jdesktop.swingx.JXMonthView r0;
        int $i0, i1, $i2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: int getBoxPaddingY()>();

        r0.<org.jdesktop.swingx.JXMonthView: int boxPaddingY> = i1;

        $i2 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: int getBoxPaddingY()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,int,int)>("boxPaddingY", $i0, $i2);

        return;
    }

    public java.awt.Color getSelectionBackground()
    {
        java.awt.Color $r1;
        org.jdesktop.swingx.JXMonthView r0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color selectedBackground>;

        return $r1;
    }

    public void setSelectionBackground(java.awt.Color)
    {
        java.awt.Color $r1, r2, $r3;
        org.jdesktop.swingx.JXMonthView r0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r2 := @parameter0: java.awt.Color;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color getSelectionBackground()>();

        r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color selectedBackground> = r2;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color getSelectionBackground()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("selectionBackground", $r1, $r3);

        return;
    }

    public java.awt.Color getSelectionForeground()
    {
        java.awt.Color $r1;
        org.jdesktop.swingx.JXMonthView r0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color selectedForeground>;

        return $r1;
    }

    public void setSelectionForeground(java.awt.Color)
    {
        java.awt.Color $r1, r2, $r3;
        org.jdesktop.swingx.JXMonthView r0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r2 := @parameter0: java.awt.Color;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color getSelectionForeground()>();

        r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color selectedForeground> = r2;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color getSelectionForeground()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("selectionForeground", $r1, $r3);

        return;
    }

    public java.awt.Color getTodayBackground()
    {
        java.awt.Color $r1;
        org.jdesktop.swingx.JXMonthView r0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color todayBackgroundColor>;

        return $r1;
    }

    public void setTodayBackground(java.awt.Color)
    {
        java.awt.Color $r1, r2, $r3;
        org.jdesktop.swingx.JXMonthView r0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r2 := @parameter0: java.awt.Color;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color getTodayBackground()>();

        r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color todayBackgroundColor> = r2;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color getTodayBackground()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("todayBackground", $r1, $r3);

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void repaint()>();

        return;
    }

    public java.awt.Color getMonthStringBackground()
    {
        java.awt.Color $r1;
        org.jdesktop.swingx.JXMonthView r0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color monthStringBackground>;

        return $r1;
    }

    public void setMonthStringBackground(java.awt.Color)
    {
        java.awt.Color $r1, r2, $r3;
        org.jdesktop.swingx.JXMonthView r0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r2 := @parameter0: java.awt.Color;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color getMonthStringBackground()>();

        r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color monthStringBackground> = r2;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color getMonthStringBackground()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("monthStringBackground", $r1, $r3);

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void repaint()>();

        return;
    }

    public java.awt.Color getMonthStringForeground()
    {
        java.awt.Color $r1;
        org.jdesktop.swingx.JXMonthView r0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color monthStringForeground>;

        return $r1;
    }

    public void setMonthStringForeground(java.awt.Color)
    {
        java.awt.Color $r1, r2, $r3;
        org.jdesktop.swingx.JXMonthView r0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r2 := @parameter0: java.awt.Color;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color getMonthStringForeground()>();

        r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color monthStringForeground> = r2;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color getMonthStringForeground()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("monthStringForeground", $r1, $r3);

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void repaint()>();

        return;
    }

    public void setDaysOfTheWeekForeground(java.awt.Color)
    {
        java.awt.Color $r1, r2, $r3;
        org.jdesktop.swingx.JXMonthView r0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r2 := @parameter0: java.awt.Color;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color getDaysOfTheWeekForeground()>();

        r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color daysOfTheWeekForeground> = r2;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color getDaysOfTheWeekForeground()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("daysOfTheWeekForeground", $r1, $r3);

        return;
    }

    public java.awt.Color getDaysOfTheWeekForeground()
    {
        java.awt.Color $r1;
        org.jdesktop.swingx.JXMonthView r0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color daysOfTheWeekForeground>;

        return $r1;
    }

    public void setDayForeground(int, java.awt.Color)
    {
        java.awt.Color r8;
        org.jdesktop.swingx.JXMonthView r5;
        java.lang.IllegalArgumentException $r0;
        java.lang.Integer $r7;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        java.util.Hashtable $r6;

        r5 := @this: org.jdesktop.swingx.JXMonthView;

        i0 := @parameter0: int;

        r8 := @parameter1: java.awt.Color;

        if i0 < 1 goto label1;

        if i0 <= 7 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dayOfWeek must be in [Calendar.SUNDAY ... Calendar.SATURDAY] but was ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label2:
        $r6 = r5.<org.jdesktop.swingx.JXMonthView: java.util.Hashtable dayToColorTable>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r6.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r8);

        virtualinvoke r5.<org.jdesktop.swingx.JXMonthView: void repaint()>();

        return;
    }

    public java.awt.Color getDayForeground(int)
    {
        java.awt.Color r4;
        org.jdesktop.swingx.JXMonthView r0;
        int i0;
        java.lang.Object $r3;
        java.lang.Integer $r2;
        java.util.Hashtable $r1;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        i0 := @parameter0: int;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Hashtable dayToColorTable>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (java.awt.Color) $r3;

        if r4 != null goto label1;

        r4 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color getForeground()>();

     label1:
        return r4;
    }

    public java.awt.Color getPerDayOfWeekForeground(int)
    {
        java.awt.Color $r4;
        org.jdesktop.swingx.JXMonthView r0;
        int i0;
        java.lang.Object $r3;
        java.lang.Integer $r2;
        java.util.Hashtable $r1;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        i0 := @parameter0: int;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Hashtable dayToColorTable>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (java.awt.Color) $r3;

        return $r4;
    }

    public void setFlaggedDayForeground(java.awt.Color)
    {
        java.awt.Color $r1, r2, $r3;
        org.jdesktop.swingx.JXMonthView r0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r2 := @parameter0: java.awt.Color;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color getFlaggedDayForeground()>();

        r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color flaggedDayForeground> = r2;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color getFlaggedDayForeground()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("flaggedDayForeground", $r1, $r3);

        return;
    }

    public java.awt.Color getFlaggedDayForeground()
    {
        java.awt.Color $r1;
        org.jdesktop.swingx.JXMonthView r0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: java.awt.Color flaggedDayForeground>;

        return $r1;
    }

    public java.awt.Insets getMonthStringInsets()
    {
        java.awt.Insets $r1, $r3;
        org.jdesktop.swingx.JXMonthView r0;
        java.lang.Object $r2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: java.awt.Insets _monthStringInsets>;

        $r2 = virtualinvoke $r1.<java.awt.Insets: java.lang.Object clone()>();

        $r3 = (java.awt.Insets) $r2;

        return $r3;
    }

    public void setMonthStringInsets(java.awt.Insets)
    {
        java.awt.Insets $r1, r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        org.jdesktop.swingx.JXMonthView r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r2 := @parameter0: java.awt.Insets;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.awt.Insets getMonthStringInsets()>();

        if r2 != null goto label1;

        $r8 = r0.<org.jdesktop.swingx.JXMonthView: java.awt.Insets _monthStringInsets>;

        $r8.<java.awt.Insets: int top> = 0;

        $r9 = r0.<org.jdesktop.swingx.JXMonthView: java.awt.Insets _monthStringInsets>;

        $r9.<java.awt.Insets: int left> = 0;

        $r10 = r0.<org.jdesktop.swingx.JXMonthView: java.awt.Insets _monthStringInsets>;

        $r10.<java.awt.Insets: int bottom> = 0;

        $r11 = r0.<org.jdesktop.swingx.JXMonthView: java.awt.Insets _monthStringInsets>;

        $r11.<java.awt.Insets: int right> = 0;

        goto label2;

     label1:
        $r3 = r0.<org.jdesktop.swingx.JXMonthView: java.awt.Insets _monthStringInsets>;

        $i0 = r2.<java.awt.Insets: int top>;

        $r3.<java.awt.Insets: int top> = $i0;

        $r4 = r0.<org.jdesktop.swingx.JXMonthView: java.awt.Insets _monthStringInsets>;

        $i1 = r2.<java.awt.Insets: int left>;

        $r4.<java.awt.Insets: int left> = $i1;

        $r5 = r0.<org.jdesktop.swingx.JXMonthView: java.awt.Insets _monthStringInsets>;

        $i2 = r2.<java.awt.Insets: int bottom>;

        $r5.<java.awt.Insets: int bottom> = $i2;

        $r6 = r0.<org.jdesktop.swingx.JXMonthView: java.awt.Insets _monthStringInsets>;

        $i3 = r2.<java.awt.Insets: int right>;

        $r6.<java.awt.Insets: int right> = $i3;

     label2:
        $r7 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.awt.Insets getMonthStringInsets()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("monthStringInsets", $r1, $r7);

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void repaint()>();

        return;
    }

    public int getPreferredColumnCount()
    {
        int $i0;
        org.jdesktop.swingx.JXMonthView r0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $i0 = r0.<org.jdesktop.swingx.JXMonthView: int minCalCols>;

        return $i0;
    }

    public void setPreferredColumnCount(int)
    {
        org.jdesktop.swingx.JXMonthView r0;
        int i0, $i1, $i2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        return;

     label1:
        $i1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: int getPreferredColumnCount()>();

        r0.<org.jdesktop.swingx.JXMonthView: int minCalCols> = i0;

        $i2 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: int getPreferredColumnCount()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,int,int)>("preferredColumnCount", $i1, $i2);

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void revalidate()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void repaint()>();

        return;
    }

    public int getPreferredRowCount()
    {
        int $i0;
        org.jdesktop.swingx.JXMonthView r0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $i0 = r0.<org.jdesktop.swingx.JXMonthView: int minCalRows>;

        return $i0;
    }

    public void setPreferredRowCount(int)
    {
        org.jdesktop.swingx.JXMonthView r0;
        int i0, $i1, $i2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        return;

     label1:
        $i1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: int getPreferredRowCount()>();

        r0.<org.jdesktop.swingx.JXMonthView: int minCalRows> = i0;

        $i2 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: int getPreferredRowCount()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,int,int)>("preferredRowCount", $i1, $i2);

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void revalidate()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void repaint()>();

        return;
    }

    public void removeNotify()
    {
        org.jdesktop.swingx.JXMonthView r0;
        javax.swing.Timer $r1, $r2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: javax.swing.Timer todayTimer>;

        if $r1 == null goto label1;

        $r2 = r0.<org.jdesktop.swingx.JXMonthView: javax.swing.Timer todayTimer>;

        virtualinvoke $r2.<javax.swing.Timer: void stop()>();

     label1:
        specialinvoke r0.<javax.swing.JComponent: void removeNotify()>();

        return;
    }

    public void addNotify()
    {
        org.jdesktop.swingx.JXMonthView r0;
        java.util.Date $r3;
        java.util.Calendar $r2, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        javax.swing.Timer $r1, $r7, $r8, $r9;
        org.jdesktop.swingx.JXMonthView$2 $r10;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        specialinvoke r0.<javax.swing.JComponent: void addNotify()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void updateTodayFromCurrentTime()>();

        $r1 = r0.<org.jdesktop.swingx.JXMonthView: javax.swing.Timer todayTimer>;

        if $r1 != null goto label1;

        $r9 = new javax.swing.Timer;

        $r10 = new org.jdesktop.swingx.JXMonthView$2;

        specialinvoke $r10.<org.jdesktop.swingx.JXMonthView$2: void <init>(org.jdesktop.swingx.JXMonthView)>(r0);

        specialinvoke $r9.<javax.swing.Timer: void <init>(int,java.awt.event.ActionListener)>(86400000, $r10);

        r0.<org.jdesktop.swingx.JXMonthView: javax.swing.Timer todayTimer> = $r9;

     label1:
        $r2 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.util.Date getCurrentDate()>();

        virtualinvoke $r2.<java.util.Calendar: void setTime(java.util.Date)>($r3);

        $r4 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $i0 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(11);

        $i1 = $i0 * 3600;

        $i2 = 86400 - $i1;

        $r5 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $i3 = virtualinvoke $r5.<java.util.Calendar: int get(int)>(12);

        $i4 = $i3 * 60;

        $i5 = $i2 - $i4;

        $r6 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $i6 = virtualinvoke $r6.<java.util.Calendar: int get(int)>(13);

        $i8 = $i5 - $i6;

        $r7 = r0.<org.jdesktop.swingx.JXMonthView: javax.swing.Timer todayTimer>;

        $i7 = $i8 * 1000;

        virtualinvoke $r7.<javax.swing.Timer: void setInitialDelay(int)>($i7);

        $r8 = r0.<org.jdesktop.swingx.JXMonthView: javax.swing.Timer todayTimer>;

        virtualinvoke $r8.<javax.swing.Timer: void start()>();

        return;
    }

    public void commitSelection()
    {
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r1;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        interfaceinvoke $r1.<org.jdesktop.swingx.calendar.DateSelectionModel: void setAdjusting(boolean)>(0);

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void fireActionPerformed(java.lang.String)>("monthViewCommit");

        return;
    }

    public void cancelSelection()
    {
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.calendar.DateSelectionModel $r1;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        interfaceinvoke $r1.<org.jdesktop.swingx.calendar.DateSelectionModel: void setAdjusting(boolean)>(0);

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void fireActionPerformed(java.lang.String)>("monthViewCancel");

        return;
    }

    public void setComponentInputMapEnabled(boolean)
    {
        org.jdesktop.swingx.JXMonthView r0;
        boolean $z0, z1, $z2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: boolean isComponentInputMapEnabled()>();

        r0.<org.jdesktop.swingx.JXMonthView: boolean componentInputMapEnabled> = z1;

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: boolean isComponentInputMapEnabled()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void firePropertyChange(java.lang.String,boolean,boolean)>("componentInputMapEnabled", $z0, $z2);

        return;
    }

    public boolean isComponentInputMapEnabled()
    {
        org.jdesktop.swingx.JXMonthView r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        $z0 = r0.<org.jdesktop.swingx.JXMonthView: boolean componentInputMapEnabled>;

        return $z0;
    }

    public void addActionListener(java.awt.event.ActionListener)
    {
        java.awt.event.ActionListener r1;
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.event.EventListenerMap $r2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r1 := @parameter0: java.awt.event.ActionListener;

        $r2 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.event.EventListenerMap listenerMap>;

        virtualinvoke $r2.<org.jdesktop.swingx.event.EventListenerMap: void add(java.lang.Class,java.util.EventListener)>(class "Ljava/awt/event/ActionListener;", r1);

        return;
    }

    public void removeActionListener(java.awt.event.ActionListener)
    {
        java.awt.event.ActionListener r1;
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.event.EventListenerMap $r2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r1 := @parameter0: java.awt.event.ActionListener;

        $r2 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.event.EventListenerMap listenerMap>;

        virtualinvoke $r2.<org.jdesktop.swingx.event.EventListenerMap: void remove(java.lang.Class,java.util.EventListener)>(class "Ljava/awt/event/ActionListener;", r1);

        return;
    }

    public java.util.EventListener[] getListeners(java.lang.Class)
    {
        java.util.EventListener[] $r5, r7, r8;
        java.lang.Object[] $r6;
        org.jdesktop.swingx.JXMonthView r0;
        org.jdesktop.swingx.event.EventListenerMap $r2;
        java.util.List $r3;
        int $i0;
        java.lang.Class r1;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.event.EventListenerMap listenerMap>;

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.event.EventListenerMap: java.util.List getListeners(java.lang.Class)>(r1);

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r1, $i0);

        $r5 = (java.util.EventListener[]) $r4;

        r7 = (java.util.EventListener[]) $r5;

        $r6 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r7);

        r8 = (java.util.EventListener[]) $r6;

        goto label2;

     label1:
        r8 = specialinvoke r0.<javax.swing.JComponent: java.util.EventListener[] getListeners(java.lang.Class)>(r1);

     label2:
        return r8;
    }

    protected void fireActionPerformed(java.lang.String)
    {
        java.util.EventListener[] $r1;
        java.awt.event.ActionListener r3;
        org.jdesktop.swingx.JXMonthView r0;
        java.awt.event.ActionEvent $r4, r6;
        int i0, i1;
        java.lang.String r5;
        java.awt.event.ActionListener[] r2;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r5 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: java.util.EventListener[] getListeners(java.lang.Class)>(class "Ljava/awt/event/ActionListener;");

        r2 = (java.awt.event.ActionListener[]) $r1;

        r6 = null;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        if r6 != null goto label2;

        $r4 = new java.awt.event.ActionEvent;

        specialinvoke $r4.<java.awt.event.ActionEvent: void <init>(java.lang.Object,int,java.lang.String)>(r0, 1001, r5);

        r6 = $r4;

     label2:
        interfaceinvoke r3.<java.awt.event.ActionListener: void actionPerformed(java.awt.event.ActionEvent)>(r6);

        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    protected void cleanupWeekSelectionDates(java.util.Date, java.util.Date)
    {
        org.jdesktop.swingx.JXMonthView r0;
        java.util.Date r1, r4, $r9, $r14;
        long $l0, $l1;
        java.util.Calendar $r2, $r3, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r15;
        byte $b2;
        int $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12, $i13;

        r0 := @this: org.jdesktop.swingx.JXMonthView;

        r1 := @parameter0: java.util.Date;

        r4 := @parameter1: java.util.Date;

        i9 = 1;

        $r2 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        virtualinvoke $r2.<java.util.Calendar: void setTime(java.util.Date)>(r1);

     label1:
        $r3 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $l0 = virtualinvoke $r3.<java.util.Calendar: long getTimeInMillis()>();

        $l1 = virtualinvoke r4.<java.util.Date: long getTime()>();

        $b2 = $l0 cmp $l1;

        $i13 = (int) $b2;

        if $i13 >= 0 goto label2;

        $r15 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        virtualinvoke $r15.<java.util.Calendar: void add(int,int)>(5, 1);

        i9 = i9 + 1;

        goto label1;

     label2:
        if i9 <= 7 goto label6;

        $r5 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        virtualinvoke $r5.<java.util.Calendar: void setTime(java.util.Date)>(r1);

        $r6 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $i3 = virtualinvoke $r6.<java.util.Calendar: int get(int)>(7);

        $i4 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: int getFirstDayOfWeek()>();

        i10 = $i3 - $i4;

        if i10 >= 0 goto label3;

        i10 = i10 + 7;

     label3:
        $r7 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $i5 = neg i10;

        virtualinvoke $r7.<java.util.Calendar: void add(int,int)>(5, $i5);

        $r8 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $r9 = virtualinvoke $r8.<java.util.Calendar: java.util.Date getTime()>();

        r0.<org.jdesktop.swingx.JXMonthView: java.util.Date modifiedStartDate> = $r9;

        $r10 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        virtualinvoke $r10.<java.util.Calendar: void setTime(java.util.Date)>(r4);

        $r11 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $i6 = virtualinvoke $r11.<java.util.Calendar: int get(int)>(7);

        $i8 = $i4 - 1;

        i11 = $i8;

        if $i8 != 0 goto label4;

        i11 = 7;

     label4:
        $i7 = i11 - $i6;

        i12 = $i7;

        if $i7 >= 0 goto label5;

        i12 = $i7 + 7;

     label5:
        $r12 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        virtualinvoke $r12.<java.util.Calendar: void add(int,int)>(5, i12);

        $r13 = r0.<org.jdesktop.swingx.JXMonthView: java.util.Calendar cal>;

        $r14 = virtualinvoke $r13.<java.util.Calendar: java.util.Date getTime()>();

        r0.<org.jdesktop.swingx.JXMonthView: java.util.Date modifiedEndDate> = $r14;

     label6:
        return;
    }

    static void access$000(org.jdesktop.swingx.JXMonthView)
    {
        org.jdesktop.swingx.JXMonthView r0;

        r0 := @parameter0: org.jdesktop.swingx.JXMonthView;

        specialinvoke r0.<org.jdesktop.swingx.JXMonthView: void updateCalendar()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;
        org.jdesktop.swingx.plaf.MonthViewAddon $r3;

        <org.jdesktop.swingx.JXMonthView: int MONTHS_IN_YEAR> = 12;

        <org.jdesktop.swingx.JXMonthView: int DAYS_IN_WEEK> = 7;

        <org.jdesktop.swingx.JXMonthView: java.lang.String uiClassID> = "MonthViewUI";

        <org.jdesktop.swingx.JXMonthView: java.lang.String FLAGGED_DATES> = "flaggedDates";

        <org.jdesktop.swingx.JXMonthView: java.lang.String TRAVERSABLE> = "traversable";

        <org.jdesktop.swingx.JXMonthView: java.lang.String SELECTION_MODEL> = "selectionModel";

        <org.jdesktop.swingx.JXMonthView: java.lang.String DAYS_OF_THE_WEEK> = "daysOfTheWeek";

        <org.jdesktop.swingx.JXMonthView: java.lang.String BOX_PADDING_Y> = "boxPaddingY";

        <org.jdesktop.swingx.JXMonthView: java.lang.String BOX_PADDING_X> = "boxPaddingX";

        <org.jdesktop.swingx.JXMonthView: java.lang.String CANCEL_KEY> = "monthViewCancel";

        <org.jdesktop.swingx.JXMonthView: java.lang.String COMMIT_KEY> = "monthViewCommit";

        $r0 = class "Lorg/jdesktop/swingx/JXMonthView;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <org.jdesktop.swingx.JXMonthView: java.util.logging.Logger LOG> = $r2;

        $r3 = new org.jdesktop.swingx.plaf.MonthViewAddon;

        specialinvoke $r3.<org.jdesktop.swingx.plaf.MonthViewAddon: void <init>()>();

        staticinvoke <org.jdesktop.swingx.plaf.LookAndFeelAddons: void contribute(org.jdesktop.swingx.plaf.ComponentAddon)>($r3);

        return;
    }
}
