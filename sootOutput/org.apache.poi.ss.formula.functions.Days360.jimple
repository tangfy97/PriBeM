public class org.apache.poi.ss.formula.functions.Days360 extends org.apache.poi.ss.formula.functions.Var2or3ArgFunction
{

    public void <init>()
    {
        org.apache.poi.ss.formula.functions.Days360 r0;

        r0 := @this: org.apache.poi.ss.formula.functions.Days360;

        specialinvoke r0.<org.apache.poi.ss.formula.functions.Var2or3ArgFunction: void <init>()>();

        return;
    }

    public org.apache.poi.ss.formula.eval.ValueEval evaluate(int, int, org.apache.poi.ss.formula.eval.ValueEval, org.apache.poi.ss.formula.eval.ValueEval)
    {
        org.apache.poi.ss.formula.eval.ErrorEval $r4;
        org.apache.poi.ss.formula.eval.ValueEval r0, r1;
        org.apache.poi.ss.formula.eval.NumberEval $r2;
        int i0, i1;
        org.apache.poi.ss.formula.functions.Days360 r5;
        org.apache.poi.ss.formula.eval.EvaluationException $r3;
        double $d0, $d1, $d2;

        r5 := @this: org.apache.poi.ss.formula.functions.Days360;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: org.apache.poi.ss.formula.eval.ValueEval;

        r1 := @parameter3: org.apache.poi.ss.formula.eval.ValueEval;

     label1:
        $d0 = staticinvoke <org.apache.poi.ss.formula.functions.NumericFunction: double singleOperandEvaluate(org.apache.poi.ss.formula.eval.ValueEval,int,int)>(r0, i0, i1);

        $d1 = staticinvoke <org.apache.poi.ss.formula.functions.NumericFunction: double singleOperandEvaluate(org.apache.poi.ss.formula.eval.ValueEval,int,int)>(r1, i0, i1);

        $d2 = staticinvoke <org.apache.poi.ss.formula.functions.Days360: double evaluate(double,double,boolean)>($d0, $d1, 0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<org.apache.poi.ss.formula.eval.EvaluationException: org.apache.poi.ss.formula.eval.ErrorEval getErrorEval()>();

        return $r4;

     label4:
        $r2 = new org.apache.poi.ss.formula.eval.NumberEval;

        specialinvoke $r2.<org.apache.poi.ss.formula.eval.NumberEval: void <init>(double)>($d2);

        return $r2;

        catch org.apache.poi.ss.formula.eval.EvaluationException from label1 to label2 with label3;
    }

    public org.apache.poi.ss.formula.eval.ValueEval evaluate(int, int, org.apache.poi.ss.formula.eval.ValueEval, org.apache.poi.ss.formula.eval.ValueEval, org.apache.poi.ss.formula.eval.ValueEval)
    {
        org.apache.poi.ss.formula.eval.ErrorEval $r7;
        org.apache.poi.ss.formula.eval.ValueEval r0, r1, r2, $r3;
        org.apache.poi.ss.formula.eval.NumberEval $r5;
        int i0, i1;
        org.apache.poi.ss.formula.functions.Days360 r8;
        java.lang.Boolean $r4;
        org.apache.poi.ss.formula.eval.EvaluationException $r6;
        double $d0, $d1, $d2;
        boolean $z0;

        r8 := @this: org.apache.poi.ss.formula.functions.Days360;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: org.apache.poi.ss.formula.eval.ValueEval;

        r1 := @parameter3: org.apache.poi.ss.formula.eval.ValueEval;

        r2 := @parameter4: org.apache.poi.ss.formula.eval.ValueEval;

     label1:
        $d0 = staticinvoke <org.apache.poi.ss.formula.functions.NumericFunction: double singleOperandEvaluate(org.apache.poi.ss.formula.eval.ValueEval,int,int)>(r0, i0, i1);

        $d1 = staticinvoke <org.apache.poi.ss.formula.functions.NumericFunction: double singleOperandEvaluate(org.apache.poi.ss.formula.eval.ValueEval,int,int)>(r1, i0, i1);

        $r3 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: org.apache.poi.ss.formula.eval.ValueEval getSingleValue(org.apache.poi.ss.formula.eval.ValueEval,int,int)>(r2, i0, i1);

        $r4 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: java.lang.Boolean coerceValueToBoolean(org.apache.poi.ss.formula.eval.ValueEval,boolean)>($r3, 0);

        if $r4 != null goto label2;

        $z0 = 0;

        goto label3;

     label2:
        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

     label3:
        $d2 = staticinvoke <org.apache.poi.ss.formula.functions.Days360: double evaluate(double,double,boolean)>($d0, $d1, $z0);

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<org.apache.poi.ss.formula.eval.EvaluationException: org.apache.poi.ss.formula.eval.ErrorEval getErrorEval()>();

        return $r7;

     label6:
        $r5 = new org.apache.poi.ss.formula.eval.NumberEval;

        specialinvoke $r5.<org.apache.poi.ss.formula.eval.NumberEval: void <init>(double)>($d2);

        return $r5;

        catch org.apache.poi.ss.formula.eval.EvaluationException from label1 to label4 with label5;
    }

    private static double evaluate(double, double, boolean)
    {
        long l4, l14, $l15;
        java.util.Calendar $r0, $r1;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        double d0, d1, $d2;
        boolean z0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        z0 := @parameter2: boolean;

        $r0 = staticinvoke <org.apache.poi.ss.formula.functions.Days360: java.util.Calendar getStartingDate(double)>(d0);

        $r1 = staticinvoke <org.apache.poi.ss.formula.functions.Days360: java.util.Calendar getEndingDateAccordingToStartingDate(double,java.util.Calendar)>(d1, $r0);

        $i0 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(2);

        $i1 = $i0 * 30;

        $i2 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(5);

        $i3 = $i1 + $i2;

        l4 = (long) $i3;

        $i5 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(1);

        $i6 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(1);

        $i7 = $i5 - $i6;

        $i8 = $i7 * 360;

        $i9 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(2);

        $i10 = $i9 * 30;

        $i11 = $i8 + $i10;

        $i12 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(5);

        $i13 = $i11 + $i12;

        l14 = (long) $i13;

        $l15 = l14 - l4;

        $d2 = (double) $l15;

        return $d2;
    }

    private static java.util.Calendar getDate(double)
    {
        java.util.GregorianCalendar $r0;
        java.util.Date $r1;
        double d0;

        d0 := @parameter0: double;

        $r0 = new java.util.GregorianCalendar;

        specialinvoke $r0.<java.util.GregorianCalendar: void <init>()>();

        $r1 = staticinvoke <org.apache.poi.ss.usermodel.DateUtil: java.util.Date getJavaDate(double,boolean)>(d0, 0);

        virtualinvoke $r0.<java.util.Calendar: void setTime(java.util.Date)>($r1);

        return $r0;
    }

    private static java.util.Calendar getStartingDate(double)
    {
        java.util.Calendar $r0;
        double d0;
        boolean $z0;

        d0 := @parameter0: double;

        $r0 = staticinvoke <org.apache.poi.ss.formula.functions.Days360: java.util.Calendar getDate(double)>(d0);

        $z0 = staticinvoke <org.apache.poi.ss.formula.functions.Days360: boolean isLastDayOfMonth(java.util.Calendar)>($r0);

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(5, 30);

     label1:
        return $r0;
    }

    private static java.util.Calendar getEndingDateAccordingToStartingDate(double, java.util.Calendar)
    {
        java.util.Calendar $r0, r2, r3;
        java.util.Date $r1;
        int $i0;
        double d0;
        boolean $z0;

        d0 := @parameter0: double;

        r2 := @parameter1: java.util.Calendar;

        $r0 = staticinvoke <org.apache.poi.ss.formula.functions.Days360: java.util.Calendar getDate(double)>(d0);

        r3 = $r0;

        $r1 = staticinvoke <org.apache.poi.ss.usermodel.DateUtil: java.util.Date getJavaDate(double,boolean)>(d0, 0);

        virtualinvoke $r0.<java.util.Calendar: void setTime(java.util.Date)>($r1);

        $z0 = staticinvoke <org.apache.poi.ss.formula.functions.Days360: boolean isLastDayOfMonth(java.util.Calendar)>($r0);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r2.<java.util.Calendar: int get(int)>(5);

        if $i0 >= 30 goto label1;

        r3 = staticinvoke <org.apache.poi.ss.formula.functions.Days360: java.util.Calendar getFirstDayOfNextMonth(java.util.Calendar)>($r0);

     label1:
        return r3;
    }

    private static boolean isLastDayOfMonth(java.util.Calendar)
    {
        java.util.Calendar r0, r2;
        int $i0, $i1, $i3;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @parameter0: java.util.Calendar;

        $r1 = virtualinvoke r0.<java.util.Calendar: java.lang.Object clone()>();

        r2 = (java.util.Calendar) $r1;

        virtualinvoke r2.<java.util.Calendar: void add(int,int)>(2, 1);

        $i3 = (int) -1;

        virtualinvoke r2.<java.util.Calendar: void add(int,int)>(5, $i3);

        $i0 = virtualinvoke r2.<java.util.Calendar: int get(int)>(5);

        $i1 = virtualinvoke r0.<java.util.Calendar: int get(int)>(5);

        if $i1 != $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static java.util.Calendar getFirstDayOfNextMonth(java.util.Calendar)
    {
        java.util.Calendar r0, r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r1;

        r0 := @parameter0: java.util.Calendar;

        $r1 = virtualinvoke r0.<java.util.Calendar: java.lang.Object clone()>();

        r2 = (java.util.Calendar) $r1;

        $i0 = virtualinvoke r0.<java.util.Calendar: int get(int)>(2);

        if $i0 >= 11 goto label1;

        $i3 = virtualinvoke r0.<java.util.Calendar: int get(int)>(2);

        $i4 = $i3 + 1;

        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, $i4);

        goto label2;

     label1:
        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, 1);

        $i1 = virtualinvoke r0.<java.util.Calendar: int get(int)>(1);

        $i2 = $i1 + 1;

        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, $i2);

     label2:
        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(5, 1);

        return r2;
    }
}
