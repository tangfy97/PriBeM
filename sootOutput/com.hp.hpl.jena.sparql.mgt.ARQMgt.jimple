public class com.hp.hpl.jena.sparql.mgt.ARQMgt extends java.lang.Object
{
    private static org.slf4j.Logger log;
    private static boolean initialized;
    private static boolean noJMX;
    private static java.util.Map mgtObjects;
    private static javax.management.MBeanServer mbs;

    public void <init>()
    {
        com.hp.hpl.jena.sparql.mgt.ARQMgt r0;

        r0 := @this: com.hp.hpl.jena.sparql.mgt.ARQMgt;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static synchronized void init()
    {
        java.lang.Throwable $r12;
        com.hp.hpl.jena.sparql.mgt.ContextMBean $r1;
        com.hp.hpl.jena.sparql.util.Context $r2;
        com.hp.hpl.jena.sparql.mgt.QueryEngineInfo r3;
        javax.management.MBeanServer $r0;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r9, $r10;
        java.lang.String $r7, $r11;
        boolean $z0;

        $z0 = <com.hp.hpl.jena.sparql.mgt.ARQMgt: boolean initialized>;

        if $z0 == 0 goto label1;

        return;

     label1:
        <com.hp.hpl.jena.sparql.mgt.ARQMgt: boolean initialized> = 1;

     label2:
        $r0 = staticinvoke <java.lang.management.ManagementFactory: javax.management.MBeanServer getPlatformMBeanServer()>();

        <com.hp.hpl.jena.sparql.mgt.ARQMgt: javax.management.MBeanServer mbs> = $r0;

        $r1 = new com.hp.hpl.jena.sparql.mgt.ContextMBean;

        $r2 = staticinvoke <com.hp.hpl.jena.query.ARQ: com.hp.hpl.jena.sparql.util.Context getContext()>();

        specialinvoke $r1.<com.hp.hpl.jena.sparql.mgt.ContextMBean: void <init>(com.hp.hpl.jena.sparql.util.Context)>($r2);

        r3 = <com.hp.hpl.jena.sparql.engine.QueryEngineBase: com.hp.hpl.jena.sparql.mgt.QueryEngineInfo queryEngineInfo>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("org.apache.jena.arq");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".system:type=Context");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.sparql.mgt.ARQMgt: void register(java.lang.String,java.lang.Object)>($r7, $r1);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("org.apache.jena.arq");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".system:type=Engine");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.sparql.mgt.ARQMgt: void register(java.lang.String,java.lang.Object)>($r11, r3);

     label3:
        goto label5;

     label4:
        $r12 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Class,java.lang.String,java.lang.Throwable)>(class "Lcom/hp/hpl/jena/sparql/mgt/ARQMgt;", "Failed to initialize JMX", $r12);

        <com.hp.hpl.jena.sparql.mgt.ARQMgt: boolean noJMX> = 1;

        <com.hp.hpl.jena.sparql.mgt.ARQMgt: javax.management.MBeanServer mbs> = null;

     label5:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public static void register(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r0;
        javax.management.ObjectName $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        staticinvoke <com.hp.hpl.jena.sparql.mgt.ARQMgt: void init()>();

        $z0 = <com.hp.hpl.jena.sparql.mgt.ARQMgt: boolean noJMX>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = staticinvoke <com.hp.hpl.jena.sparql.mgt.ARQMgt: javax.management.ObjectName objectName(java.lang.String)>(r0);

        staticinvoke <com.hp.hpl.jena.sparql.mgt.ARQMgt: void register(javax.management.ObjectName,java.lang.Object)>($r1, r2);

        return;
    }

    public static void unregister(java.lang.String)
    {
        java.lang.String r0;
        javax.management.ObjectName $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.hp.hpl.jena.sparql.mgt.ARQMgt: void init()>();

        $z0 = <com.hp.hpl.jena.sparql.mgt.ARQMgt: boolean noJMX>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = staticinvoke <com.hp.hpl.jena.sparql.mgt.ARQMgt: javax.management.ObjectName objectName(java.lang.String)>(r0);

        staticinvoke <com.hp.hpl.jena.sparql.mgt.ARQMgt: void unregister(javax.management.ObjectName)>($r1);

        return;
    }

    private static void register(javax.management.ObjectName, java.lang.Object)
    {
        java.util.Map $r68;
        com.hp.hpl.jena.sparql.ARQException $r14, $r33, $r52;
        javax.management.NotCompliantMBeanException $r42;
        java.lang.StringBuilder $r5, $r7, $r9, $r10, $r12, $r15, $r16, $r18, $r19, $r21, $r24, $r26, $r28, $r29, $r31, $r34, $r35, $r37, $r38, $r40, $r43, $r45, $r47, $r48, $r50, $r53, $r54, $r56, $r57, $r59, $r63, $r64, $r65;
        java.lang.String $r8, $r11, $r13, $r17, $r20, $r22, $r27, $r30, $r32, $r36, $r39, $r41, $r46, $r49, $r51, $r55, $r58, $r60, $r66;
        javax.management.InstanceAlreadyExistsException $r23;
        boolean $z0;
        javax.management.ObjectName r0;
        javax.management.MBeanServer $r1, $r3, $r67;
        javax.management.MBeanRegistrationException $r4;
        javax.management.InstanceNotFoundException $r61;
        org.slf4j.Logger $r6, $r25, $r44, $r62;
        java.lang.Object r2;

        r0 := @parameter0: javax.management.ObjectName;

        r2 := @parameter1: java.lang.Object;

     label01:
        $r1 = <com.hp.hpl.jena.sparql.mgt.ARQMgt: javax.management.MBeanServer mbs>;

        $z0 = interfaceinvoke $r1.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r0);

        if $z0 == 0 goto label05;

     label02:
        $r3 = <com.hp.hpl.jena.sparql.mgt.ARQMgt: javax.management.MBeanServer mbs>;

        interfaceinvoke $r3.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r0);

     label03:
        goto label05;

     label04:
        $r61 := @caughtexception;

     label05:
        $r62 = <com.hp.hpl.jena.sparql.mgt.ARQMgt: org.slf4j.Logger log>;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Register MBean: ");

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r62.<org.slf4j.Logger: void debug(java.lang.String)>($r66);

        $r67 = <com.hp.hpl.jena.sparql.mgt.ARQMgt: javax.management.MBeanServer mbs>;

        interfaceinvoke $r67.<javax.management.MBeanServer: javax.management.ObjectInstance registerMBean(java.lang.Object,javax.management.ObjectName)>(r2, r0);

        $r68 = <com.hp.hpl.jena.sparql.mgt.ARQMgt: java.util.Map mgtObjects>;

        interfaceinvoke $r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r2);

     label06:
        goto label10;

     label07:
        $r42 := @caughtexception;

        $r44 = <com.hp.hpl.jena.sparql.mgt.ARQMgt: org.slf4j.Logger log>;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to register (NotCompliantMBeanException)\'");

        $r46 = virtualinvoke r0.<javax.management.ObjectName: java.lang.String getCanonicalName()>();

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $r49 = virtualinvoke $r42.<javax.management.NotCompliantMBeanException: java.lang.String getMessage()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r44.<org.slf4j.Logger: void warn(java.lang.String)>($r51);

        $r52 = new com.hp.hpl.jena.sparql.ARQException;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to register \'");

        $r55 = virtualinvoke r0.<javax.management.ObjectName: java.lang.String getCanonicalName()>();

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $r58 = virtualinvoke $r42.<javax.management.NotCompliantMBeanException: java.lang.String getMessage()>();

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r52.<com.hp.hpl.jena.sparql.ARQException: void <init>(java.lang.String,java.lang.Throwable)>($r60, $r42);

        throw $r52;

     label08:
        $r23 := @caughtexception;

        $r25 = <com.hp.hpl.jena.sparql.mgt.ARQMgt: org.slf4j.Logger log>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to register (InstanceAlreadyExistsException)\'");

        $r27 = virtualinvoke r0.<javax.management.ObjectName: java.lang.String getCanonicalName()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $r30 = virtualinvoke $r23.<javax.management.InstanceAlreadyExistsException: java.lang.String getMessage()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r25.<org.slf4j.Logger: void warn(java.lang.String)>($r32);

        $r33 = new com.hp.hpl.jena.sparql.ARQException;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to register \'");

        $r36 = virtualinvoke r0.<javax.management.ObjectName: java.lang.String getCanonicalName()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $r39 = virtualinvoke $r23.<javax.management.InstanceAlreadyExistsException: java.lang.String getMessage()>();

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<com.hp.hpl.jena.sparql.ARQException: void <init>(java.lang.String,java.lang.Throwable)>($r41, $r23);

        throw $r33;

     label09:
        $r4 := @caughtexception;

        $r6 = <com.hp.hpl.jena.sparql.mgt.ARQMgt: org.slf4j.Logger log>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to register (MBeanRegistrationException)\'");

        $r8 = virtualinvoke r0.<javax.management.ObjectName: java.lang.String getCanonicalName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $r11 = virtualinvoke $r4.<javax.management.MBeanRegistrationException: java.lang.String getMessage()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.slf4j.Logger: void warn(java.lang.String)>($r13);

        $r14 = new com.hp.hpl.jena.sparql.ARQException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to register \'");

        $r17 = virtualinvoke r0.<javax.management.ObjectName: java.lang.String getCanonicalName()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $r20 = virtualinvoke $r4.<javax.management.MBeanRegistrationException: java.lang.String getMessage()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<com.hp.hpl.jena.sparql.ARQException: void <init>(java.lang.String,java.lang.Throwable)>($r22, $r4);

        throw $r14;

     label10:
        return;

        catch javax.management.InstanceNotFoundException from label02 to label03 with label04;
        catch javax.management.NotCompliantMBeanException from label01 to label06 with label07;
        catch javax.management.InstanceAlreadyExistsException from label01 to label06 with label08;
        catch javax.management.MBeanRegistrationException from label01 to label06 with label09;
    }

    private static void unregister(javax.management.ObjectName)
    {
        java.util.Map $r6;
        javax.management.MBeanServer $r7;
        javax.management.MBeanRegistrationException $r13;
        java.lang.String $r5, $r12;
        javax.management.InstanceNotFoundException $r14;
        boolean $z0;
        org.slf4j.Logger $r1, $r9;
        javax.management.ObjectName r3;
        java.lang.StringBuilder $r0, $r2, $r4, $r8, $r10, $r11;

        r3 := @parameter0: javax.management.ObjectName;

        $r1 = <com.hp.hpl.jena.sparql.mgt.ARQMgt: org.slf4j.Logger log>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unregister MBean: ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<org.slf4j.Logger: void debug(java.lang.String)>($r5);

        $r6 = <com.hp.hpl.jena.sparql.mgt.ARQMgt: java.util.Map mgtObjects>;

        $z0 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>(r3);

        if $z0 != 0 goto label1;

        $r9 = <com.hp.hpl.jena.sparql.mgt.ARQMgt: org.slf4j.Logger log>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MBean not already registered: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<org.slf4j.Logger: void warn(java.lang.String)>($r12);

     label1:
        $r7 = <com.hp.hpl.jena.sparql.mgt.ARQMgt: javax.management.MBeanServer mbs>;

        interfaceinvoke $r7.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r3);

     label2:
        goto label5;

     label3:
        $r14 := @caughtexception;

        virtualinvoke $r14.<javax.management.InstanceNotFoundException: void printStackTrace()>();

        goto label5;

     label4:
        $r13 := @caughtexception;

        virtualinvoke $r13.<javax.management.MBeanRegistrationException: void printStackTrace()>();

     label5:
        return;

        catch javax.management.InstanceNotFoundException from label1 to label2 with label3;
        catch javax.management.MBeanRegistrationException from label1 to label2 with label4;
    }

    private static javax.management.ObjectName objectName(java.lang.String)
    {
        javax.management.ObjectName $r0;
        javax.management.MalformedObjectNameException $r2;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9;
        java.lang.String r1, $r8, $r10;
        com.hp.hpl.jena.sparql.ARQException $r3;

        r1 := @parameter0: java.lang.String;

     label1:
        $r0 = new javax.management.ObjectName;

        specialinvoke $r0.<javax.management.ObjectName: void <init>(java.lang.String)>(r1);

     label2:
        return $r0;

     label3:
        $r2 := @caughtexception;

        $r3 = new com.hp.hpl.jena.sparql.ARQException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create name \'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $r8 = virtualinvoke $r2.<javax.management.MalformedObjectNameException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<com.hp.hpl.jena.sparql.ARQException: void <init>(java.lang.String,java.lang.Throwable)>($r10, $r2);

        throw $r3;

        catch javax.management.MalformedObjectNameException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.util.HashMap $r1;
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/hp/hpl/jena/sparql/mgt/ARQMgt;");

        <com.hp.hpl.jena.sparql.mgt.ARQMgt: org.slf4j.Logger log> = $r0;

        <com.hp.hpl.jena.sparql.mgt.ARQMgt: boolean initialized> = 0;

        <com.hp.hpl.jena.sparql.mgt.ARQMgt: boolean noJMX> = 0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <com.hp.hpl.jena.sparql.mgt.ARQMgt: java.util.Map mgtObjects> = $r1;

        <com.hp.hpl.jena.sparql.mgt.ARQMgt: javax.management.MBeanServer mbs> = null;

        return;
    }
}
