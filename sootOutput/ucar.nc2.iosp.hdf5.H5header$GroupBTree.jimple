class ucar.nc2.iosp.hdf5.H5header$GroupBTree extends java.lang.Object
{
    protected java.lang.String owner;
    protected int wantType;
    private java.util.List sentries;
    final ucar.nc2.iosp.hdf5.H5header this$0;

    void <init>(ucar.nc2.iosp.hdf5.H5header, java.lang.String)
    {
        ucar.nc2.iosp.hdf5.H5header$GroupBTree r0;
        ucar.nc2.iosp.hdf5.H5header r1;
        java.lang.String r3;
        java.util.ArrayList $r2;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$GroupBTree;

        r1 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        r3 := @parameter1: java.lang.String;

        r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: int wantType> = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: java.util.List sentries> = $r2;

        r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: java.lang.String owner> = r3;

        return;
    }

    void <init>(ucar.nc2.iosp.hdf5.H5header, java.lang.String, long) throws java.io.IOException
    {
        java.util.Iterator $r5;
        ucar.nc2.iosp.hdf5.H5header$GroupBTree r0;
        ucar.nc2.iosp.hdf5.H5header$GroupBTree$Entry r7;
        long l0, $l1;
        java.util.ArrayList $r2, $r4;
        java.util.List $r9, $r10;
        ucar.nc2.iosp.hdf5.H5header$GroupBTree$GroupNode $r8;
        ucar.nc2.iosp.hdf5.H5header r1;
        java.lang.Object $r6;
        java.lang.String r3;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$GroupBTree;

        r1 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        r3 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: int wantType> = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: java.util.List sentries> = $r2;

        r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: java.lang.String owner> = r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        virtualinvoke r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: void readAllEntries(long,java.util.List)>(l0, $r4);

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (ucar.nc2.iosp.hdf5.H5header$GroupBTree$Entry) $r6;

        $r8 = new ucar.nc2.iosp.hdf5.H5header$GroupBTree$GroupNode;

        $l1 = r7.<ucar.nc2.iosp.hdf5.H5header$GroupBTree$Entry: long address>;

        specialinvoke $r8.<ucar.nc2.iosp.hdf5.H5header$GroupBTree$GroupNode: void <init>(ucar.nc2.iosp.hdf5.H5header$GroupBTree,long)>(r0, $l1);

        $r9 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: java.util.List sentries>;

        $r10 = virtualinvoke $r8.<ucar.nc2.iosp.hdf5.H5header$GroupBTree$GroupNode: java.util.List getSymbols()>();

        interfaceinvoke $r9.<java.util.List: boolean addAll(java.util.Collection)>($r10);

        goto label1;

     label2:
        return;
    }

    java.util.List getSymbolTableEntries()
    {
        java.util.List $r1;
        ucar.nc2.iosp.hdf5.H5header$GroupBTree r0;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$GroupBTree;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: java.util.List sentries>;

        return $r1;
    }

    protected void readAllEntries(long, java.util.List) throws java.io.IOException
    {
        byte[] $r76;
        byte $b2, $b3, $b6, $b9, $b10;
        ucar.nc2.iosp.hdf5.H5header $r1, $r3, $r4, $r7, $r9, $r11, $r13, $r14, $r15, $r16, $r17, $r23, $r30, $r44, $r57, $r68, $r72;
        java.lang.StringBuilder $r26, $r27, $r33, $r34, $r35, $r37, $r38, $r39, $r40, $r42, $r47, $r49, $r50, $r54, $r55, $r60, $r61, $r62, $r63, $r64, $r65, $r71, $r74, $r77, $r80, $r81, $r83, $r84, $r87;
        long l0, $l1, l14, $l15, $l16, $l17, $l18, $l20;
        java.util.ArrayList $r85;
        short $s4;
        java.lang.String $r28, $r36, $r41, $r43, $r48, $r51, $r56, $r66, $r75, $r78;
        java.lang.IllegalStateException $r79, $r82;
        ucar.unidata.io.RandomAccessFile $r2, $r5, $r8, $r10, $r12, $r73;
        ucar.nc2.iosp.hdf5.H5header$GroupBTree r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.List r22;
        ucar.nc2.iosp.hdf5.H5header$GroupBTree$Entry r21, $r86;
        int $i5, $i7, $i8, $i11, $i12, $i13, $i19, i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30;
        ucar.nc2.iosp.hdf5.H5header$MemTracker $r45;
        java.io.PrintStream $r24, $r31, $r58, $r69;
        java.util.Iterator $r19;
        java.lang.Object $r20;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$GroupBTree;

        l0 := @parameter0: long;

        r22 := @parameter1: java.util.List;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r2 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r1);

        $r3 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $l1 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$100(ucar.nc2.iosp.hdf5.H5header,long)>($r3, l0);

        virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l1);

        $z0 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$5000()>();

        if $z0 == 0 goto label01;

        $r68 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r69 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>($r68);

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n--> GroupBTree read tree at position=");

        $r72 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r73 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r72);

        $l20 = virtualinvoke $r73.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r74 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l20);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r69.<java.io.PrintStream: void println(java.lang.String)>($r75);

     label01:
        $r76 = newarray (byte)[4];

        $r4 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r5 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r4);

        virtualinvoke $r5.<ucar.unidata.io.RandomAccessFile: int read(byte[])>($r76);

        $r78 = new java.lang.String;

        specialinvoke $r78.<java.lang.String: void <init>(byte[])>($r76);

        $z1 = virtualinvoke $r78.<java.lang.String: boolean equals(java.lang.Object)>("TREE");

        if $z1 != 0 goto label02;

        $r79 = new java.lang.IllegalStateException;

        specialinvoke $r79.<java.lang.IllegalStateException: void <init>(java.lang.String)>("BtreeGroup doesnt start with TREE");

        throw $r79;

     label02:
        $r7 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r8 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r7);

        $b2 = virtualinvoke $r8.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        $r9 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r10 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r9);

        $b3 = virtualinvoke $r10.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        $r11 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r12 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r11);

        $s4 = virtualinvoke $r12.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        $z2 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$5000()>();

        if $z2 == 0 goto label03;

        $r57 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r58 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>($r57);

        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    type=");

        $i22 = (int) $b2;

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" level=");

        $i23 = (int) $b3;

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nentries=");

        $i24 = (int) $s4;

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r58.<java.io.PrintStream: void println(java.lang.String)>($r66);

     label03:
        $i5 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: int wantType>;

        $i25 = (int) $b2;

        if $i25 == $i5 goto label04;

        $r82 = new java.lang.IllegalStateException;

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BtreeGroup must be type ");

        $i19 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: int wantType>;

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r82.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r56);

        throw $r82;

     label04:
        $r13 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $b6 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: byte access$5100(ucar.nc2.iosp.hdf5.H5header)>($r13);

        $i26 = (int) $b6;

        $i7 = 2 * $i26;

        $i8 = 8 + $i7;

        $r14 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $b9 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: byte access$5100(ucar.nc2.iosp.hdf5.H5header)>($r14);

        $r15 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $b10 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: byte access$5200(ucar.nc2.iosp.hdf5.H5header)>($r15);

        $i27 = (int) $b9;

        $i28 = (int) $b10;

        $i11 = $i27 + $i28;

        $i29 = (int) $s4;

        $i12 = $i29 * $i11;

        $i13 = $i8 + $i12;

        l14 = (long) $i13;

        $z3 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1700()>();

        if $z3 == 0 goto label05;

        $r44 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r45 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5header$MemTracker access$1800(ucar.nc2.iosp.hdf5.H5header)>($r44);

        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Group BTree (");

        $r48 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: java.lang.String owner>;

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r45.<ucar.nc2.iosp.hdf5.H5header$MemTracker: void addByLen(java.lang.String,long,long)>($r51, l0, l14);

     label05:
        $r16 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $l15 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$4000(ucar.nc2.iosp.hdf5.H5header)>($r16);

        $r17 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $l16 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$4000(ucar.nc2.iosp.hdf5.H5header)>($r17);

        $z4 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$5000()>();

        if $z4 == 0 goto label06;

        $r30 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r31 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>($r30);

        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    leftAddress=");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l15);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r36 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l15);

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rightAddress=");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l16);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r41 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l16);

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r43);

     label06:
        $r85 = new java.util.ArrayList;

        specialinvoke $r85.<java.util.ArrayList: void <init>()>();

        i21 = 0;

     label07:
        $i30 = (int) $s4;

        if i21 >= $i30 goto label08;

        $r86 = new ucar.nc2.iosp.hdf5.H5header$GroupBTree$Entry;

        specialinvoke $r86.<ucar.nc2.iosp.hdf5.H5header$GroupBTree$Entry: void <init>(ucar.nc2.iosp.hdf5.H5header$GroupBTree)>(r0);

        interfaceinvoke $r85.<java.util.List: boolean add(java.lang.Object)>($r86);

        i21 = i21 + 1;

        goto label07;

     label08:
        if $b3 != 0 goto label09;

        interfaceinvoke r22.<java.util.List: boolean addAll(java.util.Collection)>($r85);

        goto label12;

     label09:
        $r19 = interfaceinvoke $r85.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z5 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label12;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r21 = (ucar.nc2.iosp.hdf5.H5header$GroupBTree$Entry) $r20;

        $z6 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$5300()>();

        if $z6 == 0 goto label11;

        $r23 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r24 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>($r23);

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  nonzero node entry at =");

        $l18 = r21.<ucar.nc2.iosp.hdf5.H5header$GroupBTree$Entry: long address>;

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l18);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r28);

     label11:
        $l17 = r21.<ucar.nc2.iosp.hdf5.H5header$GroupBTree$Entry: long address>;

        virtualinvoke r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: void readAllEntries(long,java.util.List)>($l17, r22);

        goto label10;

     label12:
        return;
    }
}
