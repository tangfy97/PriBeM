public abstract class org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase extends java.lang.Object implements org.codehaus.jackson.map.jsontype.TypeIdResolver
{
    protected final org.codehaus.jackson.map.type.TypeFactory _typeFactory;
    protected final org.codehaus.jackson.type.JavaType _baseType;

    protected void <init>(org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.type.TypeFactory)
    {
        org.codehaus.jackson.map.type.TypeFactory r2;
        org.codehaus.jackson.type.JavaType r1;
        org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase r0;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase;

        r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        r2 := @parameter1: org.codehaus.jackson.map.type.TypeFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase: org.codehaus.jackson.type.JavaType _baseType> = r1;

        r0.<org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase: org.codehaus.jackson.map.type.TypeFactory _typeFactory> = r2;

        return;
    }

    public void init(org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.type.JavaType r1;
        org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase r0;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase;

        r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        return;
    }

    public java.lang.String idFromBaseType()
    {
        org.codehaus.jackson.type.JavaType $r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase r0;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase;

        $r1 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase: org.codehaus.jackson.type.JavaType _baseType>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase: java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class)>(null, $r2);

        return $r3;
    }
}
