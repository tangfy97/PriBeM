public abstract class org.apache.xml.utils.Hashtree2Node extends java.lang.Object
{

    public void <init>()
    {
        org.apache.xml.utils.Hashtree2Node r0;

        r0 := @this: org.apache.xml.utils.Hashtree2Node;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void appendHashToNode(java.util.Hashtable, java.lang.String, org.w3c.dom.Node, org.w3c.dom.Document)
    {
        org.w3c.dom.Text $r12, $r28;
        java.util.Enumeration $r5, $r14;
        java.util.Vector $r6;
        org.w3c.dom.Document r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Exception $r18, $r19;
        java.lang.StringBuffer $r21, $r22, $r23, $r24, $r26;
        org.w3c.dom.Node r0;
        java.lang.String r3, $r8, $r11, $r17, $r25, $r27, r29, r30;
        java.util.Hashtable r2, $r13, r31;
        org.w3c.dom.Element $r4, $r10, $r20;
        java.lang.Object $r7, $r9, $r15, $r16;

        r2 := @parameter0: java.util.Hashtable;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: org.w3c.dom.Node;

        r1 := @parameter3: org.w3c.dom.Document;

        if null == r0 goto label01;

        if null == r1 goto label01;

        if null != r2 goto label02;

     label01:
        return;

     label02:
        if null == r3 goto label03;

        $r17 = "";

        $z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z2 == 0 goto label04;

     label03:
        r29 = "appendHashToNode";

        goto label05;

     label04:
        r29 = r3;

     label05:
        $r4 = interfaceinvoke r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>(r29);

        interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r4);

        $r5 = virtualinvoke r2.<java.util.Hashtable: java.util.Enumeration keys()>();

        $r6 = new java.util.Vector;

        specialinvoke $r6.<java.util.Vector: void <init>()>();

        goto label10;

     label06:
        $r7 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $r9 = virtualinvoke r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r7);

        $z0 = $r9 instanceof java.util.Hashtable;

        if $z0 == 0 goto label07;

        virtualinvoke $r6.<java.util.Vector: void addElement(java.lang.Object)>($r8);

        $r13 = (java.util.Hashtable) $r9;

        virtualinvoke $r6.<java.util.Vector: void addElement(java.lang.Object)>($r13);

        goto label10;

     label07:
        $r10 = interfaceinvoke r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("item");

        interfaceinvoke $r10.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("key", $r8);

        $r11 = (java.lang.String) $r9;

        $r12 = interfaceinvoke r1.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r11);

        interfaceinvoke $r10.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r12);

        interfaceinvoke $r4.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r10);

     label08:
        goto label10;

     label09:
        $r19 := @caughtexception;

        $r20 = interfaceinvoke r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("item");

        interfaceinvoke $r20.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("key", $r8);

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ERROR: Reading ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" threw: ");

        $r25 = virtualinvoke $r19.<java.lang.Throwable: java.lang.String toString()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        $r28 = interfaceinvoke r1.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r27);

        interfaceinvoke $r20.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r28);

        interfaceinvoke $r4.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r20);

     label10:
        $z3 = interfaceinvoke $r5.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z3 != 0 goto label06;

        $r14 = virtualinvoke $r6.<java.util.Vector: java.util.Enumeration elements()>();

        goto label12;

     label11:
        $r15 = interfaceinvoke $r14.<java.util.Enumeration: java.lang.Object nextElement()>();

        r30 = (java.lang.String) $r15;

        $r16 = interfaceinvoke $r14.<java.util.Enumeration: java.lang.Object nextElement()>();

        r31 = (java.util.Hashtable) $r16;

        staticinvoke <org.apache.xml.utils.Hashtree2Node: void appendHashToNode(java.util.Hashtable,java.lang.String,org.w3c.dom.Node,org.w3c.dom.Document)>(r31, r30, $r4, r1);

     label12:
        $z1 = interfaceinvoke $r14.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 != 0 goto label11;

     label13:
        goto label15;

     label14:
        $r18 := @caughtexception;

        virtualinvoke $r18.<java.lang.Throwable: void printStackTrace()>();

     label15:
        return;

        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Exception from label05 to label13 with label14;
    }
}
