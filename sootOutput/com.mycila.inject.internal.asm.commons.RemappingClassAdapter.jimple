public class com.mycila.inject.internal.asm.commons.RemappingClassAdapter extends com.mycila.inject.internal.asm.ClassAdapter
{
    protected final com.mycila.inject.internal.asm.commons.Remapper remapper;
    protected java.lang.String className;

    public void <init>(com.mycila.inject.internal.asm.ClassVisitor, com.mycila.inject.internal.asm.commons.Remapper)
    {
        com.mycila.inject.internal.asm.commons.RemappingClassAdapter r0;
        com.mycila.inject.internal.asm.commons.Remapper r2;
        com.mycila.inject.internal.asm.ClassVisitor r1;

        r0 := @this: com.mycila.inject.internal.asm.commons.RemappingClassAdapter;

        r1 := @parameter0: com.mycila.inject.internal.asm.ClassVisitor;

        r2 := @parameter1: com.mycila.inject.internal.asm.commons.Remapper;

        specialinvoke r0.<com.mycila.inject.internal.asm.ClassAdapter: void <init>(com.mycila.inject.internal.asm.ClassVisitor)>(r1);

        r0.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: com.mycila.inject.internal.asm.commons.Remapper remapper> = r2;

        return;
    }

    public void visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        com.mycila.inject.internal.asm.commons.RemappingClassAdapter r0;
        com.mycila.inject.internal.asm.commons.Remapper $r2, $r5, $r8, $r11;
        java.lang.String[] r10, $r12;
        int i0, i1;
        java.lang.String r1, $r3, r4, $r6, r7, $r9;

        r0 := @this: com.mycila.inject.internal.asm.commons.RemappingClassAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r7 := @parameter4: java.lang.String;

        r10 := @parameter5: java.lang.String[];

        r0.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: java.lang.String className> = r1;

        $r2 = r0.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: com.mycila.inject.internal.asm.commons.Remapper remapper>;

        $r3 = virtualinvoke $r2.<com.mycila.inject.internal.asm.commons.Remapper: java.lang.String mapType(java.lang.String)>(r1);

        $r5 = r0.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: com.mycila.inject.internal.asm.commons.Remapper remapper>;

        $r6 = virtualinvoke $r5.<com.mycila.inject.internal.asm.commons.Remapper: java.lang.String mapSignature(java.lang.String,boolean)>(r4, 0);

        $r8 = r0.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: com.mycila.inject.internal.asm.commons.Remapper remapper>;

        $r9 = virtualinvoke $r8.<com.mycila.inject.internal.asm.commons.Remapper: java.lang.String mapType(java.lang.String)>(r7);

        if r10 != null goto label1;

        $r12 = null;

        goto label2;

     label1:
        $r11 = r0.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: com.mycila.inject.internal.asm.commons.Remapper remapper>;

        $r12 = virtualinvoke $r11.<com.mycila.inject.internal.asm.commons.Remapper: java.lang.String[] mapTypes(java.lang.String[])>(r10);

     label2:
        specialinvoke r0.<com.mycila.inject.internal.asm.ClassAdapter: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(i0, i1, $r3, $r6, $r9, $r12);

        return;
    }

    public com.mycila.inject.internal.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        com.mycila.inject.internal.asm.commons.RemappingClassAdapter r0;
        com.mycila.inject.internal.asm.AnnotationVisitor $r4, $r5;
        com.mycila.inject.internal.asm.commons.Remapper $r2;
        java.lang.String r1, $r3;
        boolean z0;

        r0 := @this: com.mycila.inject.internal.asm.commons.RemappingClassAdapter;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: com.mycila.inject.internal.asm.commons.Remapper remapper>;

        $r3 = virtualinvoke $r2.<com.mycila.inject.internal.asm.commons.Remapper: java.lang.String mapDesc(java.lang.String)>(r1);

        $r4 = specialinvoke r0.<com.mycila.inject.internal.asm.ClassAdapter: com.mycila.inject.internal.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($r3, z0);

        if $r4 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = virtualinvoke r0.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: com.mycila.inject.internal.asm.AnnotationVisitor createRemappingAnnotationAdapter(com.mycila.inject.internal.asm.AnnotationVisitor)>($r4);

     label2:
        return $r5;
    }

    public com.mycila.inject.internal.asm.FieldVisitor visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)
    {
        com.mycila.inject.internal.asm.commons.RemappingClassAdapter r0;
        com.mycila.inject.internal.asm.FieldVisitor $r14, $r15;
        int i0;
        java.lang.String r1, r2, $r3, $r5, $r7, r8, $r10;
        com.mycila.inject.internal.asm.commons.Remapper $r4, $r6, $r9, $r12;
        java.lang.Object r11, $r13;

        r0 := @this: com.mycila.inject.internal.asm.commons.RemappingClassAdapter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r8 := @parameter3: java.lang.String;

        r11 := @parameter4: java.lang.Object;

        $r4 = r0.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: com.mycila.inject.internal.asm.commons.Remapper remapper>;

        $r3 = r0.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: java.lang.String className>;

        $r5 = virtualinvoke $r4.<com.mycila.inject.internal.asm.commons.Remapper: java.lang.String mapFieldName(java.lang.String,java.lang.String,java.lang.String)>($r3, r1, r2);

        $r6 = r0.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: com.mycila.inject.internal.asm.commons.Remapper remapper>;

        $r7 = virtualinvoke $r6.<com.mycila.inject.internal.asm.commons.Remapper: java.lang.String mapDesc(java.lang.String)>(r2);

        $r9 = r0.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: com.mycila.inject.internal.asm.commons.Remapper remapper>;

        $r10 = virtualinvoke $r9.<com.mycila.inject.internal.asm.commons.Remapper: java.lang.String mapSignature(java.lang.String,boolean)>(r8, 1);

        $r12 = r0.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: com.mycila.inject.internal.asm.commons.Remapper remapper>;

        $r13 = virtualinvoke $r12.<com.mycila.inject.internal.asm.commons.Remapper: java.lang.Object mapValue(java.lang.Object)>(r11);

        $r14 = specialinvoke r0.<com.mycila.inject.internal.asm.ClassAdapter: com.mycila.inject.internal.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>(i0, $r5, $r7, $r10, $r13);

        if $r14 != null goto label1;

        $r15 = null;

        goto label2;

     label1:
        $r15 = virtualinvoke r0.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: com.mycila.inject.internal.asm.FieldVisitor createRemappingFieldAdapter(com.mycila.inject.internal.asm.FieldVisitor)>($r14);

     label2:
        return $r15;
    }

    public com.mycila.inject.internal.asm.MethodVisitor visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        com.mycila.inject.internal.asm.commons.RemappingClassAdapter r0;
        java.lang.String[] r11, $r14;
        com.mycila.inject.internal.asm.MethodVisitor $r13, $r15;
        int i0;
        java.lang.String r1, $r3, r4, $r5, $r7, r8, $r10;
        com.mycila.inject.internal.asm.commons.Remapper $r2, $r6, $r9, $r12;

        r0 := @this: com.mycila.inject.internal.asm.commons.RemappingClassAdapter;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r8 := @parameter3: java.lang.String;

        r11 := @parameter4: java.lang.String[];

        $r2 = r0.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: com.mycila.inject.internal.asm.commons.Remapper remapper>;

        $r3 = virtualinvoke $r2.<com.mycila.inject.internal.asm.commons.Remapper: java.lang.String mapMethodDesc(java.lang.String)>(r1);

        $r6 = r0.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: com.mycila.inject.internal.asm.commons.Remapper remapper>;

        $r5 = r0.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: java.lang.String className>;

        $r7 = virtualinvoke $r6.<com.mycila.inject.internal.asm.commons.Remapper: java.lang.String mapMethodName(java.lang.String,java.lang.String,java.lang.String)>($r5, r4, r1);

        $r9 = r0.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: com.mycila.inject.internal.asm.commons.Remapper remapper>;

        $r10 = virtualinvoke $r9.<com.mycila.inject.internal.asm.commons.Remapper: java.lang.String mapSignature(java.lang.String,boolean)>(r8, 0);

        if r11 != null goto label1;

        $r14 = null;

        goto label2;

     label1:
        $r12 = r0.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: com.mycila.inject.internal.asm.commons.Remapper remapper>;

        $r14 = virtualinvoke $r12.<com.mycila.inject.internal.asm.commons.Remapper: java.lang.String[] mapTypes(java.lang.String[])>(r11);

     label2:
        $r13 = specialinvoke r0.<com.mycila.inject.internal.asm.ClassAdapter: com.mycila.inject.internal.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(i0, $r7, $r3, $r10, $r14);

        if $r13 != null goto label3;

        $r15 = null;

        goto label4;

     label3:
        $r15 = virtualinvoke r0.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: com.mycila.inject.internal.asm.MethodVisitor createRemappingMethodAdapter(int,java.lang.String,com.mycila.inject.internal.asm.MethodVisitor)>(i0, $r3, $r13);

     label4:
        return $r15;
    }

    public void visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)
    {
        com.mycila.inject.internal.asm.commons.RemappingClassAdapter r0;
        com.mycila.inject.internal.asm.commons.Remapper $r2, $r5;
        int i0;
        java.lang.String r1, $r3, r4, r6, $r7;

        r0 := @this: com.mycila.inject.internal.asm.commons.RemappingClassAdapter;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $r2 = r0.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: com.mycila.inject.internal.asm.commons.Remapper remapper>;

        $r3 = virtualinvoke $r2.<com.mycila.inject.internal.asm.commons.Remapper: java.lang.String mapType(java.lang.String)>(r1);

        if r4 != null goto label1;

        $r7 = null;

        goto label2;

     label1:
        $r5 = r0.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: com.mycila.inject.internal.asm.commons.Remapper remapper>;

        $r7 = virtualinvoke $r5.<com.mycila.inject.internal.asm.commons.Remapper: java.lang.String mapType(java.lang.String)>(r4);

     label2:
        specialinvoke r0.<com.mycila.inject.internal.asm.ClassAdapter: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>($r3, $r7, r6, i0);

        return;
    }

    public void visitOuterClass(java.lang.String, java.lang.String, java.lang.String)
    {
        com.mycila.inject.internal.asm.commons.RemappingClassAdapter r0;
        com.mycila.inject.internal.asm.commons.Remapper $r2, $r5, $r6;
        java.lang.String r1, r3, r4, $r7, $r8, $r9;

        r0 := @this: com.mycila.inject.internal.asm.commons.RemappingClassAdapter;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r2 = r0.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: com.mycila.inject.internal.asm.commons.Remapper remapper>;

        $r7 = virtualinvoke $r2.<com.mycila.inject.internal.asm.commons.Remapper: java.lang.String mapType(java.lang.String)>(r1);

        if r3 != null goto label1;

        $r8 = null;

        goto label2;

     label1:
        $r5 = r0.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: com.mycila.inject.internal.asm.commons.Remapper remapper>;

        $r8 = virtualinvoke $r5.<com.mycila.inject.internal.asm.commons.Remapper: java.lang.String mapMethodName(java.lang.String,java.lang.String,java.lang.String)>(r1, r3, r4);

     label2:
        if r4 != null goto label3;

        $r9 = null;

        goto label4;

     label3:
        $r6 = r0.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: com.mycila.inject.internal.asm.commons.Remapper remapper>;

        $r9 = virtualinvoke $r6.<com.mycila.inject.internal.asm.commons.Remapper: java.lang.String mapMethodDesc(java.lang.String)>(r4);

     label4:
        specialinvoke r0.<com.mycila.inject.internal.asm.ClassAdapter: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>($r7, $r8, $r9);

        return;
    }

    protected com.mycila.inject.internal.asm.FieldVisitor createRemappingFieldAdapter(com.mycila.inject.internal.asm.FieldVisitor)
    {
        com.mycila.inject.internal.asm.commons.RemappingClassAdapter r2;
        com.mycila.inject.internal.asm.FieldVisitor r1;
        com.mycila.inject.internal.asm.commons.Remapper $r3;
        com.mycila.inject.internal.asm.commons.RemappingFieldAdapter $r0;

        r2 := @this: com.mycila.inject.internal.asm.commons.RemappingClassAdapter;

        r1 := @parameter0: com.mycila.inject.internal.asm.FieldVisitor;

        $r0 = new com.mycila.inject.internal.asm.commons.RemappingFieldAdapter;

        $r3 = r2.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: com.mycila.inject.internal.asm.commons.Remapper remapper>;

        specialinvoke $r0.<com.mycila.inject.internal.asm.commons.RemappingFieldAdapter: void <init>(com.mycila.inject.internal.asm.FieldVisitor,com.mycila.inject.internal.asm.commons.Remapper)>(r1, $r3);

        return $r0;
    }

    protected com.mycila.inject.internal.asm.MethodVisitor createRemappingMethodAdapter(int, java.lang.String, com.mycila.inject.internal.asm.MethodVisitor)
    {
        com.mycila.inject.internal.asm.commons.RemappingClassAdapter r3;
        com.mycila.inject.internal.asm.MethodVisitor r2;
        int i0;
        com.mycila.inject.internal.asm.commons.RemappingMethodAdapter $r0;
        com.mycila.inject.internal.asm.commons.Remapper $r4;
        java.lang.String r1;

        r3 := @this: com.mycila.inject.internal.asm.commons.RemappingClassAdapter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.mycila.inject.internal.asm.MethodVisitor;

        $r0 = new com.mycila.inject.internal.asm.commons.RemappingMethodAdapter;

        $r4 = r3.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: com.mycila.inject.internal.asm.commons.Remapper remapper>;

        specialinvoke $r0.<com.mycila.inject.internal.asm.commons.RemappingMethodAdapter: void <init>(int,java.lang.String,com.mycila.inject.internal.asm.MethodVisitor,com.mycila.inject.internal.asm.commons.Remapper)>(i0, r1, r2, $r4);

        return $r0;
    }

    protected com.mycila.inject.internal.asm.AnnotationVisitor createRemappingAnnotationAdapter(com.mycila.inject.internal.asm.AnnotationVisitor)
    {
        com.mycila.inject.internal.asm.commons.RemappingClassAdapter r2;
        com.mycila.inject.internal.asm.commons.RemappingAnnotationAdapter $r0;
        com.mycila.inject.internal.asm.AnnotationVisitor r1;
        com.mycila.inject.internal.asm.commons.Remapper $r3;

        r2 := @this: com.mycila.inject.internal.asm.commons.RemappingClassAdapter;

        r1 := @parameter0: com.mycila.inject.internal.asm.AnnotationVisitor;

        $r0 = new com.mycila.inject.internal.asm.commons.RemappingAnnotationAdapter;

        $r3 = r2.<com.mycila.inject.internal.asm.commons.RemappingClassAdapter: com.mycila.inject.internal.asm.commons.Remapper remapper>;

        specialinvoke $r0.<com.mycila.inject.internal.asm.commons.RemappingAnnotationAdapter: void <init>(com.mycila.inject.internal.asm.AnnotationVisitor,com.mycila.inject.internal.asm.commons.Remapper)>(r1, $r3);

        return $r0;
    }
}
