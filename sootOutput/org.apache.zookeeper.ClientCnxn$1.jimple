final class org.apache.zookeeper.ClientCnxn$1 extends java.lang.Object implements java.lang.Thread$UncaughtExceptionHandler
{

    void <init>()
    {
        org.apache.zookeeper.ClientCnxn$1 r0;

        r0 := @this: org.apache.zookeeper.ClientCnxn$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void uncaughtException(java.lang.Thread, java.lang.Throwable)
    {
        java.lang.Throwable r7;
        org.apache.zookeeper.ClientCnxn$1 r8;
        org.slf4j.Logger $r0;
        java.lang.Thread r3;
        java.lang.StringBuilder $r1, $r2, $r5;
        java.lang.String $r4, $r6;

        r8 := @this: org.apache.zookeeper.ClientCnxn$1;

        r3 := @parameter0: java.lang.Thread;

        r7 := @parameter1: java.lang.Throwable;

        $r0 = staticinvoke <org.apache.zookeeper.ClientCnxn: org.slf4j.Logger access$100()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("from ");

        $r4 = virtualinvoke r3.<java.lang.Thread: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r0.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r6, r7);

        return;
    }
}
