public class org.waveprotocol.wave.client.editor.impl.ElementSkippingView extends org.waveprotocol.wave.model.document.util.FilteredView implements org.waveprotocol.wave.client.editor.impl.HtmlView
{

    public void <init>(com.google.gwt.dom.client.Element)
    {
        com.google.gwt.dom.client.Element r2;
        org.waveprotocol.wave.client.editor.impl.ElementSkippingView r0;
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl $r1;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.ElementSkippingView;

        r2 := @parameter0: com.google.gwt.dom.client.Element;

        $r1 = new org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        specialinvoke $r1.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: void <init>(com.google.gwt.dom.client.Element)>(r2);

        specialinvoke r0.<org.waveprotocol.wave.model.document.util.FilteredView: void <init>(org.waveprotocol.wave.model.document.ReadableDocument)>($r1);

        return;
    }

    public void <init>(org.waveprotocol.wave.model.document.ReadableDocument)
    {
        org.waveprotocol.wave.client.editor.impl.ElementSkippingView r0;
        org.waveprotocol.wave.model.document.ReadableDocument r1;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.ElementSkippingView;

        r1 := @parameter0: org.waveprotocol.wave.model.document.ReadableDocument;

        specialinvoke r0.<org.waveprotocol.wave.model.document.util.FilteredView: void <init>(org.waveprotocol.wave.model.document.ReadableDocument)>(r1);

        return;
    }

    protected org.waveprotocol.wave.model.document.util.FilteredView$Skip getSkipLevel(com.google.gwt.dom.client.Node)
    {
        org.waveprotocol.wave.client.editor.impl.ElementSkippingView r1;
        java.lang.Object $r2;
        com.google.gwt.dom.client.Node r0;
        org.waveprotocol.wave.model.document.util.FilteredView$Skip $r3, $r4;
        boolean $z0;

        r1 := @this: org.waveprotocol.wave.client.editor.impl.ElementSkippingView;

        r0 := @parameter0: com.google.gwt.dom.client.Node;

        $z0 = staticinvoke <org.waveprotocol.wave.client.common.util.DomHelper: boolean isTextNode(com.google.gwt.dom.client.Node)>(r0);

        if $z0 == 0 goto label1;

        $r3 = <org.waveprotocol.wave.model.document.util.FilteredView$Skip: org.waveprotocol.wave.model.document.util.FilteredView$Skip NONE>;

        return $r3;

     label1:
        $r2 = virtualinvoke r1.<org.waveprotocol.wave.client.editor.impl.ElementSkippingView: java.lang.Object getDocumentElement()>();

        if r0 != $r2 goto label2;

        $r4 = <org.waveprotocol.wave.model.document.util.FilteredView$Skip: org.waveprotocol.wave.model.document.util.FilteredView$Skip NONE>;

        goto label3;

     label2:
        $r4 = <org.waveprotocol.wave.model.document.util.FilteredView$Skip: org.waveprotocol.wave.model.document.util.FilteredView$Skip SHALLOW>;

     label3:
        return $r4;
    }

    protected volatile org.waveprotocol.wave.model.document.util.FilteredView$Skip getSkipLevel(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.impl.ElementSkippingView r0;
        java.lang.Object r1;
        com.google.gwt.dom.client.Node $r2;
        org.waveprotocol.wave.model.document.util.FilteredView$Skip $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.ElementSkippingView;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gwt.dom.client.Node) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.ElementSkippingView: org.waveprotocol.wave.model.document.util.FilteredView$Skip getSkipLevel(com.google.gwt.dom.client.Node)>($r2);

        return $r3;
    }
}
