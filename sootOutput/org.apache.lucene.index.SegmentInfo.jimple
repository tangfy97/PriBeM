public final class org.apache.lucene.index.SegmentInfo extends java.lang.Object
{
    public static final int NO;
    public static final int YES;
    public final java.lang.String name;
    private int docCount;
    public final org.apache.lucene.store.Directory dir;
    private boolean isCompoundFile;
    private org.apache.lucene.codecs.Codec codec;
    private java.util.Map diagnostics;
    private java.util.Map attributes;
    private java.lang.String version;
    private java.util.Set setFiles;
    static final boolean $assertionsDisabled;

    void setDiagnostics(java.util.Map)
    {
        org.apache.lucene.index.SegmentInfo r0;
        java.util.Map r1;

        r0 := @this: org.apache.lucene.index.SegmentInfo;

        r1 := @parameter0: java.util.Map;

        r0.<org.apache.lucene.index.SegmentInfo: java.util.Map diagnostics> = r1;

        return;
    }

    public java.util.Map getDiagnostics()
    {
        org.apache.lucene.index.SegmentInfo r0;
        java.util.Map $r1;

        r0 := @this: org.apache.lucene.index.SegmentInfo;

        $r1 = r0.<org.apache.lucene.index.SegmentInfo: java.util.Map diagnostics>;

        return $r1;
    }

    public void <init>(org.apache.lucene.store.Directory, java.lang.String, java.lang.String, int, boolean, org.apache.lucene.codecs.Codec, java.util.Map, java.util.Map)
    {
        org.apache.lucene.index.SegmentInfo r0;
        java.lang.AssertionError $r7;
        org.apache.lucene.store.Directory r1;
        org.apache.lucene.codecs.Codec r4;
        java.util.Map r5, r6;
        int i0;
        java.lang.String r2, r3;
        boolean $z0, z1, $z2;

        r0 := @this: org.apache.lucene.index.SegmentInfo;

        r1 := @parameter0: org.apache.lucene.store.Directory;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        z1 := @parameter4: boolean;

        r4 := @parameter5: org.apache.lucene.codecs.Codec;

        r5 := @parameter6: java.util.Map;

        r6 := @parameter7: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = <org.apache.lucene.index.SegmentInfo: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = r1 instanceof org.apache.lucene.store.TrackingDirectoryWrapper;

        if $z2 == 0 goto label1;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label1:
        r0.<org.apache.lucene.index.SegmentInfo: org.apache.lucene.store.Directory dir> = r1;

        r0.<org.apache.lucene.index.SegmentInfo: java.lang.String version> = r2;

        r0.<org.apache.lucene.index.SegmentInfo: java.lang.String name> = r3;

        r0.<org.apache.lucene.index.SegmentInfo: int docCount> = i0;

        r0.<org.apache.lucene.index.SegmentInfo: boolean isCompoundFile> = z1;

        r0.<org.apache.lucene.index.SegmentInfo: org.apache.lucene.codecs.Codec codec> = r4;

        r0.<org.apache.lucene.index.SegmentInfo: java.util.Map diagnostics> = r5;

        r0.<org.apache.lucene.index.SegmentInfo: java.util.Map attributes> = r6;

        return;
    }

    boolean hasSeparateNorms()
    {
        org.apache.lucene.index.SegmentInfo r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.SegmentInfo;

        $r1 = <org.apache.lucene.codecs.lucene3x.Lucene3xSegmentInfoFormat: java.lang.String NORMGEN_KEY>;

        $r2 = virtualinvoke r0.<org.apache.lucene.index.SegmentInfo: java.lang.String getAttribute(java.lang.String)>($r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void setUseCompoundFile(boolean)
    {
        org.apache.lucene.index.SegmentInfo r0;
        boolean z0;

        r0 := @this: org.apache.lucene.index.SegmentInfo;

        z0 := @parameter0: boolean;

        r0.<org.apache.lucene.index.SegmentInfo: boolean isCompoundFile> = z0;

        return;
    }

    public boolean getUseCompoundFile()
    {
        org.apache.lucene.index.SegmentInfo r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.SegmentInfo;

        $z0 = r0.<org.apache.lucene.index.SegmentInfo: boolean isCompoundFile>;

        return $z0;
    }

    public void setCodec(org.apache.lucene.codecs.Codec)
    {
        org.apache.lucene.codecs.Codec r0, $r3;
        org.apache.lucene.index.SegmentInfo r1;
        java.lang.AssertionError $r4;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;

        r1 := @this: org.apache.lucene.index.SegmentInfo;

        r0 := @parameter0: org.apache.lucene.codecs.Codec;

        $z0 = <org.apache.lucene.index.SegmentInfo: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r3 = r1.<org.apache.lucene.index.SegmentInfo: org.apache.lucene.codecs.Codec codec>;

        if $r3 == null goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        if r0 != null goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("segmentCodecs must be non-null");

        throw $r2;

     label2:
        r1.<org.apache.lucene.index.SegmentInfo: org.apache.lucene.codecs.Codec codec> = r0;

        return;
    }

    public org.apache.lucene.codecs.Codec getCodec()
    {
        org.apache.lucene.index.SegmentInfo r0;
        org.apache.lucene.codecs.Codec $r1;

        r0 := @this: org.apache.lucene.index.SegmentInfo;

        $r1 = r0.<org.apache.lucene.index.SegmentInfo: org.apache.lucene.codecs.Codec codec>;

        return $r1;
    }

    public int getDocCount()
    {
        java.lang.IllegalStateException $r2;
        org.apache.lucene.index.SegmentInfo r0;
        int $i0, $i1, $i3;

        r0 := @this: org.apache.lucene.index.SegmentInfo;

        $i0 = r0.<org.apache.lucene.index.SegmentInfo: int docCount>;

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("docCount isn\'t set yet");

        throw $r2;

     label1:
        $i1 = r0.<org.apache.lucene.index.SegmentInfo: int docCount>;

        return $i1;
    }

    void setDocCount(int)
    {
        java.lang.IllegalStateException $r2;
        org.apache.lucene.index.SegmentInfo r0;
        int $i0, i1, $i3;

        r0 := @this: org.apache.lucene.index.SegmentInfo;

        i1 := @parameter0: int;

        $i0 = r0.<org.apache.lucene.index.SegmentInfo: int docCount>;

        $i3 = (int) -1;

        if $i0 == $i3 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("docCount was already set");

        throw $r2;

     label1:
        r0.<org.apache.lucene.index.SegmentInfo: int docCount> = i1;

        return;
    }

    public java.util.Set files()
    {
        java.lang.IllegalStateException $r4;
        org.apache.lucene.index.SegmentInfo r0;
        java.util.Set $r1, $r2, $r3;

        r0 := @this: org.apache.lucene.index.SegmentInfo;

        $r1 = r0.<org.apache.lucene.index.SegmentInfo: java.util.Set setFiles>;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("files were not computed yet");

        throw $r4;

     label1:
        $r2 = r0.<org.apache.lucene.index.SegmentInfo: java.util.Set setFiles>;

        $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2);

        return $r3;
    }

    public java.lang.String toString()
    {
        java.lang.String $r2;
        org.apache.lucene.index.SegmentInfo r0;
        org.apache.lucene.store.Directory $r1;

        r0 := @this: org.apache.lucene.index.SegmentInfo;

        $r1 = r0.<org.apache.lucene.index.SegmentInfo: org.apache.lucene.store.Directory dir>;

        $r2 = virtualinvoke r0.<org.apache.lucene.index.SegmentInfo: java.lang.String toString(org.apache.lucene.store.Directory,int)>($r1, 0);

        return $r2;
    }

    public java.lang.String toString(org.apache.lucene.store.Directory, int)
    {
        org.apache.lucene.store.Directory r8, $r9;
        int $i0, i1;
        java.lang.String $r2, $r5, $r10, $r12;
        boolean $z0;
        org.apache.lucene.index.SegmentInfo r1;
        char $c2;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7, $r11;

        r1 := @this: org.apache.lucene.index.SegmentInfo;

        r8 := @parameter0: org.apache.lucene.store.Directory;

        i1 := @parameter1: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r5 = r1.<org.apache.lucene.index.SegmentInfo: java.lang.String version>;

        if $r5 != null goto label1;

        $r12 = "?";

        goto label2;

     label1:
        $r12 = r1.<org.apache.lucene.index.SegmentInfo: java.lang.String version>;

     label2:
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $z0 = virtualinvoke r1.<org.apache.lucene.index.SegmentInfo: boolean getUseCompoundFile()>();

        if $z0 == 0 goto label3;

        $c2 = 99;

        goto label4;

     label3:
        $c2 = 67;

     label4:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        $r9 = r1.<org.apache.lucene.index.SegmentInfo: org.apache.lucene.store.Directory dir>;

        if $r9 == r8 goto label5;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(120);

     label5:
        $i0 = r1.<org.apache.lucene.index.SegmentInfo: int docCount>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        if i1 == 0 goto label6;

        $r11 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

     label6:
        $r10 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.lucene.index.SegmentInfo r0, r2;
        org.apache.lucene.store.Directory $r3, $r4;
        java.lang.Object r1;
        java.lang.String $r5, $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.index.SegmentInfo;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.lucene.index.SegmentInfo;

        if $z0 == 0 goto label4;

        r2 = (org.apache.lucene.index.SegmentInfo) r1;

        $r4 = r2.<org.apache.lucene.index.SegmentInfo: org.apache.lucene.store.Directory dir>;

        $r3 = r0.<org.apache.lucene.index.SegmentInfo: org.apache.lucene.store.Directory dir>;

        if $r4 != $r3 goto label2;

        $r6 = r2.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r5 = r0.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;

     label4:
        return 0;
    }

    public int hashCode()
    {
        org.apache.lucene.index.SegmentInfo r0;
        org.apache.lucene.store.Directory $r1;
        int $i0, $i1, $i2;
        java.lang.String $r2;

        r0 := @this: org.apache.lucene.index.SegmentInfo;

        $r1 = r0.<org.apache.lucene.index.SegmentInfo: org.apache.lucene.store.Directory dir>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $r2 = r0.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $i2 = $i0 + $i1;

        return $i2;
    }

    public void setVersion(java.lang.String)
    {
        java.lang.String r1;
        org.apache.lucene.index.SegmentInfo r0;

        r0 := @this: org.apache.lucene.index.SegmentInfo;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.lucene.index.SegmentInfo: java.lang.String version> = r1;

        return;
    }

    public java.lang.String getVersion()
    {
        java.lang.String $r1;
        org.apache.lucene.index.SegmentInfo r0;

        r0 := @this: org.apache.lucene.index.SegmentInfo;

        $r1 = r0.<org.apache.lucene.index.SegmentInfo: java.lang.String version>;

        return $r1;
    }

    public void setFiles(java.util.Set)
    {
        java.util.Set r1;
        org.apache.lucene.index.SegmentInfo r0;

        r0 := @this: org.apache.lucene.index.SegmentInfo;

        r1 := @parameter0: java.util.Set;

        specialinvoke r0.<org.apache.lucene.index.SegmentInfo: void checkFileNames(java.util.Collection)>(r1);

        r0.<org.apache.lucene.index.SegmentInfo: java.util.Set setFiles> = r1;

        return;
    }

    public void addFiles(java.util.Collection)
    {
        java.util.Set $r2;
        org.apache.lucene.index.SegmentInfo r0;
        java.util.Collection r1;

        r0 := @this: org.apache.lucene.index.SegmentInfo;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<org.apache.lucene.index.SegmentInfo: void checkFileNames(java.util.Collection)>(r1);

        $r2 = r0.<org.apache.lucene.index.SegmentInfo: java.util.Set setFiles>;

        interfaceinvoke $r2.<java.util.Set: boolean addAll(java.util.Collection)>(r1);

        return;
    }

    public void addFile(java.lang.String)
    {
        org.apache.lucene.index.SegmentInfo r0;
        java.util.Set $r2, $r3;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.index.SegmentInfo;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.lucene.index.SegmentInfo: void checkFileNames(java.util.Collection)>($r2);

        $r3 = r0.<org.apache.lucene.index.SegmentInfo: java.util.Set setFiles>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    private void checkFileNames(java.util.Collection)
    {
        java.util.regex.Matcher $r1;
        java.lang.String r5, $r12, $r14;
        boolean $z0, $z1;
        java.util.Iterator $r3;
        java.util.Collection r2;
        org.apache.lucene.index.SegmentInfo r15;
        java.lang.IllegalArgumentException $r6;
        java.lang.Object $r4;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r13;
        java.util.regex.Pattern $r0, $r11;

        r15 := @this: org.apache.lucene.index.SegmentInfo;

        r2 := @parameter0: java.util.Collection;

        $r0 = <org.apache.lucene.index.IndexFileNames: java.util.regex.Pattern CODEC_FILE_PATTERN>;

        $r1 = virtualinvoke $r0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>("");

        $r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        virtualinvoke $r1.<java.util.regex.Matcher: java.util.regex.Matcher reset(java.lang.CharSequence)>(r5);

        $z1 = virtualinvoke $r1.<java.util.regex.Matcher: boolean matches()>();

        if $z1 != 0 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid codec filename \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', must match: ");

        $r11 = <org.apache.lucene.index.IndexFileNames: java.util.regex.Pattern CODEC_FILE_PATTERN>;

        $r12 = virtualinvoke $r11.<java.util.regex.Pattern: java.lang.String pattern()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r6;

     label2:
        goto label1;

     label3:
        return;
    }

    public java.lang.String getAttribute(java.lang.String)
    {
        org.apache.lucene.index.SegmentInfo r0;
        java.util.Map $r1, $r3;
        java.lang.Object $r4;
        java.lang.String r2, $r5;

        r0 := @this: org.apache.lucene.index.SegmentInfo;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.lucene.index.SegmentInfo: java.util.Map attributes>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<org.apache.lucene.index.SegmentInfo: java.util.Map attributes>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    public java.lang.String putAttribute(java.lang.String, java.lang.String)
    {
        org.apache.lucene.index.SegmentInfo r0;
        java.util.HashMap $r7;
        java.util.Map $r1, $r4;
        java.lang.Object $r5;
        java.lang.String r2, r3, $r6;

        r0 := @this: org.apache.lucene.index.SegmentInfo;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.lucene.index.SegmentInfo: java.util.Map attributes>;

        if $r1 != null goto label1;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.index.SegmentInfo: java.util.Map attributes> = $r7;

     label1:
        $r4 = r0.<org.apache.lucene.index.SegmentInfo: java.util.Map attributes>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        $r6 = (java.lang.String) $r5;

        return $r6;
    }

    public java.util.Map attributes()
    {
        org.apache.lucene.index.SegmentInfo r0;
        java.util.Map $r1;

        r0 := @this: org.apache.lucene.index.SegmentInfo;

        $r1 = r0.<org.apache.lucene.index.SegmentInfo: java.util.Map attributes>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.apache.lucene.index.SegmentInfo: int YES> = 1;

        <org.apache.lucene.index.SegmentInfo: int NO> = -1;

        $r0 = class "Lorg/apache/lucene/index/SegmentInfo;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.SegmentInfo: boolean $assertionsDisabled> = $z1;

        return;
    }
}
