public abstract class org.waveprotocol.wave.client.editor.content.PersistentContentView extends org.waveprotocol.wave.model.document.util.RepaintingPersistentContent implements org.waveprotocol.wave.client.editor.content.ContentView
{
    private final org.waveprotocol.wave.client.editor.content.ContentRawDocument inner;

    void <init>(org.waveprotocol.wave.client.editor.content.ContentRawDocument)
    {
        org.waveprotocol.wave.model.document.util.ElementManager $r2;
        org.waveprotocol.wave.client.editor.content.ContentRawDocument r1;
        org.waveprotocol.wave.client.editor.content.PersistentContentView r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.PersistentContentView;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentRawDocument;

        $r2 = <org.waveprotocol.wave.client.editor.content.ContentElement: org.waveprotocol.wave.model.document.util.ElementManager ELEMENT_MANAGER>;

        specialinvoke r0.<org.waveprotocol.wave.model.document.util.RepaintingPersistentContent: void <init>(org.waveprotocol.wave.model.document.raw.RawDocument,org.waveprotocol.wave.model.document.util.ElementManager)>(r1, $r2);

        r0.<org.waveprotocol.wave.client.editor.content.PersistentContentView: org.waveprotocol.wave.client.editor.content.ContentRawDocument inner> = r1;

        return;
    }

    void setAffectHtml()
    {
        org.waveprotocol.wave.client.editor.content.ContentRawDocument $r1;
        org.waveprotocol.wave.client.editor.content.PersistentContentView r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.PersistentContentView;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.PersistentContentView: org.waveprotocol.wave.client.editor.content.ContentRawDocument inner>;

        virtualinvoke $r1.<org.waveprotocol.wave.client.editor.content.ContentRawDocument: void setAffectHtml()>();

        return;
    }

    void clearAffectHtml()
    {
        org.waveprotocol.wave.client.editor.content.ContentRawDocument $r1;
        org.waveprotocol.wave.client.editor.content.PersistentContentView r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.PersistentContentView;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.PersistentContentView: org.waveprotocol.wave.client.editor.content.ContentRawDocument inner>;

        virtualinvoke $r1.<org.waveprotocol.wave.client.editor.content.ContentRawDocument: void clearAffectHtml()>();

        return;
    }
}
