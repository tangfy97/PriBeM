public class com.google.wave.api.Wavelet extends java.lang.Object implements java.io.Serializable
{
    private static final char ROBOT_ID_PROXY_DELIMITER;
    private static final char ROBOT_ID_VERSION_DELIMITER;
    private static final char ROBOT_ID_DOMAIN_DELIMITER;
    private transient org.waveprotocol.wave.model.id.WaveId waveId;
    private transient org.waveprotocol.wave.model.id.WaveletId waveletId;
    private java.lang.String serializedWaveId;
    private java.lang.String serializedWaveletId;
    private final java.lang.String creator;
    private final long creationTime;
    private final long lastModifiedTime;
    private final java.lang.String rootBlipId;
    private final com.google.wave.api.BlipThread rootThread;
    private final com.google.wave.api.Participants participants;
    private final com.google.wave.api.DataDocuments dataDocuments;
    private final com.google.wave.api.Tags tags;
    private java.lang.String title;
    private final java.util.Map blips;
    private final java.util.Map threads;
    private final com.google.wave.api.OperationQueue operationQueue;
    private java.lang.String robotAddress;

    void <init>(org.waveprotocol.wave.model.id.WaveId, org.waveprotocol.wave.model.id.WaveletId, java.lang.String, long, long, java.lang.String, java.lang.String, com.google.wave.api.BlipThread, java.util.Map, java.util.Set, java.util.Map, java.util.Set, java.util.Map, java.util.Map, com.google.wave.api.OperationQueue)
    {
        org.waveprotocol.wave.model.id.WaveletId r2;
        long l0, l1;
        com.google.wave.api.Wavelet r0;
        java.util.Map r9, r12, r15, r16;
        java.lang.String r3, r4, r5;
        com.google.wave.api.Tags $r13;
        com.google.wave.api.DataDocuments $r11;
        org.waveprotocol.wave.model.id.WaveId r1;
        java.util.Set r8, r14;
        com.google.wave.api.BlipThread r6;
        com.google.wave.api.OperationQueue r10;
        com.google.wave.api.Participants $r7;

        r0 := @this: com.google.wave.api.Wavelet;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveId;

        r2 := @parameter1: org.waveprotocol.wave.model.id.WaveletId;

        r3 := @parameter2: java.lang.String;

        l0 := @parameter3: long;

        l1 := @parameter4: long;

        r4 := @parameter5: java.lang.String;

        r5 := @parameter6: java.lang.String;

        r6 := @parameter7: com.google.wave.api.BlipThread;

        r9 := @parameter8: java.util.Map;

        r8 := @parameter9: java.util.Set;

        r12 := @parameter10: java.util.Map;

        r14 := @parameter11: java.util.Set;

        r15 := @parameter12: java.util.Map;

        r16 := @parameter13: java.util.Map;

        r10 := @parameter14: com.google.wave.api.OperationQueue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveId waveId> = r1;

        r0.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveletId waveletId> = r2;

        r0.<com.google.wave.api.Wavelet: java.lang.String creator> = r3;

        r0.<com.google.wave.api.Wavelet: long creationTime> = l0;

        r0.<com.google.wave.api.Wavelet: long lastModifiedTime> = l1;

        r0.<com.google.wave.api.Wavelet: java.lang.String title> = r4;

        r0.<com.google.wave.api.Wavelet: java.lang.String rootBlipId> = r5;

        r0.<com.google.wave.api.Wavelet: com.google.wave.api.BlipThread rootThread> = r6;

        $r7 = new com.google.wave.api.Participants;

        specialinvoke $r7.<com.google.wave.api.Participants: void <init>(java.util.Collection,java.util.Map,com.google.wave.api.Wavelet,com.google.wave.api.OperationQueue)>(r8, r9, r0, r10);

        r0.<com.google.wave.api.Wavelet: com.google.wave.api.Participants participants> = $r7;

        $r11 = new com.google.wave.api.DataDocuments;

        specialinvoke $r11.<com.google.wave.api.DataDocuments: void <init>(java.util.Map,com.google.wave.api.Wavelet,com.google.wave.api.OperationQueue)>(r12, r0, r10);

        r0.<com.google.wave.api.Wavelet: com.google.wave.api.DataDocuments dataDocuments> = $r11;

        $r13 = new com.google.wave.api.Tags;

        specialinvoke $r13.<com.google.wave.api.Tags: void <init>(java.util.Collection,com.google.wave.api.Wavelet,com.google.wave.api.OperationQueue)>(r14, r0, r10);

        r0.<com.google.wave.api.Wavelet: com.google.wave.api.Tags tags> = $r13;

        r0.<com.google.wave.api.Wavelet: java.util.Map blips> = r15;

        r0.<com.google.wave.api.Wavelet: java.util.Map threads> = r16;

        r0.<com.google.wave.api.Wavelet: com.google.wave.api.OperationQueue operationQueue> = r10;

        return;
    }

    void <init>(org.waveprotocol.wave.model.id.WaveId, org.waveprotocol.wave.model.id.WaveletId, java.lang.String, com.google.wave.api.BlipThread, java.util.Set, java.util.Map, java.util.Map, java.util.Map, com.google.wave.api.OperationQueue)
    {
        org.waveprotocol.wave.model.id.WaveId r1;
        java.util.Set r6, $r12;
        org.waveprotocol.wave.model.id.WaveletId r2;
        java.util.HashMap $r10;
        com.google.wave.api.BlipThread r4;
        com.google.wave.api.Wavelet r0;
        com.google.wave.api.OperationQueue r8;
        java.util.Map r7, r13, r14;
        java.lang.String r3;
        com.google.wave.api.Tags $r11;
        com.google.wave.api.Participants $r5;
        com.google.wave.api.DataDocuments $r9;

        r0 := @this: com.google.wave.api.Wavelet;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveId;

        r2 := @parameter1: org.waveprotocol.wave.model.id.WaveletId;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: com.google.wave.api.BlipThread;

        r6 := @parameter4: java.util.Set;

        r7 := @parameter5: java.util.Map;

        r13 := @parameter6: java.util.Map;

        r14 := @parameter7: java.util.Map;

        r8 := @parameter8: com.google.wave.api.OperationQueue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveId waveId> = r1;

        r0.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveletId waveletId> = r2;

        r0.<com.google.wave.api.Wavelet: java.lang.String rootBlipId> = r3;

        r0.<com.google.wave.api.Wavelet: com.google.wave.api.BlipThread rootThread> = r4;

        r0.<com.google.wave.api.Wavelet: java.lang.String creator> = null;

        r0.<com.google.wave.api.Wavelet: long creationTime> = -1L;

        r0.<com.google.wave.api.Wavelet: long lastModifiedTime> = -1L;

        r0.<com.google.wave.api.Wavelet: java.lang.String title> = null;

        $r5 = new com.google.wave.api.Participants;

        specialinvoke $r5.<com.google.wave.api.Participants: void <init>(java.util.Collection,java.util.Map,com.google.wave.api.Wavelet,com.google.wave.api.OperationQueue)>(r6, r7, r0, r8);

        r0.<com.google.wave.api.Wavelet: com.google.wave.api.Participants participants> = $r5;

        $r9 = new com.google.wave.api.DataDocuments;

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        specialinvoke $r9.<com.google.wave.api.DataDocuments: void <init>(java.util.Map,com.google.wave.api.Wavelet,com.google.wave.api.OperationQueue)>($r10, r0, r8);

        r0.<com.google.wave.api.Wavelet: com.google.wave.api.DataDocuments dataDocuments> = $r9;

        $r11 = new com.google.wave.api.Tags;

        $r12 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        specialinvoke $r11.<com.google.wave.api.Tags: void <init>(java.util.Collection,com.google.wave.api.Wavelet,com.google.wave.api.OperationQueue)>($r12, r0, r8);

        r0.<com.google.wave.api.Wavelet: com.google.wave.api.Tags tags> = $r11;

        r0.<com.google.wave.api.Wavelet: java.util.Map blips> = r13;

        r0.<com.google.wave.api.Wavelet: java.util.Map threads> = r14;

        r0.<com.google.wave.api.Wavelet: com.google.wave.api.OperationQueue operationQueue> = r8;

        return;
    }

    private void <init>(com.google.wave.api.Wavelet, com.google.wave.api.OperationQueue)
    {
        org.waveprotocol.wave.model.id.WaveletId $r3;
        long $l0, $l1;
        com.google.wave.api.Wavelet r0, r1;
        java.util.Map $r11, $r12;
        java.lang.String $r4, $r5, $r6, $r13;
        com.google.wave.api.Tags $r10;
        com.google.wave.api.DataDocuments $r9;
        org.waveprotocol.wave.model.id.WaveId $r2;
        com.google.wave.api.BlipThread $r7;
        com.google.wave.api.OperationQueue r14;
        com.google.wave.api.Participants $r8;

        r0 := @this: com.google.wave.api.Wavelet;

        r1 := @parameter0: com.google.wave.api.Wavelet;

        r14 := @parameter1: com.google.wave.api.OperationQueue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveId waveId>;

        r0.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveId waveId> = $r2;

        $r3 = r1.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveletId waveletId>;

        r0.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveletId waveletId> = $r3;

        $r4 = r1.<com.google.wave.api.Wavelet: java.lang.String creator>;

        r0.<com.google.wave.api.Wavelet: java.lang.String creator> = $r4;

        $l0 = r1.<com.google.wave.api.Wavelet: long creationTime>;

        r0.<com.google.wave.api.Wavelet: long creationTime> = $l0;

        $l1 = r1.<com.google.wave.api.Wavelet: long lastModifiedTime>;

        r0.<com.google.wave.api.Wavelet: long lastModifiedTime> = $l1;

        $r5 = r1.<com.google.wave.api.Wavelet: java.lang.String title>;

        r0.<com.google.wave.api.Wavelet: java.lang.String title> = $r5;

        $r6 = r1.<com.google.wave.api.Wavelet: java.lang.String rootBlipId>;

        r0.<com.google.wave.api.Wavelet: java.lang.String rootBlipId> = $r6;

        $r7 = r1.<com.google.wave.api.Wavelet: com.google.wave.api.BlipThread rootThread>;

        r0.<com.google.wave.api.Wavelet: com.google.wave.api.BlipThread rootThread> = $r7;

        $r8 = r1.<com.google.wave.api.Wavelet: com.google.wave.api.Participants participants>;

        r0.<com.google.wave.api.Wavelet: com.google.wave.api.Participants participants> = $r8;

        $r9 = r1.<com.google.wave.api.Wavelet: com.google.wave.api.DataDocuments dataDocuments>;

        r0.<com.google.wave.api.Wavelet: com.google.wave.api.DataDocuments dataDocuments> = $r9;

        $r10 = r1.<com.google.wave.api.Wavelet: com.google.wave.api.Tags tags>;

        r0.<com.google.wave.api.Wavelet: com.google.wave.api.Tags tags> = $r10;

        $r11 = r1.<com.google.wave.api.Wavelet: java.util.Map blips>;

        r0.<com.google.wave.api.Wavelet: java.util.Map blips> = $r11;

        $r12 = r1.<com.google.wave.api.Wavelet: java.util.Map threads>;

        r0.<com.google.wave.api.Wavelet: java.util.Map threads> = $r12;

        $r13 = r1.<com.google.wave.api.Wavelet: java.lang.String robotAddress>;

        r0.<com.google.wave.api.Wavelet: java.lang.String robotAddress> = $r13;

        r0.<com.google.wave.api.Wavelet: com.google.wave.api.OperationQueue operationQueue> = r14;

        return;
    }

    public org.waveprotocol.wave.model.id.WaveId getWaveId()
    {
        org.waveprotocol.wave.model.id.WaveId $r1;
        com.google.wave.api.Wavelet r0;

        r0 := @this: com.google.wave.api.Wavelet;

        $r1 = r0.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveId waveId>;

        return $r1;
    }

    public org.waveprotocol.wave.model.id.WaveletId getWaveletId()
    {
        org.waveprotocol.wave.model.id.WaveletId $r1;
        com.google.wave.api.Wavelet r0;

        r0 := @this: com.google.wave.api.Wavelet;

        $r1 = r0.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveletId waveletId>;

        return $r1;
    }

    public java.lang.String getCreator()
    {
        java.lang.String $r1;
        com.google.wave.api.Wavelet r0;

        r0 := @this: com.google.wave.api.Wavelet;

        $r1 = r0.<com.google.wave.api.Wavelet: java.lang.String creator>;

        return $r1;
    }

    public long getCreationTime()
    {
        long $l0;
        com.google.wave.api.Wavelet r0;

        r0 := @this: com.google.wave.api.Wavelet;

        $l0 = r0.<com.google.wave.api.Wavelet: long creationTime>;

        return $l0;
    }

    public long getLastModifiedTime()
    {
        long $l0;
        com.google.wave.api.Wavelet r0;

        r0 := @this: com.google.wave.api.Wavelet;

        $l0 = r0.<com.google.wave.api.Wavelet: long lastModifiedTime>;

        return $l0;
    }

    public com.google.wave.api.DataDocuments getDataDocuments()
    {
        com.google.wave.api.Wavelet r0;
        com.google.wave.api.DataDocuments $r1;

        r0 := @this: com.google.wave.api.Wavelet;

        $r1 = r0.<com.google.wave.api.Wavelet: com.google.wave.api.DataDocuments dataDocuments>;

        return $r1;
    }

    public com.google.wave.api.Participants getParticipants()
    {
        com.google.wave.api.Wavelet r0;
        com.google.wave.api.Participants $r1;

        r0 := @this: com.google.wave.api.Wavelet;

        $r1 = r0.<com.google.wave.api.Wavelet: com.google.wave.api.Participants participants>;

        return $r1;
    }

    public com.google.wave.api.Tags getTags()
    {
        com.google.wave.api.Wavelet r0;
        com.google.wave.api.Tags $r1;

        r0 := @this: com.google.wave.api.Wavelet;

        $r1 = r0.<com.google.wave.api.Wavelet: com.google.wave.api.Tags tags>;

        return $r1;
    }

    public java.lang.String getTitle()
    {
        java.lang.String $r1;
        com.google.wave.api.Wavelet r0;

        r0 := @this: com.google.wave.api.Wavelet;

        $r1 = r0.<com.google.wave.api.Wavelet: java.lang.String title>;

        return $r1;
    }

    public void setTitle(java.lang.String)
    {
        com.google.wave.api.Wavelet r1;
        com.google.wave.api.Blip $r3;
        int $i0, $i2;
        java.lang.String r0, $r4, $r9, $r10, $r15, r16;
        boolean $z0;
        java.lang.IllegalArgumentException $r18;
        com.google.wave.api.OperationQueue $r2;
        java.lang.StringBuilder $r6, $r7, $r8, $r13, $r14, $r17, $r19;

        r1 := @this: com.google.wave.api.Wavelet;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("\n");

        if $z0 == 0 goto label1;

        $r18 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wavelet title should not contain a newline character. Specified: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r18;

     label1:
        $r2 = r1.<com.google.wave.api.Wavelet: com.google.wave.api.OperationQueue operationQueue>;

        virtualinvoke $r2.<com.google.wave.api.OperationQueue: void setTitleOfWavelet(com.google.wave.api.Wavelet,java.lang.String)>(r1, r0);

        r1.<com.google.wave.api.Wavelet: java.lang.String title> = r0;

        $r3 = virtualinvoke r1.<com.google.wave.api.Wavelet: com.google.wave.api.Blip getRootBlip()>();

        if $r3 == null goto label3;

        r16 = "\n";

        $r4 = virtualinvoke $r3.<com.google.wave.api.Blip: java.lang.String getContent()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int indexOf(int,int)>(10, 1);

        $i2 = (int) -1;

        if $i0 == $i2 goto label2;

        $r10 = virtualinvoke $r3.<com.google.wave.api.Blip: java.lang.String getContent()>();

        r16 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int)>($i0);

     label2:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.google.wave.api.Blip: void setContent(java.lang.String)>($r9);

     label3:
        return;
    }

    public java.lang.String getRobotAddress()
    {
        java.lang.String $r1;
        com.google.wave.api.Wavelet r0;

        r0 := @this: com.google.wave.api.Wavelet;

        $r1 = r0.<com.google.wave.api.Wavelet: java.lang.String robotAddress>;

        return $r1;
    }

    public void setRobotAddress(java.lang.String)
    {
        java.lang.IllegalStateException $r3;
        com.google.wave.api.Wavelet r0;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r1, r2, $r6, $r8;

        r0 := @this: com.google.wave.api.Wavelet;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.google.wave.api.Wavelet: java.lang.String robotAddress>;

        if $r1 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Robot address has been set previously to ");

        $r6 = r0.<com.google.wave.api.Wavelet: java.lang.String robotAddress>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label1:
        r0.<com.google.wave.api.Wavelet: java.lang.String robotAddress> = r2;

        return;
    }

    public java.lang.String getRootBlipId()
    {
        java.lang.String $r1;
        com.google.wave.api.Wavelet r0;

        r0 := @this: com.google.wave.api.Wavelet;

        $r1 = r0.<com.google.wave.api.Wavelet: java.lang.String rootBlipId>;

        return $r1;
    }

    public com.google.wave.api.Blip getRootBlip()
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String $r1;
        com.google.wave.api.Wavelet r0;
        com.google.wave.api.Blip $r4;

        r0 := @this: com.google.wave.api.Wavelet;

        $r2 = r0.<com.google.wave.api.Wavelet: java.util.Map blips>;

        $r1 = r0.<com.google.wave.api.Wavelet: java.lang.String rootBlipId>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.google.wave.api.Blip) $r3;

        return $r4;
    }

    public com.google.wave.api.BlipThread getRootThread()
    {
        com.google.wave.api.BlipThread $r1;
        com.google.wave.api.Wavelet r0;

        r0 := @this: com.google.wave.api.Wavelet;

        $r1 = r0.<com.google.wave.api.Wavelet: com.google.wave.api.BlipThread rootThread>;

        return $r1;
    }

    public com.google.wave.api.Blip getBlip(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        com.google.wave.api.Wavelet r0;
        com.google.wave.api.Blip $r4;

        r0 := @this: com.google.wave.api.Wavelet;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.google.wave.api.Wavelet: java.util.Map blips>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.google.wave.api.Blip) $r3;

        return $r4;
    }

    public java.util.Map getBlips()
    {
        com.google.wave.api.Wavelet r0;
        java.util.Map $r1;

        r0 := @this: com.google.wave.api.Wavelet;

        $r1 = r0.<com.google.wave.api.Wavelet: java.util.Map blips>;

        return $r1;
    }

    public com.google.wave.api.BlipThread getThread(java.lang.String)
    {
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.String r0;
        com.google.wave.api.BlipThread $r2, $r5;
        com.google.wave.api.Wavelet r1;
        boolean $z0;

        r1 := @this: com.google.wave.api.Wavelet;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r2 = virtualinvoke r1.<com.google.wave.api.Wavelet: com.google.wave.api.BlipThread getRootThread()>();

        return $r2;

     label2:
        $r3 = r1.<com.google.wave.api.Wavelet: java.util.Map threads>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r5 = (com.google.wave.api.BlipThread) $r4;

        return $r5;
    }

    public java.util.Map getThreads()
    {
        com.google.wave.api.Wavelet r0;
        java.util.Map $r1;

        r0 := @this: com.google.wave.api.Wavelet;

        $r1 = r0.<com.google.wave.api.Wavelet: java.util.Map threads>;

        return $r1;
    }

    protected void addThread(com.google.wave.api.BlipThread)
    {
        java.util.Map $r2;
        java.lang.String $r3;
        com.google.wave.api.BlipThread r1;
        com.google.wave.api.Wavelet r0;

        r0 := @this: com.google.wave.api.Wavelet;

        r1 := @parameter0: com.google.wave.api.BlipThread;

        $r2 = r0.<com.google.wave.api.Wavelet: java.util.Map threads>;

        $r3 = virtualinvoke r1.<com.google.wave.api.BlipThread: java.lang.String getId()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);

        return;
    }

    protected com.google.wave.api.OperationQueue getOperationQueue()
    {
        com.google.wave.api.OperationQueue $r1;
        com.google.wave.api.Wavelet r0;

        r0 := @this: com.google.wave.api.Wavelet;

        $r1 = r0.<com.google.wave.api.Wavelet: com.google.wave.api.OperationQueue operationQueue>;

        return $r1;
    }

    public java.lang.String getDomain()
    {
        java.lang.String $r2;
        org.waveprotocol.wave.model.id.WaveId $r1;
        com.google.wave.api.Wavelet r0;

        r0 := @this: com.google.wave.api.Wavelet;

        $r1 = r0.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveId waveId>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.id.WaveId: java.lang.String getDomain()>();

        return $r2;
    }

    public com.google.wave.api.Wavelet proxyFor(java.lang.String)
    {
        com.google.wave.api.OperationQueue $r2, $r3;
        java.lang.String r0;
        com.google.wave.api.Wavelet r1, $r4;

        r1 := @this: com.google.wave.api.Wavelet;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.google.wave.api.Util: void checkIsValidProxyForId(java.lang.String)>(r0);

        specialinvoke r1.<com.google.wave.api.Wavelet: void addProxyingParticipant(java.lang.String)>(r0);

        $r2 = r1.<com.google.wave.api.Wavelet: com.google.wave.api.OperationQueue operationQueue>;

        $r3 = virtualinvoke $r2.<com.google.wave.api.OperationQueue: com.google.wave.api.OperationQueue proxyFor(java.lang.String)>(r0);

        $r4 = new com.google.wave.api.Wavelet;

        specialinvoke $r4.<com.google.wave.api.Wavelet: void <init>(com.google.wave.api.Wavelet,com.google.wave.api.OperationQueue)>(r1, $r3);

        return $r4;
    }

    public void submitWith(com.google.wave.api.Wavelet)
    {
        com.google.wave.api.OperationQueue $r2, $r3;
        com.google.wave.api.Wavelet r0, r1;

        r0 := @this: com.google.wave.api.Wavelet;

        r1 := @parameter0: com.google.wave.api.Wavelet;

        $r3 = r0.<com.google.wave.api.Wavelet: com.google.wave.api.OperationQueue operationQueue>;

        $r2 = r1.<com.google.wave.api.Wavelet: com.google.wave.api.OperationQueue operationQueue>;

        virtualinvoke $r3.<com.google.wave.api.OperationQueue: void submitWith(com.google.wave.api.OperationQueue)>($r2);

        return;
    }

    public com.google.wave.api.Blip reply(java.lang.String)
    {
        com.google.wave.api.OperationQueue $r3;
        java.lang.String r0;
        java.lang.IllegalArgumentException $r1;
        com.google.wave.api.Wavelet r2;
        com.google.wave.api.Blip $r4;
        boolean $z0;

        r2 := @this: com.google.wave.api.Wavelet;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("\n");

        if $z0 != 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Initial content should start with a newline character");

        throw $r1;

     label2:
        $r3 = r2.<com.google.wave.api.Wavelet: com.google.wave.api.OperationQueue operationQueue>;

        $r4 = virtualinvoke $r3.<com.google.wave.api.OperationQueue: com.google.wave.api.Blip appendBlipToWavelet(com.google.wave.api.Wavelet,java.lang.String)>(r2, r0);

        return $r4;
    }

    public void delete(com.google.wave.api.Blip)
    {
        java.lang.String $r2;
        com.google.wave.api.Wavelet r0;
        com.google.wave.api.Blip r1;

        r0 := @this: com.google.wave.api.Wavelet;

        r1 := @parameter0: com.google.wave.api.Blip;

        $r2 = virtualinvoke r1.<com.google.wave.api.Blip: java.lang.String getBlipId()>();

        virtualinvoke r0.<com.google.wave.api.Wavelet: void delete(java.lang.String)>($r2);

        return;
    }

    public void delete(java.lang.String)
    {
        com.google.wave.api.BlipThread $r7;
        com.google.wave.api.Wavelet r0;
        com.google.wave.api.Blip r5, $r6;
        com.google.wave.api.OperationQueue $r2;
        java.util.Map $r3, $r8;
        java.lang.Object $r4;
        java.lang.String r1, $r9;
        boolean $z0;

        r0 := @this: com.google.wave.api.Wavelet;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.google.wave.api.Wavelet: com.google.wave.api.OperationQueue operationQueue>;

        virtualinvoke $r2.<com.google.wave.api.OperationQueue: void deleteBlip(com.google.wave.api.Wavelet,java.lang.String)>(r0, r1);

        $r3 = r0.<com.google.wave.api.Wavelet: java.util.Map blips>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r5 = (com.google.wave.api.Blip) $r4;

        if r5 == null goto label3;

        $r6 = virtualinvoke r5.<com.google.wave.api.Blip: com.google.wave.api.Blip getParentBlip()>();

        if $r6 == null goto label1;

        virtualinvoke $r6.<com.google.wave.api.Blip: void deleteChildBlipId(java.lang.String)>(r1);

     label1:
        $r7 = virtualinvoke r5.<com.google.wave.api.Blip: com.google.wave.api.BlipThread getThread()>();

        if $r7 == null goto label2;

        virtualinvoke $r7.<com.google.wave.api.BlipThread: boolean removeBlip(com.google.wave.api.Blip)>(r5);

     label2:
        if $r7 == null goto label3;

        if $r6 == null goto label3;

        $z0 = virtualinvoke $r7.<com.google.wave.api.BlipThread: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        virtualinvoke $r6.<com.google.wave.api.Blip: void removeThread(com.google.wave.api.BlipThread)>($r7);

        $r8 = r0.<com.google.wave.api.Wavelet: java.util.Map threads>;

        $r9 = virtualinvoke $r7.<com.google.wave.api.BlipThread: java.lang.String getId()>();

        interfaceinvoke $r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r9);

     label3:
        return;
    }

    private void addProxyingParticipant(java.lang.String)
    {
        java.lang.IllegalStateException $r28;
        com.google.wave.api.Wavelet r0;
        boolean $z0;
        java.lang.StringBuilder $r10, $r11, $r13, $r16, $r17, $r18, $r22, $r23, $r24, $r29, $r30, $r31;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i8;
        java.lang.String $r1, $r3, $r4, $r5, $r6, $r7, $r8, r12, $r14, $r19, r25, r26, r27;
        com.google.wave.api.Participants $r20;

        r0 := @this: com.google.wave.api.Wavelet;

        r12 := @parameter0: java.lang.String;

        $r1 = r0.<com.google.wave.api.Wavelet: java.lang.String robotAddress>;

        if $r1 == null goto label1;

        $r3 = r0.<com.google.wave.api.Wavelet: java.lang.String robotAddress>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r28 = new java.lang.IllegalStateException;

        specialinvoke $r28.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Need a robot address to add a proxying for participant.");

        throw $r28;

     label2:
        $r4 = r0.<com.google.wave.api.Wavelet: java.lang.String robotAddress>;

        $i0 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>(64);

        $r5 = r0.<com.google.wave.api.Wavelet: java.lang.String robotAddress>;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r25 = $r6;

        $r7 = r0.<com.google.wave.api.Wavelet: java.lang.String robotAddress>;

        $i1 = $i0 + 1;

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>($i1);

        r26 = null;

        $i2 = virtualinvoke $r6.<java.lang.String: int indexOf(int)>(35);

        $i6 = (int) -1;

        if $i2 == $i6 goto label3;

        $i4 = $i2 + 1;

        r26 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>($i4);

        r25 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

     label3:
        $i3 = virtualinvoke r25.<java.lang.String: int indexOf(int)>(43);

        $i8 = (int) -1;

        if $i3 == $i8 goto label4;

        r25 = virtualinvoke r25.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

     label4:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(43);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        r27 = $r14;

        if r26 == null goto label5;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(35);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = r0.<com.google.wave.api.Wavelet: com.google.wave.api.Participants participants>;

        virtualinvoke $r20.<com.google.wave.api.Participants: boolean add(java.lang.String)>($r19);

        return;
    }

    public com.google.wave.api.impl.WaveletData serialize()
    {
        com.google.wave.api.Wavelet r2;
        boolean $z0, $z1, $z2;
        com.google.wave.api.DataDocuments $r19;
        org.waveprotocol.wave.model.id.WaveId $r3;
        com.google.wave.api.BlipThread $r10;
        org.waveprotocol.wave.model.id.WaveletId $r6;
        long $l0, $l1;
        java.util.HashMap $r18;
        com.google.wave.api.impl.WaveletData $r0;
        java.util.ArrayList $r12, $r15;
        java.lang.String $r4, $r7, $r8, $r9, $r11, $r27, r29, r30;
        org.waveprotocol.wave.model.id.IdSerialiser $r1, $r5;
        com.google.wave.api.Tags $r13;
        java.util.Map$Entry r31;
        java.util.Iterator $r14, $r17, $r20;
        com.google.wave.api.Participants$Role $r26;
        java.lang.Object $r21, $r22, $r23, $r24, $r28;
        com.google.wave.api.Participants $r16, $r25;

        r2 := @this: com.google.wave.api.Wavelet;

        $r0 = new com.google.wave.api.impl.WaveletData;

        specialinvoke $r0.<com.google.wave.api.impl.WaveletData: void <init>()>();

        $r1 = staticinvoke <com.google.wave.api.ApiIdSerializer: org.waveprotocol.wave.model.id.IdSerialiser instance()>();

        $r3 = r2.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveId waveId>;

        $r4 = interfaceinvoke $r1.<org.waveprotocol.wave.model.id.IdSerialiser: java.lang.String serialiseWaveId(org.waveprotocol.wave.model.id.WaveId)>($r3);

        virtualinvoke $r0.<com.google.wave.api.impl.WaveletData: void setWaveId(java.lang.String)>($r4);

        $r5 = staticinvoke <com.google.wave.api.ApiIdSerializer: org.waveprotocol.wave.model.id.IdSerialiser instance()>();

        $r6 = r2.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveletId waveletId>;

        $r7 = interfaceinvoke $r5.<org.waveprotocol.wave.model.id.IdSerialiser: java.lang.String serialiseWaveletId(org.waveprotocol.wave.model.id.WaveletId)>($r6);

        virtualinvoke $r0.<com.google.wave.api.impl.WaveletData: void setWaveletId(java.lang.String)>($r7);

        $r8 = r2.<com.google.wave.api.Wavelet: java.lang.String creator>;

        virtualinvoke $r0.<com.google.wave.api.impl.WaveletData: void setCreator(java.lang.String)>($r8);

        $l0 = r2.<com.google.wave.api.Wavelet: long creationTime>;

        virtualinvoke $r0.<com.google.wave.api.impl.WaveletData: void setCreationTime(long)>($l0);

        $l1 = r2.<com.google.wave.api.Wavelet: long lastModifiedTime>;

        virtualinvoke $r0.<com.google.wave.api.impl.WaveletData: void setLastModifiedTime(long)>($l1);

        $r9 = r2.<com.google.wave.api.Wavelet: java.lang.String rootBlipId>;

        virtualinvoke $r0.<com.google.wave.api.impl.WaveletData: void setRootBlipId(java.lang.String)>($r9);

        $r10 = r2.<com.google.wave.api.Wavelet: com.google.wave.api.BlipThread rootThread>;

        virtualinvoke $r0.<com.google.wave.api.impl.WaveletData: void setRootThread(com.google.wave.api.BlipThread)>($r10);

        $r11 = r2.<com.google.wave.api.Wavelet: java.lang.String title>;

        virtualinvoke $r0.<com.google.wave.api.impl.WaveletData: void setTitle(java.lang.String)>($r11);

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        $r13 = r2.<com.google.wave.api.Wavelet: com.google.wave.api.Tags tags>;

        $r14 = virtualinvoke $r13.<com.google.wave.api.Tags: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r28 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r29 = (java.lang.String) $r28;

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r29);

        goto label1;

     label2:
        virtualinvoke $r0.<com.google.wave.api.impl.WaveletData: void setTags(java.util.List)>($r12);

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        $r16 = r2.<com.google.wave.api.Wavelet: com.google.wave.api.Participants participants>;

        $r17 = virtualinvoke $r16.<com.google.wave.api.Participants: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r24 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r30 = (java.lang.String) $r24;

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(r30);

        $r25 = virtualinvoke r2.<com.google.wave.api.Wavelet: com.google.wave.api.Participants getParticipants()>();

        $r26 = virtualinvoke $r25.<com.google.wave.api.Participants: com.google.wave.api.Participants$Role getParticipantRole(java.lang.String)>(r30);

        $r27 = virtualinvoke $r26.<com.google.wave.api.Participants$Role: java.lang.String name()>();

        virtualinvoke $r0.<com.google.wave.api.impl.WaveletData: void setParticipantRole(java.lang.String,java.lang.String)>(r30, $r27);

        goto label3;

     label4:
        virtualinvoke $r0.<com.google.wave.api.impl.WaveletData: void setParticipants(java.util.List)>($r15);

        $r18 = new java.util.HashMap;

        specialinvoke $r18.<java.util.HashMap: void <init>()>();

        $r19 = r2.<com.google.wave.api.Wavelet: com.google.wave.api.DataDocuments dataDocuments>;

        $r20 = virtualinvoke $r19.<com.google.wave.api.DataDocuments: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r21 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        r31 = (java.util.Map$Entry) $r21;

        $r22 = interfaceinvoke r31.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r23 = interfaceinvoke r31.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r23);

        goto label5;

     label6:
        virtualinvoke $r0.<com.google.wave.api.impl.WaveletData: void setDataDocuments(java.util.Map)>($r18);

        return $r0;
    }

    public static com.google.wave.api.Wavelet deserialize(com.google.wave.api.OperationQueue, java.util.Map, java.util.Map, com.google.wave.api.impl.WaveletData)
    {
        org.waveprotocol.wave.model.id.WaveletId $r6;
        long $l0, $l1;
        com.google.wave.api.impl.WaveletData r1;
        com.google.wave.api.Wavelet $r32;
        java.util.ArrayList $r25, $r27, $r28;
        java.util.Map r12, $r18, $r19, r21;
        int $i3;
        java.lang.String $r2, $r5, $r7, $r8, $r13;
        org.waveprotocol.wave.model.id.IdSerialiser $r0, $r4;
        java.util.LinkedHashSet $r30, $r31;
        org.waveprotocol.wave.model.id.WaveId $r3;
        org.waveprotocol.wave.model.id.InvalidIdException $r23;
        java.lang.IllegalArgumentException $r26;
        com.google.wave.api.BlipThread $r9, $r29;
        java.util.List $r10, $r15, $r17;
        com.google.wave.api.OperationQueue r22;

        r22 := @parameter0: com.google.wave.api.OperationQueue;

        r12 := @parameter1: java.util.Map;

        r21 := @parameter2: java.util.Map;

        r1 := @parameter3: com.google.wave.api.impl.WaveletData;

     label1:
        $r0 = staticinvoke <com.google.wave.api.ApiIdSerializer: org.waveprotocol.wave.model.id.IdSerialiser instance()>();

        $r2 = virtualinvoke r1.<com.google.wave.api.impl.WaveletData: java.lang.String getWaveId()>();

        $r3 = interfaceinvoke $r0.<org.waveprotocol.wave.model.id.IdSerialiser: org.waveprotocol.wave.model.id.WaveId deserialiseWaveId(java.lang.String)>($r2);

        $r4 = staticinvoke <com.google.wave.api.ApiIdSerializer: org.waveprotocol.wave.model.id.IdSerialiser instance()>();

        $r5 = virtualinvoke r1.<com.google.wave.api.impl.WaveletData: java.lang.String getWaveletId()>();

        $r6 = interfaceinvoke $r4.<org.waveprotocol.wave.model.id.IdSerialiser: org.waveprotocol.wave.model.id.WaveletId deserialiseWaveletId(java.lang.String)>($r5);

     label2:
        goto label4;

     label3:
        $r23 := @caughtexception;

        $r26 = new java.lang.IllegalArgumentException;

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r23);

        throw $r26;

     label4:
        $r7 = virtualinvoke r1.<com.google.wave.api.impl.WaveletData: java.lang.String getCreator()>();

        $l0 = virtualinvoke r1.<com.google.wave.api.impl.WaveletData: long getCreationTime()>();

        $l1 = virtualinvoke r1.<com.google.wave.api.impl.WaveletData: long getLastModifiedTime()>();

        $r8 = virtualinvoke r1.<com.google.wave.api.impl.WaveletData: java.lang.String getRootBlipId()>();

        $r9 = virtualinvoke r1.<com.google.wave.api.impl.WaveletData: com.google.wave.api.BlipThread getRootThread()>();

        if $r9 != null goto label5;

        $r27 = new java.util.ArrayList;

        $r25 = $r27;

        specialinvoke $r27.<java.util.ArrayList: void <init>()>();

        goto label6;

     label5:
        $r28 = new java.util.ArrayList;

        $r25 = $r28;

        $r10 = virtualinvoke $r9.<com.google.wave.api.BlipThread: java.util.List getBlipIds()>();

        specialinvoke $r28.<java.util.ArrayList: void <init>(java.util.Collection)>($r10);

     label6:
        $r29 = new com.google.wave.api.BlipThread;

        $i3 = (int) -1;

        specialinvoke $r29.<com.google.wave.api.BlipThread: void <init>(java.lang.String,int,java.util.List,java.util.Map)>("", $i3, $r25, r12);

        $r13 = virtualinvoke r1.<com.google.wave.api.impl.WaveletData: java.lang.String getTitle()>();

        $r30 = new java.util.LinkedHashSet;

        $r15 = virtualinvoke r1.<com.google.wave.api.impl.WaveletData: java.util.List getParticipants()>();

        specialinvoke $r30.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r15);

        $r31 = new java.util.LinkedHashSet;

        $r17 = virtualinvoke r1.<com.google.wave.api.impl.WaveletData: java.util.List getTags()>();

        specialinvoke $r31.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r17);

        $r18 = virtualinvoke r1.<com.google.wave.api.impl.WaveletData: java.util.Map getDataDocuments()>();

        $r19 = virtualinvoke r1.<com.google.wave.api.impl.WaveletData: java.util.Map getParticipantRoles()>();

        $r32 = new com.google.wave.api.Wavelet;

        specialinvoke $r32.<com.google.wave.api.Wavelet: void <init>(org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId,java.lang.String,long,long,java.lang.String,java.lang.String,com.google.wave.api.BlipThread,java.util.Map,java.util.Set,java.util.Map,java.util.Set,java.util.Map,java.util.Map,com.google.wave.api.OperationQueue)>($r3, $r6, $r7, $l0, $l1, $r13, $r8, $r29, $r19, $r30, $r18, $r31, r12, r21, r22);

        return $r32;

        catch org.waveprotocol.wave.model.id.InvalidIdException from label1 to label2 with label3;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.waveprotocol.wave.model.id.WaveId $r2;
        org.waveprotocol.wave.model.id.WaveletId $r5;
        com.google.wave.api.Wavelet r0;
        java.io.ObjectOutputStream r7;
        java.lang.String $r3, $r6;
        org.waveprotocol.wave.model.id.IdSerialiser $r1, $r4;

        r0 := @this: com.google.wave.api.Wavelet;

        r7 := @parameter0: java.io.ObjectOutputStream;

        $r1 = staticinvoke <com.google.wave.api.ApiIdSerializer: org.waveprotocol.wave.model.id.IdSerialiser instance()>();

        $r2 = r0.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveId waveId>;

        $r3 = interfaceinvoke $r1.<org.waveprotocol.wave.model.id.IdSerialiser: java.lang.String serialiseWaveId(org.waveprotocol.wave.model.id.WaveId)>($r2);

        r0.<com.google.wave.api.Wavelet: java.lang.String serializedWaveId> = $r3;

        $r4 = staticinvoke <com.google.wave.api.ApiIdSerializer: org.waveprotocol.wave.model.id.IdSerialiser instance()>();

        $r5 = r0.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveletId waveletId>;

        $r6 = interfaceinvoke $r4.<org.waveprotocol.wave.model.id.IdSerialiser: java.lang.String serialiseWaveletId(org.waveprotocol.wave.model.id.WaveletId)>($r5);

        r0.<com.google.wave.api.Wavelet: java.lang.String serializedWaveletId> = $r6;

        virtualinvoke r7.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, org.waveprotocol.wave.model.id.InvalidIdException
    {
        org.waveprotocol.wave.model.id.WaveId $r4;
        java.io.ObjectInputStream r0;
        org.waveprotocol.wave.model.id.WaveletId $r7;
        java.io.IOException $r9;
        com.google.wave.api.Wavelet r1;
        java.lang.ClassNotFoundException $r8;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.String $r3, $r6, $r13;
        org.waveprotocol.wave.model.id.IdSerialiser $r2, $r5;

        r1 := @this: com.google.wave.api.Wavelet;

        r0 := @parameter0: java.io.ObjectInputStream;

     label1:
        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incorrect serial versions");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label4:
        $r2 = staticinvoke <com.google.wave.api.ApiIdSerializer: org.waveprotocol.wave.model.id.IdSerialiser instance()>();

        $r3 = r1.<com.google.wave.api.Wavelet: java.lang.String serializedWaveId>;

        $r4 = interfaceinvoke $r2.<org.waveprotocol.wave.model.id.IdSerialiser: org.waveprotocol.wave.model.id.WaveId deserialiseWaveId(java.lang.String)>($r3);

        r1.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveId waveId> = $r4;

        $r5 = staticinvoke <com.google.wave.api.ApiIdSerializer: org.waveprotocol.wave.model.id.IdSerialiser instance()>();

        $r6 = r1.<com.google.wave.api.Wavelet: java.lang.String serializedWaveletId>;

        $r7 = interfaceinvoke $r5.<org.waveprotocol.wave.model.id.IdSerialiser: org.waveprotocol.wave.model.id.WaveletId deserialiseWaveletId(java.lang.String)>($r6);

        r1.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveletId waveletId> = $r7;

        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.google.wave.api.Wavelet: char ROBOT_ID_DOMAIN_DELIMITER> = 64;

        <com.google.wave.api.Wavelet: char ROBOT_ID_VERSION_DELIMITER> = 35;

        <com.google.wave.api.Wavelet: char ROBOT_ID_PROXY_DELIMITER> = 43;

        return;
    }
}
