public abstract class org.apache.poi.hslf.blip.Bitmap extends org.apache.poi.hslf.usermodel.PictureData
{

    public void <init>()
    {
        org.apache.poi.hslf.blip.Bitmap r0;

        r0 := @this: org.apache.poi.hslf.blip.Bitmap;

        specialinvoke r0.<org.apache.poi.hslf.usermodel.PictureData: void <init>()>();

        return;
    }

    public byte[] getData()
    {
        byte[] $r1, r2;
        int $i0, $i1, $i2;
        org.apache.poi.hslf.blip.Bitmap r0;

        r0 := @this: org.apache.poi.hslf.blip.Bitmap;

        $r1 = virtualinvoke r0.<org.apache.poi.hslf.blip.Bitmap: byte[] getRawData()>();

        $i0 = lengthof $r1;

        $i1 = $i0 - 17;

        r2 = newarray (byte)[$i1];

        $i2 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 17, r2, 0, $i2);

        return r2;
    }

    public void setData(byte[]) throws java.io.IOException
    {
        byte[] r1, $r2, $r4;
        java.io.ByteArrayOutputStream $r0;
        org.apache.poi.hslf.blip.Bitmap r3;

        r3 := @this: org.apache.poi.hslf.blip.Bitmap;

        r1 := @parameter0: byte[];

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r2 = staticinvoke <org.apache.poi.hslf.blip.Bitmap: byte[] getChecksum(byte[])>(r1);

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r2);

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(int)>(0);

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        $r4 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke r3.<org.apache.poi.hslf.blip.Bitmap: void setRawData(byte[])>($r4);

        return;
    }
}
