public class org.codehaus.jackson.map.ser.AnyGetterWriter extends java.lang.Object
{
    protected final java.lang.reflect.Method _anyGetter;
    protected final org.codehaus.jackson.map.ser.std.MapSerializer _serializer;

    public void <init>(org.codehaus.jackson.map.introspect.AnnotatedMethod, org.codehaus.jackson.map.ser.std.MapSerializer)
    {
        org.codehaus.jackson.map.ser.AnyGetterWriter r0;
        org.codehaus.jackson.map.ser.std.MapSerializer r3;
        org.codehaus.jackson.map.introspect.AnnotatedMethod r1;
        java.lang.reflect.Method $r2;

        r0 := @this: org.codehaus.jackson.map.ser.AnyGetterWriter;

        r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        r3 := @parameter1: org.codehaus.jackson.map.ser.std.MapSerializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method getAnnotated()>();

        r0.<org.codehaus.jackson.map.ser.AnyGetterWriter: java.lang.reflect.Method _anyGetter> = $r2;

        r0.<org.codehaus.jackson.map.ser.AnyGetterWriter: org.codehaus.jackson.map.ser.std.MapSerializer _serializer> = r3;

        return;
    }

    public void getAndSerialize(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.lang.Exception
    {
        java.lang.Object[] $r2;
        org.codehaus.jackson.map.SerializerProvider r6;
        org.codehaus.jackson.map.JsonMappingException $r9;
        org.codehaus.jackson.JsonGenerator r5;
        java.util.Map $r7;
        java.lang.String $r13, $r17, $r19;
        java.lang.reflect.Method $r3, $r12;
        boolean $z0;
        org.codehaus.jackson.map.ser.AnyGetterWriter r0;
        org.codehaus.jackson.map.ser.std.MapSerializer $r8;
        java.lang.Object r1, $r4;
        java.lang.StringBuilder $r10, $r11, $r14, $r15, $r18;
        java.lang.Class $r16;

        r0 := @this: org.codehaus.jackson.map.ser.AnyGetterWriter;

        r1 := @parameter0: java.lang.Object;

        r5 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r6 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r3 = r0.<org.codehaus.jackson.map.ser.AnyGetterWriter: java.lang.reflect.Method _anyGetter>;

        $r2 = newarray (java.lang.Object)[0];

        $r4 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r2);

        if $r4 != null goto label1;

        return;

     label1:
        $z0 = $r4 instanceof java.util.Map;

        if $z0 != 0 goto label2;

        $r9 = new org.codehaus.jackson.map.JsonMappingException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Value returned by \'any-getter\' (");

        $r12 = r0.<org.codehaus.jackson.map.ser.AnyGetterWriter: java.lang.reflect.Method _anyGetter>;

        $r13 = virtualinvoke $r12.<java.lang.reflect.Method: java.lang.String getName()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("()) not java.util.Map but ");

        $r16 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>($r19);

        throw $r9;

     label2:
        $r8 = r0.<org.codehaus.jackson.map.ser.AnyGetterWriter: org.codehaus.jackson.map.ser.std.MapSerializer _serializer>;

        $r7 = (java.util.Map) $r4;

        virtualinvoke $r8.<org.codehaus.jackson.map.ser.std.MapSerializer: void serializeFields(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r7, r5, r6);

        return;
    }

    public void resolve(org.codehaus.jackson.map.SerializerProvider) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.SerializerProvider r1;
        org.codehaus.jackson.map.ser.AnyGetterWriter r0;
        org.codehaus.jackson.map.ser.std.MapSerializer $r2;

        r0 := @this: org.codehaus.jackson.map.ser.AnyGetterWriter;

        r1 := @parameter0: org.codehaus.jackson.map.SerializerProvider;

        $r2 = r0.<org.codehaus.jackson.map.ser.AnyGetterWriter: org.codehaus.jackson.map.ser.std.MapSerializer _serializer>;

        virtualinvoke $r2.<org.codehaus.jackson.map.ser.std.MapSerializer: void resolve(org.codehaus.jackson.map.SerializerProvider)>(r1);

        return;
    }
}
