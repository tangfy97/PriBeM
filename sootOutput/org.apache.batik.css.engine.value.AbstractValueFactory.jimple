public abstract class org.apache.batik.css.engine.value.AbstractValueFactory extends java.lang.Object
{

    public void <init>()
    {
        org.apache.batik.css.engine.value.AbstractValueFactory r0;

        r0 := @this: org.apache.batik.css.engine.value.AbstractValueFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract java.lang.String getPropertyName();

    protected static java.lang.String resolveURI(org.apache.batik.util.ParsedURL, java.lang.String)
    {
        org.apache.batik.util.ParsedURL $r0, r1;
        java.lang.String r2, $r3;

        r1 := @parameter0: org.apache.batik.util.ParsedURL;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.apache.batik.util.ParsedURL;

        specialinvoke $r0.<org.apache.batik.util.ParsedURL: void <init>(org.apache.batik.util.ParsedURL,java.lang.String)>(r1, r2);

        $r3 = virtualinvoke $r0.<org.apache.batik.util.ParsedURL: java.lang.String toString()>();

        return $r3;
    }

    protected org.w3c.dom.DOMException createInvalidIdentifierDOMException(java.lang.String)
    {
        java.lang.Object[] $r0;
        org.apache.batik.css.engine.value.AbstractValueFactory r1;
        org.w3c.dom.DOMException $r5;
        java.lang.String $r2, r3, $r4;

        r1 := @this: org.apache.batik.css.engine.value.AbstractValueFactory;

        r3 := @parameter0: java.lang.String;

        $r0 = newarray (java.lang.Object)[2];

        $r2 = virtualinvoke r1.<org.apache.batik.css.engine.value.AbstractValueFactory: java.lang.String getPropertyName()>();

        $r0[0] = $r2;

        $r0[1] = r3;

        $r4 = staticinvoke <org.apache.batik.css.engine.value.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("invalid.identifier", $r0);

        $r5 = new org.w3c.dom.DOMException;

        specialinvoke $r5.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(12, $r4);

        return $r5;
    }

    protected org.w3c.dom.DOMException createInvalidLexicalUnitDOMException(short)
    {
        java.lang.Object[] $r0;
        org.apache.batik.css.engine.value.AbstractValueFactory r1;
        java.lang.Integer $r6;
        short s0;
        org.w3c.dom.DOMException $r7;
        int $i1;
        java.lang.String $r2, $r4;

        r1 := @this: org.apache.batik.css.engine.value.AbstractValueFactory;

        s0 := @parameter0: short;

        $r0 = newarray (java.lang.Object)[2];

        $r2 = virtualinvoke r1.<org.apache.batik.css.engine.value.AbstractValueFactory: java.lang.String getPropertyName()>();

        $r0[0] = $r2;

        $r6 = new java.lang.Integer;

        $i1 = (int) s0;

        specialinvoke $r6.<java.lang.Integer: void <init>(int)>($i1);

        $r0[1] = $r6;

        $r4 = staticinvoke <org.apache.batik.css.engine.value.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("invalid.lexical.unit", $r0);

        $r7 = new org.w3c.dom.DOMException;

        specialinvoke $r7.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(9, $r4);

        return $r7;
    }

    protected org.w3c.dom.DOMException createInvalidFloatTypeDOMException(short)
    {
        java.lang.Object[] $r0;
        org.apache.batik.css.engine.value.AbstractValueFactory r1;
        java.lang.Integer $r6;
        short s0;
        org.w3c.dom.DOMException $r7;
        int $i1;
        java.lang.String $r2, $r4;

        r1 := @this: org.apache.batik.css.engine.value.AbstractValueFactory;

        s0 := @parameter0: short;

        $r0 = newarray (java.lang.Object)[2];

        $r2 = virtualinvoke r1.<org.apache.batik.css.engine.value.AbstractValueFactory: java.lang.String getPropertyName()>();

        $r0[0] = $r2;

        $r6 = new java.lang.Integer;

        $i1 = (int) s0;

        specialinvoke $r6.<java.lang.Integer: void <init>(int)>($i1);

        $r0[1] = $r6;

        $r4 = staticinvoke <org.apache.batik.css.engine.value.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("invalid.float.type", $r0);

        $r7 = new org.w3c.dom.DOMException;

        specialinvoke $r7.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(15, $r4);

        return $r7;
    }

    protected org.w3c.dom.DOMException createInvalidFloatValueDOMException(float)
    {
        java.lang.Float $r3;
        java.lang.Object[] $r0;
        org.apache.batik.css.engine.value.AbstractValueFactory r1;
        org.w3c.dom.DOMException $r5;
        float f0;
        java.lang.String $r2, $r4;

        r1 := @this: org.apache.batik.css.engine.value.AbstractValueFactory;

        f0 := @parameter0: float;

        $r0 = newarray (java.lang.Object)[2];

        $r2 = virtualinvoke r1.<org.apache.batik.css.engine.value.AbstractValueFactory: java.lang.String getPropertyName()>();

        $r0[0] = $r2;

        $r3 = new java.lang.Float;

        specialinvoke $r3.<java.lang.Float: void <init>(float)>(f0);

        $r0[1] = $r3;

        $r4 = staticinvoke <org.apache.batik.css.engine.value.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("invalid.float.value", $r0);

        $r5 = new org.w3c.dom.DOMException;

        specialinvoke $r5.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(15, $r4);

        return $r5;
    }

    protected org.w3c.dom.DOMException createInvalidStringTypeDOMException(short)
    {
        java.lang.Object[] $r0;
        org.apache.batik.css.engine.value.AbstractValueFactory r1;
        java.lang.Integer $r6;
        short s0;
        org.w3c.dom.DOMException $r7;
        int $i1;
        java.lang.String $r2, $r4;

        r1 := @this: org.apache.batik.css.engine.value.AbstractValueFactory;

        s0 := @parameter0: short;

        $r0 = newarray (java.lang.Object)[2];

        $r2 = virtualinvoke r1.<org.apache.batik.css.engine.value.AbstractValueFactory: java.lang.String getPropertyName()>();

        $r0[0] = $r2;

        $r6 = new java.lang.Integer;

        $i1 = (int) s0;

        specialinvoke $r6.<java.lang.Integer: void <init>(int)>($i1);

        $r0[1] = $r6;

        $r4 = staticinvoke <org.apache.batik.css.engine.value.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("invalid.string.type", $r0);

        $r7 = new org.w3c.dom.DOMException;

        specialinvoke $r7.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(15, $r4);

        return $r7;
    }

    protected org.w3c.dom.DOMException createMalformedLexicalUnitDOMException()
    {
        java.lang.Object[] $r0;
        org.apache.batik.css.engine.value.AbstractValueFactory r1;
        org.w3c.dom.DOMException $r4;
        java.lang.String $r2, $r3;

        r1 := @this: org.apache.batik.css.engine.value.AbstractValueFactory;

        $r0 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke r1.<org.apache.batik.css.engine.value.AbstractValueFactory: java.lang.String getPropertyName()>();

        $r0[0] = $r2;

        $r3 = staticinvoke <org.apache.batik.css.engine.value.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("malformed.lexical.unit", $r0);

        $r4 = new org.w3c.dom.DOMException;

        specialinvoke $r4.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(15, $r3);

        return $r4;
    }

    protected org.w3c.dom.DOMException createDOMException()
    {
        java.lang.Object[] $r0;
        org.apache.batik.css.engine.value.AbstractValueFactory r1;
        org.w3c.dom.DOMException $r4;
        java.lang.String $r2, $r3;

        r1 := @this: org.apache.batik.css.engine.value.AbstractValueFactory;

        $r0 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke r1.<org.apache.batik.css.engine.value.AbstractValueFactory: java.lang.String getPropertyName()>();

        $r0[0] = $r2;

        $r3 = staticinvoke <org.apache.batik.css.engine.value.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("invalid.access", $r0);

        $r4 = new org.w3c.dom.DOMException;

        specialinvoke $r4.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(9, $r3);

        return $r4;
    }
}
