public class org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut extends java.lang.Object implements org.springframework.aop.Pointcut
{
    private final org.springframework.aop.ClassFilter classFilter;
    private final org.springframework.aop.MethodMatcher methodMatcher;

    public void <init>(java.lang.Class)
    {
        org.springframework.aop.support.'annotation'.AnnotationClassFilter $r1;
        java.lang.Class r2;
        org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut r0;
        org.springframework.aop.MethodMatcher $r3;

        r0 := @this: org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut;

        r2 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.springframework.aop.support.'annotation'.AnnotationClassFilter;

        specialinvoke $r1.<org.springframework.aop.support.'annotation'.AnnotationClassFilter: void <init>(java.lang.Class)>(r2);

        r0.<org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut: org.springframework.aop.ClassFilter classFilter> = $r1;

        $r3 = <org.springframework.aop.MethodMatcher: org.springframework.aop.MethodMatcher TRUE>;

        r0.<org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut: org.springframework.aop.MethodMatcher methodMatcher> = $r3;

        return;
    }

    public void <init>(java.lang.Class, boolean)
    {
        org.springframework.aop.support.'annotation'.AnnotationClassFilter $r1;
        java.lang.Class r2;
        org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut r0;
        org.springframework.aop.MethodMatcher $r3;
        boolean z0;

        r0 := @this: org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut;

        r2 := @parameter0: java.lang.Class;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.springframework.aop.support.'annotation'.AnnotationClassFilter;

        specialinvoke $r1.<org.springframework.aop.support.'annotation'.AnnotationClassFilter: void <init>(java.lang.Class,boolean)>(r2, z0);

        r0.<org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut: org.springframework.aop.ClassFilter classFilter> = $r1;

        $r3 = <org.springframework.aop.MethodMatcher: org.springframework.aop.MethodMatcher TRUE>;

        r0.<org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut: org.springframework.aop.MethodMatcher methodMatcher> = $r3;

        return;
    }

    public void <init>(java.lang.Class, java.lang.Class)
    {
        org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut r0;
        org.springframework.aop.support.'annotation'.AnnotationClassFilter $r6;
        org.springframework.aop.ClassFilter $r2;
        org.springframework.aop.support.'annotation'.AnnotationMethodMatcher $r5;
        java.lang.Class r1, r3;
        org.springframework.aop.MethodMatcher $r4;
        boolean $z0;

        r0 := @this: org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut;

        r1 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        if r3 != null goto label1;

        $z0 = 0;

        goto label2;

     label1:
        $z0 = 1;

     label2:
        staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z0, "Either Class annotation type or Method annotation type needs to be specified (or both)");

        if r1 == null goto label3;

        $r6 = new org.springframework.aop.support.'annotation'.AnnotationClassFilter;

        specialinvoke $r6.<org.springframework.aop.support.'annotation'.AnnotationClassFilter: void <init>(java.lang.Class)>(r1);

        r0.<org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut: org.springframework.aop.ClassFilter classFilter> = $r6;

        goto label4;

     label3:
        $r2 = <org.springframework.aop.ClassFilter: org.springframework.aop.ClassFilter TRUE>;

        r0.<org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut: org.springframework.aop.ClassFilter classFilter> = $r2;

     label4:
        if r3 == null goto label5;

        $r5 = new org.springframework.aop.support.'annotation'.AnnotationMethodMatcher;

        specialinvoke $r5.<org.springframework.aop.support.'annotation'.AnnotationMethodMatcher: void <init>(java.lang.Class)>(r3);

        r0.<org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut: org.springframework.aop.MethodMatcher methodMatcher> = $r5;

        goto label6;

     label5:
        $r4 = <org.springframework.aop.MethodMatcher: org.springframework.aop.MethodMatcher TRUE>;

        r0.<org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut: org.springframework.aop.MethodMatcher methodMatcher> = $r4;

     label6:
        return;
    }

    public org.springframework.aop.ClassFilter getClassFilter()
    {
        org.springframework.aop.ClassFilter $r1;
        org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut r0;

        r0 := @this: org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut;

        $r1 = r0.<org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut: org.springframework.aop.ClassFilter classFilter>;

        return $r1;
    }

    public org.springframework.aop.MethodMatcher getMethodMatcher()
    {
        org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut r0;
        org.springframework.aop.MethodMatcher $r1;

        r0 := @this: org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut;

        $r1 = r0.<org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut: org.springframework.aop.MethodMatcher methodMatcher>;

        return $r1;
    }

    public static org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut forClassAnnotation(java.lang.Class)
    {
        java.lang.Class r0;
        org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut $r1;

        r0 := @parameter0: java.lang.Class;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "Annotation type must not be null");

        $r1 = new org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut;

        specialinvoke $r1.<org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut: void <init>(java.lang.Class)>(r0);

        return $r1;
    }

    public static org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut forMethodAnnotation(java.lang.Class)
    {
        java.lang.Class r0;
        org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut $r1;

        r0 := @parameter0: java.lang.Class;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "Annotation type must not be null");

        $r1 = new org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut;

        specialinvoke $r1.<org.springframework.aop.support.'annotation'.AnnotationMatchingPointcut: void <init>(java.lang.Class,java.lang.Class)>(null, r0);

        return $r1;
    }
}
