public class com.spatial4j.core.shape.jts.JtsGeometry extends java.lang.Object implements com.spatial4j.core.shape.Shape
{
    private final com.vividsolutions.jts.geom.Geometry geom;
    private final boolean hasArea;
    private final com.spatial4j.core.shape.Rectangle bbox;
    private final com.spatial4j.core.context.jts.JtsSpatialContext ctx;
    static final boolean $assertionsDisabled;

    public void <init>(com.vividsolutions.jts.geom.Geometry, com.spatial4j.core.context.jts.JtsSpatialContext, boolean)
    {
        com.vividsolutions.jts.operation.valid.TopologyValidationError $r7;
        byte $b0, $b1;
        com.vividsolutions.jts.geom.Geometry $r9, $r11, r18;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6, $z7, $z8, $z9;
        com.spatial4j.core.exception.InvalidShapeException $r25;
        java.lang.AssertionError $r20, $r21;
        com.spatial4j.core.shape.impl.RectangleImpl $r22, $r23;
        int $i2, $i3;
        com.spatial4j.core.context.jts.JtsSpatialContext r1;
        java.lang.String $r8;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, d10, d11;
        com.vividsolutions.jts.geom.Envelope $r3, $r10, $r15;
        java.lang.IllegalArgumentException $r19;
        java.lang.Class $r2, $r13;
        com.vividsolutions.jts.operation.valid.IsValidOp $r24;
        com.spatial4j.core.shape.jts.JtsGeometry r0;

        r0 := @this: com.spatial4j.core.shape.jts.JtsGeometry;

        r18 := @parameter0: com.vividsolutions.jts.geom.Geometry;

        r1 := @parameter1: com.spatial4j.core.context.jts.JtsSpatialContext;

        z5 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.spatial4j.core.shape.jts.JtsGeometry: com.spatial4j.core.context.jts.JtsSpatialContext ctx> = r1;

        $r2 = virtualinvoke r18.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lcom/vividsolutions/jts/geom/GeometryCollection;");

        if $z0 == 0 goto label01;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("JtsGeometry does not support GeometryCollection but does support its subclasses.");

        throw $r19;

     label01:
        $z1 = virtualinvoke r1.<com.spatial4j.core.context.jts.JtsSpatialContext: boolean isGeo()>();

        if $z1 == 0 goto label07;

        if z5 == 0 goto label02;

        staticinvoke <com.spatial4j.core.shape.jts.JtsGeometry: int unwrapDateline(com.vividsolutions.jts.geom.Geometry)>(r18);

     label02:
        $r9 = staticinvoke <com.spatial4j.core.shape.jts.JtsGeometry: com.vividsolutions.jts.geom.Geometry unionGeometryCollection(com.vividsolutions.jts.geom.Geometry)>(r18);

        $r10 = virtualinvoke $r9.<com.vividsolutions.jts.geom.Geometry: com.vividsolutions.jts.geom.Envelope getEnvelopeInternal()>();

        $r11 = staticinvoke <com.spatial4j.core.shape.jts.JtsGeometry: com.vividsolutions.jts.geom.Geometry cutUnwrappedGeomInto360(com.vividsolutions.jts.geom.Geometry)>($r9);

        r18 = $r11;

        $z6 = <com.spatial4j.core.shape.jts.JtsGeometry: boolean $assertionsDisabled>;

        if $z6 != 0 goto label03;

        $r15 = virtualinvoke $r11.<com.vividsolutions.jts.geom.Geometry: com.vividsolutions.jts.geom.Envelope getEnvelopeInternal()>();

        $d9 = virtualinvoke $r15.<com.vividsolutions.jts.geom.Envelope: double getWidth()>();

        $b1 = $d9 cmpg 360.0;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label03;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label03:
        $z7 = <com.spatial4j.core.shape.jts.JtsGeometry: boolean $assertionsDisabled>;

        if $z7 != 0 goto label04;

        $r13 = virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>();

        $z8 = virtualinvoke $r13.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lcom/vividsolutions/jts/geom/GeometryCollection;");

        if $z8 == 0 goto label04;

        $r21 = new java.lang.AssertionError;

        specialinvoke $r21.<java.lang.AssertionError: void <init>(java.lang.Object)>("GeometryCollection unsupported");

        throw $r21;

     label04:
        $d4 = virtualinvoke $r10.<com.vividsolutions.jts.geom.Envelope: double getWidth()>();

        $b0 = $d4 cmpl 360.0;

        $i3 = (int) $b0;

        if $i3 < 0 goto label05;

        d10 = -180.0;

        d11 = 180.0;

        goto label06;

     label05:
        d10 = virtualinvoke $r10.<com.vividsolutions.jts.geom.Envelope: double getMinX()>();

        $d5 = virtualinvoke $r10.<com.vividsolutions.jts.geom.Envelope: double getMinX()>();

        $d6 = $d5 + $d4;

        d11 = staticinvoke <com.spatial4j.core.distance.DistanceUtils: double normLonDEG(double)>($d6);

     label06:
        $r22 = new com.spatial4j.core.shape.impl.RectangleImpl;

        $d7 = virtualinvoke $r10.<com.vividsolutions.jts.geom.Envelope: double getMinY()>();

        $d8 = virtualinvoke $r10.<com.vividsolutions.jts.geom.Envelope: double getMaxY()>();

        specialinvoke $r22.<com.spatial4j.core.shape.impl.RectangleImpl: void <init>(double,double,double,double,com.spatial4j.core.context.SpatialContext)>(d10, d11, $d7, $d8, r1);

        r0.<com.spatial4j.core.shape.jts.JtsGeometry: com.spatial4j.core.shape.Rectangle bbox> = $r22;

        goto label08;

     label07:
        $r3 = virtualinvoke r18.<com.vividsolutions.jts.geom.Geometry: com.vividsolutions.jts.geom.Envelope getEnvelopeInternal()>();

        $r23 = new com.spatial4j.core.shape.impl.RectangleImpl;

        $d0 = virtualinvoke $r3.<com.vividsolutions.jts.geom.Envelope: double getMinX()>();

        $d1 = virtualinvoke $r3.<com.vividsolutions.jts.geom.Envelope: double getMaxX()>();

        $d2 = virtualinvoke $r3.<com.vividsolutions.jts.geom.Envelope: double getMinY()>();

        $d3 = virtualinvoke $r3.<com.vividsolutions.jts.geom.Envelope: double getMaxY()>();

        specialinvoke $r23.<com.spatial4j.core.shape.impl.RectangleImpl: void <init>(double,double,double,double,com.spatial4j.core.context.SpatialContext)>($d0, $d1, $d2, $d3, r1);

        r0.<com.spatial4j.core.shape.jts.JtsGeometry: com.spatial4j.core.shape.Rectangle bbox> = $r23;

     label08:
        virtualinvoke r18.<com.vividsolutions.jts.geom.Geometry: com.vividsolutions.jts.geom.Envelope getEnvelopeInternal()>();

        $r24 = new com.vividsolutions.jts.operation.valid.IsValidOp;

        specialinvoke $r24.<com.vividsolutions.jts.operation.valid.IsValidOp: void <init>(com.vividsolutions.jts.geom.Geometry)>(r18);

        $z2 = virtualinvoke $r24.<com.vividsolutions.jts.operation.valid.IsValidOp: boolean isValid()>();

        if $z2 != 0 goto label09;

        $r25 = new com.spatial4j.core.exception.InvalidShapeException;

        $r7 = virtualinvoke $r24.<com.vividsolutions.jts.operation.valid.IsValidOp: com.vividsolutions.jts.operation.valid.TopologyValidationError getValidationError()>();

        $r8 = virtualinvoke $r7.<com.vividsolutions.jts.operation.valid.TopologyValidationError: java.lang.String toString()>();

        specialinvoke $r25.<com.spatial4j.core.exception.InvalidShapeException: void <init>(java.lang.String)>($r8);

        throw $r25;

     label09:
        r0.<com.spatial4j.core.shape.jts.JtsGeometry: com.vividsolutions.jts.geom.Geometry geom> = r18;

        $z3 = r18 instanceof com.vividsolutions.jts.geom.Lineal;

        if $z3 != 0 goto label10;

        $z4 = r18 instanceof com.vividsolutions.jts.geom.Puntal;

        if $z4 != 0 goto label10;

        $z9 = 1;

        goto label11;

     label10:
        $z9 = 0;

     label11:
        r0.<com.spatial4j.core.shape.jts.JtsGeometry: boolean hasArea> = $z9;

        return;
    }

    public static com.spatial4j.core.shape.SpatialRelation intersectionMatrixToSpatialRelation(com.vividsolutions.jts.geom.IntersectionMatrix)
    {
        com.vividsolutions.jts.geom.IntersectionMatrix r0;
        com.spatial4j.core.shape.SpatialRelation $r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: com.vividsolutions.jts.geom.IntersectionMatrix;

        $z0 = virtualinvoke r0.<com.vividsolutions.jts.geom.IntersectionMatrix: boolean isContains()>();

        if $z0 == 0 goto label1;

        $r4 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation CONTAINS>;

        return $r4;

     label1:
        $z1 = virtualinvoke r0.<com.vividsolutions.jts.geom.IntersectionMatrix: boolean isCoveredBy()>();

        if $z1 == 0 goto label2;

        $r3 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation WITHIN>;

        return $r3;

     label2:
        $z2 = virtualinvoke r0.<com.vividsolutions.jts.geom.IntersectionMatrix: boolean isDisjoint()>();

        if $z2 == 0 goto label3;

        $r2 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation DISJOINT>;

        return $r2;

     label3:
        $r1 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation INTERSECTS>;

        return $r1;
    }

    public boolean hasArea()
    {
        com.spatial4j.core.shape.jts.JtsGeometry r0;
        boolean $z0;

        r0 := @this: com.spatial4j.core.shape.jts.JtsGeometry;

        $z0 = r0.<com.spatial4j.core.shape.jts.JtsGeometry: boolean hasArea>;

        return $z0;
    }

    public double getArea(com.spatial4j.core.context.SpatialContext)
    {
        com.spatial4j.core.shape.Rectangle $r3, $r4;
        com.spatial4j.core.context.SpatialContext r2;
        java.lang.AssertionError $r6;
        byte $b0, $b1;
        int $i2;
        com.vividsolutions.jts.geom.Geometry $r1;
        com.spatial4j.core.shape.jts.JtsGeometry r0;
        double $d0, $d1, $d2, $d3, $d4;
        boolean $z0;

        r0 := @this: com.spatial4j.core.shape.jts.JtsGeometry;

        r2 := @parameter0: com.spatial4j.core.context.SpatialContext;

        $r1 = r0.<com.spatial4j.core.shape.jts.JtsGeometry: com.vividsolutions.jts.geom.Geometry geom>;

        $d0 = virtualinvoke $r1.<com.vividsolutions.jts.geom.Geometry: double getArea()>();

        if r2 == null goto label1;

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label2;

     label1:
        return $d0;

     label2:
        $r3 = virtualinvoke r0.<com.spatial4j.core.shape.jts.JtsGeometry: com.spatial4j.core.shape.Rectangle getBoundingBox()>();

        $d1 = interfaceinvoke $r3.<com.spatial4j.core.shape.Rectangle: double getArea(com.spatial4j.core.context.SpatialContext)>(null);

        $z0 = <com.spatial4j.core.shape.jts.JtsGeometry: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $b1 = $d1 cmpl $d0;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label3;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label3:
        $d4 = $d0 / $d1;

        $r4 = virtualinvoke r0.<com.spatial4j.core.shape.jts.JtsGeometry: com.spatial4j.core.shape.Rectangle getBoundingBox()>();

        $d2 = interfaceinvoke $r4.<com.spatial4j.core.shape.Rectangle: double getArea(com.spatial4j.core.context.SpatialContext)>(r2);

        $d3 = $d2 * $d4;

        return $d3;
    }

    public com.spatial4j.core.shape.Rectangle getBoundingBox()
    {
        com.spatial4j.core.shape.Rectangle $r1;
        com.spatial4j.core.shape.jts.JtsGeometry r0;

        r0 := @this: com.spatial4j.core.shape.jts.JtsGeometry;

        $r1 = r0.<com.spatial4j.core.shape.jts.JtsGeometry: com.spatial4j.core.shape.Rectangle bbox>;

        return $r1;
    }

    public com.spatial4j.core.shape.jts.JtsPoint getCenter()
    {
        com.spatial4j.core.shape.jts.JtsPoint $r0;
        com.vividsolutions.jts.geom.Geometry $r2;
        com.spatial4j.core.context.jts.JtsSpatialContext $r4;
        com.vividsolutions.jts.geom.Point $r3;
        com.spatial4j.core.shape.jts.JtsGeometry r1;

        r1 := @this: com.spatial4j.core.shape.jts.JtsGeometry;

        $r0 = new com.spatial4j.core.shape.jts.JtsPoint;

        $r2 = r1.<com.spatial4j.core.shape.jts.JtsGeometry: com.vividsolutions.jts.geom.Geometry geom>;

        $r3 = virtualinvoke $r2.<com.vividsolutions.jts.geom.Geometry: com.vividsolutions.jts.geom.Point getCentroid()>();

        $r4 = r1.<com.spatial4j.core.shape.jts.JtsGeometry: com.spatial4j.core.context.jts.JtsSpatialContext ctx>;

        specialinvoke $r0.<com.spatial4j.core.shape.jts.JtsPoint: void <init>(com.vividsolutions.jts.geom.Point,com.spatial4j.core.context.SpatialContext)>($r3, $r4);

        return $r0;
    }

    public com.spatial4j.core.shape.SpatialRelation relate(com.spatial4j.core.shape.Shape)
    {
        com.spatial4j.core.shape.Shape r0;
        com.spatial4j.core.shape.Point $r10;
        com.spatial4j.core.shape.SpatialRelation $r2, $r3, $r5, $r7, $r9, $r11;
        boolean $z0, $z1, $z2, $z3;
        com.spatial4j.core.shape.Rectangle $r8;
        com.spatial4j.core.shape.Circle $r6;
        com.spatial4j.core.shape.jts.JtsGeometry r1, $r4;

        r1 := @this: com.spatial4j.core.shape.jts.JtsGeometry;

        r0 := @parameter0: com.spatial4j.core.shape.Shape;

        $z0 = r0 instanceof com.spatial4j.core.shape.Point;

        if $z0 == 0 goto label1;

        $r10 = (com.spatial4j.core.shape.Point) r0;

        $r11 = virtualinvoke r1.<com.spatial4j.core.shape.jts.JtsGeometry: com.spatial4j.core.shape.SpatialRelation relate(com.spatial4j.core.shape.Point)>($r10);

        return $r11;

     label1:
        $z1 = r0 instanceof com.spatial4j.core.shape.Rectangle;

        if $z1 == 0 goto label2;

        $r8 = (com.spatial4j.core.shape.Rectangle) r0;

        $r9 = virtualinvoke r1.<com.spatial4j.core.shape.jts.JtsGeometry: com.spatial4j.core.shape.SpatialRelation relate(com.spatial4j.core.shape.Rectangle)>($r8);

        return $r9;

     label2:
        $z2 = r0 instanceof com.spatial4j.core.shape.Circle;

        if $z2 == 0 goto label3;

        $r6 = (com.spatial4j.core.shape.Circle) r0;

        $r7 = virtualinvoke r1.<com.spatial4j.core.shape.jts.JtsGeometry: com.spatial4j.core.shape.SpatialRelation relate(com.spatial4j.core.shape.Circle)>($r6);

        return $r7;

     label3:
        $z3 = r0 instanceof com.spatial4j.core.shape.jts.JtsGeometry;

        if $z3 == 0 goto label4;

        $r4 = (com.spatial4j.core.shape.jts.JtsGeometry) r0;

        $r5 = virtualinvoke r1.<com.spatial4j.core.shape.jts.JtsGeometry: com.spatial4j.core.shape.SpatialRelation relate(com.spatial4j.core.shape.jts.JtsGeometry)>($r4);

        return $r5;

     label4:
        $r2 = interfaceinvoke r0.<com.spatial4j.core.shape.Shape: com.spatial4j.core.shape.SpatialRelation relate(com.spatial4j.core.shape.Shape)>(r1);

        $r3 = virtualinvoke $r2.<com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation transpose()>();

        return $r3;
    }

    public com.spatial4j.core.shape.SpatialRelation relate(com.spatial4j.core.shape.Point)
    {
        com.vividsolutions.jts.geom.Point $r5;
        com.spatial4j.core.shape.jts.JtsPoint $r3, $r6;
        com.spatial4j.core.shape.Point r0, $r7;
        com.vividsolutions.jts.geom.Geometry $r4, $r9;
        com.spatial4j.core.shape.SpatialRelation $r8;
        com.spatial4j.core.context.jts.JtsSpatialContext $r2;
        boolean $z0, $z1;
        com.spatial4j.core.shape.jts.JtsGeometry r1;
        double $d0, $d1;

        r1 := @this: com.spatial4j.core.shape.jts.JtsGeometry;

        r0 := @parameter0: com.spatial4j.core.shape.Point;

        $z0 = r0 instanceof com.spatial4j.core.shape.jts.JtsPoint;

        if $z0 == 0 goto label1;

        $r7 = r0;

        goto label2;

     label1:
        $r2 = r1.<com.spatial4j.core.shape.jts.JtsGeometry: com.spatial4j.core.context.jts.JtsSpatialContext ctx>;

        $d0 = interfaceinvoke r0.<com.spatial4j.core.shape.Point: double getX()>();

        $d1 = interfaceinvoke r0.<com.spatial4j.core.shape.Point: double getY()>();

        $r7 = virtualinvoke $r2.<com.spatial4j.core.context.jts.JtsSpatialContext: com.spatial4j.core.shape.Point makePoint(double,double)>($d0, $d1);

     label2:
        $r3 = (com.spatial4j.core.shape.jts.JtsPoint) $r7;

        $r6 = (com.spatial4j.core.shape.jts.JtsPoint) $r3;

        $r4 = r1.<com.spatial4j.core.shape.jts.JtsGeometry: com.vividsolutions.jts.geom.Geometry geom>;

        $r5 = virtualinvoke $r6.<com.spatial4j.core.shape.jts.JtsPoint: com.vividsolutions.jts.geom.Point getGeom()>();

        $r9 = (com.vividsolutions.jts.geom.Geometry) $r5;

        $z1 = virtualinvoke $r4.<com.vividsolutions.jts.geom.Geometry: boolean disjoint(com.vividsolutions.jts.geom.Geometry)>($r9);

        if $z1 == 0 goto label3;

        $r8 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation DISJOINT>;

        goto label4;

     label3:
        $r8 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation CONTAINS>;

     label4:
        return $r8;
    }

    public com.spatial4j.core.shape.SpatialRelation relate(com.spatial4j.core.shape.Rectangle)
    {
        com.spatial4j.core.shape.Rectangle r1, $r2;
        com.vividsolutions.jts.geom.IntersectionMatrix $r9;
        com.vividsolutions.jts.geom.Geometry $r7, $r8;
        com.spatial4j.core.shape.SpatialRelation $r3, $r4, $r5, $r10;
        com.spatial4j.core.context.jts.JtsSpatialContext $r6;
        com.spatial4j.core.shape.jts.JtsGeometry r0;

        r0 := @this: com.spatial4j.core.shape.jts.JtsGeometry;

        r1 := @parameter0: com.spatial4j.core.shape.Rectangle;

        $r2 = r0.<com.spatial4j.core.shape.jts.JtsGeometry: com.spatial4j.core.shape.Rectangle bbox>;

        $r3 = interfaceinvoke $r2.<com.spatial4j.core.shape.Rectangle: com.spatial4j.core.shape.SpatialRelation relate(com.spatial4j.core.shape.Shape)>(r1);

        $r4 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation WITHIN>;

        if $r3 == $r4 goto label1;

        $r5 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation DISJOINT>;

        if $r3 != $r5 goto label2;

     label1:
        return $r3;

     label2:
        $r6 = r0.<com.spatial4j.core.shape.jts.JtsGeometry: com.spatial4j.core.context.jts.JtsSpatialContext ctx>;

        $r7 = virtualinvoke $r6.<com.spatial4j.core.context.jts.JtsSpatialContext: com.vividsolutions.jts.geom.Geometry getGeometryFrom(com.spatial4j.core.shape.Shape)>(r1);

        $r8 = r0.<com.spatial4j.core.shape.jts.JtsGeometry: com.vividsolutions.jts.geom.Geometry geom>;

        $r9 = virtualinvoke $r8.<com.vividsolutions.jts.geom.Geometry: com.vividsolutions.jts.geom.IntersectionMatrix relate(com.vividsolutions.jts.geom.Geometry)>($r7);

        $r10 = staticinvoke <com.spatial4j.core.shape.jts.JtsGeometry: com.spatial4j.core.shape.SpatialRelation intersectionMatrixToSpatialRelation(com.vividsolutions.jts.geom.IntersectionMatrix)>($r9);

        return $r10;
    }

    public com.spatial4j.core.shape.SpatialRelation relate(com.spatial4j.core.shape.Circle)
    {
        java.lang.AssertionError $r9;
        com.vividsolutions.jts.geom.Coordinate[] $r7;
        com.spatial4j.core.shape.impl.PointImpl $r14;
        int i0, i1, i2, i3;
        com.spatial4j.core.shape.Point $r10;
        com.vividsolutions.jts.geom.Geometry $r6;
        com.spatial4j.core.shape.SpatialRelation $r3, $r4, $r5, $r8, $r11, $r12, $r16, $r17, $r18, $r19;
        com.spatial4j.core.context.jts.JtsSpatialContext $r15;
        boolean $z0;
        double $d0, $d1;
        com.vividsolutions.jts.geom.Coordinate r13;
        com.spatial4j.core.shape.Rectangle $r2;
        com.spatial4j.core.shape.Circle r1;
        com.spatial4j.core.shape.jts.JtsGeometry r0;

        r0 := @this: com.spatial4j.core.shape.jts.JtsGeometry;

        r1 := @parameter0: com.spatial4j.core.shape.Circle;

        $r2 = r0.<com.spatial4j.core.shape.jts.JtsGeometry: com.spatial4j.core.shape.Rectangle bbox>;

        $r3 = interfaceinvoke $r2.<com.spatial4j.core.shape.Rectangle: com.spatial4j.core.shape.SpatialRelation relate(com.spatial4j.core.shape.Shape)>(r1);

        $r4 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation WITHIN>;

        if $r3 == $r4 goto label01;

        $r5 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation DISJOINT>;

        if $r3 != $r5 goto label02;

     label01:
        return $r3;

     label02:
        $r6 = r0.<com.spatial4j.core.shape.jts.JtsGeometry: com.vividsolutions.jts.geom.Geometry geom>;

        $r7 = virtualinvoke $r6.<com.vividsolutions.jts.geom.Geometry: com.vividsolutions.jts.geom.Coordinate[] getCoordinates()>();

        i1 = 0;

        i2 = 0;

        i0 = lengthof $r7;

        i3 = 0;

     label03:
        if i3 >= i0 goto label06;

        r13 = $r7[i3];

        i2 = i2 + 1;

        $r14 = new com.spatial4j.core.shape.impl.PointImpl;

        $d1 = r13.<com.vividsolutions.jts.geom.Coordinate: double x>;

        $d0 = r13.<com.vividsolutions.jts.geom.Coordinate: double y>;

        $r15 = r0.<com.spatial4j.core.shape.jts.JtsGeometry: com.spatial4j.core.context.jts.JtsSpatialContext ctx>;

        specialinvoke $r14.<com.spatial4j.core.shape.impl.PointImpl: void <init>(double,double,com.spatial4j.core.context.SpatialContext)>($d1, $d0, $r15);

        $r16 = interfaceinvoke r1.<com.spatial4j.core.shape.Circle: com.spatial4j.core.shape.SpatialRelation relate(com.spatial4j.core.shape.Shape)>($r14);

        $r17 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation DISJOINT>;

        if $r16 != $r17 goto label04;

        i1 = i1 + 1;

     label04:
        if i2 == i1 goto label05;

        if i1 == 0 goto label05;

        $r18 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation INTERSECTS>;

        return $r18;

     label05:
        i3 = i3 + 1;

        goto label03;

     label06:
        if i2 != i1 goto label09;

        $r10 = interfaceinvoke r1.<com.spatial4j.core.shape.Circle: com.spatial4j.core.shape.Point getCenter()>();

        $r11 = virtualinvoke r0.<com.spatial4j.core.shape.jts.JtsGeometry: com.spatial4j.core.shape.SpatialRelation relate(com.spatial4j.core.shape.Point)>($r10);

        $r12 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation DISJOINT>;

        if $r11 != $r12 goto label07;

        $r19 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation DISJOINT>;

        goto label08;

     label07:
        $r19 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation CONTAINS>;

     label08:
        return $r19;

     label09:
        $z0 = <com.spatial4j.core.shape.jts.JtsGeometry: boolean $assertionsDisabled>;

        if $z0 != 0 goto label10;

        if i1 == 0 goto label10;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label10:
        $r8 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation WITHIN>;

        return $r8;
    }

    public com.spatial4j.core.shape.SpatialRelation relate(com.spatial4j.core.shape.jts.JtsGeometry)
    {
        com.vividsolutions.jts.geom.IntersectionMatrix $r4;
        com.vividsolutions.jts.geom.Geometry r1, $r3;
        com.spatial4j.core.shape.SpatialRelation $r5;
        com.spatial4j.core.shape.jts.JtsGeometry r0, r2;

        r2 := @this: com.spatial4j.core.shape.jts.JtsGeometry;

        r0 := @parameter0: com.spatial4j.core.shape.jts.JtsGeometry;

        r1 = r0.<com.spatial4j.core.shape.jts.JtsGeometry: com.vividsolutions.jts.geom.Geometry geom>;

        $r3 = r2.<com.spatial4j.core.shape.jts.JtsGeometry: com.vividsolutions.jts.geom.Geometry geom>;

        $r4 = virtualinvoke $r3.<com.vividsolutions.jts.geom.Geometry: com.vividsolutions.jts.geom.IntersectionMatrix relate(com.vividsolutions.jts.geom.Geometry)>(r1);

        $r5 = staticinvoke <com.spatial4j.core.shape.jts.JtsGeometry: com.spatial4j.core.shape.SpatialRelation intersectionMatrixToSpatialRelation(com.vividsolutions.jts.geom.IntersectionMatrix)>($r4);

        return $r5;
    }

    public java.lang.String toString()
    {
        com.vividsolutions.jts.geom.Geometry $r1;
        java.lang.String $r2;
        com.spatial4j.core.shape.jts.JtsGeometry r0;

        r0 := @this: com.spatial4j.core.shape.jts.JtsGeometry;

        $r1 = r0.<com.spatial4j.core.shape.jts.JtsGeometry: com.vividsolutions.jts.geom.Geometry geom>;

        $r2 = virtualinvoke $r1.<com.vividsolutions.jts.geom.Geometry: java.lang.String toString()>();

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        com.vividsolutions.jts.geom.Geometry $r5, $r6;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        com.spatial4j.core.shape.jts.JtsGeometry r0, r4;
        boolean $z0;

        r0 := @this: com.spatial4j.core.shape.jts.JtsGeometry;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

     label2:
        return 0;

     label3:
        r4 = (com.spatial4j.core.shape.jts.JtsGeometry) r1;

        $r6 = r0.<com.spatial4j.core.shape.jts.JtsGeometry: com.vividsolutions.jts.geom.Geometry geom>;

        $r5 = r4.<com.spatial4j.core.shape.jts.JtsGeometry: com.vividsolutions.jts.geom.Geometry geom>;

        $z0 = virtualinvoke $r6.<com.vividsolutions.jts.geom.Geometry: boolean equalsExact(com.vividsolutions.jts.geom.Geometry)>($r5);

        return $z0;
    }

    public int hashCode()
    {
        com.vividsolutions.jts.geom.Envelope $r2;
        int $i0;
        com.vividsolutions.jts.geom.Geometry $r1;
        com.spatial4j.core.shape.jts.JtsGeometry r0;

        r0 := @this: com.spatial4j.core.shape.jts.JtsGeometry;

        $r1 = r0.<com.spatial4j.core.shape.jts.JtsGeometry: com.vividsolutions.jts.geom.Geometry geom>;

        $r2 = virtualinvoke $r1.<com.vividsolutions.jts.geom.Geometry: com.vividsolutions.jts.geom.Envelope getEnvelopeInternal()>();

        $i0 = virtualinvoke $r2.<com.vividsolutions.jts.geom.Envelope: int hashCode()>();

        return $i0;
    }

    public com.vividsolutions.jts.geom.Geometry getGeom()
    {
        com.vividsolutions.jts.geom.Geometry $r1;
        com.spatial4j.core.shape.jts.JtsGeometry r0;

        r0 := @this: com.spatial4j.core.shape.jts.JtsGeometry;

        $r1 = r0.<com.spatial4j.core.shape.jts.JtsGeometry: com.vividsolutions.jts.geom.Geometry geom>;

        return $r1;
    }

    private static int unwrapDateline(com.vividsolutions.jts.geom.Geometry)
    {
        com.vividsolutions.jts.geom.Envelope $r1;
        com.spatial4j.core.shape.jts.JtsGeometry$1 $r4;
        byte $b0;
        int[] $r2;
        int i1, $i2;
        com.vividsolutions.jts.geom.Geometry r0;
        double $d0;

        r0 := @parameter0: com.vividsolutions.jts.geom.Geometry;

        $r1 = virtualinvoke r0.<com.vividsolutions.jts.geom.Geometry: com.vividsolutions.jts.geom.Envelope getEnvelopeInternal()>();

        $d0 = virtualinvoke $r1.<com.vividsolutions.jts.geom.Envelope: double getWidth()>();

        $b0 = $d0 cmpg 180.0;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label1;

        return 0;

     label1:
        $r2 = newarray (int)[1];

        $r2[0] = 0;

        $r4 = new com.spatial4j.core.shape.jts.JtsGeometry$1;

        specialinvoke $r4.<com.spatial4j.core.shape.jts.JtsGeometry$1: void <init>(int[])>($r2);

        virtualinvoke r0.<com.vividsolutions.jts.geom.Geometry: void apply(com.vividsolutions.jts.geom.GeometryFilter)>($r4);

        i1 = $r2[0];

        return i1;
    }

    private static int unwrapDateline(com.vividsolutions.jts.geom.Polygon)
    {
        com.vividsolutions.jts.geom.LineString $r1, $r2;
        int $i0, $i1, i2, i3;
        com.vividsolutions.jts.geom.Geometry $r12, $r13;
        java.lang.String $r9;
        boolean $z0;
        java.lang.IllegalArgumentException $r11;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r10;
        com.vividsolutions.jts.geom.Polygon r0;

        r0 := @parameter0: com.vividsolutions.jts.geom.Polygon;

        $r1 = virtualinvoke r0.<com.vividsolutions.jts.geom.Polygon: com.vividsolutions.jts.geom.LineString getExteriorRing()>();

        $i0 = staticinvoke <com.spatial4j.core.shape.jts.JtsGeometry: int unwrapDateline(com.vividsolutions.jts.geom.LineString)>($r1);

        if $i0 <= 0 goto label6;

        i2 = 0;

     label1:
        $i1 = virtualinvoke r0.<com.vividsolutions.jts.geom.Polygon: int getNumInteriorRing()>();

        if i2 >= $i1 goto label5;

        $r2 = virtualinvoke r0.<com.vividsolutions.jts.geom.Polygon: com.vividsolutions.jts.geom.LineString getInteriorRingN(int)>(i2);

        staticinvoke <com.spatial4j.core.shape.jts.JtsGeometry: int unwrapDateline(com.vividsolutions.jts.geom.LineString)>($r2);

        i3 = 0;

     label2:
        $r12 = (com.vividsolutions.jts.geom.Geometry) $r2;

        $z0 = virtualinvoke $r1.<com.vividsolutions.jts.geom.LineString: boolean contains(com.vividsolutions.jts.geom.Geometry)>($r12);

        if $z0 != 0 goto label4;

        if i3 <= $i0 goto label3;

        $r11 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The inner ring doesn\'t appear to be within the exterior: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" inner: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r11;

     label3:
        $r13 = (com.vividsolutions.jts.geom.Geometry) $r2;

        staticinvoke <com.spatial4j.core.shape.jts.JtsGeometry: void shiftGeomByX(com.vividsolutions.jts.geom.Geometry,int)>($r13, 360);

        i3 = i3 + 1;

        goto label2;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        virtualinvoke r0.<com.vividsolutions.jts.geom.Polygon: void geometryChanged()>();

     label6:
        return $i0;
    }

    private static int unwrapDateline(com.vividsolutions.jts.geom.LineString)
    {
        byte $b4, $b5, $b6, $b7;
        com.vividsolutions.jts.geom.Geometry $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.vividsolutions.jts.geom.CoordinateSequence $r1;
        java.lang.AssertionError $r8, $r9, $r10, $r11;
        com.vividsolutions.jts.geom.LineString r0;
        int $i0, $i1, $i2, $i3, i8, i9, i10, i11, i12, $i13, $i14, $i15, $i16, $i18, $i20, $i22;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6;
        com.vividsolutions.jts.geom.Coordinate $r4, $r5;

        r0 := @parameter0: com.vividsolutions.jts.geom.LineString;

        $r1 = virtualinvoke r0.<com.vividsolutions.jts.geom.LineString: com.vividsolutions.jts.geom.CoordinateSequence getCoordinateSequence()>();

        $i0 = interfaceinvoke $r1.<com.vividsolutions.jts.geom.CoordinateSequence: int size()>();

        if $i0 > 1 goto label01;

        return 0;

     label01:
        i8 = 0;

        i9 = 0;

        i10 = 0;

        i11 = 0;

        $d0 = interfaceinvoke $r1.<com.vividsolutions.jts.geom.CoordinateSequence: double getX(int)>(0);

        i12 = 1;

     label02:
        if i12 >= $i0 goto label08;

        $d1 = interfaceinvoke $r1.<com.vividsolutions.jts.geom.CoordinateSequence: double getX(int)>(i12);

        $z4 = <com.spatial4j.core.shape.jts.JtsGeometry: boolean $assertionsDisabled>;

        if $z4 != 0 goto label04;

        $b6 = $d1 cmpl -180.0;

        $i13 = (int) $b6;

        if $i13 < 0 goto label03;

        $b7 = $d1 cmpg 180.0;

        $i14 = (int) $b7;

        if $i14 <= 0 goto label04;

     label03:
        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>("X not in geo bounds");

        throw $r8;

     label04:
        $d2 = (double) i8;

        $d5 = $d1 + $d2;

        d6 = $d5;

        $d3 = $d0 - $d5;

        $b4 = $d3 cmpl 180.0;

        $i15 = (int) $b4;

        if $i15 <= 0 goto label05;

        d6 = $d5 + 360.0;

        i8 = i8 + 360;

        i9 = i9 + 1;

        i11 = staticinvoke <java.lang.Math: int max(int,int)>(i11, i9);

        goto label06;

     label05:
        $d4 = $d5 - $d0;

        $b5 = $d4 cmpl 180.0;

        $i16 = (int) $b5;

        if $i16 <= 0 goto label06;

        d6 = $d5 - 360.0;

        $i18 = (int) -360;

        i8 = i8 + $i18;

        $i20 = (int) -1;

        i9 = i9 + $i20;

        i10 = staticinvoke <java.lang.Math: int min(int,int)>(i10, i9);

     label06:
        if i9 == 0 goto label07;

        interfaceinvoke $r1.<com.vividsolutions.jts.geom.CoordinateSequence: void setOrdinate(int,int,double)>(i12, 0, d6);

     label07:
        i12 = i12 + 1;

        goto label02;

     label08:
        $z0 = r0 instanceof com.vividsolutions.jts.geom.LinearRing;

        if $z0 == 0 goto label10;

        $z1 = <com.spatial4j.core.shape.jts.JtsGeometry: boolean $assertionsDisabled>;

        if $z1 != 0 goto label09;

        $r4 = interfaceinvoke $r1.<com.vividsolutions.jts.geom.CoordinateSequence: com.vividsolutions.jts.geom.Coordinate getCoordinate(int)>(0);

        $i3 = $i0 - 1;

        $r5 = interfaceinvoke $r1.<com.vividsolutions.jts.geom.CoordinateSequence: com.vividsolutions.jts.geom.Coordinate getCoordinate(int)>($i3);

        $z3 = virtualinvoke $r4.<com.vividsolutions.jts.geom.Coordinate: boolean equals(java.lang.Object)>($r5);

        if $z3 != 0 goto label09;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label09:
        $z2 = <com.spatial4j.core.shape.jts.JtsGeometry: boolean $assertionsDisabled>;

        if $z2 != 0 goto label10;

        if i9 == 0 goto label10;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label10:
        $z5 = <com.spatial4j.core.shape.jts.JtsGeometry: boolean $assertionsDisabled>;

        if $z5 != 0 goto label12;

        if i11 < 0 goto label11;

        if i10 <= 0 goto label12;

     label11:
        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label12:
        $i22 = (int) -360;

        $i1 = i10 * $i22;

        $r12 = (com.vividsolutions.jts.geom.Geometry) r0;

        staticinvoke <com.spatial4j.core.shape.jts.JtsGeometry: void shiftGeomByX(com.vividsolutions.jts.geom.Geometry,int)>($r12, $i1);

        $i2 = i11 - i10;

        if $i2 <= 0 goto label13;

        virtualinvoke r0.<com.vividsolutions.jts.geom.LineString: void geometryChanged()>();

     label13:
        return $i2;
    }

    private static void shiftGeomByX(com.vividsolutions.jts.geom.Geometry, int)
    {
        int i0;
        com.vividsolutions.jts.geom.Geometry r0;
        com.spatial4j.core.shape.jts.JtsGeometry$2 $r1;

        r0 := @parameter0: com.vividsolutions.jts.geom.Geometry;

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        return;

     label1:
        $r1 = new com.spatial4j.core.shape.jts.JtsGeometry$2;

        specialinvoke $r1.<com.spatial4j.core.shape.jts.JtsGeometry$2: void <init>(int)>(i0);

        virtualinvoke r0.<com.vividsolutions.jts.geom.Geometry: void apply(com.vividsolutions.jts.geom.CoordinateSequenceFilter)>($r1);

        return;
    }

    private static com.vividsolutions.jts.geom.Geometry unionGeometryCollection(com.vividsolutions.jts.geom.Geometry)
    {
        com.vividsolutions.jts.geom.Geometry r0, $r1;
        boolean $z0;

        r0 := @parameter0: com.vividsolutions.jts.geom.Geometry;

        $z0 = r0 instanceof com.vividsolutions.jts.geom.GeometryCollection;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.vividsolutions.jts.geom.Geometry: com.vividsolutions.jts.geom.Geometry union()>();

        return $r1;

     label1:
        return r0;
    }

    private static com.vividsolutions.jts.geom.Geometry cutUnwrappedGeomInto360(com.vividsolutions.jts.geom.Geometry)
    {
        byte $b0, $b2, $b6;
        com.vividsolutions.jts.geom.Geometry r0, $r5, $r6, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.vividsolutions.jts.geom.GeometryFactory $r3;
        java.lang.AssertionError $r11, $r14, $r15;
        java.util.ArrayList $r12;
        int $i1, i3, $i4, $i5, $i7, $i8, $i10, $i11, $i13;
        double $d0, $d1, $d2, $d3, $d4;
        com.vividsolutions.jts.geom.Envelope $r1, $r13;

        r0 := @parameter0: com.vividsolutions.jts.geom.Geometry;

        $r1 = virtualinvoke r0.<com.vividsolutions.jts.geom.Geometry: com.vividsolutions.jts.geom.Envelope getEnvelopeInternal()>();

        $d0 = virtualinvoke $r1.<com.vividsolutions.jts.geom.Envelope: double getMinX()>();

        $b0 = $d0 cmpl -180.0;

        $i7 = (int) $b0;

        if $i7 < 0 goto label1;

        $d2 = virtualinvoke $r1.<com.vividsolutions.jts.geom.Envelope: double getMaxX()>();

        $b2 = $d2 cmpg 180.0;

        $i8 = (int) $b2;

        if $i8 > 0 goto label1;

        return r0;

     label1:
        $z0 = <com.spatial4j.core.shape.jts.JtsGeometry: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $z5 = virtualinvoke r0.<com.vividsolutions.jts.geom.Geometry: boolean isValid()>();

        if $z5 != 0 goto label2;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>(java.lang.Object)>("geom");

        throw $r11;

     label2:
        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        i3 = 0;

     label3:
        $i4 = i3 * 360;

        $i10 = (int) -180;

        $i5 = $i10 + $i4;

        $d3 = (double) $i5;

        $d4 = virtualinvoke $r1.<com.vividsolutions.jts.geom.Envelope: double getMaxX()>();

        $b6 = $d4 cmpg $d3;

        $i11 = (int) $b6;

        if $i11 > 0 goto label4;

        goto label7;

     label4:
        $r3 = virtualinvoke r0.<com.vividsolutions.jts.geom.Geometry: com.vividsolutions.jts.geom.GeometryFactory getFactory()>();

        $r13 = new com.vividsolutions.jts.geom.Envelope;

        $d1 = $d3 + 360.0;

        specialinvoke $r13.<com.vividsolutions.jts.geom.Envelope: void <init>(double,double,double,double)>($d3, $d1, -90.0, 90.0);

        $r5 = virtualinvoke $r3.<com.vividsolutions.jts.geom.GeometryFactory: com.vividsolutions.jts.geom.Geometry toGeometry(com.vividsolutions.jts.geom.Envelope)>($r13);

        $z1 = <com.spatial4j.core.shape.jts.JtsGeometry: boolean $assertionsDisabled>;

        if $z1 != 0 goto label5;

        $z4 = virtualinvoke $r5.<com.vividsolutions.jts.geom.Geometry: boolean isValid()>();

        if $z4 != 0 goto label5;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>(java.lang.Object)>("rect");

        throw $r14;

     label5:
        $r6 = virtualinvoke $r5.<com.vividsolutions.jts.geom.Geometry: com.vividsolutions.jts.geom.Geometry intersection(com.vividsolutions.jts.geom.Geometry)>(r0);

        $z2 = <com.spatial4j.core.shape.jts.JtsGeometry: boolean $assertionsDisabled>;

        if $z2 != 0 goto label6;

        $z3 = virtualinvoke $r6.<com.vividsolutions.jts.geom.Geometry: boolean isValid()>();

        if $z3 != 0 goto label6;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>(java.lang.Object)>("pageGeom");

        throw $r15;

     label6:
        $i13 = (int) -360;

        $i1 = i3 * $i13;

        staticinvoke <com.spatial4j.core.shape.jts.JtsGeometry: void shiftGeomByX(com.vividsolutions.jts.geom.Geometry,int)>($r6, $i1);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r6);

        i3 = i3 + 1;

        goto label3;

     label7:
        $r9 = staticinvoke <com.vividsolutions.jts.operation.union.UnaryUnionOp: com.vividsolutions.jts.geom.Geometry union(java.util.Collection)>($r12);

        return $r9;
    }

    public volatile com.spatial4j.core.shape.Point getCenter()
    {
        com.spatial4j.core.shape.jts.JtsPoint $r1;
        com.spatial4j.core.shape.jts.JtsGeometry r0;

        r0 := @this: com.spatial4j.core.shape.jts.JtsGeometry;

        $r1 = virtualinvoke r0.<com.spatial4j.core.shape.jts.JtsGeometry: com.spatial4j.core.shape.jts.JtsPoint getCenter()>();

        return $r1;
    }

    static int access$000(com.vividsolutions.jts.geom.LineString)
    {
        int $i0;
        com.vividsolutions.jts.geom.LineString r0;

        r0 := @parameter0: com.vividsolutions.jts.geom.LineString;

        $i0 = staticinvoke <com.spatial4j.core.shape.jts.JtsGeometry: int unwrapDateline(com.vividsolutions.jts.geom.LineString)>(r0);

        return $i0;
    }

    static int access$100(com.vividsolutions.jts.geom.Polygon)
    {
        int $i0;
        com.vividsolutions.jts.geom.Polygon r0;

        r0 := @parameter0: com.vividsolutions.jts.geom.Polygon;

        $i0 = staticinvoke <com.spatial4j.core.shape.jts.JtsGeometry: int unwrapDateline(com.vividsolutions.jts.geom.Polygon)>(r0);

        return $i0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/spatial4j/core/shape/jts/JtsGeometry;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.spatial4j.core.shape.jts.JtsGeometry: boolean $assertionsDisabled> = $z1;

        return;
    }
}
