public class org.apache.batik.bridge.SVGFeMergeElementBridge extends org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge
{

    public void <init>()
    {
        org.apache.batik.bridge.SVGFeMergeElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGFeMergeElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: void <init>()>();

        return;
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.bridge.SVGFeMergeElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGFeMergeElementBridge;

        return "feMerge";
    }

    public org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.w3c.dom.Element, org.apache.batik.gvt.GraphicsNode, org.apache.batik.ext.awt.image.renderable.Filter, java.awt.geom.Rectangle2D, java.util.Map)
    {
        org.apache.batik.bridge.SVGFeMergeElementBridge r22;
        java.awt.geom.Rectangle2D $r10, r12, $r15, r16, $r17;
        org.apache.batik.ext.awt.image.PadMode $r21;
        org.apache.batik.ext.awt.image.CompositeRule $r19;
        org.apache.batik.ext.awt.image.renderable.CompositeRable8Bit $r18;
        java.util.Map r4;
        int $i0;
        boolean $z0;
        java.util.Iterator $r7;
        org.apache.batik.gvt.GraphicsNode r2;
        org.apache.batik.bridge.BridgeContext r5;
        org.apache.batik.ext.awt.image.renderable.Filter r3, $r9, $r14;
        java.util.List $r6;
        org.apache.batik.ext.awt.image.renderable.PadRable8Bit $r20;
        org.w3c.dom.Element r0, r1;
        java.lang.Object $r8, $r11, $r13;

        r22 := @this: org.apache.batik.bridge.SVGFeMergeElementBridge;

        r5 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r0 := @parameter1: org.w3c.dom.Element;

        r1 := @parameter2: org.w3c.dom.Element;

        r2 := @parameter3: org.apache.batik.gvt.GraphicsNode;

        r3 := @parameter4: org.apache.batik.ext.awt.image.renderable.Filter;

        r16 := @parameter5: java.awt.geom.Rectangle2D;

        r4 := @parameter6: java.util.Map;

        $r6 = staticinvoke <org.apache.batik.bridge.SVGFeMergeElementBridge: java.util.List extractFeMergeNode(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)>(r0, r1, r2, r3, r4, r5);

        if $r6 != null goto label1;

        return null;

     label1:
        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i0 != 0 goto label2;

        return null;

     label2:
        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (org.apache.batik.ext.awt.image.renderable.Filter) $r8;

        $r10 = interfaceinvoke $r9.<org.apache.batik.ext.awt.image.renderable.Filter: java.awt.geom.Rectangle2D getBounds2D()>();

        $r11 = virtualinvoke $r10.<java.awt.geom.RectangularShape: java.lang.Object clone()>();

        r12 = (java.awt.geom.Rectangle2D) $r11;

        goto label4;

     label3:
        $r13 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (org.apache.batik.ext.awt.image.renderable.Filter) $r13;

        $r15 = interfaceinvoke $r14.<org.apache.batik.ext.awt.image.renderable.Filter: java.awt.geom.Rectangle2D getBounds2D()>();

        virtualinvoke r12.<java.awt.geom.Rectangle2D: void add(java.awt.geom.Rectangle2D)>($r15);

     label4:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        $r17 = staticinvoke <org.apache.batik.bridge.SVGUtilities: java.awt.geom.Rectangle2D convertFilterPrimitiveRegion(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.apache.batik.bridge.BridgeContext)>(r0, r1, r2, r12, r16, r5);

        $r18 = new org.apache.batik.ext.awt.image.renderable.CompositeRable8Bit;

        $r19 = <org.apache.batik.ext.awt.image.CompositeRule: org.apache.batik.ext.awt.image.CompositeRule OVER>;

        specialinvoke $r18.<org.apache.batik.ext.awt.image.renderable.CompositeRable8Bit: void <init>(java.util.List,org.apache.batik.ext.awt.image.CompositeRule,boolean)>($r6, $r19, 1);

        staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: void handleColorInterpolationFilters(org.apache.batik.ext.awt.image.renderable.Filter,org.w3c.dom.Element)>($r18, r0);

        $r20 = new org.apache.batik.ext.awt.image.renderable.PadRable8Bit;

        $r21 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode ZERO_PAD>;

        specialinvoke $r20.<org.apache.batik.ext.awt.image.renderable.PadRable8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)>($r18, $r17, $r21);

        staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: void updateFilterMap(org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)>(r0, $r20, r4);

        return $r20;
    }

    protected static java.util.List extractFeMergeNode(org.w3c.dom.Element, org.w3c.dom.Element, org.apache.batik.gvt.GraphicsNode, org.apache.batik.ext.awt.image.renderable.Filter, java.util.Map, org.apache.batik.bridge.BridgeContext)
    {
        org.apache.batik.gvt.GraphicsNode r5;
        org.apache.batik.bridge.BridgeContext r2;
        org.apache.batik.ext.awt.image.renderable.Filter r6, $r9;
        org.apache.batik.bridge.Bridge $r3;
        short $s0;
        org.w3c.dom.Element r0, r1, r4;
        java.util.Map r7;
        org.w3c.dom.Node r12;
        org.apache.batik.bridge.SVGFeMergeElementBridge$SVGFeMergeNodeElementBridge $r8;
        java.util.LinkedList $r10, r11;
        boolean $z0;

        r0 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: org.w3c.dom.Element;

        r5 := @parameter2: org.apache.batik.gvt.GraphicsNode;

        r6 := @parameter3: org.apache.batik.ext.awt.image.renderable.Filter;

        r7 := @parameter4: java.util.Map;

        r2 := @parameter5: org.apache.batik.bridge.BridgeContext;

        r11 = null;

        r12 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label6;

     label1:
        $s0 = interfaceinvoke r12.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 == 1 goto label2;

        goto label5;

     label2:
        r1 = (org.w3c.dom.Element) r12;

        $r3 = virtualinvoke r2.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.Bridge getBridge(org.w3c.dom.Element)>(r1);

        if $r3 == null goto label5;

        $z0 = $r3 instanceof org.apache.batik.bridge.SVGFeMergeElementBridge$SVGFeMergeNodeElementBridge;

        if $z0 != 0 goto label3;

        goto label5;

     label3:
        $r8 = (org.apache.batik.bridge.SVGFeMergeElementBridge$SVGFeMergeNodeElementBridge) $r3;

        $r9 = virtualinvoke $r8.<org.apache.batik.bridge.SVGFeMergeElementBridge$SVGFeMergeNodeElementBridge: org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)>(r2, r1, r4, r5, r6, r7);

        if $r9 == null goto label5;

        if r11 != null goto label4;

        $r10 = new java.util.LinkedList;

        specialinvoke $r10.<java.util.LinkedList: void <init>()>();

        r11 = $r10;

     label4:
        interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>($r9);

     label5:
        r12 = interfaceinvoke r12.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label6:
        if r12 != null goto label1;

        return r11;
    }
}
