public class com.mycila.inject.internal.cglib.beans.BulkBean$Generator extends com.mycila.inject.internal.cglib.core.AbstractClassGenerator
{
    private static final com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source SOURCE;
    private java.lang.Class target;
    private java.lang.String[] getters;
    private java.lang.String[] setters;
    private java.lang.Class[] types;

    public void <init>()
    {
        com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source $r1;
        com.mycila.inject.internal.cglib.beans.BulkBean$Generator r0;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BulkBean$Generator;

        $r1 = <com.mycila.inject.internal.cglib.beans.BulkBean$Generator: com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source SOURCE>;

        specialinvoke r0.<com.mycila.inject.internal.cglib.core.AbstractClassGenerator: void <init>(com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source)>($r1);

        return;
    }

    public void setTarget(java.lang.Class)
    {
        com.mycila.inject.internal.cglib.beans.BulkBean$Generator r0;
        java.lang.Class r1;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BulkBean$Generator;

        r1 := @parameter0: java.lang.Class;

        r0.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: java.lang.Class target> = r1;

        return;
    }

    public void setGetters(java.lang.String[])
    {
        com.mycila.inject.internal.cglib.beans.BulkBean$Generator r0;
        java.lang.String[] r1;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BulkBean$Generator;

        r1 := @parameter0: java.lang.String[];

        r0.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: java.lang.String[] getters> = r1;

        return;
    }

    public void setSetters(java.lang.String[])
    {
        com.mycila.inject.internal.cglib.beans.BulkBean$Generator r0;
        java.lang.String[] r1;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BulkBean$Generator;

        r1 := @parameter0: java.lang.String[];

        r0.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: java.lang.String[] setters> = r1;

        return;
    }

    public void setTypes(java.lang.Class[])
    {
        com.mycila.inject.internal.cglib.beans.BulkBean$Generator r0;
        java.lang.Class[] r1;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BulkBean$Generator;

        r1 := @parameter0: java.lang.Class[];

        r0.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: java.lang.Class[] types> = r1;

        return;
    }

    protected java.lang.ClassLoader getDefaultClassLoader()
    {
        com.mycila.inject.internal.cglib.beans.BulkBean$Generator r0;
        java.lang.Class $r1;
        java.lang.ClassLoader $r2;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BulkBean$Generator;

        $r1 = r0.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: java.lang.Class target>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        return $r2;
    }

    public com.mycila.inject.internal.cglib.beans.BulkBean create()
    {
        com.mycila.inject.internal.cglib.beans.BulkBean$Generator r0;
        java.lang.Class[] $r5;
        java.lang.String[] $r6, $r8, $r9;
        com.mycila.inject.internal.cglib.beans.BulkBean $r12;
        com.mycila.inject.internal.cglib.beans.BulkBean$BulkBeanKey $r7;
        java.lang.Class $r1, $r3;
        java.lang.Object $r10, $r11;
        java.lang.String $r2, $r4;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BulkBean$Generator;

        $r1 = r0.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: java.lang.Class target>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: void setNamePrefix(java.lang.String)>($r2);

        $r3 = r0.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: java.lang.Class target>;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = r0.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: java.lang.Class[] types>;

        $r6 = staticinvoke <com.mycila.inject.internal.cglib.core.ReflectUtils: java.lang.String[] getNames(java.lang.Class[])>($r5);

        $r7 = staticinvoke <com.mycila.inject.internal.cglib.beans.BulkBean: com.mycila.inject.internal.cglib.beans.BulkBean$BulkBeanKey access$000()>();

        $r9 = r0.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: java.lang.String[] getters>;

        $r8 = r0.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: java.lang.String[] setters>;

        $r10 = interfaceinvoke $r7.<com.mycila.inject.internal.cglib.beans.BulkBean$BulkBeanKey: java.lang.Object newInstance(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[])>($r4, $r9, $r8, $r6);

        $r11 = specialinvoke r0.<com.mycila.inject.internal.cglib.core.AbstractClassGenerator: java.lang.Object create(java.lang.Object)>($r10);

        $r12 = (com.mycila.inject.internal.cglib.beans.BulkBean) $r11;

        return $r12;
    }

    public void generateClass(com.mycila.inject.internal.asm.ClassVisitor) throws java.lang.Exception
    {
        com.mycila.inject.internal.cglib.beans.BulkBean$Generator r2;
        java.lang.Class[] $r4;
        java.lang.String[] $r5, $r6;
        com.mycila.inject.internal.cglib.beans.BulkBeanEmitter $r0;
        java.lang.Class $r7;
        java.lang.String $r3;
        com.mycila.inject.internal.asm.ClassVisitor r1;

        r2 := @this: com.mycila.inject.internal.cglib.beans.BulkBean$Generator;

        r1 := @parameter0: com.mycila.inject.internal.asm.ClassVisitor;

        $r0 = new com.mycila.inject.internal.cglib.beans.BulkBeanEmitter;

        $r3 = virtualinvoke r2.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: java.lang.String getClassName()>();

        $r7 = r2.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: java.lang.Class target>;

        $r6 = r2.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: java.lang.String[] getters>;

        $r5 = r2.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: java.lang.String[] setters>;

        $r4 = r2.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: java.lang.Class[] types>;

        specialinvoke $r0.<com.mycila.inject.internal.cglib.beans.BulkBeanEmitter: void <init>(com.mycila.inject.internal.asm.ClassVisitor,java.lang.String,java.lang.Class,java.lang.String[],java.lang.String[],java.lang.Class[])>(r1, $r3, $r7, $r6, $r5, $r4);

        return;
    }

    protected java.lang.Object firstInstance(java.lang.Class)
    {
        java.lang.String[] $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        int i0, $i1, $i2;
        com.mycila.inject.internal.cglib.beans.BulkBean$Generator r3;
        java.lang.Class[] $r12, $r13, $r14, $r15, $r16;
        com.mycila.inject.internal.cglib.beans.BulkBean r2;
        java.lang.Class r0, $r4;
        java.lang.Object $r1;

        r3 := @this: com.mycila.inject.internal.cglib.beans.BulkBean$Generator;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <com.mycila.inject.internal.cglib.core.ReflectUtils: java.lang.Object newInstance(java.lang.Class)>(r0);

        r2 = (com.mycila.inject.internal.cglib.beans.BulkBean) $r1;

        $r4 = r3.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: java.lang.Class target>;

        r2.<com.mycila.inject.internal.cglib.beans.BulkBean: java.lang.Class target> = $r4;

        $r5 = r3.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: java.lang.String[] getters>;

        i0 = lengthof $r5;

        $r6 = newarray (java.lang.String)[i0];

        r2.<com.mycila.inject.internal.cglib.beans.BulkBean: java.lang.String[] getters> = $r6;

        $r8 = r3.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: java.lang.String[] getters>;

        $r7 = r2.<com.mycila.inject.internal.cglib.beans.BulkBean: java.lang.String[] getters>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r7, 0, i0);

        $r9 = newarray (java.lang.String)[i0];

        r2.<com.mycila.inject.internal.cglib.beans.BulkBean: java.lang.String[] setters> = $r9;

        $r11 = r3.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: java.lang.String[] setters>;

        $r10 = r2.<com.mycila.inject.internal.cglib.beans.BulkBean: java.lang.String[] setters>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, $r10, 0, i0);

        $r12 = r3.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: java.lang.Class[] types>;

        $i1 = lengthof $r12;

        $r13 = newarray (java.lang.Class)[$i1];

        r2.<com.mycila.inject.internal.cglib.beans.BulkBean: java.lang.Class[] types> = $r13;

        $r16 = r3.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: java.lang.Class[] types>;

        $r15 = r2.<com.mycila.inject.internal.cglib.beans.BulkBean: java.lang.Class[] types>;

        $r14 = r3.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: java.lang.Class[] types>;

        $i2 = lengthof $r14;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r16, 0, $r15, 0, $i2);

        return r2;
    }

    protected java.lang.Object nextInstance(java.lang.Object)
    {
        com.mycila.inject.internal.cglib.beans.BulkBean$Generator r1;
        java.lang.Object r0;

        r1 := @this: com.mycila.inject.internal.cglib.beans.BulkBean$Generator;

        r0 := @parameter0: java.lang.Object;

        return r0;
    }

    static void <clinit>()
    {
        com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source $r0;
        java.lang.Class $r1, $r3;
        java.lang.String $r2;

        $r0 = new com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source;

        $r1 = <com.mycila.inject.internal.cglib.beans.BulkBean: java.lang.Class class$net$sf$cglib$beans$BulkBean>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <com.mycila.inject.internal.cglib.beans.BulkBean: java.lang.Class class$(java.lang.String)>("com.mycila.inject.internal.cglib.beans.BulkBean");

        <com.mycila.inject.internal.cglib.beans.BulkBean: java.lang.Class class$net$sf$cglib$beans$BulkBean> = $r3;

        goto label2;

     label1:
        $r3 = <com.mycila.inject.internal.cglib.beans.BulkBean: java.lang.Class class$net$sf$cglib$beans$BulkBean>;

     label2:
        $r2 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r0.<com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source: void <init>(java.lang.String)>($r2);

        <com.mycila.inject.internal.cglib.beans.BulkBean$Generator: com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source SOURCE> = $r0;

        return;
    }
}
