public class org.codehaus.groovy.reflection.stdclasses.ShortCachedClass extends org.codehaus.groovy.reflection.stdclasses.NumberCachedClass
{
    private boolean allowNull;
    static java.lang.Class class$java$lang$Short;
    static java.lang.Class class$java$lang$Byte;

    public void <init>(java.lang.Class, boolean)
    {
        java.lang.Class r1;
        org.codehaus.groovy.reflection.stdclasses.ShortCachedClass r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.reflection.stdclasses.ShortCachedClass;

        r1 := @parameter0: java.lang.Class;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.codehaus.groovy.reflection.stdclasses.NumberCachedClass: void <init>(java.lang.Class)>(r1);

        r0.<org.codehaus.groovy.reflection.stdclasses.ShortCachedClass: boolean allowNull> = z0;

        return;
    }

    public java.lang.Object coerceArgument(java.lang.Object)
    {
        short $s0;
        java.lang.Short $r1;
        org.codehaus.groovy.reflection.stdclasses.ShortCachedClass r3;
        java.lang.Object r0;
        java.lang.Number $r2;
        boolean $z0, $z1;

        r3 := @this: org.codehaus.groovy.reflection.stdclasses.ShortCachedClass;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Short;

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $z1 = r0 instanceof java.lang.Number;

        if $z1 == 0 goto label2;

        $r1 = new java.lang.Short;

        $r2 = (java.lang.Number) r0;

        $s0 = virtualinvoke $r2.<java.lang.Number: short shortValue()>();

        specialinvoke $r1.<java.lang.Short: void <init>(short)>($s0);

        return $r1;

     label2:
        return r0;
    }

    public boolean isDirectlyAssignable(java.lang.Object)
    {
        org.codehaus.groovy.reflection.stdclasses.ShortCachedClass r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.codehaus.groovy.reflection.stdclasses.ShortCachedClass;

        r1 := @parameter0: java.lang.Object;

        $z0 = r0.<org.codehaus.groovy.reflection.stdclasses.ShortCachedClass: boolean allowNull>;

        if $z0 == 0 goto label1;

        if r1 == null goto label2;

     label1:
        $z1 = r1 instanceof java.lang.Short;

        if $z1 == 0 goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    public boolean isAssignableFrom(java.lang.Class)
    {
        org.codehaus.groovy.reflection.stdclasses.ShortCachedClass r0;
        java.lang.Class r1, $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.groovy.reflection.stdclasses.ShortCachedClass;

        r1 := @parameter0: java.lang.Class;

        $z0 = r0.<org.codehaus.groovy.reflection.stdclasses.ShortCachedClass: boolean allowNull>;

        if $z0 == 0 goto label1;

        if r1 == null goto label6;

     label1:
        $r2 = <org.codehaus.groovy.reflection.stdclasses.ShortCachedClass: java.lang.Class class$java$lang$Short>;

        if $r2 != null goto label2;

        $r6 = staticinvoke <org.codehaus.groovy.reflection.stdclasses.ShortCachedClass: java.lang.Class class$(java.lang.String)>("java.lang.Short");

        <org.codehaus.groovy.reflection.stdclasses.ShortCachedClass: java.lang.Class class$java$lang$Short> = $r6;

        goto label3;

     label2:
        $r6 = <org.codehaus.groovy.reflection.stdclasses.ShortCachedClass: java.lang.Class class$java$lang$Short>;

     label3:
        if r1 == $r6 goto label6;

        $r3 = <org.codehaus.groovy.reflection.stdclasses.ShortCachedClass: java.lang.Class class$java$lang$Byte>;

        if $r3 != null goto label4;

        $r7 = staticinvoke <org.codehaus.groovy.reflection.stdclasses.ShortCachedClass: java.lang.Class class$(java.lang.String)>("java.lang.Byte");

        <org.codehaus.groovy.reflection.stdclasses.ShortCachedClass: java.lang.Class class$java$lang$Byte> = $r7;

        goto label5;

     label4:
        $r7 = <org.codehaus.groovy.reflection.stdclasses.ShortCachedClass: java.lang.Class class$java$lang$Byte>;

     label5:
        if r1 == $r7 goto label6;

        $r4 = <java.lang.Short: java.lang.Class TYPE>;

        if r1 == $r4 goto label6;

        $r5 = <java.lang.Byte: java.lang.Class TYPE>;

        if r1 != $r5 goto label7;

     label6:
        $z1 = 1;

        goto label8;

     label7:
        $z1 = 0;

     label8:
        return $z1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
