public class com.google.common.net.InternetDomainName extends java.lang.Object
{
    private static final com.google.common.base.CharMatcher DOTS_MATCHER;
    private static final com.google.common.base.Splitter DOT_SPLITTER;
    private static final com.google.common.base.Joiner DOT_JOINER;
    private static final int NO_PUBLIC_SUFFIX_FOUND;
    private static final java.lang.String DOT_REGEX;
    private static final int MAX_PARTS;
    private static final int MAX_LENGTH;
    private static final int MAX_DOMAIN_PART_LENGTH;
    private final java.lang.String name;
    private final com.google.common.collect.ImmutableList parts;
    private final int publicSuffixIndex;
    private static final com.google.common.base.CharMatcher DASH_MATCHER;
    private static final com.google.common.base.CharMatcher PART_CHAR_MATCHER;

    private void <init>(java.lang.String)
    {
        java.lang.Object[] $r4, $r9, $r11;
        com.google.common.net.InternetDomainName r0;
        java.lang.Iterable $r6;
        com.google.common.collect.ImmutableList $r7, $r8, $r10;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r2, $r3, r12, r13;
        com.google.common.base.Splitter $r5;
        boolean $z0, $z1, $z2, $z3;
        com.google.common.base.CharMatcher $r1;

        r0 := @this: com.google.common.net.InternetDomainName;

        r12 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <com.google.common.net.InternetDomainName: com.google.common.base.CharMatcher DOTS_MATCHER>;

        $r2 = virtualinvoke $r1.<com.google.common.base.CharMatcher: java.lang.String replaceFrom(java.lang.CharSequence,char)>(r12, 46);

        $r3 = staticinvoke <com.google.common.base.Ascii: java.lang.String toLowerCase(java.lang.String)>($r2);

        r13 = $r3;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>(".");

        if $z0 == 0 goto label1;

        $i3 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i4 = $i3 - 1;

        r13 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

     label1:
        $i0 = virtualinvoke r13.<java.lang.String: int length()>();

        if $i0 > 253 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r13;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z2, "Domain name too long: \'%s\':", $r4);

        r0.<com.google.common.net.InternetDomainName: java.lang.String name> = r13;

        $r5 = <com.google.common.net.InternetDomainName: com.google.common.base.Splitter DOT_SPLITTER>;

        $r6 = virtualinvoke $r5.<com.google.common.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>(r13);

        $r7 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.lang.Iterable)>($r6);

        r0.<com.google.common.net.InternetDomainName: com.google.common.collect.ImmutableList parts> = $r7;

        $r8 = r0.<com.google.common.net.InternetDomainName: com.google.common.collect.ImmutableList parts>;

        $i1 = virtualinvoke $r8.<com.google.common.collect.ImmutableList: int size()>();

        if $i1 > 127 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r13;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z3, "Domain has too many parts: \'%s\'", $r9);

        $r10 = r0.<com.google.common.net.InternetDomainName: com.google.common.collect.ImmutableList parts>;

        $z1 = staticinvoke <com.google.common.net.InternetDomainName: boolean validateSyntax(java.util.List)>($r10);

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r13;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z1, "Not a valid domain name: \'%s\'", $r11);

        $i2 = specialinvoke r0.<com.google.common.net.InternetDomainName: int findPublicSuffix()>();

        r0.<com.google.common.net.InternetDomainName: int publicSuffixIndex> = $i2;

        return;
    }

    private int findPublicSuffix()
    {
        com.google.common.net.InternetDomainName r0;
        java.util.Set $r6, $r7;
        com.google.common.collect.ImmutableList $r1, $r2, $r4;
        int $i0, $i1, i2, $i4;
        java.lang.String $r5;
        com.google.common.base.Joiner $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.common.net.InternetDomainName;

        $r1 = r0.<com.google.common.net.InternetDomainName: com.google.common.collect.ImmutableList parts>;

        $i0 = virtualinvoke $r1.<com.google.common.collect.ImmutableList: int size()>();

        i2 = 0;

     label1:
        if i2 >= $i0 goto label5;

        $r3 = <com.google.common.net.InternetDomainName: com.google.common.base.Joiner DOT_JOINER>;

        $r2 = r0.<com.google.common.net.InternetDomainName: com.google.common.collect.ImmutableList parts>;

        $r4 = virtualinvoke $r2.<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList subList(int,int)>(i2, $i0);

        $r5 = virtualinvoke $r3.<com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)>($r4);

        $r6 = <com.google.common.net.TldPatterns: java.util.Set EXACT>;

        $z0 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        return i2;

     label2:
        $r7 = <com.google.common.net.TldPatterns: java.util.Set EXCLUDED>;

        $z1 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>($r5);

        if $z1 == 0 goto label3;

        $i1 = i2 + 1;

        return $i1;

     label3:
        $z2 = staticinvoke <com.google.common.net.InternetDomainName: boolean matchesWildcardPublicSuffix(java.lang.String)>($r5);

        if $z2 == 0 goto label4;

        return i2;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        $i4 = (int) -1;

        return $i4;
    }

    public static com.google.common.net.InternetDomainName fromLenient(java.lang.String)
    {
        com.google.common.net.InternetDomainName $r0;
        java.lang.Object $r2;
        java.lang.String r1, $r3;

        r1 := @parameter0: java.lang.String;

        $r0 = new com.google.common.net.InternetDomainName;

        $r2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (java.lang.String) $r2;

        specialinvoke $r0.<com.google.common.net.InternetDomainName: void <init>(java.lang.String)>($r3);

        return $r0;
    }

    private static boolean validateSyntax(java.util.List)
    {
        java.util.List r0;
        int $i0, i1, i2;
        java.lang.Object $r1, $r3;
        java.lang.String $r2, r4;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i1 = $i0 - 1;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        $r2 = (java.lang.String) $r1;

        $z0 = staticinvoke <com.google.common.net.InternetDomainName: boolean validatePart(java.lang.String,boolean)>($r2, 1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        i2 = 0;

     label2:
        if i2 >= i1 goto label4;

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        r4 = (java.lang.String) $r3;

        $z1 = staticinvoke <com.google.common.net.InternetDomainName: boolean validatePart(java.lang.String,boolean)>(r4, 0);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return 1;
    }

    private static boolean validatePart(java.lang.String, boolean)
    {
        int $i0, $i1, $i3, $i4;
        java.lang.String r0, $r2;
        boolean $z0, $z1, $z2, z3, $z4;
        com.google.common.base.CharMatcher $r1, $r3, $r4, $r5, $r6;
        char $c2, $c5, $c6;

        r0 := @parameter0: java.lang.String;

        z3 := @parameter1: boolean;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 < 1 goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 <= 63 goto label2;

     label1:
        return 0;

     label2:
        $r1 = <com.google.common.base.CharMatcher: com.google.common.base.CharMatcher ASCII>;

        $r2 = virtualinvoke $r1.<com.google.common.base.CharMatcher: java.lang.String retainFrom(java.lang.CharSequence)>(r0);

        $r3 = <com.google.common.net.InternetDomainName: com.google.common.base.CharMatcher PART_CHAR_MATCHER>;

        $z0 = virtualinvoke $r3.<com.google.common.base.CharMatcher: boolean matchesAllOf(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $r4 = <com.google.common.net.InternetDomainName: com.google.common.base.CharMatcher DASH_MATCHER>;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z1 = virtualinvoke $r4.<com.google.common.base.CharMatcher: boolean matches(char)>($c2);

        if $z1 != 0 goto label4;

        $r5 = <com.google.common.net.InternetDomainName: com.google.common.base.CharMatcher DASH_MATCHER>;

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        $i4 = $i3 - 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $z2 = virtualinvoke $r5.<com.google.common.base.CharMatcher: boolean matches(char)>($c5);

        if $z2 == 0 goto label5;

     label4:
        return 0;

     label5:
        if z3 == 0 goto label6;

        $r6 = <com.google.common.base.CharMatcher: com.google.common.base.CharMatcher DIGIT>;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z4 = virtualinvoke $r6.<com.google.common.base.CharMatcher: boolean matches(char)>($c6);

        if $z4 == 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public java.lang.String name()
    {
        java.lang.String $r1;
        com.google.common.net.InternetDomainName r0;

        r0 := @this: com.google.common.net.InternetDomainName;

        $r1 = r0.<com.google.common.net.InternetDomainName: java.lang.String name>;

        return $r1;
    }

    public com.google.common.collect.ImmutableList parts()
    {
        com.google.common.collect.ImmutableList $r1;
        com.google.common.net.InternetDomainName r0;

        r0 := @this: com.google.common.net.InternetDomainName;

        $r1 = r0.<com.google.common.net.InternetDomainName: com.google.common.collect.ImmutableList parts>;

        return $r1;
    }

    public boolean isPublicSuffix()
    {
        int $i0;
        com.google.common.net.InternetDomainName r0;
        boolean $z0;

        r0 := @this: com.google.common.net.InternetDomainName;

        $i0 = r0.<com.google.common.net.InternetDomainName: int publicSuffixIndex>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasPublicSuffix()
    {
        com.google.common.net.InternetDomainName r0;
        int $i0, $i2;
        boolean $z0;

        r0 := @this: com.google.common.net.InternetDomainName;

        $i0 = r0.<com.google.common.net.InternetDomainName: int publicSuffixIndex>;

        $i2 = (int) -1;

        if $i0 == $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.google.common.net.InternetDomainName publicSuffix()
    {
        com.google.common.net.InternetDomainName r0, $r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.common.net.InternetDomainName;

        $z0 = virtualinvoke r0.<com.google.common.net.InternetDomainName: boolean hasPublicSuffix()>();

        if $z0 == 0 goto label1;

        $i0 = r0.<com.google.common.net.InternetDomainName: int publicSuffixIndex>;

        $r1 = specialinvoke r0.<com.google.common.net.InternetDomainName: com.google.common.net.InternetDomainName ancestor(int)>($i0);

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

    public boolean isUnderPublicSuffix()
    {
        int $i0;
        com.google.common.net.InternetDomainName r0;
        boolean $z0;

        r0 := @this: com.google.common.net.InternetDomainName;

        $i0 = r0.<com.google.common.net.InternetDomainName: int publicSuffixIndex>;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isTopPrivateDomain()
    {
        int $i0;
        com.google.common.net.InternetDomainName r0;
        boolean $z0;

        r0 := @this: com.google.common.net.InternetDomainName;

        $i0 = r0.<com.google.common.net.InternetDomainName: int publicSuffixIndex>;

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.google.common.net.InternetDomainName topPrivateDomain()
    {
        java.lang.Object[] $r1;
        com.google.common.net.InternetDomainName r0, $r3;
        int $i0, $i1;
        java.lang.String $r2;
        boolean $z0, $z1;

        r0 := @this: com.google.common.net.InternetDomainName;

        $z0 = virtualinvoke r0.<com.google.common.net.InternetDomainName: boolean isTopPrivateDomain()>();

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $z1 = virtualinvoke r0.<com.google.common.net.InternetDomainName: boolean isUnderPublicSuffix()>();

        $r1 = newarray (java.lang.Object)[1];

        $r2 = r0.<com.google.common.net.InternetDomainName: java.lang.String name>;

        $r1[0] = $r2;

        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object[])>($z1, "Not under a public suffix: %s", $r1);

        $i0 = r0.<com.google.common.net.InternetDomainName: int publicSuffixIndex>;

        $i1 = $i0 - 1;

        $r3 = specialinvoke r0.<com.google.common.net.InternetDomainName: com.google.common.net.InternetDomainName ancestor(int)>($i1);

        return $r3;
    }

    public boolean hasParent()
    {
        com.google.common.collect.ImmutableList $r1;
        com.google.common.net.InternetDomainName r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.common.net.InternetDomainName;

        $r1 = r0.<com.google.common.net.InternetDomainName: com.google.common.collect.ImmutableList parts>;

        $i0 = virtualinvoke $r1.<com.google.common.collect.ImmutableList: int size()>();

        if $i0 <= 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.google.common.net.InternetDomainName parent()
    {
        java.lang.Object[] $r1;
        com.google.common.net.InternetDomainName r0, $r3;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.google.common.net.InternetDomainName;

        $z0 = virtualinvoke r0.<com.google.common.net.InternetDomainName: boolean hasParent()>();

        $r1 = newarray (java.lang.Object)[1];

        $r2 = r0.<com.google.common.net.InternetDomainName: java.lang.String name>;

        $r1[0] = $r2;

        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object[])>($z0, "Domain \'%s\' has no parent", $r1);

        $r3 = specialinvoke r0.<com.google.common.net.InternetDomainName: com.google.common.net.InternetDomainName ancestor(int)>(1);

        return $r3;
    }

    private com.google.common.net.InternetDomainName ancestor(int)
    {
        com.google.common.net.InternetDomainName r0, $r6;
        com.google.common.collect.ImmutableList $r1, $r3, $r4;
        int i0, $i1;
        java.lang.String $r5;
        com.google.common.base.Joiner $r2;

        r0 := @this: com.google.common.net.InternetDomainName;

        i0 := @parameter0: int;

        $r2 = <com.google.common.net.InternetDomainName: com.google.common.base.Joiner DOT_JOINER>;

        $r3 = r0.<com.google.common.net.InternetDomainName: com.google.common.collect.ImmutableList parts>;

        $r1 = r0.<com.google.common.net.InternetDomainName: com.google.common.collect.ImmutableList parts>;

        $i1 = virtualinvoke $r1.<com.google.common.collect.ImmutableList: int size()>();

        $r4 = virtualinvoke $r3.<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList subList(int,int)>(i0, $i1);

        $r5 = virtualinvoke $r2.<com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)>($r4);

        $r6 = virtualinvoke r0.<com.google.common.net.InternetDomainName: com.google.common.net.InternetDomainName fromInternal(java.lang.String)>($r5);

        return $r6;
    }

    public com.google.common.net.InternetDomainName child(java.lang.String)
    {
        com.google.common.net.InternetDomainName r0, $r10;
        java.lang.StringBuilder $r1, $r5, $r6, $r8;
        java.lang.Object $r3;
        java.lang.String r2, $r4, $r7, $r9;

        r0 := @this: com.google.common.net.InternetDomainName;

        r2 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r4 = (java.lang.String) $r3;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r7 = r0.<com.google.common.net.InternetDomainName: java.lang.String name>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke r0.<com.google.common.net.InternetDomainName: com.google.common.net.InternetDomainName fromInternal(java.lang.String)>($r9);

        return $r10;
    }

    com.google.common.net.InternetDomainName fromInternal(java.lang.String)
    {
        java.lang.String r0;
        com.google.common.net.InternetDomainName $r1, r2;

        r2 := @this: com.google.common.net.InternetDomainName;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.google.common.net.InternetDomainName: com.google.common.net.InternetDomainName fromLenient(java.lang.String)>(r0);

        return $r1;
    }

    public static boolean isValidLenient(java.lang.String)
    {
        java.lang.String r0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: java.lang.String;

     label1:
        staticinvoke <com.google.common.net.InternetDomainName: com.google.common.net.InternetDomainName fromLenient(java.lang.String)>(r0);

     label2:
        return 1;

     label3:
        $r1 := @caughtexception;

        return 0;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    private static boolean matchesWildcardPublicSuffix(java.lang.String)
    {
        int $i0;
        java.util.Set $r3;
        java.lang.String[] $r1;
        java.lang.String r0, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\\.", 2);

        $i0 = lengthof $r1;

        if $i0 != 2 goto label1;

        $r3 = <com.google.common.net.TldPatterns: java.util.Set UNDER>;

        $r2 = $r1[1];

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.lang.String toString()
    {
        com.google.common.net.InternetDomainName r0;
        java.lang.String $r2, $r4;
        com.google.common.base.Objects$ToStringHelper $r1, $r3;

        r0 := @this: com.google.common.net.InternetDomainName;

        $r1 = staticinvoke <com.google.common.base.Objects: com.google.common.base.Objects$ToStringHelper toStringHelper(java.lang.Object)>(r0);

        $r2 = r0.<com.google.common.net.InternetDomainName: java.lang.String name>;

        $r3 = virtualinvoke $r1.<com.google.common.base.Objects$ToStringHelper: com.google.common.base.Objects$ToStringHelper add(java.lang.String,java.lang.Object)>("name", $r2);

        $r4 = virtualinvoke $r3.<com.google.common.base.Objects$ToStringHelper: java.lang.String toString()>();

        return $r4;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.common.net.InternetDomainName r1, r2;
        java.lang.Object r0;
        java.lang.String $r3, $r4;
        boolean $z0, $z1;

        r1 := @this: com.google.common.net.InternetDomainName;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof com.google.common.net.InternetDomainName;

        if $z0 == 0 goto label2;

        r2 = (com.google.common.net.InternetDomainName) r0;

        $r4 = r1.<com.google.common.net.InternetDomainName: java.lang.String name>;

        $r3 = r2.<com.google.common.net.InternetDomainName: java.lang.String name>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        java.lang.String $r1;
        com.google.common.net.InternetDomainName r0;

        r0 := @this: com.google.common.net.InternetDomainName;

        $r1 = r0.<com.google.common.net.InternetDomainName: java.lang.String name>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    static void <clinit>()
    {
        com.google.common.base.CharMatcher $r0, $r3, $r4, $r5, $r6;
        com.google.common.base.Splitter $r1;
        com.google.common.base.Joiner $r2;

        <com.google.common.net.InternetDomainName: int MAX_DOMAIN_PART_LENGTH> = 63;

        <com.google.common.net.InternetDomainName: int MAX_LENGTH> = 253;

        <com.google.common.net.InternetDomainName: int MAX_PARTS> = 127;

        <com.google.common.net.InternetDomainName: java.lang.String DOT_REGEX> = "\\.";

        <com.google.common.net.InternetDomainName: int NO_PUBLIC_SUFFIX_FOUND> = -1;

        $r0 = staticinvoke <com.google.common.base.CharMatcher: com.google.common.base.CharMatcher anyOf(java.lang.CharSequence)>(".\u3002\uff0e\uff61");

        <com.google.common.net.InternetDomainName: com.google.common.base.CharMatcher DOTS_MATCHER> = $r0;

        $r1 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter on(char)>(46);

        <com.google.common.net.InternetDomainName: com.google.common.base.Splitter DOT_SPLITTER> = $r1;

        $r2 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(char)>(46);

        <com.google.common.net.InternetDomainName: com.google.common.base.Joiner DOT_JOINER> = $r2;

        $r3 = staticinvoke <com.google.common.base.CharMatcher: com.google.common.base.CharMatcher anyOf(java.lang.CharSequence)>("-_");

        <com.google.common.net.InternetDomainName: com.google.common.base.CharMatcher DASH_MATCHER> = $r3;

        $r5 = <com.google.common.base.CharMatcher: com.google.common.base.CharMatcher JAVA_LETTER_OR_DIGIT>;

        $r4 = <com.google.common.net.InternetDomainName: com.google.common.base.CharMatcher DASH_MATCHER>;

        $r6 = virtualinvoke $r5.<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher)>($r4);

        <com.google.common.net.InternetDomainName: com.google.common.base.CharMatcher PART_CHAR_MATCHER> = $r6;

        return;
    }
}
