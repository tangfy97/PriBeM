public class com.sun.lwuit.util.EditableResources extends com.sun.lwuit.util.Resources implements javax.swing.tree.TreeModel
{
    private static final short MINOR_VERSION;
    private static final short MAJOR_VERSION;
    private boolean modified;
    private boolean loadingMode;
    private boolean ignoreSVGMode;
    private boolean ignorePNGMode;
    private java.util.List undoQueue;
    private java.util.List redoQueue;
    private java.lang.Runnable onChange;
    private java.lang.Object renderingHint;
    private float ratioW;
    private float ratioH;
    private static final java.lang.Object root;
    private java.util.List listeners;
    private com.sun.lwuit.util.EditableResources$Node IMAGES;
    private com.sun.lwuit.util.EditableResources$Node ANIMATIONS;
    private com.sun.lwuit.util.EditableResources$Node THEMES;
    private com.sun.lwuit.util.EditableResources$Node FONTS;
    private com.sun.lwuit.util.EditableResources$Node L10N;
    private com.sun.lwuit.util.EditableResources$Node DATA;
    private com.sun.lwuit.util.EditableResources$Node[] nodes;

    private void writeImageAsPNG(com.sun.lwuit.Image, int, java.io.DataOutputStream) throws java.io.IOException
    {
        byte[] $r4;
        java.io.ByteArrayOutputStream $r3;
        java.awt.image.BufferedImage $r0;
        com.sun.lwuit.util.EditableResources r6;
        com.sun.lwuit.Image r1;
        java.io.DataOutputStream r5;
        int[] $r2;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6;

        r6 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: com.sun.lwuit.Image;

        i2 := @parameter1: int;

        r5 := @parameter2: java.io.DataOutputStream;

        $r0 = new java.awt.image.BufferedImage;

        $i0 = virtualinvoke r1.<com.sun.lwuit.Image: int getWidth()>();

        $i1 = virtualinvoke r1.<com.sun.lwuit.Image: int getHeight()>();

        specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, i2);

        $i3 = virtualinvoke r1.<com.sun.lwuit.Image: int getWidth()>();

        $i4 = virtualinvoke r1.<com.sun.lwuit.Image: int getHeight()>();

        $r2 = virtualinvoke r1.<com.sun.lwuit.Image: int[] getRGB()>();

        $i5 = virtualinvoke r1.<com.sun.lwuit.Image: int getWidth()>();

        virtualinvoke $r0.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, $i3, $i4, $r2, 0, $i5);

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>($r0, "png", $r3);

        $r4 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $i6 = lengthof $r4;

        virtualinvoke r5.<java.io.DataOutputStream: void writeInt(int)>($i6);

        virtualinvoke r5.<java.io.DataOutputStream: void write(byte[])>($r4);

        return;
    }

    public boolean isIgnoreSVGMode()
    {
        com.sun.lwuit.util.EditableResources r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        $z0 = r0.<com.sun.lwuit.util.EditableResources: boolean ignoreSVGMode>;

        return $z0;
    }

    public void setIgnoreSVGMode(boolean)
    {
        com.sun.lwuit.util.EditableResources r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.util.EditableResources: boolean ignoreSVGMode> = z0;

        return;
    }

    public boolean isIgnorePNGMode()
    {
        com.sun.lwuit.util.EditableResources r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        $z0 = r0.<com.sun.lwuit.util.EditableResources: boolean ignorePNGMode>;

        return $z0;
    }

    public void setIgnorePNGMode(boolean)
    {
        com.sun.lwuit.util.EditableResources r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.util.EditableResources: boolean ignorePNGMode> = z0;

        return;
    }

    public void <init>()
    {
        java.util.ArrayList $r1, $r2, $r3;
        com.sun.lwuit.util.EditableResources$Node[] $r10;
        com.sun.lwuit.util.EditableResources$Node $r11, $r12, $r13, $r14, $r15, $r16;
        com.sun.lwuit.util.EditableResources r0;
        com.sun.lwuit.util.EditableResources$15 $r5;
        com.sun.lwuit.util.EditableResources$14 $r4;
        com.sun.lwuit.util.EditableResources$19 $r9;
        com.sun.lwuit.util.EditableResources$18 $r8;
        com.sun.lwuit.util.EditableResources$17 $r7;
        com.sun.lwuit.util.EditableResources$16 $r6;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        specialinvoke r0.<com.sun.lwuit.util.Resources: void <init>()>();

        r0.<com.sun.lwuit.util.EditableResources: boolean loadingMode> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.sun.lwuit.util.EditableResources: java.util.List undoQueue> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.sun.lwuit.util.EditableResources: java.util.List redoQueue> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.sun.lwuit.util.EditableResources: java.util.List listeners> = $r3;

        $r4 = new com.sun.lwuit.util.EditableResources$14;

        specialinvoke $r4.<com.sun.lwuit.util.EditableResources$14: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String,java.lang.String)>(r0, "Images", "images.png");

        r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node IMAGES> = $r4;

        $r5 = new com.sun.lwuit.util.EditableResources$15;

        specialinvoke $r5.<com.sun.lwuit.util.EditableResources$15: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String,java.lang.String)>(r0, "Animations", "film.png");

        r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node ANIMATIONS> = $r5;

        $r6 = new com.sun.lwuit.util.EditableResources$16;

        specialinvoke $r6.<com.sun.lwuit.util.EditableResources$16: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String,java.lang.String)>(r0, "Themes", "theme.png");

        r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node THEMES> = $r6;

        $r7 = new com.sun.lwuit.util.EditableResources$17;

        specialinvoke $r7.<com.sun.lwuit.util.EditableResources$17: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String,java.lang.String)>(r0, "Fonts", "font.png");

        r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node FONTS> = $r7;

        $r8 = new com.sun.lwuit.util.EditableResources$18;

        specialinvoke $r8.<com.sun.lwuit.util.EditableResources$18: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String,java.lang.String)>(r0, "Localization", "localization.png");

        r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node L10N> = $r8;

        $r9 = new com.sun.lwuit.util.EditableResources$19;

        specialinvoke $r9.<com.sun.lwuit.util.EditableResources$19: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String,java.lang.String)>(r0, "Data", "database.png");

        r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node DATA> = $r9;

        $r10 = newarray (com.sun.lwuit.util.EditableResources$Node)[6];

        $r11 = r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node IMAGES>;

        $r10[0] = $r11;

        $r12 = r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node ANIMATIONS>;

        $r10[1] = $r12;

        $r13 = r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node THEMES>;

        $r10[2] = $r13;

        $r14 = r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node FONTS>;

        $r10[3] = $r14;

        $r15 = r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node L10N>;

        $r10[4] = $r15;

        $r16 = r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node DATA>;

        $r10[5] = $r16;

        r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node[] nodes> = $r10;

        return;
    }

    void <init>(java.io.InputStream) throws java.io.IOException
    {
        java.util.ArrayList $r2, $r3, $r4;
        com.sun.lwuit.util.EditableResources$Node[] $r11;
        com.sun.lwuit.util.EditableResources$Node $r12, $r13, $r14, $r15, $r16, $r17;
        com.sun.lwuit.util.EditableResources r0;
        com.sun.lwuit.util.EditableResources$15 $r6;
        com.sun.lwuit.util.EditableResources$14 $r5;
        com.sun.lwuit.util.EditableResources$19 $r10;
        com.sun.lwuit.util.EditableResources$18 $r9;
        com.sun.lwuit.util.EditableResources$17 $r8;
        com.sun.lwuit.util.EditableResources$16 $r7;
        java.io.InputStream r1;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<com.sun.lwuit.util.Resources: void <init>(java.io.InputStream)>(r1);

        r0.<com.sun.lwuit.util.EditableResources: boolean loadingMode> = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.sun.lwuit.util.EditableResources: java.util.List undoQueue> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.sun.lwuit.util.EditableResources: java.util.List redoQueue> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.sun.lwuit.util.EditableResources: java.util.List listeners> = $r4;

        $r5 = new com.sun.lwuit.util.EditableResources$14;

        specialinvoke $r5.<com.sun.lwuit.util.EditableResources$14: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String,java.lang.String)>(r0, "Images", "images.png");

        r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node IMAGES> = $r5;

        $r6 = new com.sun.lwuit.util.EditableResources$15;

        specialinvoke $r6.<com.sun.lwuit.util.EditableResources$15: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String,java.lang.String)>(r0, "Animations", "film.png");

        r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node ANIMATIONS> = $r6;

        $r7 = new com.sun.lwuit.util.EditableResources$16;

        specialinvoke $r7.<com.sun.lwuit.util.EditableResources$16: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String,java.lang.String)>(r0, "Themes", "theme.png");

        r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node THEMES> = $r7;

        $r8 = new com.sun.lwuit.util.EditableResources$17;

        specialinvoke $r8.<com.sun.lwuit.util.EditableResources$17: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String,java.lang.String)>(r0, "Fonts", "font.png");

        r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node FONTS> = $r8;

        $r9 = new com.sun.lwuit.util.EditableResources$18;

        specialinvoke $r9.<com.sun.lwuit.util.EditableResources$18: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String,java.lang.String)>(r0, "Localization", "localization.png");

        r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node L10N> = $r9;

        $r10 = new com.sun.lwuit.util.EditableResources$19;

        specialinvoke $r10.<com.sun.lwuit.util.EditableResources$19: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String,java.lang.String)>(r0, "Data", "database.png");

        r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node DATA> = $r10;

        $r11 = newarray (com.sun.lwuit.util.EditableResources$Node)[6];

        $r12 = r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node IMAGES>;

        $r11[0] = $r12;

        $r13 = r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node ANIMATIONS>;

        $r11[1] = $r13;

        $r14 = r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node THEMES>;

        $r11[2] = $r14;

        $r15 = r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node FONTS>;

        $r11[3] = $r15;

        $r16 = r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node L10N>;

        $r11[4] = $r16;

        $r17 = r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node DATA>;

        $r11[5] = $r17;

        r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node[] nodes> = $r11;

        return;
    }

    public static void setResourcesClassLoader(java.lang.Class)
    {
        java.lang.Class r0;

        r0 := @parameter0: java.lang.Class;

        staticinvoke <com.sun.lwuit.util.Resources: void setClassLoader(java.lang.Class)>(r0);

        return;
    }

    public void setOnChange(java.lang.Runnable)
    {
        com.sun.lwuit.util.EditableResources r0;
        java.lang.Runnable r1;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.lang.Runnable;

        r0.<com.sun.lwuit.util.EditableResources: java.lang.Runnable onChange> = r1;

        return;
    }

    void setResource(java.lang.String, byte, java.lang.Object)
    {
        com.sun.lwuit.util.EditableResources$Node $r2, $r4;
        com.sun.lwuit.util.EditableResources r1;
        com.sun.lwuit.util.EditableResources$1 $r8;
        java.lang.Exception $r7;
        byte b0;
        int $i1, i2, $i4;
        java.lang.Object r0, $r5;
        java.lang.String r3;
        boolean $z0, z1, $z2;

        r1 := @this: com.sun.lwuit.util.EditableResources;

        r3 := @parameter0: java.lang.String;

        b0 := @parameter1: byte;

        r0 := @parameter2: java.lang.Object;

        $z0 = staticinvoke <javax.swing.SwingUtilities: boolean isEventDispatchThread()>();

        if $z0 != 0 goto label05;

     label01:
        $r8 = new com.sun.lwuit.util.EditableResources$1;

        specialinvoke $r8.<com.sun.lwuit.util.EditableResources$1: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String,byte,java.lang.Object)>(r1, r3, b0, r0);

        staticinvoke <javax.swing.SwingUtilities: void invokeAndWait(java.lang.Runnable)>($r8);

     label02:
        goto label04;

     label03:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

     label04:
        return;

     label05:
        z1 = 0;

        $i4 = (int) -1;

        i2 = $i4;

        if r0 == null goto label08;

        $r5 = virtualinvoke r1.<com.sun.lwuit.util.EditableResources: java.lang.Object getResourceObject(java.lang.String)>(r3);

        if $r5 == null goto label06;

        $z2 = 1;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        z1 = $z2;

        goto label09;

     label08:
        $r2 = specialinvoke r1.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node getParent(byte)>(b0);

        i2 = virtualinvoke r1.<com.sun.lwuit.util.EditableResources: int getIndexOfChild(java.lang.Object,java.lang.Object)>($r2, r3);

     label09:
        specialinvoke r1.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>(r3, b0, r0);

        if r0 == null goto label11;

        $r4 = specialinvoke r1.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node getParent(byte)>(b0);

        $i1 = virtualinvoke r1.<com.sun.lwuit.util.EditableResources: int getIndexOfChild(java.lang.Object,java.lang.Object)>($r4, r3);

        if z1 == 0 goto label10;

        virtualinvoke r1.<com.sun.lwuit.util.EditableResources: void fireTreeNodeChanged(java.lang.String,int)>(r3, $i1);

        goto label12;

     label10:
        virtualinvoke r1.<com.sun.lwuit.util.EditableResources: void fireTreeNodeAdded(java.lang.String,int)>(r3, $i1);

        goto label12;

     label11:
        virtualinvoke r1.<com.sun.lwuit.util.EditableResources: void fireTreeNodeRemoved(java.lang.String,byte,int)>(r3, b0, i2);

     label12:
        return;

        catch java.lang.Exception from label01 to label02 with label03;
    }

    public void clear()
    {
        byte $b1;
        int i0, i2;
        java.lang.String[] $r1;
        com.sun.lwuit.util.EditableResources r0;
        java.lang.String r2;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        specialinvoke r0.<com.sun.lwuit.util.Resources: void clear()>();

        r0.<com.sun.lwuit.util.EditableResources: boolean modified> = 0;

        $r1 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: java.lang.String[] getResourceNames()>();

        i0 = lengthof $r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        r2 = $r1[i2];

        $b1 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: byte getResourceType(java.lang.String)>(r2);

        virtualinvoke r0.<com.sun.lwuit.util.EditableResources: void setResource(java.lang.String,byte,java.lang.Object)>(r2, $b1, null);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void openFile(java.io.InputStream) throws java.io.IOException
    {
        java.awt.Frame $r5;
        com.sun.lwuit.util.EditableResources r0;
        java.util.List $r2, $r3;
        java.awt.Frame[] $r4;
        int $i0, $i1;
        java.io.InputStream r1;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.io.InputStream;

        r0.<com.sun.lwuit.util.EditableResources: boolean loadingMode> = 1;

        staticinvoke <com.sun.lwuit.Font: void clearBitmapCache()>();

        specialinvoke r0.<com.sun.lwuit.util.Resources: void openFile(java.io.InputStream)>(r1);

        r0.<com.sun.lwuit.util.EditableResources: boolean loadingMode> = 0;

        r0.<com.sun.lwuit.util.EditableResources: boolean modified> = 0;

        $r2 = r0.<com.sun.lwuit.util.EditableResources: java.util.List undoQueue>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        $r3 = r0.<com.sun.lwuit.util.EditableResources: java.util.List redoQueue>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        $i0 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: int getMajorVersion()>();

        if $i0 >= 1 goto label1;

        $i1 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: int getMinorVersion()>();

        if $i1 >= 1 goto label1;

        $r4 = staticinvoke <java.awt.Frame: java.awt.Frame[] getFrames()>();

        $r5 = $r4[0];

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>($r5, "You have opened a legacy resource file!\nNotice that saving this file using this version of Theme Creator\nwill require a new version of LWUIT and disabling compatibility mode!\nFor further details go to the LWUIT faq: https://lwuit.dev.java.net/faq.html", "Legacy Resource", 2);

     label1:
        return;
    }

    public java.lang.String undo()
    {
        com.sun.lwuit.util.EditableResources$UndoableEdit r4;
        com.sun.lwuit.util.EditableResources r0;
        java.util.List $r1, $r2, $r5;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        $z0 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: boolean isUndoable()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.sun.lwuit.util.EditableResources: java.util.List undoQueue>;

        $r1 = r0.<com.sun.lwuit.util.EditableResources: java.util.List undoQueue>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>($i1);

        r4 = (com.sun.lwuit.util.EditableResources$UndoableEdit) $r3;

        $r5 = r0.<com.sun.lwuit.util.EditableResources: java.util.List redoQueue>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r4);

        $r6 = virtualinvoke r4.<com.sun.lwuit.util.EditableResources$UndoableEdit: java.lang.String undoAction()>();

        return $r6;

     label1:
        return null;
    }

    public boolean isUndoable()
    {
        java.util.List $r1;
        com.sun.lwuit.util.EditableResources r0;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        $r1 = r0.<com.sun.lwuit.util.EditableResources: java.util.List undoQueue>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isRedoable()
    {
        java.util.List $r1;
        com.sun.lwuit.util.EditableResources r0;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        $r1 = r0.<com.sun.lwuit.util.EditableResources: java.util.List redoQueue>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean containsResource(java.lang.String)
    {
        java.lang.Object $r2;
        com.sun.lwuit.util.EditableResources r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: java.lang.Object getResourceObject(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String redo()
    {
        com.sun.lwuit.util.EditableResources$UndoableEdit r4;
        com.sun.lwuit.util.EditableResources r0;
        java.util.List $r1, $r2, $r5;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        $z0 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: boolean isRedoable()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.sun.lwuit.util.EditableResources: java.util.List redoQueue>;

        $r1 = r0.<com.sun.lwuit.util.EditableResources: java.util.List redoQueue>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>($i1);

        r4 = (com.sun.lwuit.util.EditableResources$UndoableEdit) $r3;

        $r5 = r0.<com.sun.lwuit.util.EditableResources: java.util.List undoQueue>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r4);

        $r6 = virtualinvoke r4.<com.sun.lwuit.util.EditableResources$UndoableEdit: java.lang.String doAction()>();

        return $r6;

     label1:
        return null;
    }

    public boolean isModified()
    {
        com.sun.lwuit.util.EditableResources r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        $z0 = r0.<com.sun.lwuit.util.EditableResources: boolean modified>;

        return $z0;
    }

    public void setModified()
    {
        com.sun.lwuit.util.EditableResources r0;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r0.<com.sun.lwuit.util.EditableResources: boolean modified> = 1;

        return;
    }

    public byte[] getDataByteArray(java.lang.String)
    {
        byte[] $r3, $r4;
        java.lang.Object $r2;
        com.sun.lwuit.util.EditableResources r0;
        java.lang.String r1;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: java.lang.Object getResourceObject(java.lang.String)>(r1);

        $r3 = (byte[]) $r2;

        $r4 = (byte[]) $r3;

        return $r4;
    }

    public long getDataSize(java.lang.String)
    {
        byte[] $r3, $r4;
        long $l1;
        com.sun.lwuit.util.EditableResources r0;
        int $i0;
        java.lang.Object $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: java.lang.Object getResourceObject(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $z0 = $r2 instanceof byte[];

        if $z0 == 0 goto label1;

        $r3 = (byte[]) $r2;

        $r4 = (byte[]) $r3;

        $i0 = lengthof $r4;

        $l1 = (long) $i0;

        return $l1;

     label1:
        return -1L;
    }

    java.util.Hashtable loadTheme(java.lang.String, boolean) throws java.io.IOException
    {
        java.lang.Byte $r33, $r34;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.Set $r3, $r9, $r13;
        com.sun.lwuit.util.EditableResources r0;
        java.lang.StringBuilder $r6, $r8, $r17, $r18, $r21, $r22, $r25, $r30, $r31, $r32;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i11, $i13, $i15;
        java.lang.String r1, $r7, $r11, $r16, $r20, $r23, $r24, r27, r29;
        java.util.Hashtable $r2;
        java.util.Iterator r26;
        java.lang.Object $r4, $r10, $r28;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = specialinvoke r0.<com.sun.lwuit.util.Resources: java.util.Hashtable loadTheme(java.lang.String,boolean)>(r1, z0);

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.util.Set keySet()>();

        r26 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r4 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>();

        r27 = (java.lang.String) $r4;

        $i0 = virtualinvoke r27.<java.lang.String: int indexOf(java.lang.String)>(".bgSelection");

        $i7 = (int) -1;

        if $i0 > $i7 goto label02;

        $i3 = virtualinvoke r27.<java.lang.String: int indexOf(java.lang.String)>(".fgSelection");

        $i9 = (int) -1;

        if $i3 > $i9 goto label02;

        $z3 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("bgSelection");

        if $z3 != 0 goto label02;

        $z4 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("fgSelection");

        if $z4 == 0 goto label05;

     label02:
        $r28 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r27);

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r27);

        $i4 = virtualinvoke r27.<java.lang.String: int indexOf(int)>(46);

        $i11 = (int) -1;

        if $i4 <= $i11 goto label03;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke r27.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

        $r21 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".sel#");

        $i2 = $i4 + 1;

        $r23 = virtualinvoke r27.<java.lang.String: java.lang.String substring(int)>($i2);

        $r24 = virtualinvoke $r23.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("Selection", "");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label04;

     label03:
        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sel#");

        $r7 = virtualinvoke r27.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("Selection", "");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        r27 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r27, $r28);

        $r9 = virtualinvoke $r2.<java.util.Hashtable: java.util.Set keySet()>();

        r26 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $i5 = virtualinvoke r27.<java.lang.String: int indexOf(java.lang.String)>("scaledImage");

        $i13 = (int) -1;

        if $i5 <= $i13 goto label10;

        $r10 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r27);

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r27);

        $i1 = virtualinvoke r27.<java.lang.String: int indexOf(int)>(46);

        $i15 = (int) -1;

        if $i1 <= $i15 goto label06;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke r27.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r17 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".bgType");

        r29 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label07;

     label06:
        r29 = "bgType";

     label07:
        $r11 = (java.lang.String) $r10;

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z2 == 0 goto label08;

        $r33 = new java.lang.Byte;

        specialinvoke $r33.<java.lang.Byte: void <init>(byte)>(1);

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r29, $r33);

        goto label09;

     label08:
        $r34 = new java.lang.Byte;

        specialinvoke $r34.<java.lang.Byte: void <init>(byte)>(2);

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r29, $r34);

     label09:
        $r13 = virtualinvoke $r2.<java.util.Hashtable: java.util.Set keySet()>();

        r26 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        goto label01;

     label11:
        return $r2;
    }

    public void save(java.io.OutputStream) throws java.io.IOException
    {
        byte[] $r13;
        byte $b3, b7;
        java.io.DataOutputStream $r25;
        boolean $z0;
        com.sun.lwuit.util.EditableResources r2;
        java.util.List $r4, $r5;
        java.lang.StringBuilder $r20, $r22, $r27;
        java.io.ByteArrayOutputStream $r26;
        java.lang.String[] $r3;
        short $s5, $s19;
        int $i0, $i1, $i2, $i4, i6, i8, $i10, $i11, $i12, $i13, $i14, $i16, $i18, $i20;
        java.lang.String $r6, $r7, $r9, $r10, $r14, $r16, $r21, $r23, $r24;
        java.util.Hashtable $r15, $r17;
        java.io.OutputStream r1;
        java.io.IOException $r28;
        com.sun.lwuit.Image $r8;
        java.io.InputStream $r11;

        r2 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.io.OutputStream;

        $r25 = new java.io.DataOutputStream;

        specialinvoke $r25.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r1);

        $r3 = virtualinvoke r2.<com.sun.lwuit.util.EditableResources: java.lang.String[] getResourceNames()>();

        $i0 = lengthof $r3;

        $i1 = $i0 + 1;

        virtualinvoke $r25.<java.io.DataOutputStream: void writeShort(int)>($i1);

        $i10 = (int) -1;

        virtualinvoke $r25.<java.io.DataOutputStream: void writeByte(int)>($i10);

        virtualinvoke $r25.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("");

        virtualinvoke $r25.<java.io.DataOutputStream: void writeShort(int)>(6);

        virtualinvoke $r25.<java.io.DataOutputStream: void writeShort(int)>(1);

        virtualinvoke $r25.<java.io.DataOutputStream: void writeShort(int)>(3);

        virtualinvoke $r25.<java.io.DataOutputStream: void writeShort(int)>(0);

        i6 = 0;

     label01:
        $i2 = lengthof $r3;

        if i6 >= $i2 goto label17;

        $r6 = $r3[i6];

        $b3 = virtualinvoke r2.<com.sun.lwuit.util.EditableResources: byte getResourceType(java.lang.String)>($r6);

        b7 = $b3;

        $i11 = (int) $b3;

        tableswitch($i11)
        {
            case -17: goto label02;
            case -16: goto label05;
            case -15: goto label05;
            case -14: goto label05;
            case -13: goto label02;
            case -12: goto label02;
            case -11: goto label05;
            case -10: goto label04;
            case -9: goto label03;
            case -8: goto label02;
            default: goto label05;
        };

     label02:
        b7 = -3;

        goto label05;

     label03:
        b7 = -14;

        goto label05;

     label04:
        b7 = -4;

     label05:
        $i12 = (int) b7;

        virtualinvoke $r25.<java.io.DataOutputStream: void writeByte(int)>($i12);

        $r24 = $r3[i6];

        virtualinvoke $r25.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r24);

        $i13 = (int) b7;

        tableswitch($i13)
        {
            case -14: goto label07;
            case -13: goto label15;
            case -12: goto label15;
            case -11: goto label15;
            case -10: goto label15;
            case -9: goto label15;
            case -8: goto label15;
            case -7: goto label14;
            case -6: goto label11;
            case -5: goto label15;
            case -4: goto label10;
            case -3: goto label06;
            default: goto label15;
        };

     label06:
        $r7 = $r3[i6];

        $r8 = virtualinvoke r2.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.Image getImage(java.lang.String)>($r7);

        specialinvoke r2.<com.sun.lwuit.util.EditableResources: void saveImage(java.io.DataOutputStream,com.sun.lwuit.Image,int)>($r25, $r8, 2);

        goto label16;

     label07:
        $r16 = $r3[i6];

        $r17 = virtualinvoke r2.<com.sun.lwuit.util.EditableResources: java.util.Hashtable getTheme(java.lang.String)>($r16);

        $i14 = (int) b7;

        $i16 = (int) -9;

        if $i14 != $i16 goto label08;

        $z0 = 1;

        goto label09;

     label08:
        $z0 = 0;

     label09:
        specialinvoke r2.<com.sun.lwuit.util.EditableResources: void saveTheme(java.io.DataOutputStream,java.util.Hashtable,boolean)>($r25, $r17, $z0);

        goto label16;

     label10:
        $r9 = $r3[i6];

        specialinvoke r2.<com.sun.lwuit.util.EditableResources: void saveFont(java.io.DataOutputStream,boolean,java.lang.String)>($r25, 0, $r9);

        goto label16;

     label11:
        $r10 = $r3[i6];

        $r11 = virtualinvoke r2.<com.sun.lwuit.util.EditableResources: java.io.InputStream getData(java.lang.String)>($r10);

        $r26 = new java.io.ByteArrayOutputStream;

        specialinvoke $r26.<java.io.ByteArrayOutputStream: void <init>()>();

        i8 = virtualinvoke $r11.<java.io.InputStream: int read()>();

     label12:
        $i18 = (int) -1;

        if i8 == $i18 goto label13;

        virtualinvoke $r26.<java.io.ByteArrayOutputStream: void write(int)>(i8);

        i8 = virtualinvoke $r11.<java.io.InputStream: int read()>();

        goto label12;

     label13:
        $r13 = virtualinvoke $r26.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $i4 = lengthof $r13;

        virtualinvoke $r25.<java.io.DataOutputStream: void writeInt(int)>($i4);

        virtualinvoke $r25.<java.io.DataOutputStream: void write(byte[])>($r13);

        goto label16;

     label14:
        $r14 = $r3[i6];

        $r15 = virtualinvoke r2.<com.sun.lwuit.util.EditableResources: java.util.Hashtable getTheme(java.lang.String)>($r14);

        specialinvoke r2.<com.sun.lwuit.util.EditableResources: void saveL10N(java.io.DataOutputStream,java.util.Hashtable)>($r25, $r15);

        goto label16;

     label15:
        $r28 = new java.io.IOException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Corrupt theme file unrecognized magic number: ");

        $s19 = (short) b7;

        $s5 = $s19 & 255;

        $i20 = (int) $s5;

        $r21 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i20);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>($r23);

        throw $r28;

     label16:
        i6 = i6 + 1;

        goto label01;

     label17:
        r2.<com.sun.lwuit.util.EditableResources: boolean modified> = 0;

        $r4 = r2.<com.sun.lwuit.util.EditableResources: java.util.List undoQueue>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

        $r5 = r2.<com.sun.lwuit.util.EditableResources: java.util.List redoQueue>;

        interfaceinvoke $r5.<java.util.List: void clear()>();

        return;
    }

    private void savePacked(java.io.DataOutputStream, com.sun.lwuit.IndexedImage) throws java.io.IOException
    {
        byte[] $r3;
        com.sun.lwuit.util.EditableResources r4;
        com.sun.lwuit.IndexedImage r0;
        java.io.DataOutputStream r2;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;

        r4 := @this: com.sun.lwuit.util.EditableResources;

        r2 := @parameter0: java.io.DataOutputStream;

        r0 := @parameter1: com.sun.lwuit.IndexedImage;

        $r1 = staticinvoke <com.sun.lwuit.JWTAccessor: int[] getPalette(com.sun.lwuit.IndexedImage)>(r0);

        $i0 = lengthof $r1;

        virtualinvoke r2.<java.io.DataOutputStream: void writeByte(int)>($i0);

        i6 = 0;

     label1:
        $i1 = lengthof $r1;

        if i6 >= $i1 goto label2;

        $i5 = $r1[i6];

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i5);

        i6 = i6 + 1;

        goto label1;

     label2:
        $i2 = virtualinvoke r0.<com.sun.lwuit.IndexedImage: int getWidth()>();

        virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i2);

        $i3 = virtualinvoke r0.<com.sun.lwuit.IndexedImage: int getHeight()>();

        virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i3);

        $r3 = staticinvoke <com.sun.lwuit.JWTAccessor: byte[] getImageData(com.sun.lwuit.IndexedImage)>(r0);

        $i4 = lengthof $r3;

        virtualinvoke r2.<java.io.DataOutputStream: void write(byte[],int,int)>($r3, 0, $i4);

        return;
    }

    public java.util.Hashtable getTheme(java.lang.String)
    {
        com.sun.lwuit.util.EditableResources r0;
        java.lang.String r1;
        java.util.Hashtable $r2, $r3;
        boolean $z0;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.sun.lwuit.util.EditableResources: boolean loadingMode>;

        if $z0 == 0 goto label1;

        $r3 = new java.util.Hashtable;

        specialinvoke $r3.<java.util.Hashtable: void <init>()>();

        return $r3;

     label1:
        $r2 = specialinvoke r0.<com.sun.lwuit.util.Resources: java.util.Hashtable getTheme(java.lang.String)>(r1);

        if $r2 == null goto label2;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>("name");

     label2:
        return $r2;
    }

    private void saveAnimation(java.io.DataOutputStream, com.sun.lwuit.StaticAnimation) throws java.io.IOException
    {
        byte[] $r3, $r8, $r9, $r10, $r11;
        java.io.DataOutputStream r2;
        int[] $r1, $r5;
        boolean $z0, $z1, $z2, $z3;
        com.sun.lwuit.util.EditableResources r7;
        byte[][] $r6;
        java.util.ArrayList $r12;
        com.sun.lwuit.StaticAnimation r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, $i18;

        r7 := @this: com.sun.lwuit.util.EditableResources;

        r2 := @parameter0: java.io.DataOutputStream;

        r0 := @parameter1: com.sun.lwuit.StaticAnimation;

        $r1 = staticinvoke <com.sun.lwuit.JWTAccessor: int[] getPalette(com.sun.lwuit.IndexedImage)>(r0);

        $i0 = lengthof $r1;

        virtualinvoke r2.<java.io.DataOutputStream: void writeByte(int)>($i0);

        i14 = 0;

     label1:
        $i1 = lengthof $r1;

        if i14 >= $i1 goto label2;

        $i13 = $r1[i14];

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i13);

        i14 = i14 + 1;

        goto label1;

     label2:
        $i2 = virtualinvoke r0.<com.sun.lwuit.StaticAnimation: int getWidth()>();

        virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i2);

        $i3 = virtualinvoke r0.<com.sun.lwuit.StaticAnimation: int getHeight()>();

        virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i3);

        $i4 = virtualinvoke r0.<com.sun.lwuit.StaticAnimation: int getFrameCount()>();

        virtualinvoke r2.<java.io.DataOutputStream: void writeByte(int)>($i4);

        $i5 = virtualinvoke r0.<com.sun.lwuit.StaticAnimation: int getTotalAnimationTime()>();

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i5);

        $z0 = virtualinvoke r0.<com.sun.lwuit.StaticAnimation: boolean isLoop()>();

        virtualinvoke r2.<java.io.DataOutputStream: void writeBoolean(boolean)>($z0);

        $r3 = staticinvoke <com.sun.lwuit.JWTAccessor: byte[] getImageData(com.sun.lwuit.IndexedImage)>(r0);

        virtualinvoke r2.<java.io.DataOutputStream: void write(byte[])>($r3);

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        i15 = 1;

     label3:
        $i6 = virtualinvoke r0.<com.sun.lwuit.StaticAnimation: int getFrameCount()>();

        if i15 >= $i6 goto label9;

        $i7 = virtualinvoke r0.<com.sun.lwuit.StaticAnimation: int getFrameTime(int)>(i15);

        $i8 = i15 - 1;

        $i9 = virtualinvoke r0.<com.sun.lwuit.StaticAnimation: int getFrameTime(int)>($i8);

        $i10 = $i7 - $i9;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i10);

        $z1 = staticinvoke <com.sun.lwuit.JWTAccessor: boolean isKeyframe(com.sun.lwuit.StaticAnimation,int)>(r0, i15);

        virtualinvoke r2.<java.io.DataOutputStream: void writeBoolean(boolean)>($z1);

        if $z1 == 0 goto label4;

        $r11 = staticinvoke <com.sun.lwuit.JWTAccessor: byte[] getKeyframe(com.sun.lwuit.StaticAnimation,int)>(r0, i15);

        virtualinvoke r2.<java.io.DataOutputStream: void write(byte[])>($r11);

        goto label8;

     label4:
        $z2 = staticinvoke <com.sun.lwuit.JWTAccessor: boolean isDrawPrevious(com.sun.lwuit.StaticAnimation,int)>(r0, i15);

        virtualinvoke r2.<java.io.DataOutputStream: void writeBoolean(boolean)>($z2);

        $r5 = staticinvoke <com.sun.lwuit.JWTAccessor: int[] getModifiedRowOffsets(com.sun.lwuit.StaticAnimation,int)>(r0, i15);

        $r6 = staticinvoke <com.sun.lwuit.JWTAccessor: byte[][] getModifiedRows(com.sun.lwuit.StaticAnimation,int)>(r0, i15);

        i16 = 0;

     label5:
        $i11 = lengthof $r5;

        if i16 >= $i11 goto label7;

        $r8 = $r6[i16];

        $z3 = specialinvoke r7.<com.sun.lwuit.util.EditableResources: boolean contains(java.util.List,byte[])>($r12, $r8);

        if $z3 != 0 goto label6;

        $i12 = $r5[i16];

        virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i12);

        $r9 = $r6[i16];

        virtualinvoke r2.<java.io.DataOutputStream: void write(byte[])>($r9);

        $r10 = $r6[i16];

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r10);

     label6:
        i16 = i16 + 1;

        goto label5;

     label7:
        $i18 = (int) -1;

        virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($i18);

     label8:
        i15 = i15 + 1;

        goto label3;

     label9:
        return;
    }

    private boolean contains(java.util.List, byte[])
    {
        byte[] r3, r4;
        java.util.List r0;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        com.sun.lwuit.util.EditableResources r5;
        boolean $z0;

        r5 := @this: com.sun.lwuit.util.EditableResources;

        r0 := @parameter0: java.util.List;

        r4 := @parameter1: byte[];

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (byte[]) $r2;

        if r3 != r4 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    private void saveTheme(java.io.DataOutputStream, java.util.Hashtable, boolean) throws java.io.IOException
    {
        java.lang.Float $r27, $r29, $r31;
        java.lang.Integer $r23, $r25, $r46;
        java.io.DataOutputStream r1;
        java.util.Set $r2;
        com.sun.lwuit.util.EditableResources r33;
        java.lang.StringBuilder $r16, $r17, $r18, $r41, $r42, $r44;
        java.lang.Object[] $r21, r49;
        java.lang.String r5, $r7, $r9, $r10, $r11, $r12, $r19, $r35, $r37, $r40, $r45;
        java.lang.Number $r14;
        java.io.IOException $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, z13, $z14;
        float $f0, $f1, $f2;
        java.lang.String[] $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.util.Hashtable r0;
        java.util.Iterator $r3;
        com.sun.lwuit.plaf.Border r47;
        java.lang.Object $r4, $r6, $r13, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r39, $r43;
        com.sun.lwuit.Font r48;

        r33 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.io.DataOutputStream;

        r0 := @parameter1: java.util.Hashtable;

        z13 := @parameter2: boolean;

        virtualinvoke r0.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>("name");

        $i0 = virtualinvoke r0.<java.util.Hashtable: int size()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeShort(int)>($i0);

        $r2 = virtualinvoke r0.<java.util.Hashtable: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z14 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label14;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(r5);

        $z0 = virtualinvoke r5.<java.lang.String: boolean endsWith(java.lang.String)>("Color");

        if $z0 == 0 goto label02;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $r43 = virtualinvoke r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r5);

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        $r46 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>($r45);

        $i12 = virtualinvoke $r46.<java.lang.Integer: int intValue()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i12);

        goto label01;

     label02:
        $z1 = virtualinvoke r5.<java.lang.String: boolean endsWith(java.lang.String)>("transparency");

        if $z1 == 0 goto label03;

        $r39 = virtualinvoke r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r5);

        $r40 = (java.lang.String) $r39;

        $i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r40);

        virtualinvoke r1.<java.io.DataOutputStream: void writeByte(int)>($i11);

        goto label01;

     label03:
        $z2 = virtualinvoke r5.<java.lang.String: boolean endsWith(java.lang.String)>("padding");

        if $z2 != 0 goto label04;

        $z3 = virtualinvoke r5.<java.lang.String: boolean endsWith(java.lang.String)>("margin");

        if $z3 == 0 goto label05;

     label04:
        $r6 = virtualinvoke r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r5);

        $r7 = (java.lang.String) $r6;

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r9 = $r8[0];

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        virtualinvoke r1.<java.io.DataOutputStream: void writeByte(int)>($i1);

        $r10 = $r8[1];

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);

        virtualinvoke r1.<java.io.DataOutputStream: void writeByte(int)>($i2);

        $r11 = $r8[2];

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        virtualinvoke r1.<java.io.DataOutputStream: void writeByte(int)>($i3);

        $r12 = $r8[3];

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r12);

        virtualinvoke r1.<java.io.DataOutputStream: void writeByte(int)>($i4);

        goto label01;

     label05:
        $z4 = virtualinvoke r5.<java.lang.String: boolean endsWith(java.lang.String)>("border");

        if $z4 == 0 goto label06;

        $r38 = virtualinvoke r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r5);

        r47 = (com.sun.lwuit.plaf.Border) $r38;

        specialinvoke r33.<com.sun.lwuit.util.EditableResources: void writeBorder(java.io.DataOutputStream,com.sun.lwuit.plaf.Border,boolean)>(r1, r47, z13);

        goto label01;

     label06:
        $z5 = virtualinvoke r5.<java.lang.String: boolean endsWith(java.lang.String)>("font");

        if $z5 == 0 goto label08;

        $r36 = virtualinvoke r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r5);

        r48 = (com.sun.lwuit.Font) $r36;

        z12 = r48 instanceof com.sun.lwuit.EditorFont;

        virtualinvoke r1.<java.io.DataOutputStream: void writeBoolean(boolean)>(z12);

        if z12 == 0 goto label07;

        $r37 = specialinvoke r33.<com.sun.lwuit.util.EditableResources: java.lang.String findId(java.lang.Object)>(r48);

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r37);

        goto label01;

     label07:
        $i8 = virtualinvoke r48.<com.sun.lwuit.Font: int getFace()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeByte(int)>($i8);

        $i9 = virtualinvoke r48.<com.sun.lwuit.Font: int getStyle()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeByte(int)>($i9);

        $i10 = virtualinvoke r48.<com.sun.lwuit.Font: int getSize()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeByte(int)>($i10);

        goto label01;

     label08:
        $z6 = virtualinvoke r5.<java.lang.String: boolean endsWith(java.lang.String)>("bgImage");

        if $z6 == 0 goto label09;

        $r34 = virtualinvoke r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r5);

        $r35 = specialinvoke r33.<com.sun.lwuit.util.EditableResources: java.lang.String findId(java.lang.Object)>($r34);

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r35);

        goto label01;

     label09:
        $z7 = virtualinvoke r5.<java.lang.String: boolean endsWith(java.lang.String)>("scaledImage");

        if $z7 == 0 goto label10;

        $r32 = virtualinvoke r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r5);

        $z11 = virtualinvoke $r32.<java.lang.Object: boolean equals(java.lang.Object)>("true");

        virtualinvoke r1.<java.io.DataOutputStream: void writeBoolean(boolean)>($z11);

        goto label01;

     label10:
        $z8 = virtualinvoke r5.<java.lang.String: boolean endsWith(java.lang.String)>("bgGradient");

        if $z8 == 0 goto label11;

        $r20 = virtualinvoke r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r5);

        $r21 = (java.lang.Object[]) $r20;

        r49 = (java.lang.Object[]) $r21;

        $r22 = r49[0];

        $r23 = (java.lang.Integer) $r22;

        $i6 = virtualinvoke $r23.<java.lang.Integer: int intValue()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i6);

        $r24 = r49[1];

        $r25 = (java.lang.Integer) $r24;

        $i7 = virtualinvoke $r25.<java.lang.Integer: int intValue()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i7);

        $r26 = r49[2];

        $r27 = (java.lang.Float) $r26;

        $f0 = virtualinvoke $r27.<java.lang.Float: float floatValue()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeFloat(float)>($f0);

        $r28 = r49[3];

        $r29 = (java.lang.Float) $r28;

        $f1 = virtualinvoke $r29.<java.lang.Float: float floatValue()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeFloat(float)>($f1);

        $r30 = r49[4];

        $r31 = (java.lang.Float) $r30;

        $f2 = virtualinvoke $r31.<java.lang.Float: float floatValue()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeFloat(float)>($f2);

        goto label01;

     label11:
        $z9 = virtualinvoke r5.<java.lang.String: boolean endsWith(java.lang.String)>("bgType");

        if $z9 != 0 goto label12;

        $z10 = virtualinvoke r5.<java.lang.String: boolean endsWith(java.lang.String)>("bgAlign");

        if $z10 == 0 goto label13;

     label12:
        $r13 = virtualinvoke r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r5);

        $r14 = (java.lang.Number) $r13;

        $i5 = virtualinvoke $r14.<java.lang.Number: int intValue()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeByte(int)>($i5);

        goto label01;

     label13:
        $r15 = new java.io.IOException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while trying to read theme property: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>($r19);

        throw $r15;

     label14:
        return;
    }

    private void writeBorder(java.io.DataOutputStream, com.sun.lwuit.plaf.Border, boolean) throws java.io.IOException
    {
        java.io.DataOutputStream r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i12, $i14, $i16, $i18, $i20, $i22, $i24;
        boolean $z0, $z1, z2;
        com.sun.lwuit.util.EditableResources r2;
        com.sun.lwuit.plaf.Border r0;

        r2 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.io.DataOutputStream;

        r0 := @parameter1: com.sun.lwuit.plaf.Border;

        z2 := @parameter2: boolean;

        $i0 = staticinvoke <com.sun.lwuit.plaf.Accessor: int getType(com.sun.lwuit.plaf.Border)>(r0);

        tableswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label05;
            case 3: goto label13;
            case 4: goto label09;
            case 5: goto label08;
            case 6: goto label11;
            case 7: goto label10;
            case 8: goto label12;
            default: goto label13;
        };

     label01:
        $i10 = (int) 65281;

        virtualinvoke r1.<java.io.DataOutputStream: void writeShort(int)>($i10);

        return;

     label02:
        $i12 = (int) 65282;

        virtualinvoke r1.<java.io.DataOutputStream: void writeShort(int)>($i12);

        $z1 = staticinvoke <com.sun.lwuit.plaf.Accessor: boolean isThemeColors(com.sun.lwuit.plaf.Border)>(r0);

        if $z1 == 0 goto label03;

        virtualinvoke r1.<java.io.DataOutputStream: void writeBoolean(boolean)>(1);

        $i8 = staticinvoke <com.sun.lwuit.plaf.Accessor: int getThickness(com.sun.lwuit.plaf.Border)>(r0);

        virtualinvoke r1.<java.io.DataOutputStream: void writeByte(int)>($i8);

        goto label04;

     label03:
        virtualinvoke r1.<java.io.DataOutputStream: void writeBoolean(boolean)>(0);

        $i6 = staticinvoke <com.sun.lwuit.plaf.Accessor: int getThickness(com.sun.lwuit.plaf.Border)>(r0);

        virtualinvoke r1.<java.io.DataOutputStream: void writeByte(int)>($i6);

        $i7 = staticinvoke <com.sun.lwuit.plaf.Accessor: int getColorA(com.sun.lwuit.plaf.Border)>(r0);

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i7);

     label04:
        return;

     label05:
        $i14 = (int) 65283;

        virtualinvoke r1.<java.io.DataOutputStream: void writeShort(int)>($i14);

        $z0 = staticinvoke <com.sun.lwuit.plaf.Accessor: boolean isThemeColors(com.sun.lwuit.plaf.Border)>(r0);

        if $z0 == 0 goto label06;

        virtualinvoke r1.<java.io.DataOutputStream: void writeBoolean(boolean)>(1);

        $i4 = staticinvoke <com.sun.lwuit.plaf.Accessor: int getArcWidth(com.sun.lwuit.plaf.Border)>(r0);

        virtualinvoke r1.<java.io.DataOutputStream: void writeByte(int)>($i4);

        $i5 = staticinvoke <com.sun.lwuit.plaf.Accessor: int getArcHeight(com.sun.lwuit.plaf.Border)>(r0);

        virtualinvoke r1.<java.io.DataOutputStream: void writeByte(int)>($i5);

        goto label07;

     label06:
        virtualinvoke r1.<java.io.DataOutputStream: void writeBoolean(boolean)>(0);

        $i1 = staticinvoke <com.sun.lwuit.plaf.Accessor: int getArcWidth(com.sun.lwuit.plaf.Border)>(r0);

        virtualinvoke r1.<java.io.DataOutputStream: void writeByte(int)>($i1);

        $i2 = staticinvoke <com.sun.lwuit.plaf.Accessor: int getArcHeight(com.sun.lwuit.plaf.Border)>(r0);

        virtualinvoke r1.<java.io.DataOutputStream: void writeByte(int)>($i2);

        $i3 = staticinvoke <com.sun.lwuit.plaf.Accessor: int getColorA(com.sun.lwuit.plaf.Border)>(r0);

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i3);

     label07:
        return;

     label08:
        $i16 = (int) 65285;

        virtualinvoke r1.<java.io.DataOutputStream: void writeShort(int)>($i16);

        specialinvoke r2.<com.sun.lwuit.util.EditableResources: void writeEtchedBorder(java.io.DataOutputStream,com.sun.lwuit.plaf.Border)>(r1, r0);

        return;

     label09:
        $i18 = (int) 65284;

        virtualinvoke r1.<java.io.DataOutputStream: void writeShort(int)>($i18);

        specialinvoke r2.<com.sun.lwuit.util.EditableResources: void writeEtchedBorder(java.io.DataOutputStream,com.sun.lwuit.plaf.Border)>(r1, r0);

        return;

     label10:
        $i20 = (int) 65286;

        virtualinvoke r1.<java.io.DataOutputStream: void writeShort(int)>($i20);

        specialinvoke r2.<com.sun.lwuit.util.EditableResources: void writeBevelBorder(java.io.DataOutputStream,com.sun.lwuit.plaf.Border)>(r1, r0);

        return;

     label11:
        $i22 = (int) 65287;

        virtualinvoke r1.<java.io.DataOutputStream: void writeShort(int)>($i22);

        specialinvoke r2.<com.sun.lwuit.util.EditableResources: void writeBevelBorder(java.io.DataOutputStream,com.sun.lwuit.plaf.Border)>(r1, r0);

        return;

     label12:
        $i24 = (int) 65288;

        virtualinvoke r1.<java.io.DataOutputStream: void writeShort(int)>($i24);

        specialinvoke r2.<com.sun.lwuit.util.EditableResources: void writeImageBorder(java.io.DataOutputStream,com.sun.lwuit.plaf.Border)>(r1, r0);

        return;

     label13:
        return;
    }

    private void writeBevelBorder(java.io.DataOutputStream, com.sun.lwuit.plaf.Border) throws java.io.IOException
    {
        com.sun.lwuit.util.EditableResources r2;
        com.sun.lwuit.plaf.Border r0;
        java.io.DataOutputStream r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r2 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.io.DataOutputStream;

        r0 := @parameter1: com.sun.lwuit.plaf.Border;

        $z0 = staticinvoke <com.sun.lwuit.plaf.Accessor: boolean isThemeColors(com.sun.lwuit.plaf.Border)>(r0);

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.io.DataOutputStream: void writeBoolean(boolean)>(1);

        goto label2;

     label1:
        virtualinvoke r1.<java.io.DataOutputStream: void writeBoolean(boolean)>(0);

        $i0 = staticinvoke <com.sun.lwuit.plaf.Accessor: int getColorA(com.sun.lwuit.plaf.Border)>(r0);

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $i1 = staticinvoke <com.sun.lwuit.plaf.Accessor: int getColorB(com.sun.lwuit.plaf.Border)>(r0);

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i1);

        $i2 = staticinvoke <com.sun.lwuit.plaf.Accessor: int getColorC(com.sun.lwuit.plaf.Border)>(r0);

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i2);

        $i3 = staticinvoke <com.sun.lwuit.plaf.Accessor: int getColorD(com.sun.lwuit.plaf.Border)>(r0);

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i3);

     label2:
        return;
    }

    private void writeEtchedBorder(java.io.DataOutputStream, com.sun.lwuit.plaf.Border) throws java.io.IOException
    {
        java.io.DataOutputStream r1;
        int $i0, $i1;
        com.sun.lwuit.util.EditableResources r2;
        com.sun.lwuit.plaf.Border r0;
        boolean $z0;

        r2 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.io.DataOutputStream;

        r0 := @parameter1: com.sun.lwuit.plaf.Border;

        $z0 = staticinvoke <com.sun.lwuit.plaf.Accessor: boolean isThemeColors(com.sun.lwuit.plaf.Border)>(r0);

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.io.DataOutputStream: void writeBoolean(boolean)>(1);

        goto label2;

     label1:
        virtualinvoke r1.<java.io.DataOutputStream: void writeBoolean(boolean)>(0);

        $i0 = staticinvoke <com.sun.lwuit.plaf.Accessor: int getColorA(com.sun.lwuit.plaf.Border)>(r0);

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $i1 = staticinvoke <com.sun.lwuit.plaf.Accessor: int getColorB(com.sun.lwuit.plaf.Border)>(r0);

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i1);

     label2:
        return;
    }

    private void writeImageBorder(java.io.DataOutputStream, com.sun.lwuit.plaf.Border) throws java.io.IOException
    {
        java.io.DataOutputStream r2;
        int $i0, i1, i2, i3, i4;
        java.lang.String $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r22, $r25;
        java.io.PrintStream $r19;
        com.sun.lwuit.util.EditableResources r3;
        com.sun.lwuit.Image $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r23, $r24;
        com.sun.lwuit.plaf.Border r0;
        com.sun.lwuit.Image[] $r1;
        java.lang.StringBuilder $r18, $r20, $r21;

        r3 := @this: com.sun.lwuit.util.EditableResources;

        r2 := @parameter0: java.io.DataOutputStream;

        r0 := @parameter1: com.sun.lwuit.plaf.Border;

        $r1 = staticinvoke <com.sun.lwuit.plaf.Accessor: com.sun.lwuit.Image[] getImages(com.sun.lwuit.plaf.Border)>(r0);

        i1 = 0;

        i2 = 0;

     label01:
        $i0 = lengthof $r1;

        if i2 >= $i0 goto label03;

        $r23 = $r1[i2];

        if $r23 == null goto label02;

        $r24 = $r1[i2];

        $r25 = specialinvoke r3.<com.sun.lwuit.util.EditableResources: java.lang.String findId(java.lang.Object)>($r24);

        if $r25 == null goto label02;

        i1 = i1 + 1;

     label02:
        i2 = i2 + 1;

        goto label01;

     label03:
        if i1 == 2 goto label04;

        if i1 == 3 goto label04;

        if i1 == 8 goto label04;

        if i1 == 9 goto label04;

        $r19 = <java.lang.System: java.io.PrintStream out>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Odd resource count for image border: ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r22);

        i1 = 2;

     label04:
        virtualinvoke r2.<java.io.DataOutputStream: void writeByte(int)>(i1);

        tableswitch(i1)
        {
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label12;
            case 5: goto label12;
            case 6: goto label12;
            case 7: goto label12;
            case 8: goto label07;
            case 9: goto label10;
            default: goto label12;
        };

     label05:
        $r14 = $r1[0];

        $r15 = specialinvoke r3.<com.sun.lwuit.util.EditableResources: java.lang.String findId(java.lang.Object)>($r14);

        virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r15);

        $r16 = $r1[4];

        $r17 = specialinvoke r3.<com.sun.lwuit.util.EditableResources: java.lang.String findId(java.lang.Object)>($r16);

        virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r17);

        goto label12;

     label06:
        $r8 = $r1[0];

        $r9 = specialinvoke r3.<com.sun.lwuit.util.EditableResources: java.lang.String findId(java.lang.Object)>($r8);

        virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r9);

        $r10 = $r1[4];

        $r11 = specialinvoke r3.<com.sun.lwuit.util.EditableResources: java.lang.String findId(java.lang.Object)>($r10);

        virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r11);

        $r12 = $r1[8];

        $r13 = specialinvoke r3.<com.sun.lwuit.util.EditableResources: java.lang.String findId(java.lang.Object)>($r12);

        virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r13);

        goto label12;

     label07:
        i3 = 0;

     label08:
        if i3 >= 8 goto label09;

        $r6 = $r1[i3];

        $r7 = specialinvoke r3.<com.sun.lwuit.util.EditableResources: java.lang.String findId(java.lang.Object)>($r6);

        virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r7);

        i3 = i3 + 1;

        goto label08;

     label09:
        goto label12;

     label10:
        i4 = 0;

     label11:
        if i4 >= 9 goto label12;

        $r4 = $r1[i4];

        $r5 = specialinvoke r3.<com.sun.lwuit.util.EditableResources: java.lang.String findId(java.lang.Object)>($r4);

        virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r5);

        i4 = i4 + 1;

        goto label11;

     label12:
        return;
    }

    com.sun.lwuit.Font loadFont(java.io.DataInputStream, java.lang.String, boolean) throws java.io.IOException
    {
        byte[] r14;
        byte $b1;
        boolean $z0, $z1, $z2, z3;
        com.sun.lwuit.util.EditableResources r0;
        java.io.DataInputStream r1;
        short $s2, $s3, $s4, $s7, $s8;
        com.sun.lwuit.EditorFont $r16, $r17, $r18;
        int $i0, $i5, $i6, $i9, $i10, $i11;
        java.lang.String r4, $r8, $r13, r15;
        java.lang.Object $r7, $r12;
        com.sun.lwuit.Font $r2, $r5, $r9, $r11;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.io.DataInputStream;

        r4 := @parameter1: java.lang.String;

        z3 := @parameter2: boolean;

        $i0 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: int getMinorVersion()>();

        if $i0 != 0 goto label1;

        $i6 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: int getMajorVersion()>();

        if $i6 != 0 goto label1;

        $r9 = specialinvoke r0.<com.sun.lwuit.util.Resources: com.sun.lwuit.Font loadFont(java.io.DataInputStream,java.lang.String,boolean)>(r1, r4, z3);

        $r16 = new com.sun.lwuit.EditorFont;

        $r11 = staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font createSystemFont(int,int,int)>(0, 0, 0);

        $r12 = <java.awt.RenderingHints: java.lang.Object VALUE_TEXT_ANTIALIAS_ON>;

        $r13 = virtualinvoke $r9.<com.sun.lwuit.Font: java.lang.String getCharset()>();

        specialinvoke $r16.<com.sun.lwuit.EditorFont: void <init>(com.sun.lwuit.Font,byte[],java.lang.String,boolean,java.lang.Object,java.lang.String)>($r11, null, "Arial-plain-12", 1, $r12, $r13);

        return $r16;

     label1:
        $b1 = virtualinvoke r1.<java.io.DataInputStream: byte readByte()>();

        $s8 = (short) $b1;

        $s7 = $s8 & 255;

        $s4 = $s7 & 96;

        $s3 = $s7 & 7;

        $s2 = $s7 & 24;

        $i9 = (int) $s4;

        $i10 = (int) $s3;

        $i11 = (int) $s2;

        $r2 = staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font createSystemFont(int,int,int)>($i9, $i10, $i11);

        r14 = null;

        r15 = null;

        $z0 = virtualinvoke r1.<java.io.DataInputStream: boolean readBoolean()>();

        if $z0 == 0 goto label2;

        $i5 = virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

        r14 = newarray (byte)[$i5];

        virtualinvoke r1.<java.io.DataInputStream: void readFully(byte[])>(r14);

     label2:
        $z1 = virtualinvoke r1.<java.io.DataInputStream: boolean readBoolean()>();

        if $z1 == 0 goto label3;

        r15 = virtualinvoke r1.<java.io.DataInputStream: java.lang.String readUTF()>();

     label3:
        $z2 = virtualinvoke r1.<java.io.DataInputStream: boolean readBoolean()>();

        if $z2 == 0 goto label4;

        $r5 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.Font loadBitmapFont(java.io.DataInputStream,java.lang.String,com.sun.lwuit.Font)>(r1, r4, null);

        $r17 = new com.sun.lwuit.EditorFont;

        $r7 = r0.<com.sun.lwuit.util.EditableResources: java.lang.Object renderingHint>;

        $r8 = virtualinvoke $r5.<com.sun.lwuit.Font: java.lang.String getCharset()>();

        specialinvoke $r17.<com.sun.lwuit.EditorFont: void <init>(com.sun.lwuit.Font,byte[],java.lang.String,boolean,java.lang.Object,java.lang.String)>($r2, r14, r15, 1, $r7, $r8);

        return $r17;

     label4:
        $r18 = new com.sun.lwuit.EditorFont;

        specialinvoke $r18.<com.sun.lwuit.EditorFont: void <init>(com.sun.lwuit.Font,byte[],java.lang.String,boolean,java.lang.Object,java.lang.String)>($r2, r14, r15, 0, null, null);

        return $r18;
    }

    void readRenderingHint(java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream r1;
        java.lang.Object[] $r2;
        byte $b0;
        int $i1;
        java.lang.Object $r3;
        com.sun.lwuit.util.EditableResources r0;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.io.DataInputStream;

        $r2 = <com.sun.lwuit.EditorFont: java.lang.Object[] RENDERING_HINTS>;

        $b0 = virtualinvoke r1.<java.io.DataInputStream: byte readByte()>();

        $i1 = (int) $b0;

        $r3 = $r2[$i1];

        r0.<com.sun.lwuit.util.EditableResources: java.lang.Object renderingHint> = $r3;

        return;
    }

    private void saveFont(java.io.DataOutputStream, boolean, java.lang.String) throws java.io.IOException
    {
        byte[] $r8, $r19, $r20;
        com.sun.lwuit.IndexedImage $r17;
        java.io.DataOutputStream r4;
        int[] $r12, $r15, $r16;
        boolean $z0, z1, $z4, $z5, $z6, $z7;
        com.sun.lwuit.util.EditableResources r0;
        com.sun.lwuit.EditorFont r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20;
        java.lang.String r1, $r9, $r14, $r18;
        com.sun.lwuit.Image $r11, $r13;
        com.sun.lwuit.Font $r2, $r5, $r6, $r7, $r10;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r4 := @parameter0: java.io.DataOutputStream;

        z1 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.Font getFont(java.lang.String)>(r1);

        r3 = (com.sun.lwuit.EditorFont) $r2;

        $r5 = virtualinvoke r3.<com.sun.lwuit.EditorFont: com.sun.lwuit.Font getSystemFallback()>();

        $i0 = virtualinvoke $r5.<com.sun.lwuit.Font: int getFace()>();

        $r6 = virtualinvoke r3.<com.sun.lwuit.EditorFont: com.sun.lwuit.Font getSystemFallback()>();

        $i1 = virtualinvoke $r6.<com.sun.lwuit.Font: int getSize()>();

        $i2 = $i0 | $i1;

        $r7 = virtualinvoke r3.<com.sun.lwuit.EditorFont: com.sun.lwuit.Font getSystemFallback()>();

        $i3 = virtualinvoke $r7.<com.sun.lwuit.Font: int getStyle()>();

        $i4 = $i2 | $i3;

        virtualinvoke r4.<java.io.DataOutputStream: void writeByte(int)>($i4);

        $r8 = virtualinvoke r3.<com.sun.lwuit.EditorFont: byte[] getTruetypeFont()>();

        if $r8 == null goto label01;

        $z7 = 1;

        $z6 = 1;

        goto label02;

     label01:
        $z7 = 0;

        $z6 = 0;

     label02:
        virtualinvoke r4.<java.io.DataOutputStream: void writeBoolean(boolean)>($z6);

        if $z7 == 0 goto label03;

        $r19 = virtualinvoke r3.<com.sun.lwuit.EditorFont: byte[] getTruetypeFont()>();

        $i17 = lengthof $r19;

        virtualinvoke r4.<java.io.DataOutputStream: void writeInt(int)>($i17);

        $r20 = virtualinvoke r3.<com.sun.lwuit.EditorFont: byte[] getTruetypeFont()>();

        virtualinvoke r4.<java.io.DataOutputStream: void write(byte[])>($r20);

     label03:
        $r9 = virtualinvoke r3.<com.sun.lwuit.EditorFont: java.lang.String getLookupFont()>();

        if $r9 == null goto label04;

        $z5 = 1;

        $z4 = 1;

        goto label05;

     label04:
        $z5 = 0;

        $z4 = 0;

     label05:
        virtualinvoke r4.<java.io.DataOutputStream: void writeBoolean(boolean)>($z5);

        if $z4 == 0 goto label06;

        $r18 = virtualinvoke r3.<com.sun.lwuit.EditorFont: java.lang.String getLookupFont()>();

        virtualinvoke r4.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r18);

     label06:
        $z0 = virtualinvoke r3.<com.sun.lwuit.EditorFont: boolean isIncludesBitmap()>();

        virtualinvoke r4.<java.io.DataOutputStream: void writeBoolean(boolean)>($z0);

        if $z0 == 0 goto label15;

        $r10 = virtualinvoke r3.<com.sun.lwuit.EditorFont: com.sun.lwuit.Font getBitmapFont()>();

        $r11 = staticinvoke <com.sun.lwuit.JWTAccessor: com.sun.lwuit.Image getImage(com.sun.lwuit.Font)>($r10);

        $r12 = virtualinvoke $r11.<com.sun.lwuit.Image: int[] getRGB()>();

        i18 = 0;

     label07:
        $i5 = lengthof $r12;

        if i18 >= $i5 goto label08;

        $i14 = $r12[i18];

        $i15 = $i14 >> 8;

        $i16 = $i15 & 16711680;

        $r12[i18] = $i16;

        i18 = i18 + 1;

        goto label07;

     label08:
        if z1 == 0 goto label09;

        $i12 = virtualinvoke $r11.<com.sun.lwuit.Image: int getWidth()>();

        $i13 = virtualinvoke $r11.<com.sun.lwuit.Image: int getHeight()>();

        $r17 = staticinvoke <com.sun.lwuit.IndexedImage: com.sun.lwuit.IndexedImage pack(int[],int,int)>($r12, $i12, $i13);

        specialinvoke r0.<com.sun.lwuit.util.EditableResources: void savePacked(java.io.DataOutputStream,com.sun.lwuit.IndexedImage)>(r4, $r17);

        goto label10;

     label09:
        $i6 = virtualinvoke $r11.<com.sun.lwuit.Image: int getWidth()>();

        $i7 = virtualinvoke $r11.<com.sun.lwuit.Image: int getHeight()>();

        $r13 = staticinvoke <com.sun.lwuit.Image: com.sun.lwuit.Image createImage(int[],int,int)>($r12, $i6, $i7);

        specialinvoke r0.<com.sun.lwuit.util.EditableResources: void saveImage(java.io.DataOutputStream,com.sun.lwuit.Image,int)>(r4, $r13, 1);

     label10:
        $r14 = virtualinvoke $r10.<com.sun.lwuit.Font: java.lang.String getCharset()>();

        $i8 = virtualinvoke $r14.<java.lang.String: int length()>();

        virtualinvoke r4.<java.io.DataOutputStream: void writeShort(int)>($i8);

        $r15 = staticinvoke <com.sun.lwuit.JWTAccessor: int[] getOffsets(com.sun.lwuit.Font)>($r10);

        $r16 = staticinvoke <com.sun.lwuit.JWTAccessor: int[] getWidths(com.sun.lwuit.Font)>($r10);

        i19 = 0;

     label11:
        if i19 >= $i8 goto label12;

        $i11 = $r15[i19];

        virtualinvoke r4.<java.io.DataOutputStream: void writeShort(int)>($i11);

        i19 = i19 + 1;

        goto label11;

     label12:
        i20 = 0;

     label13:
        if i20 >= $i8 goto label14;

        $i10 = $r16[i20];

        virtualinvoke r4.<java.io.DataOutputStream: void writeByte(int)>($i10);

        i20 = i20 + 1;

        goto label13;

     label14:
        virtualinvoke r4.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r14);

        $i9 = virtualinvoke r3.<com.sun.lwuit.EditorFont: int getRenderingHint()>();

        virtualinvoke r4.<java.io.DataOutputStream: void writeByte(int)>($i9);

     label15:
        return;
    }

    public java.lang.Object getResourceObject(java.lang.String)
    {
        java.lang.Object $r2;
        com.sun.lwuit.util.EditableResources r0;
        java.lang.String r1;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.sun.lwuit.util.Resources: java.lang.Object getResourceObject(java.lang.String)>(r1);

        return $r2;
    }

    private java.lang.String findId(java.lang.Object)
    {
        int i0, i1;
        java.lang.String[] $r1;
        java.lang.Object $r3, r4;
        com.sun.lwuit.util.EditableResources r0;
        java.lang.String r2;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r4 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: java.lang.String[] getResourceNames()>();

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = $r1[i1];

        $r3 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: java.lang.Object getResourceObject(java.lang.String)>(r2);

        if $r3 != r4 goto label2;

        return r2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    private int getImageType(com.sun.lwuit.Image)
    {
        int $i1;
        com.sun.lwuit.util.EditableResources r1;
        com.sun.lwuit.Image r0;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: com.sun.lwuit.util.EditableResources;

        r0 := @parameter0: com.sun.lwuit.Image;

        $z0 = r0 instanceof com.sun.lwuit.StaticAnimation;

        if $z0 == 0 goto label1;

        return 244;

     label1:
        $z1 = r0 instanceof com.sun.lwuit.IndexedImage;

        if $z1 == 0 goto label2;

        return 243;

     label2:
        $z2 = r0 instanceof com.sun.lwuit.animations.Timeline;

        if $z2 == 0 goto label3;

        $i1 = (int) -17;

        return $i1;

     label3:
        $z3 = virtualinvoke r0.<com.sun.lwuit.Image: boolean isSVG()>();

        if $z3 == 0 goto label4;

        return 245;

     label4:
        return 241;
    }

    private void saveImage(java.io.DataOutputStream, com.sun.lwuit.Image, int) throws java.io.IOException
    {
        byte[] $r6;
        com.sun.lwuit.IndexedImage $r4;
        java.io.DataOutputStream r2;
        int $i0, i1, $i2;
        com.sun.lwuit.StaticAnimation $r3;
        java.lang.String $r11, $r13;
        com.sun.lwuit.EncodedImage $r5;
        boolean $z0, $z1, $z2;
        com.sun.lwuit.animations.Timeline $r7;
        java.io.IOException $r8;
        com.sun.lwuit.util.EditableResources r0;
        com.sun.lwuit.Image r1;
        java.lang.StringBuilder $r9, $r10, $r12;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r2 := @parameter0: java.io.DataOutputStream;

        r1 := @parameter1: com.sun.lwuit.Image;

        i1 := @parameter2: int;

        $i0 = specialinvoke r0.<com.sun.lwuit.util.EditableResources: int getImageType(com.sun.lwuit.Image)>(r1);

        $z0 = r0.<com.sun.lwuit.util.EditableResources: boolean ignoreSVGMode>;

        if $z0 == 0 goto label01;

        if $i0 != 245 goto label01;

        virtualinvoke r2.<java.io.DataOutputStream: void writeByte(int)>(241);

        goto label02;

     label01:
        virtualinvoke r2.<java.io.DataOutputStream: void writeByte(int)>($i0);

     label02:
        lookupswitch($i0)
        {
            case -17: goto label09;
            case 241: goto label03;
            case 242: goto label03;
            case 243: goto label05;
            case 244: goto label06;
            case 245: goto label07;
            default: goto label10;
        };

     label03:
        $z2 = r1 instanceof com.sun.lwuit.EncodedImage;

        if $z2 == 0 goto label04;

        $r5 = (com.sun.lwuit.EncodedImage) r1;

        $r6 = virtualinvoke $r5.<com.sun.lwuit.EncodedImage: byte[] getImageData()>();

        $i2 = lengthof $r6;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i2);

        virtualinvoke r2.<java.io.DataOutputStream: void write(byte[])>($r6);

        goto label11;

     label04:
        specialinvoke r0.<com.sun.lwuit.util.EditableResources: void writeImageAsPNG(com.sun.lwuit.Image,int,java.io.DataOutputStream)>(r1, i1, r2);

        goto label11;

     label05:
        $r4 = (com.sun.lwuit.IndexedImage) r1;

        specialinvoke r0.<com.sun.lwuit.util.EditableResources: void savePacked(java.io.DataOutputStream,com.sun.lwuit.IndexedImage)>(r2, $r4);

        goto label11;

     label06:
        $r3 = (com.sun.lwuit.StaticAnimation) r1;

        specialinvoke r0.<com.sun.lwuit.util.EditableResources: void saveAnimation(java.io.DataOutputStream,com.sun.lwuit.StaticAnimation)>(r2, $r3);

        goto label11;

     label07:
        $z1 = r0.<com.sun.lwuit.util.EditableResources: boolean ignoreSVGMode>;

        if $z1 == 0 goto label08;

        specialinvoke r0.<com.sun.lwuit.util.EditableResources: void writeImageAsPNG(com.sun.lwuit.Image,int,java.io.DataOutputStream)>(r1, i1, r2);

        goto label11;

     label08:
        specialinvoke r0.<com.sun.lwuit.util.EditableResources: void saveSVG(java.io.DataOutputStream,com.sun.lwuit.Image)>(r2, r1);

        goto label11;

     label09:
        $r7 = (com.sun.lwuit.animations.Timeline) r1;

        specialinvoke r0.<com.sun.lwuit.util.EditableResources: void writeTimeline(java.io.DataOutputStream,com.sun.lwuit.animations.Timeline)>(r2, $r7);

        goto label11;

     label10:
        $r8 = new java.io.IOException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal type while creating image: ");

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label11:
        return;
    }

    private void writeTimeline(java.io.DataOutputStream, com.sun.lwuit.animations.Timeline) throws java.io.IOException
    {
        com.sun.lwuit.animations.Motion $r11, $r13, $r17, $r19, $r21, $r23;
        java.io.DataOutputStream r0;
        com.sun.lwuit.util.EditableResources r15;
        com.sun.lwuit.animations.AnimationObject[] r4;
        com.sun.lwuit.geom.Dimension $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, $i24;
        java.lang.String $r7, r28;
        com.sun.lwuit.animations.Timeline r1;
        com.sun.lwuit.animations.AnimationObject $r5, $r6, $r8, $r9, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r25, $r26;
        com.sun.lwuit.Image $r27;

        r15 := @this: com.sun.lwuit.util.EditableResources;

        r0 := @parameter0: java.io.DataOutputStream;

        r1 := @parameter1: com.sun.lwuit.animations.Timeline;

        $i0 = virtualinvoke r1.<com.sun.lwuit.animations.Timeline: int getDuration()>();

        virtualinvoke r0.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $r2 = virtualinvoke r1.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.geom.Dimension getSize()>();

        $i1 = virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        virtualinvoke r0.<java.io.DataOutputStream: void writeInt(int)>($i1);

        $r3 = virtualinvoke r1.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.geom.Dimension getSize()>();

        $i2 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        virtualinvoke r0.<java.io.DataOutputStream: void writeInt(int)>($i2);

        $i3 = virtualinvoke r1.<com.sun.lwuit.animations.Timeline: int getAnimationCount()>();

        r4 = newarray (com.sun.lwuit.animations.AnimationObject)[$i3];

        $i4 = lengthof r4;

        virtualinvoke r0.<java.io.DataOutputStream: void writeShort(int)>($i4);

        i22 = 0;

     label1:
        $i5 = lengthof r4;

        if i22 >= $i5 goto label8;

        $r5 = virtualinvoke r1.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject getAnimation(int)>(i22);

        r4[i22] = $r5;

        $r6 = r4[i22];

        $r7 = staticinvoke <com.sun.lwuit.animations.AnimationAccessor: java.lang.String getImageName(com.sun.lwuit.animations.AnimationObject)>($r6);

        r28 = $r7;

        if $r7 != null goto label2;

        $r26 = r4[i22];

        $r27 = staticinvoke <com.sun.lwuit.animations.AnimationAccessor: com.sun.lwuit.Image getImage(com.sun.lwuit.animations.AnimationObject)>($r26);

        r28 = specialinvoke r15.<com.sun.lwuit.util.EditableResources: java.lang.String findId(java.lang.Object)>($r27);

     label2:
        virtualinvoke r0.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(r28);

        $r8 = r4[i22];

        $i6 = virtualinvoke $r8.<com.sun.lwuit.animations.AnimationObject: int getStartTime()>();

        $r9 = r4[i22];

        $i7 = virtualinvoke $r9.<com.sun.lwuit.animations.AnimationObject: int getEndTime()>();

        $i21 = $i7 - $i6;

        virtualinvoke r0.<java.io.DataOutputStream: void writeInt(int)>($i6);

        virtualinvoke r0.<java.io.DataOutputStream: void writeInt(int)>($i21);

        $r10 = r4[i22];

        $r11 = staticinvoke <com.sun.lwuit.animations.AnimationAccessor: com.sun.lwuit.animations.Motion getMotionX(com.sun.lwuit.animations.AnimationObject)>($r10);

        $r12 = r4[i22];

        $r13 = staticinvoke <com.sun.lwuit.animations.AnimationAccessor: com.sun.lwuit.animations.Motion getMotionY(com.sun.lwuit.animations.AnimationObject)>($r12);

        $i8 = virtualinvoke $r11.<com.sun.lwuit.animations.Motion: int getSourceValue()>();

        virtualinvoke r0.<java.io.DataOutputStream: void writeInt(int)>($i8);

        $i9 = virtualinvoke $r13.<com.sun.lwuit.animations.Motion: int getSourceValue()>();

        virtualinvoke r0.<java.io.DataOutputStream: void writeInt(int)>($i9);

        $r14 = r4[i22];

        $i10 = staticinvoke <com.sun.lwuit.animations.AnimationAccessor: int getFrameDelay(com.sun.lwuit.animations.AnimationObject)>($r14);

        virtualinvoke r0.<java.io.DataOutputStream: void writeInt(int)>($i10);

        $i24 = (int) -1;

        if $i10 <= $i24 goto label3;

        $r24 = r4[i22];

        $i19 = staticinvoke <com.sun.lwuit.animations.AnimationAccessor: int getFrameWidth(com.sun.lwuit.animations.AnimationObject)>($r24);

        virtualinvoke r0.<java.io.DataOutputStream: void writeInt(int)>($i19);

        $r25 = r4[i22];

        $i20 = staticinvoke <com.sun.lwuit.animations.AnimationAccessor: int getFrameHeight(com.sun.lwuit.animations.AnimationObject)>($r25);

        virtualinvoke r0.<java.io.DataOutputStream: void writeInt(int)>($i20);

     label3:
        $i11 = virtualinvoke $r11.<com.sun.lwuit.animations.Motion: int getSourceValue()>();

        $i12 = virtualinvoke $r11.<com.sun.lwuit.animations.Motion: int getDestinationValue()>();

        if $i11 == $i12 goto label4;

        virtualinvoke r0.<java.io.DataOutputStream: void writeBoolean(boolean)>(1);

        $i17 = staticinvoke <com.sun.lwuit.animations.AnimationAccessor: int getMotionType(com.sun.lwuit.animations.Motion)>($r11);

        virtualinvoke r0.<java.io.DataOutputStream: void writeInt(int)>($i17);

        $i18 = virtualinvoke $r11.<com.sun.lwuit.animations.Motion: int getDestinationValue()>();

        virtualinvoke r0.<java.io.DataOutputStream: void writeInt(int)>($i18);

        goto label5;

     label4:
        virtualinvoke r0.<java.io.DataOutputStream: void writeBoolean(boolean)>(0);

     label5:
        $i13 = virtualinvoke $r13.<com.sun.lwuit.animations.Motion: int getSourceValue()>();

        $i14 = virtualinvoke $r13.<com.sun.lwuit.animations.Motion: int getDestinationValue()>();

        if $i13 == $i14 goto label6;

        virtualinvoke r0.<java.io.DataOutputStream: void writeBoolean(boolean)>(1);

        $i15 = staticinvoke <com.sun.lwuit.animations.AnimationAccessor: int getMotionType(com.sun.lwuit.animations.Motion)>($r13);

        virtualinvoke r0.<java.io.DataOutputStream: void writeInt(int)>($i15);

        $i16 = virtualinvoke $r13.<com.sun.lwuit.animations.Motion: int getDestinationValue()>();

        virtualinvoke r0.<java.io.DataOutputStream: void writeInt(int)>($i16);

        goto label7;

     label6:
        virtualinvoke r0.<java.io.DataOutputStream: void writeBoolean(boolean)>(0);

     label7:
        $r16 = r4[i22];

        $r17 = staticinvoke <com.sun.lwuit.animations.AnimationAccessor: com.sun.lwuit.animations.Motion getWidth(com.sun.lwuit.animations.AnimationObject)>($r16);

        specialinvoke r15.<com.sun.lwuit.util.EditableResources: void writeMotion(com.sun.lwuit.animations.Motion,java.io.DataOutputStream)>($r17, r0);

        $r18 = r4[i22];

        $r19 = staticinvoke <com.sun.lwuit.animations.AnimationAccessor: com.sun.lwuit.animations.Motion getHeight(com.sun.lwuit.animations.AnimationObject)>($r18);

        specialinvoke r15.<com.sun.lwuit.util.EditableResources: void writeMotion(com.sun.lwuit.animations.Motion,java.io.DataOutputStream)>($r19, r0);

        $r20 = r4[i22];

        $r21 = staticinvoke <com.sun.lwuit.animations.AnimationAccessor: com.sun.lwuit.animations.Motion getOpacity(com.sun.lwuit.animations.AnimationObject)>($r20);

        specialinvoke r15.<com.sun.lwuit.util.EditableResources: void writeMotion(com.sun.lwuit.animations.Motion,java.io.DataOutputStream)>($r21, r0);

        $r22 = r4[i22];

        $r23 = staticinvoke <com.sun.lwuit.animations.AnimationAccessor: com.sun.lwuit.animations.Motion getOrientation(com.sun.lwuit.animations.AnimationObject)>($r22);

        specialinvoke r15.<com.sun.lwuit.util.EditableResources: void writeMotion(com.sun.lwuit.animations.Motion,java.io.DataOutputStream)>($r23, r0);

        i22 = i22 + 1;

        goto label1;

     label8:
        return;
    }

    private void writeMotion(com.sun.lwuit.animations.Motion, java.io.DataOutputStream) throws java.io.IOException
    {
        com.sun.lwuit.animations.Motion r0;
        java.io.DataOutputStream r1;
        int $i0, $i1, $i2;
        com.sun.lwuit.util.EditableResources r2;

        r2 := @this: com.sun.lwuit.util.EditableResources;

        r0 := @parameter0: com.sun.lwuit.animations.Motion;

        r1 := @parameter1: java.io.DataOutputStream;

        if r0 == null goto label1;

        virtualinvoke r1.<java.io.DataOutputStream: void writeBoolean(boolean)>(1);

        $i0 = staticinvoke <com.sun.lwuit.animations.AnimationAccessor: int getMotionType(com.sun.lwuit.animations.Motion)>(r0);

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $i1 = virtualinvoke r0.<com.sun.lwuit.animations.Motion: int getSourceValue()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i1);

        $i2 = virtualinvoke r0.<com.sun.lwuit.animations.Motion: int getDestinationValue()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i2);

        goto label2;

     label1:
        virtualinvoke r1.<java.io.DataOutputStream: void writeBoolean(boolean)>(0);

     label2:
        return;
    }

    private void saveSVG(java.io.DataOutputStream, com.sun.lwuit.Image) throws java.io.IOException
    {
        byte[] $r4, $r5;
        com.sun.lwuit.util.EditableResources r8;
        com.sun.lwuit.Image r0;
        java.io.DataOutputStream r3;
        int $i0;
        float $f0, $f1;
        java.lang.Object $r1;
        java.lang.String $r6, $r7;
        com.sun.lwuit.impl.swing.SVG r2;
        boolean $z0;

        r8 := @this: com.sun.lwuit.util.EditableResources;

        r3 := @parameter0: java.io.DataOutputStream;

        r0 := @parameter1: com.sun.lwuit.Image;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Image: java.lang.Object getSVGDocument()>();

        r2 = (com.sun.lwuit.impl.swing.SVG) $r1;

        $r4 = virtualinvoke r2.<com.sun.lwuit.impl.swing.SVG: byte[] getSvgData()>();

        $i0 = lengthof $r4;

        virtualinvoke r3.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $r5 = virtualinvoke r2.<com.sun.lwuit.impl.swing.SVG: byte[] getSvgData()>();

        virtualinvoke r3.<java.io.DataOutputStream: void write(byte[])>($r5);

        $r6 = virtualinvoke r2.<com.sun.lwuit.impl.swing.SVG: java.lang.String getBaseURL()>();

        if $r6 != null goto label1;

        virtualinvoke r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("");

        goto label2;

     label1:
        $r7 = virtualinvoke r2.<com.sun.lwuit.impl.swing.SVG: java.lang.String getBaseURL()>();

        virtualinvoke r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r7);

     label2:
        virtualinvoke r3.<java.io.DataOutputStream: void writeBoolean(boolean)>(1);

        $f0 = virtualinvoke r2.<com.sun.lwuit.impl.swing.SVG: float getRatioW()>();

        virtualinvoke r3.<java.io.DataOutputStream: void writeFloat(float)>($f0);

        $f1 = virtualinvoke r2.<com.sun.lwuit.impl.swing.SVG: float getRatioH()>();

        virtualinvoke r3.<java.io.DataOutputStream: void writeFloat(float)>($f1);

        $z0 = r8.<com.sun.lwuit.util.EditableResources: boolean ignorePNGMode>;

        if $z0 == 0 goto label3;

        virtualinvoke r3.<java.io.DataOutputStream: void writeInt(int)>(0);

        goto label4;

     label3:
        specialinvoke r8.<com.sun.lwuit.util.EditableResources: void writeImageAsPNG(com.sun.lwuit.Image,int,java.io.DataOutputStream)>(r0, 2, r3);

     label4:
        return;
    }

    void loadSVGRatios(java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream r1;
        float $f0, $f1;
        com.sun.lwuit.util.EditableResources r0;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.io.DataInputStream;

        $f0 = virtualinvoke r1.<java.io.DataInputStream: float readFloat()>();

        r0.<com.sun.lwuit.util.EditableResources: float ratioW> = $f0;

        $f1 = virtualinvoke r1.<java.io.DataInputStream: float readFloat()>();

        r0.<com.sun.lwuit.util.EditableResources: float ratioH> = $f1;

        return;
    }

    com.sun.lwuit.Image createImage() throws java.io.IOException
    {
        float $f0, $f1;
        java.lang.Object $r2;
        com.sun.lwuit.util.EditableResources r0;
        com.sun.lwuit.Image $r1;
        boolean $z0;
        com.sun.lwuit.impl.swing.SVG r3;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        $r1 = specialinvoke r0.<com.sun.lwuit.util.Resources: com.sun.lwuit.Image createImage()>();

        $z0 = virtualinvoke $r1.<com.sun.lwuit.Image: boolean isSVG()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r1.<com.sun.lwuit.Image: java.lang.Object getSVGDocument()>();

        r3 = (com.sun.lwuit.impl.swing.SVG) $r2;

        $f0 = r0.<com.sun.lwuit.util.EditableResources: float ratioH>;

        virtualinvoke r3.<com.sun.lwuit.impl.swing.SVG: void setRatioH(float)>($f0);

        $f1 = r0.<com.sun.lwuit.util.EditableResources: float ratioW>;

        virtualinvoke r3.<com.sun.lwuit.impl.swing.SVG: void setRatioW(float)>($f1);

     label1:
        return $r1;
    }

    private void pushUndoable(com.sun.lwuit.util.EditableResources$UndoableEdit)
    {
        java.util.List $r2, $r3;
        com.sun.lwuit.util.EditableResources$UndoableEdit r1;
        com.sun.lwuit.util.EditableResources r0;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: com.sun.lwuit.util.EditableResources$UndoableEdit;

        $r2 = r0.<com.sun.lwuit.util.EditableResources: java.util.List undoQueue>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        virtualinvoke r1.<com.sun.lwuit.util.EditableResources$UndoableEdit: java.lang.String doAction()>();

        $r3 = r0.<com.sun.lwuit.util.EditableResources: java.util.List redoQueue>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        return;
    }

    public void setImage(java.lang.String, com.sun.lwuit.Image)
    {
        com.sun.lwuit.util.EditableResources r0;
        com.sun.lwuit.Image $r2, r3;
        com.sun.lwuit.util.EditableResources$2 $r4;
        byte b0;
        java.lang.String r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: com.sun.lwuit.Image;

        $r2 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.Image getImage(java.lang.String)>(r1);

        $z0 = r3 instanceof com.sun.lwuit.IndexedImage;

        if $z0 == 0 goto label1;

        b0 = -12;

        goto label4;

     label1:
        $z1 = r3 instanceof com.sun.lwuit.StaticAnimation;

        if $z1 == 0 goto label2;

        b0 = -8;

        goto label4;

     label2:
        $z2 = r3 instanceof com.sun.lwuit.animations.Timeline;

        if $z2 == 0 goto label3;

        b0 = -17;

        goto label4;

     label3:
        b0 = -3;

     label4:
        $r4 = new com.sun.lwuit.util.EditableResources$2;

        specialinvoke $r4.<com.sun.lwuit.util.EditableResources$2: void <init>(com.sun.lwuit.util.EditableResources,com.sun.lwuit.Image,com.sun.lwuit.Image,java.lang.String,byte)>(r0, $r2, r3, r1, b0);

        specialinvoke r0.<com.sun.lwuit.util.EditableResources: void pushUndoable(com.sun.lwuit.util.EditableResources$UndoableEdit)>($r4);

        return;
    }

    public void setAnimation(java.lang.String, com.sun.lwuit.Image)
    {
        com.sun.lwuit.StaticAnimation $r2;
        com.sun.lwuit.util.EditableResources r0;
        java.lang.String r1;
        com.sun.lwuit.util.EditableResources$3 $r3;
        com.sun.lwuit.Image r4;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: com.sun.lwuit.Image;

        $r2 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.StaticAnimation getAnimation(java.lang.String)>(r1);

        $r3 = new com.sun.lwuit.util.EditableResources$3;

        specialinvoke $r3.<com.sun.lwuit.util.EditableResources$3: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String,com.sun.lwuit.Image,com.sun.lwuit.StaticAnimation)>(r0, r1, r4, $r2);

        specialinvoke r0.<com.sun.lwuit.util.EditableResources: void pushUndoable(com.sun.lwuit.util.EditableResources$UndoableEdit)>($r3);

        return;
    }

    public void setTheme(java.lang.String, java.util.Hashtable)
    {
        com.sun.lwuit.util.EditableResources$4 $r3;
        com.sun.lwuit.util.EditableResources r0;
        java.lang.String r1;
        java.util.Hashtable $r2, r4;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.util.Hashtable;

        $r2 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: java.util.Hashtable getTheme(java.lang.String)>(r1);

        $r3 = new com.sun.lwuit.util.EditableResources$4;

        specialinvoke $r3.<com.sun.lwuit.util.EditableResources$4: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String,java.util.Hashtable,java.util.Hashtable)>(r0, r1, r4, $r2);

        specialinvoke r0.<com.sun.lwuit.util.EditableResources: void pushUndoable(com.sun.lwuit.util.EditableResources$UndoableEdit)>($r3);

        return;
    }

    public void setL10N(java.lang.String, java.util.Hashtable)
    {
        com.sun.lwuit.util.EditableResources$5 $r4;
        java.lang.Object $r2;
        com.sun.lwuit.util.EditableResources r0;
        java.lang.String r1;
        java.util.Hashtable r3, r5;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: java.util.Hashtable;

        $r2 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: java.lang.Object getResourceObject(java.lang.String)>(r1);

        r3 = (java.util.Hashtable) $r2;

        $r4 = new com.sun.lwuit.util.EditableResources$5;

        specialinvoke $r4.<com.sun.lwuit.util.EditableResources$5: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String,java.util.Hashtable,java.util.Hashtable)>(r0, r1, r5, r3);

        specialinvoke r0.<com.sun.lwuit.util.EditableResources: void pushUndoable(com.sun.lwuit.util.EditableResources$UndoableEdit)>($r4);

        return;
    }

    public void setLocaleProperty(java.lang.String, java.lang.String, java.lang.String, java.lang.Object)
    {
        com.sun.lwuit.util.EditableResources$6 $r6;
        com.sun.lwuit.util.EditableResources r0;
        java.lang.Object $r5, r7;
        java.lang.String r1, r2, r4;
        java.util.Hashtable $r3;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r7 := @parameter3: java.lang.Object;

        $r3 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: java.util.Hashtable getL10N(java.lang.String,java.lang.String)>(r1, r2);

        $r5 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r4);

        $r6 = new com.sun.lwuit.util.EditableResources$6;

        specialinvoke $r6.<com.sun.lwuit.util.EditableResources$6: void <init>(com.sun.lwuit.util.EditableResources,java.lang.Object,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>(r0, r7, r1, r2, r4, $r5);

        specialinvoke r0.<com.sun.lwuit.util.EditableResources: void pushUndoable(com.sun.lwuit.util.EditableResources$UndoableEdit)>($r6);

        return;
    }

    public void removeLocale(java.lang.String, java.lang.String)
    {
        com.sun.lwuit.util.EditableResources r0;
        com.sun.lwuit.util.EditableResources$7 $r7;
        java.lang.Object $r2, $r5;
        java.lang.String r1, r3;
        java.util.Hashtable $r4, r6;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: java.lang.Object getResourceObject(java.lang.String)>(r1);

        $r4 = (java.util.Hashtable) $r2;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r3);

        r6 = (java.util.Hashtable) $r5;

        $r7 = new com.sun.lwuit.util.EditableResources$7;

        specialinvoke $r7.<com.sun.lwuit.util.EditableResources$7: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String,java.lang.String,java.util.Hashtable)>(r0, r1, r3, r6);

        specialinvoke r0.<com.sun.lwuit.util.EditableResources: void pushUndoable(com.sun.lwuit.util.EditableResources$UndoableEdit)>($r7);

        return;
    }

    public void addLocale(java.lang.String, java.lang.String)
    {
        com.sun.lwuit.util.EditableResources$8 $r1;
        com.sun.lwuit.util.EditableResources r0;
        java.lang.String r2, r3;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = new com.sun.lwuit.util.EditableResources$8;

        specialinvoke $r1.<com.sun.lwuit.util.EditableResources$8: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String,java.lang.String)>(r0, r2, r3);

        specialinvoke r0.<com.sun.lwuit.util.EditableResources: void pushUndoable(com.sun.lwuit.util.EditableResources$UndoableEdit)>($r1);

        return;
    }

    public java.util.Iterator getLocales(java.lang.String)
    {
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.lang.Object $r2;
        com.sun.lwuit.util.EditableResources r0;
        java.lang.String r1;
        java.util.Hashtable $r3;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: java.lang.Object getResourceObject(java.lang.String)>(r1);

        $r3 = (java.util.Hashtable) $r2;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        return $r5;
    }

    public void setThemeProperty(java.lang.String, java.lang.String, java.lang.Object)
    {
        com.sun.lwuit.util.EditableResources$9 $r5;
        java.lang.Object $r4, r6;
        com.sun.lwuit.util.EditableResources r0;
        java.lang.String r1, r3;
        java.util.Hashtable $r2;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.Object;

        $r2 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: java.util.Hashtable getTheme(java.lang.String)>(r1);

        $r4 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r3);

        $r5 = new com.sun.lwuit.util.EditableResources$9;

        specialinvoke $r5.<com.sun.lwuit.util.EditableResources$9: void <init>(com.sun.lwuit.util.EditableResources,java.lang.Object,java.lang.String,java.lang.String,java.lang.Object)>(r0, r6, r1, r3, $r4);

        specialinvoke r0.<com.sun.lwuit.util.EditableResources: void pushUndoable(com.sun.lwuit.util.EditableResources$UndoableEdit)>($r5);

        return;
    }

    public void setData(java.lang.String, byte[])
    {
        byte[] $r3, r4, r6;
        java.lang.Object $r2;
        com.sun.lwuit.util.EditableResources r0;
        java.lang.String r1;
        com.sun.lwuit.util.EditableResources$10 $r5;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: byte[];

        $r2 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: java.lang.Object getResourceObject(java.lang.String)>(r1);

        $r3 = (byte[]) $r2;

        r4 = (byte[]) $r3;

        $r5 = new com.sun.lwuit.util.EditableResources$10;

        specialinvoke $r5.<com.sun.lwuit.util.EditableResources$10: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String,byte[],byte[])>(r0, r1, r6, r4);

        specialinvoke r0.<com.sun.lwuit.util.EditableResources: void pushUndoable(com.sun.lwuit.util.EditableResources$UndoableEdit)>($r5);

        return;
    }

    public void renameEntry(java.lang.String, java.lang.String)
    {
        com.sun.lwuit.util.EditableResources r0;
        java.lang.String r2, r3;
        com.sun.lwuit.util.EditableResources$11 $r1;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = new com.sun.lwuit.util.EditableResources$11;

        specialinvoke $r1.<com.sun.lwuit.util.EditableResources$11: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String,java.lang.String)>(r0, r2, r3);

        specialinvoke r0.<com.sun.lwuit.util.EditableResources: void pushUndoable(com.sun.lwuit.util.EditableResources$UndoableEdit)>($r1);

        return;
    }

    private void saveL10N(java.io.DataOutputStream, java.util.Hashtable) throws java.io.IOException
    {
        java.io.DataOutputStream r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Set $r2, $r6, $r19;
        com.sun.lwuit.util.EditableResources r22;
        java.util.ArrayList $r0;
        int $i0, $i1;
        java.lang.String $r10, r14, $r16;
        java.util.Hashtable r1, r23, r24;
        java.util.Iterator $r3, $r5, $r7, $r11, $r20;
        java.lang.Object $r8, $r9, $r12, $r13, $r15, $r17, $r18, $r21;

        r22 := @this: com.sun.lwuit.util.EditableResources;

        r4 := @parameter0: java.io.DataOutputStream;

        r1 := @parameter1: java.util.Hashtable;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r1.<java.util.Hashtable: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r17 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r18 = virtualinvoke r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r17);

        r23 = (java.util.Hashtable) $r18;

        $r19 = virtualinvoke r23.<java.util.Hashtable: java.util.Set keySet()>();

        $r20 = interfaceinvoke $r19.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z4 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label04;

        $r21 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        $z5 = interfaceinvoke $r0.<java.util.List: boolean contains(java.lang.Object)>($r21);

        if $z5 != 0 goto label03;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r21);

     label03:
        goto label02;

     label04:
        goto label01;

     label05:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        virtualinvoke r4.<java.io.DataOutputStream: void writeShort(int)>($i0);

        $i1 = virtualinvoke r1.<java.util.Hashtable: int size()>();

        virtualinvoke r4.<java.io.DataOutputStream: void writeShort(int)>($i1);

        $r5 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r15 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (java.lang.String) $r15;

        virtualinvoke r4.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r16);

        goto label06;

     label07:
        $r6 = virtualinvoke r1.<java.util.Hashtable: java.util.Set keySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label13;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = virtualinvoke r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r8);

        r24 = (java.util.Hashtable) $r9;

        $r10 = (java.lang.String) $r8;

        virtualinvoke r4.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r10);

        $r11 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z3 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label12;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r13 = virtualinvoke r24.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r12);

        r14 = (java.lang.String) $r13;

        if r14 == null goto label10;

        virtualinvoke r4.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(r14);

        goto label11;

     label10:
        virtualinvoke r4.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("");

     label11:
        goto label09;

     label12:
        goto label08;

     label13:
        return;
    }

    public void setFont(java.lang.String, com.sun.lwuit.Font)
    {
        com.sun.lwuit.util.EditableResources$12 $r3;
        com.sun.lwuit.util.EditableResources r0;
        java.lang.String r1;
        com.sun.lwuit.Font $r2, r4;
        boolean $z0;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: com.sun.lwuit.Font;

        $r2 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.Font getFont(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<com.sun.lwuit.Font: boolean equals(java.lang.Object)>(r4);

        if $z0 != 0 goto label2;

     label1:
        $r3 = new com.sun.lwuit.util.EditableResources$12;

        specialinvoke $r3.<com.sun.lwuit.util.EditableResources$12: void <init>(com.sun.lwuit.util.EditableResources,com.sun.lwuit.Font,com.sun.lwuit.Font,java.lang.String)>(r0, $r2, r4, r1);

        specialinvoke r0.<com.sun.lwuit.util.EditableResources: void pushUndoable(com.sun.lwuit.util.EditableResources$UndoableEdit)>($r3);

     label2:
        return;
    }

    private void replaceThemeValue(java.lang.Object, java.lang.Object)
    {
        java.lang.String[] $r3, $r4;
        int $i0, $i1, i2, i3, i4, i5, i6;
        java.lang.String r17, r18;
        java.util.Hashtable $r5, $r12;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r7, $r14;
        java.util.Collection $r6;
        java.util.Set $r13;
        com.sun.lwuit.util.EditableResources r2;
        com.sun.lwuit.Image $r10, $r11;
        com.sun.lwuit.plaf.Border r19;
        com.sun.lwuit.Image[] $r9;
        java.lang.Object r0, r1, $r8, $r15, $r16;

        r2 := @this: com.sun.lwuit.util.EditableResources;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 == null goto label12;

        if r1 == null goto label12;

        $r3 = virtualinvoke r2.<com.sun.lwuit.util.EditableResources: java.lang.String[] getThemeResourceNames()>();

        i2 = lengthof $r3;

        i3 = 0;

     label01:
        if i3 >= i2 goto label05;

        r17 = $r3[i3];

        $r12 = virtualinvoke r2.<com.sun.lwuit.util.EditableResources: java.util.Hashtable getTheme(java.lang.String)>(r17);

        $r13 = virtualinvoke $r12.<java.util.Hashtable: java.util.Set keySet()>();

        $r14 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z3 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label04;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r16 = virtualinvoke $r12.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r15);

        if $r16 != r0 goto label03;

        virtualinvoke $r12.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, r1);

     label03:
        goto label02;

     label04:
        i3 = i3 + 1;

        goto label01;

     label05:
        $z0 = r1 instanceof com.sun.lwuit.Image;

        if $z0 == 0 goto label12;

        $r4 = virtualinvoke r2.<com.sun.lwuit.util.EditableResources: java.lang.String[] getThemeResourceNames()>();

        i4 = lengthof $r4;

        i5 = 0;

     label06:
        if i5 >= i4 goto label12;

        r18 = $r4[i5];

        $r5 = virtualinvoke r2.<com.sun.lwuit.util.EditableResources: java.util.Hashtable getTheme(java.lang.String)>(r18);

        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.util.Collection values()>();

        $r7 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $z2 = $r8 instanceof com.sun.lwuit.plaf.Border;

        if $z2 == 0 goto label10;

        r19 = (com.sun.lwuit.plaf.Border) $r8;

        $i0 = staticinvoke <com.sun.lwuit.plaf.Accessor: int getType(com.sun.lwuit.plaf.Border)>(r19);

        if $i0 != 8 goto label10;

        $r9 = staticinvoke <com.sun.lwuit.plaf.Accessor: com.sun.lwuit.Image[] getImages(com.sun.lwuit.plaf.Border)>(r19);

        i6 = 0;

     label08:
        $i1 = lengthof $r9;

        if i6 >= $i1 goto label10;

        $r10 = $r9[i6];

        if $r10 != r0 goto label09;

        $r11 = (com.sun.lwuit.Image) r1;

        $r9[i6] = $r11;

     label09:
        i6 = i6 + 1;

        goto label08;

     label10:
        goto label07;

     label11:
        i5 = i5 + 1;

        goto label06;

     label12:
        return;
    }

    public void remove(java.lang.String)
    {
        com.sun.lwuit.util.EditableResources$13 $r3;
        byte $b0;
        java.lang.Object $r2;
        com.sun.lwuit.util.EditableResources r0;
        java.lang.String r1;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: java.lang.Object getResourceObject(java.lang.String)>(r1);

        $b0 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: byte getResourceType(java.lang.String)>(r1);

        $r3 = new com.sun.lwuit.util.EditableResources$13;

        specialinvoke $r3.<com.sun.lwuit.util.EditableResources$13: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String,byte,java.lang.Object)>(r0, r1, $b0, $r2);

        specialinvoke r0.<com.sun.lwuit.util.EditableResources: void pushUndoable(com.sun.lwuit.util.EditableResources$UndoableEdit)>($r3);

        return;
    }

    public javax.swing.JComponent getResourceEditor(java.lang.String, com.sun.jwt.resources.editor.ResourceEditorView)
    {
        byte $b0;
        boolean $z0;
        com.sun.jwt.resources.editor.ResourceEditorView r16;
        com.sun.jwt.resources.editor.editors.ImageEditor $r27, $r29, $r32;
        com.sun.lwuit.util.EditableResources r0;
        com.sun.jwt.resources.editor.editors.TimelineEditor $r26, $r28;
        java.lang.StringBuilder $r22, $r24, $r35;
        short $s1, $s3;
        int $i2, $i4;
        java.lang.String r1, $r23, $r25;
        java.util.Hashtable $r15;
        com.sun.jwt.resources.editor.editors.L10nEditor $r34;
        com.sun.jwt.resources.editor.editors.DataEditor $r33;
        com.sun.lwuit.animations.Timeline $r13, $r19;
        com.sun.jwt.resources.editor.editors.FontEditor $r31;
        com.sun.lwuit.Image $r5, $r9, $r10, $r18;
        java.lang.IllegalArgumentException $r36;
        com.sun.jwt.resources.editor.editors.ThemeEditor $r30;
        com.sun.lwuit.Font $r7;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.lang.String;

        r16 := @parameter1: com.sun.jwt.resources.editor.ResourceEditorView;

        $b0 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: byte getResourceType(java.lang.String)>(r1);

        $i2 = (int) $b0;

        tableswitch($i2)
        {
            case -17: goto label03;
            case -16: goto label10;
            case -15: goto label10;
            case -14: goto label05;
            case -13: goto label01;
            case -12: goto label04;
            case -11: goto label10;
            case -10: goto label06;
            case -9: goto label05;
            case -8: goto label07;
            case -7: goto label09;
            case -6: goto label08;
            case -5: goto label06;
            case -4: goto label06;
            case -3: goto label01;
            default: goto label10;
        };

     label01:
        $r10 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.Image getImage(java.lang.String)>(r1);

        $z0 = $r10 instanceof com.sun.lwuit.animations.Timeline;

        if $z0 == 0 goto label02;

        $r26 = new com.sun.jwt.resources.editor.editors.TimelineEditor;

        specialinvoke $r26.<com.sun.jwt.resources.editor.editors.TimelineEditor: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String)>(r0, r1);

        $r13 = (com.sun.lwuit.animations.Timeline) $r10;

        virtualinvoke $r26.<com.sun.jwt.resources.editor.editors.TimelineEditor: void setImage(com.sun.lwuit.animations.Timeline)>($r13);

        return $r26;

     label02:
        $r27 = new com.sun.jwt.resources.editor.editors.ImageEditor;

        specialinvoke $r27.<com.sun.jwt.resources.editor.editors.ImageEditor: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String)>(r0, r1);

        virtualinvoke $r27.<com.sun.jwt.resources.editor.editors.ImageEditor: void setImage(com.sun.lwuit.Image)>($r10);

        return $r27;

     label03:
        $r28 = new com.sun.jwt.resources.editor.editors.TimelineEditor;

        specialinvoke $r28.<com.sun.jwt.resources.editor.editors.TimelineEditor: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String)>(r0, r1);

        $r18 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.Image getImage(java.lang.String)>(r1);

        $r19 = (com.sun.lwuit.animations.Timeline) $r18;

        virtualinvoke $r28.<com.sun.jwt.resources.editor.editors.TimelineEditor: void setImage(com.sun.lwuit.animations.Timeline)>($r19);

        return $r28;

     label04:
        $r29 = new com.sun.jwt.resources.editor.editors.ImageEditor;

        specialinvoke $r29.<com.sun.jwt.resources.editor.editors.ImageEditor: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String)>(r0, r1);

        virtualinvoke $r29.<com.sun.jwt.resources.editor.editors.ImageEditor: void setPacked(boolean)>(1);

        $r9 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.Image getImage(java.lang.String)>(r1);

        virtualinvoke $r29.<com.sun.jwt.resources.editor.editors.ImageEditor: void setImage(com.sun.lwuit.Image)>($r9);

        return $r29;

     label05:
        $r30 = new com.sun.jwt.resources.editor.editors.ThemeEditor;

        $r15 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: java.util.Hashtable getTheme(java.lang.String)>(r1);

        specialinvoke $r30.<com.sun.jwt.resources.editor.editors.ThemeEditor: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String,java.util.Hashtable,com.sun.jwt.resources.editor.ResourceEditorView)>(r0, r1, $r15, r16);

        return $r30;

     label06:
        $r31 = new com.sun.jwt.resources.editor.editors.FontEditor;

        $r7 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.Font getFont(java.lang.String)>(r1);

        specialinvoke $r31.<com.sun.jwt.resources.editor.editors.FontEditor: void <init>(com.sun.lwuit.util.EditableResources,com.sun.lwuit.Font,java.lang.String)>(r0, $r7, r1);

        return $r31;

     label07:
        $r32 = new com.sun.jwt.resources.editor.editors.ImageEditor;

        specialinvoke $r32.<com.sun.jwt.resources.editor.editors.ImageEditor: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String)>(r0, r1);

        virtualinvoke $r32.<com.sun.jwt.resources.editor.editors.ImageEditor: void setAnimation(boolean)>(1);

        $r5 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.Image getImage(java.lang.String)>(r1);

        virtualinvoke $r32.<com.sun.jwt.resources.editor.editors.ImageEditor: void setImage(com.sun.lwuit.Image)>($r5);

        return $r32;

     label08:
        $r33 = new com.sun.jwt.resources.editor.editors.DataEditor;

        specialinvoke $r33.<com.sun.jwt.resources.editor.editors.DataEditor: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String)>(r0, r1);

        return $r33;

     label09:
        $r34 = new com.sun.jwt.resources.editor.editors.L10nEditor;

        specialinvoke $r34.<com.sun.jwt.resources.editor.editors.L10nEditor: void <init>(com.sun.lwuit.util.EditableResources,java.lang.String)>(r0, r1);

        return $r34;

     label10:
        $r36 = new java.lang.IllegalArgumentException;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized magic number: ");

        $s3 = (short) $b0;

        $s1 = $s3 & 255;

        $i4 = (int) $s1;

        $r23 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i4);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r36;
    }

    public static com.sun.lwuit.util.EditableResources open(java.io.InputStream) throws java.io.IOException
    {
        com.sun.lwuit.util.EditableResources $r0;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        $r0 = new com.sun.lwuit.util.EditableResources;

        specialinvoke $r0.<com.sun.lwuit.util.EditableResources: void <init>(java.io.InputStream)>(r1);

        return $r0;
    }

    public java.lang.Object getRoot()
    {
        java.lang.Object $r0;
        com.sun.lwuit.util.EditableResources r1;

        r1 := @this: com.sun.lwuit.util.EditableResources;

        $r0 = <com.sun.lwuit.util.EditableResources: java.lang.Object root>;

        return $r0;
    }

    public java.lang.Object getChild(java.lang.Object, int)
    {
        com.sun.lwuit.util.EditableResources$Node $r2, $r7;
        java.lang.String[] $r3;
        com.sun.lwuit.util.EditableResources r5;
        com.sun.lwuit.util.EditableResources$Node[] $r6;
        int i0;
        java.lang.Object r0, $r1;
        java.lang.String $r4;

        r5 := @this: com.sun.lwuit.util.EditableResources;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r1 = <com.sun.lwuit.util.EditableResources: java.lang.Object root>;

        if r0 != $r1 goto label1;

        $r6 = r5.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node[] nodes>;

        $r7 = $r6[i0];

        return $r7;

     label1:
        $r2 = (com.sun.lwuit.util.EditableResources$Node) r0;

        $r3 = virtualinvoke $r2.<com.sun.lwuit.util.EditableResources$Node: java.lang.String[] children()>();

        $r4 = $r3[i0];

        return $r4;
    }

    public int getChildCount(java.lang.Object)
    {
        com.sun.lwuit.util.EditableResources$Node $r2;
        java.lang.String[] $r3;
        com.sun.lwuit.util.EditableResources r4;
        com.sun.lwuit.util.EditableResources$Node[] $r5;
        int $i0, $i1;
        java.lang.Object r0, $r1;
        boolean $z0;

        r4 := @this: com.sun.lwuit.util.EditableResources;

        r0 := @parameter0: java.lang.Object;

        $r1 = <com.sun.lwuit.util.EditableResources: java.lang.Object root>;

        if r0 != $r1 goto label1;

        $r5 = r4.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node[] nodes>;

        $i1 = lengthof $r5;

        return $i1;

     label1:
        $z0 = r0 instanceof com.sun.lwuit.util.EditableResources$Node;

        if $z0 == 0 goto label2;

        $r2 = (com.sun.lwuit.util.EditableResources$Node) r0;

        $r3 = virtualinvoke $r2.<com.sun.lwuit.util.EditableResources$Node: java.lang.String[] children()>();

        $i0 = lengthof $r3;

        return $i0;

     label2:
        return 0;
    }

    public boolean isLeaf(java.lang.Object)
    {
        java.lang.Object r0;
        com.sun.lwuit.util.EditableResources r1;
        boolean $z0;

        r1 := @this: com.sun.lwuit.util.EditableResources;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.String;

        return $z0;
    }

    public void valueForPathChanged(javax.swing.tree.TreePath, java.lang.Object)
    {
        javax.swing.event.TreeModelEvent $r6;
        java.util.Iterator $r10;
        javax.swing.tree.TreePath r0, $r7, $r8;
        com.sun.lwuit.util.EditableResources r2;
        javax.swing.event.TreeModelListener r12;
        java.util.List $r9;
        java.lang.Object $r1, r3, $r11;
        java.lang.String $r4, $r5;
        boolean $z0;

        r2 := @this: com.sun.lwuit.util.EditableResources;

        r0 := @parameter0: javax.swing.tree.TreePath;

        r3 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<javax.swing.tree.TreePath: java.lang.Object getLastPathComponent()>();

        $r5 = (java.lang.String) $r1;

        $r4 = (java.lang.String) r3;

        virtualinvoke r2.<com.sun.lwuit.util.EditableResources: void renameEntry(java.lang.String,java.lang.String)>($r5, $r4);

        $r6 = new javax.swing.event.TreeModelEvent;

        $r7 = virtualinvoke r0.<javax.swing.tree.TreePath: javax.swing.tree.TreePath getParentPath()>();

        $r8 = virtualinvoke $r7.<javax.swing.tree.TreePath: javax.swing.tree.TreePath pathByAddingChild(java.lang.Object)>(r3);

        specialinvoke $r6.<javax.swing.event.TreeModelEvent: void <init>(java.lang.Object,javax.swing.tree.TreePath)>(r2, $r8);

        $r9 = r2.<com.sun.lwuit.util.EditableResources: java.util.List listeners>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (javax.swing.event.TreeModelListener) $r11;

        interfaceinvoke r12.<javax.swing.event.TreeModelListener: void treeNodesChanged(javax.swing.event.TreeModelEvent)>($r6);

        goto label1;

     label2:
        return;
    }

    private com.sun.lwuit.util.EditableResources$Node getParent(byte)
    {
        byte b0;
        com.sun.lwuit.util.EditableResources$Node r1;
        int $i1;
        com.sun.lwuit.util.EditableResources r0;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        b0 := @parameter0: byte;

        r1 = r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node IMAGES>;

        $i1 = (int) b0;

        tableswitch($i1)
        {
            case -14: goto label1;
            case -13: goto label6;
            case -12: goto label6;
            case -11: goto label6;
            case -10: goto label2;
            case -9: goto label1;
            case -8: goto label3;
            case -7: goto label5;
            case -6: goto label4;
            case -5: goto label6;
            case -4: goto label2;
            default: goto label6;
        };

     label1:
        r1 = r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node THEMES>;

        goto label6;

     label2:
        r1 = r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node FONTS>;

        goto label6;

     label3:
        r1 = r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node ANIMATIONS>;

        goto label6;

     label4:
        r1 = r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node DATA>;

        goto label6;

     label5:
        r1 = r0.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node L10N>;

     label6:
        return r1;
    }

    private javax.swing.event.TreeModelEvent createEventForNode(java.lang.String, byte, int)
    {
        javax.swing.event.TreeModelEvent $r0;
        java.lang.Object[] $r2, $r6;
        com.sun.lwuit.util.EditableResources$Node $r4;
        com.sun.lwuit.util.EditableResources r1;
        byte b0;
        int[] $r5;
        int i1;
        java.lang.Object $r3;
        java.lang.String r7;

        r1 := @this: com.sun.lwuit.util.EditableResources;

        r7 := @parameter0: java.lang.String;

        b0 := @parameter1: byte;

        i1 := @parameter2: int;

        $r0 = new javax.swing.event.TreeModelEvent;

        $r2 = newarray (java.lang.Object)[2];

        $r3 = <com.sun.lwuit.util.EditableResources: java.lang.Object root>;

        $r2[0] = $r3;

        $r4 = specialinvoke r1.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node getParent(byte)>(b0);

        $r2[1] = $r4;

        $r5 = newarray (int)[1];

        $r5[0] = i1;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r7;

        specialinvoke $r0.<javax.swing.event.TreeModelEvent: void <init>(java.lang.Object,java.lang.Object[],int[],java.lang.Object[])>(r1, $r2, $r5, $r6);

        return $r0;
    }

    public void fireTreeNodeAdded(java.lang.String, int)
    {
        javax.swing.event.TreeModelEvent $r2;
        java.util.Iterator $r4;
        com.sun.lwuit.util.EditableResources r0;
        javax.swing.event.TreeModelListener r6;
        java.util.List $r3;
        byte $b0;
        int i1;
        java.lang.Object $r5;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        $b0 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: byte getResourceType(java.lang.String)>(r1);

        $r2 = specialinvoke r0.<com.sun.lwuit.util.EditableResources: javax.swing.event.TreeModelEvent createEventForNode(java.lang.String,byte,int)>(r1, $b0, i1);

        $r3 = r0.<com.sun.lwuit.util.EditableResources: java.util.List listeners>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (javax.swing.event.TreeModelListener) $r5;

        interfaceinvoke r6.<javax.swing.event.TreeModelListener: void treeNodesInserted(javax.swing.event.TreeModelEvent)>($r2);

        goto label1;

     label2:
        return;
    }

    public void fireTreeNodeChanged(java.lang.String, int)
    {
        javax.swing.event.TreeModelEvent $r2;
        java.util.Iterator $r4;
        com.sun.lwuit.util.EditableResources r0;
        javax.swing.event.TreeModelListener r6;
        java.util.List $r3;
        byte $b0;
        int i1;
        java.lang.Object $r5;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        $b0 = virtualinvoke r0.<com.sun.lwuit.util.EditableResources: byte getResourceType(java.lang.String)>(r1);

        $r2 = specialinvoke r0.<com.sun.lwuit.util.EditableResources: javax.swing.event.TreeModelEvent createEventForNode(java.lang.String,byte,int)>(r1, $b0, i1);

        $r3 = r0.<com.sun.lwuit.util.EditableResources: java.util.List listeners>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (javax.swing.event.TreeModelListener) $r5;

        interfaceinvoke r6.<javax.swing.event.TreeModelListener: void treeNodesChanged(javax.swing.event.TreeModelEvent)>($r2);

        goto label1;

     label2:
        return;
    }

    public void fireTreeNodeRemoved(java.lang.String, byte, int)
    {
        javax.swing.event.TreeModelEvent $r2;
        java.util.Iterator $r4;
        com.sun.lwuit.util.EditableResources r0;
        javax.swing.event.TreeModelListener r6;
        java.util.List $r3;
        byte b0;
        int i1;
        java.lang.Object $r5;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: java.lang.String;

        b0 := @parameter1: byte;

        i1 := @parameter2: int;

        $r2 = specialinvoke r0.<com.sun.lwuit.util.EditableResources: javax.swing.event.TreeModelEvent createEventForNode(java.lang.String,byte,int)>(r1, b0, i1);

        $r3 = r0.<com.sun.lwuit.util.EditableResources: java.util.List listeners>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (javax.swing.event.TreeModelListener) $r5;

        interfaceinvoke r6.<javax.swing.event.TreeModelListener: void treeNodesRemoved(javax.swing.event.TreeModelEvent)>($r2);

        goto label1;

     label2:
        return;
    }

    public int getIndexOfChild(java.lang.Object, java.lang.Object)
    {
        com.sun.lwuit.util.EditableResources$Node $r2, $r9;
        java.lang.String[] $r3;
        com.sun.lwuit.util.EditableResources r6;
        com.sun.lwuit.util.EditableResources$Node[] $r7, $r8;
        int $i0, i1, i2, $i3, $i5;
        java.lang.Object r0, $r1, r4;
        java.lang.String $r5;

        r6 := @this: com.sun.lwuit.util.EditableResources;

        r0 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r1 = <com.sun.lwuit.util.EditableResources: java.lang.Object root>;

        if r0 != $r1 goto label3;

        i1 = 0;

     label1:
        $r7 = r6.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node[] nodes>;

        $i0 = lengthof $r7;

        if i1 >= $i0 goto label3;

        $r8 = r6.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.util.EditableResources$Node[] nodes>;

        $r9 = $r8[i1];

        if $r9 != r4 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r2 = (com.sun.lwuit.util.EditableResources$Node) r0;

        $r3 = virtualinvoke $r2.<com.sun.lwuit.util.EditableResources$Node: java.lang.String[] children()>();

        i2 = 0;

     label4:
        $i3 = lengthof $r3;

        if i2 >= $i3 goto label6;

        $r5 = $r3[i2];

        if $r5 != r4 goto label5;

        return i2;

     label5:
        i2 = i2 + 1;

        goto label4;

     label6:
        $i5 = (int) -1;

        return $i5;
    }

    public void addTreeModelListener(javax.swing.event.TreeModelListener)
    {
        java.util.List $r2, $r3;
        com.sun.lwuit.util.EditableResources r0;
        javax.swing.event.TreeModelListener r1;
        boolean $z0;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: javax.swing.event.TreeModelListener;

        $r2 = r0.<com.sun.lwuit.util.EditableResources: java.util.List listeners>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.sun.lwuit.util.EditableResources: java.util.List listeners>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

     label1:
        return;
    }

    public void removeTreeModelListener(javax.swing.event.TreeModelListener)
    {
        java.util.List $r2;
        com.sun.lwuit.util.EditableResources r0;
        javax.swing.event.TreeModelListener r1;

        r0 := @this: com.sun.lwuit.util.EditableResources;

        r1 := @parameter0: javax.swing.event.TreeModelListener;

        $r2 = r0.<com.sun.lwuit.util.EditableResources: java.util.List listeners>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return;
    }

    static boolean access$000(com.sun.lwuit.util.EditableResources)
    {
        com.sun.lwuit.util.EditableResources r0;
        boolean $z0;

        r0 := @parameter0: com.sun.lwuit.util.EditableResources;

        $z0 = r0.<com.sun.lwuit.util.EditableResources: boolean modified>;

        return $z0;
    }

    static boolean access$002(com.sun.lwuit.util.EditableResources, boolean)
    {
        com.sun.lwuit.util.EditableResources r0;
        boolean z0;

        r0 := @parameter0: com.sun.lwuit.util.EditableResources;

        z0 := @parameter1: boolean;

        r0.<com.sun.lwuit.util.EditableResources: boolean modified> = z0;

        return z0;
    }

    static java.lang.Runnable access$100(com.sun.lwuit.util.EditableResources)
    {
        com.sun.lwuit.util.EditableResources r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: com.sun.lwuit.util.EditableResources;

        $r1 = r0.<com.sun.lwuit.util.EditableResources: java.lang.Runnable onChange>;

        return $r1;
    }

    static void access$300(com.sun.lwuit.util.EditableResources, java.lang.Object, java.lang.Object)
    {
        java.lang.Object r1, r2;
        com.sun.lwuit.util.EditableResources r0;

        r0 := @parameter0: com.sun.lwuit.util.EditableResources;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        specialinvoke r0.<com.sun.lwuit.util.EditableResources: void replaceThemeValue(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        <com.sun.lwuit.util.EditableResources: short MAJOR_VERSION> = 1;

        <com.sun.lwuit.util.EditableResources: short MINOR_VERSION> = 3;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.sun.lwuit.util.EditableResources: java.lang.Object root> = $r0;

        return;
    }
}
