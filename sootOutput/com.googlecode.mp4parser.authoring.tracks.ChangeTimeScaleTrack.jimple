public class com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack extends java.lang.Object implements com.googlecode.mp4parser.authoring.Track
{
    private static final java.util.logging.Logger LOG;
    com.googlecode.mp4parser.authoring.Track source;
    java.util.List ctts;
    long[] decodingTimes;
    long timeScale;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lcom/googlecode/mp4parser/authoring/tracks/ChangeTimeScaleTrack;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: java.util.logging.Logger LOG> = $r2;

        return;
    }

    public void <init>(com.googlecode.mp4parser.authoring.Track, long, long[])
    {
        com.googlecode.mp4parser.authoring.Track r1;
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;
        long l0, $l1;
        java.util.List $r3, $r4;
        long[] $r5, r6, $r7, $r8;
        com.googlecode.mp4parser.authoring.TrackMetaData $r2;
        double $d0, $d1, d2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        l0 := @parameter1: long;

        r6 := @parameter2: long[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source> = r1;

        r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: long timeScale> = l0;

        $d0 = (double) l0;

        $r2 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l1 = virtualinvoke $r2.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        $d1 = (double) $l1;

        d2 = $d0 / $d1;

        $r3 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getCompositionTimeEntries()>();

        $r4 = staticinvoke <com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: java.util.List adjustCtts(java.util.List,double)>($r3, d2);

        r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: java.util.List ctts> = $r4;

        $r5 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: long[] getSampleDurations()>();

        $r7 = staticinvoke <com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: long[] getTimes(com.googlecode.mp4parser.authoring.Track,long[],long)>(r1, r6, l0);

        $r8 = staticinvoke <com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: long[] adjustTts(long[],double,long[],long[])>($r5, d2, r6, $r7);

        r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: long[] decodingTimes> = $r8;

        return;
    }

    private static long[] getTimes(com.googlecode.mp4parser.authoring.Track, long[], long)
    {
        com.googlecode.mp4parser.authoring.Track r2;
        long $l1, $l2, $l5, l7, $l8, $l9, $l10, l12, $l14, $l17;
        long[] r0, r1, $r3;
        byte $b3, $b18;
        int $i0, $i4, $i6, i11, i13, $i15, $i16, $i19;
        com.googlecode.mp4parser.authoring.TrackMetaData $r4;

        r2 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r0 := @parameter1: long[];

        l7 := @parameter2: long;

        $i0 = lengthof r0;

        r1 = newarray (long)[$i0];

        i11 = 1;

        l12 = 0L;

        i13 = 0;

        goto label3;

     label1:
        $l2 = (long) i11;

        $l1 = r0[i13];

        $b3 = $l2 cmp $l1;

        if $b3 != 0 goto label2;

        $i6 = i13;

        i13 = i13 + 1;

        $l8 = l12 * l7;

        $r4 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l9 = virtualinvoke $r4.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        $l10 = $l8 / $l9;

        r1[$i6] = $l10;

     label2:
        $r3 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: long[] getSampleDurations()>();

        $i4 = i11 - 1;

        $l5 = $r3[$i4];

        l12 = l12 + $l5;

        i11 = i11 + 1;

     label3:
        $l14 = (long) i11;

        $i15 = lengthof r0;

        $i16 = $i15 - 1;

        $l17 = r0[$i16];

        $b18 = $l14 cmp $l17;

        $i19 = (int) $b18;

        if $i19 <= 0 goto label1;

        return r1;
    }

    public com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()
    {
        com.googlecode.mp4parser.authoring.Track $r1;
        com.coremedia.iso.boxes.SampleDescriptionBox $r2;
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>();

        return $r2;
    }

    public long[] getSampleDurations()
    {
        long[] $r1;
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: long[] decodingTimes>;

        return $r1;
    }

    public java.util.List getCompositionTimeEntries()
    {
        java.util.List $r1;
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: java.util.List ctts>;

        return $r1;
    }

    public long[] getSyncSamples()
    {
        com.googlecode.mp4parser.authoring.Track $r1;
        long[] $r2;
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        return $r2;
    }

    public java.util.List getSampleDependencies()
    {
        com.googlecode.mp4parser.authoring.Track $r1;
        java.util.List $r2;
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSampleDependencies()>();

        return $r2;
    }

    public com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()
    {
        com.googlecode.mp4parser.authoring.Track $r1;
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;
        java.lang.Object $r3;
        long $l0;
        com.googlecode.mp4parser.authoring.TrackMetaData $r2, r4;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $r3 = virtualinvoke $r2.<com.googlecode.mp4parser.authoring.TrackMetaData: java.lang.Object clone()>();

        r4 = (com.googlecode.mp4parser.authoring.TrackMetaData) $r3;

        $l0 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: long timeScale>;

        virtualinvoke r4.<com.googlecode.mp4parser.authoring.TrackMetaData: void setTimescale(long)>($l0);

        return r4;
    }

    public java.lang.String getHandler()
    {
        com.googlecode.mp4parser.authoring.Track $r1;
        java.lang.String $r2;
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        return $r2;
    }

    public java.util.List getSamples()
    {
        com.googlecode.mp4parser.authoring.Track $r1;
        java.util.List $r2;
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        return $r2;
    }

    static java.util.List adjustCtts(java.util.List, double)
    {
        com.coremedia.iso.boxes.CompositionTimeToSample$Entry r4, $r5;
        java.util.Iterator $r2;
        long $l3;
        java.util.ArrayList $r1;
        java.util.List r0;
        int $i0, $i1, $i2, $i4;
        java.lang.Object $r3;
        boolean $z0;
        double d0, $d1, $d2;

        r0 := @parameter0: java.util.List;

        d0 := @parameter1: double;

        if r0 == null goto label3;

        $r1 = new java.util.ArrayList;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.coremedia.iso.boxes.CompositionTimeToSample$Entry) $r3;

        $r5 = new com.coremedia.iso.boxes.CompositionTimeToSample$Entry;

        $i1 = virtualinvoke r4.<com.coremedia.iso.boxes.CompositionTimeToSample$Entry: int getCount()>();

        $i2 = virtualinvoke r4.<com.coremedia.iso.boxes.CompositionTimeToSample$Entry: int getOffset()>();

        $d1 = (double) $i2;

        $d2 = d0 * $d1;

        $l3 = staticinvoke <java.lang.Math: long round(double)>($d2);

        $i4 = (int) $l3;

        specialinvoke $r5.<com.coremedia.iso.boxes.CompositionTimeToSample$Entry: void <init>(int,int)>($i1, $i4);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r5);

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return $r1;

     label3:
        return null;
    }

    static long[] adjustTts(long[], double, long[], long[])
    {
        java.lang.Integer $r6;
        byte $b8;
        java.lang.Long $r7, $r8, $r9;
        java.util.logging.Logger $r5;
        java.lang.Object[] $r4;
        long l2, $l3, $l5, $l7, $l9, $l10, l11, $l12, l13, l15;
        long[] r0, r1, r2, r3;
        int $i0, $i1, $i4, $i6, i14, $i16, $i17;
        java.lang.String $r10;
        double d0, $d1, $d2;

        r0 := @parameter0: long[];

        d0 := @parameter1: double;

        r2 := @parameter2: long[];

        r3 := @parameter3: long[];

        l13 = 0L;

        $i0 = lengthof r0;

        r1 = newarray (long)[$i0];

        i14 = 1;

        goto label3;

     label1:
        $i1 = i14 - 1;

        l2 = r0[$i1];

        $d1 = (double) l2;

        $d2 = d0 * $d1;

        $l3 = staticinvoke <java.lang.Math: long round(double)>($d2);

        l15 = $l3;

        $i4 = i14 + 1;

        $l5 = (long) $i4;

        $i6 = staticinvoke <java.util.Arrays: int binarySearch(long[],long)>(r2, $l5);

        if $i6 < 0 goto label2;

        $l7 = r3[$i6];

        $b8 = $l7 cmp l13;

        if $b8 == 0 goto label2;

        $l10 = r3[$i6];

        $l9 = l13 + $l3;

        l11 = $l10 - $l9;

        $r5 = <com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: java.util.logging.Logger LOG>;

        $r4 = newarray (java.lang.Object)[4];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i14);

        $r4[0] = $r6;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l13);

        $r4[1] = $r7;

        $l12 = r3[$i6];

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l12);

        $r4[2] = $r8;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l11);

        $r4[3] = $r9;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Sample %d %d / %d - correct by %d", $r4);

        virtualinvoke $r5.<java.util.logging.Logger: void finest(java.lang.String)>($r10);

        l15 = $l3 + l11;

     label2:
        l13 = l13 + l15;

        $i16 = i14 - 1;

        r1[$i16] = l15;

        i14 = i14 + 1;

     label3:
        $i17 = lengthof r0;

        if i14 <= $i17 goto label1;

        return r1;
    }

    public com.coremedia.iso.boxes.Box getMediaHeaderBox()
    {
        com.googlecode.mp4parser.authoring.Track $r1;
        com.coremedia.iso.boxes.Box $r2;
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.Box getMediaHeaderBox()>();

        return $r2;
    }

    public com.coremedia.iso.boxes.SubSampleInformationBox getSubsampleInformationBox()
    {
        com.googlecode.mp4parser.authoring.Track $r1;
        com.coremedia.iso.boxes.SubSampleInformationBox $r2;
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SubSampleInformationBox getSubsampleInformationBox()>();

        return $r2;
    }

    public long getDuration()
    {
        long[] $r1;
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r0;
        int i0, i3;
        long l1, l2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        l2 = 0L;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: long[] decodingTimes>;

        i0 = lengthof $r1;

        i3 = 0;

        goto label2;

     label1:
        l1 = $r1[i3];

        l2 = l2 + l1;

        i3 = i3 + 1;

     label2:
        if i3 < i0 goto label1;

        return l2;
    }

    public java.lang.String toString()
    {
        com.googlecode.mp4parser.authoring.Track $r2;
        com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack r1;
        java.lang.StringBuilder $r0, $r3, $r4;
        java.lang.String $r5;

        r1 := @this: com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("ChangeTimeScaleTrack{source=");

        $r2 = r1.<com.googlecode.mp4parser.authoring.tracks.ChangeTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
