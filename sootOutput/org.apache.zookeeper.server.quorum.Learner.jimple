public class org.apache.zookeeper.server.quorum.Learner extends java.lang.Object
{
    org.apache.zookeeper.server.quorum.QuorumPeer self;
    org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk;
    protected java.io.BufferedOutputStream bufferedOutput;
    protected java.net.Socket sock;
    protected org.apache.jute.InputArchive leaderIs;
    protected org.apache.jute.OutputArchive leaderOs;
    protected int leaderProtocolVersion;
    protected static final org.slf4j.Logger LOG;
    private static final boolean nodelay;
    final java.util.concurrent.ConcurrentHashMap pendingRevalidations;

    public void <init>()
    {
        java.util.concurrent.ConcurrentHashMap $r1;
        org.apache.zookeeper.server.quorum.Learner r0;

        r0 := @this: org.apache.zookeeper.server.quorum.Learner;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.Learner: int leaderProtocolVersion> = 1;

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.Learner: java.util.concurrent.ConcurrentHashMap pendingRevalidations> = $r1;

        return;
    }

    public java.net.Socket getSocket()
    {
        java.net.Socket $r1;
        org.apache.zookeeper.server.quorum.Learner r0;

        r0 := @this: org.apache.zookeeper.server.quorum.Learner;

        $r1 = r0.<org.apache.zookeeper.server.quorum.Learner: java.net.Socket sock>;

        return $r1;
    }

    public int getPendingRevalidationsCount()
    {
        java.util.concurrent.ConcurrentHashMap $r1;
        int $i0;
        org.apache.zookeeper.server.quorum.Learner r0;

        r0 := @this: org.apache.zookeeper.server.quorum.Learner;

        $r1 = r0.<org.apache.zookeeper.server.quorum.Learner: java.util.concurrent.ConcurrentHashMap pendingRevalidations>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: int size()>();

        return $i0;
    }

    void validateSession(org.apache.zookeeper.server.ServerCnxn, long, int) throws java.io.IOException
    {
        byte[] $r9;
        java.io.ByteArrayOutputStream $r6;
        long l0;
        org.apache.zookeeper.server.quorum.QuorumPacket $r8;
        java.io.DataOutputStream $r7;
        java.lang.Long $r12;
        int i1;
        org.apache.zookeeper.server.ServerCnxn r13;
        java.lang.String $r3, $r5, $r18, $r20;
        boolean $z0;
        org.slf4j.Logger $r1, $r14, $r16;
        java.util.concurrent.ConcurrentHashMap $r11;
        java.lang.StringBuilder $r0, $r2, $r4, $r15, $r17, $r19;
        org.apache.zookeeper.server.quorum.Learner r10;

        r10 := @this: org.apache.zookeeper.server.quorum.Learner;

        r13 := @parameter0: org.apache.zookeeper.server.ServerCnxn;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        $r1 = <org.apache.zookeeper.server.quorum.Learner: org.slf4j.Logger LOG>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Revalidating client: 0x");

        $r3 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>($r5);

        $r6 = new java.io.ByteArrayOutputStream;

        specialinvoke $r6.<java.io.ByteArrayOutputStream: void <init>()>();

        $r7 = new java.io.DataOutputStream;

        specialinvoke $r7.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r6);

        virtualinvoke $r7.<java.io.DataOutputStream: void writeLong(long)>(l0);

        virtualinvoke $r7.<java.io.DataOutputStream: void writeInt(int)>(i1);

        virtualinvoke $r7.<java.io.DataOutputStream: void close()>();

        $r8 = new org.apache.zookeeper.server.quorum.QuorumPacket;

        $r9 = virtualinvoke $r6.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r8.<org.apache.zookeeper.server.quorum.QuorumPacket: void <init>(int,long,byte[],java.util.List)>(6, -1L, $r9, null);

        $r11 = r10.<org.apache.zookeeper.server.quorum.Learner: java.util.concurrent.ConcurrentHashMap pendingRevalidations>;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r11.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, r13);

        $r14 = <org.apache.zookeeper.server.quorum.Learner: org.slf4j.Logger LOG>;

        $z0 = interfaceinvoke $r14.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label1;

        $r16 = <org.apache.zookeeper.server.quorum.Learner: org.slf4j.Logger LOG>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("To validate session 0x");

        $r18 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.zookeeper.server.ZooTrace: void logTraceMessage(org.slf4j.Logger,long,java.lang.String)>($r16, 32L, $r20);

     label1:
        virtualinvoke r10.<org.apache.zookeeper.server.quorum.Learner: void writePacket(org.apache.zookeeper.server.quorum.QuorumPacket,boolean)>($r8, 1);

        return;
    }

    void writePacket(org.apache.zookeeper.server.quorum.QuorumPacket, boolean) throws java.io.IOException
    {
        org.apache.zookeeper.server.quorum.QuorumPacket r2;
        java.lang.Throwable $r5;
        org.apache.jute.OutputArchive $r1, $r4;
        org.apache.zookeeper.server.quorum.Learner r0;
        boolean z0;
        java.io.BufferedOutputStream $r3;

        r0 := @this: org.apache.zookeeper.server.quorum.Learner;

        r2 := @parameter0: org.apache.zookeeper.server.quorum.QuorumPacket;

        z0 := @parameter1: boolean;

        $r1 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.jute.OutputArchive leaderOs>;

        entermonitor $r1;

     label1:
        if r2 == null goto label2;

        $r4 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.jute.OutputArchive leaderOs>;

        interfaceinvoke $r4.<org.apache.jute.OutputArchive: void writeRecord(org.apache.jute.Record,java.lang.String)>(r2, "packet");

     label2:
        if z0 == 0 goto label3;

        $r3 = r0.<org.apache.zookeeper.server.quorum.Learner: java.io.BufferedOutputStream bufferedOutput>;

        virtualinvoke $r3.<java.io.BufferedOutputStream: void flush()>();

     label3:
        exitmonitor $r1;

     label4:
        goto label7;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    void readPacket(org.apache.zookeeper.server.quorum.QuorumPacket) throws java.io.IOException
    {
        java.lang.Throwable $r6;
        org.slf4j.Logger $r4, $r5;
        org.apache.jute.InputArchive $r1, $r3;
        long l1;
        org.apache.zookeeper.server.quorum.QuorumPacket r2;
        int $i0;
        org.apache.zookeeper.server.quorum.Learner r0;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.quorum.Learner;

        r2 := @parameter0: org.apache.zookeeper.server.quorum.QuorumPacket;

        $r1 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.jute.InputArchive leaderIs>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.jute.InputArchive leaderIs>;

        interfaceinvoke $r3.<org.apache.jute.InputArchive: void readRecord(org.apache.jute.Record,java.lang.String)>(r2, "packet");

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

     label5:
        l1 = 16L;

        $i0 = virtualinvoke r2.<org.apache.zookeeper.server.quorum.QuorumPacket: int getType()>();

        if $i0 != 5 goto label6;

        l1 = 128L;

     label6:
        $r4 = <org.apache.zookeeper.server.quorum.Learner: org.slf4j.Logger LOG>;

        $z0 = interfaceinvoke $r4.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label7;

        $r5 = <org.apache.zookeeper.server.quorum.Learner: org.slf4j.Logger LOG>;

        staticinvoke <org.apache.zookeeper.server.ZooTrace: void logQuorumPacket(org.slf4j.Logger,long,char,org.apache.zookeeper.server.quorum.QuorumPacket)>($r5, l1, 105, r2);

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void request(org.apache.zookeeper.server.Request) throws java.io.IOException
    {
        byte[] $r5, r10;
        java.io.ByteArrayOutputStream $r0;
        long $l0;
        java.nio.ByteBuffer $r3, $r8, $r9, $r11, $r12;
        org.apache.zookeeper.server.quorum.QuorumPacket $r4;
        java.io.DataOutputStream $r1;
        int $i1, $i2, $i3;
        org.apache.zookeeper.server.Request r2;
        java.util.List $r6;
        org.apache.zookeeper.server.quorum.Learner r7;

        r7 := @this: org.apache.zookeeper.server.quorum.Learner;

        r2 := @parameter0: org.apache.zookeeper.server.Request;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new java.io.DataOutputStream;

        specialinvoke $r1.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r0);

        $l0 = r2.<org.apache.zookeeper.server.Request: long sessionId>;

        virtualinvoke $r1.<java.io.DataOutputStream: void writeLong(long)>($l0);

        $i1 = r2.<org.apache.zookeeper.server.Request: int cxid>;

        virtualinvoke $r1.<java.io.DataOutputStream: void writeInt(int)>($i1);

        $i2 = r2.<org.apache.zookeeper.server.Request: int type>;

        virtualinvoke $r1.<java.io.DataOutputStream: void writeInt(int)>($i2);

        $r3 = r2.<org.apache.zookeeper.server.Request: java.nio.ByteBuffer request>;

        if $r3 == null goto label1;

        $r8 = r2.<org.apache.zookeeper.server.Request: java.nio.ByteBuffer request>;

        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r9 = r2.<org.apache.zookeeper.server.Request: java.nio.ByteBuffer request>;

        $i3 = virtualinvoke $r9.<java.nio.ByteBuffer: int remaining()>();

        r10 = newarray (byte)[$i3];

        $r11 = r2.<org.apache.zookeeper.server.Request: java.nio.ByteBuffer request>;

        virtualinvoke $r11.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r10);

        $r12 = r2.<org.apache.zookeeper.server.Request: java.nio.ByteBuffer request>;

        virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        virtualinvoke $r1.<java.io.DataOutputStream: void write(byte[])>(r10);

     label1:
        virtualinvoke $r1.<java.io.DataOutputStream: void close()>();

        $r4 = new org.apache.zookeeper.server.quorum.QuorumPacket;

        $r5 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r6 = r2.<org.apache.zookeeper.server.Request: java.util.List authInfo>;

        specialinvoke $r4.<org.apache.zookeeper.server.quorum.QuorumPacket: void <init>(int,long,byte[],java.util.List)>(1, -1L, $r5, $r6);

        virtualinvoke r7.<org.apache.zookeeper.server.quorum.Learner: void writePacket(org.apache.zookeeper.server.quorum.QuorumPacket,boolean)>($r4, 1);

        return;
    }

    protected java.net.InetSocketAddress findLeader()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer $r1, $r3;
        org.apache.zookeeper.server.quorum.Vote $r2;
        long $l0, $l1, $l2;
        byte $b3;
        java.util.Map $r4;
        java.lang.String $r11;
        boolean $z0;
        org.slf4j.Logger $r8;
        java.util.Iterator $r6;
        java.util.Collection $r5;
        java.net.InetSocketAddress r14;
        org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer r13;
        java.lang.StringBuilder $r7, $r9, $r10;
        java.lang.Object $r12;
        org.apache.zookeeper.server.quorum.Learner r0;

        r0 := @this: org.apache.zookeeper.server.quorum.Learner;

        r14 = null;

        $r1 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r2 = virtualinvoke $r1.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Vote getCurrentVote()>();

        $r3 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r4 = virtualinvoke $r3.<org.apache.zookeeper.server.quorum.QuorumPeer: java.util.Map getView()>();

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r12 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer) $r12;

        $l1 = r13.<org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer: long id>;

        $l2 = virtualinvoke $r2.<org.apache.zookeeper.server.quorum.Vote: long getId()>();

        $b3 = $l1 cmp $l2;

        if $b3 != 0 goto label2;

        r14 = r13.<org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer: java.net.InetSocketAddress addr>;

        goto label3;

     label2:
        goto label1;

     label3:
        if r14 != null goto label4;

        $r8 = <org.apache.zookeeper.server.quorum.Learner: org.slf4j.Logger LOG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find the leader with id = ");

        $l0 = virtualinvoke $r2.<org.apache.zookeeper.server.quorum.Vote: long getId()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String)>($r11);

     label4:
        return r14;
    }

    protected void connectToLeader(java.net.InetSocketAddress) throws java.io.IOException, java.net.ConnectException, java.lang.InterruptedException
    {
        org.apache.zookeeper.server.quorum.QuorumPeer $r2, $r3, $r15, $r16, $r28, $r29;
        org.apache.jute.BinaryOutputArchive $r13;
        java.io.BufferedInputStream $r5;
        boolean $z0;
        java.net.InetSocketAddress r14;
        java.lang.StringBuilder $r20, $r22, $r23, $r24, $r25;
        java.net.Socket $r1, $r4, $r6, $r10, $r17, $r18, $r27, $r30;
        java.io.BufferedOutputStream $r9, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        java.lang.String $r26;
        java.io.OutputStream $r11;
        org.slf4j.Logger $r21, $r31;
        java.io.IOException $r19;
        org.apache.jute.BinaryInputArchive $r8;
        org.apache.zookeeper.server.quorum.Learner r0;
        java.io.InputStream $r7;

        r0 := @this: org.apache.zookeeper.server.quorum.Learner;

        r14 := @parameter0: java.net.InetSocketAddress;

        $r1 = new java.net.Socket;

        specialinvoke $r1.<java.net.Socket: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.Learner: java.net.Socket sock> = $r1;

        $r4 = r0.<org.apache.zookeeper.server.quorum.Learner: java.net.Socket sock>;

        $r2 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $i1 = $r2.<org.apache.zookeeper.server.quorum.QuorumPeer: int tickTime>;

        $r3 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $i0 = $r3.<org.apache.zookeeper.server.quorum.QuorumPeer: int initLimit>;

        $i2 = $i1 * $i0;

        virtualinvoke $r4.<java.net.Socket: void setSoTimeout(int)>($i2);

        i9 = 0;

     label1:
        if i9 >= 5 goto label6;

     label2:
        $r17 = r0.<org.apache.zookeeper.server.quorum.Learner: java.net.Socket sock>;

        $r15 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $i4 = $r15.<org.apache.zookeeper.server.quorum.QuorumPeer: int tickTime>;

        $r16 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $i3 = $r16.<org.apache.zookeeper.server.quorum.QuorumPeer: int syncLimit>;

        $i5 = $i4 * $i3;

        virtualinvoke $r17.<java.net.Socket: void connect(java.net.SocketAddress,int)>(r14, $i5);

        $r18 = r0.<org.apache.zookeeper.server.quorum.Learner: java.net.Socket sock>;

        $z0 = <org.apache.zookeeper.server.quorum.Learner: boolean nodelay>;

        virtualinvoke $r18.<java.net.Socket: void setTcpNoDelay(boolean)>($z0);

     label3:
        goto label6;

     label4:
        $r19 := @caughtexception;

        if i9 != 4 goto label5;

        $r31 = <org.apache.zookeeper.server.quorum.Learner: org.slf4j.Logger LOG>;

        interfaceinvoke $r31.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unexpected exception", $r19);

        throw $r19;

     label5:
        $r21 = <org.apache.zookeeper.server.quorum.Learner: org.slf4j.Logger LOG>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected exception, tries=");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", connecting to ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r21.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r26, $r19);

        $r27 = new java.net.Socket;

        specialinvoke $r27.<java.net.Socket: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.Learner: java.net.Socket sock> = $r27;

        $r30 = r0.<org.apache.zookeeper.server.quorum.Learner: java.net.Socket sock>;

        $r28 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $i7 = $r28.<org.apache.zookeeper.server.quorum.QuorumPeer: int tickTime>;

        $r29 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $i6 = $r29.<org.apache.zookeeper.server.quorum.QuorumPeer: int initLimit>;

        $i8 = $i7 * $i6;

        virtualinvoke $r30.<java.net.Socket: void setSoTimeout(int)>($i8);

        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

        i9 = i9 + 1;

        goto label1;

     label6:
        $r5 = new java.io.BufferedInputStream;

        $r6 = r0.<org.apache.zookeeper.server.quorum.Learner: java.net.Socket sock>;

        $r7 = virtualinvoke $r6.<java.net.Socket: java.io.InputStream getInputStream()>();

        specialinvoke $r5.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r7);

        $r8 = staticinvoke <org.apache.jute.BinaryInputArchive: org.apache.jute.BinaryInputArchive getArchive(java.io.InputStream)>($r5);

        r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.jute.InputArchive leaderIs> = $r8;

        $r9 = new java.io.BufferedOutputStream;

        $r10 = r0.<org.apache.zookeeper.server.quorum.Learner: java.net.Socket sock>;

        $r11 = virtualinvoke $r10.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        specialinvoke $r9.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r11);

        r0.<org.apache.zookeeper.server.quorum.Learner: java.io.BufferedOutputStream bufferedOutput> = $r9;

        $r12 = r0.<org.apache.zookeeper.server.quorum.Learner: java.io.BufferedOutputStream bufferedOutput>;

        $r13 = staticinvoke <org.apache.jute.BinaryOutputArchive: org.apache.jute.BinaryOutputArchive getArchive(java.io.OutputStream)>($r12);

        r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.jute.OutputArchive leaderOs> = $r13;

        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    protected long registerWithLeader(int) throws java.io.IOException
    {
        org.apache.zookeeper.server.quorum.QuorumPeer $r1, $r3, $r5, $r9, $r12, $r17, $r18, $r24, $r28, $r29;
        org.apache.jute.BinaryOutputArchive $r7;
        byte[] $r8, $r13, r15;
        java.nio.ByteBuffer $r14, $r16;
        org.apache.zookeeper.server.quorum.QuorumPacket $r30, $r35;
        byte $b9, $b14, $b16;
        java.lang.StringBuilder $r21, $r22, $r23, $r25, $r33;
        java.io.ByteArrayOutputStream $r32;
        long $l0, $l2, $l3, $l4, $l5, $l6, $l8, $l11, $l13, $l15, $l17, $l18, $l19;
        int i1, $i7, $i10, $i12, $i20, $i21, $i23, $i24;
        java.lang.String $r26;
        org.slf4j.Logger $r10;
        org.apache.zookeeper.server.quorum.LearnerInfo $r31;
        java.io.IOException $r34, $r36;
        org.apache.zookeeper.server.quorum.Learner r0;

        r0 := @this: org.apache.zookeeper.server.quorum.Learner;

        i1 := @parameter0: int;

        $r1 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l0 = virtualinvoke $r1.<org.apache.zookeeper.server.quorum.QuorumPeer: long getLastLoggedZxid()>();

        $r30 = new org.apache.zookeeper.server.quorum.QuorumPacket;

        specialinvoke $r30.<org.apache.zookeeper.server.quorum.QuorumPacket: void <init>()>();

        virtualinvoke $r30.<org.apache.zookeeper.server.quorum.QuorumPacket: void setType(int)>(i1);

        $r3 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l2 = virtualinvoke $r3.<org.apache.zookeeper.server.quorum.QuorumPeer: long getAcceptedEpoch()>();

        $l3 = staticinvoke <org.apache.zookeeper.server.util.ZxidUtils: long makeZxid(long,long)>($l2, 0L);

        virtualinvoke $r30.<org.apache.zookeeper.server.quorum.QuorumPacket: void setZxid(long)>($l3);

        $r31 = new org.apache.zookeeper.server.quorum.LearnerInfo;

        $r5 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l4 = virtualinvoke $r5.<org.apache.zookeeper.server.quorum.QuorumPeer: long getId()>();

        specialinvoke $r31.<org.apache.zookeeper.server.quorum.LearnerInfo: void <init>(long,int)>($l4, 65536);

        $r32 = new java.io.ByteArrayOutputStream;

        specialinvoke $r32.<java.io.ByteArrayOutputStream: void <init>()>();

        $r7 = staticinvoke <org.apache.jute.BinaryOutputArchive: org.apache.jute.BinaryOutputArchive getArchive(java.io.OutputStream)>($r32);

        virtualinvoke $r7.<org.apache.jute.BinaryOutputArchive: void writeRecord(org.apache.jute.Record,java.lang.String)>($r31, "LearnerInfo");

        $r8 = virtualinvoke $r32.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r30.<org.apache.zookeeper.server.quorum.QuorumPacket: void setData(byte[])>($r8);

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.Learner: void writePacket(org.apache.zookeeper.server.quorum.QuorumPacket,boolean)>($r30, 1);

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.Learner: void readPacket(org.apache.zookeeper.server.quorum.QuorumPacket)>($r30);

        $l5 = virtualinvoke $r30.<org.apache.zookeeper.server.quorum.QuorumPacket: long getZxid()>();

        $l6 = staticinvoke <org.apache.zookeeper.server.util.ZxidUtils: long getEpochFromZxid(long)>($l5);

        $i7 = virtualinvoke $r30.<org.apache.zookeeper.server.quorum.QuorumPacket: int getType()>();

        if $i7 != 17 goto label4;

        $r13 = virtualinvoke $r30.<org.apache.zookeeper.server.quorum.QuorumPacket: byte[] getData()>();

        $r14 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r13);

        $i12 = virtualinvoke $r14.<java.nio.ByteBuffer: int getInt()>();

        r0.<org.apache.zookeeper.server.quorum.Learner: int leaderProtocolVersion> = $i12;

        r15 = newarray (byte)[4];

        $r16 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r15);

        $r17 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l13 = virtualinvoke $r17.<org.apache.zookeeper.server.quorum.QuorumPeer: long getAcceptedEpoch()>();

        $b14 = $l6 cmp $l13;

        $i21 = (int) $b14;

        if $i21 <= 0 goto label1;

        $r28 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l19 = virtualinvoke $r28.<org.apache.zookeeper.server.quorum.QuorumPeer: long getCurrentEpoch()>();

        $i20 = (int) $l19;

        virtualinvoke $r16.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i20);

        $r29 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        virtualinvoke $r29.<org.apache.zookeeper.server.quorum.QuorumPeer: void setAcceptedEpoch(long)>($l6);

        goto label3;

     label1:
        $r18 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l15 = virtualinvoke $r18.<org.apache.zookeeper.server.quorum.QuorumPeer: long getAcceptedEpoch()>();

        $b16 = $l6 cmp $l15;

        if $b16 != 0 goto label2;

        $i23 = (int) -1;

        virtualinvoke $r16.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i23);

        goto label3;

     label2:
        $r34 = new java.io.IOException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Leaders epoch, ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than accepted epoch, ");

        $r24 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l17 = virtualinvoke $r24.<org.apache.zookeeper.server.quorum.QuorumPeer: long getAcceptedEpoch()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l17);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<java.io.IOException: void <init>(java.lang.String)>($r26);

        throw $r34;

     label3:
        $r35 = new org.apache.zookeeper.server.quorum.QuorumPacket;

        specialinvoke $r35.<org.apache.zookeeper.server.quorum.QuorumPacket: void <init>(int,long,byte[],java.util.List)>(18, $l0, r15, null);

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.Learner: void writePacket(org.apache.zookeeper.server.quorum.QuorumPacket,boolean)>($r35, 1);

        $l18 = staticinvoke <org.apache.zookeeper.server.util.ZxidUtils: long makeZxid(long,long)>($l6, 0L);

        return $l18;

     label4:
        $r9 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l8 = virtualinvoke $r9.<org.apache.zookeeper.server.quorum.QuorumPeer: long getAcceptedEpoch()>();

        $b9 = $l6 cmp $l8;

        $i24 = (int) $b9;

        if $i24 <= 0 goto label5;

        $r12 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        virtualinvoke $r12.<org.apache.zookeeper.server.quorum.QuorumPeer: void setAcceptedEpoch(long)>($l6);

     label5:
        $i10 = virtualinvoke $r30.<org.apache.zookeeper.server.quorum.QuorumPacket: int getType()>();

        if $i10 == 10 goto label6;

        $r10 = <org.apache.zookeeper.server.quorum.Learner: org.slf4j.Logger LOG>;

        interfaceinvoke $r10.<org.slf4j.Logger: void error(java.lang.String)>("First packet should have been NEWLEADER");

        $r36 = new java.io.IOException;

        specialinvoke $r36.<java.io.IOException: void <init>(java.lang.String)>("First packet should have been NEWLEADER");

        throw $r36;

     label6:
        $l11 = virtualinvoke $r30.<org.apache.zookeeper.server.quorum.QuorumPacket: long getZxid()>();

        return $l11;
    }

    protected void syncWithLeader(long) throws java.io.IOException, java.lang.InterruptedException
    {
        byte[] $r33, $r52;
        byte $b15, $b20;
        java.lang.Long $r36, r109;
        org.apache.jute.Record $r22, $r34, $r39, $r54;
        java.lang.StringBuilder $r6, $r8, $r9, $r10, $r42, $r44, $r45, $r46, $r48, $r57, $r59, $r62, $r63, $r65, $r67, $r69, $r71, $r75, $r77, $r79, $r89, $r91, $r92, $r95, $r97, $r99;
        long l0, $l1, $l6, $l10, $l12, $l13, $l14, $l16, $l17, $l18, $l19, $l21, $l22, $l23, $l24, $l25, $l26, $l27, l28;
        java.io.IOException $r94;
        org.apache.zookeeper.server.quorum.Learner r2;
        org.apache.zookeeper.server.quorum.LearnerZooKeeperServer $r5, $r15, $r16, $r17, $r25, $r27, $r29, $r35, $r41, $r73, $r82, $r84, $r102, $r104;
        int $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i11;
        java.util.LinkedList $r3, $r4;
        org.slf4j.Logger $r7, $r43, $r58, $r68, $r76, $r81, $r90, $r96;
        java.lang.Object $r20, $r21, $r37;
        org.apache.zookeeper.server.quorum.QuorumPeer $r12, $r13, $r24, $r28, $r30, $r105;
        org.apache.jute.InputArchive $r86, $r87;
        org.apache.zookeeper.server.quorum.QuorumPacket $r0, $r1, $r31;
        org.apache.zookeeper.server.quorum.Learner$PacketInFlight $r50, r106, r108;
        java.lang.Throwable $r101;
        org.apache.zookeeper.server.ZKDatabase $r74, $r83, $r85, $r103;
        org.apache.zookeeper.server.ServerCnxnFactory $r26;
        org.apache.zookeeper.server.quorum.FollowerZooKeeperServer r107;
        java.lang.String $r11, $r49, $r61, $r64, $r66, $r70, $r72, $r78, $r80, $r88, $r93, $r98, $r100;
        org.apache.zookeeper.txn.TxnHeader $r23, $r32, $r38, $r40, $r47, $r51, $r53, $r55, $r56, $r60;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6, z7, z8;
        java.net.Socket $r14;
        java.util.Iterator $r18, $r19;

        r2 := @this: org.apache.zookeeper.server.quorum.Learner;

        l0 := @parameter0: long;

        $r0 = new org.apache.zookeeper.server.quorum.QuorumPacket;

        specialinvoke $r0.<org.apache.zookeeper.server.quorum.QuorumPacket: void <init>(int,long,byte[],java.util.List)>(3, 0L, null, null);

        $r1 = new org.apache.zookeeper.server.quorum.QuorumPacket;

        specialinvoke $r1.<org.apache.zookeeper.server.quorum.QuorumPacket: void <init>()>();

        $l1 = staticinvoke <org.apache.zookeeper.server.util.ZxidUtils: long getEpochFromZxid(long)>(l0);

        virtualinvoke r2.<org.apache.zookeeper.server.quorum.Learner: void readPacket(org.apache.zookeeper.server.quorum.QuorumPacket)>($r1);

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        $r5 = r2.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        entermonitor $r5;

     label01:
        $i2 = virtualinvoke $r1.<org.apache.zookeeper.server.quorum.QuorumPacket: int getType()>();

        if $i2 != 13 goto label02;

        $r96 = <org.apache.zookeeper.server.quorum.Learner: org.slf4j.Logger LOG>;

        $r95 = new java.lang.StringBuilder;

        specialinvoke $r95.<java.lang.StringBuilder: void <init>()>();

        $r97 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Getting a diff from the leader 0x");

        $l26 = virtualinvoke $r1.<org.apache.zookeeper.server.quorum.QuorumPacket: long getZxid()>();

        $r98 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l26);

        $r99 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r98);

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r96.<org.slf4j.Logger: void info(java.lang.String)>($r100);

        goto label07;

     label02:
        $i3 = virtualinvoke $r1.<org.apache.zookeeper.server.quorum.QuorumPacket: int getType()>();

        if $i3 != 15 goto label04;

        $r81 = <org.apache.zookeeper.server.quorum.Learner: org.slf4j.Logger LOG>;

        interfaceinvoke $r81.<org.slf4j.Logger: void info(java.lang.String)>("Getting a snapshot from leader");

        $r82 = r2.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        $r83 = virtualinvoke $r82.<org.apache.zookeeper.server.quorum.LearnerZooKeeperServer: org.apache.zookeeper.server.ZKDatabase getZKDatabase()>();

        virtualinvoke $r83.<org.apache.zookeeper.server.ZKDatabase: void clear()>();

        $r84 = r2.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        $r85 = virtualinvoke $r84.<org.apache.zookeeper.server.quorum.LearnerZooKeeperServer: org.apache.zookeeper.server.ZKDatabase getZKDatabase()>();

        $r86 = r2.<org.apache.zookeeper.server.quorum.Learner: org.apache.jute.InputArchive leaderIs>;

        virtualinvoke $r85.<org.apache.zookeeper.server.ZKDatabase: void deserializeSnapshot(org.apache.jute.InputArchive)>($r86);

        $r87 = r2.<org.apache.zookeeper.server.quorum.Learner: org.apache.jute.InputArchive leaderIs>;

        $r88 = interfaceinvoke $r87.<org.apache.jute.InputArchive: java.lang.String readString(java.lang.String)>("signature");

        $z4 = virtualinvoke $r88.<java.lang.String: boolean equals(java.lang.Object)>("BenWasHere");

        if $z4 != 0 goto label03;

        $r90 = <org.apache.zookeeper.server.quorum.Learner: org.slf4j.Logger LOG>;

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r91 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing signature. Got ");

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r88);

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r90.<org.slf4j.Logger: void error(java.lang.String)>($r93);

        $r94 = new java.io.IOException;

        specialinvoke $r94.<java.io.IOException: void <init>(java.lang.String)>("Missing signature");

        throw $r94;

     label03:
        goto label07;

     label04:
        $i4 = virtualinvoke $r1.<org.apache.zookeeper.server.quorum.QuorumPacket: int getType()>();

        if $i4 != 14 goto label06;

        $r68 = <org.apache.zookeeper.server.quorum.Learner: org.slf4j.Logger LOG>;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Truncating log to get in sync with the leader 0x");

        $l23 = virtualinvoke $r1.<org.apache.zookeeper.server.quorum.QuorumPacket: long getZxid()>();

        $r70 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l23);

        $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r68.<org.slf4j.Logger: void warn(java.lang.String)>($r72);

        $r73 = r2.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        $r74 = virtualinvoke $r73.<org.apache.zookeeper.server.quorum.LearnerZooKeeperServer: org.apache.zookeeper.server.ZKDatabase getZKDatabase()>();

        $l24 = virtualinvoke $r1.<org.apache.zookeeper.server.quorum.QuorumPacket: long getZxid()>();

        $z3 = virtualinvoke $r74.<org.apache.zookeeper.server.ZKDatabase: boolean truncateLog(long)>($l24);

        if $z3 != 0 goto label05;

        $r76 = <org.apache.zookeeper.server.quorum.Learner: org.slf4j.Logger LOG>;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not able to truncate the log ");

        $l25 = virtualinvoke $r1.<org.apache.zookeeper.server.quorum.QuorumPacket: long getZxid()>();

        $r78 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l25);

        $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r76.<org.slf4j.Logger: void error(java.lang.String)>($r80);

        staticinvoke <java.lang.System: void exit(int)>(13);

     label05:
        goto label07;

     label06:
        $r7 = <org.apache.zookeeper.server.quorum.Learner: org.slf4j.Logger LOG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got unexpected packet from leader ");

        $i5 = virtualinvoke $r1.<org.apache.zookeeper.server.quorum.QuorumPacket: int getType()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exiting ... ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String)>($r11);

        staticinvoke <java.lang.System: void exit(int)>(13);

     label07:
        $r102 = r2.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        $r103 = virtualinvoke $r102.<org.apache.zookeeper.server.quorum.LearnerZooKeeperServer: org.apache.zookeeper.server.ZKDatabase getZKDatabase()>();

        $l27 = virtualinvoke $r1.<org.apache.zookeeper.server.quorum.QuorumPacket: long getZxid()>();

        virtualinvoke $r103.<org.apache.zookeeper.server.ZKDatabase: void setlastProcessedZxid(long)>($l27);

        $r104 = r2.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        virtualinvoke $r104.<org.apache.zookeeper.server.quorum.LearnerZooKeeperServer: void createSessionTracker()>();

        l28 = 0L;

        z5 = 0;

        z8 = 0;

        z7 = 0;

     label08:
        $r105 = r2.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $z6 = virtualinvoke $r105.<org.apache.zookeeper.server.quorum.QuorumPeer: boolean isRunning()>();

        if $z6 == 0 goto label19;

        virtualinvoke r2.<org.apache.zookeeper.server.quorum.Learner: void readPacket(org.apache.zookeeper.server.quorum.QuorumPacket)>($r1);

        $i11 = virtualinvoke $r1.<org.apache.zookeeper.server.quorum.QuorumPacket: int getType()>();

        tableswitch($i11)
        {
            case 2: goto label09;
            case 3: goto label18;
            case 4: goto label11;
            case 5: goto label18;
            case 6: goto label18;
            case 7: goto label18;
            case 8: goto label14;
            case 9: goto label18;
            case 10: goto label17;
            case 11: goto label18;
            case 12: goto label15;
            default: goto label18;
        };

     label09:
        $r50 = new org.apache.zookeeper.server.quorum.Learner$PacketInFlight;

        specialinvoke $r50.<org.apache.zookeeper.server.quorum.Learner$PacketInFlight: void <init>()>();

        $r51 = new org.apache.zookeeper.txn.TxnHeader;

        specialinvoke $r51.<org.apache.zookeeper.txn.TxnHeader: void <init>()>();

        $r50.<org.apache.zookeeper.server.quorum.Learner$PacketInFlight: org.apache.zookeeper.txn.TxnHeader hdr> = $r51;

        $r52 = virtualinvoke $r1.<org.apache.zookeeper.server.quorum.QuorumPacket: byte[] getData()>();

        $r53 = $r50.<org.apache.zookeeper.server.quorum.Learner$PacketInFlight: org.apache.zookeeper.txn.TxnHeader hdr>;

        $r54 = staticinvoke <org.apache.zookeeper.server.util.SerializeUtils: org.apache.jute.Record deserializeTxn(byte[],org.apache.zookeeper.txn.TxnHeader)>($r52, $r53);

        $r50.<org.apache.zookeeper.server.quorum.Learner$PacketInFlight: org.apache.jute.Record rec> = $r54;

        $r55 = $r50.<org.apache.zookeeper.server.quorum.Learner$PacketInFlight: org.apache.zookeeper.txn.TxnHeader hdr>;

        $l18 = virtualinvoke $r55.<org.apache.zookeeper.txn.TxnHeader: long getZxid()>();

        $l19 = l28 + 1L;

        $b20 = $l18 cmp $l19;

        if $b20 == 0 goto label10;

        $r58 = <org.apache.zookeeper.server.quorum.Learner: org.slf4j.Logger LOG>;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got zxid 0x");

        $r60 = $r50.<org.apache.zookeeper.server.quorum.Learner$PacketInFlight: org.apache.zookeeper.txn.TxnHeader hdr>;

        $l21 = virtualinvoke $r60.<org.apache.zookeeper.txn.TxnHeader: long getZxid()>();

        $r61 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l21);

        $r62 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected 0x");

        $l22 = l28 + 1L;

        $r64 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l22);

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r58.<org.slf4j.Logger: void warn(java.lang.String)>($r66);

     label10:
        $r56 = $r50.<org.apache.zookeeper.server.quorum.Learner$PacketInFlight: org.apache.zookeeper.txn.TxnHeader hdr>;

        l28 = virtualinvoke $r56.<org.apache.zookeeper.txn.TxnHeader: long getZxid()>();

        virtualinvoke $r4.<java.util.LinkedList: boolean add(java.lang.Object)>($r50);

        goto label18;

     label11:
        if z8 != 0 goto label13;

        $r37 = virtualinvoke $r4.<java.util.LinkedList: java.lang.Object peekFirst()>();

        r106 = (org.apache.zookeeper.server.quorum.Learner$PacketInFlight) $r37;

        $r38 = r106.<org.apache.zookeeper.server.quorum.Learner$PacketInFlight: org.apache.zookeeper.txn.TxnHeader hdr>;

        $l13 = virtualinvoke $r38.<org.apache.zookeeper.txn.TxnHeader: long getZxid()>();

        $l14 = virtualinvoke $r1.<org.apache.zookeeper.server.quorum.QuorumPacket: long getZxid()>();

        $b15 = $l13 cmp $l14;

        if $b15 == 0 goto label12;

        $r43 = <org.apache.zookeeper.server.quorum.Learner: org.slf4j.Logger LOG>;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Committing ");

        $l16 = virtualinvoke $r1.<org.apache.zookeeper.server.quorum.QuorumPacket: long getZxid()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l16);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but next proposal is ");

        $r47 = r106.<org.apache.zookeeper.server.quorum.Learner$PacketInFlight: org.apache.zookeeper.txn.TxnHeader hdr>;

        $l17 = virtualinvoke $r47.<org.apache.zookeeper.txn.TxnHeader: long getZxid()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l17);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r43.<org.slf4j.Logger: void warn(java.lang.String)>($r49);

        goto label18;

     label12:
        $r41 = r2.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        $r40 = r106.<org.apache.zookeeper.server.quorum.Learner$PacketInFlight: org.apache.zookeeper.txn.TxnHeader hdr>;

        $r39 = r106.<org.apache.zookeeper.server.quorum.Learner$PacketInFlight: org.apache.jute.Record rec>;

        virtualinvoke $r41.<org.apache.zookeeper.server.quorum.LearnerZooKeeperServer: org.apache.zookeeper.server.DataTree$ProcessTxnResult processTxn(org.apache.zookeeper.txn.TxnHeader,org.apache.jute.Record)>($r40, $r39);

        virtualinvoke $r4.<java.util.LinkedList: java.lang.Object remove()>();

        goto label18;

     label13:
        $l12 = virtualinvoke $r1.<org.apache.zookeeper.server.quorum.QuorumPacket: long getZxid()>();

        $r36 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l12);

        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>($r36);

        goto label18;

     label14:
        $r32 = new org.apache.zookeeper.txn.TxnHeader;

        specialinvoke $r32.<org.apache.zookeeper.txn.TxnHeader: void <init>()>();

        $r33 = virtualinvoke $r1.<org.apache.zookeeper.server.quorum.QuorumPacket: byte[] getData()>();

        $r34 = staticinvoke <org.apache.zookeeper.server.util.SerializeUtils: org.apache.jute.Record deserializeTxn(byte[],org.apache.zookeeper.txn.TxnHeader)>($r33, $r32);

        $r35 = r2.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        virtualinvoke $r35.<org.apache.zookeeper.server.quorum.LearnerZooKeeperServer: org.apache.zookeeper.server.DataTree$ProcessTxnResult processTxn(org.apache.zookeeper.txn.TxnHeader,org.apache.jute.Record)>($r32, $r34);

        goto label18;

     label15:
        if z7 != 0 goto label16;

        $r27 = r2.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        virtualinvoke $r27.<org.apache.zookeeper.server.quorum.LearnerZooKeeperServer: void takeSnapshot()>();

        $r28 = r2.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        virtualinvoke $r28.<org.apache.zookeeper.server.quorum.QuorumPeer: void setCurrentEpoch(long)>($l1);

     label16:
        $r24 = r2.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r26 = $r24.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.ServerCnxnFactory cnxnFactory>;

        $r25 = r2.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        virtualinvoke $r26.<org.apache.zookeeper.server.ServerCnxnFactory: void setZooKeeperServer(org.apache.zookeeper.server.ZooKeeperServer)>($r25);

        goto label19;

     label17:
        $r29 = r2.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        virtualinvoke $r29.<org.apache.zookeeper.server.quorum.LearnerZooKeeperServer: void takeSnapshot()>();

        $r30 = r2.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        virtualinvoke $r30.<org.apache.zookeeper.server.quorum.QuorumPeer: void setCurrentEpoch(long)>($l1);

        z5 = 1;

        z8 = 1;

        z7 = 1;

        $r31 = new org.apache.zookeeper.server.quorum.QuorumPacket;

        specialinvoke $r31.<org.apache.zookeeper.server.quorum.QuorumPacket: void <init>(int,long,byte[],java.util.List)>(3, l0, null, null);

        virtualinvoke r2.<org.apache.zookeeper.server.quorum.Learner: void writePacket(org.apache.zookeeper.server.quorum.QuorumPacket,boolean)>($r31, 1);

     label18:
        goto label08;

     label19:
        exitmonitor $r5;

     label20:
        goto label23;

     label21:
        $r101 := @caughtexception;

        exitmonitor $r5;

     label22:
        throw $r101;

     label23:
        $l6 = staticinvoke <org.apache.zookeeper.server.util.ZxidUtils: long makeZxid(long,long)>($l1, 0L);

        virtualinvoke $r0.<org.apache.zookeeper.server.quorum.QuorumPacket: void setZxid(long)>($l6);

        virtualinvoke r2.<org.apache.zookeeper.server.quorum.Learner: void writePacket(org.apache.zookeeper.server.quorum.QuorumPacket,boolean)>($r0, 1);

        $r14 = r2.<org.apache.zookeeper.server.quorum.Learner: java.net.Socket sock>;

        $r12 = r2.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $i8 = $r12.<org.apache.zookeeper.server.quorum.QuorumPeer: int tickTime>;

        $r13 = r2.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $i7 = $r13.<org.apache.zookeeper.server.quorum.QuorumPeer: int syncLimit>;

        $i9 = $i8 * $i7;

        virtualinvoke $r14.<java.net.Socket: void setSoTimeout(int)>($i9);

        $r15 = r2.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        virtualinvoke $r15.<org.apache.zookeeper.server.quorum.LearnerZooKeeperServer: void startup()>();

        $r16 = r2.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        $z0 = $r16 instanceof org.apache.zookeeper.server.quorum.FollowerZooKeeperServer;

        if $z0 == 0 goto label27;

        $r17 = r2.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        r107 = (org.apache.zookeeper.server.quorum.FollowerZooKeeperServer) $r17;

        $r18 = virtualinvoke $r4.<java.util.LinkedList: java.util.Iterator iterator()>();

     label24:
        $z1 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label25;

        $r21 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r108 = (org.apache.zookeeper.server.quorum.Learner$PacketInFlight) $r21;

        $r23 = r108.<org.apache.zookeeper.server.quorum.Learner$PacketInFlight: org.apache.zookeeper.txn.TxnHeader hdr>;

        $r22 = r108.<org.apache.zookeeper.server.quorum.Learner$PacketInFlight: org.apache.jute.Record rec>;

        virtualinvoke r107.<org.apache.zookeeper.server.quorum.FollowerZooKeeperServer: void logRequest(org.apache.zookeeper.txn.TxnHeader,org.apache.jute.Record)>($r23, $r22);

        goto label24;

     label25:
        $r19 = virtualinvoke $r3.<java.util.LinkedList: java.util.Iterator iterator()>();

     label26:
        $z2 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label27;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r109 = (java.lang.Long) $r20;

        $l10 = virtualinvoke r109.<java.lang.Long: long longValue()>();

        virtualinvoke r107.<org.apache.zookeeper.server.quorum.FollowerZooKeeperServer: void commit(long)>($l10);

        goto label26;

     label27:
        return;

        catch java.lang.Throwable from label01 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
    }

    protected void revalidate(org.apache.zookeeper.server.quorum.QuorumPacket) throws java.io.IOException
    {
        byte[] $r2;
        java.io.DataInputStream $r3;
        long $l0;
        org.apache.zookeeper.server.quorum.QuorumPacket r1;
        java.io.ByteArrayInputStream $r0;
        java.lang.Long $r6;
        org.apache.zookeeper.server.ServerCnxn r8;
        java.lang.String $r14, $r18, $r22, $r25;
        boolean $z0, $z1;
        org.slf4j.Logger $r10, $r12, $r20;
        java.util.concurrent.ConcurrentHashMap $r5;
        org.apache.zookeeper.server.quorum.LearnerZooKeeperServer $r9;
        java.lang.Object $r7;
        java.lang.StringBuilder $r11, $r13, $r15, $r16, $r17, $r19, $r21, $r23, $r24;
        org.apache.zookeeper.server.quorum.Learner r4;

        r4 := @this: org.apache.zookeeper.server.quorum.Learner;

        r1 := @parameter0: org.apache.zookeeper.server.quorum.QuorumPacket;

        $r0 = new java.io.ByteArrayInputStream;

        $r2 = virtualinvoke r1.<org.apache.zookeeper.server.quorum.QuorumPacket: byte[] getData()>();

        specialinvoke $r0.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

        $r3 = new java.io.DataInputStream;

        specialinvoke $r3.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r0);

        $l0 = virtualinvoke $r3.<java.io.DataInputStream: long readLong()>();

        $z0 = virtualinvoke $r3.<java.io.DataInputStream: boolean readBoolean()>();

        $r5 = r4.<org.apache.zookeeper.server.quorum.Learner: java.util.concurrent.ConcurrentHashMap pendingRevalidations>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r7 = virtualinvoke $r5.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r6);

        r8 = (org.apache.zookeeper.server.ServerCnxn) $r7;

        if r8 != null goto label1;

        $r20 = <org.apache.zookeeper.server.quorum.Learner: org.slf4j.Logger LOG>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing session 0x");

        $r22 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l0);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for validation");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<org.slf4j.Logger: void warn(java.lang.String)>($r25);

        goto label2;

     label1:
        $r9 = r4.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        virtualinvoke $r9.<org.apache.zookeeper.server.quorum.LearnerZooKeeperServer: void finishSessionInit(org.apache.zookeeper.server.ServerCnxn,boolean)>(r8, $z0);

     label2:
        $r10 = <org.apache.zookeeper.server.quorum.Learner: org.slf4j.Logger LOG>;

        $z1 = interfaceinvoke $r10.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z1 == 0 goto label3;

        $r12 = <org.apache.zookeeper.server.quorum.Learner: org.slf4j.Logger LOG>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session 0x");

        $r14 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l0);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is valid: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.zookeeper.server.ZooTrace: void logTraceMessage(org.slf4j.Logger,long,java.lang.String)>($r12, 32L, $r18);

     label3:
        return;
    }

    protected void ping(org.apache.zookeeper.server.quorum.QuorumPacket) throws java.io.IOException
    {
        byte[] $r8;
        java.io.ByteArrayOutputStream $r0;
        java.util.HashMap $r4;
        long $l0;
        java.lang.Integer $r14;
        org.apache.zookeeper.server.quorum.QuorumPacket r7;
        java.io.DataOutputStream $r1;
        java.lang.Long $r12;
        int $i1;
        boolean $z0;
        java.util.Map$Entry r10;
        java.util.Iterator $r6;
        java.util.Set $r5;
        org.apache.zookeeper.server.quorum.LearnerZooKeeperServer $r3;
        java.lang.Object $r9, $r11, $r13;
        org.apache.zookeeper.server.quorum.Learner r2;

        r2 := @this: org.apache.zookeeper.server.quorum.Learner;

        r7 := @parameter0: org.apache.zookeeper.server.quorum.QuorumPacket;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new java.io.DataOutputStream;

        specialinvoke $r1.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r0);

        $r3 = r2.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        $r4 = virtualinvoke $r3.<org.apache.zookeeper.server.quorum.LearnerZooKeeperServer: java.util.HashMap getTouchSnapshot()>();

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.Map$Entry) $r9;

        $r11 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (java.lang.Long) $r11;

        $l0 = virtualinvoke $r12.<java.lang.Long: long longValue()>();

        virtualinvoke $r1.<java.io.DataOutputStream: void writeLong(long)>($l0);

        $r13 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r14 = (java.lang.Integer) $r13;

        $i1 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        virtualinvoke $r1.<java.io.DataOutputStream: void writeInt(int)>($i1);

        goto label1;

     label2:
        $r8 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke r7.<org.apache.zookeeper.server.quorum.QuorumPacket: void setData(byte[])>($r8);

        virtualinvoke r2.<org.apache.zookeeper.server.quorum.Learner: void writePacket(org.apache.zookeeper.server.quorum.QuorumPacket,boolean)>(r7, 1);

        return;
    }

    public void shutdown()
    {
        org.apache.zookeeper.server.quorum.QuorumPeer $r1, $r3;
        org.apache.zookeeper.server.quorum.LearnerZooKeeperServer $r5, $r6;
        org.apache.zookeeper.server.ServerCnxnFactory $r2, $r4;
        org.apache.zookeeper.server.quorum.Learner r0;

        r0 := @this: org.apache.zookeeper.server.quorum.Learner;

        $r1 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r2 = $r1.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.ServerCnxnFactory cnxnFactory>;

        virtualinvoke $r2.<org.apache.zookeeper.server.ServerCnxnFactory: void setZooKeeperServer(org.apache.zookeeper.server.ZooKeeperServer)>(null);

        $r3 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r4 = $r3.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.ServerCnxnFactory cnxnFactory>;

        virtualinvoke $r4.<org.apache.zookeeper.server.ServerCnxnFactory: void closeAll()>();

        $r5 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        if $r5 == null goto label1;

        $r6 = r0.<org.apache.zookeeper.server.quorum.Learner: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        virtualinvoke $r6.<org.apache.zookeeper.server.quorum.LearnerZooKeeperServer: void shutdown()>();

     label1:
        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0, $r3;
        java.lang.StringBuilder $r2, $r4, $r5;
        java.lang.String $r1, $r6;
        boolean $z0, $z1;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/zookeeper/server/quorum/Learner;");

        <org.apache.zookeeper.server.quorum.Learner: org.slf4j.Logger LOG> = $r0;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("follower.nodelay", "true");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("true");

        <org.apache.zookeeper.server.quorum.Learner: boolean nodelay> = $z0;

        $r3 = <org.apache.zookeeper.server.quorum.Learner: org.slf4j.Logger LOG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TCP NoDelay set to: ");

        $z1 = <org.apache.zookeeper.server.quorum.Learner: boolean nodelay>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>($r6);

        return;
    }
}
