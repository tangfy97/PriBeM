class org.jdesktop.swingx.plaf.linux.SafeBorder extends java.lang.Object implements javax.swing.border.Border
{
    private javax.swing.border.Border delegate;

    public void <init>(javax.swing.border.Border)
    {
        java.lang.Object $r2;
        org.jdesktop.swingx.plaf.linux.SafeBorder r0;
        javax.swing.border.Border r1, $r3;

        r0 := @this: org.jdesktop.swingx.plaf.linux.SafeBorder;

        r1 := @parameter0: javax.swing.border.Border;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <org.jdesktop.swingx.util.Contract: java.lang.Object asNotNull(java.lang.Object,java.lang.String)>(r1, "delegate cannot be null");

        $r3 = (javax.swing.border.Border) $r2;

        r0.<org.jdesktop.swingx.plaf.linux.SafeBorder: javax.swing.border.Border delegate> = $r3;

        return;
    }

    public java.awt.Insets getBorderInsets(java.awt.Component)
    {
        java.awt.Insets $r3;
        javax.swing.JLabel $r4;
        org.jdesktop.swingx.plaf.linux.SafeBorder r1;
        java.awt.Component r0;
        boolean $z0;
        javax.swing.border.Border $r2;

        r1 := @this: org.jdesktop.swingx.plaf.linux.SafeBorder;

        r0 := @parameter0: java.awt.Component;

        $z0 = r0 instanceof javax.swing.JLabel;

        if $z0 == 0 goto label1;

        $r4 = (javax.swing.JLabel) r0;

        goto label2;

     label1:
        $r4 = new javax.swing.JLabel;

        specialinvoke $r4.<javax.swing.JLabel: void <init>()>();

     label2:
        $r2 = r1.<org.jdesktop.swingx.plaf.linux.SafeBorder: javax.swing.border.Border delegate>;

        $r3 = interfaceinvoke $r2.<javax.swing.border.Border: java.awt.Insets getBorderInsets(java.awt.Component)>($r4);

        return $r3;
    }

    public boolean isBorderOpaque()
    {
        org.jdesktop.swingx.plaf.linux.SafeBorder r0;
        javax.swing.border.Border $r1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.plaf.linux.SafeBorder;

        $r1 = r0.<org.jdesktop.swingx.plaf.linux.SafeBorder: javax.swing.border.Border delegate>;

        $z0 = interfaceinvoke $r1.<javax.swing.border.Border: boolean isBorderOpaque()>();

        return $z0;
    }

    public void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int)
    {
        org.jdesktop.swingx.plaf.linux.SafeBorder r0;
        java.awt.Component r1;
        javax.swing.border.Border $r3;
        java.awt.Graphics r2;
        int i0, i1, i2, i3;

        r0 := @this: org.jdesktop.swingx.plaf.linux.SafeBorder;

        r1 := @parameter0: java.awt.Component;

        r2 := @parameter1: java.awt.Graphics;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $r3 = r0.<org.jdesktop.swingx.plaf.linux.SafeBorder: javax.swing.border.Border delegate>;

        interfaceinvoke $r3.<javax.swing.border.Border: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)>(r1, r2, i0, i1, i2, i3);

        return;
    }

    javax.swing.border.Border getDelegate()
    {
        org.jdesktop.swingx.plaf.linux.SafeBorder r0;
        javax.swing.border.Border $r1;

        r0 := @this: org.jdesktop.swingx.plaf.linux.SafeBorder;

        $r1 = r0.<org.jdesktop.swingx.plaf.linux.SafeBorder: javax.swing.border.Border delegate>;

        return $r1;
    }
}
