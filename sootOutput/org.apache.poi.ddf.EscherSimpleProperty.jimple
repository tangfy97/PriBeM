public class org.apache.poi.ddf.EscherSimpleProperty extends org.apache.poi.ddf.EscherProperty
{
    protected int propertyValue;

    public void <init>(short, int)
    {
        int i1;
        short s0;
        org.apache.poi.ddf.EscherSimpleProperty r0;

        r0 := @this: org.apache.poi.ddf.EscherSimpleProperty;

        s0 := @parameter0: short;

        i1 := @parameter1: int;

        specialinvoke r0.<org.apache.poi.ddf.EscherProperty: void <init>(short)>(s0);

        r0.<org.apache.poi.ddf.EscherSimpleProperty: int propertyValue> = i1;

        return;
    }

    public void <init>(short, boolean, boolean, int)
    {
        short s0;
        org.apache.poi.ddf.EscherSimpleProperty r0;
        int i1;
        boolean z0, z1;

        r0 := @this: org.apache.poi.ddf.EscherSimpleProperty;

        s0 := @parameter0: short;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i1 := @parameter3: int;

        specialinvoke r0.<org.apache.poi.ddf.EscherProperty: void <init>(short,boolean,boolean)>(s0, z0, z1);

        r0.<org.apache.poi.ddf.EscherSimpleProperty: int propertyValue> = i1;

        return;
    }

    public int serializeSimplePart(byte[], int)
    {
        byte[] r0;
        short $s1;
        org.apache.poi.ddf.EscherSimpleProperty r1;
        int i0, $i2, $i3;

        r1 := @this: org.apache.poi.ddf.EscherSimpleProperty;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $s1 = virtualinvoke r1.<org.apache.poi.ddf.EscherSimpleProperty: short getId()>();

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r0, i0, $s1);

        $i3 = i0 + 2;

        $i2 = r1.<org.apache.poi.ddf.EscherSimpleProperty: int propertyValue>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r0, $i3, $i2);

        return 6;
    }

    public int serializeComplexPart(byte[], int)
    {
        int i0;
        byte[] r1;
        org.apache.poi.ddf.EscherSimpleProperty r0;

        r0 := @this: org.apache.poi.ddf.EscherSimpleProperty;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        return 0;
    }

    public int getPropertyValue()
    {
        int $i0;
        org.apache.poi.ddf.EscherSimpleProperty r0;

        r0 := @this: org.apache.poi.ddf.EscherSimpleProperty;

        $i0 = r0.<org.apache.poi.ddf.EscherSimpleProperty: int propertyValue>;

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.poi.ddf.EscherSimpleProperty r0, r2;
        short $s2, $s3;
        int $i0, $i1, $i4, $i5;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.poi.ddf.EscherSimpleProperty;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.poi.ddf.EscherSimpleProperty;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.apache.poi.ddf.EscherSimpleProperty) r1;

        $i1 = r0.<org.apache.poi.ddf.EscherSimpleProperty: int propertyValue>;

        $i0 = r2.<org.apache.poi.ddf.EscherSimpleProperty: int propertyValue>;

        if $i1 == $i0 goto label3;

        return 0;

     label3:
        $s2 = virtualinvoke r0.<org.apache.poi.ddf.EscherSimpleProperty: short getId()>();

        $s3 = virtualinvoke r2.<org.apache.poi.ddf.EscherSimpleProperty: short getId()>();

        $i4 = (int) $s2;

        $i5 = (int) $s3;

        if $i4 == $i5 goto label4;

        return 0;

     label4:
        return 1;
    }

    public int hashCode()
    {
        int $i0;
        org.apache.poi.ddf.EscherSimpleProperty r0;

        r0 := @this: org.apache.poi.ddf.EscherSimpleProperty;

        $i0 = r0.<org.apache.poi.ddf.EscherSimpleProperty: int propertyValue>;

        return $i0;
    }

    public java.lang.String toString()
    {
        short $s0, $s1, $s2;
        int $i3, $i4, $i5;
        java.lang.String $r5, $r8, $r17, $r20;
        boolean $z0, $z1;
        org.apache.poi.ddf.EscherSimpleProperty r2;
        java.lang.StringBuilder $r1, $r3, $r4, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r21;

        r2 := @this: org.apache.poi.ddf.EscherSimpleProperty;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("propNum: ");

        $s0 = virtualinvoke r2.<org.apache.poi.ddf.EscherSimpleProperty: short getPropertyNumber()>();

        $i5 = (int) $s0;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", RAW: 0x");

        $s1 = virtualinvoke r2.<org.apache.poi.ddf.EscherSimpleProperty: short getId()>();

        $r5 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s1);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", propName: ");

        $s2 = virtualinvoke r2.<org.apache.poi.ddf.EscherSimpleProperty: short getPropertyNumber()>();

        $r8 = staticinvoke <org.apache.poi.ddf.EscherProperties: java.lang.String getPropertyName(short)>($s2);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", complex: ");

        $z0 = virtualinvoke r2.<org.apache.poi.ddf.EscherSimpleProperty: boolean isComplex()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", blipId: ");

        $z1 = virtualinvoke r2.<org.apache.poi.ddf.EscherSimpleProperty: boolean isBlipId()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", value: ");

        $i3 = r2.<org.apache.poi.ddf.EscherSimpleProperty: int propertyValue>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (0x");

        $i4 = r2.<org.apache.poi.ddf.EscherSimpleProperty: int propertyValue>;

        $r17 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(int)>($i4);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r20;
    }

    public java.lang.String toXml(java.lang.String)
    {
        short $s0;
        int $i1;
        java.lang.String r1, $r6, $r9, $r12, $r20, $r22;
        boolean $z0, $z1;
        org.apache.poi.ddf.EscherSimpleProperty r4;
        java.lang.StringBuilder $r0, $r2, $r3, $r7, $r8, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r21;
        java.lang.Class $r5;

        r4 := @this: org.apache.poi.ddf.EscherSimpleProperty;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r5 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getSimpleName()>();

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id=\"0x");

        $s0 = virtualinvoke r4.<org.apache.poi.ddf.EscherSimpleProperty: short getId()>();

        $r9 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" name=\"");

        $r12 = virtualinvoke r4.<org.apache.poi.ddf.EscherSimpleProperty: java.lang.String getName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" blipId=\"");

        $z0 = virtualinvoke r4.<org.apache.poi.ddf.EscherSimpleProperty: boolean isBlipId()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" complex=\"");

        $z1 = virtualinvoke r4.<org.apache.poi.ddf.EscherSimpleProperty: boolean isComplex()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" value=\"");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $i1 = r4.<org.apache.poi.ddf.EscherSimpleProperty: int propertyValue>;

        $r20 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(int)>($i1);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"/>\n");

        $r22 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r22;
    }
}
