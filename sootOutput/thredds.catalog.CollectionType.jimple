public final class thredds.catalog.CollectionType extends java.lang.Object
{
    private static java.util.ArrayList members;
    public static final thredds.catalog.CollectionType NONE;
    public static final thredds.catalog.CollectionType TIMESERIES;
    public static final thredds.catalog.CollectionType STATIONS;
    public static final thredds.catalog.CollectionType FORECASTS;
    private java.lang.String name;

    private void <init>(java.lang.String)
    {
        java.lang.String r1;
        thredds.catalog.CollectionType r0;
        java.util.ArrayList $r2;

        r0 := @this: thredds.catalog.CollectionType;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.catalog.CollectionType: java.lang.String name> = r1;

        $r2 = <thredds.catalog.CollectionType: java.util.ArrayList members>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

        return;
    }

    private void <init>(java.lang.String, boolean)
    {
        java.lang.String r1;
        thredds.catalog.CollectionType r0;
        boolean z0;

        r0 := @this: thredds.catalog.CollectionType;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.catalog.CollectionType: java.lang.String name> = r1;

        return;
    }

    public static java.util.Collection getAllTypes()
    {
        java.util.ArrayList $r0;

        $r0 = <thredds.catalog.CollectionType: java.util.ArrayList members>;

        return $r0;
    }

    public static thredds.catalog.CollectionType findType(java.lang.String)
    {
        java.util.Iterator $r2;
        java.util.ArrayList $r1;
        java.lang.Object $r3;
        java.lang.String r0, $r5;
        thredds.catalog.CollectionType r4;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = <thredds.catalog.CollectionType: java.util.ArrayList members>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (thredds.catalog.CollectionType) $r3;

        $r5 = r4.<thredds.catalog.CollectionType: java.lang.String name>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z1 == 0 goto label3;

        return r4;

     label3:
        goto label2;

     label4:
        return null;
    }

    public static thredds.catalog.CollectionType getType(java.lang.String)
    {
        java.lang.String r0;
        thredds.catalog.CollectionType $r1, $r2;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <thredds.catalog.CollectionType: thredds.catalog.CollectionType findType(java.lang.String)>(r0);

        if $r1 == null goto label2;

        $r2 = $r1;

        goto label3;

     label2:
        $r2 = new thredds.catalog.CollectionType;

        specialinvoke $r2.<thredds.catalog.CollectionType: void <init>(java.lang.String,boolean)>(r0, 0);

     label3:
        return $r2;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        thredds.catalog.CollectionType r0;

        r0 := @this: thredds.catalog.CollectionType;

        $r1 = r0.<thredds.catalog.CollectionType: java.lang.String name>;

        return $r1;
    }

    public int hashCode()
    {
        int $i0;
        java.lang.String $r1;
        thredds.catalog.CollectionType r0;

        r0 := @this: thredds.catalog.CollectionType;

        $r1 = r0.<thredds.catalog.CollectionType: java.lang.String name>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        int $i0, $i1;
        java.lang.Object r1;
        thredds.catalog.CollectionType r0;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog.CollectionType;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof thredds.catalog.CollectionType;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $i1 = virtualinvoke r0.<thredds.catalog.CollectionType: int hashCode()>();

        if $i0 != $i1 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    static void <clinit>()
    {
        thredds.catalog.CollectionType $r1, $r2, $r3, $r4;
        java.util.ArrayList $r0;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(20);

        <thredds.catalog.CollectionType: java.util.ArrayList members> = $r0;

        $r1 = new thredds.catalog.CollectionType;

        specialinvoke $r1.<thredds.catalog.CollectionType: void <init>(java.lang.String)>("");

        <thredds.catalog.CollectionType: thredds.catalog.CollectionType NONE> = $r1;

        $r2 = new thredds.catalog.CollectionType;

        specialinvoke $r2.<thredds.catalog.CollectionType: void <init>(java.lang.String)>("TimeSeries");

        <thredds.catalog.CollectionType: thredds.catalog.CollectionType TIMESERIES> = $r2;

        $r3 = new thredds.catalog.CollectionType;

        specialinvoke $r3.<thredds.catalog.CollectionType: void <init>(java.lang.String)>("Stations");

        <thredds.catalog.CollectionType: thredds.catalog.CollectionType STATIONS> = $r3;

        $r4 = new thredds.catalog.CollectionType;

        specialinvoke $r4.<thredds.catalog.CollectionType: void <init>(java.lang.String)>("ForecastModelRuns");

        <thredds.catalog.CollectionType: thredds.catalog.CollectionType FORECASTS> = $r4;

        return;
    }
}
