public final class org.apache.poi.ss.formula.ptg.MemAreaPtg extends org.apache.poi.ss.formula.ptg.OperandPtg
{
    public static final short sid;
    private static final int SIZE;
    private final int field_1_reserved;
    private final int field_2_subex_len;

    public void <init>(int)
    {
        int i0;
        org.apache.poi.ss.formula.ptg.MemAreaPtg r0;

        r0 := @this: org.apache.poi.ss.formula.ptg.MemAreaPtg;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.poi.ss.formula.ptg.OperandPtg: void <init>()>();

        r0.<org.apache.poi.ss.formula.ptg.MemAreaPtg: int field_1_reserved> = 0;

        r0.<org.apache.poi.ss.formula.ptg.MemAreaPtg: int field_2_subex_len> = i0;

        return;
    }

    public void <init>(org.apache.poi.util.LittleEndianInput)
    {
        short $s1;
        org.apache.poi.util.LittleEndianInput r1;
        int $i0, $i2;
        org.apache.poi.ss.formula.ptg.MemAreaPtg r0;

        r0 := @this: org.apache.poi.ss.formula.ptg.MemAreaPtg;

        r1 := @parameter0: org.apache.poi.util.LittleEndianInput;

        specialinvoke r0.<org.apache.poi.ss.formula.ptg.OperandPtg: void <init>()>();

        $i0 = interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: int readInt()>();

        r0.<org.apache.poi.ss.formula.ptg.MemAreaPtg: int field_1_reserved> = $i0;

        $s1 = interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: short readShort()>();

        $i2 = (int) $s1;

        r0.<org.apache.poi.ss.formula.ptg.MemAreaPtg: int field_2_subex_len> = $i2;

        return;
    }

    public int getLenRefSubexpression()
    {
        int $i0;
        org.apache.poi.ss.formula.ptg.MemAreaPtg r0;

        r0 := @this: org.apache.poi.ss.formula.ptg.MemAreaPtg;

        $i0 = r0.<org.apache.poi.ss.formula.ptg.MemAreaPtg: int field_2_subex_len>;

        return $i0;
    }

    public void write(org.apache.poi.util.LittleEndianOutput)
    {
        byte $b0;
        org.apache.poi.util.LittleEndianOutput r0;
        int $i1, $i2, $i3, $i4;
        org.apache.poi.ss.formula.ptg.MemAreaPtg r1;

        r1 := @this: org.apache.poi.ss.formula.ptg.MemAreaPtg;

        r0 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        $b0 = virtualinvoke r1.<org.apache.poi.ss.formula.ptg.MemAreaPtg: byte getPtgClass()>();

        $i4 = (int) $b0;

        $i1 = 38 + $i4;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($i1);

        $i2 = r1.<org.apache.poi.ss.formula.ptg.MemAreaPtg: int field_1_reserved>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeInt(int)>($i2);

        $i3 = r1.<org.apache.poi.ss.formula.ptg.MemAreaPtg: int field_2_subex_len>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i3);

        return;
    }

    public int getSize()
    {
        org.apache.poi.ss.formula.ptg.MemAreaPtg r0;

        r0 := @this: org.apache.poi.ss.formula.ptg.MemAreaPtg;

        return 7;
    }

    public java.lang.String toFormulaString()
    {
        org.apache.poi.ss.formula.ptg.MemAreaPtg r0;

        r0 := @this: org.apache.poi.ss.formula.ptg.MemAreaPtg;

        return "";
    }

    public byte getDefaultOperandClass()
    {
        org.apache.poi.ss.formula.ptg.MemAreaPtg r0;

        r0 := @this: org.apache.poi.ss.formula.ptg.MemAreaPtg;

        return 32;
    }

    public final java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r4;
        int $i0;
        org.apache.poi.ss.formula.ptg.MemAreaPtg r1;
        java.lang.Class $r2;
        java.lang.String $r3, $r5;

        r1 := @this: org.apache.poi.ss.formula.ptg.MemAreaPtg;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(64);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" [len=");

        $i0 = r1.<org.apache.poi.ss.formula.ptg.MemAreaPtg: int field_2_subex_len>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public static void <clinit>()
    {
        <org.apache.poi.ss.formula.ptg.MemAreaPtg: int SIZE> = 7;

        <org.apache.poi.ss.formula.ptg.MemAreaPtg: short sid> = 38;

        return;
    }
}
