public final class org.apache.poi.hmef.attribute.MAPIStringAttribute extends org.apache.poi.hmef.attribute.MAPIAttribute
{
    private static org.apache.poi.util.POILogger logger;
    private static final java.lang.String CODEPAGE;
    private final java.lang.String data;

    public void <init>(org.apache.poi.hsmf.datatypes.MAPIProperty, int, byte[])
    {
        byte[] r2;
        int i0, $i1, $i2, $i3, $i4;
        org.apache.poi.hsmf.datatypes.Types$MAPIType $r3, $r4;
        java.lang.String $r9, $r10, r13;
        boolean $z0;
        org.apache.poi.hsmf.datatypes.MAPIProperty r1;
        java.lang.RuntimeException $r12;
        java.lang.IllegalArgumentException $r5;
        org.apache.poi.hmef.attribute.MAPIStringAttribute r0;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.io.UnsupportedEncodingException $r11;

        r0 := @this: org.apache.poi.hmef.attribute.MAPIStringAttribute;

        r1 := @parameter0: org.apache.poi.hsmf.datatypes.MAPIProperty;

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        specialinvoke r0.<org.apache.poi.hmef.attribute.MAPIAttribute: void <init>(org.apache.poi.hsmf.datatypes.MAPIProperty,int,byte[])>(r1, i0, r2);

        $r3 = <org.apache.poi.hsmf.datatypes.Types: org.apache.poi.hsmf.datatypes.Types$MAPIType ASCII_STRING>;

        $i1 = virtualinvoke $r3.<org.apache.poi.hsmf.datatypes.Types$MAPIType: int getId()>();

        if i0 != $i1 goto label4;

     label1:
        $r10 = new java.lang.String;

        specialinvoke $r10.<java.lang.String: void <init>(byte[],java.lang.String)>(r2, "CP1252");

        r13 = $r10;

     label2:
        goto label6;

     label3:
        $r11 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>("JVM Broken - core encoding CP1252 missing");

        throw $r12;

     label4:
        $r4 = <org.apache.poi.hsmf.datatypes.Types: org.apache.poi.hsmf.datatypes.Types$MAPIType UNICODE_STRING>;

        $i2 = virtualinvoke $r4.<org.apache.poi.hsmf.datatypes.Types$MAPIType: int getId()>();

        if i0 != $i2 goto label5;

        r13 = staticinvoke <org.apache.poi.util.StringUtil: java.lang.String getFromUnicodeLE(byte[])>(r2);

        goto label6;

     label5:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a string type ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label6:
        $z0 = virtualinvoke r13.<java.lang.String: boolean endsWith(java.lang.String)>("\u0000");

        if $z0 == 0 goto label7;

        $i3 = virtualinvoke r13.<java.lang.String: int length()>();

        $i4 = $i3 - 1;

        r13 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

     label7:
        r0.<org.apache.poi.hmef.attribute.MAPIStringAttribute: java.lang.String data> = r13;

        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public java.lang.String getDataString()
    {
        java.lang.String $r1;
        org.apache.poi.hmef.attribute.MAPIStringAttribute r0;

        r0 := @this: org.apache.poi.hmef.attribute.MAPIStringAttribute;

        $r1 = r0.<org.apache.poi.hmef.attribute.MAPIStringAttribute: java.lang.String data>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.apache.poi.hsmf.datatypes.MAPIProperty $r2;
        org.apache.poi.hmef.attribute.MAPIStringAttribute r1;
        java.lang.StringBuilder $r0, $r4, $r5, $r7;
        java.lang.String $r3, $r6, $r8;

        r1 := @this: org.apache.poi.hmef.attribute.MAPIStringAttribute;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.poi.hmef.attribute.MAPIStringAttribute: org.apache.poi.hsmf.datatypes.MAPIProperty getProperty()>();

        $r3 = virtualinvoke $r2.<org.apache.poi.hsmf.datatypes.MAPIProperty: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = r1.<org.apache.poi.hmef.attribute.MAPIStringAttribute: java.lang.String data>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static java.lang.String getAsString(org.apache.poi.hmef.attribute.MAPIAttribute)
    {
        org.apache.poi.util.POILogger $r2;
        org.apache.poi.hmef.attribute.MAPIAttribute r0;
        org.apache.poi.hmef.attribute.MAPIStringAttribute $r9;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.lang.String $r4, $r6, $r8, $r10;
        org.apache.poi.hmef.attribute.MAPIRtfAttribute $r7;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.poi.hmef.attribute.MAPIAttribute;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = r0 instanceof org.apache.poi.hmef.attribute.MAPIStringAttribute;

        if $z0 == 0 goto label2;

        $r9 = (org.apache.poi.hmef.attribute.MAPIStringAttribute) r0;

        $r10 = virtualinvoke $r9.<org.apache.poi.hmef.attribute.MAPIStringAttribute: java.lang.String getDataString()>();

        return $r10;

     label2:
        $z1 = r0 instanceof org.apache.poi.hmef.attribute.MAPIRtfAttribute;

        if $z1 == 0 goto label3;

        $r7 = (org.apache.poi.hmef.attribute.MAPIRtfAttribute) r0;

        $r8 = virtualinvoke $r7.<org.apache.poi.hmef.attribute.MAPIRtfAttribute: java.lang.String getDataString()>();

        return $r8;

     label3:
        $r2 = <org.apache.poi.hmef.attribute.MAPIStringAttribute: org.apache.poi.util.POILogger logger>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Warning, non string property found: ");

        $r4 = virtualinvoke r0.<org.apache.poi.hmef.attribute.MAPIAttribute: java.lang.String toString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r6);

        return null;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        <org.apache.poi.hmef.attribute.MAPIStringAttribute: java.lang.String CODEPAGE> = "CP1252";

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hmef/attribute/MAPIStringAttribute;");

        <org.apache.poi.hmef.attribute.MAPIStringAttribute: org.apache.poi.util.POILogger logger> = $r0;

        return;
    }
}
