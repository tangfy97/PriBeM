public class com.hp.hpl.jena.datatypes.xsd.XSDDatatype extends com.hp.hpl.jena.datatypes.BaseDatatype
{
    public static final java.lang.String XSD;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDfloat;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdouble;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDint;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDlong;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDshort;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDbyte;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDunsignedByte;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDunsignedShort;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDunsignedInt;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDunsignedLong;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdecimal;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDinteger;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDnonPositiveInteger;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDnonNegativeInteger;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDpositiveInteger;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDnegativeInteger;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDboolean;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDstring;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDnormalizedString;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDanyURI;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDtoken;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDName;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDQName;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDlanguage;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDNMTOKEN;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDENTITY;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDID;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDNCName;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDIDREF;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDNOTATION;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDhexBinary;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDbase64Binary;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdate;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDtime;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdateTime;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDduration;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDgDay;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDgMonth;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDgYear;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDgYearMonth;
    public static final com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDgMonthDay;
    protected org.apache.xerces.impl.dv.XSSimpleType typeDeclaration;
    protected java.lang.Class javaClass;
    static final org.apache.xerces.impl.dv.xs.DecimalDV decimalDV;

    public void <init>(java.lang.String)
    {
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype r0;
        org.apache.xerces.impl.dv.XSSimpleType $r3, $r5, $r9;
        org.apache.xerces.impl.dv.SchemaDVFactory $r1;
        java.lang.StringBuilder $r4, $r7, $r8, $r11;
        java.lang.String r2, $r6, $r10, $r12;

        r0 := @this: com.hp.hpl.jena.datatypes.xsd.XSDDatatype;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.datatypes.BaseDatatype: void <init>(java.lang.String)>("");

        r0.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: java.lang.Class javaClass> = null;

        $r1 = staticinvoke <org.apache.xerces.impl.dv.SchemaDVFactory: org.apache.xerces.impl.dv.SchemaDVFactory getInstance()>();

        $r3 = virtualinvoke $r1.<org.apache.xerces.impl.dv.SchemaDVFactory: org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)>(r2);

        r0.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: org.apache.xerces.impl.dv.XSSimpleType typeDeclaration> = $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: org.apache.xerces.impl.dv.XSSimpleType typeDeclaration>;

        $r6 = interfaceinvoke $r5.<org.apache.xerces.impl.dv.XSSimpleType: java.lang.String getNamespace()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r9 = r0.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: org.apache.xerces.impl.dv.XSSimpleType typeDeclaration>;

        $r10 = interfaceinvoke $r9.<org.apache.xerces.impl.dv.XSSimpleType: java.lang.String getName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: java.lang.String uri> = $r12;

        return;
    }

    public void <init>(java.lang.String, java.lang.Class)
    {
        java.lang.Class r2;
        java.lang.String r1;
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype r0;

        r0 := @this: com.hp.hpl.jena.datatypes.xsd.XSDDatatype;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: void <init>(java.lang.String)>(r1);

        r0.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: java.lang.Class javaClass> = r2;

        return;
    }

    public void <init>(org.apache.xerces.impl.dv.XSSimpleType, java.lang.String)
    {
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype r0;
        org.apache.xerces.impl.dv.XSSimpleType r1, $r6;
        java.lang.StringBuilder $r2, $r4, $r5, $r8;
        java.lang.String r3, $r7, $r9;

        r0 := @this: com.hp.hpl.jena.datatypes.xsd.XSDDatatype;

        r1 := @parameter0: org.apache.xerces.impl.dv.XSSimpleType;

        r3 := @parameter1: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.datatypes.BaseDatatype: void <init>(java.lang.String)>("");

        r0.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: java.lang.Class javaClass> = null;

        r0.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: org.apache.xerces.impl.dv.XSSimpleType typeDeclaration> = r1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r6 = r0.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: org.apache.xerces.impl.dv.XSSimpleType typeDeclaration>;

        $r7 = interfaceinvoke $r6.<org.apache.xerces.impl.dv.XSSimpleType: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: java.lang.String uri> = $r9;

        return;
    }

    public java.lang.Object parse(java.lang.String) throws com.hp.hpl.jena.datatypes.DatatypeFormatException
    {
        org.apache.xerces.impl.validation.ValidationState $r0;
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype r2;
        org.apache.xerces.impl.dv.ValidatedInfo $r1;
        org.apache.xerces.impl.dv.XSSimpleType $r4;
        com.hp.hpl.jena.datatypes.DatatypeFormatException $r7;
        org.apache.xerces.impl.dv.InvalidDatatypeValueException $r6;
        java.lang.Object $r5;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String r3, $r11;

        r2 := @this: com.hp.hpl.jena.datatypes.xsd.XSDDatatype;

        r3 := @parameter0: java.lang.String;

     label1:
        $r0 = new org.apache.xerces.impl.validation.ValidationState;

        specialinvoke $r0.<org.apache.xerces.impl.validation.ValidationState: void <init>()>();

        $r1 = new org.apache.xerces.impl.dv.ValidatedInfo;

        specialinvoke $r1.<org.apache.xerces.impl.dv.ValidatedInfo: void <init>()>();

        $r4 = r2.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: org.apache.xerces.impl.dv.XSSimpleType typeDeclaration>;

        interfaceinvoke $r4.<org.apache.xerces.impl.dv.XSSimpleType: java.lang.Object validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)>(r3, $r0, $r1);

        $r5 = virtualinvoke r2.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: java.lang.Object convertValidatedDataValue(org.apache.xerces.impl.dv.ValidatedInfo)>($r1);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r7 = new com.hp.hpl.jena.datatypes.DatatypeFormatException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("during parse -");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<com.hp.hpl.jena.datatypes.DatatypeFormatException: void <init>(java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype,java.lang.String)>(r3, r2, $r11);

        throw $r7;

        catch org.apache.xerces.impl.dv.InvalidDatatypeValueException from label1 to label2 with label3;
    }

    public java.lang.String unparse(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r1;
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype r2;

        r2 := @this: com.hp.hpl.jena.datatypes.xsd.XSDDatatype;

        r0 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    public boolean isEqual(com.hp.hpl.jena.graph.impl.LiteralLabel, com.hp.hpl.jena.graph.impl.LiteralLabel)
    {
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype r0;
        com.hp.hpl.jena.graph.impl.LiteralLabel r1, r4;
        java.lang.Object $r3, $r5;
        org.apache.xerces.impl.dv.XSSimpleType $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.datatypes.xsd.XSDDatatype;

        r1 := @parameter0: com.hp.hpl.jena.graph.impl.LiteralLabel;

        r4 := @parameter1: com.hp.hpl.jena.graph.impl.LiteralLabel;

        $r2 = r0.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: org.apache.xerces.impl.dv.XSSimpleType typeDeclaration>;

        $r3 = interfaceinvoke r1.<com.hp.hpl.jena.graph.impl.LiteralLabel: java.lang.Object getValue()>();

        $r5 = interfaceinvoke r4.<com.hp.hpl.jena.graph.impl.LiteralLabel: java.lang.Object getValue()>();

        $z0 = interfaceinvoke $r2.<org.apache.xerces.impl.dv.XSSimpleType: boolean isEqual(java.lang.Object,java.lang.Object)>($r3, $r5);

        return $z0;
    }

    public java.lang.Class getJavaClass()
    {
        java.lang.Class $r1;
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype r0;

        r0 := @this: com.hp.hpl.jena.datatypes.xsd.XSDDatatype;

        $r1 = r0.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: java.lang.Class javaClass>;

        return $r1;
    }

    public java.lang.Object extendedTypeDefinition()
    {
        org.apache.xerces.impl.dv.XSSimpleType $r1;
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype r0;

        r0 := @this: com.hp.hpl.jena.datatypes.xsd.XSDDatatype;

        $r1 = r0.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: org.apache.xerces.impl.dv.XSSimpleType typeDeclaration>;

        return $r1;
    }

    public static java.util.List loadUserDefined(java.lang.String, java.io.Reader, java.lang.String, com.hp.hpl.jena.datatypes.TypeMapper) throws com.hp.hpl.jena.datatypes.DatatypeFormatException
    {
        java.util.List $r5;
        com.hp.hpl.jena.datatypes.TypeMapper r4;
        org.apache.xerces.xni.parser.XMLInputSource $r0;
        java.lang.String r1, r3;
        java.io.Reader r2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.Reader;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: com.hp.hpl.jena.datatypes.TypeMapper;

        $r0 = new org.apache.xerces.xni.parser.XMLInputSource;

        specialinvoke $r0.<org.apache.xerces.xni.parser.XMLInputSource: void <init>(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.lang.String)>(null, r1, r1, r2, r3);

        $r5 = staticinvoke <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: java.util.List loadUserDefined(org.apache.xerces.xni.parser.XMLInputSource,com.hp.hpl.jena.datatypes.TypeMapper)>($r0, r4);

        return $r5;
    }

    public static java.util.List loadUserDefined(java.lang.String, java.lang.String, com.hp.hpl.jena.datatypes.TypeMapper) throws com.hp.hpl.jena.datatypes.DatatypeFormatException
    {
        java.util.List $r3;
        com.hp.hpl.jena.datatypes.TypeMapper r2;
        org.apache.xerces.xni.parser.XMLInputSource $r0;
        java.lang.String r1, r4;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r2 := @parameter2: com.hp.hpl.jena.datatypes.TypeMapper;

        $r0 = new org.apache.xerces.xni.parser.XMLInputSource;

        specialinvoke $r0.<org.apache.xerces.xni.parser.XMLInputSource: void <init>(java.lang.String,java.lang.String,java.lang.String)>(null, r1, r1);

        $r3 = staticinvoke <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: java.util.List loadUserDefined(org.apache.xerces.xni.parser.XMLInputSource,com.hp.hpl.jena.datatypes.TypeMapper)>($r0, r2);

        return $r3;
    }

    private static java.util.List loadUserDefined(org.apache.xerces.xni.parser.XMLInputSource, com.hp.hpl.jena.datatypes.TypeMapper) throws com.hp.hpl.jena.datatypes.DatatypeFormatException
    {
        com.hp.hpl.jena.datatypes.TypeMapper r12;
        org.apache.xerces.xni.grammars.Grammar $r2;
        org.apache.xerces.xs.XSObject $r6;
        java.util.ArrayList $r5;
        org.apache.xerces.xni.grammars.XSGrammar r17;
        org.apache.xerces.parsers.XMLGrammarPreparser $r0;
        int $i0, i1;
        java.lang.String $r8, $r9, $r11, $r13, $r16;
        boolean $z0;
        org.apache.xerces.xni.parser.XMLInputSource r1;
        org.apache.xerces.xs.XSNamedMap $r4;
        org.apache.xerces.impl.dv.XSSimpleType r7;
        com.hp.hpl.jena.datatypes.DatatypeFormatException $r15;
        java.lang.Exception $r14;
        org.apache.xerces.xs.XSModel $r3;
        com.hp.hpl.jena.datatypes.xsd.impl.XSDGenericType $r10;

        r1 := @parameter0: org.apache.xerces.xni.parser.XMLInputSource;

        r12 := @parameter1: com.hp.hpl.jena.datatypes.TypeMapper;

        $r0 = new org.apache.xerces.parsers.XMLGrammarPreparser;

        specialinvoke $r0.<org.apache.xerces.parsers.XMLGrammarPreparser: void <init>()>();

        virtualinvoke $r0.<org.apache.xerces.parsers.XMLGrammarPreparser: boolean registerPreparser(java.lang.String,org.apache.xerces.xni.grammars.XMLGrammarLoader)>("http://www.w3.org/2001/XMLSchema", null);

     label1:
        $r2 = virtualinvoke $r0.<org.apache.xerces.parsers.XMLGrammarPreparser: org.apache.xerces.xni.grammars.Grammar preparseGrammar(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource)>("http://www.w3.org/2001/XMLSchema", r1);

        r17 = (org.apache.xerces.xni.grammars.XSGrammar) $r2;

        $r3 = interfaceinvoke r17.<org.apache.xerces.xni.grammars.XSGrammar: org.apache.xerces.xs.XSModel toXSModel()>();

        $r4 = interfaceinvoke $r3.<org.apache.xerces.xs.XSModel: org.apache.xerces.xs.XSNamedMap getComponents(short)>(16);

        $i0 = interfaceinvoke $r4.<org.apache.xerces.xs.XSNamedMap: int getLength()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i0);

        i1 = 0;

     label2:
        if i1 >= $i0 goto label4;

        $r6 = interfaceinvoke $r4.<org.apache.xerces.xs.XSNamedMap: org.apache.xerces.xs.XSObject item(int)>(i1);

        r7 = (org.apache.xerces.impl.dv.XSSimpleType) $r6;

        $r8 = "http://www.w3.org/2001/XMLSchema";

        $r9 = interfaceinvoke r7.<org.apache.xerces.impl.dv.XSSimpleType: java.lang.String getNamespace()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label3;

        $r10 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDGenericType;

        $r11 = virtualinvoke r1.<org.apache.xerces.xni.parser.XMLInputSource: java.lang.String getSystemId()>();

        specialinvoke $r10.<com.hp.hpl.jena.datatypes.xsd.impl.XSDGenericType: void <init>(org.apache.xerces.impl.dv.XSSimpleType,java.lang.String)>(r7, $r11);

        virtualinvoke r12.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r10);

        $r13 = virtualinvoke $r10.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: java.lang.String getURI()>();

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return $r5;

     label5:
        $r14 := @caughtexception;

        virtualinvoke $r14.<java.lang.Exception: void printStackTrace()>();

        $r15 = new com.hp.hpl.jena.datatypes.DatatypeFormatException;

        $r16 = virtualinvoke $r14.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r15.<com.hp.hpl.jena.datatypes.DatatypeFormatException: void <init>(java.lang.String)>($r16);

        throw $r15;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    public java.lang.Object convertValidatedDataValue(org.apache.xerces.impl.dv.ValidatedInfo) throws com.hp.hpl.jena.datatypes.DatatypeFormatException
    {
        byte[] $r12, $r14;
        java.lang.Integer $r3, $r6, $r33;
        java.math.BigDecimal $r34;
        java.math.BigInteger $r35;
        org.apache.xerces.impl.dv.xs.DecimalDV $r16, $r17, $r20;
        org.apache.xerces.impl.dv.ValidatedInfo r0;
        short $s0;
        int $i1, $i2, $i3, $i4, $i5, $i7;
        java.lang.String $r1, $r2, $r4, $r5, $r8, $r9, $r11, $r13, $r18, $r19, $r24, $r25, $r30, r32;
        java.lang.Number $r10, $r21;
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype r7, $r26;
        java.lang.Object r15, $r27, $r29, $r31;

        r7 := @this: com.hp.hpl.jena.datatypes.xsd.XSDDatatype;

        r0 := @parameter0: org.apache.xerces.impl.dv.ValidatedInfo;

        $s0 = r0.<org.apache.xerces.impl.dv.ValidatedInfo: short actualValueType>;

        $i5 = (int) $s0;

        tableswitch($i5)
        {
            case 3: goto label02;
            case 4: goto label07;
            case 5: goto label12;
            case 6: goto label12;
            case 7: goto label12;
            case 8: goto label12;
            case 9: goto label12;
            case 10: goto label12;
            case 11: goto label12;
            case 12: goto label12;
            case 13: goto label12;
            case 14: goto label12;
            case 15: goto label12;
            case 16: goto label03;
            case 17: goto label01;
            case 18: goto label12;
            case 19: goto label12;
            case 20: goto label12;
            case 21: goto label12;
            case 22: goto label12;
            case 23: goto label12;
            case 24: goto label12;
            case 25: goto label12;
            case 26: goto label12;
            case 27: goto label12;
            case 28: goto label12;
            case 29: goto label12;
            case 30: goto label07;
            case 31: goto label07;
            case 32: goto label07;
            case 33: goto label05;
            case 34: goto label04;
            case 35: goto label06;
            case 36: goto label06;
            case 37: goto label07;
            case 38: goto label07;
            case 39: goto label05;
            case 40: goto label04;
            case 41: goto label06;
            case 42: goto label07;
            default: goto label12;
        };

     label01:
        $r11 = r0.<org.apache.xerces.impl.dv.ValidatedInfo: java.lang.String normalizedValue>;

        $r12 = staticinvoke <org.apache.xerces.impl.dv.util.Base64: byte[] decode(java.lang.String)>($r11);

        return $r12;

     label02:
        $r29 = r0.<org.apache.xerces.impl.dv.ValidatedInfo: java.lang.Object actualValue>;

        return $r29;

     label03:
        $r13 = r0.<org.apache.xerces.impl.dv.ValidatedInfo: java.lang.String normalizedValue>;

        $r14 = staticinvoke <org.apache.xerces.impl.dv.util.HexBin: byte[] decode(java.lang.String)>($r13);

        return $r14;

     label04:
        $r4 = r0.<org.apache.xerces.impl.dv.ValidatedInfo: java.lang.String normalizedValue>;

        $r5 = staticinvoke <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: java.lang.String trimPlus(java.lang.String)>($r4);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r5);

        return $r6;

     label05:
        $r8 = r0.<org.apache.xerces.impl.dv.ValidatedInfo: java.lang.String normalizedValue>;

        $r9 = staticinvoke <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: java.lang.String trimPlus(java.lang.String)>($r8);

        $r10 = virtualinvoke r7.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: java.lang.Number suitableInteger(java.lang.String)>($r9);

        return $r10;

     label06:
        $r1 = r0.<org.apache.xerces.impl.dv.ValidatedInfo: java.lang.String normalizedValue>;

        $r2 = staticinvoke <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: java.lang.String trimPlus(java.lang.String)>($r1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r2);

        return $r3;

     label07:
        r15 = r0.<org.apache.xerces.impl.dv.ValidatedInfo: java.lang.Object actualValue>;

        $r16 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: org.apache.xerces.impl.dv.xs.DecimalDV decimalDV>;

        $i1 = virtualinvoke $r16.<org.apache.xerces.impl.dv.xs.DecimalDV: int getTotalDigits(java.lang.Object)>(r15);

        if $i1 != 0 goto label08;

        $r33 = new java.lang.Integer;

        specialinvoke $r33.<java.lang.Integer: void <init>(int)>(0);

        return $r33;

     label08:
        $r17 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: org.apache.xerces.impl.dv.xs.DecimalDV decimalDV>;

        $i2 = virtualinvoke $r17.<org.apache.xerces.impl.dv.xs.DecimalDV: int getFractionDigits(java.lang.Object)>(r15);

        if $i2 < 1 goto label09;

        $r34 = new java.math.BigDecimal;

        $r24 = r0.<org.apache.xerces.impl.dv.ValidatedInfo: java.lang.String normalizedValue>;

        $r25 = staticinvoke <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: java.lang.String trimPlus(java.lang.String)>($r24);

        specialinvoke $r34.<java.math.BigDecimal: void <init>(java.lang.String)>($r25);

        $r26 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdecimal>;

        $r27 = virtualinvoke $r26.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: java.lang.Object cannonicalise(java.lang.Object)>($r34);

        return $r27;

     label09:
        $r18 = r0.<org.apache.xerces.impl.dv.ValidatedInfo: java.lang.String normalizedValue>;

        $r19 = staticinvoke <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: java.lang.String trimPlus(java.lang.String)>($r18);

        r32 = $r19;

        $i3 = virtualinvoke $r19.<java.lang.String: int indexOf(int)>(46);

        $i7 = (int) -1;

        if $i3 == $i7 goto label10;

        r32 = virtualinvoke $r19.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

     label10:
        $r20 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: org.apache.xerces.impl.dv.xs.DecimalDV decimalDV>;

        $i4 = virtualinvoke $r20.<org.apache.xerces.impl.dv.xs.DecimalDV: int getTotalDigits(java.lang.Object)>(r15);

        if $i4 <= 18 goto label11;

        $r35 = new java.math.BigInteger;

        specialinvoke $r35.<java.math.BigInteger: void <init>(java.lang.String)>(r32);

        return $r35;

     label11:
        $r21 = virtualinvoke r7.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: java.lang.Number suitableInteger(java.lang.String)>(r32);

        return $r21;

     label12:
        $r30 = r0.<org.apache.xerces.impl.dv.ValidatedInfo: java.lang.String normalizedValue>;

        $r31 = virtualinvoke r7.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: java.lang.Object parseValidated(java.lang.String)>($r30);

        return $r31;
    }

    protected java.lang.Number suitableInteger(java.lang.String)
    {
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype r2;
        long $l0;
        java.lang.String r0;
        java.lang.Number $r1;

        r2 := @this: com.hp.hpl.jena.datatypes.xsd.XSDDatatype;

        r0 := @parameter0: java.lang.String;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r0);

        $r1 = staticinvoke <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: java.lang.Number suitableInteger(long)>($l0);

        return $r1;
    }

    protected static java.lang.Number suitableInteger(long)
    {
        long l0;
        java.lang.Integer $r3;
        byte $b1, $b2;
        java.lang.Long $r2;
        int $i3, $i4, $i5;

        l0 := @parameter0: long;

        $b1 = l0 cmp 2147483647L;

        $i4 = (int) $b1;

        if $i4 > 0 goto label1;

        $b2 = l0 cmp -2147483648L;

        $i5 = (int) $b2;

        if $i5 >= 0 goto label2;

     label1:
        $r2 = new java.lang.Long;

        specialinvoke $r2.<java.lang.Long: void <init>(long)>(l0);

        return $r2;

     label2:
        $r3 = new java.lang.Integer;

        $i3 = (int) l0;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>($i3);

        return $r3;
    }

    public java.lang.Object parseValidated(java.lang.String)
    {
        java.lang.String r0;
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype r1;

        r1 := @this: com.hp.hpl.jena.datatypes.xsd.XSDDatatype;

        r0 := @parameter0: java.lang.String;

        return r0;
    }

    public boolean isValidLiteral(com.hp.hpl.jena.graph.impl.LiteralLabel)
    {
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype r0;
        com.hp.hpl.jena.graph.impl.LiteralLabel r1;
        java.lang.String $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: com.hp.hpl.jena.datatypes.xsd.XSDDatatype;

        r1 := @parameter0: com.hp.hpl.jena.graph.impl.LiteralLabel;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: boolean isBaseTypeCompatible(com.hp.hpl.jena.graph.impl.LiteralLabel)>(r1);

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke r1.<com.hp.hpl.jena.graph.impl.LiteralLabel: java.lang.String getLexicalForm()>();

        $z1 = virtualinvoke r0.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: boolean isValid(java.lang.String)>($r2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean isBaseTypeCompatible(com.hp.hpl.jena.graph.impl.LiteralLabel)
    {
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype r0, $r5, $r7;
        org.apache.xerces.impl.dv.XSSimpleType $r6;
        com.hp.hpl.jena.datatypes.RDFDatatype $r3;
        org.apache.xerces.xs.XSTypeDefinition $r1, $r8;
        com.hp.hpl.jena.graph.impl.LiteralLabel r2;
        java.lang.String $r4;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.hp.hpl.jena.datatypes.xsd.XSDDatatype;

        r2 := @parameter0: com.hp.hpl.jena.graph.impl.LiteralLabel;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: org.apache.xerces.xs.XSTypeDefinition getFoundingType()>();

        $r3 = interfaceinvoke r2.<com.hp.hpl.jena.graph.impl.LiteralLabel: com.hp.hpl.jena.datatypes.RDFDatatype getDatatype()>();

        $z0 = $r3 instanceof com.hp.hpl.jena.datatypes.xsd.XSDDatatype;

        if $z0 == 0 goto label1;

        $r7 = (com.hp.hpl.jena.datatypes.xsd.XSDDatatype) $r3;

        $r8 = specialinvoke $r7.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: org.apache.xerces.xs.XSTypeDefinition getFoundingType()>();

        $z3 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        return $z3;

     label1:
        if $r3 != null goto label2;

        $r4 = interfaceinvoke r2.<com.hp.hpl.jena.graph.impl.LiteralLabel: java.lang.String language()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label2;

        $r5 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDstring>;

        $r6 = $r5.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: org.apache.xerces.impl.dv.XSSimpleType typeDeclaration>;

        $z2 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        return $z2;

     label2:
        return 0;
    }

    private org.apache.xerces.xs.XSTypeDefinition getFoundingType()
    {
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype r0;
        org.apache.xerces.xs.XSTypeDefinition $r1, $r2, r3, r4;

        r0 := @this: com.hp.hpl.jena.datatypes.xsd.XSDDatatype;

        r3 = r0.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: org.apache.xerces.impl.dv.XSSimpleType typeDeclaration>;

        $r1 = interfaceinvoke r3.<org.apache.xerces.xs.XSTypeDefinition: org.apache.xerces.xs.XSTypeDefinition getBaseType()>();

        r4 = $r1;

        if $r1 != null goto label1;

        return r3;

     label1:
        $r2 = interfaceinvoke r4.<org.apache.xerces.xs.XSTypeDefinition: org.apache.xerces.xs.XSTypeDefinition getBaseType()>();

        if $r2 == null goto label2;

        r3 = r4;

        r4 = interfaceinvoke r4.<org.apache.xerces.xs.XSTypeDefinition: org.apache.xerces.xs.XSTypeDefinition getBaseType()>();

        goto label1;

     label2:
        return r3;
    }

    public static java.lang.String trimPlus(java.lang.String)
    {
        int $i0, $i1, $i3;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(43);

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        return r0;

     label1:
        $i1 = $i0 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        return $r1;
    }

    public static void loadXSDSimpleTypes(com.hp.hpl.jena.datatypes.TypeMapper)
    {
        com.hp.hpl.jena.datatypes.TypeMapper r0;
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42;

        r0 := @parameter0: com.hp.hpl.jena.datatypes.TypeMapper;

        $r1 = new com.hp.hpl.jena.datatypes.xsd.XSDDatatype;

        specialinvoke $r1.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: void <init>(java.lang.String)>("anySimpleType");

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r1);

        $r2 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdecimal>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r2);

        $r3 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDinteger>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r3);

        $r4 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDnonPositiveInteger>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r4);

        $r5 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDnonNegativeInteger>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r5);

        $r6 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDpositiveInteger>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r6);

        $r7 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDnegativeInteger>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r7);

        $r8 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDbyte>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r8);

        $r9 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDunsignedByte>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r9);

        $r10 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdouble>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r10);

        $r11 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDfloat>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r11);

        $r12 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDlong>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r12);

        $r13 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDunsignedInt>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r13);

        $r14 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDunsignedShort>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r14);

        $r15 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDunsignedLong>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r15);

        $r16 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDint>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r16);

        $r17 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDshort>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r17);

        $r18 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDboolean>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r18);

        $r19 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDbase64Binary>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r19);

        $r20 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDhexBinary>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r20);

        $r21 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdate>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r21);

        $r22 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDtime>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r22);

        $r23 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdateTime>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r23);

        $r24 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDduration>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r24);

        $r25 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDgYearMonth>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r25);

        $r26 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDgMonthDay>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r26);

        $r27 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDgMonth>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r27);

        $r28 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDgDay>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r28);

        $r29 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDgYear>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r29);

        $r30 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDnormalizedString>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r30);

        $r31 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDstring>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r31);

        $r32 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDanyURI>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r32);

        $r33 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDtoken>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r33);

        $r34 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDName>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r34);

        $r35 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDlanguage>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r35);

        $r36 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDQName>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r36);

        $r37 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDNMTOKEN>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r37);

        $r38 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDID>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r38);

        $r39 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDENTITY>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r39);

        $r40 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDNCName>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r40);

        $r41 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDNOTATION>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r41);

        $r42 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDIDREF>;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r42);

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.Object[] r2;
        java.lang.String[] r19;
        int $i0, $i1, i2;
        org.apache.xerces.impl.dv.SchemaDVFactory $r0;
        org.apache.xerces.util.SymbolHash $r1;
        java.lang.String $r9, $r15, $r18;
        boolean $z0;
        java.io.PrintStream $r5, $r13;
        org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl r11;
        java.lang.Object $r3, $r7, $r10;
        java.lang.StringBuilder $r4, $r6, $r8, $r12, $r14, $r16, $r17;

        r19 := @parameter0: java.lang.String[];

        $r0 = staticinvoke <org.apache.xerces.impl.dv.SchemaDVFactory: org.apache.xerces.impl.dv.SchemaDVFactory getInstance()>();

        $r1 = virtualinvoke $r0.<org.apache.xerces.impl.dv.SchemaDVFactory: org.apache.xerces.util.SymbolHash getBuiltInTypes()>();

        $i0 = virtualinvoke $r1.<org.apache.xerces.util.SymbolHash: int getLength()>();

        r2 = newarray (java.lang.Object)[$i0];

        virtualinvoke $r1.<org.apache.xerces.util.SymbolHash: int getValues(java.lang.Object[],int)>(r2, 0);

        i2 = 0;

     label1:
        $i1 = lengthof r2;

        if i2 >= $i1 goto label4;

        $r3 = r2[i2];

        $z0 = $r3 instanceof org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl;

        if $z0 == 0 goto label2;

        $r10 = r2[i2];

        r11 = (org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl) $r10;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tm.registerDatatype(new XSDDatatype(\"");

        $r15 = virtualinvoke r11.<org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl: java.lang.String getName()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"));");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18);

        goto label3;

     label2:
        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r7 = r2[i2];

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r9);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    public int getHashCode(byte[])
    {
        byte[] r0;
        byte $b1, $b3, $b7;
        int i0, $i2, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13;
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype r1;

        r1 := @this: com.hp.hpl.jena.datatypes.xsd.XSDDatatype;

        r0 := @parameter0: byte[];

        i0 = lengthof r0;

        if i0 != 0 goto label1;

        $i10 = 0;

        goto label2;

     label1:
        $b1 = r0[0];

        $i11 = (int) $b1;

        $i5 = $i11 << 12;

        $i2 = i0 / 2;

        $b3 = r0[$i2];

        $i12 = (int) $b3;

        $i4 = $i12 << 6;

        $i8 = $i5 ^ $i4;

        $i6 = i0 - 1;

        $b7 = r0[$i6];

        $i13 = (int) $b7;

        $i9 = $i8 ^ $i13;

        $i10 = $i9 ^ i0;

     label2:
        return $i10;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.datatypes.xsd.impl.XSDTimeType $r33;
        com.hp.hpl.jena.datatypes.xsd.XSDhexBinary $r30;
        com.hp.hpl.jena.datatypes.xsd.impl.XSDDateTimeType $r34;
        com.hp.hpl.jena.datatypes.xsd.impl.XSDYearMonthType $r39;
        com.hp.hpl.jena.datatypes.xsd.impl.XSDDouble $r1;
        com.hp.hpl.jena.datatypes.xsd.XSDbase64Binary $r31;
        com.hp.hpl.jena.datatypes.xsd.impl.XSDFloat $r0;
        org.apache.xerces.impl.dv.xs.DecimalDV $r41;
        com.hp.hpl.jena.datatypes.xsd.impl.XSDByteType $r5;
        com.hp.hpl.jena.datatypes.xsd.impl.XSDPlainType $r19, $r22, $r28, $r29;
        com.hp.hpl.jena.datatypes.xsd.impl.XSDDateType $r32;
        com.hp.hpl.jena.datatypes.xsd.impl.XSDDurationType $r35;
        com.hp.hpl.jena.datatypes.xsd.impl.XSDDayType $r36;
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype $r16;
        com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseStringType $r17, $r18, $r20, $r21, $r23, $r24, $r25, $r26, $r27;
        com.hp.hpl.jena.datatypes.xsd.impl.XSDMonthDayType $r40;
        com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        com.hp.hpl.jena.datatypes.xsd.impl.XSDYearType $r38;
        com.hp.hpl.jena.datatypes.xsd.impl.XSDMonthType $r37;

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: java.lang.String XSD> = "http://www.w3.org/2001/XMLSchema";

        $r0 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDFloat;

        specialinvoke $r0.<com.hp.hpl.jena.datatypes.xsd.impl.XSDFloat: void <init>(java.lang.String,java.lang.Class)>("float", class "Ljava/lang/Float;");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDfloat> = $r0;

        $r1 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDDouble;

        specialinvoke $r1.<com.hp.hpl.jena.datatypes.xsd.impl.XSDDouble: void <init>(java.lang.String,java.lang.Class)>("double", class "Ljava/lang/Double;");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdouble> = $r1;

        $r2 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType;

        specialinvoke $r2.<com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType: void <init>(java.lang.String,java.lang.Class)>("int", class "Ljava/lang/Integer;");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDint> = $r2;

        $r3 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType;

        specialinvoke $r3.<com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType: void <init>(java.lang.String,java.lang.Class)>("long", class "Ljava/lang/Long;");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDlong> = $r3;

        $r4 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType;

        specialinvoke $r4.<com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType: void <init>(java.lang.String,java.lang.Class)>("short", class "Ljava/lang/Short;");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDshort> = $r4;

        $r5 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDByteType;

        specialinvoke $r5.<com.hp.hpl.jena.datatypes.xsd.impl.XSDByteType: void <init>(java.lang.String,java.lang.Class)>("byte", class "Ljava/lang/Byte;");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDbyte> = $r5;

        $r6 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType;

        specialinvoke $r6.<com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType: void <init>(java.lang.String)>("unsignedByte");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDunsignedByte> = $r6;

        $r7 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType;

        specialinvoke $r7.<com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType: void <init>(java.lang.String)>("unsignedShort");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDunsignedShort> = $r7;

        $r8 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType;

        specialinvoke $r8.<com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType: void <init>(java.lang.String)>("unsignedInt");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDunsignedInt> = $r8;

        $r9 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType;

        specialinvoke $r9.<com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType: void <init>(java.lang.String)>("unsignedLong");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDunsignedLong> = $r9;

        $r10 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType;

        specialinvoke $r10.<com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType: void <init>(java.lang.String,java.lang.Class)>("decimal", class "Ljava/math/BigDecimal;");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdecimal> = $r10;

        $r11 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType;

        specialinvoke $r11.<com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType: void <init>(java.lang.String,java.lang.Class)>("integer", class "Ljava/math/BigInteger;");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDinteger> = $r11;

        $r12 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType;

        specialinvoke $r12.<com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType: void <init>(java.lang.String)>("nonPositiveInteger");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDnonPositiveInteger> = $r12;

        $r13 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType;

        specialinvoke $r13.<com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType: void <init>(java.lang.String)>("nonNegativeInteger");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDnonNegativeInteger> = $r13;

        $r14 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType;

        specialinvoke $r14.<com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType: void <init>(java.lang.String)>("positiveInteger");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDpositiveInteger> = $r14;

        $r15 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType;

        specialinvoke $r15.<com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType: void <init>(java.lang.String)>("negativeInteger");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDnegativeInteger> = $r15;

        $r16 = new com.hp.hpl.jena.datatypes.xsd.XSDDatatype;

        specialinvoke $r16.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: void <init>(java.lang.String,java.lang.Class)>("boolean", class "Ljava/lang/Boolean;");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDboolean> = $r16;

        $r17 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseStringType;

        specialinvoke $r17.<com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseStringType: void <init>(java.lang.String,java.lang.Class)>("string", class "Ljava/lang/String;");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDstring> = $r17;

        $r18 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseStringType;

        specialinvoke $r18.<com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseStringType: void <init>(java.lang.String,java.lang.Class)>("normalizedString", class "Ljava/lang/String;");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDnormalizedString> = $r18;

        $r19 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDPlainType;

        specialinvoke $r19.<com.hp.hpl.jena.datatypes.xsd.impl.XSDPlainType: void <init>(java.lang.String,java.lang.Class)>("anyURI", class "Ljava/net/URI;");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDanyURI> = $r19;

        $r20 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseStringType;

        specialinvoke $r20.<com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseStringType: void <init>(java.lang.String)>("token");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDtoken> = $r20;

        $r21 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseStringType;

        specialinvoke $r21.<com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseStringType: void <init>(java.lang.String)>("Name");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDName> = $r21;

        $r22 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDPlainType;

        specialinvoke $r22.<com.hp.hpl.jena.datatypes.xsd.impl.XSDPlainType: void <init>(java.lang.String)>("QName");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDQName> = $r22;

        $r23 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseStringType;

        specialinvoke $r23.<com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseStringType: void <init>(java.lang.String)>("language");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDlanguage> = $r23;

        $r24 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseStringType;

        specialinvoke $r24.<com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseStringType: void <init>(java.lang.String)>("NMTOKEN");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDNMTOKEN> = $r24;

        $r25 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseStringType;

        specialinvoke $r25.<com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseStringType: void <init>(java.lang.String)>("ENTITY");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDENTITY> = $r25;

        $r26 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseStringType;

        specialinvoke $r26.<com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseStringType: void <init>(java.lang.String)>("ID");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDID> = $r26;

        $r27 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseStringType;

        specialinvoke $r27.<com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseStringType: void <init>(java.lang.String)>("NCName");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDNCName> = $r27;

        $r28 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDPlainType;

        specialinvoke $r28.<com.hp.hpl.jena.datatypes.xsd.impl.XSDPlainType: void <init>(java.lang.String)>("IDREF");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDIDREF> = $r28;

        $r29 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDPlainType;

        specialinvoke $r29.<com.hp.hpl.jena.datatypes.xsd.impl.XSDPlainType: void <init>(java.lang.String)>("NOTATION");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDNOTATION> = $r29;

        $r30 = new com.hp.hpl.jena.datatypes.xsd.XSDhexBinary;

        specialinvoke $r30.<com.hp.hpl.jena.datatypes.xsd.XSDhexBinary: void <init>(java.lang.String)>("hexBinary");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDhexBinary> = $r30;

        $r31 = new com.hp.hpl.jena.datatypes.xsd.XSDbase64Binary;

        specialinvoke $r31.<com.hp.hpl.jena.datatypes.xsd.XSDbase64Binary: void <init>(java.lang.String)>("base64Binary");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDbase64Binary> = $r31;

        $r32 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDDateType;

        specialinvoke $r32.<com.hp.hpl.jena.datatypes.xsd.impl.XSDDateType: void <init>(java.lang.String)>("date");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdate> = $r32;

        $r33 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDTimeType;

        specialinvoke $r33.<com.hp.hpl.jena.datatypes.xsd.impl.XSDTimeType: void <init>(java.lang.String)>("time");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDtime> = $r33;

        $r34 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDDateTimeType;

        specialinvoke $r34.<com.hp.hpl.jena.datatypes.xsd.impl.XSDDateTimeType: void <init>(java.lang.String)>("dateTime");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdateTime> = $r34;

        $r35 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDDurationType;

        specialinvoke $r35.<com.hp.hpl.jena.datatypes.xsd.impl.XSDDurationType: void <init>()>();

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDduration> = $r35;

        $r36 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDDayType;

        specialinvoke $r36.<com.hp.hpl.jena.datatypes.xsd.impl.XSDDayType: void <init>(java.lang.String)>("gDay");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDgDay> = $r36;

        $r37 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDMonthType;

        specialinvoke $r37.<com.hp.hpl.jena.datatypes.xsd.impl.XSDMonthType: void <init>(java.lang.String)>("gMonth");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDgMonth> = $r37;

        $r38 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDYearType;

        specialinvoke $r38.<com.hp.hpl.jena.datatypes.xsd.impl.XSDYearType: void <init>(java.lang.String)>("gYear");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDgYear> = $r38;

        $r39 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDYearMonthType;

        specialinvoke $r39.<com.hp.hpl.jena.datatypes.xsd.impl.XSDYearMonthType: void <init>(java.lang.String)>("gYearMonth");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDgYearMonth> = $r39;

        $r40 = new com.hp.hpl.jena.datatypes.xsd.impl.XSDMonthDayType;

        specialinvoke $r40.<com.hp.hpl.jena.datatypes.xsd.impl.XSDMonthDayType: void <init>(java.lang.String)>("gMonthDay");

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDgMonthDay> = $r40;

        $r41 = new org.apache.xerces.impl.dv.xs.DecimalDV;

        specialinvoke $r41.<org.apache.xerces.impl.dv.xs.DecimalDV: void <init>()>();

        <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: org.apache.xerces.impl.dv.xs.DecimalDV decimalDV> = $r41;

        return;
    }
}
