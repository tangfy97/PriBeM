public class org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder extends java.lang.Object
{
    private static final java.util.logging.Logger LOG;
    private java.lang.String parsedElement;
    private org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory factory;
    private javax.xml.bind.JAXBContext jaxbContext;
    private java.util.Set jaxbClasses;

    public void <init>()
    {
        org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder r0;

        r0 := @this: org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void init()
    {
        byte[] $r5;
        org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineConfigType r79;
        java.lang.Integer $r24, $r33, $r34, $r37, $r38, $r56, $r58, $r80;
        org.w3c.dom.Document $r6;
        org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersIdentifiedType r77;
        java.lang.Exception $r59, $r61, $r70;
        java.lang.StringBuilder $r63, $r64, $r66, $r67, $r68, $r72, $r73, $r75;
        javax.xml.parsers.DocumentBuilderFactory $r0;
        org.apache.cxf.transport.http_jetty.ThreadingParameters $r32, $r53;
        java.util.ArrayList $r15;
        java.lang.String $r4, $r23, $r39, $r40, $r48, $r54, $r65, $r69, $r74, $r76;
        java.lang.RuntimeException $r60, $r62, $r71;
        java.util.TreeMap $r11, $r13;
        javax.xml.parsers.DocumentBuilder $r1;
        org.apache.cxf.transports.http_jetty.configuration.TLSServerParametersIdentifiedType r78;
        org.apache.cxf.configuration.jsse.TLSServerParametersConfig $r29, $r46;
        org.apache.cxf.configuration.security.TLSServerParametersType $r28, $r30, $r47;
        java.io.ByteArrayInputStream $r2;
        org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder r3;
        org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersType $r27, $r31, $r55, $r57;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.List $r12, $r14, $r16, $r42, $r49;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine $r21;
        org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineFactoryConfigType r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Boolean $r22, $r25, $r26, $r35, $r36, $r41;
        java.util.Iterator $r17, $r43, $r50;
        org.w3c.dom.Element $r7;
        java.lang.Object $r8, $r20, $r45, $r52;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory $r10, $r18, $r19, $r44, $r51;

        r3 := @this: org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder;

     label01:
        $r0 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1);

        $r1 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r2 = new java.io.ByteArrayInputStream;

        $r4 = r3.<org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder: java.lang.String parsedElement>;

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5);

        $r6 = virtualinvoke $r1.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r2);

        $r7 = interfaceinvoke $r6.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        $r8 = virtualinvoke r3.<org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder: java.lang.Object getJaxbObject(org.w3c.dom.Element,java.lang.Class)>($r7, class "Lorg/apache/cxf/transports/http_jetty/configuration/JettyHTTPServerEngineFactoryConfigType;");

        r9 = (org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineFactoryConfigType) $r8;

        $r10 = new org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory;

        specialinvoke $r10.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory: void <init>()>();

        r3.<org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory factory> = $r10;

        $r11 = new java.util.TreeMap;

        specialinvoke $r11.<java.util.TreeMap: void <init>()>();

        $r12 = virtualinvoke r9.<org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineFactoryConfigType: java.util.List getIdentifiedThreadingParameters()>();

        if $r12 == null goto label04;

        $r49 = virtualinvoke r9.<org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineFactoryConfigType: java.util.List getIdentifiedThreadingParameters()>();

        $r50 = interfaceinvoke $r49.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z5 = interfaceinvoke $r50.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label03;

        $r52 = interfaceinvoke $r50.<java.util.Iterator: java.lang.Object next()>();

        r77 = (org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersIdentifiedType) $r52;

        $r53 = new org.apache.cxf.transport.http_jetty.ThreadingParameters;

        specialinvoke $r53.<org.apache.cxf.transport.http_jetty.ThreadingParameters: void <init>()>();

        $r54 = virtualinvoke r77.<org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersIdentifiedType: java.lang.String getId()>();

        $r55 = virtualinvoke r77.<org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersIdentifiedType: org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersType getThreadingParameters()>();

        $r56 = virtualinvoke $r55.<org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersType: java.lang.Integer getMaxThreads()>();

        $i4 = virtualinvoke $r56.<java.lang.Integer: int intValue()>();

        virtualinvoke $r53.<org.apache.cxf.transport.http_jetty.ThreadingParameters: void setMaxThreads(int)>($i4);

        $r57 = virtualinvoke r77.<org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersIdentifiedType: org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersType getThreadingParameters()>();

        $r58 = virtualinvoke $r57.<org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersType: java.lang.Integer getMinThreads()>();

        $i5 = virtualinvoke $r58.<java.lang.Integer: int intValue()>();

        virtualinvoke $r53.<org.apache.cxf.transport.http_jetty.ThreadingParameters: void setMinThreads(int)>($i5);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r54, $r53);

        goto label02;

     label03:
        $r51 = r3.<org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory factory>;

        virtualinvoke $r51.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory: void setThreadingParametersMap(java.util.Map)>($r11);

     label04:
        $r13 = new java.util.TreeMap;

        specialinvoke $r13.<java.util.TreeMap: void <init>()>();

        $r14 = virtualinvoke r9.<org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineFactoryConfigType: java.util.List getIdentifiedTLSServerParameters()>();

        if $r14 == null goto label11;

        $r42 = virtualinvoke r9.<org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineFactoryConfigType: java.util.List getIdentifiedTLSServerParameters()>();

        $r43 = interfaceinvoke $r42.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z4 = interfaceinvoke $r43.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label10;

        $r45 = interfaceinvoke $r43.<java.util.Iterator: java.lang.Object next()>();

        r78 = (org.apache.cxf.transports.http_jetty.configuration.TLSServerParametersIdentifiedType) $r45;

     label06:
        $r46 = new org.apache.cxf.configuration.jsse.TLSServerParametersConfig;

        $r47 = virtualinvoke r78.<org.apache.cxf.transports.http_jetty.configuration.TLSServerParametersIdentifiedType: org.apache.cxf.configuration.security.TLSServerParametersType getTlsServerParameters()>();

        specialinvoke $r46.<org.apache.cxf.configuration.jsse.TLSServerParametersConfig: void <init>(org.apache.cxf.configuration.security.TLSServerParametersType)>($r47);

        $r48 = virtualinvoke r78.<org.apache.cxf.transports.http_jetty.configuration.TLSServerParametersIdentifiedType: java.lang.String getId()>();

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r48, $r46);

     label07:
        goto label09;

     label08:
        $r70 := @caughtexception;

        $r71 = new java.lang.RuntimeException;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not configure TLS for id ");

        $r74 = virtualinvoke r78.<org.apache.cxf.transports.http_jetty.configuration.TLSServerParametersIdentifiedType: java.lang.String getId()>();

        $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r71.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r76, $r70);

        throw $r71;

     label09:
        goto label05;

     label10:
        $r44 = r3.<org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory factory>;

        virtualinvoke $r44.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory: void setTlsServerParametersMap(java.util.Map)>($r13);

     label11:
        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        $r16 = virtualinvoke r9.<org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineFactoryConfigType: java.util.List getEngine()>();

        $r17 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z6 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label24;

        $r20 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r79 = (org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineConfigType) $r20;

        $r21 = new org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        specialinvoke $r21.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: void <init>()>();

        $r22 = virtualinvoke r79.<org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineConfigType: java.lang.Boolean isContinuationsEnabled()>();

        if $r22 == null goto label13;

        $r41 = virtualinvoke r79.<org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineConfigType: java.lang.Boolean isContinuationsEnabled()>();

        $z3 = virtualinvoke $r41.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r21.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: void setContinuationsEnabled(boolean)>($z3);

     label13:
        $r23 = virtualinvoke r79.<org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineConfigType: java.lang.String getHost()>();

        if $r23 == null goto label14;

        $r39 = virtualinvoke r79.<org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineConfigType: java.lang.String getHost()>();

        $z2 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r39);

        if $z2 != 0 goto label14;

        $r40 = virtualinvoke r79.<org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineConfigType: java.lang.String getHost()>();

        virtualinvoke $r21.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: void setHost(java.lang.String)>($r40);

     label14:
        $r80 = virtualinvoke r79.<org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineConfigType: java.lang.Integer getMaxIdleTime()>();

        if $r80 == null goto label15;

        $r38 = virtualinvoke r79.<org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineConfigType: java.lang.Integer getMaxIdleTime()>();

        $i3 = virtualinvoke $r38.<java.lang.Integer: int intValue()>();

        virtualinvoke $r21.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: void setMaxIdleTime(int)>($i3);

     label15:
        $r24 = virtualinvoke r79.<org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineConfigType: java.lang.Integer getPort()>();

        if $r24 == null goto label16;

        $r37 = virtualinvoke r79.<org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineConfigType: java.lang.Integer getPort()>();

        $i2 = virtualinvoke $r37.<java.lang.Integer: int intValue()>();

        virtualinvoke $r21.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: void setPort(int)>($i2);

     label16:
        $r25 = virtualinvoke r79.<org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineConfigType: java.lang.Boolean isReuseAddress()>();

        if $r25 == null goto label17;

        $r36 = virtualinvoke r79.<org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineConfigType: java.lang.Boolean isReuseAddress()>();

        $z1 = virtualinvoke $r36.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r21.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: void setReuseAddress(boolean)>($z1);

     label17:
        $r26 = virtualinvoke r79.<org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineConfigType: java.lang.Boolean isSessionSupport()>();

        if $r26 == null goto label18;

        $r35 = virtualinvoke r79.<org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineConfigType: java.lang.Boolean isSessionSupport()>();

        $z0 = virtualinvoke $r35.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r21.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: void setSessionSupport(boolean)>($z0);

     label18:
        $r27 = virtualinvoke r79.<org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineConfigType: org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersType getThreadingParameters()>();

        if $r27 == null goto label19;

        $r31 = virtualinvoke r79.<org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineConfigType: org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersType getThreadingParameters()>();

        $r32 = new org.apache.cxf.transport.http_jetty.ThreadingParameters;

        specialinvoke $r32.<org.apache.cxf.transport.http_jetty.ThreadingParameters: void <init>()>();

        $r33 = virtualinvoke $r31.<org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersType: java.lang.Integer getMaxThreads()>();

        $i0 = virtualinvoke $r33.<java.lang.Integer: int intValue()>();

        virtualinvoke $r32.<org.apache.cxf.transport.http_jetty.ThreadingParameters: void setMaxThreads(int)>($i0);

        $r34 = virtualinvoke $r31.<org.apache.cxf.transports.http_jetty.configuration.ThreadingParametersType: java.lang.Integer getMinThreads()>();

        $i1 = virtualinvoke $r34.<java.lang.Integer: int intValue()>();

        virtualinvoke $r32.<org.apache.cxf.transport.http_jetty.ThreadingParameters: void setMinThreads(int)>($i1);

        virtualinvoke $r21.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: void setThreadingParameters(org.apache.cxf.transport.http_jetty.ThreadingParameters)>($r32);

     label19:
        $r28 = virtualinvoke r79.<org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineConfigType: org.apache.cxf.configuration.security.TLSServerParametersType getTlsServerParameters()>();

        if $r28 == null goto label23;

     label20:
        $r29 = new org.apache.cxf.configuration.jsse.TLSServerParametersConfig;

        $r30 = virtualinvoke r79.<org.apache.cxf.transports.http_jetty.configuration.JettyHTTPServerEngineConfigType: org.apache.cxf.configuration.security.TLSServerParametersType getTlsServerParameters()>();

        specialinvoke $r29.<org.apache.cxf.configuration.jsse.TLSServerParametersConfig: void <init>(org.apache.cxf.configuration.security.TLSServerParametersType)>($r30);

        virtualinvoke $r21.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: void setTlsServerParameters(org.apache.cxf.configuration.jsse.TLSServerParameters)>($r29);

     label21:
        goto label23;

     label22:
        $r61 := @caughtexception;

        $r62 = new java.lang.RuntimeException;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not configure TLS for engine on  ");

        $r65 = virtualinvoke $r21.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: java.lang.String getHost()>();

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i6 = virtualinvoke $r21.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: int getPort()>();

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r62.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r69, $r61);

        throw $r62;

     label23:
        virtualinvoke $r21.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: void finalizeConfig()>();

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r21);

        goto label12;

     label24:
        $r18 = r3.<org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory factory>;

        virtualinvoke $r18.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory: void setEnginesList(java.util.List)>($r15);

        $r19 = r3.<org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory factory>;

        virtualinvoke $r19.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory: void initComplete()>();

     label25:
        goto label27;

     label26:
        $r59 := @caughtexception;

        $r60 = new java.lang.RuntimeException;

        specialinvoke $r60.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Could not process configuration.", $r59);

        throw $r60;

     label27:
        return;

        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Exception from label20 to label21 with label22;
        catch java.lang.Exception from label01 to label25 with label26;
    }

    public void destroy()
    {
        java.util.Set $r2;
        org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder r0;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory $r1;

        r0 := @this: org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory factory>;

        virtualinvoke $r1.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory: void postShutdown()>();

        $r2 = r0.<org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder: java.util.Set jaxbClasses>;

        interfaceinvoke $r2.<java.util.Set: void clear()>();

        r0.<org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder: javax.xml.bind.JAXBContext jaxbContext> = null;

        return;
    }

    public java.lang.String getParsedElement()
    {
        java.lang.String $r1;
        org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder r0;

        r0 := @this: org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder: java.lang.String parsedElement>;

        return $r1;
    }

    public void setParsedElement(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder r0;

        r0 := @this: org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder: java.lang.String parsedElement> = r1;

        return;
    }

    protected java.lang.Object getJaxbObject(org.w3c.dom.Element, java.lang.Class)
    {
        javax.xml.bind.Unmarshaller $r3;
        javax.xml.bind.JAXBElement r6;
        java.util.logging.Logger $r10;
        javax.xml.bind.JAXBException $r8;
        org.w3c.dom.Element r4;
        org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder r0;
        java.lang.Class r1;
        java.lang.Object $r5, $r7;
        java.lang.StringBuilder $r9, $r11, $r12;
        java.lang.String $r13;
        javax.xml.bind.JAXBContext $r2;

        r0 := @this: org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder;

        r4 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.Class;

     label1:
        $r2 = virtualinvoke r0.<org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder: javax.xml.bind.JAXBContext getContext(java.lang.Class)>(r1);

        $r3 = virtualinvoke $r2.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>();

        $r5 = interfaceinvoke $r3.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(org.w3c.dom.Node)>(r4);

        r6 = (javax.xml.bind.JAXBElement) $r5;

        $r7 = virtualinvoke r6.<javax.xml.bind.JAXBElement: java.lang.Object getValue()>();

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        $r10 = <org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder: java.util.logging.Logger LOG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse property due to ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.util.logging.Logger: void warning(java.lang.String)>($r13);

        return null;

        catch javax.xml.bind.JAXBException from label1 to label2 with label3;
    }

    protected synchronized javax.xml.bind.JAXBContext getContext(java.lang.Class)
    {
        java.util.HashSet $r18;
        org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder r0;
        java.lang.String $r3, $r10, $r11;
        javax.xml.bind.JAXBContext $r1, $r4, $r23;
        boolean $z0, $z1, $z2, z3;
        java.util.Iterator $r5;
        java.lang.Package $r8, $r9;
        java.util.Set $r13, $r14, $r15, $r19, $r22;
        java.lang.RuntimeException $r17;
        org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas $r21;
        javax.xml.bind.JAXBException $r16;
        java.lang.Class r2, r7, $r12;
        java.lang.Object $r6;
        java.lang.ClassLoader $r20;

        r0 := @this: org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder;

        r2 := @parameter0: java.lang.Class;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder: javax.xml.bind.JAXBContext jaxbContext>;

        if $r1 == null goto label01;

        $r14 = r0.<org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder: java.util.Set jaxbClasses>;

        if $r14 == null goto label01;

        $r15 = r0.<org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder: java.util.Set jaxbClasses>;

        $z2 = interfaceinvoke $r15.<java.util.Set: boolean contains(java.lang.Object)>(r2);

        if $z2 != 0 goto label11;

     label01:
        $r18 = new java.util.HashSet;

        specialinvoke $r18.<java.util.HashSet: void <init>()>();

        $r19 = r0.<org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder: java.util.Set jaxbClasses>;

        if $r19 == null goto label02;

        $r13 = r0.<org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder: java.util.Set jaxbClasses>;

        interfaceinvoke $r18.<java.util.Set: boolean addAll(java.util.Collection)>($r13);

     label02:
        $r3 = staticinvoke <org.apache.cxf.common.util.PackageUtils: java.lang.String getPackageName(java.lang.Class)>(r2);

        if r2 != null goto label03;

        $r12 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r20 = virtualinvoke $r12.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        goto label04;

     label03:
        $r20 = virtualinvoke r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label04:
        staticinvoke <org.apache.cxf.common.jaxb.JAXBContextCache: void addPackage(java.util.Set,java.lang.String,java.lang.ClassLoader)>($r18, $r3, $r20);

        if r2 == null goto label08;

        z3 = 0;

        $r5 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.Class) $r6;

        $r8 = virtualinvoke r7.<java.lang.Class: java.lang.Package getPackage()>();

        $r9 = virtualinvoke r2.<java.lang.Class: java.lang.Package getPackage()>();

        if $r8 != $r9 goto label06;

        $r10 = "ObjectFactory";

        $r11 = virtualinvoke r7.<java.lang.Class: java.lang.String getSimpleName()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z1 == 0 goto label06;

        z3 = 1;

     label06:
        goto label05;

     label07:
        if z3 != 0 goto label08;

        interfaceinvoke $r18.<java.util.Set: boolean add(java.lang.Object)>(r2);

     label08:
        staticinvoke <org.apache.cxf.common.jaxb.JAXBContextCache: void scanPackages(java.util.Set)>($r18);

        $r21 = staticinvoke <org.apache.cxf.common.jaxb.JAXBContextCache: org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)>($r18, null, null, null, 0);

        $r22 = virtualinvoke $r21.<org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas: java.util.Set getClasses()>();

        r0.<org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder: java.util.Set jaxbClasses> = $r22;

        $r23 = virtualinvoke $r21.<org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas: javax.xml.bind.JAXBContext getContext()>();

        r0.<org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder: javax.xml.bind.JAXBContext jaxbContext> = $r23;

     label09:
        goto label11;

     label10:
        $r16 := @caughtexception;

        $r17 = new java.lang.RuntimeException;

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r16);

        throw $r17;

     label11:
        $r4 = r0.<org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder: javax.xml.bind.JAXBContext jaxbContext>;

        return $r4;

        catch javax.xml.bind.JAXBException from label01 to label09 with label10;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/transport/http_jetty/blueprint/JettyHTTPServerEngineFactoryHolder;");

        <org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
