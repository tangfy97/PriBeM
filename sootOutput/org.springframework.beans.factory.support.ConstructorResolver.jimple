class org.springframework.beans.factory.support.ConstructorResolver extends java.lang.Object
{
    private static final java.lang.String CONSTRUCTOR_PROPERTIES_CLASS_NAME;
    private static final boolean constructorPropertiesAnnotationAvailable;
    private final org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.ClassLoader $r1;
        boolean $z0;

        <org.springframework.beans.factory.support.ConstructorResolver: java.lang.String CONSTRUCTOR_PROPERTIES_CLASS_NAME> = "java.beans.ConstructorProperties";

        $r0 = class "Lorg/springframework/beans/factory/support/ConstructorResolver;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $z0 = staticinvoke <org.springframework.util.ClassUtils: boolean isPresent(java.lang.String,java.lang.ClassLoader)>("java.beans.ConstructorProperties", $r1);

        <org.springframework.beans.factory.support.ConstructorResolver: boolean constructorPropertiesAnnotationAvailable> = $z0;

        return;
    }

    public void <init>(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory)
    {
        org.springframework.beans.factory.support.ConstructorResolver r0;
        org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory r1;

        r0 := @this: org.springframework.beans.factory.support.ConstructorResolver;

        r1 := @parameter0: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory> = r1;

        return;
    }

    public org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition, java.lang.reflect.Constructor[], java.lang.Object[])
    {
        java.security.AccessControlContext $r13;
        org.springframework.core.ParameterNameDiscoverer $r22;
        java.lang.Exception r76;
        org.springframework.beans.factory.support.ConstructorResolver$1 $r11;
        java.lang.StringBuilder $r25, $r26, $r27, $r28, $r29, $r45, $r47, $r48, $r49, $r50, $r51, $r56, $r58, $r59, $r61, $r62;
        java.lang.ClassLoader $r60;
        org.springframework.beans.factory.support.RootBeanDefinition r4;
        java.lang.Throwable $r34, $r53, $r64;
        java.lang.Object[] r3, r67, r68;
        java.lang.reflect.Constructor r17, r65;
        org.springframework.beans.factory.config.ConstructorArgumentValues $r15, $r16, r69;
        org.springframework.beans.factory.BeanCreationException $r23, $r31, $r35, $r54;
        java.lang.String r9, $r24, $r30, $r32, $r36, $r52, $r55, $r57, $r63;
        java.util.LinkedHashSet $r20, r72;
        java.lang.Class[] $r18;
        org.springframework.beans.BeanWrapperImpl $r0;
        org.springframework.beans.factory.support.ConstructorResolver r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8;
        java.lang.String[] r74;
        org.springframework.beans.factory.UnsatisfiedDependencyException $r37;
        java.lang.reflect.Constructor[] r14, r70, $r71;
        org.springframework.beans.factory.support.InstantiationStrategy $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, $i12, $i13;
        java.util.LinkedList $r40, r73;
        java.util.Iterator $r41;
        org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder $r19, r66, r75;
        java.lang.SecurityManager $r77;
        org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory $r2, $r7, $r10, $r12, $r21, $r38, $r43, $r44;
        java.lang.Object $r5, $r6, $r42, r78;
        java.lang.Class $r33;
        org.apache.commons.logging.Log $r39, $r46;

        r1 := @this: org.springframework.beans.factory.support.ConstructorResolver;

        r9 := @parameter0: java.lang.String;

        r4 := @parameter1: org.springframework.beans.factory.support.RootBeanDefinition;

        r14 := @parameter2: java.lang.reflect.Constructor[];

        r3 := @parameter3: java.lang.Object[];

        $r0 = new org.springframework.beans.BeanWrapperImpl;

        specialinvoke $r0.<org.springframework.beans.BeanWrapperImpl: void <init>()>();

        $r2 = r1.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        virtualinvoke $r2.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void initBeanWrapper(org.springframework.beans.BeanWrapper)>($r0);

        r65 = null;

        r66 = null;

        r67 = (java.lang.Object[]) null;

        if r3 == null goto label01;

        r67 = r3;

        goto label08;

     label01:
        r68 = (java.lang.Object[]) null;

        $r5 = r4.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.Object constructorArgumentLock>;

        entermonitor $r5;

     label02:
        $r6 = r4.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.Object resolvedConstructorOrFactoryMethod>;

        r65 = (java.lang.reflect.Constructor) $r6;

        if r65 == null goto label03;

        $z4 = r4.<org.springframework.beans.factory.support.RootBeanDefinition: boolean constructorArgumentsResolved>;

        if $z4 == 0 goto label03;

        r67 = r4.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.Object[] resolvedConstructorArguments>;

        if r67 != null goto label03;

        r68 = r4.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.Object[] preparedConstructorArguments>;

     label03:
        exitmonitor $r5;

     label04:
        goto label07;

     label05:
        $r64 := @caughtexception;

        exitmonitor $r5;

     label06:
        throw $r64;

     label07:
        if r68 == null goto label08;

        r67 = specialinvoke r1.<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object[] resolvePreparedArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,java.lang.reflect.Member,java.lang.Object[])>(r9, r4, $r0, r65, r68);

     label08:
        if r65 != null goto label45;

        if r14 != null goto label09;

        $i6 = virtualinvoke r4.<org.springframework.beans.factory.support.RootBeanDefinition: int getResolvedAutowireMode()>();

        if $i6 == 3 goto label09;

        $z7 = 0;

        goto label10;

     label09:
        $z7 = 1;

     label10:
        z8 = $z7;

        r69 = null;

        if r3 == null goto label11;

        i9 = lengthof r3;

        goto label12;

     label11:
        $r15 = virtualinvoke r4.<org.springframework.beans.factory.support.RootBeanDefinition: org.springframework.beans.factory.config.ConstructorArgumentValues getConstructorArgumentValues()>();

        $r16 = new org.springframework.beans.factory.config.ConstructorArgumentValues;

        specialinvoke $r16.<org.springframework.beans.factory.config.ConstructorArgumentValues: void <init>()>();

        r69 = $r16;

        i9 = specialinvoke r1.<org.springframework.beans.factory.support.ConstructorResolver: int resolveConstructorArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.factory.config.ConstructorArgumentValues)>(r9, r4, $r0, $r15, $r16);

     label12:
        r70 = r14;

        if r14 != null goto label18;

        $r33 = virtualinvoke r4.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.Class getBeanClass()>();

     label13:
        $z3 = virtualinvoke r4.<org.springframework.beans.factory.support.RootBeanDefinition: boolean isNonPublicAccessAllowed()>();

        if $z3 == 0 goto label14;

        $r71 = virtualinvoke $r33.<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>();

        goto label15;

     label14:
        $r71 = virtualinvoke $r33.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>();

     label15:
        r70 = $r71;

     label16:
        goto label18;

     label17:
        $r53 := @caughtexception;

        $r54 = new org.springframework.beans.factory.BeanCreationException;

        $r55 = virtualinvoke r4.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String getResourceDescription()>();

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>(java.lang.String)>("Resolution of declared constructors on bean Class [");

        $r57 = virtualinvoke $r33.<java.lang.Class: java.lang.String getName()>();

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] from ClassLoader [");

        $r60 = virtualinvoke $r33.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] failed");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r54.<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($r55, r9, $r63, $r53);

        throw $r54;

     label18:
        staticinvoke <org.springframework.beans.factory.support.AutowireUtils: void sortConstructors(java.lang.reflect.Constructor[])>(r70);

        i10 = 2147483647;

        r72 = null;

        r73 = null;

        i11 = 0;

        goto label41;

     label19:
        r17 = r70[i11];

        $r18 = virtualinvoke r17.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        if r65 == null goto label20;

        $i5 = lengthof r67;

        $i4 = lengthof $r18;

        if $i5 <= $i4 goto label20;

        goto label42;

     label20:
        $i0 = lengthof $r18;

        if $i0 >= i9 goto label21;

        goto label40;

     label21:
        if r69 == null goto label33;

     label22:
        r74 = (java.lang.String[]) null;

        $z1 = <org.springframework.beans.factory.support.ConstructorResolver: boolean constructorPropertiesAnnotationAvailable>;

        if $z1 == 0 goto label23;

        $i3 = lengthof $r18;

        r74 = staticinvoke <org.springframework.beans.factory.support.ConstructorResolver$ConstructorPropertiesChecker: java.lang.String[] evaluateAnnotation(java.lang.reflect.Constructor,int)>(r17, $i3);

     label23:
        if r74 != null goto label24;

        $r21 = r1.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        $r22 = virtualinvoke $r21.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.core.ParameterNameDiscoverer getParameterNameDiscoverer()>();

        if $r22 == null goto label24;

        r74 = interfaceinvoke $r22.<org.springframework.core.ParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Constructor)>(r17);

     label24:
        r75 = specialinvoke r1.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>(r9, r4, r69, $r0, $r18, r74, r17, z8);

     label25:
        goto label35;

     label26:
        $r37 := @caughtexception;

        $r38 = r1.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        $r39 = $r38.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.apache.commons.logging.Log logger>;

        $z5 = interfaceinvoke $r39.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();

        if $z5 == 0 goto label27;

        $r44 = r1.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        $r46 = $r44.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.apache.commons.logging.Log logger>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>("Ignoring constructor [");

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] of bean \'");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r37);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r46.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r52);

     label27:
        $i7 = lengthof r70;

        $i8 = $i7 - 1;

        if i11 != $i8 goto label31;

        if r65 != null goto label31;

        if r73 == null goto label30;

        $r41 = interfaceinvoke r73.<java.util.List: java.util.Iterator iterator()>();

        goto label29;

     label28:
        $r42 = interfaceinvoke $r41.<java.util.Iterator: java.lang.Object next()>();

        r76 = (java.lang.Exception) $r42;

        $r43 = r1.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        virtualinvoke $r43.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void onSuppressedException(java.lang.Exception)>(r76);

     label29:
        $z6 = interfaceinvoke $r41.<java.util.Iterator: boolean hasNext()>();

        if $z6 != 0 goto label28;

     label30:
        throw $r37;

     label31:
        if r73 != null goto label32;

        $r40 = new java.util.LinkedList;

        specialinvoke $r40.<java.util.LinkedList: void <init>()>();

        r73 = $r40;

     label32:
        interfaceinvoke r73.<java.util.List: boolean add(java.lang.Object)>($r37);

        goto label40;

     label33:
        $i2 = lengthof $r18;

        $i1 = lengthof r3;

        if $i2 == $i1 goto label34;

        goto label40;

     label34:
        $r19 = new org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder;

        specialinvoke $r19.<org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder: void <init>(java.lang.Object[])>(r3);

        r75 = $r19;

     label35:
        $z0 = virtualinvoke r4.<org.springframework.beans.factory.support.RootBeanDefinition: boolean isLenientConstructorResolution()>();

        if $z0 == 0 goto label36;

        $i12 = virtualinvoke r75.<org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder: int getTypeDifferenceWeight(java.lang.Class[])>($r18);

        goto label37;

     label36:
        $i12 = virtualinvoke r75.<org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder: int getAssignabilityWeight(java.lang.Class[])>($r18);

     label37:
        if $i12 >= i10 goto label38;

        r65 = r17;

        r66 = r75;

        r67 = r75.<org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder: java.lang.Object[] arguments>;

        i10 = $i12;

        r72 = null;

        goto label40;

     label38:
        if r65 == null goto label40;

        if $i12 != i10 goto label40;

        if r72 != null goto label39;

        $r20 = new java.util.LinkedHashSet;

        specialinvoke $r20.<java.util.LinkedHashSet: void <init>()>();

        r72 = $r20;

        interfaceinvoke $r20.<java.util.Set: boolean add(java.lang.Object)>(r65);

     label39:
        interfaceinvoke r72.<java.util.Set: boolean add(java.lang.Object)>(r17);

     label40:
        i11 = i11 + 1;

     label41:
        $i13 = lengthof r70;

        if i11 < $i13 goto label19;

     label42:
        if r65 != null goto label43;

        $r31 = new org.springframework.beans.factory.BeanCreationException;

        $r32 = virtualinvoke r4.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String getResourceDescription()>();

        specialinvoke $r31.<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r32, r9, "Could not resolve matching constructor (hint: specify index/type/name arguments for simple parameters to avoid type ambiguities)");

        throw $r31;

     label43:
        if r72 == null goto label44;

        $z2 = virtualinvoke r4.<org.springframework.beans.factory.support.RootBeanDefinition: boolean isLenientConstructorResolution()>();

        if $z2 != 0 goto label44;

        $r23 = new org.springframework.beans.factory.BeanCreationException;

        $r24 = virtualinvoke r4.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String getResourceDescription()>();

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>("Ambiguous constructor matches found in bean \'");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(hint: specify index/type/name arguments for simple parameters to avoid type ambiguities): ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r72);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r24, r9, $r30);

        throw $r23;

     label44:
        if r3 != null goto label45;

        virtualinvoke r66.<org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder: void storeCache(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)>(r4, r65);

     label45:
        $r77 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if $r77 == null goto label46;

        $r11 = new org.springframework.beans.factory.support.ConstructorResolver$1;

        specialinvoke $r11.<org.springframework.beans.factory.support.ConstructorResolver$1: void <init>(org.springframework.beans.factory.support.ConstructorResolver,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.reflect.Constructor,java.lang.Object[])>(r1, r4, r9, r65, r67);

        $r12 = r1.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        $r13 = virtualinvoke $r12.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.security.AccessControlContext getAccessControlContext()>();

        r78 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext)>($r11, $r13);

        goto label47;

     label46:
        $r7 = r1.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        $r8 = virtualinvoke $r7.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.support.InstantiationStrategy getInstantiationStrategy()>();

        $r10 = r1.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        r78 = interfaceinvoke $r8.<org.springframework.beans.factory.support.InstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.reflect.Constructor,java.lang.Object[])>(r4, r9, $r10, r65, r67);

     label47:
        virtualinvoke $r0.<org.springframework.beans.BeanWrapperImpl: void setWrappedInstance(java.lang.Object)>(r78);

     label48:
        return $r0;

     label49:
        $r34 := @caughtexception;

        $r35 = new org.springframework.beans.factory.BeanCreationException;

        $r36 = virtualinvoke r4.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String getResourceDescription()>();

        specialinvoke $r35.<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($r36, r9, "Instantiation of bean failed", $r34);

        throw $r35;

        catch java.lang.Throwable from label02 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label13 to label16 with label17;
        catch org.springframework.beans.factory.UnsatisfiedDependencyException from label22 to label25 with label26;
        catch java.lang.Throwable from label45 to label48 with label49;
    }

    public void resolveFactoryMethodIfPossible(org.springframework.beans.factory.support.RootBeanDefinition)
    {
        org.springframework.beans.factory.support.RootBeanDefinition r0;
        java.lang.Throwable $r10;
        java.lang.reflect.Method[] $r3;
        org.springframework.beans.factory.support.ConstructorResolver r7;
        int $i0, i1;
        java.lang.String $r1, $r9;
        java.lang.reflect.Method r12, r13;
        boolean $z0, $z1;
        java.lang.Class[] $r4, $r5;
        org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory $r8;
        java.lang.Class $r2, r11;
        java.lang.Object $r6;

        r7 := @this: org.springframework.beans.factory.support.ConstructorResolver;

        r0 := @parameter0: org.springframework.beans.factory.support.RootBeanDefinition;

        $r1 = virtualinvoke r0.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String getFactoryBeanName()>();

        if $r1 == null goto label01;

        $r8 = r7.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        $r9 = virtualinvoke r0.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String getFactoryBeanName()>();

        r11 = virtualinvoke $r8.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class getType(java.lang.String)>($r9);

        goto label02;

     label01:
        r11 = virtualinvoke r0.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.Class getBeanClass()>();

     label02:
        $r2 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class getUserClass(java.lang.Class)>(r11);

        $r3 = staticinvoke <org.springframework.util.ReflectionUtils: java.lang.reflect.Method[] getAllDeclaredMethods(java.lang.Class)>($r2);

        r12 = null;

        $i0 = lengthof $r3;

        i1 = 0;

        goto label06;

     label03:
        r13 = $r3[i1];

        $z0 = virtualinvoke r0.<org.springframework.beans.factory.support.RootBeanDefinition: boolean isFactoryMethod(java.lang.reflect.Method)>(r13);

        if $z0 == 0 goto label05;

        if r12 != null goto label04;

        r12 = r13;

        goto label05;

     label04:
        $r4 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r5 = virtualinvoke r13.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r4, $r5);

        if $z1 != 0 goto label05;

        r12 = null;

        goto label07;

     label05:
        i1 = i1 + 1;

     label06:
        if i1 < $i0 goto label03;

     label07:
        $r6 = r0.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.Object constructorArgumentLock>;

        entermonitor $r6;

     label08:
        r0.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.Object resolvedConstructorOrFactoryMethod> = r12;

        exitmonitor $r6;

     label09:
        goto label12;

     label10:
        $r10 := @caughtexception;

        exitmonitor $r6;

     label11:
        throw $r10;

     label12:
        return;

        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition, java.lang.Object[])
    {
        java.util.Map $r67;
        org.springframework.beans.factory.support.ConstructorResolver$3 $r27;
        java.lang.StringBuilder $r32, $r33, $r34, $r35, $r36, $r40, $r42, $r43, $r47, $r49, $r50, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r62, $r64, $r65, $r83, $r84, $r85, $r100, $r102, $r103, $r104, $r105, $r106;
        org.springframework.beans.factory.support.ConstructorResolver$2 $r75;
        java.lang.Object[] r5, $r13, r113, r114;
        org.springframework.beans.factory.config.ConstructorArgumentValues $r14, $r15, r121;
        org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder r129;
        java.lang.Class[] $r17;
        org.springframework.beans.factory.BeanDefinitionStoreException $r77, $r87;
        java.lang.reflect.Method[] $r12, r115, $r116, r118, r120;
        org.springframework.beans.factory.support.ConstructorResolver r1;
        java.lang.reflect.Method r111, r119, r124;
        java.util.Collection $r68;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, $i14, $i15;
        org.springframework.beans.factory.support.InstantiationStrategy $r25;
        java.util.LinkedList $r95, r123;
        java.lang.Object $r6, $r7, $r70, $r72, $r76, $r80, $r97, r109, r135;
        java.lang.Class $r8, $r22, $r23, $r73, r110;
        org.springframework.core.ParameterNameDiscoverer $r21;
        java.security.AccessControlContext $r29;
        java.lang.Exception r127;
        org.springframework.beans.factory.support.RootBeanDefinition r3;
        java.lang.Throwable $r89, $r108;
        java.util.ArrayList $r66, $r117;
        org.springframework.beans.factory.BeanCreationException $r30, $r38, $r45, $r81, $r90;
        java.lang.String $r4, $r10, $r11, r16, $r31, $r37, $r39, $r41, $r44, $r46, $r48, $r51, $r61, $r63, $r71, $r74, $r78, $r82, $r86, $r88, $r91, $r107, r128, $r130, $r131, $r132, $r133;
        java.util.LinkedHashSet $r19, r122;
        org.springframework.beans.BeanWrapperImpl $r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, $z13, z14, z16, $z17, z18, z19, $z20, $z21;
        java.lang.String[] r125;
        org.springframework.beans.factory.UnsatisfiedDependencyException $r92;
        java.util.Iterator $r69, $r96;
        java.lang.SecurityManager $r9, $r134;
        org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder $r18, r112, r126;
        org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory $r2, $r20, $r24, $r26, $r28, $r79, $r93, $r98, $r99;
        org.apache.commons.logging.Log $r94, $r101;

        r1 := @this: org.springframework.beans.factory.support.ConstructorResolver;

        r16 := @parameter0: java.lang.String;

        r3 := @parameter1: org.springframework.beans.factory.support.RootBeanDefinition;

        r5 := @parameter2: java.lang.Object[];

        $r0 = new org.springframework.beans.BeanWrapperImpl;

        specialinvoke $r0.<org.springframework.beans.BeanWrapperImpl: void <init>()>();

        $r2 = r1.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        virtualinvoke $r2.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void initBeanWrapper(org.springframework.beans.BeanWrapper)>($r0);

        $r4 = virtualinvoke r3.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String getFactoryBeanName()>();

        if $r4 == null goto label03;

        $z9 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r16);

        if $z9 == 0 goto label01;

        $r87 = new org.springframework.beans.factory.BeanDefinitionStoreException;

        $r88 = virtualinvoke r3.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String getResourceDescription()>();

        specialinvoke $r87.<org.springframework.beans.factory.BeanDefinitionStoreException: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r88, r16, "factory-bean reference points back to the same bean definition");

        throw $r87;

     label01:
        $r79 = r1.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        $r80 = virtualinvoke $r79.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object getBean(java.lang.String)>($r4);

        r109 = $r80;

        if $r80 != null goto label02;

        $r81 = new org.springframework.beans.factory.BeanCreationException;

        $r82 = virtualinvoke r3.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String getResourceDescription()>();

        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>(java.lang.String)>("factory-bean \'");

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' returned null");

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r81.<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r82, r16, $r86);

        throw $r81;

     label02:
        r110 = virtualinvoke $r80.<java.lang.Object: java.lang.Class getClass()>();

        z12 = 0;

        z19 = 0;

        z18 = 0;

        goto label05;

     label03:
        $z0 = virtualinvoke r3.<org.springframework.beans.factory.support.RootBeanDefinition: boolean hasBeanClass()>();

        if $z0 != 0 goto label04;

        $r77 = new org.springframework.beans.factory.BeanDefinitionStoreException;

        $r78 = virtualinvoke r3.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String getResourceDescription()>();

        specialinvoke $r77.<org.springframework.beans.factory.BeanDefinitionStoreException: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r78, r16, "bean definition declares neither a bean class nor a factory-bean reference");

        throw $r77;

     label04:
        r109 = null;

        r110 = virtualinvoke r3.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.Class getBeanClass()>();

        z12 = 1;

        z19 = 1;

        z18 = 1;

     label05:
        r111 = null;

        r112 = null;

        r113 = (java.lang.Object[]) null;

        if r5 == null goto label06;

        r113 = r5;

        goto label13;

     label06:
        r114 = (java.lang.Object[]) null;

        $r6 = r3.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.Object constructorArgumentLock>;

        entermonitor $r6;

     label07:
        $r7 = r3.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.Object resolvedConstructorOrFactoryMethod>;

        r111 = (java.lang.reflect.Method) $r7;

        if r111 == null goto label08;

        $z8 = r3.<org.springframework.beans.factory.support.RootBeanDefinition: boolean constructorArgumentsResolved>;

        if $z8 == 0 goto label08;

        r113 = r3.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.Object[] resolvedConstructorArguments>;

        if r113 != null goto label08;

        r114 = r3.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.Object[] preparedConstructorArguments>;

     label08:
        exitmonitor $r6;

     label09:
        goto label12;

     label10:
        $r108 := @caughtexception;

        exitmonitor $r6;

     label11:
        throw $r108;

     label12:
        if r114 == null goto label13;

        r113 = specialinvoke r1.<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object[] resolvePreparedArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,java.lang.reflect.Member,java.lang.Object[])>(r16, r3, $r0, r111, r114);

     label13:
        if r111 == null goto label14;

        if r113 != null goto label62;

     label14:
        $r8 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class getUserClass(java.lang.Class)>(r110);

        $r9 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if $r9 == null goto label15;

        $r75 = new org.springframework.beans.factory.support.ConstructorResolver$2;

        specialinvoke $r75.<org.springframework.beans.factory.support.ConstructorResolver$2: void <init>(org.springframework.beans.factory.support.ConstructorResolver,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class)>(r1, r3, $r8);

        $r76 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r75);

        r115 = (java.lang.reflect.Method[]) $r76;

        goto label18;

     label15:
        $z1 = virtualinvoke r3.<org.springframework.beans.factory.support.RootBeanDefinition: boolean isNonPublicAccessAllowed()>();

        if $z1 == 0 goto label16;

        $r116 = staticinvoke <org.springframework.util.ReflectionUtils: java.lang.reflect.Method[] getAllDeclaredMethods(java.lang.Class)>($r8);

        goto label17;

     label16:
        $r116 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

     label17:
        r115 = $r116;

     label18:
        $r117 = new java.util.ArrayList;

        specialinvoke $r117.<java.util.ArrayList: void <init>()>();

        r118 = r115;

        $i9 = lengthof r115;

        i10 = 0;

        goto label21;

     label19:
        r119 = r118[i10];

        $i0 = virtualinvoke r119.<java.lang.reflect.Method: int getModifiers()>();

        $z2 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        if $z2 != z18 goto label20;

        $r10 = virtualinvoke r119.<java.lang.reflect.Method: java.lang.String getName()>();

        $r11 = virtualinvoke r3.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String getFactoryMethodName()>();

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z3 == 0 goto label20;

        $z4 = virtualinvoke r3.<org.springframework.beans.factory.support.RootBeanDefinition: boolean isFactoryMethod(java.lang.reflect.Method)>(r119);

        if $z4 == 0 goto label20;

        interfaceinvoke $r117.<java.util.List: boolean add(java.lang.Object)>(r119);

     label20:
        i10 = i10 + 1;

     label21:
        if i10 < $i9 goto label19;

        $i1 = interfaceinvoke $r117.<java.util.List: int size()>();

        $r12 = newarray (java.lang.reflect.Method)[$i1];

        $r13 = interfaceinvoke $r117.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r12);

        r120 = (java.lang.reflect.Method[]) $r13;

        staticinvoke <org.springframework.beans.factory.support.AutowireUtils: void sortFactoryMethods(java.lang.reflect.Method[])>(r120);

        r121 = null;

        $i2 = virtualinvoke r3.<org.springframework.beans.factory.support.RootBeanDefinition: int getResolvedAutowireMode()>();

        if $i2 != 3 goto label22;

        $z13 = 1;

        goto label23;

     label22:
        $z13 = 0;

     label23:
        z14 = $z13;

        i11 = 2147483647;

        r122 = null;

        if r5 == null goto label24;

        i12 = lengthof r5;

        goto label25;

     label24:
        $r14 = virtualinvoke r3.<org.springframework.beans.factory.support.RootBeanDefinition: org.springframework.beans.factory.config.ConstructorArgumentValues getConstructorArgumentValues()>();

        $r15 = new org.springframework.beans.factory.config.ConstructorArgumentValues;

        specialinvoke $r15.<org.springframework.beans.factory.config.ConstructorArgumentValues: void <init>()>();

        r121 = $r15;

        i12 = specialinvoke r1.<org.springframework.beans.factory.support.ConstructorResolver: int resolveConstructorArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.factory.config.ConstructorArgumentValues)>(r16, r3, $r0, $r14, $r15);

     label25:
        r123 = null;

        i13 = 0;

        goto label45;

     label26:
        r124 = r120[i13];

        $r17 = virtualinvoke r124.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i3 = lengthof $r17;

        if $i3 < i12 goto label44;

        if r121 == null goto label37;

     label27:
        r125 = (java.lang.String[]) null;

        $r20 = r1.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        $r21 = virtualinvoke $r20.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.core.ParameterNameDiscoverer getParameterNameDiscoverer()>();

        if $r21 == null goto label28;

        r125 = interfaceinvoke $r21.<org.springframework.core.ParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Method)>(r124);

     label28:
        r126 = specialinvoke r1.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>(r16, r3, r121, $r0, $r17, r125, r124, z14);

     label29:
        goto label39;

     label30:
        $r92 := @caughtexception;

        $r93 = r1.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        $r94 = $r93.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.apache.commons.logging.Log logger>;

        $z10 = interfaceinvoke $r94.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();

        if $z10 == 0 goto label31;

        $r99 = r1.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        $r101 = $r99.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.apache.commons.logging.Log logger>;

        $r100 = new java.lang.StringBuilder;

        specialinvoke $r100.<java.lang.StringBuilder: void <init>(java.lang.String)>("Ignoring factory method [");

        $r102 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r124);

        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] of bean \'");

        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r92);

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r101.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r107);

     label31:
        $i7 = lengthof r120;

        $i8 = $i7 - 1;

        if i13 != $i8 goto label35;

        if r112 != null goto label35;

        if r123 == null goto label34;

        $r96 = interfaceinvoke r123.<java.util.List: java.util.Iterator iterator()>();

        goto label33;

     label32:
        $r97 = interfaceinvoke $r96.<java.util.Iterator: java.lang.Object next()>();

        r127 = (java.lang.Exception) $r97;

        $r98 = r1.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        virtualinvoke $r98.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void onSuppressedException(java.lang.Exception)>(r127);

     label33:
        $z11 = interfaceinvoke $r96.<java.util.Iterator: boolean hasNext()>();

        if $z11 != 0 goto label32;

     label34:
        throw $r92;

     label35:
        if r123 != null goto label36;

        $r95 = new java.util.LinkedList;

        specialinvoke $r95.<java.util.LinkedList: void <init>()>();

        r123 = $r95;

     label36:
        interfaceinvoke r123.<java.util.List: boolean add(java.lang.Object)>($r92);

        goto label44;

     label37:
        $i5 = lengthof $r17;

        $i4 = lengthof r5;

        if $i5 == $i4 goto label38;

        goto label44;

     label38:
        $r18 = new org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder;

        specialinvoke $r18.<org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder: void <init>(java.lang.Object[])>(r5);

        r126 = $r18;

     label39:
        $z5 = virtualinvoke r3.<org.springframework.beans.factory.support.RootBeanDefinition: boolean isLenientConstructorResolution()>();

        if $z5 == 0 goto label40;

        $i14 = virtualinvoke r126.<org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder: int getTypeDifferenceWeight(java.lang.Class[])>($r17);

        goto label41;

     label40:
        $i14 = virtualinvoke r126.<org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder: int getAssignabilityWeight(java.lang.Class[])>($r17);

     label41:
        if $i14 >= i11 goto label42;

        r111 = r124;

        r112 = r126;

        r113 = r126.<org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder: java.lang.Object[] arguments>;

        i11 = $i14;

        r122 = null;

        goto label44;

     label42:
        if r111 == null goto label44;

        if $i14 != i11 goto label44;

        if r122 != null goto label43;

        $r19 = new java.util.LinkedHashSet;

        specialinvoke $r19.<java.util.LinkedHashSet: void <init>()>();

        r122 = $r19;

        interfaceinvoke $r19.<java.util.Set: boolean add(java.lang.Object)>(r111);

     label43:
        interfaceinvoke r122.<java.util.Set: boolean add(java.lang.Object)>(r124);

     label44:
        i13 = i13 + 1;

     label45:
        $i15 = lengthof r120;

        if i13 < $i15 goto label26;

        if r111 != null goto label59;

        $i6 = virtualinvoke r121.<org.springframework.beans.factory.config.ConstructorArgumentValues: int getArgumentCount()>();

        if $i6 <= 0 goto label46;

        $z21 = 1;

        $z20 = 1;

        goto label47;

     label46:
        $z21 = 0;

        $z20 = 0;

     label47:
        z16 = $z20;

        r128 = "";

        if $z21 == 0 goto label52;

        $r66 = new java.util.ArrayList;

        specialinvoke $r66.<java.util.ArrayList: void <init>()>();

        $r67 = virtualinvoke r121.<org.springframework.beans.factory.config.ConstructorArgumentValues: java.util.Map getIndexedArgumentValues()>();

        $r68 = interfaceinvoke $r67.<java.util.Map: java.util.Collection values()>();

        $r69 = interfaceinvoke $r68.<java.util.Collection: java.util.Iterator iterator()>();

        goto label51;

     label48:
        $r70 = interfaceinvoke $r69.<java.util.Iterator: java.lang.Object next()>();

        r129 = (org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder) $r70;

        $r71 = virtualinvoke r129.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: java.lang.String getType()>();

        if $r71 == null goto label49;

        $r74 = virtualinvoke r129.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: java.lang.String getType()>();

        $r130 = staticinvoke <org.springframework.util.ClassUtils: java.lang.String getShortName(java.lang.String)>($r74);

        goto label50;

     label49:
        $r72 = virtualinvoke r129.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: java.lang.Object getValue()>();

        $r73 = virtualinvoke $r72.<java.lang.Object: java.lang.Class getClass()>();

        $r130 = virtualinvoke $r73.<java.lang.Class: java.lang.String getSimpleName()>();

     label50:
        interfaceinvoke $r66.<java.util.List: boolean add(java.lang.Object)>($r130);

     label51:
        $z17 = interfaceinvoke $r69.<java.util.Iterator: boolean hasNext()>();

        if $z17 != 0 goto label48;

        r128 = staticinvoke <org.springframework.util.StringUtils: java.lang.String collectionToCommaDelimitedString(java.util.Collection)>($r66);

     label52:
        $r45 = new org.springframework.beans.factory.BeanCreationException;

        $r46 = virtualinvoke r3.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String getResourceDescription()>();

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>(java.lang.String)>("No matching factory method found: ");

        $r48 = virtualinvoke r3.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String getFactoryBeanName()>();

        if $r48 == null goto label53;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>(java.lang.String)>("factory bean \'");

        $r63 = virtualinvoke r3.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String getFactoryBeanName()>();

        $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'; ");

        $r131 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label54;

     label53:
        $r131 = "";

     label54:
        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r131);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("factory method \'");

        $r51 = virtualinvoke r3.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String getFactoryMethodName()>();

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r128);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\'. ");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Check that a method with the specified name ");

        if z16 == 0 goto label55;

        $r132 = "and arguments ";

        goto label56;

     label55:
        $r132 = "";

     label56:
        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r132);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exists and that it is ");

        if z19 == 0 goto label57;

        $r133 = "static";

        goto label58;

     label57:
        $r133 = "non-static";

     label58:
        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r133);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r45.<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r46, r16, $r61);

        throw $r45;

     label59:
        $r22 = <java.lang.Void: java.lang.Class TYPE>;

        $r23 = virtualinvoke r111.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $z6 = virtualinvoke $r22.<java.lang.Object: boolean equals(java.lang.Object)>($r23);

        if $z6 == 0 goto label60;

        $r38 = new org.springframework.beans.factory.BeanCreationException;

        $r39 = virtualinvoke r3.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String getResourceDescription()>();

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid factory method \'");

        $r41 = virtualinvoke r3.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String getFactoryMethodName()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': needs to have a non-void return type!");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r39, r16, $r44);

        throw $r38;

     label60:
        if r122 == null goto label61;

        $z7 = virtualinvoke r3.<org.springframework.beans.factory.support.RootBeanDefinition: boolean isLenientConstructorResolution()>();

        if $z7 != 0 goto label61;

        $r30 = new org.springframework.beans.factory.BeanCreationException;

        $r31 = virtualinvoke r3.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String getResourceDescription()>();

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>(java.lang.String)>("Ambiguous factory method matches found in bean \'");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(hint: specify index/type/name arguments for simple parameters to avoid type ambiguities): ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r122);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r31, r16, $r37);

        throw $r30;

     label61:
        if r5 != null goto label62;

        if r112 == null goto label62;

        virtualinvoke r112.<org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder: void storeCache(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)>(r3, r111);

     label62:
        $r134 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if $r134 == null goto label63;

        $r27 = new org.springframework.beans.factory.support.ConstructorResolver$3;

        specialinvoke $r27.<org.springframework.beans.factory.support.ConstructorResolver$3: void <init>(org.springframework.beans.factory.support.ConstructorResolver,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>(r1, r3, r16, r109, r111, r113);

        $r28 = r1.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        $r29 = virtualinvoke $r28.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.security.AccessControlContext getAccessControlContext()>();

        r135 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext)>($r27, $r29);

        goto label64;

     label63:
        $r24 = r1.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        $r25 = virtualinvoke $r24.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.support.InstantiationStrategy getInstantiationStrategy()>();

        $r26 = r1.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        r135 = interfaceinvoke $r25.<org.springframework.beans.factory.support.InstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>(r3, r16, $r26, r109, r111, r113);

     label64:
        if r135 != null goto label66;

     label65:
        return null;

     label66:
        virtualinvoke $r0.<org.springframework.beans.BeanWrapperImpl: void setWrappedInstance(java.lang.Object)>(r135);

     label67:
        return $r0;

     label68:
        $r89 := @caughtexception;

        $r90 = new org.springframework.beans.factory.BeanCreationException;

        $r91 = virtualinvoke r3.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String getResourceDescription()>();

        specialinvoke $r90.<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($r91, r16, "Instantiation of bean failed", $r89);

        throw $r90;

        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch org.springframework.beans.factory.UnsatisfiedDependencyException from label27 to label29 with label30;
        catch java.lang.Throwable from label62 to label65 with label68;
        catch java.lang.Throwable from label66 to label67 with label68;
    }

    private int resolveConstructorArguments(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition, org.springframework.beans.BeanWrapper, org.springframework.beans.factory.config.ConstructorArgumentValues, org.springframework.beans.factory.config.ConstructorArgumentValues)
    {
        java.lang.Integer $r14;
        org.springframework.beans.factory.support.ConstructorResolver r0;
        java.util.Map $r9;
        org.springframework.beans.TypeConverter $r2, $r37;
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r10;
        java.util.List $r28;
        java.lang.StringBuilder $r25, $r26;
        org.springframework.beans.factory.support.RootBeanDefinition r6;
        org.springframework.beans.BeanWrapper r3;
        org.springframework.beans.factory.config.ConstructorArgumentValues r8, r21;
        org.springframework.beans.factory.BeanCreationException $r23;
        org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder $r18, $r22, $r33, r39;
        int $i0, i1;
        java.lang.String r5, $r19, $r20, $r24, $r27, $r34, $r35;
        org.springframework.beans.factory.support.BeanDefinitionValueResolver $r4;
        java.util.Map$Entry r38;
        java.util.Iterator $r11, $r29;
        org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory $r1, $r7, $r36;
        java.lang.Object $r12, $r13, $r15, $r16, $r17, $r30, $r31, $r32;

        r0 := @this: org.springframework.beans.factory.support.ConstructorResolver;

        r5 := @parameter0: java.lang.String;

        r6 := @parameter1: org.springframework.beans.factory.support.RootBeanDefinition;

        r3 := @parameter2: org.springframework.beans.BeanWrapper;

        r8 := @parameter3: org.springframework.beans.factory.config.ConstructorArgumentValues;

        r21 := @parameter4: org.springframework.beans.factory.config.ConstructorArgumentValues;

        $r1 = r0.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        $r2 = virtualinvoke $r1.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.TypeConverter getCustomTypeConverter()>();

        if $r2 == null goto label01;

        $r36 = r0.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        $r37 = virtualinvoke $r36.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.TypeConverter getCustomTypeConverter()>();

        goto label02;

     label01:
        $r37 = r3;

     label02:
        $r4 = new org.springframework.beans.factory.support.BeanDefinitionValueResolver;

        $r7 = r0.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        specialinvoke $r4.<org.springframework.beans.factory.support.BeanDefinitionValueResolver: void <init>(org.springframework.beans.factory.support.AbstractBeanFactory,java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.TypeConverter)>($r7, r5, r6, $r37);

        i1 = virtualinvoke r8.<org.springframework.beans.factory.config.ConstructorArgumentValues: int getArgumentCount()>();

        $r9 = virtualinvoke r8.<org.springframework.beans.factory.config.ConstructorArgumentValues: java.util.Map getIndexedArgumentValues()>();

        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Set entrySet()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

        goto label07;

     label03:
        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r38 = (java.util.Map$Entry) $r12;

        $r13 = interfaceinvoke r38.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r14 = (java.lang.Integer) $r13;

        $i0 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        if $i0 >= 0 goto label04;

        $r23 = new org.springframework.beans.factory.BeanCreationException;

        $r24 = virtualinvoke r6.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String getResourceDescription()>();

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid constructor argument index: ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r24, r5, $r27);

        throw $r23;

     label04:
        if $i0 <= i1 goto label05;

        i1 = $i0 + 1;

     label05:
        $r15 = interfaceinvoke r38.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r22 = (org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder) $r15;

        $z0 = virtualinvoke $r22.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: boolean isConverted()>();

        if $z0 == 0 goto label06;

        virtualinvoke r21.<org.springframework.beans.factory.config.ConstructorArgumentValues: void addIndexedArgumentValue(int,org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>($i0, $r22);

        goto label07;

     label06:
        $r16 = virtualinvoke $r22.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: java.lang.Object getValue()>();

        $r17 = virtualinvoke $r4.<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>("constructor argument", $r16);

        $r18 = new org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder;

        $r19 = virtualinvoke $r22.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: java.lang.String getType()>();

        $r20 = virtualinvoke $r22.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: java.lang.String getName()>();

        specialinvoke $r18.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: void <init>(java.lang.Object,java.lang.String,java.lang.String)>($r17, $r19, $r20);

        virtualinvoke $r18.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: void setSource(java.lang.Object)>($r22);

        virtualinvoke r21.<org.springframework.beans.factory.config.ConstructorArgumentValues: void addIndexedArgumentValue(int,org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>($i0, $r18);

     label07:
        $z2 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label03;

        $r28 = virtualinvoke r8.<org.springframework.beans.factory.config.ConstructorArgumentValues: java.util.List getGenericArgumentValues()>();

        $r29 = interfaceinvoke $r28.<java.util.List: java.util.Iterator iterator()>();

        goto label10;

     label08:
        $r30 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

        r39 = (org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder) $r30;

        $z1 = virtualinvoke r39.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: boolean isConverted()>();

        if $z1 == 0 goto label09;

        virtualinvoke r21.<org.springframework.beans.factory.config.ConstructorArgumentValues: void addGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>(r39);

        goto label10;

     label09:
        $r31 = virtualinvoke r39.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: java.lang.Object getValue()>();

        $r32 = virtualinvoke $r4.<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>("constructor argument", $r31);

        $r33 = new org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder;

        $r34 = virtualinvoke r39.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: java.lang.String getType()>();

        $r35 = virtualinvoke r39.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: java.lang.String getName()>();

        specialinvoke $r33.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: void <init>(java.lang.Object,java.lang.String,java.lang.String)>($r32, $r34, $r35);

        virtualinvoke $r33.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: void setSource(java.lang.Object)>(r39);

        virtualinvoke r21.<org.springframework.beans.factory.config.ConstructorArgumentValues: void addGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>($r33);

     label10:
        $z3 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label08;

        return i1;
    }

    private org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition, org.springframework.beans.factory.config.ConstructorArgumentValues, org.springframework.beans.BeanWrapper, java.lang.Class[], java.lang.String[], java.lang.Object, boolean) throws org.springframework.beans.factory.UnsatisfiedDependencyException
    {
        org.springframework.beans.TypeConverter $r4, r6, $r77;
        org.springframework.beans.TypeMismatchException $r60;
        java.lang.StringBuilder $r24, $r25, $r26, $r27, $r28, $r29, $r47, $r49, $r50, $r51, $r52, $r53, $r54, $r63, $r64, $r65, $r68, $r69, $r71, $r72, $r74;
        org.springframework.beans.factory.support.RootBeanDefinition r22;
        java.lang.Object[] $r17, $r18, $r20, $r36, $r37, $r38, $r40;
        org.springframework.beans.BeanWrapper r5;
        org.springframework.beans.factory.config.ConstructorArgumentValues r12;
        org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder $r13, r33, r80;
        java.lang.String r1, r15, $r23, $r30, $r55, $r59, $r62, $r67, $r70, $r73, $r75, $r76, $r79, r82;
        java.util.LinkedHashSet $r10;
        java.lang.Class[] r8;
        org.springframework.beans.BeansException $r57;
        org.springframework.beans.factory.support.ConstructorResolver r2;
        org.springframework.core.MethodParameter $r14, $r35;
        boolean $z0, z1, $z2, $z3, $z4;
        org.springframework.beans.factory.support.ConstructorResolver$AutowiredArgumentMarker $r19;
        java.lang.String[] r11;
        org.springframework.beans.factory.UnsatisfiedDependencyException $r21, $r58, $r61;
        java.util.HashSet $r9;
        int $i0, $i1, i2, $i3;
        java.util.Iterator $r41;
        org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder $r7;
        org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory $r3, $r43, $r44, $r46, $r56;
        java.lang.Object r0, $r16, $r31, $r32, $r34, $r39, $r42, $r66, r81;
        org.apache.commons.logging.Log $r45, $r48;
        java.lang.Class r78;

        r2 := @this: org.springframework.beans.factory.support.ConstructorResolver;

        r15 := @parameter0: java.lang.String;

        r22 := @parameter1: org.springframework.beans.factory.support.RootBeanDefinition;

        r12 := @parameter2: org.springframework.beans.factory.config.ConstructorArgumentValues;

        r5 := @parameter3: org.springframework.beans.BeanWrapper;

        r8 := @parameter4: java.lang.Class[];

        r11 := @parameter5: java.lang.String[];

        r0 := @parameter6: java.lang.Object;

        z1 := @parameter7: boolean;

        $z0 = r0 instanceof java.lang.reflect.Constructor;

        if $z0 == 0 goto label01;

        $r76 = "constructor";

        goto label02;

     label01:
        $r76 = "factory method";

     label02:
        r1 = $r76;

        $r3 = r2.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        $r4 = virtualinvoke $r3.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.TypeConverter getCustomTypeConverter()>();

        if $r4 == null goto label03;

        $r56 = r2.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        $r77 = virtualinvoke $r56.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.TypeConverter getCustomTypeConverter()>();

        goto label04;

     label03:
        $r77 = r5;

     label04:
        r6 = $r77;

        $r7 = new org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder;

        $i0 = lengthof r8;

        specialinvoke $r7.<org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder: void <init>(int)>($i0);

        $r9 = new java.util.HashSet;

        $i1 = lengthof r8;

        specialinvoke $r9.<java.util.HashSet: void <init>(int)>($i1);

        $r10 = new java.util.LinkedHashSet;

        specialinvoke $r10.<java.util.LinkedHashSet: void <init>(int)>(4);

        i2 = 0;

        goto label19;

     label05:
        r78 = r8[i2];

        if r11 == null goto label06;

        $r79 = r11[i2];

        goto label07;

     label06:
        $r79 = null;

     label07:
        $r13 = virtualinvoke r12.<org.springframework.beans.factory.config.ConstructorArgumentValues: org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder getArgumentValue(int,java.lang.Class,java.lang.String,java.util.Set)>(i2, r78, $r79, $r9);

        r80 = $r13;

        if $r13 != null goto label08;

        if z1 != 0 goto label08;

        r80 = virtualinvoke r12.<org.springframework.beans.factory.config.ConstructorArgumentValues: org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder getGenericArgumentValue(java.lang.Class,java.lang.String,java.util.Set)>(null, null, $r9);

     label08:
        if r80 == null goto label14;

        interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>(r80);

        $r31 = virtualinvoke r80.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: java.lang.Object getValue()>();

        $z2 = virtualinvoke r80.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: boolean isConverted()>();

        if $z2 == 0 goto label09;

        $r39 = virtualinvoke r80.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: java.lang.Object getConvertedValue()>();

        r81 = $r39;

        $r40 = $r7.<org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder: java.lang.Object[] preparedArguments>;

        $r40[i2] = $r39;

        goto label13;

     label09:
        $r32 = virtualinvoke r80.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: java.lang.Object getSource()>();

        r33 = (org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder) $r32;

        $r34 = virtualinvoke r33.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: java.lang.Object getValue()>();

     label10:
        $r35 = staticinvoke <org.springframework.core.MethodParameter: org.springframework.core.MethodParameter forMethodOrConstructor(java.lang.Object,int)>(r0, i2);

        r81 = interfaceinvoke r6.<org.springframework.beans.TypeConverter: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>($r31, r78, $r35);

        $r7.<org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder: boolean resolveNecessary> = 1;

        $r36 = $r7.<org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder: java.lang.Object[] preparedArguments>;

        $r36[i2] = $r34;

     label11:
        goto label13;

     label12:
        $r60 := @caughtexception;

        $r61 = new org.springframework.beans.factory.UnsatisfiedDependencyException;

        $r62 = virtualinvoke r22.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String getResourceDescription()>();

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not convert ");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" argument value of type [");

        $r66 = virtualinvoke r80.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: java.lang.Object getValue()>();

        $r67 = staticinvoke <org.springframework.util.ObjectUtils: java.lang.String nullSafeClassName(java.lang.Object)>($r66);

        $r68 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] to required type [");

        $r70 = virtualinvoke r78.<java.lang.Class: java.lang.String getName()>();

        $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r73 = virtualinvoke $r60.<org.springframework.beans.TypeMismatchException: java.lang.String getMessage()>();

        $r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r61.<org.springframework.beans.factory.UnsatisfiedDependencyException: void <init>(java.lang.String,java.lang.String,int,java.lang.Class,java.lang.String)>($r62, r15, i2, r78, $r75);

        throw $r61;

     label13:
        $r37 = $r7.<org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder: java.lang.Object[] arguments>;

        $r37[i2] = r81;

        $r38 = $r7.<org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder: java.lang.Object[] rawArguments>;

        $r38[i2] = $r31;

        goto label18;

     label14:
        if z1 != 0 goto label15;

        $r21 = new org.springframework.beans.factory.UnsatisfiedDependencyException;

        $r23 = virtualinvoke r22.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String getResourceDescription()>();

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>("Ambiguous ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" argument types - ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("did you specify the correct bean references as ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" arguments?");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<org.springframework.beans.factory.UnsatisfiedDependencyException: void <init>(java.lang.String,java.lang.String,int,java.lang.Class,java.lang.String)>($r23, r15, i2, r78, $r30);

        throw $r21;

     label15:
        $r14 = staticinvoke <org.springframework.core.MethodParameter: org.springframework.core.MethodParameter forMethodOrConstructor(java.lang.Object,int)>(r0, i2);

        $r16 = virtualinvoke r2.<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object resolveAutowiredArgument(org.springframework.core.MethodParameter,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>($r14, r15, $r10, r6);

        $r17 = $r7.<org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder: java.lang.Object[] rawArguments>;

        $r17[i2] = $r16;

        $r18 = $r7.<org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder: java.lang.Object[] arguments>;

        $r18[i2] = $r16;

        $r20 = $r7.<org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder: java.lang.Object[] preparedArguments>;

        $r19 = new org.springframework.beans.factory.support.ConstructorResolver$AutowiredArgumentMarker;

        specialinvoke $r19.<org.springframework.beans.factory.support.ConstructorResolver$AutowiredArgumentMarker: void <init>(org.springframework.beans.factory.support.ConstructorResolver$AutowiredArgumentMarker)>(null);

        $r20[i2] = $r19;

        $r7.<org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder: boolean resolveNecessary> = 1;

     label16:
        goto label18;

     label17:
        $r57 := @caughtexception;

        $r58 = new org.springframework.beans.factory.UnsatisfiedDependencyException;

        $r59 = virtualinvoke r22.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String getResourceDescription()>();

        specialinvoke $r58.<org.springframework.beans.factory.UnsatisfiedDependencyException: void <init>(java.lang.String,java.lang.String,int,java.lang.Class,org.springframework.beans.BeansException)>($r59, r15, i2, r78, $r57);

        throw $r58;

     label18:
        i2 = i2 + 1;

     label19:
        $i3 = lengthof r8;

        if i2 < $i3 goto label05;

        $r41 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

        goto label21;

     label20:
        $r42 = interfaceinvoke $r41.<java.util.Iterator: java.lang.Object next()>();

        r82 = (java.lang.String) $r42;

        $r43 = r2.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        virtualinvoke $r43.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void registerDependentBean(java.lang.String,java.lang.String)>(r82, r15);

        $r44 = r2.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        $r45 = $r44.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.apache.commons.logging.Log logger>;

        $z3 = interfaceinvoke $r45.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z3 == 0 goto label21;

        $r46 = r2.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        $r48 = $r46.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.apache.commons.logging.Log logger>;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>(java.lang.String)>("Autowiring by type from bean name \'");

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' via ");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to bean named \'");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r82);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r48.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r55);

     label21:
        $z4 = interfaceinvoke $r41.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label20;

        return $r7;

        catch org.springframework.beans.TypeMismatchException from label10 to label11 with label12;
        catch org.springframework.beans.BeansException from label15 to label16 with label17;
    }

    private java.lang.Object[] resolvePreparedArguments(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition, org.springframework.beans.BeanWrapper, java.lang.reflect.Member, java.lang.Object[])
    {
        org.springframework.beans.factory.support.ConstructorResolver r3;
        org.springframework.core.MethodParameter $r13;
        org.springframework.beans.TypeConverter $r5, r7, $r36;
        java.lang.reflect.Method $r19;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.reflect.Member r0;
        org.springframework.beans.TypeMismatchException $r20;
        java.lang.StringBuilder $r23, $r24, $r25, $r27, $r28, $r30, $r31, $r33;
        org.springframework.beans.factory.support.RootBeanDefinition r10;
        java.lang.Object[] r12, $r18;
        org.springframework.beans.BeanWrapper r6;
        java.lang.reflect.Constructor $r1;
        org.springframework.beans.factory.UnsatisfiedDependencyException $r21;
        int $i0, $i1, i2;
        java.lang.String r9, $r15, $r22, $r26, $r29, $r32, $r34, $r40;
        org.springframework.beans.factory.support.BeanDefinitionValueResolver $r8;
        java.lang.Class[] r2, $r35;
        org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory $r4, $r11, $r16, $r17;
        java.lang.Class $r14, $r38;
        java.lang.Object r37, $r39;

        r3 := @this: org.springframework.beans.factory.support.ConstructorResolver;

        r9 := @parameter0: java.lang.String;

        r10 := @parameter1: org.springframework.beans.factory.support.RootBeanDefinition;

        r6 := @parameter2: org.springframework.beans.BeanWrapper;

        r0 := @parameter3: java.lang.reflect.Member;

        r12 := @parameter4: java.lang.Object[];

        $z0 = r0 instanceof java.lang.reflect.Method;

        if $z0 == 0 goto label01;

        $r19 = (java.lang.reflect.Method) r0;

        $r35 = virtualinvoke $r19.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        goto label02;

     label01:
        $r1 = (java.lang.reflect.Constructor) r0;

        $r35 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

     label02:
        r2 = $r35;

        $r4 = r3.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        $r5 = virtualinvoke $r4.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.TypeConverter getCustomTypeConverter()>();

        if $r5 == null goto label03;

        $r17 = r3.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        $r36 = virtualinvoke $r17.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.TypeConverter getCustomTypeConverter()>();

        goto label04;

     label03:
        $r36 = r6;

     label04:
        r7 = $r36;

        $r8 = new org.springframework.beans.factory.support.BeanDefinitionValueResolver;

        $r11 = r3.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        specialinvoke $r8.<org.springframework.beans.factory.support.BeanDefinitionValueResolver: void <init>(org.springframework.beans.factory.support.AbstractBeanFactory,java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.TypeConverter)>($r11, r9, r10, $r36);

        $i0 = lengthof r12;

        $r18 = newarray (java.lang.Object)[$i0];

        i2 = 0;

        goto label15;

     label05:
        r37 = r12[i2];

        $r13 = staticinvoke <org.springframework.core.MethodParameter: org.springframework.core.MethodParameter forMethodOrConstructor(java.lang.Object,int)>(r0, i2);

        $r14 = interfaceinvoke r0.<java.lang.reflect.Member: java.lang.Class getDeclaringClass()>();

        staticinvoke <org.springframework.core.GenericTypeResolver: java.lang.Class resolveParameterType(org.springframework.core.MethodParameter,java.lang.Class)>($r13, $r14);

        $z1 = r37 instanceof org.springframework.beans.factory.support.ConstructorResolver$AutowiredArgumentMarker;

        if $z1 == 0 goto label06;

        r37 = virtualinvoke r3.<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object resolveAutowiredArgument(org.springframework.core.MethodParameter,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>($r13, r9, null, r7);

        goto label08;

     label06:
        $z2 = r37 instanceof org.springframework.beans.BeanMetadataElement;

        if $z2 == 0 goto label07;

        r37 = virtualinvoke $r8.<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>("constructor argument", r37);

        goto label08;

     label07:
        $z3 = r37 instanceof java.lang.String;

        if $z3 == 0 goto label08;

        $r16 = r3.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        $r15 = (java.lang.String) r37;

        r37 = virtualinvoke $r16.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object evaluateBeanDefinitionString(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>($r15, r10);

     label08:
        $r38 = r2[i2];

     label09:
        $r39 = interfaceinvoke r7.<org.springframework.beans.TypeConverter: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>(r37, $r38, $r13);

        $r18[i2] = $r39;

     label10:
        goto label14;

     label11:
        $r20 := @caughtexception;

        $z4 = r0 instanceof java.lang.reflect.Constructor;

        if $z4 == 0 goto label12;

        $r40 = "constructor";

        goto label13;

     label12:
        $r40 = "factory method";

     label13:
        $r21 = new org.springframework.beans.factory.UnsatisfiedDependencyException;

        $r22 = virtualinvoke r10.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String getResourceDescription()>();

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not convert ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" argument value of type [");

        $r26 = staticinvoke <org.springframework.util.ObjectUtils: java.lang.String nullSafeClassName(java.lang.Object)>(r37);

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] to required type [");

        $r29 = virtualinvoke $r38.<java.lang.Class: java.lang.String getName()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r32 = virtualinvoke $r20.<org.springframework.beans.TypeMismatchException: java.lang.String getMessage()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<org.springframework.beans.factory.UnsatisfiedDependencyException: void <init>(java.lang.String,java.lang.String,int,java.lang.Class,java.lang.String)>($r22, r9, i2, $r38, $r34);

        throw $r21;

     label14:
        i2 = i2 + 1;

     label15:
        $i1 = lengthof r12;

        if i2 < $i1 goto label05;

        return $r18;

        catch org.springframework.beans.TypeMismatchException from label09 to label10 with label11;
    }

    protected java.lang.Object resolveAutowiredArgument(org.springframework.core.MethodParameter, java.lang.String, java.util.Set, org.springframework.beans.TypeConverter)
    {
        java.util.Set r5;
        org.springframework.beans.factory.config.DependencyDescriptor $r1;
        org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory $r3;
        org.springframework.beans.factory.support.ConstructorResolver r0;
        org.springframework.core.MethodParameter r2;
        org.springframework.beans.TypeConverter r6;
        java.lang.Object $r7;
        java.lang.String r4;

        r0 := @this: org.springframework.beans.factory.support.ConstructorResolver;

        r2 := @parameter0: org.springframework.core.MethodParameter;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.util.Set;

        r6 := @parameter3: org.springframework.beans.TypeConverter;

        $r3 = r0.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        $r1 = new org.springframework.beans.factory.config.DependencyDescriptor;

        specialinvoke $r1.<org.springframework.beans.factory.config.DependencyDescriptor: void <init>(org.springframework.core.MethodParameter,boolean)>(r2, 1);

        $r7 = virtualinvoke $r3.<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object resolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>($r1, r4, r5, r6);

        return $r7;
    }

    static org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory access$0(org.springframework.beans.factory.support.ConstructorResolver)
    {
        org.springframework.beans.factory.support.ConstructorResolver r0;
        org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory $r1;

        r0 := @parameter0: org.springframework.beans.factory.support.ConstructorResolver;

        $r1 = r0.<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory beanFactory>;

        return $r1;
    }
}
