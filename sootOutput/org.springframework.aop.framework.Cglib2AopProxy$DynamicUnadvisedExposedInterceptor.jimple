class org.springframework.aop.framework.Cglib2AopProxy$DynamicUnadvisedExposedInterceptor extends java.lang.Object implements net.sf.cglib.proxy.MethodInterceptor, java.io.Serializable
{
    private final org.springframework.aop.TargetSource targetSource;

    public void <init>(org.springframework.aop.TargetSource)
    {
        org.springframework.aop.framework.Cglib2AopProxy$DynamicUnadvisedExposedInterceptor r0;
        org.springframework.aop.TargetSource r1;

        r0 := @this: org.springframework.aop.framework.Cglib2AopProxy$DynamicUnadvisedExposedInterceptor;

        r1 := @parameter0: org.springframework.aop.TargetSource;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.aop.framework.Cglib2AopProxy$DynamicUnadvisedExposedInterceptor: org.springframework.aop.TargetSource targetSource> = r1;

        return;
    }

    public java.lang.Object intercept(java.lang.Object, java.lang.reflect.Method, java.lang.Object[], net.sf.cglib.proxy.MethodProxy) throws java.lang.Throwable
    {
        java.lang.Throwable $r11;
        org.springframework.aop.framework.Cglib2AopProxy$DynamicUnadvisedExposedInterceptor r0;
        java.lang.Object[] r6;
        org.springframework.aop.TargetSource $r1, $r10, $r12;
        java.lang.Object $r2, r3, $r4, $r7, $r9, r13;
        java.lang.reflect.Method r8;
        net.sf.cglib.proxy.MethodProxy r5;

        r0 := @this: org.springframework.aop.framework.Cglib2AopProxy$DynamicUnadvisedExposedInterceptor;

        r3 := @parameter0: java.lang.Object;

        r8 := @parameter1: java.lang.reflect.Method;

        r6 := @parameter2: java.lang.Object[];

        r5 := @parameter3: net.sf.cglib.proxy.MethodProxy;

        r13 = null;

        $r1 = r0.<org.springframework.aop.framework.Cglib2AopProxy$DynamicUnadvisedExposedInterceptor: org.springframework.aop.TargetSource targetSource>;

        $r2 = interfaceinvoke $r1.<org.springframework.aop.TargetSource: java.lang.Object getTarget()>();

     label1:
        $r4 = staticinvoke <org.springframework.aop.framework.AopContext: java.lang.Object setCurrentProxy(java.lang.Object)>(r3);

        r13 = $r4;

        $r7 = virtualinvoke r5.<net.sf.cglib.proxy.MethodProxy: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, r6);

        $r9 = staticinvoke <org.springframework.aop.framework.Cglib2AopProxy: java.lang.Object access$0(java.lang.Object,java.lang.Object,java.lang.reflect.Method,java.lang.Object)>(r3, $r2, r8, $r7);

     label2:
        staticinvoke <org.springframework.aop.framework.AopContext: java.lang.Object setCurrentProxy(java.lang.Object)>($r4);

        $r10 = r0.<org.springframework.aop.framework.Cglib2AopProxy$DynamicUnadvisedExposedInterceptor: org.springframework.aop.TargetSource targetSource>;

        interfaceinvoke $r10.<org.springframework.aop.TargetSource: void releaseTarget(java.lang.Object)>($r2);

        return $r9;

     label3:
        $r11 := @caughtexception;

        staticinvoke <org.springframework.aop.framework.AopContext: java.lang.Object setCurrentProxy(java.lang.Object)>(r13);

        $r12 = r0.<org.springframework.aop.framework.Cglib2AopProxy$DynamicUnadvisedExposedInterceptor: org.springframework.aop.TargetSource targetSource>;

        interfaceinvoke $r12.<org.springframework.aop.TargetSource: void releaseTarget(java.lang.Object)>($r2);

        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
