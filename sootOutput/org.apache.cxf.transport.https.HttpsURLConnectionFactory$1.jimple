class org.apache.cxf.transport.https.HttpsURLConnectionFactory$1 extends org.apache.cxf.common.util.ReflectionInvokationHandler
{
    final org.apache.cxf.transport.https.HttpsURLConnectionFactory this$0;

    void <init>(org.apache.cxf.transport.https.HttpsURLConnectionFactory, java.lang.Object)
    {
        java.lang.Object r2;
        org.apache.cxf.transport.https.HttpsURLConnectionFactory$1 r0;
        org.apache.cxf.transport.https.HttpsURLConnectionFactory r1;

        r0 := @this: org.apache.cxf.transport.https.HttpsURLConnectionFactory$1;

        r1 := @parameter0: org.apache.cxf.transport.https.HttpsURLConnectionFactory;

        r2 := @parameter1: java.lang.Object;

        r0.<org.apache.cxf.transport.https.HttpsURLConnectionFactory$1: org.apache.cxf.transport.https.HttpsURLConnectionFactory this$0> = r1;

        specialinvoke r0.<org.apache.cxf.common.util.ReflectionInvokationHandler: void <init>(java.lang.Object)>(r2);

        return;
    }

    public java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable
    {
        java.lang.Object[] r3;
        org.apache.cxf.transport.https.HttpsURLConnectionFactory$1 r0;
        java.lang.Boolean $r6;
        java.lang.Object r1, $r4;
        java.lang.reflect.Method r2;
        java.lang.Exception $r5;

        r0 := @this: org.apache.cxf.transport.https.HttpsURLConnectionFactory$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.reflect.Method;

        r3 := @parameter2: java.lang.Object[];

     label1:
        $r4 = specialinvoke r0.<org.apache.cxf.common.util.ReflectionInvokationHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>(r1, r2, r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        return $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
