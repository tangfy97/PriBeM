class nu.xom.Info extends java.lang.Object
{

    void <init>()
    {
        nu.xom.Info r0;

        r0 := @this: nu.xom.Info;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.Exception $r33;
        java.lang.String[] r34;
        java.lang.StringBuffer $r3, $r5, $r6, $r7;
        java.lang.String $r8, r35;
        java.io.PrintStream $r4, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32;
        java.io.InputStreamReader $r2;
        java.io.BufferedReader $r1;
        java.io.InputStream $r0;

        r34 := @parameter0: java.lang.String[];

     label1:
        $r0 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>("nu/xom/version.txt");

        $r1 = new java.io.BufferedReader;

        $r2 = new java.io.InputStreamReader;

        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r0, "UTF-8");

        specialinvoke $r1.<java.io.BufferedReader: void <init>(java.io.Reader)>($r2);

        r35 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label2:
        goto label4;

     label3:
        $r33 := @caughtexception;

        r35 = "1.2.4b1 or later";

     label4:
        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("This is XOM ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r35);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", a new XML Object Model.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);

        $r9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("Copyright 2002-2009 Elliotte Rusty Harold");

        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("http://www.xom.nu/");

        $r11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r11.<java.io.PrintStream: void println()>();

        $r12 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("XOM is a class library intended to be used with other programs.");

        $r13 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("By itself, it doesn\'t really do anything.");

        $r14 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("For more information see http://www.xom.nu/");

        $r15 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r15.<java.io.PrintStream: void println()>();

        $r16 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("This library is free software; you can redistribute it and/or modify it");

        $r17 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>("under the terms of version 2.1 of the GNU Lesser General Public License");

        $r18 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("as published by the Free Software Foundation.");

        $r19 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r19.<java.io.PrintStream: void println()>();

        $r20 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>("This library is distributed in the hope that it will be useful,");

        $r21 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>("but WITHOUT ANY WARRANTY; without even the implied warranty of");

        $r22 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>("MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. ");

        $r23 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>("See the GNU Lesser General Public License for more details.");

        $r24 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r24.<java.io.PrintStream: void println()>();

        $r25 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>("You should have received a copy of the GNU Lesser General");

        $r26 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>("Public License along with this library; if not, write to the");

        $r27 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r27.<java.io.PrintStream: void println()>();

        $r28 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>("Free Software Foundation, Inc.");

        $r29 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>("59 Temple Place");

        $r30 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>("Suite 330,");

        $r31 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>("Boston, MA  02111-1307");

        $r32 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>("USA");

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
