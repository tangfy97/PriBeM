public class org.openjena.riot.RiotWriter extends java.lang.Object
{

    public void <init>()
    {
        org.openjena.riot.RiotWriter r0;

        r0 := @this: org.openjena.riot.RiotWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void writeNQuads(java.io.OutputStream, com.hp.hpl.jena.sparql.core.DatasetGraph)
    {
        java.io.OutputStream r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;

        r0 := @parameter0: java.io.OutputStream;

        r1 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        staticinvoke <org.apache.jena.riot.RiotWriter: void writeNQuads(java.io.OutputStream,com.hp.hpl.jena.sparql.core.DatasetGraph)>(r0, r1);

        return;
    }

    public static void writeNQuads(java.io.OutputStream, java.util.Iterator)
    {
        java.io.OutputStream r0;
        java.util.Iterator r1;

        r0 := @parameter0: java.io.OutputStream;

        r1 := @parameter1: java.util.Iterator;

        staticinvoke <org.apache.jena.riot.RiotWriter: void writeNQuads(java.io.OutputStream,java.util.Iterator)>(r0, r1);

        return;
    }

    public static void writeTriples(java.io.OutputStream, com.hp.hpl.jena.graph.Graph)
    {
        java.io.OutputStream r0;
        com.hp.hpl.jena.graph.Graph r1;

        r0 := @parameter0: java.io.OutputStream;

        r1 := @parameter1: com.hp.hpl.jena.graph.Graph;

        staticinvoke <org.apache.jena.riot.RiotWriter: void writeTriples(java.io.OutputStream,com.hp.hpl.jena.graph.Graph)>(r0, r1);

        return;
    }

    public static void writeTriples(java.io.OutputStream, java.util.Iterator)
    {
        java.io.OutputStream r0;
        java.util.Iterator r1;

        r0 := @parameter0: java.io.OutputStream;

        r1 := @parameter1: java.util.Iterator;

        staticinvoke <org.apache.jena.riot.RiotWriter: void writeTriples(java.io.OutputStream,java.util.Iterator)>(r0, r1);

        return;
    }

    public static void writeRDFJSON(java.io.OutputStream, com.hp.hpl.jena.graph.Graph)
    {
        java.io.OutputStream r0;
        com.hp.hpl.jena.graph.Graph r1;

        r0 := @parameter0: java.io.OutputStream;

        r1 := @parameter1: com.hp.hpl.jena.graph.Graph;

        staticinvoke <org.apache.jena.riot.RiotWriter: void writeRDFJSON(java.io.OutputStream,com.hp.hpl.jena.graph.Graph)>(r0, r1);

        return;
    }
}
