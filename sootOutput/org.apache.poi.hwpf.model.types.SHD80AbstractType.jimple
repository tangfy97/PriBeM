public abstract class org.apache.poi.hwpf.model.types.SHD80AbstractType extends java.lang.Object
{
    protected short field_1_value;
    private static final org.apache.poi.util.BitField icoFore;
    private static final org.apache.poi.util.BitField icoBack;
    private static final org.apache.poi.util.BitField ipat;

    protected void <init>()
    {
        org.apache.poi.hwpf.model.types.SHD80AbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.SHD80AbstractType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected void fillFields(byte[], int)
    {
        byte[] r1;
        short $s2;
        org.apache.poi.hwpf.model.types.SHD80AbstractType r0;
        int i0, $i1;

        r0 := @this: org.apache.poi.hwpf.model.types.SHD80AbstractType;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = 0 + i0;

        $s2 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r1, $i1);

        r0.<org.apache.poi.hwpf.model.types.SHD80AbstractType: short field_1_value> = $s2;

        return;
    }

    public void serialize(byte[], int)
    {
        byte[] r0;
        short $s1;
        org.apache.poi.hwpf.model.types.SHD80AbstractType r1;
        int i0, $i2;

        r1 := @this: org.apache.poi.hwpf.model.types.SHD80AbstractType;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i2 = 0 + i0;

        $s1 = r1.<org.apache.poi.hwpf.model.types.SHD80AbstractType: short field_1_value>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r0, $i2, $s1);

        return;
    }

    public byte[] serialize()
    {
        int $i0;
        byte[] r0;
        org.apache.poi.hwpf.model.types.SHD80AbstractType r1;

        r1 := @this: org.apache.poi.hwpf.model.types.SHD80AbstractType;

        $i0 = staticinvoke <org.apache.poi.hwpf.model.types.SHD80AbstractType: int getSize()>();

        r0 = newarray (byte)[$i0];

        virtualinvoke r1.<org.apache.poi.hwpf.model.types.SHD80AbstractType: void serialize(byte[],int)>(r0, 0);

        return r0;
    }

    public static int getSize()
    {
        return 2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.poi.hwpf.model.types.SHD80AbstractType r0, r4;
        short $s0, $s1;
        int $i2, $i3;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;

        r0 := @this: org.apache.poi.hwpf.model.types.SHD80AbstractType;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        r4 = (org.apache.poi.hwpf.model.types.SHD80AbstractType) r1;

        $s1 = r0.<org.apache.poi.hwpf.model.types.SHD80AbstractType: short field_1_value>;

        $s0 = r4.<org.apache.poi.hwpf.model.types.SHD80AbstractType: short field_1_value>;

        $i2 = (int) $s1;

        $i3 = (int) $s0;

        if $i2 == $i3 goto label4;

        return 0;

     label4:
        return 1;
    }

    public int hashCode()
    {
        short $s0;
        org.apache.poi.hwpf.model.types.SHD80AbstractType r0;
        int i1, $i2;

        r0 := @this: org.apache.poi.hwpf.model.types.SHD80AbstractType;

        $s0 = r0.<org.apache.poi.hwpf.model.types.SHD80AbstractType: short field_1_value>;

        $i2 = (int) $s0;

        i1 = 31 + $i2;

        return i1;
    }

    public java.lang.String toString()
    {
        org.apache.poi.hwpf.model.types.SHD80AbstractType r2;
        short $s0;
        byte $b1, $b2, $b3;
        int $i4, $i5, $i6, $i7;
        java.lang.String $r10;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11;

        r2 := @this: org.apache.poi.hwpf.model.types.SHD80AbstractType;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[SHD80]\n");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .value                = ");

        $r1 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $s0 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.SHD80AbstractType: short getValue()>();

        $i4 = (int) $s0;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .icoFore                  = ");

        $b1 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.SHD80AbstractType: byte getIcoFore()>();

        $i5 = (int) $b1;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r6 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .icoBack                  = ");

        $b2 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.SHD80AbstractType: byte getIcoBack()>();

        $i6 = (int) $b2;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .ipat                     = ");

        $b3 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.SHD80AbstractType: byte getIpat()>();

        $i7 = (int) $b3;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[/SHD80]\n");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public short getValue()
    {
        short $s0;
        org.apache.poi.hwpf.model.types.SHD80AbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.SHD80AbstractType;

        $s0 = r0.<org.apache.poi.hwpf.model.types.SHD80AbstractType: short field_1_value>;

        return $s0;
    }

    public void setValue(short)
    {
        short s0;
        org.apache.poi.hwpf.model.types.SHD80AbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.SHD80AbstractType;

        s0 := @parameter0: short;

        r0.<org.apache.poi.hwpf.model.types.SHD80AbstractType: short field_1_value> = s0;

        return;
    }

    public void setIcoFore(byte)
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hwpf.model.types.SHD80AbstractType r0;
        short $s1, $s3;
        byte b0;
        int $i2, $i4, $i5;

        r0 := @this: org.apache.poi.hwpf.model.types.SHD80AbstractType;

        b0 := @parameter0: byte;

        $r1 = <org.apache.poi.hwpf.model.types.SHD80AbstractType: org.apache.poi.util.BitField icoFore>;

        $s1 = r0.<org.apache.poi.hwpf.model.types.SHD80AbstractType: short field_1_value>;

        $i4 = (int) $s1;

        $i5 = (int) b0;

        $i2 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setValue(int,int)>($i4, $i5);

        $s3 = (short) $i2;

        r0.<org.apache.poi.hwpf.model.types.SHD80AbstractType: short field_1_value> = $s3;

        return;
    }

    public byte getIcoFore()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        byte $b2;
        org.apache.poi.hwpf.model.types.SHD80AbstractType r0;
        int $i1, $i3;

        r0 := @this: org.apache.poi.hwpf.model.types.SHD80AbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.SHD80AbstractType: org.apache.poi.util.BitField icoFore>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.SHD80AbstractType: short field_1_value>;

        $i3 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int getValue(int)>($i3);

        $b2 = (byte) $i1;

        return $b2;
    }

    public void setIcoBack(byte)
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hwpf.model.types.SHD80AbstractType r0;
        short $s1, $s3;
        byte b0;
        int $i2, $i4, $i5;

        r0 := @this: org.apache.poi.hwpf.model.types.SHD80AbstractType;

        b0 := @parameter0: byte;

        $r1 = <org.apache.poi.hwpf.model.types.SHD80AbstractType: org.apache.poi.util.BitField icoBack>;

        $s1 = r0.<org.apache.poi.hwpf.model.types.SHD80AbstractType: short field_1_value>;

        $i4 = (int) $s1;

        $i5 = (int) b0;

        $i2 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setValue(int,int)>($i4, $i5);

        $s3 = (short) $i2;

        r0.<org.apache.poi.hwpf.model.types.SHD80AbstractType: short field_1_value> = $s3;

        return;
    }

    public byte getIcoBack()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        byte $b2;
        org.apache.poi.hwpf.model.types.SHD80AbstractType r0;
        int $i1, $i3;

        r0 := @this: org.apache.poi.hwpf.model.types.SHD80AbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.SHD80AbstractType: org.apache.poi.util.BitField icoBack>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.SHD80AbstractType: short field_1_value>;

        $i3 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int getValue(int)>($i3);

        $b2 = (byte) $i1;

        return $b2;
    }

    public void setIpat(byte)
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hwpf.model.types.SHD80AbstractType r0;
        short $s1, $s3;
        byte b0;
        int $i2, $i4, $i5;

        r0 := @this: org.apache.poi.hwpf.model.types.SHD80AbstractType;

        b0 := @parameter0: byte;

        $r1 = <org.apache.poi.hwpf.model.types.SHD80AbstractType: org.apache.poi.util.BitField ipat>;

        $s1 = r0.<org.apache.poi.hwpf.model.types.SHD80AbstractType: short field_1_value>;

        $i4 = (int) $s1;

        $i5 = (int) b0;

        $i2 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setValue(int,int)>($i4, $i5);

        $s3 = (short) $i2;

        r0.<org.apache.poi.hwpf.model.types.SHD80AbstractType: short field_1_value> = $s3;

        return;
    }

    public byte getIpat()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        byte $b2;
        org.apache.poi.hwpf.model.types.SHD80AbstractType r0;
        int $i1, $i3;

        r0 := @this: org.apache.poi.hwpf.model.types.SHD80AbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.SHD80AbstractType: org.apache.poi.util.BitField ipat>;

        $s0 = r0.<org.apache.poi.hwpf.model.types.SHD80AbstractType: short field_1_value>;

        $i3 = (int) $s0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int getValue(int)>($i3);

        $b2 = (byte) $i1;

        return $b2;
    }

    static void <clinit>()
    {
        org.apache.poi.util.BitField $r3, $r4, $r5;
        int $i1;

        $r3 = new org.apache.poi.util.BitField;

        specialinvoke $r3.<org.apache.poi.util.BitField: void <init>(int)>(31);

        <org.apache.poi.hwpf.model.types.SHD80AbstractType: org.apache.poi.util.BitField icoFore> = $r3;

        $r4 = new org.apache.poi.util.BitField;

        specialinvoke $r4.<org.apache.poi.util.BitField: void <init>(int)>(992);

        <org.apache.poi.hwpf.model.types.SHD80AbstractType: org.apache.poi.util.BitField icoBack> = $r4;

        $r5 = new org.apache.poi.util.BitField;

        $i1 = (int) 64512;

        specialinvoke $r5.<org.apache.poi.util.BitField: void <init>(int)>($i1);

        <org.apache.poi.hwpf.model.types.SHD80AbstractType: org.apache.poi.util.BitField ipat> = $r5;

        return;
    }
}
