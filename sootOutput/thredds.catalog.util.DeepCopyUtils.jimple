public class thredds.catalog.util.DeepCopyUtils extends java.lang.Object
{
    private static org.slf4j.Logger logger;

    private void <init>()
    {
        thredds.catalog.util.DeepCopyUtils r0;

        r0 := @this: thredds.catalog.util.DeepCopyUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static thredds.catalog.InvCatalog copyCatalog(thredds.catalog.InvCatalog)
    {
        thredds.catalog.InvCatalog r0;
        java.util.Iterator $r8;
        java.lang.IllegalArgumentException $r13;
        java.util.List $r6, $r7;
        thredds.catalog.InvCatalogImpl $r1, $r4;
        java.lang.Object $r9;
        java.lang.String $r2;
        java.net.URI $r5;
        thredds.catalog.InvDatasetImpl $r12;
        ucar.nc2.units.DateType $r3;
        boolean $z0;
        thredds.catalog.InvDataset r10, $r11;

        r0 := @parameter0: thredds.catalog.InvCatalog;

        if r0 != null goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Catalog may not be null.");

        throw $r13;

     label1:
        $r1 = new thredds.catalog.InvCatalogImpl;

        $r2 = virtualinvoke r0.<thredds.catalog.InvCatalog: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<thredds.catalog.InvCatalog: ucar.nc2.units.DateType getExpires()>();

        $r4 = (thredds.catalog.InvCatalogImpl) r0;

        $r5 = virtualinvoke $r4.<thredds.catalog.InvCatalogImpl: java.net.URI getBaseURI()>();

        specialinvoke $r1.<thredds.catalog.InvCatalogImpl: void <init>(java.lang.String,java.lang.String,ucar.nc2.units.DateType,java.net.URI)>($r2, "1.0", $r3, $r5);

        $r6 = staticinvoke <thredds.catalog.util.DeepCopyUtils: java.util.List copyServicesIntoCopiedCatalog(thredds.catalog.InvCatalog,thredds.catalog.InvCatalogImpl)>(r0, $r1);

        $r7 = virtualinvoke r0.<thredds.catalog.InvCatalog: java.util.List getDatasets()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (thredds.catalog.InvDataset) $r9;

        $r11 = staticinvoke <thredds.catalog.util.DeepCopyUtils: thredds.catalog.InvDataset copyDataset(thredds.catalog.InvDataset,java.util.List,boolean)>(r10, $r6, 0);

        $r12 = (thredds.catalog.InvDatasetImpl) $r11;

        virtualinvoke $r1.<thredds.catalog.InvCatalogImpl: void addDataset(thredds.catalog.InvDatasetImpl)>($r12);

        goto label2;

     label3:
        virtualinvoke $r1.<thredds.catalog.InvCatalogImpl: boolean finish()>();

        return $r1;
    }

    private static java.util.List copyServicesIntoCopiedCatalog(thredds.catalog.InvCatalog, thredds.catalog.InvCatalogImpl)
    {
        thredds.catalog.InvCatalog r0;
        java.util.Iterator $r2;
        thredds.catalog.InvService r6, $r7;
        java.util.List $r1, $r4;
        thredds.catalog.InvCatalogImpl r3;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @parameter0: thredds.catalog.InvCatalog;

        r3 := @parameter1: thredds.catalog.InvCatalogImpl;

        $r1 = virtualinvoke r0.<thredds.catalog.InvCatalog: java.util.List getServices()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r6 = (thredds.catalog.InvService) $r5;

        $r7 = staticinvoke <thredds.catalog.util.DeepCopyUtils: thredds.catalog.InvService copyService(thredds.catalog.InvService)>(r6);

        virtualinvoke r3.<thredds.catalog.InvCatalogImpl: void addService(thredds.catalog.InvService)>($r7);

        goto label1;

     label2:
        $r4 = virtualinvoke r3.<thredds.catalog.InvCatalogImpl: java.util.List getServices()>();

        return $r4;
    }

    public static thredds.catalog.InvCatalog subsetCatalogOnDataset(thredds.catalog.InvCatalog, java.lang.String)
    {
        thredds.catalog.InvCatalog r0, $r3;
        java.lang.IllegalArgumentException $r4, $r10, $r11;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String r1, $r9;
        thredds.catalog.InvDataset $r2;

        r0 := @parameter0: thredds.catalog.InvCatalog;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Catalog may not be null.");

        throw $r11;

     label1:
        if r1 != null goto label2;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Dataset ID may not be null.");

        throw $r10;

     label2:
        $r2 = virtualinvoke r0.<thredds.catalog.InvCatalog: thredds.catalog.InvDataset findDatasetByID(java.lang.String)>(r1);

        if $r2 != null goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The dataset ID [");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] does not match the ID of a dataset in the catalog.");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label3:
        $r3 = staticinvoke <thredds.catalog.util.DeepCopyUtils: thredds.catalog.InvCatalog subsetCatalogOnDataset(thredds.catalog.InvCatalog,thredds.catalog.InvDataset)>(r0, $r2);

        return $r3;
    }

    public static thredds.catalog.InvCatalog subsetCatalogOnDataset(thredds.catalog.InvCatalog, thredds.catalog.InvDataset)
    {
        thredds.catalog.InvCatalog r0, $r2;
        java.lang.IllegalArgumentException $r9, $r10, $r11;
        java.util.List $r6;
        thredds.catalog.InvCatalogImpl $r4;
        java.net.URI $r3;
        java.lang.String $r5;
        thredds.catalog.InvDatasetImpl $r8;
        thredds.catalog.InvDataset r1, $r7;

        r0 := @parameter0: thredds.catalog.InvCatalog;

        r1 := @parameter1: thredds.catalog.InvDataset;

        if r0 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Catalog may not be null.");

        throw $r11;

     label1:
        if r1 != null goto label2;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Dataset may not be null.");

        throw $r10;

     label2:
        $r2 = virtualinvoke r1.<thredds.catalog.InvDataset: thredds.catalog.InvCatalog getParentCatalog()>();

        if $r2 == r0 goto label3;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Catalog must contain the dataset.");

        throw $r9;

     label3:
        $r3 = staticinvoke <thredds.catalog.util.DeepCopyUtils: java.net.URI formDocBaseUriForSubsetCatalog(thredds.catalog.InvCatalog,thredds.catalog.InvDataset)>(r0, r1);

        $r4 = new thredds.catalog.InvCatalogImpl;

        $r5 = virtualinvoke r1.<thredds.catalog.InvDataset: java.lang.String getName()>();

        specialinvoke $r4.<thredds.catalog.InvCatalogImpl: void <init>(java.lang.String,java.lang.String,java.net.URI)>($r5, "1.0", $r3);

        $r6 = staticinvoke <thredds.catalog.util.DeepCopyUtils: java.util.List copyServicesIntoCopiedCatalog(thredds.catalog.InvCatalog,thredds.catalog.InvCatalogImpl)>(r0, $r4);

        $r7 = staticinvoke <thredds.catalog.util.DeepCopyUtils: thredds.catalog.InvDataset copyDataset(thredds.catalog.InvDataset,java.util.List,boolean)>(r1, $r6, 1);

        $r8 = (thredds.catalog.InvDatasetImpl) $r7;

        virtualinvoke $r4.<thredds.catalog.InvCatalogImpl: void addDataset(thredds.catalog.InvDatasetImpl)>($r8);

        virtualinvoke $r4.<thredds.catalog.InvCatalogImpl: boolean finish()>();

        return $r4;
    }

    private static java.net.URI formDocBaseUriForSubsetCatalog(thredds.catalog.InvCatalog, thredds.catalog.InvDataset)
    {
        java.lang.IllegalStateException $r12;
        java.net.URISyntaxException $r11;
        java.lang.String $r1, $r6, $r8, $r15, $r18, $r21, $r22, $r23;
        java.net.URI $r10;
        thredds.catalog.InvDataset r5;
        thredds.catalog.InvCatalog r0;
        thredds.catalog.InvCatalogImpl $r9;
        java.lang.StringBuilder $r2, $r3, $r4, $r7, $r13, $r14, $r16, $r17, $r19, $r20;

        r0 := @parameter0: thredds.catalog.InvCatalog;

        r5 := @parameter1: thredds.catalog.InvDataset;

        $r1 = virtualinvoke r0.<thredds.catalog.InvCatalog: java.lang.String getUriString()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r6 = virtualinvoke r5.<thredds.catalog.InvDataset: java.lang.String getID()>();

        if $r6 == null goto label1;

        $r22 = virtualinvoke r5.<thredds.catalog.InvDataset: java.lang.String getID()>();

        goto label2;

     label1:
        $r22 = virtualinvoke r5.<thredds.catalog.InvDataset: java.lang.String getName()>();

     label2:
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = (thredds.catalog.InvCatalogImpl) r0;

        virtualinvoke $r9.<thredds.catalog.InvCatalogImpl: java.net.URI getBaseURI()>();

     label3:
        $r10 = new java.net.URI;

        specialinvoke $r10.<java.net.URI: void <init>(java.lang.String)>($r8);

     label4:
        return $r10;

     label5:
        $r11 := @caughtexception;

        $r12 = new java.lang.IllegalStateException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad document Base URI for new catalog [");

        $r15 = virtualinvoke r0.<thredds.catalog.InvCatalog: java.lang.String getUriString()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r18 = virtualinvoke r5.<thredds.catalog.InvDataset: java.lang.String getID()>();

        if $r18 == null goto label6;

        $r23 = virtualinvoke r5.<thredds.catalog.InvDataset: java.lang.String getID()>();

        goto label7;

     label6:
        $r23 = virtualinvoke r5.<thredds.catalog.InvDataset: java.lang.String getName()>();

     label7:
        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r21, $r11);

        throw $r12;

        catch java.net.URISyntaxException from label3 to label4 with label5;
    }

    public static thredds.catalog.InvDataset copyDataset(thredds.catalog.InvDataset, java.util.List, boolean)
    {
        thredds.catalog.InvAccess $r15, r23;
        thredds.catalog.InvCatalogRef $r16, r21;
        thredds.catalog.InvDataset r0, $r9, r24;
        boolean $z0, z1, $z2, $z3, $z4, $z5;
        java.util.List r1, $r6, $r12;
        java.lang.String $r3, $r4, $r11, $r17, $r18;
        java.util.Iterator $r7, $r13;
        java.lang.IllegalArgumentException $r19, $r20;
        java.lang.Object $r8, $r14;
        thredds.catalog.InvDatasetImpl $r2, $r5, $r10, r22, r25;

        r0 := @parameter0: thredds.catalog.InvDataset;

        r1 := @parameter1: java.util.List;

        z1 := @parameter2: boolean;

        if r0 != null goto label01;

        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Dataset may not be null.");

        throw $r20;

     label01:
        if r1 != null goto label02;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("List of available services may not be null.");

        throw $r19;

     label02:
        $z0 = r0 instanceof thredds.catalog.InvCatalogRef;

        if $z0 == 0 goto label03;

        r21 = (thredds.catalog.InvCatalogRef) r0;

        $r16 = new thredds.catalog.InvCatalogRef;

        $r17 = virtualinvoke r21.<thredds.catalog.InvCatalogRef: java.lang.String getName()>();

        $r18 = virtualinvoke r21.<thredds.catalog.InvCatalogRef: java.lang.String getXlinkHref()>();

        specialinvoke $r16.<thredds.catalog.InvCatalogRef: void <init>(thredds.catalog.InvDatasetImpl,java.lang.String,java.lang.String)>(null, $r17, $r18);

        r22 = $r16;

        goto label04;

     label03:
        $r2 = new thredds.catalog.InvDatasetImpl;

        $r3 = virtualinvoke r0.<thredds.catalog.InvDataset: java.lang.String getName()>();

        specialinvoke $r2.<thredds.catalog.InvDatasetImpl: void <init>(thredds.catalog.InvDataset,java.lang.String)>(null, $r3);

        r22 = $r2;

     label04:
        $r4 = virtualinvoke r0.<thredds.catalog.InvDataset: java.lang.String getID()>();

        virtualinvoke r22.<thredds.catalog.InvDatasetImpl: void setID(java.lang.String)>($r4);

        $r5 = (thredds.catalog.InvDatasetImpl) r0;

        virtualinvoke r22.<thredds.catalog.InvDatasetImpl: void transferMetadata(thredds.catalog.InvDatasetImpl,boolean)>($r5, z1);

        $z2 = r0 instanceof thredds.catalog.InvCatalogRef;

        if $z2 != 0 goto label08;

        $r10 = (thredds.catalog.InvDatasetImpl) r0;

        $r11 = virtualinvoke $r10.<thredds.catalog.InvDatasetImpl: java.lang.String getUrlPath()>();

        if $r11 == null goto label05;

        virtualinvoke r22.<thredds.catalog.InvDatasetImpl: void setUrlPath(java.lang.String)>($r11);

        goto label08;

     label05:
        $r12 = virtualinvoke r0.<thredds.catalog.InvDataset: java.util.List getAccess()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z4 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label08;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r23 = (thredds.catalog.InvAccess) $r14;

        $r15 = staticinvoke <thredds.catalog.util.DeepCopyUtils: thredds.catalog.InvAccess copyAccess(thredds.catalog.InvAccess,thredds.catalog.InvDataset,java.util.List)>(r23, r22, r1);

        if $r15 == null goto label07;

        virtualinvoke r22.<thredds.catalog.InvDatasetImpl: void addAccess(thredds.catalog.InvAccess)>($r15);

     label07:
        goto label06;

     label08:
        $z5 = r0 instanceof thredds.catalog.InvCatalogRef;

        if $z5 != 0 goto label10;

        $r6 = virtualinvoke r0.<thredds.catalog.InvDataset: java.util.List getDatasets()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z3 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r24 = (thredds.catalog.InvDataset) $r8;

        $r9 = staticinvoke <thredds.catalog.util.DeepCopyUtils: thredds.catalog.InvDataset copyDataset(thredds.catalog.InvDataset,java.util.List,boolean)>(r24, r1, 0);

        r25 = (thredds.catalog.InvDatasetImpl) $r9;

        virtualinvoke r25.<thredds.catalog.InvDatasetImpl: void setParent(thredds.catalog.InvDatasetImpl)>(r22);

        virtualinvoke r22.<thredds.catalog.InvDatasetImpl: void addDataset(thredds.catalog.InvDatasetImpl)>(r25);

        goto label09;

     label10:
        return r22;
    }

    public static thredds.catalog.InvAccess copyAccess(thredds.catalog.InvAccess, thredds.catalog.InvDataset, java.util.List)
    {
        thredds.catalog.InvAccess r1;
        java.lang.String $r3, $r8, $r9, $r10, $r12, $r18;
        thredds.catalog.InvDataset r0;
        double $d0, $d1;
        org.slf4j.Logger $r14;
        thredds.catalog.InvService $r2, $r5;
        thredds.catalog.DataFormatType $r6;
        thredds.catalog.InvAccessImpl $r7, $r11, r20;
        java.lang.IllegalArgumentException $r19;
        java.util.List r4;
        java.lang.StringBuilder $r13, $r15, $r16, $r17;

        r1 := @parameter0: thredds.catalog.InvAccess;

        r0 := @parameter1: thredds.catalog.InvDataset;

        r4 := @parameter2: java.util.List;

        if r0 != null goto label1;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parent dataset may not be null.");

        throw $r19;

     label1:
        $r2 = virtualinvoke r1.<thredds.catalog.InvAccess: thredds.catalog.InvService getService()>();

        $r3 = virtualinvoke $r2.<thredds.catalog.InvService: java.lang.String getName()>();

        $r5 = staticinvoke <thredds.catalog.util.DeepCopyUtils: thredds.catalog.InvService findServiceByName(java.lang.String,java.util.List)>($r3, r4);

        if $r5 != null goto label2;

        $r14 = <thredds.catalog.util.DeepCopyUtils: org.slf4j.Logger logger>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Access service [");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] not in available service list.");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<org.slf4j.Logger: void warn(java.lang.String)>($r18);

        return null;

     label2:
        $r6 = virtualinvoke r1.<thredds.catalog.InvAccess: thredds.catalog.DataFormatType getDataFormatType()>();

        if $r6 != null goto label3;

        $r11 = new thredds.catalog.InvAccessImpl;

        $r12 = virtualinvoke r1.<thredds.catalog.InvAccess: java.lang.String getUrlPath()>();

        specialinvoke $r11.<thredds.catalog.InvAccessImpl: void <init>(thredds.catalog.InvDataset,java.lang.String,thredds.catalog.InvService)>(r0, $r12, $r5);

        r20 = $r11;

        $d1 = virtualinvoke r1.<thredds.catalog.InvAccess: double getDataSize()>();

        virtualinvoke $r11.<thredds.catalog.InvAccessImpl: void setSize(double)>($d1);

        goto label4;

     label3:
        $r7 = new thredds.catalog.InvAccessImpl;

        $r8 = virtualinvoke r1.<thredds.catalog.InvAccess: java.lang.String getUrlPath()>();

        $r9 = virtualinvoke $r5.<thredds.catalog.InvService: java.lang.String getName()>();

        $r10 = virtualinvoke $r6.<thredds.catalog.DataFormatType: java.lang.String toString()>();

        $d0 = virtualinvoke r1.<thredds.catalog.InvAccess: double getDataSize()>();

        specialinvoke $r7.<thredds.catalog.InvAccessImpl: void <init>(thredds.catalog.InvDataset,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double)>(r0, $r8, $r9, null, $r10, $d0);

        r20 = $r7;

     label4:
        return r20;
    }

    static thredds.catalog.InvService findServiceByName(java.lang.String, java.util.List)
    {
        java.util.Iterator $r1;
        thredds.catalog.InvService r3, $r7;
        java.util.List r0, $r6;
        java.lang.Object $r2;
        java.lang.String $r4, r5;
        boolean $z0, $z1;

        r5 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.List;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (thredds.catalog.InvService) $r2;

        $r4 = virtualinvoke r3.<thredds.catalog.InvService: java.lang.String getName()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z1 == 0 goto label3;

        return r3;

     label3:
        $r6 = virtualinvoke r3.<thredds.catalog.InvService: java.util.List getServices()>();

        if $r6 == null goto label4;

        $r7 = staticinvoke <thredds.catalog.util.DeepCopyUtils: thredds.catalog.InvService findServiceByName(java.lang.String,java.util.List)>(r5, $r6);

        goto label5;

     label4:
        $r7 = null;

     label5:
        if $r7 == null goto label6;

        return $r7;

     label6:
        goto label2;

     label7:
        return null;
    }

    public static thredds.catalog.InvService copyService(thredds.catalog.InvService)
    {
        thredds.catalog.ServiceType $r3;
        java.lang.String $r2, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2;
        thredds.catalog.InvProperty $r15, $r17, r22, r23;
        thredds.catalog.InvService r0, $r1, $r19, r21;
        java.util.Iterator $r9, $r11, $r13;
        java.lang.IllegalArgumentException $r20;
        java.util.List $r8, $r10, $r12;
        java.lang.Object $r14, $r16, $r18;

        r0 := @parameter0: thredds.catalog.InvService;

        if r0 != null goto label1;

        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Service may not be null.");

        throw $r20;

     label1:
        $r1 = new thredds.catalog.InvService;

        $r2 = virtualinvoke r0.<thredds.catalog.InvService: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<thredds.catalog.InvService: thredds.catalog.ServiceType getServiceType()>();

        $r4 = virtualinvoke $r3.<thredds.catalog.ServiceType: java.lang.String toString()>();

        $r5 = virtualinvoke r0.<thredds.catalog.InvService: java.lang.String getBase()>();

        $r6 = virtualinvoke r0.<thredds.catalog.InvService: java.lang.String getSuffix()>();

        $r7 = virtualinvoke r0.<thredds.catalog.InvService: java.lang.String getDescription()>();

        specialinvoke $r1.<thredds.catalog.InvService: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r2, $r4, $r5, $r6, $r7);

        $r8 = virtualinvoke r0.<thredds.catalog.InvService: java.util.List getServices()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r18 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r21 = (thredds.catalog.InvService) $r18;

        $r19 = staticinvoke <thredds.catalog.util.DeepCopyUtils: thredds.catalog.InvService copyService(thredds.catalog.InvService)>(r21);

        virtualinvoke $r1.<thredds.catalog.InvService: void addService(thredds.catalog.InvService)>($r19);

        goto label2;

     label3:
        $r10 = virtualinvoke r0.<thredds.catalog.InvService: java.util.List getProperties()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r16 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r22 = (thredds.catalog.InvProperty) $r16;

        $r17 = staticinvoke <thredds.catalog.util.DeepCopyUtils: thredds.catalog.InvProperty copyProperty(thredds.catalog.InvProperty)>(r22);

        virtualinvoke $r1.<thredds.catalog.InvService: void addProperty(thredds.catalog.InvProperty)>($r17);

        goto label4;

     label5:
        $r12 = virtualinvoke r0.<thredds.catalog.InvService: java.util.List getDatasetRoots()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z2 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r23 = (thredds.catalog.InvProperty) $r14;

        $r15 = staticinvoke <thredds.catalog.util.DeepCopyUtils: thredds.catalog.InvProperty copyProperty(thredds.catalog.InvProperty)>(r23);

        virtualinvoke $r1.<thredds.catalog.InvService: void addDatasetRoot(thredds.catalog.InvProperty)>($r15);

        goto label6;

     label7:
        return $r1;
    }

    public static thredds.catalog.InvProperty copyProperty(thredds.catalog.InvProperty)
    {
        thredds.catalog.InvProperty $r0, r1;
        java.lang.String $r2, $r3;

        r1 := @parameter0: thredds.catalog.InvProperty;

        $r0 = new thredds.catalog.InvProperty;

        $r2 = virtualinvoke r1.<thredds.catalog.InvProperty: java.lang.String getName()>();

        $r3 = virtualinvoke r1.<thredds.catalog.InvProperty: java.lang.String getValue()>();

        specialinvoke $r0.<thredds.catalog.InvProperty: void <init>(java.lang.String,java.lang.String)>($r2, $r3);

        return $r0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lthredds/catalog/util/DeepCopyUtils;");

        <thredds.catalog.util.DeepCopyUtils: org.slf4j.Logger logger> = $r0;

        return;
    }
}
