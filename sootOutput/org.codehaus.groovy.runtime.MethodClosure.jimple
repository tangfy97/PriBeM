public class org.codehaus.groovy.runtime.MethodClosure extends groovy.lang.Closure
{
    private java.lang.String method;
    static java.lang.Class class$java$lang$Class;

    public void <init>(java.lang.Object, java.lang.String)
    {
        org.codehaus.groovy.runtime.MethodClosure r0;
        java.lang.reflect.Method[] $r9, $r12, $r25, r28;
        java.lang.reflect.Method $r13, $r15, $r17, $r19, $r21, $r23;
        boolean $z0, $z1;
        org.codehaus.groovy.runtime.MethodClosure$2 $r10;
        org.codehaus.groovy.runtime.MethodClosure$1 $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, i9;
        java.lang.String r2, $r14, $r20;
        java.lang.Class[] $r6, $r16, $r18, $r22, $r24;
        java.lang.Object r1, $r8, $r11;
        java.lang.Class $r3, $r4, r5, $r26, $r27;

        r0 := @this: org.codehaus.groovy.runtime.MethodClosure;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<groovy.lang.Closure: void <init>(java.lang.Object)>(r1);

        r0.<org.codehaus.groovy.runtime.MethodClosure: java.lang.String method> = r2;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = <org.codehaus.groovy.runtime.MethodClosure: java.lang.Class class$java$lang$Class>;

        if $r4 != null goto label01;

        $r26 = staticinvoke <org.codehaus.groovy.runtime.MethodClosure: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        <org.codehaus.groovy.runtime.MethodClosure: java.lang.Class class$java$lang$Class> = $r26;

        goto label02;

     label01:
        $r26 = <org.codehaus.groovy.runtime.MethodClosure: java.lang.Class class$java$lang$Class>;

     label02:
        if $r3 != $r26 goto label03;

        $r27 = (java.lang.Class) r1;

        goto label04;

     label03:
        $r27 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

     label04:
        r5 = $r27;

        r0.<org.codehaus.groovy.runtime.MethodClosure: int maximumNumberOfParameters> = 0;

        $r6 = newarray (java.lang.Class)[0];

        r0.<org.codehaus.groovy.runtime.MethodClosure: java.lang.Class[] parameterTypes> = $r6;

        $r7 = new org.codehaus.groovy.runtime.MethodClosure$1;

        specialinvoke $r7.<org.codehaus.groovy.runtime.MethodClosure$1: void <init>(org.codehaus.groovy.runtime.MethodClosure,java.lang.Class)>(r0, $r27);

        $r8 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r7);

        $r9 = (java.lang.reflect.Method[]) $r8;

        $r25 = (java.lang.reflect.Method[]) $r9;

        i7 = 0;

     label05:
        $i8 = lengthof $r25;

        if i7 >= $i8 goto label07;

        $r19 = $r25[i7];

        $r20 = virtualinvoke $r19.<java.lang.reflect.Method: java.lang.String getName()>();

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z1 == 0 goto label06;

        $r21 = $r25[i7];

        $r22 = virtualinvoke $r21.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i5 = lengthof $r22;

        $i4 = r0.<org.codehaus.groovy.runtime.MethodClosure: int maximumNumberOfParameters>;

        if $i5 <= $i4 goto label06;

        $r23 = $r25[i7];

        $r24 = virtualinvoke $r23.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i6 = lengthof $r24;

        r0.<org.codehaus.groovy.runtime.MethodClosure: int maximumNumberOfParameters> = $i6;

        r0.<org.codehaus.groovy.runtime.MethodClosure: java.lang.Class[] parameterTypes> = $r24;

     label06:
        i7 = i7 + 1;

        goto label05;

     label07:
        $r10 = new org.codehaus.groovy.runtime.MethodClosure$2;

        specialinvoke $r10.<org.codehaus.groovy.runtime.MethodClosure$2: void <init>(org.codehaus.groovy.runtime.MethodClosure,java.lang.Class)>(r0, r5);

        $r11 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r10);

        $r12 = (java.lang.reflect.Method[]) $r11;

        r28 = (java.lang.reflect.Method[]) $r12;

        i9 = 0;

     label08:
        $i0 = lengthof r28;

        if i9 >= $i0 goto label10;

        $r13 = r28[i9];

        $r14 = virtualinvoke $r13.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z0 == 0 goto label09;

        $r15 = r28[i9];

        $r16 = virtualinvoke $r15.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i2 = lengthof $r16;

        $i1 = r0.<org.codehaus.groovy.runtime.MethodClosure: int maximumNumberOfParameters>;

        if $i2 <= $i1 goto label09;

        $r17 = r28[i9];

        $r18 = virtualinvoke $r17.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i3 = lengthof $r18;

        r0.<org.codehaus.groovy.runtime.MethodClosure: int maximumNumberOfParameters> = $i3;

        r0.<org.codehaus.groovy.runtime.MethodClosure: java.lang.Class[] parameterTypes> = $r18;

     label09:
        i9 = i9 + 1;

        goto label08;

     label10:
        return;
    }

    public java.lang.String getMethod()
    {
        java.lang.String $r1;
        org.codehaus.groovy.runtime.MethodClosure r0;

        r0 := @this: org.codehaus.groovy.runtime.MethodClosure;

        $r1 = r0.<org.codehaus.groovy.runtime.MethodClosure: java.lang.String method>;

        return $r1;
    }

    protected java.lang.Object doCall(java.lang.Object)
    {
        org.codehaus.groovy.runtime.MethodClosure r0;
        java.lang.Object $r1, r2, $r4;
        java.lang.String $r3;

        r0 := @this: org.codehaus.groovy.runtime.MethodClosure;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.runtime.MethodClosure: java.lang.Object getDelegate()>();

        $r3 = r0.<org.codehaus.groovy.runtime.MethodClosure: java.lang.String method>;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>($r1, $r3, r2);

        return $r4;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        org.codehaus.groovy.runtime.MethodClosure r2;
        java.lang.Object $r3;
        java.lang.String r0, $r1, $r4;
        boolean $z0;

        r2 := @this: org.codehaus.groovy.runtime.MethodClosure;

        r0 := @parameter0: java.lang.String;

        $r1 = "method";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r2.<org.codehaus.groovy.runtime.MethodClosure: java.lang.String getMethod()>();

        return $r4;

     label1:
        $r3 = specialinvoke r2.<groovy.lang.Closure: java.lang.Object getProperty(java.lang.String)>(r0);

        return $r3;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
