public class com.glines.socketio.server.SocketIOFrame extends java.lang.Object
{
    public static final char SEPERATOR_CHAR;
    public static final int TEXT_MESSAGE_TYPE;
    public static final int JSON_MESSAGE_TYPE;
    private final com.glines.socketio.server.SocketIOFrame$FrameType frameType;
    private final int messageType;
    private final java.lang.String data;

    private static boolean isHexDigit(java.lang.String, int, int)
    {
        char $c2;
        int i0, i1, i3, $i4, $i5, $i6, $i7;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i3 = i0;

        goto label3;

     label1:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c2);

        if $z0 != 0 goto label2;

        $i4 = (int) $c2;

        if $i4 >= 65 goto label2;

        $i5 = (int) $c2;

        if $i5 <= 70 goto label2;

        $i6 = (int) $c2;

        if $i6 >= 97 goto label2;

        $i7 = (int) $c2;

        if $i7 <= 102 goto label2;

        return 0;

     label2:
        i3 = i3 + 1;

     label3:
        if i3 < i1 goto label1;

        return 1;
    }

    public static java.util.List parse(java.lang.String)
    {
        com.glines.socketio.server.SocketIOFrame $r10;
        java.util.ArrayList $r9;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15, $i17, $i19, $i20;
        java.lang.String r1, $r2, $r5, $r7, $r8;
        boolean $z0, $z1;
        com.glines.socketio.server.SocketIOFrame$FrameType $r3, $r4;
        char $c1;

        r1 := @parameter0: java.lang.String;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        i11 = 0;

        goto label7;

     label1:
        i12 = i11 + 1;

        $i2 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(126, i12);

        $i17 = (int) -1;

        if $i17 == $i2 goto label8;

        if i12 == $i2 goto label8;

        $z0 = staticinvoke <com.glines.socketio.server.SocketIOFrame: boolean isHexDigit(java.lang.String,int,int)>(r1, i12, $i2);

        if $z0 != 0 goto label2;

        goto label8;

     label2:
        i13 = 0;

        $i3 = i12 + 1;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i12, $i3);

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r2, 16);

        $r3 = staticinvoke <com.glines.socketio.server.SocketIOFrame$FrameType: com.glines.socketio.server.SocketIOFrame$FrameType fromInt(int)>($i4);

        $r4 = <com.glines.socketio.server.SocketIOFrame$FrameType: com.glines.socketio.server.SocketIOFrame$FrameType UNKNOWN>;

        if $r3 != $r4 goto label3;

        goto label8;

     label3:
        $i5 = $i2 - i12;

        if $i5 <= 1 goto label4;

        $i9 = i12 + 1;

        $r8 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i9, $i2);

        i13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r8, 16);

     label4:
        $i10 = $i2 + 1;

        $i6 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(126, $i10);

        $i19 = (int) -1;

        if $i19 == $i6 goto label8;

        if $i10 == $i6 goto label8;

        $z1 = staticinvoke <com.glines.socketio.server.SocketIOFrame: boolean isHexDigit(java.lang.String,int,int)>(r1, $i10, $i6);

        if $z1 != 0 goto label5;

        goto label8;

     label5:
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i10, $i6);

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r5, 16);

        i14 = $i6 + 1;

        i15 = i14 + $i7;

        $i8 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i8 >= i15 goto label6;

        goto label8;

     label6:
        $r10 = new com.glines.socketio.server.SocketIOFrame;

        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i14, i15);

        specialinvoke $r10.<com.glines.socketio.server.SocketIOFrame: void <init>(com.glines.socketio.server.SocketIOFrame$FrameType,int,java.lang.String)>($r3, i13, $r7);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r10);

        i11 = i15;

     label7:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= i11 goto label8;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i11);

        $i20 = (int) $c1;

        if $i20 == 126 goto label1;

     label8:
        return $r9;
    }

    public static java.lang.String encode(com.glines.socketio.server.SocketIOFrame$FrameType, int, java.lang.String)
    {
        com.glines.socketio.server.SocketIOFrame$FrameType r2;
        int $i0, $i1, $i2, i3, $i4;
        java.lang.StringBuilder $r0;
        java.lang.String r1, $r3, $r4, $r5, $r6;

        r2 := @parameter0: com.glines.socketio.server.SocketIOFrame$FrameType;

        i3 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = $i0 + 16;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>($i1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(126);

        $i2 = virtualinvoke r2.<com.glines.socketio.server.SocketIOFrame$FrameType: int value()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        if i3 == 0 goto label1;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label1:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(126);

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(126);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public void <init>(com.glines.socketio.server.SocketIOFrame$FrameType, int, java.lang.String)
    {
        com.glines.socketio.server.SocketIOFrame$FrameType r1;
        com.glines.socketio.server.SocketIOFrame r0;
        int i0;
        java.lang.String r2;

        r0 := @this: com.glines.socketio.server.SocketIOFrame;

        r1 := @parameter0: com.glines.socketio.server.SocketIOFrame$FrameType;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.glines.socketio.server.SocketIOFrame: com.glines.socketio.server.SocketIOFrame$FrameType frameType> = r1;

        r0.<com.glines.socketio.server.SocketIOFrame: int messageType> = i0;

        r0.<com.glines.socketio.server.SocketIOFrame: java.lang.String data> = r2;

        return;
    }

    public com.glines.socketio.server.SocketIOFrame$FrameType getFrameType()
    {
        com.glines.socketio.server.SocketIOFrame$FrameType $r1;
        com.glines.socketio.server.SocketIOFrame r0;

        r0 := @this: com.glines.socketio.server.SocketIOFrame;

        $r1 = r0.<com.glines.socketio.server.SocketIOFrame: com.glines.socketio.server.SocketIOFrame$FrameType frameType>;

        return $r1;
    }

    public int getMessageType()
    {
        int $i0;
        com.glines.socketio.server.SocketIOFrame r0;

        r0 := @this: com.glines.socketio.server.SocketIOFrame;

        $i0 = r0.<com.glines.socketio.server.SocketIOFrame: int messageType>;

        return $i0;
    }

    public java.lang.String getData()
    {
        com.glines.socketio.server.SocketIOFrame r0;
        java.lang.String $r1;

        r0 := @this: com.glines.socketio.server.SocketIOFrame;

        $r1 = r0.<com.glines.socketio.server.SocketIOFrame: java.lang.String data>;

        return $r1;
    }

    public java.lang.String encode()
    {
        com.glines.socketio.server.SocketIOFrame$FrameType $r2;
        com.glines.socketio.server.SocketIOFrame r0;
        int $i0;
        java.lang.String $r1, $r3;

        r0 := @this: com.glines.socketio.server.SocketIOFrame;

        $r2 = r0.<com.glines.socketio.server.SocketIOFrame: com.glines.socketio.server.SocketIOFrame$FrameType frameType>;

        $i0 = r0.<com.glines.socketio.server.SocketIOFrame: int messageType>;

        $r1 = r0.<com.glines.socketio.server.SocketIOFrame: java.lang.String data>;

        $r3 = staticinvoke <com.glines.socketio.server.SocketIOFrame: java.lang.String encode(com.glines.socketio.server.SocketIOFrame$FrameType,int,java.lang.String)>($r2, $i0, $r1);

        return $r3;
    }

    public static void <clinit>()
    {
        <com.glines.socketio.server.SocketIOFrame: int JSON_MESSAGE_TYPE> = 1;

        <com.glines.socketio.server.SocketIOFrame: int TEXT_MESSAGE_TYPE> = 0;

        <com.glines.socketio.server.SocketIOFrame: char SEPERATOR_CHAR> = 126;

        return;
    }
}
