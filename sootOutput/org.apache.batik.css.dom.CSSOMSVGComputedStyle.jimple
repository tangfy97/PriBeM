public class org.apache.batik.css.dom.CSSOMSVGComputedStyle extends org.apache.batik.css.dom.CSSOMComputedStyle
{

    public void <init>(org.apache.batik.css.engine.CSSEngine, org.apache.batik.css.engine.CSSStylableElement, java.lang.String)
    {
        org.apache.batik.css.dom.CSSOMSVGComputedStyle r0;
        org.apache.batik.css.engine.CSSStylableElement r2;
        java.lang.String r3;
        org.apache.batik.css.engine.CSSEngine r1;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGComputedStyle;

        r1 := @parameter0: org.apache.batik.css.engine.CSSEngine;

        r2 := @parameter1: org.apache.batik.css.engine.CSSStylableElement;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.batik.css.dom.CSSOMComputedStyle: void <init>(org.apache.batik.css.engine.CSSEngine,org.apache.batik.css.engine.CSSStylableElement,java.lang.String)>(r1, r2, r3);

        return;
    }

    protected org.w3c.dom.css.CSSValue createCSSValue(int)
    {
        org.apache.batik.css.dom.CSSOMSVGComputedStyle$ComputedCSSPaintValue $r2, $r11;
        org.apache.batik.css.engine.value.ValueManager[] $r5, $r8;
        org.w3c.dom.css.CSSValue $r3;
        org.apache.batik.css.engine.CSSEngine $r4, $r7;
        org.apache.batik.css.dom.CSSOMSVGComputedStyle$ComputedCSSColorValue $r0, $r10;
        org.apache.batik.css.engine.value.ValueManager $r6, $r9;
        org.apache.batik.css.dom.CSSOMSVGComputedStyle r1;
        int i0;
        boolean $z0, $z1;

        r1 := @this: org.apache.batik.css.dom.CSSOMSVGComputedStyle;

        i0 := @parameter0: int;

        if i0 <= 59 goto label2;

        $r4 = r1.<org.apache.batik.css.dom.CSSOMComputedStyle: org.apache.batik.css.engine.CSSEngine cssEngine>;

        $r5 = virtualinvoke $r4.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.value.ValueManager[] getValueManagers()>();

        $r6 = $r5[i0];

        $z0 = $r6 instanceof org.apache.batik.css.engine.value.svg.SVGPaintManager;

        if $z0 == 0 goto label1;

        $r11 = new org.apache.batik.css.dom.CSSOMSVGComputedStyle$ComputedCSSPaintValue;

        specialinvoke $r11.<org.apache.batik.css.dom.CSSOMSVGComputedStyle$ComputedCSSPaintValue: void <init>(org.apache.batik.css.dom.CSSOMSVGComputedStyle,int)>(r1, i0);

        return $r11;

     label1:
        $r7 = r1.<org.apache.batik.css.dom.CSSOMComputedStyle: org.apache.batik.css.engine.CSSEngine cssEngine>;

        $r8 = virtualinvoke $r7.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.value.ValueManager[] getValueManagers()>();

        $r9 = $r8[i0];

        $z1 = $r9 instanceof org.apache.batik.css.engine.value.svg.SVGColorManager;

        if $z1 == 0 goto label5;

        $r10 = new org.apache.batik.css.dom.CSSOMSVGComputedStyle$ComputedCSSColorValue;

        specialinvoke $r10.<org.apache.batik.css.dom.CSSOMSVGComputedStyle$ComputedCSSColorValue: void <init>(org.apache.batik.css.dom.CSSOMSVGComputedStyle,int)>(r1, i0);

        return $r10;

     label2:
        lookupswitch(i0)
        {
            case 15: goto label3;
            case 19: goto label4;
            case 33: goto label4;
            case 43: goto label4;
            case 45: goto label3;
            default: goto label5;
        };

     label3:
        $r2 = new org.apache.batik.css.dom.CSSOMSVGComputedStyle$ComputedCSSPaintValue;

        specialinvoke $r2.<org.apache.batik.css.dom.CSSOMSVGComputedStyle$ComputedCSSPaintValue: void <init>(org.apache.batik.css.dom.CSSOMSVGComputedStyle,int)>(r1, i0);

        return $r2;

     label4:
        $r0 = new org.apache.batik.css.dom.CSSOMSVGComputedStyle$ComputedCSSColorValue;

        specialinvoke $r0.<org.apache.batik.css.dom.CSSOMSVGComputedStyle$ComputedCSSColorValue: void <init>(org.apache.batik.css.dom.CSSOMSVGComputedStyle,int)>(r1, i0);

        return $r0;

     label5:
        $r3 = specialinvoke r1.<org.apache.batik.css.dom.CSSOMComputedStyle: org.w3c.dom.css.CSSValue createCSSValue(int)>(i0);

        return $r3;
    }
}
