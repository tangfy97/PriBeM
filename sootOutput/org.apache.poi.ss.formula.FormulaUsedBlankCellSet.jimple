final class org.apache.poi.ss.formula.FormulaUsedBlankCellSet extends java.lang.Object
{
    private final java.util.Map _sheetGroupsByBookSheet;

    public void <init>()
    {
        org.apache.poi.ss.formula.FormulaUsedBlankCellSet r0;
        java.util.HashMap $r1;

        r0 := @this: org.apache.poi.ss.formula.FormulaUsedBlankCellSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.poi.ss.formula.FormulaUsedBlankCellSet: java.util.Map _sheetGroupsByBookSheet> = $r1;

        return;
    }

    public void addCell(int, int, int, int)
    {
        int i0, i1, i2, i3;
        org.apache.poi.ss.formula.FormulaUsedBlankCellSet$BlankCellSheetGroup $r1;
        org.apache.poi.ss.formula.FormulaUsedBlankCellSet r0;

        r0 := @this: org.apache.poi.ss.formula.FormulaUsedBlankCellSet;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = specialinvoke r0.<org.apache.poi.ss.formula.FormulaUsedBlankCellSet: org.apache.poi.ss.formula.FormulaUsedBlankCellSet$BlankCellSheetGroup getSheetGroup(int,int)>(i0, i1);

        virtualinvoke $r1.<org.apache.poi.ss.formula.FormulaUsedBlankCellSet$BlankCellSheetGroup: void addCell(int,int)>(i2, i3);

        return;
    }

    private org.apache.poi.ss.formula.FormulaUsedBlankCellSet$BlankCellSheetGroup getSheetGroup(int, int)
    {
        org.apache.poi.ss.formula.FormulaUsedBlankCellSet$BookSheetKey $r0;
        org.apache.poi.ss.formula.FormulaUsedBlankCellSet$BlankCellSheetGroup $r4, r6;
        java.util.Map $r2, $r5;
        int i0, i1;
        org.apache.poi.ss.formula.FormulaUsedBlankCellSet r1;
        java.lang.Object $r3;

        r1 := @this: org.apache.poi.ss.formula.FormulaUsedBlankCellSet;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new org.apache.poi.ss.formula.FormulaUsedBlankCellSet$BookSheetKey;

        specialinvoke $r0.<org.apache.poi.ss.formula.FormulaUsedBlankCellSet$BookSheetKey: void <init>(int,int)>(i0, i1);

        $r2 = r1.<org.apache.poi.ss.formula.FormulaUsedBlankCellSet: java.util.Map _sheetGroupsByBookSheet>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        r6 = (org.apache.poi.ss.formula.FormulaUsedBlankCellSet$BlankCellSheetGroup) $r3;

        if r6 != null goto label1;

        $r4 = new org.apache.poi.ss.formula.FormulaUsedBlankCellSet$BlankCellSheetGroup;

        specialinvoke $r4.<org.apache.poi.ss.formula.FormulaUsedBlankCellSet$BlankCellSheetGroup: void <init>()>();

        r6 = $r4;

        $r5 = r1.<org.apache.poi.ss.formula.FormulaUsedBlankCellSet: java.util.Map _sheetGroupsByBookSheet>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r4);

     label1:
        return r6;
    }

    public boolean containsCell(org.apache.poi.ss.formula.FormulaUsedBlankCellSet$BookSheetKey, int, int)
    {
        org.apache.poi.ss.formula.FormulaUsedBlankCellSet$BookSheetKey r1;
        org.apache.poi.ss.formula.FormulaUsedBlankCellSet$BlankCellSheetGroup r4;
        java.util.Map $r2;
        int i0, i1;
        org.apache.poi.ss.formula.FormulaUsedBlankCellSet r0;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.poi.ss.formula.FormulaUsedBlankCellSet;

        r1 := @parameter0: org.apache.poi.ss.formula.FormulaUsedBlankCellSet$BookSheetKey;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.poi.ss.formula.FormulaUsedBlankCellSet: java.util.Map _sheetGroupsByBookSheet>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.poi.ss.formula.FormulaUsedBlankCellSet$BlankCellSheetGroup) $r3;

        if r4 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r4.<org.apache.poi.ss.formula.FormulaUsedBlankCellSet$BlankCellSheetGroup: boolean containsCell(int,int)>(i0, i1);

        return $z0;
    }

    public boolean isEmpty()
    {
        org.apache.poi.ss.formula.FormulaUsedBlankCellSet r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.ss.formula.FormulaUsedBlankCellSet;

        $r1 = r0.<org.apache.poi.ss.formula.FormulaUsedBlankCellSet: java.util.Map _sheetGroupsByBookSheet>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }
}
