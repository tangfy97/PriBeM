public class com.hp.hpl.jena.tdb.solver.QueryEngineTDB extends com.hp.hpl.jena.sparql.engine.main.QueryEngineMain
{
    private com.hp.hpl.jena.sparql.engine.binding.Binding initialInput;
    private boolean doingDynamicDatasetBySpecialDataset;
    protected static com.hp.hpl.jena.sparql.engine.QueryEngineFactory factory;

    public static com.hp.hpl.jena.sparql.engine.QueryEngineFactory getFactory()
    {
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory $r0;

        $r0 = <com.hp.hpl.jena.tdb.solver.QueryEngineTDB: com.hp.hpl.jena.sparql.engine.QueryEngineFactory factory>;

        return $r0;
    }

    public static void register()
    {
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory $r0;

        $r0 = <com.hp.hpl.jena.tdb.solver.QueryEngineTDB: com.hp.hpl.jena.sparql.engine.QueryEngineFactory factory>;

        staticinvoke <com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: void addFactory(com.hp.hpl.jena.sparql.engine.QueryEngineFactory)>($r0);

        return;
    }

    public static void unregister()
    {
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory $r0;

        $r0 = <com.hp.hpl.jena.tdb.solver.QueryEngineTDB: com.hp.hpl.jena.sparql.engine.QueryEngineFactory factory>;

        staticinvoke <com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: void removeFactory(com.hp.hpl.jena.sparql.engine.QueryEngineFactory)>($r0);

        return;
    }

    protected void <init>(com.hp.hpl.jena.sparql.algebra.Op, com.hp.hpl.jena.tdb.store.DatasetGraphTDB, com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding r3;
        com.hp.hpl.jena.tdb.store.DatasetGraphTDB r2;
        com.hp.hpl.jena.tdb.solver.QueryEngineTDB r0;
        com.hp.hpl.jena.sparql.util.Context r4;
        com.hp.hpl.jena.sparql.algebra.Op r1;

        r0 := @this: com.hp.hpl.jena.tdb.solver.QueryEngineTDB;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        r2 := @parameter1: com.hp.hpl.jena.tdb.store.DatasetGraphTDB;

        r3 := @parameter2: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r4 := @parameter3: com.hp.hpl.jena.sparql.util.Context;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.QueryEngineMain: void <init>(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.util.Context)>(r1, r2, r3, r4);

        r0.<com.hp.hpl.jena.tdb.solver.QueryEngineTDB: boolean doingDynamicDatasetBySpecialDataset> = 0;

        r0.<com.hp.hpl.jena.tdb.solver.QueryEngineTDB: com.hp.hpl.jena.sparql.engine.binding.Binding initialInput> = r3;

        return;
    }

    protected void <init>(com.hp.hpl.jena.query.Query, com.hp.hpl.jena.tdb.store.DatasetGraphTDB, com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.query.Query r1;
        com.hp.hpl.jena.tdb.store.DatasetGraphTDB r2;
        com.hp.hpl.jena.tdb.solver.QueryEngineTDB r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r8;
        com.hp.hpl.jena.sparql.util.Context r4, $r5;
        com.hp.hpl.jena.sparql.core.DatasetDescription $r6;
        com.hp.hpl.jena.sparql.engine.binding.Binding r3;
        com.hp.hpl.jena.sparql.util.Symbol $r7;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.solver.QueryEngineTDB;

        r1 := @parameter0: com.hp.hpl.jena.query.Query;

        r2 := @parameter1: com.hp.hpl.jena.tdb.store.DatasetGraphTDB;

        r3 := @parameter2: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r4 := @parameter3: com.hp.hpl.jena.sparql.util.Context;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.QueryEngineMain: void <init>(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.util.Context)>(r1, r2, r3, r4);

        r0.<com.hp.hpl.jena.tdb.solver.QueryEngineTDB: boolean doingDynamicDatasetBySpecialDataset> = 0;

        $r5 = r0.<com.hp.hpl.jena.tdb.solver.QueryEngineTDB: com.hp.hpl.jena.sparql.util.Context context>;

        $r6 = staticinvoke <com.hp.hpl.jena.sparql.core.DatasetDescription: com.hp.hpl.jena.sparql.core.DatasetDescription create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.util.Context)>(r1, $r5);

        if $r6 == null goto label1;

        r0.<com.hp.hpl.jena.tdb.solver.QueryEngineTDB: boolean doingDynamicDatasetBySpecialDataset> = 1;

        $r7 = <com.hp.hpl.jena.tdb.TDB: com.hp.hpl.jena.sparql.util.Symbol symUnionDefaultGraph>;

        $z0 = virtualinvoke r4.<com.hp.hpl.jena.sparql.util.Context: boolean isTrue(com.hp.hpl.jena.sparql.util.Symbol)>($r7);

        $r8 = staticinvoke <com.hp.hpl.jena.sparql.core.DynamicDatasets: com.hp.hpl.jena.sparql.core.DatasetGraph dynamicDataset(com.hp.hpl.jena.sparql.core.DatasetDescription,com.hp.hpl.jena.sparql.core.DatasetGraph,boolean)>($r6, r2, $z0);

        r0.<com.hp.hpl.jena.sparql.engine.main.QueryEngineMain: com.hp.hpl.jena.sparql.core.DatasetGraph dataset> = $r8;

     label1:
        r0.<com.hp.hpl.jena.tdb.solver.QueryEngineTDB: com.hp.hpl.jena.sparql.engine.binding.Binding initialInput> = r3;

        return;
    }

    protected com.hp.hpl.jena.sparql.algebra.Op modifyOp(com.hp.hpl.jena.sparql.algebra.Op)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r1;
        com.hp.hpl.jena.tdb.solver.QueryEngineTDB r0;
        com.hp.hpl.jena.sparql.algebra.Op $r2, $r3, r4, r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.solver.QueryEngineTDB;

        r4 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        $r1 = r0.<com.hp.hpl.jena.tdb.solver.QueryEngineTDB: com.hp.hpl.jena.sparql.engine.binding.Binding initialInput>;

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.core.Substitute: com.hp.hpl.jena.sparql.algebra.Op substitute(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.engine.binding.Binding)>(r4, $r1);

        $r3 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.QueryEngineMain: com.hp.hpl.jena.sparql.algebra.Op modifyOp(com.hp.hpl.jena.sparql.algebra.Op)>($r2);

        r5 = $r3;

        $z0 = r0.<com.hp.hpl.jena.tdb.solver.QueryEngineTDB: boolean doingDynamicDatasetBySpecialDataset>;

        if $z0 != 0 goto label1;

        r5 = staticinvoke <com.hp.hpl.jena.sparql.algebra.Algebra: com.hp.hpl.jena.sparql.algebra.Op toQuadForm(com.hp.hpl.jena.sparql.algebra.Op)>($r3);

     label1:
        virtualinvoke r0.<com.hp.hpl.jena.tdb.solver.QueryEngineTDB: void setOp(com.hp.hpl.jena.sparql.algebra.Op)>(r5);

        return r5;
    }

    public com.hp.hpl.jena.sparql.engine.QueryIterator eval(com.hp.hpl.jena.sparql.algebra.Op, com.hp.hpl.jena.sparql.core.DatasetGraph, com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.tdb.solver.QueryEngineTDB r2;
        com.hp.hpl.jena.sparql.core.DatasetGraph r3;
        com.hp.hpl.jena.sparql.util.Context r0;
        com.hp.hpl.jena.tdb.solver.QueryEngineTDB$QueryIteratorMaterializeBinding $r8;
        com.hp.hpl.jena.sparql.engine.binding.Binding r4;
        com.hp.hpl.jena.sparql.algebra.Op $r5, r6;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r7;
        com.hp.hpl.jena.sparql.util.Symbol $r1;
        boolean $z0, $z1;

        r2 := @this: com.hp.hpl.jena.tdb.solver.QueryEngineTDB;

        r6 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        r3 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r4 := @parameter2: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r0 := @parameter3: com.hp.hpl.jena.sparql.util.Context;

        $r1 = <com.hp.hpl.jena.tdb.TDB: com.hp.hpl.jena.sparql.util.Symbol symUnionDefaultGraph>;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.util.Context: boolean isTrue(com.hp.hpl.jena.sparql.util.Symbol)>($r1);

        if $z0 == 0 goto label1;

        $z1 = r2.<com.hp.hpl.jena.tdb.solver.QueryEngineTDB: boolean doingDynamicDatasetBySpecialDataset>;

        if $z1 != 0 goto label1;

        $r5 = staticinvoke <com.hp.hpl.jena.tdb.migrate.A2: com.hp.hpl.jena.sparql.algebra.Op unionDefaultGraphQuads(com.hp.hpl.jena.sparql.algebra.Op)>(r6);

        r6 = $r5;

        staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: void explain(java.lang.String,com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.util.Context)>("REWRITE(Union default graph)", $r5, r0);

     label1:
        $r7 = specialinvoke r2.<com.hp.hpl.jena.sparql.engine.main.QueryEngineMain: com.hp.hpl.jena.sparql.engine.QueryIterator eval(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.util.Context)>(r6, r3, r4, r0);

        $r8 = new com.hp.hpl.jena.tdb.solver.QueryEngineTDB$QueryIteratorMaterializeBinding;

        specialinvoke $r8.<com.hp.hpl.jena.tdb.solver.QueryEngineTDB$QueryIteratorMaterializeBinding: void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r7);

        return $r8;
    }

    public long getMillis()
    {
        com.hp.hpl.jena.tdb.solver.QueryEngineTDB r0;

        r0 := @this: com.hp.hpl.jena.tdb.solver.QueryEngineTDB;

        return -1L;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.tdb.solver.QueryEngineTDB$QueryEngineFactoryTDB $r0;

        $r0 = new com.hp.hpl.jena.tdb.solver.QueryEngineTDB$QueryEngineFactoryTDB;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.solver.QueryEngineTDB$QueryEngineFactoryTDB: void <init>()>();

        <com.hp.hpl.jena.tdb.solver.QueryEngineTDB: com.hp.hpl.jena.sparql.engine.QueryEngineFactory factory> = $r0;

        return;
    }
}
