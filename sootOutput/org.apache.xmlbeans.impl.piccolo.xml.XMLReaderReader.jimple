public final class org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader extends org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader
{
    private static final int BUFFER_SIZE;
    private java.io.Reader in;
    private boolean rewindDeclaration;
    private char[] cbuf;
    private int cbufPos;
    private int cbufEnd;
    private boolean eofReached;
    private boolean sawCR;
    private char[] oneCharBuf;

    public void <init>()
    {
        char[] $r1, $r2;
        org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: void <init>()>();

        $r1 = newarray (char)[8192];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: char[] cbuf> = $r1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufPos> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufEnd> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: boolean eofReached> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: boolean sawCR> = 0;

        $r2 = newarray (char)[1];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: char[] oneCharBuf> = $r2;

        return;
    }

    public void <init>(java.io.Reader) throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader r0;
        java.io.Reader r1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader;

        r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: void <init>(java.io.Reader,boolean)>(r1, 1);

        return;
    }

    public void <init>(java.io.Reader, boolean) throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader r0;
        char[] $r1, $r2;
        java.io.Reader r3;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader;

        r3 := @parameter0: java.io.Reader;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: void <init>()>();

        $r1 = newarray (char)[8192];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: char[] cbuf> = $r1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufPos> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufEnd> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: boolean eofReached> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: boolean sawCR> = 0;

        $r2 = newarray (char)[1];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: char[] oneCharBuf> = $r2;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: void reset(java.io.Reader,boolean)>(r3, z0);

        return;
    }

    public void reset(java.io.Reader, boolean) throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader r0;
        java.io.Reader r1;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader;

        r1 := @parameter0: java.io.Reader;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: void resetInput()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: java.io.Reader in> = r1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: boolean rewindDeclaration> = z0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufEnd> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufPos> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: boolean sawCR> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: boolean eofReached> = 0;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: void fillCharBuffer()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: void processXMLDecl()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader r0;
        java.io.Reader $r1, $r2;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: boolean eofReached> = 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufEnd> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufPos> = 0;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: java.io.Reader in>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: java.io.Reader in>;

        virtualinvoke $r2.<java.io.Reader: void close()>();

     label1:
        return;
    }

    public void mark(int) throws java.io.IOException
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;
        org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader r1;

        r1 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("mark() not supported");

        throw $r0;
    }

    public boolean markSupported()
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader;

        return 0;
    }

    public int read() throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader r0;
        int $i0, $i2;
        char[] $r1, $r2;
        char $c1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: char[] oneCharBuf>;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int read(char[],int,int)>($r1, 0, 1);

        if $i0 > 0 goto label1;

        return $i0;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: char[] oneCharBuf>;

        $c1 = $r2[0];

        $i2 = (int) $c1;

        return $i2;
    }

    public int read(char[]) throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader r0;
        int $i0, $i1;
        char[] r1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader;

        r1 := @parameter0: char[];

        $i0 = lengthof r1;

        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int read(char[],int,int)>(r1, 0, $i0);

        return $i1;
    }

    public int read(char[], int, int) throws java.io.IOException
    {
        boolean $z0, $z1, $z2, $z3;
        java.io.Reader $r1;
        java.lang.StringBuffer $r6, $r8, $r12, $r14, $r16, $r18;
        int i0, $i1, $i2, $i3, $i4, i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i23, $i24, $i26, $i27, $i28, $i29, $i30, $i31, $i33;
        java.lang.String $r7, $r9, $r13, $r15;
        org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader r0;
        char c5;
        org.apache.xmlbeans.impl.piccolo.io.IllegalCharException $r17, $r19;
        char[] $r2, r3;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader;

        r3 := @parameter0: char[];

        i6 := @parameter1: int;

        i0 := @parameter2: int;

        i13 = 0;

     label01:
        if i13 >= i0 goto label15;

        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufPos>;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufEnd>;

        if $i2 >= $i1 goto label02;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: char[] cbuf>;

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufPos>;

        $i4 = $i3 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufPos> = $i4;

        c5 = $r2[$i3];

        goto label05;

     label02:
        $z1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: boolean eofReached>;

        if $z1 == 0 goto label03;

        goto label15;

     label03:
        if i13 == 0 goto label04;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: java.io.Reader in>;

        $z2 = virtualinvoke $r1.<java.io.Reader: boolean ready()>();

        if $z2 == 0 goto label15;

     label04:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: void fillCharBuffer()>();

        goto label01;

     label05:
        $i17 = (int) c5;

        if $i17 < 32 goto label09;

        $i18 = (int) c5;

        $i20 = (int) 55295;

        if $i18 <= $i20 goto label07;

        $i21 = (int) c5;

        $i23 = (int) 57344;

        if $i21 < $i23 goto label06;

        $i24 = (int) c5;

        $i26 = (int) 65533;

        if $i24 <= $i26 goto label07;

     label06:
        $i27 = (int) c5;

        if $i27 < 65536 goto label08;

        $i28 = (int) c5;

        if $i28 > 1114111 goto label08;

     label07:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: boolean sawCR> = 0;

        $i14 = i13;

        i13 = i13 + 1;

        $i15 = i6 + $i14;

        r3[$i15] = c5;

        goto label01;

     label08:
        $r17 = new org.apache.xmlbeans.impl.piccolo.io.IllegalCharException;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal XML Character: 0x");

        $i29 = (int) c5;

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i29);

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r17.<org.apache.xmlbeans.impl.piccolo.io.IllegalCharException: void <init>(java.lang.String)>($r15);

        throw $r17;

     label09:
        $i30 = (int) c5;

        tableswitch($i30)
        {
            case 9: goto label13;
            case 10: goto label10;
            case 11: goto label14;
            case 12: goto label14;
            case 13: goto label12;
            default: goto label14;
        };

     label10:
        $z3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: boolean sawCR>;

        if $z3 == 0 goto label11;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: boolean sawCR> = 0;

        goto label01;

     label11:
        $i9 = i13;

        i13 = i13 + 1;

        $i10 = i6 + $i9;

        r3[$i10] = 10;

        goto label01;

     label12:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: boolean sawCR> = 1;

        $i7 = i13;

        i13 = i13 + 1;

        $i8 = i6 + $i7;

        r3[$i8] = 10;

        goto label01;

     label13:
        $i11 = i13;

        i13 = i13 + 1;

        $i12 = i6 + $i11;

        r3[$i12] = 9;

        goto label01;

     label14:
        $r19 = new org.apache.xmlbeans.impl.piccolo.io.IllegalCharException;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal XML character: 0x");

        $i31 = (int) c5;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i31);

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r19.<org.apache.xmlbeans.impl.piccolo.io.IllegalCharException: void <init>(java.lang.String)>($r9);

        throw $r19;

     label15:
        if i13 != 0 goto label16;

        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: boolean eofReached>;

        if $z0 == 0 goto label16;

        $i33 = (int) -1;

        $i16 = $i33;

        goto label17;

     label16:
        $i16 = i13;

     label17:
        return $i16;
    }

    public boolean ready() throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader r0;
        int $i0, $i1, $i2;
        java.io.Reader $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufEnd>;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufPos>;

        $i2 = $i1 - $i0;

        if $i2 > 0 goto label1;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: java.io.Reader in>;

        $z0 = virtualinvoke $r1.<java.io.Reader: boolean ready()>();

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public void reset() throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader r0;
        java.io.Reader $r1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: void resetInput()>();

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: java.io.Reader in>;

        virtualinvoke $r1.<java.io.Reader: void reset()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufEnd> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufPos> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: boolean sawCR> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: boolean eofReached> = 0;

        return;
    }

    public long skip(long) throws java.io.IOException
    {
        byte $b8;
        boolean $z0, $z1, $z2;
        long l0, $l7, $l10;
        java.lang.StringBuffer $r4, $r6, $r10, $r12, $r14, $r16;
        int $i1, $i2, $i3, $i4, i6, $i9, $i11, $i12, $i13, $i15, $i16, $i18, $i19, $i21, $i22, $i23, $i24, $i25, $i26, $i28;
        java.lang.String $r5, $r7, $r11, $r13;
        org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader r0;
        char c5;
        org.apache.xmlbeans.impl.piccolo.io.IllegalCharException $r15, $r17;
        char[] $r1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader;

        l0 := @parameter0: long;

        i6 = 0;

     label01:
        $l7 = (long) i6;

        $b8 = $l7 cmp l0;

        $i11 = (int) $b8;

        if $i11 >= 0 goto label14;

        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufPos>;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufEnd>;

        if $i2 >= $i1 goto label02;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: char[] cbuf>;

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufPos>;

        $i4 = $i3 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufPos> = $i4;

        c5 = $r1[$i3];

        goto label04;

     label02:
        $z1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: boolean eofReached>;

        if $z1 == 0 goto label03;

        goto label14;

     label03:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: void fillCharBuffer()>();

        goto label01;

     label04:
        $i12 = (int) c5;

        if $i12 < 32 goto label08;

        $i13 = (int) c5;

        $i15 = (int) 55295;

        if $i13 <= $i15 goto label06;

        $i16 = (int) c5;

        $i18 = (int) 57344;

        if $i16 < $i18 goto label05;

        $i19 = (int) c5;

        $i21 = (int) 65533;

        if $i19 <= $i21 goto label06;

     label05:
        $i22 = (int) c5;

        if $i22 < 65536 goto label07;

        $i23 = (int) c5;

        if $i23 > 1114111 goto label07;

     label06:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: boolean sawCR> = 0;

        i6 = i6 + 1;

        goto label01;

     label07:
        $r15 = new org.apache.xmlbeans.impl.piccolo.io.IllegalCharException;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal XML Character: 0x");

        $i24 = (int) c5;

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i24);

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r15.<org.apache.xmlbeans.impl.piccolo.io.IllegalCharException: void <init>(java.lang.String)>($r13);

        throw $r15;

     label08:
        $i25 = (int) c5;

        tableswitch($i25)
        {
            case 9: goto label12;
            case 10: goto label09;
            case 11: goto label13;
            case 12: goto label13;
            case 13: goto label11;
            default: goto label13;
        };

     label09:
        $z2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: boolean sawCR>;

        if $z2 == 0 goto label10;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: boolean sawCR> = 0;

        goto label01;

     label10:
        i6 = i6 + 1;

        goto label01;

     label11:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: boolean sawCR> = 1;

        i6 = i6 + 1;

        goto label01;

     label12:
        i6 = i6 + 1;

        goto label01;

     label13:
        $r17 = new org.apache.xmlbeans.impl.piccolo.io.IllegalCharException;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal XML character: 0x");

        $i26 = (int) c5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i26);

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r17.<org.apache.xmlbeans.impl.piccolo.io.IllegalCharException: void <init>(java.lang.String)>($r7);

        throw $r17;

     label14:
        if i6 != 0 goto label15;

        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: boolean eofReached>;

        if $z0 == 0 goto label15;

        $i28 = (int) -1;

        $i9 = $i28;

        goto label16;

     label15:
        $i9 = i6;

     label16:
        $l10 = (long) $i9;

        return $l10;
    }

    private void fillCharBuffer() throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader r0;
        int $i0, $i1;
        char[] $r1;
        java.io.Reader $r2;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufPos> = 0;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: java.io.Reader in>;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: char[] cbuf>;

        $i0 = virtualinvoke $r2.<java.io.Reader: int read(char[],int,int)>($r1, 0, 8192);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufEnd> = $i0;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufEnd>;

        if $i1 > 0 goto label1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: boolean eofReached> = 1;

     label1:
        return;
    }

    private void processXMLDecl() throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader r0;
        int $i0, $i1, $i2, $i3;
        char[] $r1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: char[] cbuf>;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufEnd>;

        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int parseXMLDeclaration(char[],int,int)>($r1, 0, $i0);

        if $i1 <= 0 goto label1;

        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: boolean rewindDeclaration>;

        if $z0 != 0 goto label1;

        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufPos>;

        $i3 = $i2 + $i1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int cbufPos> = $i3;

     label1:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.xmlbeans.impl.piccolo.xml.XMLReaderReader: int BUFFER_SIZE> = 8192;

        return;
    }
}
