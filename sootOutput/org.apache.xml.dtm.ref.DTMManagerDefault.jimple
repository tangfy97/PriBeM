public class org.apache.xml.dtm.ref.DTMManagerDefault extends org.apache.xml.dtm.DTMManager
{
    private static final boolean DUMPTREE;
    private static final boolean DEBUG;
    protected org.apache.xml.dtm.DTM[] m_dtms;
    int[] m_dtm_offsets;
    protected org.apache.xml.utils.XMLReaderManager m_readerManager;
    private org.apache.xml.dtm.ref.ExpandedNameTable m_expandedNameTable;

    public synchronized void addDTM(org.apache.xml.dtm.DTM, int)
    {
        org.apache.xml.dtm.DTM r1;
        int i0;
        org.apache.xml.dtm.ref.DTMManagerDefault r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        r1 := @parameter0: org.apache.xml.dtm.DTM;

        i0 := @parameter1: int;

        virtualinvoke r0.<org.apache.xml.dtm.ref.DTMManagerDefault: void addDTM(org.apache.xml.dtm.DTM,int,int)>(r1, i0, 0);

        return;
    }

    public synchronized void addDTM(org.apache.xml.dtm.DTM, int, int)
    {
        int[] $r4, r7, $r8;
        int i0, i1, i2, $i3, $i4;
        java.lang.String $r10;
        org.apache.xml.dtm.DTMException $r9;
        org.apache.xml.dtm.ref.DTMManagerDefault r0;
        org.apache.xml.dtm.DTM[] $r1, $r3, r5, $r6;
        org.apache.xml.dtm.DTM r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        r2 := @parameter0: org.apache.xml.dtm.DTM;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 < 65536 goto label1;

        $r9 = new org.apache.xml.dtm.DTMException;

        $r10 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_NO_DTMIDS_AVAIL", null);

        specialinvoke $r9.<org.apache.xml.dtm.DTMException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label1:
        $r1 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms>;

        i1 = lengthof $r1;

        if i1 > i0 goto label2;

        $i3 = i0 + 256;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i3, 65536);

        r5 = newarray (org.apache.xml.dtm.DTM)[$i4];

        $r6 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r5, 0, i1);

        r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms> = r5;

        r7 = newarray (int)[$i4];

        $r8 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: int[] m_dtm_offsets>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, r7, 0, i1);

        r0.<org.apache.xml.dtm.ref.DTMManagerDefault: int[] m_dtm_offsets> = r7;

     label2:
        $r3 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms>;

        $r3[i0] = r2;

        $r4 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: int[] m_dtm_offsets>;

        $r4[i0] = i2;

        interfaceinvoke r2.<org.apache.xml.dtm.DTM: void documentRegistration()>();

        return;
    }

    public synchronized int getFirstFreeDTMID()
    {
        org.apache.xml.dtm.DTM[] $r1, $r2;
        int i0, i1;
        org.apache.xml.dtm.DTM $r3;
        org.apache.xml.dtm.ref.DTMManagerDefault r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms>;

        i0 = lengthof $r1;

        i1 = 1;

        goto label3;

     label1:
        $r2 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms>;

        $r3 = $r2[i1];

        if null != $r3 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < i0 goto label1;

        return i0;
    }

    public void <init>()
    {
        org.apache.xml.dtm.DTM[] $r1;
        int[] $r2;
        org.apache.xml.dtm.ref.ExpandedNameTable $r3;
        org.apache.xml.dtm.ref.DTMManagerDefault r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        specialinvoke r0.<org.apache.xml.dtm.DTMManager: void <init>()>();

        $r1 = newarray (org.apache.xml.dtm.DTM)[256];

        r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms> = $r1;

        $r2 = newarray (int)[256];

        r0.<org.apache.xml.dtm.ref.DTMManagerDefault: int[] m_dtm_offsets> = $r2;

        r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.utils.XMLReaderManager m_readerManager> = null;

        $r3 = new org.apache.xml.dtm.ref.ExpandedNameTable;

        specialinvoke $r3.<org.apache.xml.dtm.ref.ExpandedNameTable: void <init>()>();

        r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.ref.ExpandedNameTable m_expandedNameTable> = $r3;

        return;
    }

    public synchronized org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source, boolean, org.apache.xml.dtm.DTMWSFilter, boolean, boolean)
    {
        org.xml.sax.SAXNotSupportedException $r24;
        org.apache.xml.dtm.ref.IncrementalSAXSource r41;
        org.xml.sax.ErrorHandler $r6, $r7;
        org.apache.xml.utils.XMLStringFactory r1;
        org.apache.xml.dtm.DTMWSFilter r5;
        org.apache.xml.dtm.DTMException $r15;
        boolean z0, $z1, $z2, z3, $z4, z5, $z6, z7, $z8, z10, $z11, $z12;
        org.apache.xml.dtm.ref.IncrementalSAXSource_Filter $r8, $r9;
        java.lang.Exception $r21, $r26, $r29, $r30;
        java.lang.Throwable $r20;
        javax.xml.transform.dom.DOMSource $r19;
        java.lang.Object[] $r16;
        org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM $r14;
        javax.xml.transform.Source r2;
        org.xml.sax.SAXNotRecognizedException $r25;
        org.xml.sax.XMLReader r36;
        java.lang.StringBuffer $r31, $r33, $r34;
        int $i0, i1;
        java.lang.String $r4, $r13, $r17, $r35, r38;
        java.io.PrintStream $r32;
        org.xml.sax.InputSource $r3, r37;
        org.apache.xml.utils.WrappedRuntimeException $r22, $r27;
        org.apache.xml.dtm.ref.dom2dtm.DOM2DTM $r18;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM r39, $r40;
        org.apache.xml.dtm.ref.DTMManagerDefault r0;
        java.lang.RuntimeException $r23, $r28;
        java.lang.Class $r10, $r12;
        java.lang.Object $r11;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        r2 := @parameter0: javax.xml.transform.Source;

        z3 := @parameter1: boolean;

        r5 := @parameter2: org.apache.xml.dtm.DTMWSFilter;

        z5 := @parameter3: boolean;

        z0 := @parameter4: boolean;

        r1 = r0.<org.apache.xml.dtm.DTMManager: org.apache.xml.utils.XMLStringFactory m_xsf>;

        $i0 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMManagerDefault: int getFirstFreeDTMID()>();

        i1 = $i0 << 16;

        if null == r2 goto label01;

        $z4 = r2 instanceof javax.xml.transform.dom.DOMSource;

        if $z4 == 0 goto label01;

        $r18 = new org.apache.xml.dtm.ref.dom2dtm.DOM2DTM;

        $r19 = (javax.xml.transform.dom.DOMSource) r2;

        specialinvoke $r18.<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: void <init>(org.apache.xml.dtm.DTMManager,javax.xml.transform.dom.DOMSource,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean)>(r0, $r19, i1, r5, r1, z0);

        virtualinvoke r0.<org.apache.xml.dtm.ref.DTMManagerDefault: void addDTM(org.apache.xml.dtm.DTM,int,int)>($r18, $i0, 0);

        return $r18;

     label01:
        if null == r2 goto label02;

        $z6 = r2 instanceof javax.xml.transform.sax.SAXSource;

        goto label03;

     label02:
        $z6 = 1;

     label03:
        z7 = $z6;

        if null == r2 goto label04;

        $z8 = r2 instanceof javax.xml.transform.stream.StreamSource;

        goto label05;

     label04:
        $z8 = 0;

     label05:
        if z7 != 0 goto label06;

        if $z8 == 0 goto label48;

     label06:
        r36 = null;

     label07:
        if null != r2 goto label08;

        r37 = null;

        goto label13;

     label08:
        r36 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.xml.sax.XMLReader getXMLReader(javax.xml.transform.Source)>(r2);

        $r3 = staticinvoke <javax.xml.transform.sax.SAXSource: org.xml.sax.InputSource sourceToInputSource(javax.xml.transform.Source)>(r2);

        r37 = $r3;

        $r4 = virtualinvoke $r3.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        r38 = $r4;

        if null == $r4 goto label13;

     label09:
        r38 = staticinvoke <org.apache.xml.utils.SystemIDResolver: java.lang.String getAbsoluteURI(java.lang.String)>($r4);

     label10:
        goto label12;

     label11:
        $r30 := @caughtexception;

        $r32 = <java.lang.System: java.io.PrintStream err>;

        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can not absolutize URL: ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r35);

     label12:
        virtualinvoke $r3.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>(r38);

     label13:
        if r2 != null goto label14;

        if z3 == 0 goto label14;

        if z5 != 0 goto label14;

        if z0 != 0 goto label14;

        $r14 = new org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM;

        specialinvoke $r14.<org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM: void <init>(org.apache.xml.dtm.DTMManager,javax.xml.transform.Source,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean)>(r0, r2, i1, r5, r1, z0);

        r39 = $r14;

        goto label15;

     label14:
        $r40 = new org.apache.xml.dtm.ref.sax2dtm.SAX2DTM;

        specialinvoke $r40.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: void <init>(org.apache.xml.dtm.DTMManager,javax.xml.transform.Source,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean)>(r0, r2, i1, r5, r1, z0);

        r39 = $r40;

     label15:
        virtualinvoke r0.<org.apache.xml.dtm.ref.DTMManagerDefault: void addDTM(org.apache.xml.dtm.DTM,int,int)>(r39, $i0, 0);

        if null == r36 goto label16;

        $r12 = virtualinvoke r36.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("org.apache.xerces.parsers.SAXParser");

        if $z2 == 0 goto label16;

        $z12 = 1;

        $z11 = 1;

        goto label17;

     label16:
        $z12 = 0;

        $z11 = 0;

     label17:
        z10 = $z11;

        if $z12 == 0 goto label18;

        z5 = 1;

     label18:
        $z1 = <org.apache.xml.dtm.DTMManager: boolean m_incremental>;

        if $z1 == 0 goto label33;

        if z5 == 0 goto label33;

        r41 = null;

        if z10 == 0 goto label22;

     label19:
        $r10 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces");

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.Object newInstance()>();

        r41 = (org.apache.xml.dtm.ref.IncrementalSAXSource) $r11;

     label20:
        goto label22;

     label21:
        $r29 := @caughtexception;

        virtualinvoke $r29.<java.lang.Throwable: void printStackTrace()>();

        r41 = null;

     label22:
        if r41 != null goto label24;

        if null != r36 goto label23;

        $r9 = new org.apache.xml.dtm.ref.IncrementalSAXSource_Filter;

        specialinvoke $r9.<org.apache.xml.dtm.ref.IncrementalSAXSource_Filter: void <init>()>();

        r41 = $r9;

        goto label24;

     label23:
        $r8 = new org.apache.xml.dtm.ref.IncrementalSAXSource_Filter;

        specialinvoke $r8.<org.apache.xml.dtm.ref.IncrementalSAXSource_Filter: void <init>()>();

        virtualinvoke $r8.<org.apache.xml.dtm.ref.IncrementalSAXSource_Filter: void setXMLReader(org.xml.sax.XMLReader)>(r36);

        r41 = $r8;

     label24:
        virtualinvoke r39.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: void setIncrementalSAXSource(org.apache.xml.dtm.ref.IncrementalSAXSource)>(r41);

        if null != r37 goto label26;

        goto label49;

     label25:
        return r39;

     label26:
        $r7 = interfaceinvoke r36.<org.xml.sax.XMLReader: org.xml.sax.ErrorHandler getErrorHandler()>();

        if null != $r7 goto label27;

        interfaceinvoke r36.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>(r39);

     label27:
        interfaceinvoke r36.<org.xml.sax.XMLReader: void setDTDHandler(org.xml.sax.DTDHandler)>(r39);

     label28:
        interfaceinvoke r41.<org.apache.xml.dtm.ref.IncrementalSAXSource: void startParse(org.xml.sax.InputSource)>(r37);

     label29:
        goto label32;

     label30:
        $r28 := @caughtexception;

        virtualinvoke r39.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: void clearCoRoutine()>();

        throw $r28;

     label31:
        $r26 := @caughtexception;

        virtualinvoke r39.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: void clearCoRoutine()>();

        $r27 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r27.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>($r26);

        throw $r27;

     label32:
        goto label44;

     label33:
        if null != r36 goto label35;

        goto label50;

     label34:
        return r39;

     label35:
        interfaceinvoke r36.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r39);

        interfaceinvoke r36.<org.xml.sax.XMLReader: void setDTDHandler(org.xml.sax.DTDHandler)>(r39);

        $r6 = interfaceinvoke r36.<org.xml.sax.XMLReader: org.xml.sax.ErrorHandler getErrorHandler()>();

        if null != $r6 goto label36;

        interfaceinvoke r36.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>(r39);

     label36:
        interfaceinvoke r36.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/properties/lexical-handler", r39);

     label37:
        goto label40;

     label38:
        $r25 := @caughtexception;

        goto label40;

     label39:
        $r24 := @caughtexception;

     label40:
        interfaceinvoke r36.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r37);

     label41:
        goto label44;

     label42:
        $r23 := @caughtexception;

        virtualinvoke r39.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: void clearCoRoutine()>();

        throw $r23;

     label43:
        $r21 := @caughtexception;

        virtualinvoke r39.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: void clearCoRoutine()>();

        $r22 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r22.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>($r21);

        throw $r22;

     label44:
        goto label51;

     label45:
        return r39;

     label46:
        $r20 := @caughtexception;

        goto label52;

     label47:
        throw $r20;

     label48:
        $r15 = new org.apache.xml.dtm.DTMException;

        $r16 = newarray (java.lang.Object)[1];

        $r16[0] = r2;

        $r17 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_NOT_SUPPORTED", $r16);

        specialinvoke $r15.<org.apache.xml.dtm.DTMException: void <init>(java.lang.String)>($r17);

        throw $r15;

     label49:
        virtualinvoke r0.<org.apache.xml.dtm.ref.DTMManagerDefault: void releaseXMLReader(org.xml.sax.XMLReader)>(r36);

        goto label25;

     label50:
        virtualinvoke r0.<org.apache.xml.dtm.ref.DTMManagerDefault: void releaseXMLReader(org.xml.sax.XMLReader)>(r36);

        goto label34;

     label51:
        virtualinvoke r0.<org.apache.xml.dtm.ref.DTMManagerDefault: void releaseXMLReader(org.xml.sax.XMLReader)>(r36);

        goto label45;

     label52:
        virtualinvoke r0.<org.apache.xml.dtm.ref.DTMManagerDefault: void releaseXMLReader(org.xml.sax.XMLReader)>(r36);

        goto label47;

        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Exception from label19 to label20 with label21;
        catch java.lang.RuntimeException from label28 to label29 with label30;
        catch java.lang.Exception from label28 to label29 with label31;
        catch org.xml.sax.SAXNotRecognizedException from label36 to label37 with label38;
        catch org.xml.sax.SAXNotSupportedException from label36 to label37 with label39;
        catch java.lang.RuntimeException from label40 to label41 with label42;
        catch java.lang.Exception from label40 to label41 with label43;
        catch java.lang.Throwable from label07 to label46 with label46;
    }

    public synchronized int getDTMHandleFromNode(org.w3c.dom.Node)
    {
        boolean $z0, $z1, $z2;
        javax.xml.transform.dom.DOMSource $r23;
        org.w3c.dom.Attr $r10, $r14;
        short $s2;
        org.w3c.dom.Node r0, r19, $r20, r21;
        int i0, $i1, $i3, $i4, i5, i6, $i8, $i9, $i11;
        java.lang.String $r9, $r12, $r13, $r17;
        org.apache.xml.dtm.ref.dom2dtm.DOM2DTM $r4, r7;
        org.apache.xml.dtm.ref.DTMManagerDefault r1;
        java.lang.RuntimeException $r24;
        java.lang.IllegalArgumentException $r22;
        org.w3c.dom.Element $r11;
        org.apache.xml.dtm.DTM[] $r2, $r3;
        org.apache.xml.dtm.ref.DTMNodeProxy $r15;
        org.apache.xml.dtm.DTM $r6, r18;

        r1 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        r0 := @parameter0: org.w3c.dom.Node;

        if null != r0 goto label01;

        $r22 = new java.lang.IllegalArgumentException;

        $r17 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_NODE_NON_NULL", null);

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r22;

     label01:
        $z0 = r0 instanceof org.apache.xml.dtm.ref.DTMNodeProxy;

        if $z0 == 0 goto label02;

        $r15 = (org.apache.xml.dtm.ref.DTMNodeProxy) r0;

        $i4 = virtualinvoke $r15.<org.apache.xml.dtm.ref.DTMNodeProxy: int getDTMNodeNumber()>();

        return $i4;

     label02:
        $r2 = r1.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms>;

        i0 = lengthof $r2;

        i5 = 0;

        goto label05;

     label03:
        $r3 = r1.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms>;

        r18 = $r3[i5];

        if null == r18 goto label04;

        $z1 = r18 instanceof org.apache.xml.dtm.ref.dom2dtm.DOM2DTM;

        if $z1 == 0 goto label04;

        $r4 = (org.apache.xml.dtm.ref.dom2dtm.DOM2DTM) r18;

        $i1 = virtualinvoke $r4.<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: int getHandleOfNode(org.w3c.dom.Node)>(r0);

        $i8 = (int) -1;

        if $i1 == $i8 goto label04;

        return $i1;

     label04:
        i5 = i5 + 1;

     label05:
        if i5 < i0 goto label03;

        r19 = r0;

        $s2 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        $i9 = (int) $s2;

        if $i9 != 2 goto label06;

        $r14 = (org.w3c.dom.Attr) r0;

        $r20 = interfaceinvoke $r14.<org.w3c.dom.Attr: org.w3c.dom.Element getOwnerElement()>();

        goto label07;

     label06:
        $r20 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

     label07:
        r21 = $r20;

        goto label09;

     label08:
        r19 = r21;

        r21 = interfaceinvoke r21.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

     label09:
        if r21 != null goto label08;

        $r23 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r23.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r19);

        $r6 = virtualinvoke r1.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)>($r23, 0, null, 1, 1);

        r7 = (org.apache.xml.dtm.ref.dom2dtm.DOM2DTM) $r6;

        $z2 = r0 instanceof org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode;

        if $z2 == 0 goto label10;

        $r10 = (org.w3c.dom.Attr) r0;

        $r11 = interfaceinvoke $r10.<org.w3c.dom.Attr: org.w3c.dom.Element getOwnerElement()>();

        $i3 = virtualinvoke r7.<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: int getHandleOfNode(org.w3c.dom.Node)>($r11);

        $r12 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $r13 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        i6 = virtualinvoke r7.<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: int getAttributeNode(int,java.lang.String,java.lang.String)>($i3, $r12, $r13);

        goto label11;

     label10:
        i6 = virtualinvoke r7.<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: int getHandleOfNode(org.w3c.dom.Node)>(r0);

     label11:
        $i11 = (int) -1;

        if $i11 != i6 goto label12;

        $r24 = new java.lang.RuntimeException;

        $r9 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_COULD_NOT_RESOLVE_NODE", null);

        specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r24;

     label12:
        return i6;
    }

    public synchronized org.xml.sax.XMLReader getXMLReader(javax.xml.transform.Source)
    {
        javax.xml.transform.Source r0;
        org.apache.xml.dtm.ref.DTMManagerDefault r1;
        org.apache.xml.utils.XMLReaderManager $r2, $r3, $r4;
        org.xml.sax.XMLReader $r9, r10;
        javax.xml.transform.sax.SAXSource $r5;
        org.xml.sax.SAXException $r6;
        java.lang.String $r8;
        org.apache.xml.dtm.DTMException $r7;
        boolean $z0;

        r1 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        r0 := @parameter0: javax.xml.transform.Source;

     label1:
        $z0 = r0 instanceof javax.xml.transform.sax.SAXSource;

        if $z0 == 0 goto label2;

        $r5 = (javax.xml.transform.sax.SAXSource) r0;

        $r9 = virtualinvoke $r5.<javax.xml.transform.sax.SAXSource: org.xml.sax.XMLReader getXMLReader()>();

        goto label3;

     label2:
        $r9 = null;

     label3:
        r10 = $r9;

        if null != $r9 goto label5;

        $r2 = r1.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.utils.XMLReaderManager m_readerManager>;

        if $r2 != null goto label4;

        $r4 = staticinvoke <org.apache.xml.utils.XMLReaderManager: org.apache.xml.utils.XMLReaderManager getInstance()>();

        r1.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.utils.XMLReaderManager m_readerManager> = $r4;

     label4:
        $r3 = r1.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.utils.XMLReaderManager m_readerManager>;

        r10 = virtualinvoke $r3.<org.apache.xml.utils.XMLReaderManager: org.xml.sax.XMLReader getXMLReader()>();

     label5:
        return r10;

     label6:
        $r6 := @caughtexception;

        $r7 = new org.apache.xml.dtm.DTMException;

        $r8 = virtualinvoke $r6.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        specialinvoke $r7.<org.apache.xml.dtm.DTMException: void <init>(java.lang.String,java.lang.Throwable)>($r8, $r6);

        throw $r7;

        catch org.xml.sax.SAXException from label1 to label6 with label6;
    }

    public synchronized void releaseXMLReader(org.xml.sax.XMLReader)
    {
        org.xml.sax.XMLReader r2;
        org.apache.xml.dtm.ref.DTMManagerDefault r0;
        org.apache.xml.utils.XMLReaderManager $r1, $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        r2 := @parameter0: org.xml.sax.XMLReader;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.utils.XMLReaderManager m_readerManager>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.utils.XMLReaderManager m_readerManager>;

        virtualinvoke $r3.<org.apache.xml.utils.XMLReaderManager: void releaseXMLReader(org.xml.sax.XMLReader)>(r2);

     label1:
        return;
    }

    public synchronized org.apache.xml.dtm.DTM getDTM(int)
    {
        org.apache.xml.dtm.DTM[] $r1;
        int i0, $i1, $i3;
        org.apache.xml.dtm.DTM $r2;
        org.apache.xml.dtm.ref.DTMManagerDefault r0;
        java.lang.ArrayIndexOutOfBoundsException $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        i0 := @parameter0: int;

     label1:
        $r1 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms>;

        $i1 = i0 >>> 16;

        $r2 = $r1[$i1];

        return $r2;

     label2:
        $r3 := @caughtexception;

        $i3 = (int) -1;

        if i0 != $i3 goto label3;

        return null;

     label3:
        throw $r3;

        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label2;
    }

    public synchronized int getDTMIdentity(org.apache.xml.dtm.DTM)
    {
        org.apache.xml.dtm.ref.DTMDefaultBase r8;
        int[] $r5;
        int $i0, $i1, $i2, i3, i4, $i6, $i8;
        boolean $z0;
        org.apache.xml.utils.SuballocatedIntVector $r7;
        org.apache.xml.dtm.ref.DTMManagerDefault r1;
        org.apache.xml.dtm.DTM[] $r2, $r3;
        org.apache.xml.dtm.DTMManager $r6;
        org.apache.xml.dtm.DTM r0, r4;

        r1 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        r0 := @parameter0: org.apache.xml.dtm.DTM;

        $z0 = r0 instanceof org.apache.xml.dtm.ref.DTMDefaultBase;

        if $z0 == 0 goto label2;

        r8 = (org.apache.xml.dtm.ref.DTMDefaultBase) r0;

        $r6 = virtualinvoke r8.<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.dtm.DTMManager getManager()>();

        if $r6 != r1 goto label1;

        $r7 = virtualinvoke r8.<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.utils.SuballocatedIntVector getDTMIDs()>();

        $i2 = virtualinvoke $r7.<org.apache.xml.utils.SuballocatedIntVector: int elementAt(int)>(0);

        return $i2;

     label1:
        $i6 = (int) -1;

        return $i6;

     label2:
        $r2 = r1.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms>;

        i3 = lengthof $r2;

        i4 = 0;

        goto label5;

     label3:
        $r3 = r1.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms>;

        r4 = $r3[i4];

        if r4 != r0 goto label4;

        $r5 = r1.<org.apache.xml.dtm.ref.DTMManagerDefault: int[] m_dtm_offsets>;

        $i0 = $r5[i4];

        if $i0 != 0 goto label4;

        $i1 = i4 << 16;

        return $i1;

     label4:
        i4 = i4 + 1;

     label5:
        if i4 < i3 goto label3;

        $i8 = (int) -1;

        return $i8;
    }

    public synchronized boolean release(org.apache.xml.dtm.DTM, boolean)
    {
        org.apache.xml.dtm.ref.DTMDefaultBase $r3;
        int $i0, $i1, $i2, $i3, $i4, i5, $i7;
        boolean $z0, $z1, z2;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM $r6;
        org.apache.xml.utils.SuballocatedIntVector $r4;
        org.apache.xml.dtm.ref.DTMManagerDefault r1;
        org.apache.xml.dtm.DTM[] $r2, $r5;
        org.apache.xml.dtm.DTM r0;

        r1 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        r0 := @parameter0: org.apache.xml.dtm.DTM;

        z2 := @parameter1: boolean;

        $z0 = r0 instanceof org.apache.xml.dtm.ref.sax2dtm.SAX2DTM;

        if $z0 == 0 goto label1;

        $r6 = (org.apache.xml.dtm.ref.sax2dtm.SAX2DTM) r0;

        virtualinvoke $r6.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: void clearCoRoutine()>();

     label1:
        $z1 = r0 instanceof org.apache.xml.dtm.ref.DTMDefaultBase;

        if $z1 == 0 goto label4;

        $r3 = (org.apache.xml.dtm.ref.DTMDefaultBase) r0;

        $r4 = virtualinvoke $r3.<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.utils.SuballocatedIntVector getDTMIDs()>();

        $i2 = virtualinvoke $r4.<org.apache.xml.utils.SuballocatedIntVector: int size()>();

        i5 = $i2 - 1;

        goto label3;

     label2:
        $r5 = r1.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms>;

        $i3 = virtualinvoke $r4.<org.apache.xml.utils.SuballocatedIntVector: int elementAt(int)>(i5);

        $i4 = $i3 >>> 16;

        $r5[$i4] = null;

        $i7 = (int) -1;

        i5 = i5 + $i7;

     label3:
        if i5 >= 0 goto label2;

        goto label5;

     label4:
        $i0 = virtualinvoke r1.<org.apache.xml.dtm.ref.DTMManagerDefault: int getDTMIdentity(org.apache.xml.dtm.DTM)>(r0);

        if $i0 < 0 goto label5;

        $r2 = r1.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms>;

        $i1 = $i0 >>> 16;

        $r2[$i1] = null;

     label5:
        interfaceinvoke r0.<org.apache.xml.dtm.DTM: void documentRelease()>();

        return 1;
    }

    public synchronized org.apache.xml.dtm.DTM createDocumentFragment()
    {
        javax.xml.transform.dom.DOMSource $r5;
        org.apache.xml.dtm.ref.DTMManagerDefault r4;
        java.lang.Exception $r7;
        org.w3c.dom.DocumentFragment $r3;
        org.w3c.dom.Document $r2;
        javax.xml.parsers.DocumentBuilder $r1;
        org.apache.xml.dtm.DTM $r6;
        javax.xml.parsers.DocumentBuilderFactory $r0;
        org.apache.xml.dtm.DTMException $r8;

        r4 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

     label1:
        $r0 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1);

        $r1 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r2 = virtualinvoke $r1.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.DocumentFragment createDocumentFragment()>();

        $r5 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r5.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>($r3);

        $r6 = virtualinvoke r4.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)>($r5, 1, null, 0, 0);

        return $r6;

     label2:
        $r7 := @caughtexception;

        $r8 = new org.apache.xml.dtm.DTMException;

        specialinvoke $r8.<org.apache.xml.dtm.DTMException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label2;
    }

    public synchronized org.apache.xml.dtm.DTMIterator createDTMIterator(int, org.apache.xml.dtm.DTMFilter, boolean)
    {
        int i0;
        org.apache.xml.dtm.ref.DTMManagerDefault r0;
        org.apache.xml.dtm.DTMFilter r1;
        boolean z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.xml.dtm.DTMFilter;

        z0 := @parameter2: boolean;

        return null;
    }

    public synchronized org.apache.xml.dtm.DTMIterator createDTMIterator(java.lang.String, org.apache.xml.utils.PrefixResolver)
    {
        org.apache.xml.dtm.ref.DTMManagerDefault r0;
        java.lang.String r1;
        org.apache.xml.utils.PrefixResolver r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xml.utils.PrefixResolver;

        return null;
    }

    public synchronized org.apache.xml.dtm.DTMIterator createDTMIterator(int)
    {
        int i0;
        org.apache.xml.dtm.ref.DTMManagerDefault r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        i0 := @parameter0: int;

        return null;
    }

    public synchronized org.apache.xml.dtm.DTMIterator createDTMIterator(java.lang.Object, int)
    {
        int i0;
        java.lang.Object r1;
        org.apache.xml.dtm.ref.DTMManagerDefault r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        return null;
    }

    public org.apache.xml.dtm.ref.ExpandedNameTable getExpandedNameTable(org.apache.xml.dtm.DTM)
    {
        org.apache.xml.dtm.DTM r2;
        org.apache.xml.dtm.ref.ExpandedNameTable $r1;
        org.apache.xml.dtm.ref.DTMManagerDefault r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        r2 := @parameter0: org.apache.xml.dtm.DTM;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.ref.ExpandedNameTable m_expandedNameTable>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.xml.dtm.ref.DTMManagerDefault: boolean DEBUG> = 0;

        <org.apache.xml.dtm.ref.DTMManagerDefault: boolean DUMPTREE> = 0;

        return;
    }
}
