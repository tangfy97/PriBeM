final class kodkod.engine.fol2sat.SymmetryBreaker$1 extends java.lang.Object implements java.util.Comparator
{
    final kodkod.engine.fol2sat.SymmetryBreaker this$0;

    void <init>(kodkod.engine.fol2sat.SymmetryBreaker)
    {
        kodkod.engine.fol2sat.SymmetryBreaker$1 r0;
        kodkod.engine.fol2sat.SymmetryBreaker r1;

        r0 := @this: kodkod.engine.fol2sat.SymmetryBreaker$1;

        r1 := @parameter0: kodkod.engine.fol2sat.SymmetryBreaker;

        r0.<kodkod.engine.fol2sat.SymmetryBreaker$1: kodkod.engine.fol2sat.SymmetryBreaker this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(kodkod.engine.fol2sat.SymmetryBreaker$RelationParts, kodkod.engine.fol2sat.SymmetryBreaker$RelationParts)
    {
        kodkod.engine.fol2sat.SymmetryBreaker$RelationParts r0, r2;
        kodkod.engine.fol2sat.SymmetryBreaker$1 r10;
        int $i0, $i1, i2, $i3;
        java.lang.String $r5, $r6, $r8, $r9;
        kodkod.ast.Relation $r1, $r3, $r4, $r7;

        r10 := @this: kodkod.engine.fol2sat.SymmetryBreaker$1;

        r0 := @parameter0: kodkod.engine.fol2sat.SymmetryBreaker$RelationParts;

        r2 := @parameter1: kodkod.engine.fol2sat.SymmetryBreaker$RelationParts;

        $r1 = r0.<kodkod.engine.fol2sat.SymmetryBreaker$RelationParts: kodkod.ast.Relation relation>;

        $i0 = virtualinvoke $r1.<kodkod.ast.Relation: int arity()>();

        $r3 = r2.<kodkod.engine.fol2sat.SymmetryBreaker$RelationParts: kodkod.ast.Relation relation>;

        $i1 = virtualinvoke $r3.<kodkod.ast.Relation: int arity()>();

        i2 = $i0 - $i1;

        if i2 == 0 goto label1;

        $i3 = i2;

        goto label2;

     label1:
        $r4 = r0.<kodkod.engine.fol2sat.SymmetryBreaker$RelationParts: kodkod.ast.Relation relation>;

        $r5 = virtualinvoke $r4.<kodkod.ast.Relation: java.lang.String name()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        $r7 = r2.<kodkod.engine.fol2sat.SymmetryBreaker$RelationParts: kodkod.ast.Relation relation>;

        $r8 = virtualinvoke $r7.<kodkod.ast.Relation: java.lang.String name()>();

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        $i3 = virtualinvoke $r6.<java.lang.String: int compareTo(java.lang.String)>($r9);

     label2:
        return $i3;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        int $i0;
        java.lang.Object r1, r2;
        kodkod.engine.fol2sat.SymmetryBreaker$RelationParts $r3, $r4;
        kodkod.engine.fol2sat.SymmetryBreaker$1 r0;

        r0 := @this: kodkod.engine.fol2sat.SymmetryBreaker$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kodkod.engine.fol2sat.SymmetryBreaker$RelationParts) r1;

        $r3 = (kodkod.engine.fol2sat.SymmetryBreaker$RelationParts) r2;

        $i0 = virtualinvoke r0.<kodkod.engine.fol2sat.SymmetryBreaker$1: int compare(kodkod.engine.fol2sat.SymmetryBreaker$RelationParts,kodkod.engine.fol2sat.SymmetryBreaker$RelationParts)>($r4, $r3);

        return $i0;
    }
}
