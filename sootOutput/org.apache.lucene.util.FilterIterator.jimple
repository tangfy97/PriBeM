public abstract class org.apache.lucene.util.FilterIterator extends java.lang.Object implements java.util.Iterator
{
    private final java.util.Iterator iterator;
    private java.lang.Object next;
    private boolean nextIsSet;
    static final boolean $assertionsDisabled;

    protected abstract boolean predicateFunction(java.lang.Object);

    public void <init>(java.util.Iterator)
    {
        org.apache.lucene.util.FilterIterator r0;
        java.util.Iterator r1;

        r0 := @this: org.apache.lucene.util.FilterIterator;

        r1 := @parameter0: java.util.Iterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.util.FilterIterator: java.lang.Object next> = null;

        r0.<org.apache.lucene.util.FilterIterator: boolean nextIsSet> = 0;

        r0.<org.apache.lucene.util.FilterIterator: java.util.Iterator iterator> = r1;

        return;
    }

    public final boolean hasNext()
    {
        org.apache.lucene.util.FilterIterator r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.util.FilterIterator;

        $z0 = r0.<org.apache.lucene.util.FilterIterator: boolean nextIsSet>;

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<org.apache.lucene.util.FilterIterator: boolean setNext()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public final java.lang.Object next()
    {
        java.lang.Throwable $r4;
        org.apache.lucene.util.FilterIterator r0;
        java.lang.AssertionError $r2;
        java.lang.Object $r1;
        java.util.NoSuchElementException $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.util.FilterIterator;

        $z0 = virtualinvoke r0.<org.apache.lucene.util.FilterIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;

     label1:
        $z1 = <org.apache.lucene.util.FilterIterator: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z2 = r0.<org.apache.lucene.util.FilterIterator: boolean nextIsSet>;

        if $z2 != 0 goto label2;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        $r1 = r0.<org.apache.lucene.util.FilterIterator: java.lang.Object next>;

     label3:
        r0.<org.apache.lucene.util.FilterIterator: boolean nextIsSet> = 0;

        r0.<org.apache.lucene.util.FilterIterator: java.lang.Object next> = null;

        return $r1;

     label4:
        $r4 := @caughtexception;

     label5:
        r0.<org.apache.lucene.util.FilterIterator: boolean nextIsSet> = 0;

        r0.<org.apache.lucene.util.FilterIterator: java.lang.Object next> = null;

        throw $r4;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public final void remove()
    {
        org.apache.lucene.util.FilterIterator r1;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.apache.lucene.util.FilterIterator;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    private boolean setNext()
    {
        java.util.Iterator $r1, $r2;
        org.apache.lucene.util.FilterIterator r0;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.util.FilterIterator;

     label1:
        $r1 = r0.<org.apache.lucene.util.FilterIterator: java.util.Iterator iterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = r0.<org.apache.lucene.util.FilterIterator: java.util.Iterator iterator>;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $z1 = virtualinvoke r0.<org.apache.lucene.util.FilterIterator: boolean predicateFunction(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        r0.<org.apache.lucene.util.FilterIterator: java.lang.Object next> = $r3;

        r0.<org.apache.lucene.util.FilterIterator: boolean nextIsSet> = 1;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/util/FilterIterator;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.util.FilterIterator: boolean $assertionsDisabled> = $z1;

        return;
    }
}
