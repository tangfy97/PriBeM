public class org.apache.commons.collections.keyvalue.MultiKey extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.lang.Object[] keys;
    private final int hashCode;

    public void <init>(java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r1;
        java.lang.Object r2, r3;
        org.apache.commons.collections.keyvalue.MultiKey r0;

        r0 := @this: org.apache.commons.collections.keyvalue.MultiKey;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = r2;

        $r1[1] = r3;

        specialinvoke r0.<org.apache.commons.collections.keyvalue.MultiKey: void <init>(java.lang.Object[],boolean)>($r1, 0);

        return;
    }

    public void <init>(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r1;
        java.lang.Object r2, r3, r4;
        org.apache.commons.collections.keyvalue.MultiKey r0;

        r0 := @this: org.apache.commons.collections.keyvalue.MultiKey;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object;

        $r1 = newarray (java.lang.Object)[3];

        $r1[0] = r2;

        $r1[1] = r3;

        $r1[2] = r4;

        specialinvoke r0.<org.apache.commons.collections.keyvalue.MultiKey: void <init>(java.lang.Object[],boolean)>($r1, 0);

        return;
    }

    public void <init>(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r1;
        java.lang.Object r2, r3, r4, r5;
        org.apache.commons.collections.keyvalue.MultiKey r0;

        r0 := @this: org.apache.commons.collections.keyvalue.MultiKey;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object;

        r5 := @parameter3: java.lang.Object;

        $r1 = newarray (java.lang.Object)[4];

        $r1[0] = r2;

        $r1[1] = r3;

        $r1[2] = r4;

        $r1[3] = r5;

        specialinvoke r0.<org.apache.commons.collections.keyvalue.MultiKey: void <init>(java.lang.Object[],boolean)>($r1, 0);

        return;
    }

    public void <init>(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r1;
        java.lang.Object r2, r3, r4, r5, r6;
        org.apache.commons.collections.keyvalue.MultiKey r0;

        r0 := @this: org.apache.commons.collections.keyvalue.MultiKey;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object;

        r5 := @parameter3: java.lang.Object;

        r6 := @parameter4: java.lang.Object;

        $r1 = newarray (java.lang.Object)[5];

        $r1[0] = r2;

        $r1[1] = r3;

        $r1[2] = r4;

        $r1[3] = r5;

        $r1[4] = r6;

        specialinvoke r0.<org.apache.commons.collections.keyvalue.MultiKey: void <init>(java.lang.Object[],boolean)>($r1, 0);

        return;
    }

    public void <init>(java.lang.Object[])
    {
        java.lang.Object[] r1;
        org.apache.commons.collections.keyvalue.MultiKey r0;

        r0 := @this: org.apache.commons.collections.keyvalue.MultiKey;

        r1 := @parameter0: java.lang.Object[];

        specialinvoke r0.<org.apache.commons.collections.keyvalue.MultiKey: void <init>(java.lang.Object[],boolean)>(r1, 1);

        return;
    }

    public void <init>(java.lang.Object[], boolean)
    {
        java.lang.Object[] r1, $r5, $r6;
        java.lang.IllegalArgumentException $r7;
        int $i0, i1, i2, $i3;
        java.lang.Object $r2, $r3, $r4;
        org.apache.commons.collections.keyvalue.MultiKey r0;
        boolean z0;

        r0 := @this: org.apache.commons.collections.keyvalue.MultiKey;

        r1 := @parameter0: java.lang.Object[];

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The array of keys must not be null");

        throw $r7;

     label1:
        if z0 == 0 goto label2;

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r5 = (java.lang.Object[]) $r4;

        $r6 = (java.lang.Object[]) $r5;

        r0.<org.apache.commons.collections.keyvalue.MultiKey: java.lang.Object[] keys> = $r6;

        goto label3;

     label2:
        r0.<org.apache.commons.collections.keyvalue.MultiKey: java.lang.Object[] keys> = r1;

     label3:
        i1 = 0;

        i2 = 0;

     label4:
        $i3 = lengthof r1;

        if i2 >= $i3 goto label6;

        $r2 = r1[i2];

        if $r2 == null goto label5;

        $r3 = r1[i2];

        $i0 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

        i1 = i1 ^ $i0;

     label5:
        i2 = i2 + 1;

        goto label4;

     label6:
        r0.<org.apache.commons.collections.keyvalue.MultiKey: int hashCode> = i1;

        return;
    }

    public java.lang.Object[] getKeys()
    {
        java.lang.Object[] $r1, $r3, $r4;
        java.lang.Object $r2;
        org.apache.commons.collections.keyvalue.MultiKey r0;

        r0 := @this: org.apache.commons.collections.keyvalue.MultiKey;

        $r1 = r0.<org.apache.commons.collections.keyvalue.MultiKey: java.lang.Object[] keys>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.lang.Object[]) $r2;

        $r4 = (java.lang.Object[]) $r3;

        return $r4;
    }

    public java.lang.Object getKey(int)
    {
        java.lang.Object[] $r1;
        int i0;
        java.lang.Object $r2;
        org.apache.commons.collections.keyvalue.MultiKey r0;

        r0 := @this: org.apache.commons.collections.keyvalue.MultiKey;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.collections.keyvalue.MultiKey: java.lang.Object[] keys>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int size()
    {
        int $i0;
        java.lang.Object[] $r1;
        org.apache.commons.collections.keyvalue.MultiKey r0;

        r0 := @this: org.apache.commons.collections.keyvalue.MultiKey;

        $r1 = r0.<org.apache.commons.collections.keyvalue.MultiKey: java.lang.Object[] keys>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object[] $r3, $r4;
        java.lang.Object r0;
        org.apache.commons.collections.keyvalue.MultiKey r1, r2;
        boolean $z0, $z1;

        r1 := @this: org.apache.commons.collections.keyvalue.MultiKey;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.apache.commons.collections.keyvalue.MultiKey;

        if $z0 == 0 goto label2;

        r2 = (org.apache.commons.collections.keyvalue.MultiKey) r0;

        $r4 = r1.<org.apache.commons.collections.keyvalue.MultiKey: java.lang.Object[] keys>;

        $r3 = r2.<org.apache.commons.collections.keyvalue.MultiKey: java.lang.Object[] keys>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r4, $r3);

        return $z1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        org.apache.commons.collections.keyvalue.MultiKey r0;

        r0 := @this: org.apache.commons.collections.keyvalue.MultiKey;

        $i0 = r0.<org.apache.commons.collections.keyvalue.MultiKey: int hashCode>;

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r3;
        java.util.List $r4;
        java.lang.StringBuffer $r0, $r1, $r6;
        java.lang.String $r5, $r7;
        org.apache.commons.collections.keyvalue.MultiKey r2;

        r2 := @this: org.apache.commons.collections.keyvalue.MultiKey;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("MultiKey");

        $r3 = r2.<org.apache.commons.collections.keyvalue.MultiKey: java.lang.Object[] keys>;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r6 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections.keyvalue.MultiKey: long serialVersionUID> = 4465448607415788805L;

        return;
    }
}
