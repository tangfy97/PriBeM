public abstract class org.jdesktop.swingx.plaf.LookAndFeelAddons extends java.lang.Object
{
    private static java.util.List contributedComponents;
    private static final java.lang.Object APPCONTEXT_INITIALIZED;
    private static boolean trackingChanges;
    private static java.beans.PropertyChangeListener changeListener;
    private static org.jdesktop.swingx.plaf.LookAndFeelAddons currentAddon;

    public void <init>()
    {
        org.jdesktop.swingx.plaf.LookAndFeelAddons r0;

        r0 := @this: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void initialize()
    {
        java.util.List $r0;
        org.jdesktop.swingx.plaf.ComponentAddon r3;
        org.jdesktop.swingx.plaf.LookAndFeelAddons r4;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        boolean $z0;

        r4 := @this: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        $r0 = <org.jdesktop.swingx.plaf.LookAndFeelAddons: java.util.List contributedComponents>;

        $r1 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.jdesktop.swingx.plaf.ComponentAddon) $r2;

        interfaceinvoke r3.<org.jdesktop.swingx.plaf.ComponentAddon: void initialize(org.jdesktop.swingx.plaf.LookAndFeelAddons)>(r4);

        goto label1;

     label2:
        return;
    }

    public void uninitialize()
    {
        java.util.List $r0;
        org.jdesktop.swingx.plaf.ComponentAddon r3;
        org.jdesktop.swingx.plaf.LookAndFeelAddons r4;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        boolean $z0;

        r4 := @this: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        $r0 = <org.jdesktop.swingx.plaf.LookAndFeelAddons: java.util.List contributedComponents>;

        $r1 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.jdesktop.swingx.plaf.ComponentAddon) $r2;

        interfaceinvoke r3.<org.jdesktop.swingx.plaf.ComponentAddon: void uninitialize(org.jdesktop.swingx.plaf.LookAndFeelAddons)>(r4);

        goto label1;

     label2:
        return;
    }

    public void loadDefaults(java.lang.Object[])
    {
        java.lang.Object[] r0;
        org.jdesktop.swingx.plaf.LookAndFeelAddons r7;
        javax.swing.UIDefaults $r1, $r4;
        int $i0, $i1, i2;
        java.lang.Object $r2, $r3, $r5, $r6;

        r7 := @this: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        r0 := @parameter0: java.lang.Object[];

        $i0 = lengthof r0;

        i2 = $i0 - 2;

     label1:
        if i2 < 0 goto label3;

        $r1 = staticinvoke <javax.swing.UIManager: javax.swing.UIDefaults getLookAndFeelDefaults()>();

        $r2 = r0[i2];

        $r3 = virtualinvoke $r1.<javax.swing.UIDefaults: java.lang.Object get(java.lang.Object)>($r2);

        if $r3 != null goto label2;

        $r4 = staticinvoke <javax.swing.UIManager: javax.swing.UIDefaults getLookAndFeelDefaults()>();

        $r6 = r0[i2];

        $i1 = i2 + 1;

        $r5 = r0[$i1];

        virtualinvoke $r4.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r5);

     label2:
        i2 = i2 - 2;

        goto label1;

     label3:
        return;
    }

    public void unloadDefaults(java.lang.Object[])
    {
        org.jdesktop.swingx.plaf.LookAndFeelAddons r0;
        java.lang.Object[] r1;

        r0 := @this: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        r1 := @parameter0: java.lang.Object[];

        return;
    }

    public static void setAddon(java.lang.String) throws java.lang.InstantiationException, java.lang.IllegalAccessException, java.lang.ClassNotFoundException
    {
        java.lang.Class $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        staticinvoke <org.jdesktop.swingx.plaf.LookAndFeelAddons: void setAddon(java.lang.Class)>($r1);

        return;
    }

    public static void setAddon(java.lang.Class) throws java.lang.InstantiationException, java.lang.IllegalAccessException
    {
        java.lang.Class r0;
        java.lang.Object $r1;
        org.jdesktop.swingx.plaf.LookAndFeelAddons r2;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Object newInstance()>();

        r2 = (org.jdesktop.swingx.plaf.LookAndFeelAddons) $r1;

        staticinvoke <org.jdesktop.swingx.plaf.LookAndFeelAddons: void setAddon(org.jdesktop.swingx.plaf.LookAndFeelAddons)>(r2);

        return;
    }

    public static void setAddon(org.jdesktop.swingx.plaf.LookAndFeelAddons)
    {
        org.jdesktop.swingx.plaf.LookAndFeelAddons $r0, r1, $r7;
        javax.swing.UIDefaults $r4;
        java.lang.Boolean $r2, $r5;
        java.lang.Object $r3, $r6;

        r1 := @parameter0: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        $r0 = <org.jdesktop.swingx.plaf.LookAndFeelAddons: org.jdesktop.swingx.plaf.LookAndFeelAddons currentAddon>;

        if $r0 == null goto label1;

        $r7 = <org.jdesktop.swingx.plaf.LookAndFeelAddons: org.jdesktop.swingx.plaf.LookAndFeelAddons currentAddon>;

        virtualinvoke $r7.<org.jdesktop.swingx.plaf.LookAndFeelAddons: void uninitialize()>();

     label1:
        virtualinvoke r1.<org.jdesktop.swingx.plaf.LookAndFeelAddons: void initialize()>();

        <org.jdesktop.swingx.plaf.LookAndFeelAddons: org.jdesktop.swingx.plaf.LookAndFeelAddons currentAddon> = r1;

        $r3 = <org.jdesktop.swingx.plaf.LookAndFeelAddons: java.lang.Object APPCONTEXT_INITIALIZED>;

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        staticinvoke <javax.swing.UIManager: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r2);

        $r4 = staticinvoke <javax.swing.UIManager: javax.swing.UIDefaults getLookAndFeelDefaults()>();

        $r6 = <org.jdesktop.swingx.plaf.LookAndFeelAddons: java.lang.Object APPCONTEXT_INITIALIZED>;

        $r5 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r4.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r5);

        return;
    }

    public static org.jdesktop.swingx.plaf.LookAndFeelAddons getAddon()
    {
        org.jdesktop.swingx.plaf.LookAndFeelAddons $r0;

        $r0 = <org.jdesktop.swingx.plaf.LookAndFeelAddons: org.jdesktop.swingx.plaf.LookAndFeelAddons currentAddon>;

        return $r0;
    }

    public static java.lang.String getBestMatchAddonClassName()
    {
        java.lang.String $r2, $r3, $r4, $r5, $r8, $r9, $r11, $r13, r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        javax.swing.LookAndFeel $r0, $r10, $r12;
        java.lang.Class $r1, $r6, $r7, $r14, $r15, $r16, $r17;

        $r0 = staticinvoke <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>();

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = staticinvoke <javax.swing.UIManager: java.lang.String getCrossPlatformLookAndFeelClassName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r17 = class "Lorg/jdesktop/swingx/plaf/metal/MetalLookAndFeelAddons;";

        r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        goto label9;

     label1:
        $r4 = staticinvoke <javax.swing.UIManager: java.lang.String getSystemLookAndFeelClassName()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label2;

        r18 = staticinvoke <org.jdesktop.swingx.plaf.LookAndFeelAddons: java.lang.String getSystemAddonClassName()>();

        goto label9;

     label2:
        $r5 = "com.sun.java.swing.plaf.windows.WindowsLookAndFeel";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z2 != 0 goto label3;

        $r8 = "com.jgoodies.looks.windows.WindowsLookAndFeel";

        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z4 == 0 goto label5;

     label3:
        $z3 = staticinvoke <org.jdesktop.swingx.util.OS: boolean isUsingWindowsVisualStyles()>();

        if $z3 == 0 goto label4;

        $r7 = class "Lorg/jdesktop/swingx/plaf/windows/WindowsLookAndFeelAddons;";

        r18 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        goto label9;

     label4:
        $r6 = class "Lorg/jdesktop/swingx/plaf/windows/WindowsClassicLookAndFeelAddons;";

        r18 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        goto label9;

     label5:
        $r9 = "com.sun.java.swing.plaf.windows.WindowsClassicLookAndFeel";

        $z5 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z5 == 0 goto label6;

        $r16 = class "Lorg/jdesktop/swingx/plaf/windows/WindowsClassicLookAndFeelAddons;";

        r18 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        goto label9;

     label6:
        $r10 = staticinvoke <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>();

        $r11 = virtualinvoke $r10.<javax.swing.LookAndFeel: java.lang.String getID()>();

        $z6 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("Motif");

        if $z6 == 0 goto label7;

        $r15 = class "Lorg/jdesktop/swingx/plaf/motif/MotifLookAndFeelAddons;";

        r18 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>();

        goto label9;

     label7:
        $r12 = staticinvoke <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>();

        $r13 = virtualinvoke $r12.<javax.swing.LookAndFeel: java.lang.String getID()>();

        $z7 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("Nimbus");

        if $z7 == 0 goto label8;

        $r14 = class "Lorg/jdesktop/swingx/plaf/nimbus/NimbusLookAndFeelAddons;";

        r18 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        goto label9;

     label8:
        r18 = staticinvoke <org.jdesktop.swingx.plaf.LookAndFeelAddons: java.lang.String getSystemAddonClassName()>();

     label9:
        return r18;
    }

    public static java.lang.String getSystemAddonClassName()
    {
        java.lang.Class $r0, $r1, $r2, $r3, $r4;
        java.lang.String r5;
        boolean $z0, $z1, $z2, $z3;

        $r0 = class "Lorg/jdesktop/swingx/plaf/windows/WindowsClassicLookAndFeelAddons;";

        r5 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $z0 = staticinvoke <org.jdesktop.swingx.util.OS: boolean isMacOSX()>();

        if $z0 == 0 goto label1;

        $r4 = class "Lorg/jdesktop/swingx/plaf/macosx/MacOSXLookAndFeelAddons;";

        r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        goto label4;

     label1:
        $z1 = staticinvoke <org.jdesktop.swingx.util.OS: boolean isWindows()>();

        if $z1 == 0 goto label3;

        $z3 = staticinvoke <org.jdesktop.swingx.util.OS: boolean isUsingWindowsVisualStyles()>();

        if $z3 == 0 goto label2;

        $r3 = class "Lorg/jdesktop/swingx/plaf/windows/WindowsLookAndFeelAddons;";

        r5 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        goto label4;

     label2:
        $r2 = class "Lorg/jdesktop/swingx/plaf/windows/WindowsClassicLookAndFeelAddons;";

        r5 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        goto label4;

     label3:
        $z2 = staticinvoke <org.jdesktop.swingx.util.OS: boolean isLinux()>();

        if $z2 == 0 goto label4;

        $r1 = class "Lorg/jdesktop/swingx/plaf/linux/LinuxLookAndFeelAddons;";

        r5 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

     label4:
        return r5;
    }

    public static void contribute(org.jdesktop.swingx.plaf.ComponentAddon)
    {
        java.util.List $r1;
        org.jdesktop.swingx.plaf.ComponentAddon r0;
        org.jdesktop.swingx.plaf.LookAndFeelAddons $r2, $r3;

        r0 := @parameter0: org.jdesktop.swingx.plaf.ComponentAddon;

        $r1 = <org.jdesktop.swingx.plaf.LookAndFeelAddons: java.util.List contributedComponents>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(r0);

        $r2 = <org.jdesktop.swingx.plaf.LookAndFeelAddons: org.jdesktop.swingx.plaf.LookAndFeelAddons currentAddon>;

        if $r2 == null goto label1;

        $r3 = <org.jdesktop.swingx.plaf.LookAndFeelAddons: org.jdesktop.swingx.plaf.LookAndFeelAddons currentAddon>;

        interfaceinvoke r0.<org.jdesktop.swingx.plaf.ComponentAddon: void initialize(org.jdesktop.swingx.plaf.LookAndFeelAddons)>($r3);

     label1:
        return;
    }

    public static void uncontribute(org.jdesktop.swingx.plaf.ComponentAddon)
    {
        java.util.List $r1;
        org.jdesktop.swingx.plaf.ComponentAddon r0;
        org.jdesktop.swingx.plaf.LookAndFeelAddons $r2, $r3;

        r0 := @parameter0: org.jdesktop.swingx.plaf.ComponentAddon;

        $r1 = <org.jdesktop.swingx.plaf.LookAndFeelAddons: java.util.List contributedComponents>;

        interfaceinvoke $r1.<java.util.List: boolean remove(java.lang.Object)>(r0);

        $r2 = <org.jdesktop.swingx.plaf.LookAndFeelAddons: org.jdesktop.swingx.plaf.LookAndFeelAddons currentAddon>;

        if $r2 == null goto label1;

        $r3 = <org.jdesktop.swingx.plaf.LookAndFeelAddons: org.jdesktop.swingx.plaf.LookAndFeelAddons currentAddon>;

        interfaceinvoke r0.<org.jdesktop.swingx.plaf.ComponentAddon: void uninitialize(org.jdesktop.swingx.plaf.LookAndFeelAddons)>($r3);

     label1:
        return;
    }

    public static javax.swing.plaf.ComponentUI getUI(javax.swing.JComponent, java.lang.Class)
    {
        java.lang.NoSuchMethodException $r43;
        java.lang.reflect.Method $r10;
        boolean $z0, $z1;
        javax.swing.plaf.ComponentUI $r3, $r13;
        javax.swing.UIDefaults $r32;
        java.util.Set $r33;
        java.util.logging.Logger $r14;
        java.lang.Exception $r36;
        java.lang.StringBuilder $r15, $r16, $r19, $r20, $r22, $r25, $r26, $r28, $r29, $r30, $r34, $r38, $r39, $r40, $r41, $r45, $r46, $r47, $r48, $r52, $r53, $r54;
        java.lang.ClassLoader $r7;
        java.lang.Object[] $r11;
        java.util.logging.Level $r24;
        java.util.ArrayList $r31;
        java.lang.String $r1, $r6, $r18, $r21, $r23, $r27, $r35, $r42, $r49, $r55, r57;
        javax.swing.JComponent r0;
        java.lang.Class[] $r9;
        java.lang.RuntimeException $r37, $r44, $r51;
        java.lang.Object $r2, $r12;
        java.lang.Class r4, $r5, $r8, $r17, $r58;
        java.lang.ClassNotFoundException $r50, $r56;

        r0 := @parameter0: javax.swing.JComponent;

        r4 := @parameter1: java.lang.Class;

        staticinvoke <org.jdesktop.swingx.plaf.LookAndFeelAddons: void maybeInitialize()>();

        $r1 = virtualinvoke r0.<javax.swing.JComponent: java.lang.String getUIClassID()>();

        $r2 = staticinvoke <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>($r1);

        r57 = (java.lang.String) $r2;

        if r57 != null goto label02;

        $r14 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>("LookAndFeelAddons");

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to retrieve UI for ");

        $r17 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with UIClassID ");

        $r21 = virtualinvoke r0.<javax.swing.JComponent: java.lang.String getUIClassID()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.util.logging.Logger: void warning(java.lang.String)>($r23);

        $r24 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z1 = virtualinvoke $r14.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r24);

        if $z1 == 0 goto label01;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Existing UI defaults keys: ");

        $r31 = new java.util.ArrayList;

        $r32 = staticinvoke <javax.swing.UIManager: javax.swing.UIDefaults getDefaults()>();

        $r33 = virtualinvoke $r32.<javax.swing.UIDefaults: java.util.Set keySet()>();

        specialinvoke $r31.<java.util.ArrayList: void <init>(java.util.Collection)>($r33);

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.util.logging.Logger: void fine(java.lang.String)>($r35);

     label01:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("org.jdesktop.swingx.plaf.basic.Basic");

        $r27 = virtualinvoke r4.<java.lang.Class: java.lang.String getSimpleName()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        r57 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        $r58 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r57);

        staticinvoke <javax.swing.UIManager: java.lang.Object put(java.lang.Object,java.lang.Object)>(r57, $r58);

     label03:
        goto label05;

     label04:
        $r56 := @caughtexception;

     label05:
        $r3 = staticinvoke <javax.swing.UIManager: javax.swing.plaf.ComponentUI getUI(javax.swing.JComponent)>(r0);

        $z0 = virtualinvoke r4.<java.lang.Class: boolean isInstance(java.lang.Object)>($r3);

        if $z0 == 0 goto label06;

        return $r3;

     label06:
        $r5 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

     label07:
        $r7 = virtualinvoke r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r8 = virtualinvoke $r7.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r6);

     label08:
        goto label10;

     label09:
        $r50 := @caughtexception;

        $r51 = new java.lang.RuntimeException;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to load class ");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r51.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r55, $r50);

        throw $r51;

     label10:
        $r9 = newarray (java.lang.Class)[1];

        $r9[0] = class "Ljavax/swing/JComponent;";

        $r10 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("createUI", $r9);

     label11:
        goto label13;

     label12:
        $r43 := @caughtexception;

        $r44 = new java.lang.RuntimeException;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no method createUI(JComponent)");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r44.<java.lang.RuntimeException: void <init>(java.lang.String)>($r49);

        throw $r44;

     label13:
        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r0;

        $r12 = virtualinvoke $r10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r11);

        $r13 = (javax.swing.plaf.ComponentUI) $r12;

     label14:
        return $r13;

     label15:
        $r36 := @caughtexception;

        $r37 = new java.lang.RuntimeException;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to invoke ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#createUI(JComponent)");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<java.lang.RuntimeException: void <init>(java.lang.String)>($r42);

        throw $r37;

        catch java.lang.ClassNotFoundException from label02 to label03 with label04;
        catch java.lang.ClassNotFoundException from label07 to label08 with label09;
        catch java.lang.NoSuchMethodException from label10 to label11 with label12;
        catch java.lang.Exception from label13 to label14 with label15;
    }

    private static synchronized void maybeInitialize()
    {
        org.jdesktop.swingx.plaf.LookAndFeelAddons $r0, $r3;
        javax.swing.UIDefaults $r1;
        java.lang.Object $r2;
        boolean $z0;

        $r0 = <org.jdesktop.swingx.plaf.LookAndFeelAddons: org.jdesktop.swingx.plaf.LookAndFeelAddons currentAddon>;

        if $r0 == null goto label1;

        $r1 = staticinvoke <javax.swing.UIManager: javax.swing.UIDefaults getLookAndFeelDefaults()>();

        $r2 = <org.jdesktop.swingx.plaf.LookAndFeelAddons: java.lang.Object APPCONTEXT_INITIALIZED>;

        $z0 = virtualinvoke $r1.<javax.swing.UIDefaults: boolean getBoolean(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $r3 = <org.jdesktop.swingx.plaf.LookAndFeelAddons: org.jdesktop.swingx.plaf.LookAndFeelAddons currentAddon>;

        staticinvoke <org.jdesktop.swingx.plaf.LookAndFeelAddons: void setAddon(org.jdesktop.swingx.plaf.LookAndFeelAddons)>($r3);

     label1:
        return;
    }

    public static synchronized void setTrackingLookAndFeelChanges(boolean)
    {
        org.jdesktop.swingx.plaf.LookAndFeelAddons$UpdateAddon $r4;
        java.beans.PropertyChangeListener $r0, $r1, $r2, $r3;
        boolean z0, $z1;

        z0 := @parameter0: boolean;

        $z1 = <org.jdesktop.swingx.plaf.LookAndFeelAddons: boolean trackingChanges>;

        if $z1 == z0 goto label5;

        if z0 == 0 goto label2;

        $r2 = <org.jdesktop.swingx.plaf.LookAndFeelAddons: java.beans.PropertyChangeListener changeListener>;

        if $r2 != null goto label1;

        $r4 = new org.jdesktop.swingx.plaf.LookAndFeelAddons$UpdateAddon;

        specialinvoke $r4.<org.jdesktop.swingx.plaf.LookAndFeelAddons$UpdateAddon: void <init>(org.jdesktop.swingx.plaf.LookAndFeelAddons$1)>(null);

        <org.jdesktop.swingx.plaf.LookAndFeelAddons: java.beans.PropertyChangeListener changeListener> = $r4;

     label1:
        $r3 = <org.jdesktop.swingx.plaf.LookAndFeelAddons: java.beans.PropertyChangeListener changeListener>;

        staticinvoke <javax.swing.UIManager: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r3);

        goto label4;

     label2:
        $r0 = <org.jdesktop.swingx.plaf.LookAndFeelAddons: java.beans.PropertyChangeListener changeListener>;

        if $r0 == null goto label3;

        $r1 = <org.jdesktop.swingx.plaf.LookAndFeelAddons: java.beans.PropertyChangeListener changeListener>;

        staticinvoke <javax.swing.UIManager: void removePropertyChangeListener(java.beans.PropertyChangeListener)>($r1);

     label3:
        <org.jdesktop.swingx.plaf.LookAndFeelAddons: java.beans.PropertyChangeListener changeListener> = null;

     label4:
        <org.jdesktop.swingx.plaf.LookAndFeelAddons: boolean trackingChanges> = z0;

     label5:
        return;
    }

    public static synchronized boolean isTrackingLookAndFeelChanges()
    {
        boolean $z0;

        $z0 = <org.jdesktop.swingx.plaf.LookAndFeelAddons: boolean trackingChanges>;

        return $z0;
    }

    public static void installBackgroundPainter(javax.swing.JComponent, java.lang.String)
    {
        java.lang.Object[] $r6, $r9;
        java.lang.String r10, $r18;
        java.lang.reflect.Method $r3, $r5;
        boolean $z0;
        javax.swing.JComponent r0;
        org.jdesktop.swingx.painter.Painter r8, $r11;
        java.lang.Class[] $r2, $r4;
        java.lang.RuntimeException $r19;
        java.lang.IllegalArgumentException $r13;
        java.lang.Exception $r12;
        java.lang.Class $r1, $r16;
        java.lang.Object $r7;
        java.lang.StringBuilder $r14, $r15, $r17;

        r0 := @parameter0: javax.swing.JComponent;

        r10 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

     label1:
        $r2 = newarray (java.lang.Class)[0];

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getBackgroundPainter", $r2);

        $r4 = newarray (java.lang.Class)[1];

        $r4[0] = class "Lorg/jdesktop/swingx/painter/Painter;";

        $r5 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setBackgroundPainter", $r4);

        $r6 = newarray (java.lang.Object)[0];

        $r7 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r6);

        r8 = (org.jdesktop.swingx.painter.Painter) $r7;

        if r8 == null goto label2;

        $z0 = r8 instanceof javax.swing.plaf.UIResource;

        if $z0 == 0 goto label3;

     label2:
        $r9 = newarray (java.lang.Object)[1];

        $r11 = staticinvoke <org.jdesktop.swingx.plaf.UIManagerExt: org.jdesktop.swingx.painter.Painter getPainter(java.lang.Object)>(r10);

        $r9[0] = $r11;

        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r9);

     label3:
        goto label6;

     label4:
        $r19 := @caughtexception;

        throw $r19;

     label5:
        $r12 := @caughtexception;

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot set painter on ");

        $r16 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label6:
        return;

        catch java.lang.RuntimeException from label1 to label3 with label4;
        catch java.lang.Exception from label1 to label3 with label5;
    }

    public static void uninstallBackgroundPainter(javax.swing.JComponent)
    {
        java.lang.Object[] $r6, $r9;
        java.lang.String $r16;
        java.lang.reflect.Method $r3, $r5;
        boolean $z0;
        javax.swing.JComponent r0;
        org.jdesktop.swingx.painter.Painter r8;
        java.lang.Class[] $r2, $r4;
        java.lang.RuntimeException $r17;
        java.lang.IllegalArgumentException $r11;
        java.lang.Exception $r10;
        java.lang.Class $r1, $r14;
        java.lang.Object $r7;
        java.lang.StringBuilder $r12, $r13, $r15;

        r0 := @parameter0: javax.swing.JComponent;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

     label1:
        $r2 = newarray (java.lang.Class)[0];

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getBackgroundPainter", $r2);

        $r4 = newarray (java.lang.Class)[1];

        $r4[0] = class "Lorg/jdesktop/swingx/painter/Painter;";

        $r5 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setBackgroundPainter", $r4);

        $r6 = newarray (java.lang.Object)[0];

        $r7 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r6);

        r8 = (org.jdesktop.swingx.painter.Painter) $r7;

        if r8 == null goto label2;

        $z0 = r8 instanceof javax.swing.plaf.UIResource;

        if $z0 == 0 goto label3;

     label2:
        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = null;

        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r9);

     label3:
        goto label6;

     label4:
        $r17 := @caughtexception;

        throw $r17;

     label5:
        $r10 := @caughtexception;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot set painter on ");

        $r14 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r11;

     label6:
        return;

        catch java.lang.RuntimeException from label1 to label3 with label4;
        catch java.lang.Exception from label1 to label3 with label5;
    }

    static void <clinit>()
    {
        java.lang.Object $r1;
        java.lang.SecurityException $r5;
        java.lang.String $r2, r6;
        java.lang.Exception $r3;
        java.lang.ExceptionInInitializerError $r4;
        java.util.ArrayList $r0;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        <org.jdesktop.swingx.plaf.LookAndFeelAddons: java.util.List contributedComponents> = $r0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <org.jdesktop.swingx.plaf.LookAndFeelAddons: java.lang.Object APPCONTEXT_INITIALIZED> = $r1;

        <org.jdesktop.swingx.plaf.LookAndFeelAddons: boolean trackingChanges> = 0;

        $r2 = staticinvoke <org.jdesktop.swingx.plaf.LookAndFeelAddons: java.lang.String getBestMatchAddonClassName()>();

        r6 = $r2;

     label1:
        r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("swing.addon", $r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        staticinvoke <org.jdesktop.swingx.plaf.LookAndFeelAddons: void setAddon(java.lang.String)>(r6);

     label5:
        goto label7;

     label6:
        $r3 := @caughtexception;

        $r4 = new java.lang.ExceptionInInitializerError;

        specialinvoke $r4.<java.lang.ExceptionInInitializerError: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label7:
        staticinvoke <org.jdesktop.swingx.plaf.LookAndFeelAddons: void setTrackingLookAndFeelChanges(boolean)>(1);

        return;

        catch java.lang.SecurityException from label1 to label2 with label3;
        catch java.lang.Exception from label4 to label5 with label6;
    }
}
