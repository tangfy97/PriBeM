public class org.apache.velocity.runtime.resource.loader.URLResourceLoader extends org.apache.velocity.runtime.resource.loader.ResourceLoader
{
    private java.lang.String[] roots;
    protected java.util.HashMap templateRoots;
    private int timeout;
    private java.lang.reflect.Method[] timeoutMethods;
    static java.lang.Class class$java$net$URLConnection;

    public void <init>()
    {
        int $i1;
        org.apache.velocity.runtime.resource.loader.URLResourceLoader r0;

        r0 := @this: org.apache.velocity.runtime.resource.loader.URLResourceLoader;

        specialinvoke r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: void <init>()>();

        r0.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: java.lang.String[] roots> = null;

        r0.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: java.util.HashMap templateRoots> = null;

        $i1 = (int) -1;

        r0.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: int timeout> = $i1;

        return;
    }

    public void init(org.apache.commons.collections.ExtendedProperties)
    {
        java.lang.NoSuchMethodException $r26;
        java.lang.reflect.Method[] $r11;
        java.lang.reflect.Method $r8, $r10;
        boolean $z0;
        org.apache.velocity.runtime.resource.loader.URLResourceLoader r0;
        java.lang.String[] $r3, $r17, $r21;
        java.util.HashMap $r34;
        java.lang.StringBuffer $r14, $r15, $r20, $r23, $r24, $r32, $r33;
        int $i0, $i1, $i2, $i3, i4, $i6, $i8;
        java.lang.String $r16, $r22, $r25;
        java.lang.Class[] $r5;
        org.apache.commons.collections.ExtendedProperties r2;
        org.apache.velocity.runtime.log.Log $r1, $r4, $r13, $r19, $r27, $r31;
        java.lang.Class $r6, $r7, $r9, $r28, $r29;

        r0 := @this: org.apache.velocity.runtime.resource.loader.URLResourceLoader;

        r2 := @parameter0: org.apache.commons.collections.ExtendedProperties;

        $r1 = r0.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void trace(java.lang.Object)>("URLResourceLoader : initialization starting.");

        $r3 = virtualinvoke r2.<org.apache.commons.collections.ExtendedProperties: java.lang.String[] getStringArray(java.lang.String)>("root");

        r0.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: java.lang.String[] roots> = $r3;

        $r4 = r0.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $z0 = virtualinvoke $r4.<org.apache.velocity.runtime.log.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label02;

        i4 = 0;

     label01:
        $r17 = r0.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: java.lang.String[] roots>;

        $i3 = lengthof $r17;

        if i4 >= $i3 goto label02;

        $r19 = r0.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("URLResourceLoader : adding root \'");

        $r21 = r0.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: java.lang.String[] roots>;

        $r22 = $r21[i4];

        $r23 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r19.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r25);

        i4 = i4 + 1;

        goto label01;

     label02:
        $i6 = (int) -1;

        $i0 = virtualinvoke r2.<org.apache.commons.collections.ExtendedProperties: int getInt(java.lang.String,int)>("timeout", $i6);

        r0.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: int timeout> = $i0;

        $i1 = r0.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: int timeout>;

        if $i1 <= 0 goto label10;

     label03:
        $r5 = newarray (java.lang.Class)[1];

        $r6 = <java.lang.Integer: java.lang.Class TYPE>;

        $r5[0] = $r6;

        $r7 = <org.apache.velocity.runtime.resource.loader.URLResourceLoader: java.lang.Class class$java$net$URLConnection>;

        if $r7 != null goto label04;

        $r28 = staticinvoke <org.apache.velocity.runtime.resource.loader.URLResourceLoader: java.lang.Class class$(java.lang.String)>("java.net.URLConnection");

        <org.apache.velocity.runtime.resource.loader.URLResourceLoader: java.lang.Class class$java$net$URLConnection> = $r28;

        goto label05;

     label04:
        $r28 = <org.apache.velocity.runtime.resource.loader.URLResourceLoader: java.lang.Class class$java$net$URLConnection>;

     label05:
        $r8 = virtualinvoke $r28.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setConnectTimeout", $r5);

        $r9 = <org.apache.velocity.runtime.resource.loader.URLResourceLoader: java.lang.Class class$java$net$URLConnection>;

        if $r9 != null goto label06;

        $r29 = staticinvoke <org.apache.velocity.runtime.resource.loader.URLResourceLoader: java.lang.Class class$(java.lang.String)>("java.net.URLConnection");

        <org.apache.velocity.runtime.resource.loader.URLResourceLoader: java.lang.Class class$java$net$URLConnection> = $r29;

        goto label07;

     label06:
        $r29 = <org.apache.velocity.runtime.resource.loader.URLResourceLoader: java.lang.Class class$java$net$URLConnection>;

     label07:
        $r10 = virtualinvoke $r29.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setReadTimeout", $r5);

        $r11 = newarray (java.lang.reflect.Method)[2];

        $r11[0] = $r8;

        $r11[1] = $r10;

        r0.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: java.lang.reflect.Method[] timeoutMethods> = $r11;

        $r13 = r0.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $r33 = new java.lang.StringBuffer;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("URLResourceLoader : timeout set to ");

        $i2 = r0.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: int timeout>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r13.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r16);

     label08:
        goto label10;

     label09:
        $r26 := @caughtexception;

        $r27 = r0.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r27.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object,java.lang.Throwable)>("URLResourceLoader : Java 1.5+ is required to customize timeout!", $r26);

        $i8 = (int) -1;

        r0.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: int timeout> = $i8;

     label10:
        $r34 = new java.util.HashMap;

        specialinvoke $r34.<java.util.HashMap: void <init>()>();

        r0.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: java.util.HashMap templateRoots> = $r34;

        $r31 = r0.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r31.<org.apache.velocity.runtime.log.Log: void trace(java.lang.Object)>("URLResourceLoader : initialization complete.");

        return;

        catch java.lang.NoSuchMethodException from label03 to label08 with label09;
    }

    public synchronized java.io.InputStream getResourceStream(java.lang.String) throws org.apache.velocity.exception.ResourceNotFoundException
    {
        java.net.URL $r8;
        boolean $z0, $z1, $z2;
        org.apache.velocity.runtime.resource.loader.URLResourceLoader r1;
        java.lang.String[] $r2, $r10, $r18, $r26, $r39;
        java.util.HashMap $r20;
        java.lang.StringBuffer $r4, $r5, $r6, $r7, $r9, $r12, $r13, $r21, $r23, $r24, $r25, $r28, $r29, $r34, $r36, $r37, $r38, $r41, $r42;
        java.net.URLConnection $r15;
        int $i0, i1;
        java.lang.String r0, $r11, $r14, $r19, $r27, $r30, $r40, $r43, r46;
        java.io.IOException $r32, r45;
        org.apache.velocity.runtime.log.Log $r17, $r22, $r33, $r35;
        org.apache.velocity.exception.ResourceNotFoundException $r3, $r31;
        java.io.InputStream $r16, r44;

        r1 := @this: org.apache.velocity.runtime.resource.loader.URLResourceLoader;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 == 0 goto label01;

        $r31 = new org.apache.velocity.exception.ResourceNotFoundException;

        specialinvoke $r31.<org.apache.velocity.exception.ResourceNotFoundException: void <init>(java.lang.String)>("URLResourceLoader : No template name provided");

        throw $r31;

     label01:
        r44 = null;

        r45 = null;

        i1 = 0;

     label02:
        $r2 = r1.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: java.lang.String[] roots>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label10;

     label03:
        $r8 = new java.net.URL;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = r1.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: java.lang.String[] roots>;

        $r11 = $r10[i1];

        $r12 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<java.net.URL: void <init>(java.lang.String)>($r14);

        $r15 = virtualinvoke $r8.<java.net.URL: java.net.URLConnection openConnection()>();

        specialinvoke r1.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: void tryToSetTimeout(java.net.URLConnection)>($r15);

        $r16 = virtualinvoke $r15.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        r44 = $r16;

        if $r16 == null goto label06;

        $r17 = r1.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $z1 = virtualinvoke $r17.<org.apache.velocity.runtime.log.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label04;

        $r22 = r1.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("URLResourceLoader: Found \'");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' at \'");

        $r26 = r1.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: java.lang.String[] roots>;

        $r27 = $r26[i1];

        $r28 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r22.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r30);

     label04:
        $r20 = r1.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: java.util.HashMap templateRoots>;

        $r18 = r1.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: java.lang.String[] roots>;

        $r19 = $r18[i1];

        virtualinvoke $r20.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r19);

     label05:
        goto label10;

     label06:
        goto label09;

     label07:
        $r32 := @caughtexception;

        $r33 = r1.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $z2 = virtualinvoke $r33.<org.apache.velocity.runtime.log.Log: boolean isDebugEnabled()>();

        if $z2 == 0 goto label08;

        $r35 = r1.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $r34 = new java.lang.StringBuffer;

        specialinvoke $r34.<java.lang.StringBuffer: void <init>()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("URLResourceLoader: Exception when looking for \'");

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' at \'");

        $r39 = r1.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: java.lang.String[] roots>;

        $r40 = $r39[i1];

        $r41 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r35.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object,java.lang.Throwable)>($r43, $r32);

     label08:
        if r45 != null goto label09;

        r45 = $r32;

     label09:
        i1 = i1 + 1;

        goto label02;

     label10:
        if r44 != null goto label13;

        if r45 != null goto label11;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("URLResourceLoader : Resource \'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' not found.");

        r46 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label12;

     label11:
        r46 = virtualinvoke r45.<java.lang.Exception: java.lang.String getMessage()>();

     label12:
        $r3 = new org.apache.velocity.exception.ResourceNotFoundException;

        specialinvoke $r3.<org.apache.velocity.exception.ResourceNotFoundException: void <init>(java.lang.String)>(r46);

        throw $r3;

     label13:
        return r44;

        catch java.io.IOException from label03 to label05 with label07;
    }

    public boolean isSourceModified(org.apache.velocity.runtime.resource.Resource)
    {
        byte $b1, $b3;
        org.apache.velocity.runtime.resource.loader.URLResourceLoader r0;
        long $l0, $l2;
        org.apache.velocity.runtime.resource.Resource r1;

        r0 := @this: org.apache.velocity.runtime.resource.loader.URLResourceLoader;

        r1 := @parameter0: org.apache.velocity.runtime.resource.Resource;

        $l0 = virtualinvoke r0.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: long getLastModified(org.apache.velocity.runtime.resource.Resource)>(r1);

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $l2 = virtualinvoke r1.<org.apache.velocity.runtime.resource.Resource: long getLastModified()>();

        $b3 = $l0 cmp $l2;

        if $b3 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public long getLastModified(org.apache.velocity.runtime.resource.Resource)
    {
        java.net.URL $r6;
        org.apache.velocity.runtime.resource.loader.URLResourceLoader r2;
        java.util.HashMap $r3;
        long $l0;
        org.apache.velocity.runtime.resource.Resource r0;
        java.lang.StringBuffer $r7, $r8, $r9, $r13, $r14, $r15, $r16, $r17, $r18;
        java.net.URLConnection $r11;
        java.lang.String $r1, r5, $r10, $r19;
        java.io.IOException $r12;
        org.apache.velocity.runtime.log.Log $r20;
        java.lang.Object $r4;
        org.apache.velocity.exception.ResourceNotFoundException $r21;

        r2 := @this: org.apache.velocity.runtime.resource.loader.URLResourceLoader;

        r0 := @parameter0: org.apache.velocity.runtime.resource.Resource;

        $r1 = virtualinvoke r0.<org.apache.velocity.runtime.resource.Resource: java.lang.String getName()>();

        $r3 = r2.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: java.util.HashMap templateRoots>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        r5 = (java.lang.String) $r4;

     label1:
        $r6 = new java.net.URL;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<java.net.URL: void <init>(java.lang.String)>($r10);

        $r11 = virtualinvoke $r6.<java.net.URL: java.net.URLConnection openConnection()>();

        specialinvoke r2.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: void tryToSetTimeout(java.net.URLConnection)>($r11);

        $l0 = virtualinvoke $r11.<java.net.URLConnection: long getLastModified()>();

     label2:
        return $l0;

     label3:
        $r12 := @caughtexception;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("URLResourceLoader: \'");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is no longer reachable at \'");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        $r20 = r2.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r20.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>($r19, $r12);

        $r21 = new org.apache.velocity.exception.ResourceNotFoundException;

        specialinvoke $r21.<org.apache.velocity.exception.ResourceNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>($r19, $r12);

        throw $r21;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public int getTimeout()
    {
        int $i0;
        org.apache.velocity.runtime.resource.loader.URLResourceLoader r0;

        r0 := @this: org.apache.velocity.runtime.resource.loader.URLResourceLoader;

        $i0 = r0.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: int timeout>;

        return $i0;
    }

    private void tryToSetTimeout(java.net.URLConnection)
    {
        java.lang.Object[] $r1;
        org.apache.velocity.runtime.resource.loader.URLResourceLoader r0;
        java.lang.Integer $r2;
        java.lang.reflect.Method[] $r3, $r6;
        java.net.URLConnection r4;
        java.lang.StringBuffer $r9, $r10, $r11;
        int $i0, $i1;
        java.lang.String $r12;
        org.apache.velocity.exception.VelocityException $r14;
        java.lang.reflect.Method $r5, $r7;
        java.lang.Exception $r8;
        org.apache.velocity.runtime.log.Log $r13;

        r0 := @this: org.apache.velocity.runtime.resource.loader.URLResourceLoader;

        r4 := @parameter0: java.net.URLConnection;

        $i0 = r0.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: int timeout>;

        if $i0 <= 0 goto label4;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = new java.lang.Integer;

        $i1 = r0.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: int timeout>;

        specialinvoke $r2.<java.lang.Integer: void <init>(int)>($i1);

        $r1[0] = $r2;

     label1:
        $r3 = r0.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: java.lang.reflect.Method[] timeoutMethods>;

        $r5 = $r3[0];

        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r4, $r1);

        $r6 = r0.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: java.lang.reflect.Method[] timeoutMethods>;

        $r7 = $r6[1];

        virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r4, $r1);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected exception while setting connection timeout for ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13 = r0.<org.apache.velocity.runtime.resource.loader.URLResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r13.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>($r12, $r8);

        $r14 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r14.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r8);

        throw $r14;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
