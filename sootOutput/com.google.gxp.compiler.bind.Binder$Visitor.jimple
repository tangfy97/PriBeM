class com.google.gxp.compiler.bind.Binder$Visitor extends com.google.gxp.compiler.base.ExhaustiveExpressionVisitor implements com.google.gxp.compiler.base.CallVisitor, com.google.gxp.compiler.base.ImplementsVisitor
{
    private final com.google.gxp.compiler.alerts.AlertSink alertSink;
    private final com.google.gxp.compiler.schema.SchemaFactory schemaFactory;
    private final com.google.gxp.compiler.servicedir.ServiceDirectory serviceDirectory;
    private final java.util.Set requirements;

    void <init>(com.google.gxp.compiler.alerts.AlertSink, com.google.gxp.compiler.schema.SchemaFactory, com.google.gxp.compiler.servicedir.ServiceDirectory, java.util.Set)
    {
        com.google.gxp.compiler.schema.SchemaFactory r4, $r6;
        java.util.Set r10, $r12;
        com.google.gxp.compiler.servicedir.ServiceDirectory r7, $r9;
        com.google.gxp.compiler.alerts.AlertSink r1, $r3;
        com.google.gxp.compiler.bind.Binder$Visitor r0;
        java.lang.Object $r2, $r5, $r8, $r11;

        r0 := @this: com.google.gxp.compiler.bind.Binder$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.alerts.AlertSink;

        r4 := @parameter1: com.google.gxp.compiler.schema.SchemaFactory;

        r7 := @parameter2: com.google.gxp.compiler.servicedir.ServiceDirectory;

        r10 := @parameter3: java.util.Set;

        specialinvoke r0.<com.google.gxp.compiler.base.ExhaustiveExpressionVisitor: void <init>()>();

        $r2 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (com.google.gxp.compiler.alerts.AlertSink) $r2;

        r0.<com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink> = $r3;

        $r5 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $r6 = (com.google.gxp.compiler.schema.SchemaFactory) $r5;

        r0.<com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.schema.SchemaFactory schemaFactory> = $r6;

        $r8 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r7);

        $r9 = (com.google.gxp.compiler.servicedir.ServiceDirectory) $r8;

        r0.<com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.servicedir.ServiceDirectory serviceDirectory> = $r9;

        $r11 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r10);

        $r12 = (java.util.Set) $r11;

        r0.<com.google.gxp.compiler.bind.Binder$Visitor: java.util.Set requirements> = $r12;

        return;
    }

    public com.google.gxp.compiler.base.Template visitTemplate(com.google.gxp.compiler.base.Template)
    {
        java.util.Iterator $r3;
        com.google.gxp.compiler.base.ImplementsDeclaration r8, r10;
        java.util.List $r2;
        com.google.gxp.compiler.bind.Binder$Visitor r4;
        java.lang.Object $r7, $r9;
        java.util.LinkedList $r0;
        com.google.gxp.compiler.base.Template r1, $r5, $r6;
        boolean $z0;

        r4 := @this: com.google.gxp.compiler.bind.Binder$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.Template;

        $r0 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.LinkedList newLinkedList()>();

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.base.Template: java.util.List getImplementsDeclarations()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.google.gxp.compiler.base.ImplementsDeclaration) $r7;

        $r9 = virtualinvoke r8.<com.google.gxp.compiler.base.ImplementsDeclaration: java.lang.Object acceptImplementsVisitor(com.google.gxp.compiler.base.ImplementsVisitor)>(r4);

        r10 = (com.google.gxp.compiler.base.ImplementsDeclaration) $r9;

        if r10 == null goto label2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r10);

     label2:
        goto label1;

     label3:
        $r5 = virtualinvoke r1.<com.google.gxp.compiler.base.Template: com.google.gxp.compiler.base.Template withImplementsDeclarations(java.util.List)>($r0);

        $r6 = specialinvoke r4.<com.google.gxp.compiler.base.ExhaustiveExpressionVisitor: com.google.gxp.compiler.base.Template visitTemplate(com.google.gxp.compiler.base.Template)>($r5);

        return $r6;
    }

    public com.google.gxp.compiler.base.Expression visitCall(com.google.gxp.compiler.base.Call)
    {
        com.google.gxp.compiler.base.Expression $r3;
        com.google.gxp.compiler.bind.Binder$Visitor r1;
        java.lang.Object $r2;
        com.google.gxp.compiler.base.Call r0;

        r1 := @this: com.google.gxp.compiler.bind.Binder$Visitor;

        r0 := @parameter0: com.google.gxp.compiler.base.Call;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.base.Call: java.lang.Object acceptCallVisitor(com.google.gxp.compiler.base.CallVisitor)>(r1);

        $r3 = (com.google.gxp.compiler.base.Expression) $r2;

        return $r3;
    }

    public com.google.gxp.compiler.base.Expression visitBoundCall(com.google.gxp.compiler.base.BoundCall)
    {
        com.google.gxp.compiler.base.BoundCall r0;
        com.google.gxp.compiler.bind.Binder$Visitor r1;
        com.google.gxp.compiler.base.Call $r2;

        r1 := @this: com.google.gxp.compiler.bind.Binder$Visitor;

        r0 := @parameter0: com.google.gxp.compiler.base.BoundCall;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.base.BoundCall: com.google.gxp.compiler.base.Call transformParams(com.google.gxp.compiler.base.ExhaustiveExpressionVisitor)>(r1);

        return $r2;
    }

    public com.google.gxp.compiler.base.Expression visitValidatedCall(com.google.gxp.compiler.base.ValidatedCall)
    {
        com.google.gxp.compiler.bind.Binder$Visitor r1;
        com.google.gxp.compiler.base.ValidatedCall r0;
        com.google.gxp.compiler.base.Call $r2;

        r1 := @this: com.google.gxp.compiler.bind.Binder$Visitor;

        r0 := @parameter0: com.google.gxp.compiler.base.ValidatedCall;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.base.ValidatedCall: com.google.gxp.compiler.base.Call transformParams(com.google.gxp.compiler.base.ExhaustiveExpressionVisitor)>(r1);

        return $r2;
    }

    public com.google.gxp.compiler.base.Expression visitUnboundCall(com.google.gxp.compiler.base.UnboundCall)
    {
        com.google.gxp.compiler.base.UnboundCall r0;
        com.google.gxp.compiler.schema.Schema $r34;
        com.google.gxp.compiler.servicedir.ServiceDirectory $r4, $r66;
        java.util.Map $r2, $r32, $r36;
        com.google.gxp.compiler.base.BundleType r81;
        com.google.gxp.compiler.base.Callable r5, $r67;
        java.util.Set $r10, $r12, $r82, $r83;
        com.google.gxp.compiler.base.Type $r31, $r48, $r60, $r78;
        com.google.gxp.compiler.bind.BadParameterError $r56;
        com.google.gxp.compiler.base.Expression $r15, $r16, $r17, $r46, $r47, $r50, $r58, $r74, $r75;
        com.google.gxp.compiler.alerts.common.BadNodePlacementError $r25;
        java.util.LinkedHashMap $r7, $r62;
        com.google.gxp.com.google.common.collect.ImmutableMap$Builder $r6;
        java.lang.String $r18, $r19, $r29, $r41, $r52, $r61, r70;
        java.util.Map$Entry r69, r80;
        com.google.gxp.compiler.bind.CallableNotFoundError $r63;
        com.google.gxp.compiler.reparent.Attribute $r20, $r24, $r39, r71, $r73, $r76, $r77;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        com.google.gxp.compiler.bind.InvalidParameterFailedRegexError $r53;
        com.google.gxp.compiler.bind.Binder$Visitor$1 $r79;
        com.google.gxp.compiler.base.FormalParameter $r14, $r30, $r44, r68;
        com.google.gxp.compiler.base.AttrBundleParam $r33;
        com.google.gxp.compiler.base.ObjectConstant r72;
        java.util.List $r8, $r37;
        com.google.gxp.com.google.common.collect.ImmutableMap $r85;
        com.google.gxp.compiler.bind.Binder$Visitor r3;
        java.util.regex.Pattern $r55;
        com.google.gxp.compiler.base.ConstructedConstant $r51;
        com.google.gxp.compiler.alerts.AlertSink $r22, $r26, $r49, $r54, $r57, $r64;
        int $i0;
        com.google.gxp.compiler.base.BoundCall $r84;
        java.util.Iterator $r9, $r11, $r13;
        com.google.gxp.compiler.base.TemplateName $r1;
        com.google.gxp.compiler.base.StringConstant $r65;
        java.lang.Object $r23, $r27, $r28, $r35, $r38, $r40, $r42, $r43, $r45, $r59;
        com.google.gxp.compiler.alerts.common.MultiValueAttributeError $r21;

        r3 := @this: com.google.gxp.compiler.bind.Binder$Visitor;

        r0 := @parameter0: com.google.gxp.compiler.base.UnboundCall;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.base.UnboundCall: com.google.gxp.compiler.base.TemplateName getCallee()>();

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.base.UnboundCall: java.util.Map getAttributes()>();

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>("this");

        if $z0 == 0 goto label01;

        $r66 = r3.<com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.servicedir.ServiceDirectory serviceDirectory>;

        $r67 = interfaceinvoke $r66.<com.google.gxp.compiler.servicedir.ServiceDirectory: com.google.gxp.compiler.base.InstanceCallable getInstanceCallable(com.google.gxp.compiler.base.TemplateName)>($r1);

        goto label02;

     label01:
        $r4 = r3.<com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.servicedir.ServiceDirectory serviceDirectory>;

        $r67 = interfaceinvoke $r4.<com.google.gxp.compiler.servicedir.ServiceDirectory: com.google.gxp.compiler.base.Callable getCallable(com.google.gxp.compiler.base.TemplateName)>($r1);

     label02:
        r5 = $r67;

        if $r67 != null goto label03;

        $r64 = r3.<com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r63 = new com.google.gxp.compiler.bind.CallableNotFoundError;

        specialinvoke $r63.<com.google.gxp.compiler.bind.CallableNotFoundError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.TemplateName)>(r0, $r1);

        interfaceinvoke $r64.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r63);

        $r65 = new com.google.gxp.compiler.base.StringConstant;

        specialinvoke $r65.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r0, null, "");

        return $r65;

     label03:
        $r6 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableMap: com.google.gxp.com.google.common.collect.ImmutableMap$Builder builder()>();

        $r7 = staticinvoke <com.google.gxp.com.google.common.collect.Maps: java.util.LinkedHashMap newLinkedHashMap()>();

        $r8 = interfaceinvoke $r67.<com.google.gxp.compiler.base.Callable: java.util.List getParameters()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r59 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r68 = (com.google.gxp.compiler.base.FormalParameter) $r59;

        $r60 = virtualinvoke r68.<com.google.gxp.compiler.base.FormalParameter: com.google.gxp.compiler.base.Type getType()>();

        $z10 = $r60 instanceof com.google.gxp.compiler.base.BundleType;

        if $z10 == 0 goto label05;

        $r61 = virtualinvoke r68.<com.google.gxp.compiler.base.FormalParameter: java.lang.String getPrimaryName()>();

        $r62 = new java.util.LinkedHashMap;

        specialinvoke $r62.<java.util.LinkedHashMap: void <init>()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r61, $r62);

     label05:
        goto label04;

     label06:
        $r10 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z11 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label13;

        $r42 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r69 = (java.util.Map$Entry) $r42;

        $r43 = interfaceinvoke r69.<java.util.Map$Entry: java.lang.Object getKey()>();

        r70 = (java.lang.String) $r43;

        $r44 = interfaceinvoke r5.<com.google.gxp.compiler.base.Callable: com.google.gxp.compiler.base.FormalParameter getParameter(java.lang.String)>(r70);

        $r45 = interfaceinvoke r69.<java.util.Map$Entry: java.lang.Object getValue()>();

        r71 = (com.google.gxp.compiler.reparent.Attribute) $r45;

        if $r44 != null goto label08;

        $r57 = r3.<com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r56 = new com.google.gxp.compiler.bind.BadParameterError;

        $r58 = virtualinvoke r71.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.base.Expression getValue()>();

        specialinvoke $r56.<com.google.gxp.compiler.bind.BadParameterError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.Callable,java.lang.String)>($r58, r5, r70);

        interfaceinvoke $r57.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r56);

        goto label07;

     label08:
        $r46 = virtualinvoke r71.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.base.Expression getValue()>();

        $z7 = $r46 instanceof com.google.gxp.compiler.base.ObjectConstant;

        if $z7 == 0 goto label12;

        $r47 = virtualinvoke r71.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.base.Expression getValue()>();

        r72 = (com.google.gxp.compiler.base.ObjectConstant) $r47;

        $z8 = virtualinvoke $r44.<com.google.gxp.compiler.base.FormalParameter: boolean regexMatches(com.google.gxp.compiler.base.ObjectConstant)>(r72);

        if $z8 != 0 goto label09;

        $r54 = r3.<com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r53 = new com.google.gxp.compiler.bind.InvalidParameterFailedRegexError;

        $r55 = virtualinvoke $r44.<com.google.gxp.compiler.base.FormalParameter: java.util.regex.Pattern getRegex()>();

        specialinvoke $r53.<com.google.gxp.compiler.bind.InvalidParameterFailedRegexError: void <init>(com.google.gxp.compiler.base.TemplateName,java.lang.String,java.util.regex.Pattern,com.google.gxp.compiler.base.ObjectConstant)>($r1, r70, $r55, r72);

        interfaceinvoke $r54.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r53);

     label09:
        $z9 = virtualinvoke $r44.<com.google.gxp.compiler.base.FormalParameter: boolean hasConstructor()>();

        if $z9 == 0 goto label10;

        $r51 = new com.google.gxp.compiler.base.ConstructedConstant;

        $r52 = virtualinvoke r72.<com.google.gxp.compiler.base.ObjectConstant: java.lang.String getValue()>();

        specialinvoke $r51.<com.google.gxp.compiler.base.ConstructedConstant: void <init>(com.google.gxp.compiler.base.Node,java.lang.String,com.google.gxp.compiler.base.Callable,com.google.gxp.compiler.base.FormalParameter)>(r72, $r52, r5, $r44);

        $r73 = virtualinvoke r71.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.reparent.Attribute withValue(com.google.gxp.compiler.base.Expression)>($r51);

        goto label11;

     label10:
        $r48 = virtualinvoke $r44.<com.google.gxp.compiler.base.FormalParameter: com.google.gxp.compiler.base.Type getType()>();

        $r49 = r3.<com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r50 = virtualinvoke $r48.<com.google.gxp.compiler.base.Type: com.google.gxp.compiler.base.Expression parseObjectConstant(java.lang.String,com.google.gxp.compiler.base.ObjectConstant,com.google.gxp.compiler.alerts.AlertSink)>(r70, r72, $r49);

        $r73 = virtualinvoke r71.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.reparent.Attribute withValue(com.google.gxp.compiler.base.Expression)>($r50);

     label11:
        r71 = $r73;

     label12:
        $r74 = virtualinvoke r71.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.base.Expression getValue()>();

        $r75 = staticinvoke <com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.base.Expression prepareExpressionAsParameterValue(com.google.gxp.compiler.base.FormalParameter,com.google.gxp.compiler.base.Expression)>($r44, $r74);

        $r76 = virtualinvoke r71.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.reparent.Attribute withValue(com.google.gxp.compiler.base.Expression)>($r75);

        $r77 = virtualinvoke r3.<com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.reparent.Attribute visitAttribute(com.google.gxp.compiler.reparent.Attribute)>($r76);

        $r78 = virtualinvoke $r44.<com.google.gxp.compiler.base.FormalParameter: com.google.gxp.compiler.base.Type getType()>();

        $r79 = new com.google.gxp.compiler.bind.Binder$Visitor$1;

        specialinvoke $r79.<com.google.gxp.compiler.bind.Binder$Visitor$1: void <init>(com.google.gxp.compiler.bind.Binder$Visitor,com.google.gxp.com.google.common.collect.ImmutableMap$Builder,java.lang.String,com.google.gxp.compiler.reparent.Attribute,java.util.Map,com.google.gxp.compiler.base.FormalParameter)>(r3, $r6, r70, $r77, $r7, $r44);

        virtualinvoke $r78.<com.google.gxp.compiler.base.Type: java.lang.Object acceptTypeVisitor(com.google.gxp.compiler.base.TypeVisitor)>($r79);

        goto label07;

     label13:
        $r12 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        $r13 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label14:
        $z2 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label17;

        $r27 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r80 = (java.util.Map$Entry) $r27;

        $r28 = interfaceinvoke r80.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r29 = (java.lang.String) $r28;

        $r30 = interfaceinvoke r5.<com.google.gxp.compiler.base.Callable: com.google.gxp.compiler.base.FormalParameter getParameterByPrimary(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<com.google.gxp.compiler.base.FormalParameter: com.google.gxp.compiler.base.Type getType()>();

        r81 = (com.google.gxp.compiler.base.BundleType) $r31;

        $i0 = interfaceinvoke $r7.<java.util.Map: int size()>();

        if $i0 != 1 goto label15;

        $r82 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        goto label16;

     label15:
        $r32 = virtualinvoke r81.<com.google.gxp.compiler.base.BundleType: java.util.Map getAttrMap()>();

        $r82 = interfaceinvoke $r32.<java.util.Map: java.util.Set keySet()>();

     label16:
        $r33 = new com.google.gxp.compiler.base.AttrBundleParam;

        $r34 = interfaceinvoke r5.<com.google.gxp.compiler.base.Callable: com.google.gxp.compiler.schema.Schema getSchema()>();

        $r35 = interfaceinvoke r80.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r36 = (java.util.Map) $r35;

        $r37 = virtualinvoke r0.<com.google.gxp.compiler.base.UnboundCall: java.util.List getAttrBundles()>();

        specialinvoke $r33.<com.google.gxp.compiler.base.AttrBundleParam: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.util.Set,java.util.Map,java.util.List)>(r0, $r34, $r82, $r36, $r37);

        $r38 = interfaceinvoke r80.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r39 = new com.google.gxp.compiler.reparent.Attribute;

        $r40 = interfaceinvoke r80.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r41 = (java.lang.String) $r40;

        specialinvoke $r39.<com.google.gxp.compiler.reparent.Attribute: void <init>(com.google.gxp.compiler.base.Node,java.lang.String,com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.Expression)>(r0, $r41, $r33, null);

        virtualinvoke $r6.<com.google.gxp.com.google.common.collect.ImmutableMap$Builder: com.google.gxp.com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r38, $r39);

        goto label14;

     label17:
        $r14 = interfaceinvoke r5.<com.google.gxp.compiler.base.Callable: com.google.gxp.compiler.base.FormalParameter getContentConsumingParameter()>();

        $r15 = virtualinvoke r0.<com.google.gxp.compiler.base.UnboundCall: com.google.gxp.compiler.base.Expression getContent()>();

        $r16 = virtualinvoke r3.<com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.base.Expression apply(com.google.gxp.compiler.base.Expression)>($r15);

        $r17 = staticinvoke <com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.base.Expression prepareExpressionAsParameterValue(com.google.gxp.compiler.base.FormalParameter,com.google.gxp.compiler.base.Expression)>($r14, $r16);

        $z3 = virtualinvoke $r17.<com.google.gxp.compiler.base.Expression: boolean alwaysOnlyWhitespace()>();

        if $r14 != null goto label18;

        if $z3 != 0 goto label21;

        $r26 = r3.<com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r25 = new com.google.gxp.compiler.alerts.common.BadNodePlacementError;

        specialinvoke $r25.<com.google.gxp.compiler.alerts.common.BadNodePlacementError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.Node)>($r17, r0);

        interfaceinvoke $r26.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r25);

        goto label21;

     label18:
        $r18 = virtualinvoke $r14.<com.google.gxp.compiler.base.FormalParameter: java.lang.String getPrimaryName()>();

        if $z3 != 0 goto label19;

        $z6 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r18);

        if $z6 == 0 goto label19;

        $r22 = r3.<com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r21 = new com.google.gxp.compiler.alerts.common.MultiValueAttributeError;

        $r23 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r18);

        $r24 = (com.google.gxp.compiler.reparent.Attribute) $r23;

        specialinvoke $r21.<com.google.gxp.compiler.alerts.common.MultiValueAttributeError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.reparent.Attribute)>(r0, $r24);

        interfaceinvoke $r22.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r21);

        goto label21;

     label19:
        if $z3 == 0 goto label20;

        $z4 = virtualinvoke $r14.<com.google.gxp.compiler.base.FormalParameter: boolean hasDefault()>();

        if $z4 != 0 goto label21;

        $z5 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r18);

        if $z5 != 0 goto label21;

     label20:
        $r19 = virtualinvoke $r14.<com.google.gxp.compiler.base.FormalParameter: java.lang.String getPrimaryName()>();

        $r20 = new com.google.gxp.compiler.reparent.Attribute;

        specialinvoke $r20.<com.google.gxp.compiler.reparent.Attribute: void <init>(com.google.gxp.compiler.base.Node,java.lang.String,com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.Expression)>(r0, $r18, $r17, null);

        virtualinvoke $r6.<com.google.gxp.com.google.common.collect.ImmutableMap$Builder: com.google.gxp.com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r19, $r20);

     label21:
        $r83 = r3.<com.google.gxp.compiler.bind.Binder$Visitor: java.util.Set requirements>;

        interfaceinvoke $r83.<java.util.Set: boolean add(java.lang.Object)>(r5);

        $r84 = new com.google.gxp.compiler.base.BoundCall;

        $r85 = virtualinvoke $r6.<com.google.gxp.com.google.common.collect.ImmutableMap$Builder: com.google.gxp.com.google.common.collect.ImmutableMap build()>();

        specialinvoke $r84.<com.google.gxp.compiler.base.BoundCall: void <init>(com.google.gxp.compiler.base.Call,com.google.gxp.compiler.base.Callable,java.util.Map)>(r0, r5, $r85);

        return $r84;
    }

    private static com.google.gxp.compiler.base.Expression prepareExpressionAsParameterValue(com.google.gxp.compiler.base.FormalParameter, com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.base.Expression r5;
        com.google.gxp.compiler.base.CollapseExpression $r3;
        com.google.gxp.compiler.base.Type $r1;
        com.google.gxp.compiler.base.ConvertibleToContent $r4;
        com.google.gxp.compiler.base.FormalParameter r0;
        com.google.gxp.compiler.base.SpaceOperatorSet $r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: com.google.gxp.compiler.base.FormalParameter;

        r5 := @parameter1: com.google.gxp.compiler.base.Expression;

        if r0 == null goto label3;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.base.FormalParameter: com.google.gxp.compiler.base.Type getType()>();

        $z0 = virtualinvoke $r1.<com.google.gxp.compiler.base.Type: boolean isContent()>();

        if $z0 != 0 goto label1;

        $z2 = r5 instanceof com.google.gxp.compiler.base.ConvertibleToContent;

        if $z2 == 0 goto label1;

        $r4 = (com.google.gxp.compiler.base.ConvertibleToContent) r5;

        r5 = virtualinvoke $r4.<com.google.gxp.compiler.base.ConvertibleToContent: com.google.gxp.compiler.base.Expression getSubexpression()>();

     label1:
        $z3 = r5 instanceof com.google.gxp.compiler.base.CollapseExpression;

        if $z3 != 0 goto label2;

        $z1 = r5 instanceof com.google.gxp.compiler.base.ConvertibleToContent;

        if $z1 == 0 goto label3;

     label2:
        $r2 = virtualinvoke r0.<com.google.gxp.compiler.base.FormalParameter: com.google.gxp.compiler.base.SpaceOperatorSet getSpaceOperators()>();

        $r3 = staticinvoke <com.google.gxp.compiler.base.CollapseExpression: com.google.gxp.compiler.base.CollapseExpression create(com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.SpaceOperatorSet)>(r5, $r2);

        return $r3;

     label3:
        return r5;
    }

    public com.google.gxp.compiler.base.ImplementsDeclaration visitUnboundImplementsDeclaration(com.google.gxp.compiler.base.UnboundImplementsDeclaration)
    {
        com.google.gxp.compiler.base.Implementable $r4;
        com.google.gxp.compiler.base.BoundImplementsDeclaration $r6;
        com.google.gxp.compiler.base.UnboundImplementsDeclaration r0;
        com.google.gxp.compiler.alerts.SourcePosition $r7;
        java.util.Set $r5;
        com.google.gxp.compiler.bind.ImplementableNotFoundError $r9;
        com.google.gxp.compiler.base.TemplateName $r1;
        com.google.gxp.compiler.servicedir.ServiceDirectory $r3;
        com.google.gxp.compiler.alerts.AlertSink $r10;
        com.google.gxp.compiler.bind.Binder$Visitor r2;
        java.lang.String $r8;

        r2 := @this: com.google.gxp.compiler.bind.Binder$Visitor;

        r0 := @parameter0: com.google.gxp.compiler.base.UnboundImplementsDeclaration;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.base.UnboundImplementsDeclaration: com.google.gxp.compiler.base.TemplateName getTemplateName()>();

        $r3 = r2.<com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.servicedir.ServiceDirectory serviceDirectory>;

        $r4 = interfaceinvoke $r3.<com.google.gxp.compiler.servicedir.ServiceDirectory: com.google.gxp.compiler.base.Implementable getImplementable(com.google.gxp.compiler.base.TemplateName)>($r1);

        if $r4 != null goto label1;

        $r10 = r2.<com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r9 = new com.google.gxp.compiler.bind.ImplementableNotFoundError;

        specialinvoke $r9.<com.google.gxp.compiler.bind.ImplementableNotFoundError: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.TemplateName)>(r0, $r1);

        interfaceinvoke $r10.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r9);

        return null;

     label1:
        $r5 = r2.<com.google.gxp.compiler.bind.Binder$Visitor: java.util.Set requirements>;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r4);

        $r6 = new com.google.gxp.compiler.base.BoundImplementsDeclaration;

        $r7 = virtualinvoke r0.<com.google.gxp.compiler.base.UnboundImplementsDeclaration: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r8 = virtualinvoke r0.<com.google.gxp.compiler.base.UnboundImplementsDeclaration: java.lang.String getDisplayName()>();

        specialinvoke $r6.<com.google.gxp.compiler.base.BoundImplementsDeclaration: void <init>(com.google.gxp.compiler.base.Implementable,com.google.gxp.compiler.alerts.SourcePosition,java.lang.String)>($r4, $r7, $r8);

        return $r6;
    }

    public com.google.gxp.compiler.base.ImplementsDeclaration visitBoundImplementsDeclaration(com.google.gxp.compiler.base.BoundImplementsDeclaration)
    {
        com.google.gxp.compiler.base.BoundImplementsDeclaration r0;
        com.google.gxp.compiler.bind.Binder$Visitor r1;

        r1 := @this: com.google.gxp.compiler.bind.Binder$Visitor;

        r0 := @parameter0: com.google.gxp.compiler.base.BoundImplementsDeclaration;

        return r0;
    }

    public com.google.gxp.compiler.base.ImplementsDeclaration visitNativeImplementsDeclaration(com.google.gxp.compiler.base.NativeImplementsDeclaration)
    {
        com.google.gxp.compiler.bind.Binder$Visitor r1;
        com.google.gxp.compiler.base.NativeImplementsDeclaration r0;

        r1 := @this: com.google.gxp.compiler.bind.Binder$Visitor;

        r0 := @parameter0: com.google.gxp.compiler.base.NativeImplementsDeclaration;

        return r0;
    }

    public volatile java.lang.Object visitTemplate(com.google.gxp.compiler.base.Template)
    {
        com.google.gxp.compiler.bind.Binder$Visitor r0;
        com.google.gxp.compiler.base.Template r1, $r2;

        r0 := @this: com.google.gxp.compiler.bind.Binder$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.Template;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.base.Template visitTemplate(com.google.gxp.compiler.base.Template)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitCall(com.google.gxp.compiler.base.Call)
    {
        com.google.gxp.compiler.bind.Binder$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.Call r1;

        r0 := @this: com.google.gxp.compiler.bind.Binder$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.Call;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.base.Expression visitCall(com.google.gxp.compiler.base.Call)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitValidatedCall(com.google.gxp.compiler.base.ValidatedCall)
    {
        com.google.gxp.compiler.bind.Binder$Visitor r0;
        com.google.gxp.compiler.base.ValidatedCall r1;
        com.google.gxp.compiler.base.Expression $r2;

        r0 := @this: com.google.gxp.compiler.bind.Binder$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.ValidatedCall;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.base.Expression visitValidatedCall(com.google.gxp.compiler.base.ValidatedCall)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitBoundCall(com.google.gxp.compiler.base.BoundCall)
    {
        com.google.gxp.compiler.bind.Binder$Visitor r0;
        com.google.gxp.compiler.base.BoundCall r1;
        com.google.gxp.compiler.base.Expression $r2;

        r0 := @this: com.google.gxp.compiler.bind.Binder$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.BoundCall;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.base.Expression visitBoundCall(com.google.gxp.compiler.base.BoundCall)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitUnboundCall(com.google.gxp.compiler.base.UnboundCall)
    {
        com.google.gxp.compiler.bind.Binder$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.UnboundCall r1;

        r0 := @this: com.google.gxp.compiler.bind.Binder$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.UnboundCall;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.base.Expression visitUnboundCall(com.google.gxp.compiler.base.UnboundCall)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitNativeImplementsDeclaration(com.google.gxp.compiler.base.NativeImplementsDeclaration)
    {
        com.google.gxp.compiler.bind.Binder$Visitor r0;
        com.google.gxp.compiler.base.ImplementsDeclaration $r2;
        com.google.gxp.compiler.base.NativeImplementsDeclaration r1;

        r0 := @this: com.google.gxp.compiler.bind.Binder$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.NativeImplementsDeclaration;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.base.ImplementsDeclaration visitNativeImplementsDeclaration(com.google.gxp.compiler.base.NativeImplementsDeclaration)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitBoundImplementsDeclaration(com.google.gxp.compiler.base.BoundImplementsDeclaration)
    {
        com.google.gxp.compiler.bind.Binder$Visitor r0;
        com.google.gxp.compiler.base.BoundImplementsDeclaration r1;
        com.google.gxp.compiler.base.ImplementsDeclaration $r2;

        r0 := @this: com.google.gxp.compiler.bind.Binder$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.BoundImplementsDeclaration;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.base.ImplementsDeclaration visitBoundImplementsDeclaration(com.google.gxp.compiler.base.BoundImplementsDeclaration)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitUnboundImplementsDeclaration(com.google.gxp.compiler.base.UnboundImplementsDeclaration)
    {
        com.google.gxp.compiler.bind.Binder$Visitor r0;
        com.google.gxp.compiler.base.UnboundImplementsDeclaration r1;
        com.google.gxp.compiler.base.ImplementsDeclaration $r2;

        r0 := @this: com.google.gxp.compiler.bind.Binder$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.UnboundImplementsDeclaration;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.base.ImplementsDeclaration visitUnboundImplementsDeclaration(com.google.gxp.compiler.base.UnboundImplementsDeclaration)>(r1);

        return $r2;
    }

    static com.google.gxp.compiler.schema.SchemaFactory access$000(com.google.gxp.compiler.bind.Binder$Visitor)
    {
        com.google.gxp.compiler.bind.Binder$Visitor r0;
        com.google.gxp.compiler.schema.SchemaFactory $r1;

        r0 := @parameter0: com.google.gxp.compiler.bind.Binder$Visitor;

        $r1 = r0.<com.google.gxp.compiler.bind.Binder$Visitor: com.google.gxp.compiler.schema.SchemaFactory schemaFactory>;

        return $r1;
    }
}
