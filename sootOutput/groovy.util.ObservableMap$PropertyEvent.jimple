public abstract class groovy.util.ObservableMap$PropertyEvent extends java.beans.PropertyChangeEvent
{
    public static final int ADDED;
    public static final int UPDATED;
    public static final int REMOVED;
    public static final int CLEARED;
    public static final int MULTI;
    protected static final java.lang.Object OLDVALUE;
    protected static final java.lang.Object NEWVALUE;
    private int type;

    public void <init>(java.lang.Object, java.lang.String, java.lang.Object, java.lang.Object, int)
    {
        groovy.util.ObservableMap$PropertyEvent r0;
        int i0;
        java.lang.Object r1, r3, r4;
        java.lang.String r2;

        r0 := @this: groovy.util.ObservableMap$PropertyEvent;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        i0 := @parameter4: int;

        specialinvoke r0.<java.beans.PropertyChangeEvent: void <init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>(r1, r2, r3, r4);

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label1;
            default: goto label2;
        };

     label1:
        r0.<groovy.util.ObservableMap$PropertyEvent: int type> = i0;

        goto label3;

     label2:
        r0.<groovy.util.ObservableMap$PropertyEvent: int type> = 1;

     label3:
        return;
    }

    public int getType()
    {
        int $i0;
        groovy.util.ObservableMap$PropertyEvent r0;

        r0 := @this: groovy.util.ObservableMap$PropertyEvent;

        $i0 = r0.<groovy.util.ObservableMap$PropertyEvent: int type>;

        return $i0;
    }

    static void <clinit>()
    {
        java.lang.Object $r0, $r1;

        <groovy.util.ObservableMap$PropertyEvent: int MULTI> = 4;

        <groovy.util.ObservableMap$PropertyEvent: int CLEARED> = 3;

        <groovy.util.ObservableMap$PropertyEvent: int REMOVED> = 2;

        <groovy.util.ObservableMap$PropertyEvent: int UPDATED> = 1;

        <groovy.util.ObservableMap$PropertyEvent: int ADDED> = 0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <groovy.util.ObservableMap$PropertyEvent: java.lang.Object OLDVALUE> = $r0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <groovy.util.ObservableMap$PropertyEvent: java.lang.Object NEWVALUE> = $r1;

        return;
    }
}
