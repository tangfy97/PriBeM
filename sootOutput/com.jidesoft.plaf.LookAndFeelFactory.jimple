public class com.jidesoft.plaf.LookAndFeelFactory extends java.lang.Object implements com.jidesoft.utils.ProductNames
{
    public static final java.lang.String WINDOWS_CLASSIC_LNF;
    public static final java.lang.String WINDOWS_LNF;
    public static final java.lang.String METAL_LNF;
    public static final java.lang.String SYNTH_LNF;
    public static final java.lang.String AQUA_LNF;
    public static final java.lang.String AQUA_LNF_6;
    public static final java.lang.String QUAQUA_LNF;
    public static final java.lang.String ALLOY_LNF;
    public static final java.lang.String SYNTHETICA_LNF;
    public static final java.lang.String SYNTHETICA_LNF_PREFIX;
    public static final java.lang.String PLASTIC3D_LNF;
    public static final java.lang.String PLASTIC3D_LNF_1_3;
    public static final java.lang.String PLASTICXP_LNF;
    public static final java.lang.String TONIC_LNF;
    public static final java.lang.String A03_LNF;
    public static final java.lang.String PGS_LNF;
    public static final java.lang.String GTK_LNF;
    public static final java.lang.String MOTIF_LNF;
    public static final java.lang.String BIZ_LNF;
    public static final java.lang.String NIMBUS_LNF_NAME;
    public static final int VSNET_STYLE_WITHOUT_MENU;
    public static final int VSNET_STYLE;
    public static final int ECLIPSE_STYLE;
    public static final int OFFICE2003_STYLE;
    public static final int XERTO_STYLE;
    public static final int XERTO_STYLE_WITHOUT_MENU;
    public static final int ECLIPSE3X_STYLE;
    public static final int OFFICE2007_STYLE;
    public static final int EXTENSION_STYLE_VSNET_WITHOUT_MENU;
    public static final int EXTENSION_STYLE_VSNET;
    public static final int EXTENSION_STYLE_ECLIPSE;
    public static final int EXTENSION_STYLE_OFFICE2003;
    public static final int EXTENSION_STYLE_XERTO;
    public static final int EXTENSION_STYLE_ECLIPSE3X;
    public static final int EXTENSION_STYLE_XERTO_WITHOUT_MENU;
    public static final int EXTENSION_STYLE_OFFICE2007;
    public static final int EXTENSION_STYLE_OFFICE2003_WITHOUT_MENU;
    public static final int EXTENSION_STYLE_OFFICE2007_WITHOUT_MENU;
    public static final int EXTENSION_STYLE_ECLIPSE_WITHOUT_MENU;
    public static final int EXTENSION_STYLE_ECLIPSE3X_WITHOUT_MENU;
    private static int _style;
    private static int _defaultStyle;
    private static javax.swing.LookAndFeel _lookAndFeel;
    private static java.beans.PropertyChangeListener _listener;
    public static final java.lang.String JIDE_EXTENSION_INSTALLED;
    public static final java.lang.String JIDE_STYLE_INSTALLED;
    private static java.util.List _uiDefaultsCustomizers;
    private static java.util.List _uiDefaultsInitializers;
    private static java.util.Map _installedLookAndFeels;
    private static boolean _loadLookAndFeelClass;
    public static final java.lang.String LAF_INSTALLED;
    public static final java.lang.String LAF_NOT_INSTALLED;
    private static java.util.Map _defaultInitializers;
    private static java.util.Map _defaultCustomizers;
    private static int _productsUsed;

    protected void <init>()
    {
        com.jidesoft.plaf.LookAndFeelFactory r0;

        r0 := @this: com.jidesoft.plaf.LookAndFeelFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int getDefaultStyle()
    {
        byte b8, $b9, $b10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i12, $i14;
        java.lang.String $r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.UnsupportedOperationException $r3;
        javax.swing.LookAndFeel $r1, $r2;
        java.lang.NumberFormatException $r4;

        $i0 = <com.jidesoft.plaf.LookAndFeelFactory: int _defaultStyle>;

        $i12 = (int) -1;

        if $i0 != $i12 goto label15;

        $r0 = staticinvoke <com.jidesoft.utils.SecurityUtils: java.lang.String getProperty(java.lang.String,java.lang.String)>("jide.defaultStyle", "-1");

     label01:
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        <com.jidesoft.plaf.LookAndFeelFactory: int _defaultStyle> = $i2;

     label02:
        goto label04;

     label03:
        $r4 := @caughtexception;

     label04:
        $i3 = <com.jidesoft.plaf.LookAndFeelFactory: int _defaultStyle>;

        $i14 = (int) -1;

        if $i3 != $i14 goto label15;

     label05:
        $z0 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isWindowsVistaAbove()>();

        if $z0 == 0 goto label06;

        $r2 = staticinvoke <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>();

        $z2 = $r2 instanceof com.sun.java.swing.plaf.windows.WindowsLookAndFeel;

        if $z2 == 0 goto label06;

        $z3 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isJdk6Above()>();

        if $z3 == 0 goto label06;

        b8 = 7;

        goto label10;

     label06:
        $z4 = staticinvoke <com.jidesoft.plaf.XPUtils: boolean isXPStyleOn()>();

        if $z4 == 0 goto label07;

        $r1 = staticinvoke <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>();

        $z1 = $r1 instanceof com.sun.java.swing.plaf.windows.WindowsLookAndFeel;

        if $z1 == 0 goto label07;

        b8 = 3;

        goto label10;

     label07:
        $i4 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: int getProductsUsed()>();

        $i5 = $i4 & 16;

        if $i5 != 0 goto label08;

        $b9 = 0;

        goto label09;

     label08:
        $b9 = 1;

     label09:
        b8 = $b9;

     label10:
        goto label14;

     label11:
        $r3 := @caughtexception;

        $i6 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: int getProductsUsed()>();

        $i7 = $i6 & 16;

        if $i7 != 0 goto label12;

        $b10 = 0;

        goto label13;

     label12:
        $b10 = 1;

     label13:
        b8 = $b10;

     label14:
        return b8;

     label15:
        $i1 = <com.jidesoft.plaf.LookAndFeelFactory: int _defaultStyle>;

        return $i1;

        catch java.lang.NumberFormatException from label01 to label02 with label03;
        catch java.lang.UnsupportedOperationException from label05 to label10 with label11;
    }

    public static void setDefaultStyle(int)
    {
        int i0;

        i0 := @parameter0: int;

        <com.jidesoft.plaf.LookAndFeelFactory: int _defaultStyle> = i0;

        return;
    }

    public static void installJideExtension()
    {
        int $i0, $i1, $i3;

        $i0 = <com.jidesoft.plaf.LookAndFeelFactory: int _style>;

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $i1 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: int getDefaultStyle()>();

        goto label2;

     label1:
        $i1 = <com.jidesoft.plaf.LookAndFeelFactory: int _style>;

     label2:
        staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: void installJideExtension(int)>($i1);

        return;
    }

    public static void installJideExtension(int)
    {
        javax.swing.UIDefaults $r0;
        int i0;
        javax.swing.LookAndFeel $r1;

        i0 := @parameter0: int;

        $r0 = staticinvoke <javax.swing.UIManager: javax.swing.UIDefaults getLookAndFeelDefaults()>();

        $r1 = staticinvoke <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>();

        staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: void installJideExtension(javax.swing.UIDefaults,javax.swing.LookAndFeel,int)>($r0, $r1, i0);

        return;
    }

    public static boolean isJideExtensionInstalled()
    {
        boolean $z0;

        $z0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: boolean getBoolean(java.lang.Object)>("jidesoft.extensionInstalled");

        return $z0;
    }

    public static void installJideExtension(javax.swing.UIDefaults, javax.swing.LookAndFeel, int)
    {
        java.awt.Color $r27, $r28, $r29, $r30;
        java.lang.Integer $r3, $r26, $r40;
        javax.swing.border.Border $r42, $r44;
        com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsInitializer r59;
        java.lang.reflect.InvocationTargetException $r51;
        java.beans.PropertyChangeListener $r0, $r1, $r58;
        java.lang.ClassLoader $r60;
        javax.swing.plaf.BorderUIResource $r41, $r43;
        java.lang.Object[] $r64, $r67;
        javax.swing.ImageIcon $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39;
        java.lang.String $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r70;
        com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsInitializer[] $r5;
        java.lang.Class[] $r62, $r65;
        javax.swing.LookAndFeel r4, $r46;
        java.lang.RuntimeException $r48, $r50, $r53, $r55, $r57;
        com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsCustomizer[] $r71;
        java.lang.ClassNotFoundException $r56;
        java.lang.NoSuchMethodException $r49;
        java.lang.SecurityException $r47;
        com.jidesoft.plaf.basic.ThemePainter $r23, $r24;
        java.lang.reflect.Method $r63, $r66;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30;
        java.lang.IllegalAccessException $r54;
        javax.swing.UIDefaults r2;
        com.jidesoft.plaf.LookAndFeelFactory$2 $r25;
        com.jidesoft.plaf.LookAndFeelFactory$1 $r45;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, i8;
        java.lang.Boolean $r68;
        com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsCustomizer r22;
        java.lang.IllegalArgumentException $r52;
        java.lang.Class $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r61, $r69;

        r2 := @parameter0: javax.swing.UIDefaults;

        r4 := @parameter1: javax.swing.LookAndFeel;

        i0 := @parameter2: int;

        $z0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isJideExtensionInstalled()>();

        if $z0 == 0 goto label01;

        $i5 = <com.jidesoft.plaf.LookAndFeelFactory: int _style>;

        if $i5 != i0 goto label01;

        $r46 = <com.jidesoft.plaf.LookAndFeelFactory: javax.swing.LookAndFeel _lookAndFeel>;

        if $r46 != r4 goto label01;

        return;

     label01:
        staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: void workAroundSwingIssues()>();

        $r58 = <com.jidesoft.plaf.LookAndFeelFactory: java.beans.PropertyChangeListener _listener>;

        if $r58 != null goto label02;

        $r45 = new com.jidesoft.plaf.LookAndFeelFactory$1;

        specialinvoke $r45.<com.jidesoft.plaf.LookAndFeelFactory$1: void <init>()>();

        <com.jidesoft.plaf.LookAndFeelFactory: java.beans.PropertyChangeListener _listener> = $r45;

     label02:
        $r0 = <com.jidesoft.plaf.LookAndFeelFactory: java.beans.PropertyChangeListener _listener>;

        staticinvoke <javax.swing.UIManager: void removePropertyChangeListener(java.beans.PropertyChangeListener)>($r0);

        $r1 = <com.jidesoft.plaf.LookAndFeelFactory: java.beans.PropertyChangeListener _listener>;

        staticinvoke <javax.swing.UIManager: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r1);

        <com.jidesoft.plaf.LookAndFeelFactory: int _style> = i0;

        $i1 = <com.jidesoft.plaf.LookAndFeelFactory: int _style>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("jidesoft.extensionStyle", $r3);

        <com.jidesoft.plaf.LookAndFeelFactory: javax.swing.LookAndFeel _lookAndFeel> = r4;

        $r5 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsInitializer[] getUIDefaultsInitializers()>();

        $i4 = lengthof $r5;

        i6 = 0;

     label03:
        if i6 >= $i4 goto label05;

        r59 = $r5[i6];

        if r59 == null goto label04;

        interfaceinvoke r59.<com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsInitializer: void initialize(javax.swing.UIDefaults)>(r2);

     label04:
        i6 = i6 + 1;

        goto label03;

     label05:
        $r6 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: void initialize(java.lang.String,javax.swing.UIDefaults)>($r7, r2);

        $r8 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("com.incors.plaf.alloy.AlloyLookAndFeel");

        if $z1 == 0 goto label06;

        $z30 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isAlloyLnfInstalled()>();

        if $z30 != 0 goto label10;

     label06:
        $r10 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("com.jgoodies.looks.plastic.Plastic3DLookAndFeel");

        if $z2 == 0 goto label07;

        $z29 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isPlastic3DLnfInstalled()>();

        if $z29 != 0 goto label10;

     label07:
        $r12 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        $z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("com.jgoodies.looks.plastic.PlasticXPLookAndFeel");

        if $z3 == 0 goto label08;

        $z28 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isPlasticXPLnfInstalled()>();

        if $z28 != 0 goto label10;

     label08:
        $r14 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        $z4 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("com.pagosoft.plaf.PgsLookAndFeel");

        if $z4 == 0 goto label09;

        $z27 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isPgsLnfInstalled()>();

        if $z27 != 0 goto label10;

     label09:
        $r16 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        $z5 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("com.digitprop.tonic.TonicLookAndFeel");

        if $z5 == 0 goto label20;

        $z26 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isTonicLnfInstalled()>();

        if $z26 == 0 goto label20;

     label10:
        tableswitch(i0)
        {
            case 0: goto label13;
            case 1: goto label13;
            case 2: goto label14;
            case 3: goto label12;
            case 4: goto label16;
            case 5: goto label15;
            case 6: goto label16;
            case 7: goto label11;
            case 8: goto label12;
            case 9: goto label11;
            case 10: goto label14;
            case 11: goto label15;
            default: goto label17;
        };

     label11:
        staticinvoke <com.jidesoft.plaf.vsnet.VsnetWindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.office2003.Office2003WindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.office2007.Office2007WindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.office2007.Office2007WindowsUtils: void initClassDefaults(javax.swing.UIDefaults,boolean)>(r2, 0);

        goto label17;

     label12:
        staticinvoke <com.jidesoft.plaf.vsnet.VsnetWindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.office2003.Office2003WindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.office2003.Office2003WindowsUtils: void initClassDefaults(javax.swing.UIDefaults,boolean)>(r2, 0);

        goto label17;

     label13:
        staticinvoke <com.jidesoft.plaf.vsnet.VsnetMetalUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetMetalUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        $r25 = new com.jidesoft.plaf.LookAndFeelFactory$2;

        specialinvoke $r25.<com.jidesoft.plaf.LookAndFeelFactory$2: void <init>()>();

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("Gripper.painter", $r25);

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("JideTabbedPane.gripperPainter", $r25);

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("JideTabbedPane.defaultTabShape", $r26);

        $r27 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlText");

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("JideTabbedPane.selectedTabTextForeground", $r27);

        $r28 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlText");

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("JideTabbedPane.unselectedTabTextForeground", $r28);

        $r29 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlText");

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("JideTabbedPane.foreground", $r29);

        $r30 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("control");

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("JideTabbedPane.light", $r30);

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("JideSplitPaneDivider.gripperPainter", $r25);

        $i2 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: int getProductsUsed()>();

        $i3 = $i2 & 1;

        if $i3 == 0 goto label17;

        $r31 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.Class,java.lang.String)>(class "Lcom/jidesoft/plaf/vsnet/VsnetWindowsUtils;", "icons/title_buttons_windows.gif");

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("DockableFrameUI", "com.jidesoft.plaf.vsnet.VsnetDockableFrameUI");

        $r32 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r31, 0, 0, 10, 10);

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("DockableFrameTitlePane.hideIcon", $r32);

        $r33 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r31, 0, 10, 10, 10);

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("DockableFrameTitlePane.unfloatIcon", $r33);

        $r34 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r31, 0, 20, 10, 10);

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("DockableFrameTitlePane.floatIcon", $r34);

        $r35 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r31, 0, 30, 10, 10);

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("DockableFrameTitlePane.autohideIcon", $r35);

        $r36 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r31, 0, 40, 10, 10);

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("DockableFrameTitlePane.stopAutohideIcon", $r36);

        $r37 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r31, 0, 50, 10, 10);

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("DockableFrameTitlePane.hideAutohideIcon", $r37);

        $r38 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r31, 0, 60, 10, 10);

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("DockableFrameTitlePane.maximizeIcon", $r38);

        $r39 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r31, 0, 70, 10, 10);

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("DockableFrameTitlePane.restoreIcon", $r39);

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("DockableFrameTitlePane.buttonGap", $r40);

        $r41 = new javax.swing.plaf.BorderUIResource;

        $r42 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(1, 0, 2, 0);

        specialinvoke $r41.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r42);

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("DockableFrame.titleBorder", $r41);

        $r43 = new javax.swing.plaf.BorderUIResource;

        $r44 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(2, 0, 0, 0);

        specialinvoke $r43.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r44);

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("DockableFrame.border", $r43);

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("DockableFrameTitlePane.gripperPainter", $r25);

        goto label17;

     label14:
        staticinvoke <com.jidesoft.plaf.eclipse.EclipseMetalUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.eclipse.EclipseMetalUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        goto label17;

     label15:
        staticinvoke <com.jidesoft.plaf.eclipse.Eclipse3xMetalUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.eclipse.Eclipse3xMetalUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        goto label17;

     label16:
        staticinvoke <com.jidesoft.plaf.xerto.XertoMetalUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.xerto.XertoMetalUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

     label17:
        if i0 == 4 goto label18;

        if i0 != 6 goto label19;

     label18:
        $r23 = staticinvoke <com.jidesoft.plaf.xerto.XertoPainter: com.jidesoft.plaf.basic.ThemePainter getInstance()>();

        staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: void put(javax.swing.UIDefaults,java.lang.String,java.lang.Object)>(r2, "Theme.painter", $r23);

        goto label82;

     label19:
        $r24 = staticinvoke <com.jidesoft.plaf.basic.BasicPainter: com.jidesoft.plaf.basic.ThemePainter getInstance()>();

        staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: void put(javax.swing.UIDefaults,java.lang.String,java.lang.Object)>(r2, "Theme.painter", $r24);

        goto label82;

     label20:
        $r18 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.String getName()>();

        $r20 = class "Ljavax/swing/plaf/metal/MetalLookAndFeel;";

        $r21 = virtualinvoke $r20.<java.lang.Class: java.lang.String getName()>();

        $z6 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        if $z6 == 0 goto label27;

        tableswitch(i0)
        {
            case 0: goto label24;
            case 1: goto label21;
            case 2: goto label22;
            case 3: goto label21;
            case 4: goto label25;
            case 5: goto label23;
            case 6: goto label25;
            case 7: goto label21;
            case 8: goto label24;
            case 9: goto label24;
            default: goto label26;
        };

     label21:
        staticinvoke <com.jidesoft.plaf.vsnet.VsnetMetalUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetMetalUtils: void initClassDefaultsWithMenu(javax.swing.UIDefaults)>(r2);

        goto label82;

     label22:
        staticinvoke <com.jidesoft.plaf.eclipse.EclipseMetalUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.eclipse.EclipseMetalUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        goto label82;

     label23:
        staticinvoke <com.jidesoft.plaf.eclipse.Eclipse3xMetalUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.eclipse.Eclipse3xMetalUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        goto label82;

     label24:
        staticinvoke <com.jidesoft.plaf.vsnet.VsnetMetalUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetMetalUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        goto label82;

     label25:
        staticinvoke <com.jidesoft.plaf.xerto.XertoMetalUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.xerto.XertoMetalUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        goto label82;

     label26:
        goto label82;

     label27:
        $z7 = r4 instanceof javax.swing.plaf.metal.MetalLookAndFeel;

        if $z7 == 0 goto label33;

        tableswitch(i0)
        {
            case 0: goto label28;
            case 1: goto label28;
            case 2: goto label29;
            case 3: goto label28;
            case 4: goto label31;
            case 5: goto label30;
            case 6: goto label31;
            case 7: goto label28;
            case 8: goto label28;
            case 9: goto label28;
            case 10: goto label29;
            case 11: goto label30;
            default: goto label32;
        };

     label28:
        staticinvoke <com.jidesoft.plaf.vsnet.VsnetMetalUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetMetalUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        goto label32;

     label29:
        staticinvoke <com.jidesoft.plaf.eclipse.EclipseMetalUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.eclipse.EclipseMetalUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        goto label32;

     label30:
        staticinvoke <com.jidesoft.plaf.eclipse.Eclipse3xMetalUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.eclipse.Eclipse3xMetalUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        goto label32;

     label31:
        staticinvoke <com.jidesoft.plaf.xerto.XertoMetalUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.xerto.XertoMetalUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

     label32:
        goto label82;

     label33:
        $z8 = r4 instanceof com.sun.java.swing.plaf.windows.WindowsLookAndFeel;

        if $z8 == 0 goto label47;

        tableswitch(i0)
        {
            case 0: goto label43;
            case 1: goto label42;
            case 2: goto label38;
            case 3: goto label36;
            case 4: goto label44;
            case 5: goto label40;
            case 6: goto label45;
            case 7: goto label34;
            case 8: goto label37;
            case 9: goto label35;
            case 10: goto label39;
            case 11: goto label41;
            default: goto label46;
        };

     label34:
        staticinvoke <com.jidesoft.plaf.vsnet.VsnetWindowsUtils: void initComponentDefaultsWithMenu(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetWindowsUtils: void initClassDefaultsWithMenu(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.office2003.Office2003WindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.office2007.Office2007WindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.office2007.Office2007WindowsUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        goto label46;

     label35:
        staticinvoke <com.jidesoft.plaf.vsnet.VsnetWindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetWindowsUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.office2003.Office2003WindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.office2007.Office2007WindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.office2007.Office2007WindowsUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        goto label46;

     label36:
        staticinvoke <com.jidesoft.plaf.vsnet.VsnetWindowsUtils: void initComponentDefaultsWithMenu(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetWindowsUtils: void initClassDefaultsWithMenu(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.office2003.Office2003WindowsUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.office2003.Office2003WindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        goto label46;

     label37:
        staticinvoke <com.jidesoft.plaf.vsnet.VsnetWindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetWindowsUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.office2003.Office2003WindowsUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.office2003.Office2003WindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        goto label46;

     label38:
        staticinvoke <com.jidesoft.plaf.eclipse.EclipseWindowsUtils: void initClassDefaultsWithMenu(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.eclipse.EclipseWindowsUtils: void initComponentDefaultsWithMenu(javax.swing.UIDefaults)>(r2);

        goto label46;

     label39:
        staticinvoke <com.jidesoft.plaf.eclipse.EclipseWindowsUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.eclipse.EclipseWindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        goto label46;

     label40:
        staticinvoke <com.jidesoft.plaf.eclipse.Eclipse3xWindowsUtils: void initClassDefaultsWithMenu(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.eclipse.Eclipse3xWindowsUtils: void initComponentDefaultsWithMenu(javax.swing.UIDefaults)>(r2);

        goto label46;

     label41:
        staticinvoke <com.jidesoft.plaf.eclipse.Eclipse3xWindowsUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.eclipse.Eclipse3xWindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        goto label46;

     label42:
        staticinvoke <com.jidesoft.plaf.vsnet.VsnetWindowsUtils: void initComponentDefaultsWithMenu(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetWindowsUtils: void initClassDefaultsWithMenu(javax.swing.UIDefaults)>(r2);

        goto label46;

     label43:
        staticinvoke <com.jidesoft.plaf.vsnet.VsnetWindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetWindowsUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        goto label46;

     label44:
        staticinvoke <com.jidesoft.plaf.xerto.XertoWindowsUtils: void initComponentDefaultsWithMenu(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.xerto.XertoWindowsUtils: void initClassDefaultsWithMenu(javax.swing.UIDefaults)>(r2);

        goto label46;

     label45:
        staticinvoke <com.jidesoft.plaf.xerto.XertoWindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.xerto.XertoWindowsUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

     label46:
        goto label82;

     label47:
        $z9 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isAquaLnfInstalled()>();

        if $z9 == 0 goto label48;

        $z24 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isLnfInUse(java.lang.String)>("com.apple.laf.AquaLookAndFeel");

        if $z24 != 0 goto label49;

        $z25 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isLnfInUse(java.lang.String)>("apple.laf.AquaLookAndFeel");

        if $z25 != 0 goto label49;

     label48:
        $z10 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isQuaquaLnfInstalled()>();

        if $z10 == 0 goto label57;

        $z23 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isLnfInUse(java.lang.String)>("ch.randelshofer.quaqua.QuaquaLookAndFeel");

        if $z23 == 0 goto label57;

     label49:
        $r60 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: java.lang.ClassLoader getUIManagerClassLoader()>();

        $r61 = virtualinvoke $r60.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("com.jidesoft.plaf.aqua.AquaJideUtils");

        $r62 = newarray (java.lang.Class)[1];

        $r62[0] = class "Ljavax/swing/UIDefaults;";

        $r63 = virtualinvoke $r61.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("initComponentDefaults", $r62);

        $r64 = newarray (java.lang.Object)[1];

        $r64[0] = r2;

        virtualinvoke $r63.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r64);

        $r65 = newarray (java.lang.Class)[1];

        $r65[0] = class "Ljavax/swing/UIDefaults;";

        $r66 = virtualinvoke $r61.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("initClassDefaults", $r65);

        $r67 = newarray (java.lang.Object)[1];

        $r67[0] = r2;

        virtualinvoke $r66.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r67);

     label50:
        goto label82;

     label51:
        $r56 := @caughtexception;

        $r57 = new java.lang.RuntimeException;

        specialinvoke $r57.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r56);

        throw $r57;

     label52:
        $r54 := @caughtexception;

        $r55 = new java.lang.RuntimeException;

        specialinvoke $r55.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r54);

        throw $r55;

     label53:
        $r52 := @caughtexception;

        $r53 = new java.lang.RuntimeException;

        specialinvoke $r53.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r52);

        throw $r53;

     label54:
        $r51 := @caughtexception;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void throwInvocationTargetException(java.lang.reflect.InvocationTargetException)>($r51);

        goto label82;

     label55:
        $r49 := @caughtexception;

        $r50 = new java.lang.RuntimeException;

        specialinvoke $r50.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r49);

        throw $r50;

     label56:
        $r47 := @caughtexception;

        $r48 = new java.lang.RuntimeException;

        specialinvoke $r48.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r47);

        throw $r48;

     label57:
        tableswitch(i0)
        {
            case 0: goto label76;
            case 1: goto label74;
            case 2: goto label66;
            case 3: goto label62;
            case 4: goto label78;
            case 5: goto label70;
            case 6: goto label80;
            case 7: goto label58;
            case 8: goto label64;
            case 9: goto label60;
            case 10: goto label68;
            case 11: goto label72;
            default: goto label82;
        };

     label58:
        $z15 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isWindows()>();

        if $z15 == 0 goto label59;

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetWindowsUtils: void initComponentDefaultsWithMenu(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.office2003.Office2003WindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.office2007.Office2007WindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.office2007.Office2007WindowsUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        goto label82;

     label59:
        staticinvoke <com.jidesoft.plaf.vsnet.VsnetMetalUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetMetalUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        goto label82;

     label60:
        $z13 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isWindows()>();

        if $z13 == 0 goto label61;

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetWindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.office2003.Office2003WindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.office2007.Office2007WindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.office2007.Office2007WindowsUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        goto label82;

     label61:
        staticinvoke <com.jidesoft.plaf.vsnet.VsnetMetalUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetMetalUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        goto label82;

     label62:
        $z19 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isWindows()>();

        if $z19 == 0 goto label63;

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetWindowsUtils: void initComponentDefaultsWithMenu(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.office2003.Office2003WindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.office2003.Office2003WindowsUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        goto label82;

     label63:
        staticinvoke <com.jidesoft.plaf.vsnet.VsnetMetalUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetMetalUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        goto label82;

     label64:
        $z14 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isWindows()>();

        if $z14 == 0 goto label65;

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetWindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.office2003.Office2003WindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.office2003.Office2003WindowsUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        goto label82;

     label65:
        staticinvoke <com.jidesoft.plaf.vsnet.VsnetMetalUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetMetalUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        goto label82;

     label66:
        $z20 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isWindows()>();

        if $z20 == 0 goto label67;

        staticinvoke <com.jidesoft.plaf.eclipse.EclipseWindowsUtils: void initClassDefaultsWithMenu(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.eclipse.EclipseWindowsUtils: void initComponentDefaultsWithMenu(javax.swing.UIDefaults)>(r2);

        goto label82;

     label67:
        staticinvoke <com.jidesoft.plaf.eclipse.EclipseMetalUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.eclipse.EclipseMetalUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        goto label82;

     label68:
        $z12 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isWindows()>();

        if $z12 == 0 goto label69;

        staticinvoke <com.jidesoft.plaf.eclipse.EclipseWindowsUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.eclipse.EclipseWindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        goto label82;

     label69:
        staticinvoke <com.jidesoft.plaf.eclipse.EclipseMetalUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.eclipse.EclipseMetalUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        goto label82;

     label70:
        $z17 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isWindows()>();

        if $z17 == 0 goto label71;

        staticinvoke <com.jidesoft.plaf.eclipse.Eclipse3xWindowsUtils: void initClassDefaultsWithMenu(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.eclipse.Eclipse3xWindowsUtils: void initComponentDefaultsWithMenu(javax.swing.UIDefaults)>(r2);

        goto label82;

     label71:
        staticinvoke <com.jidesoft.plaf.eclipse.Eclipse3xMetalUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.eclipse.Eclipse3xMetalUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        goto label82;

     label72:
        $z11 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isWindows()>();

        if $z11 == 0 goto label73;

        staticinvoke <com.jidesoft.plaf.eclipse.Eclipse3xWindowsUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.eclipse.Eclipse3xWindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        goto label82;

     label73:
        staticinvoke <com.jidesoft.plaf.eclipse.Eclipse3xMetalUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.eclipse.Eclipse3xMetalUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        goto label82;

     label74:
        $z21 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isWindows()>();

        if $z21 == 0 goto label75;

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetWindowsUtils: void initClassDefaultsWithMenu(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetWindowsUtils: void initComponentDefaultsWithMenu(javax.swing.UIDefaults)>(r2);

        goto label82;

     label75:
        staticinvoke <com.jidesoft.plaf.vsnet.VsnetMetalUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetMetalUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        goto label82;

     label76:
        $z22 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isWindows()>();

        if $z22 == 0 goto label77;

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetWindowsUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetWindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        goto label82;

     label77:
        staticinvoke <com.jidesoft.plaf.vsnet.VsnetMetalUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetMetalUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        goto label82;

     label78:
        $z18 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isWindows()>();

        if $z18 == 0 goto label79;

        staticinvoke <com.jidesoft.plaf.xerto.XertoWindowsUtils: void initClassDefaultsWithMenu(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.xerto.XertoWindowsUtils: void initComponentDefaultsWithMenu(javax.swing.UIDefaults)>(r2);

        goto label82;

     label79:
        staticinvoke <com.jidesoft.plaf.xerto.XertoMetalUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.xerto.XertoMetalUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        goto label82;

     label80:
        $z16 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isWindows()>();

        if $z16 == 0 goto label81;

        staticinvoke <com.jidesoft.plaf.xerto.XertoWindowsUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.xerto.XertoWindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        goto label82;

     label81:
        staticinvoke <com.jidesoft.plaf.xerto.XertoMetalUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r2);

        staticinvoke <com.jidesoft.plaf.xerto.XertoMetalUtils: void initClassDefaults(javax.swing.UIDefaults)>(r2);

     label82:
        $r68 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("jidesoft.extensionInstalled", $r68);

        $r69 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r70 = virtualinvoke $r69.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: void customize(java.lang.String,javax.swing.UIDefaults)>($r70, r2);

        $r71 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsCustomizer[] getUIDefaultsCustomizers()>();

        $i7 = lengthof $r71;

        i8 = 0;

     label83:
        if i8 >= $i7 goto label85;

        r22 = $r71[i8];

        if r22 == null goto label84;

        interfaceinvoke r22.<com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsCustomizer: void customize(javax.swing.UIDefaults)>(r2);

     label84:
        i8 = i8 + 1;

        goto label83;

     label85:
        return;

        catch java.lang.ClassNotFoundException from label49 to label50 with label51;
        catch java.lang.IllegalAccessException from label49 to label50 with label52;
        catch java.lang.IllegalArgumentException from label49 to label50 with label53;
        catch java.lang.reflect.InvocationTargetException from label49 to label50 with label54;
        catch java.lang.NoSuchMethodException from label49 to label50 with label55;
        catch java.lang.SecurityException from label49 to label50 with label56;
    }

    private static void workAroundSwingIssues()
    {
        java.lang.Object[] $r1, r2, r5;
        int $i0, $i1, $i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18;
        java.lang.String $r4;
        boolean $z0, $z1;
        java.lang.Object $r0, r3;

        $r0 = staticinvoke <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>("PopupMenu.selectedWindowInputMapBindings.RightToLeft");

        $z0 = $r0 instanceof java.lang.Object[];

        if $z0 == 0 goto label4;

        $r1 = (java.lang.Object[]) $r0;

        r2 = (java.lang.Object[]) $r1;

        i3 = lengthof r2;

        i4 = 0;

     label1:
        if i4 >= i3 goto label3;

        r3 = r2[i4];

        $r4 = "DOWN";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label2;

        return;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $i0 = lengthof r2;

        $i1 = $i0 + 14;

        r5 = newarray (java.lang.Object)[$i1];

        $i2 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r5, 0, $i2);

        i5 = lengthof r2;

        i6 = i5 + 1;

        r5[i5] = "DOWN";

        i7 = i6 + 1;

        r5[i6] = "selectNext";

        i8 = i7 + 1;

        r5[i7] = "UP";

        i9 = i8 + 1;

        r5[i8] = "selectPrevious";

        i10 = i9 + 1;

        r5[i9] = "KP_DOWN";

        i11 = i10 + 1;

        r5[i10] = "selectNext";

        i12 = i11 + 1;

        r5[i11] = "KP_UP";

        i13 = i12 + 1;

        r5[i12] = "selectPrevious";

        i14 = i13 + 1;

        r5[i13] = "ENTER";

        i15 = i14 + 1;

        r5[i14] = "return";

        i16 = i15 + 1;

        r5[i15] = "SPACE";

        i17 = i16 + 1;

        r5[i16] = "return";

        i18 = i17 + 1;

        r5[i17] = "ESCAPE";

        r5[i18] = "cancel";

        staticinvoke <javax.swing.UIManager: java.lang.Object put(java.lang.Object,java.lang.Object)>("PopupMenu.selectedWindowInputMapBindings.RightToLeft", r5);

     label4:
        return;
    }

    public static void registerDefaultInitializer(java.lang.String, java.lang.String)
    {
        java.util.Map $r0, $r3;
        java.util.HashMap $r4;
        java.lang.String r1, r2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r0 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _defaultInitializers>;

        if $r0 != null goto label1;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _defaultInitializers> = $r4;

     label1:
        $r3 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _defaultInitializers>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public static void unregisterDefaultInitializer(java.lang.String)
    {
        java.lang.String r1;
        java.util.Map $r0, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _defaultInitializers>;

        if $r0 == null goto label1;

        $r2 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _defaultInitializers>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    public static void clearDefaultInitializers()
    {
        java.util.Map $r0, $r1;

        $r0 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _defaultInitializers>;

        if $r0 == null goto label1;

        $r1 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _defaultInitializers>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

     label1:
        return;
    }

    public static void registerDefaultCustomizer(java.lang.String, java.lang.String)
    {
        java.util.Map $r0, $r3;
        java.util.HashMap $r4;
        java.lang.String r1, r2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r0 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _defaultCustomizers>;

        if $r0 != null goto label1;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _defaultCustomizers> = $r4;

     label1:
        $r3 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _defaultCustomizers>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public static void unregisterDefaultCustomizer(java.lang.String)
    {
        java.lang.String r1;
        java.util.Map $r0, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _defaultCustomizers>;

        if $r0 == null goto label1;

        $r2 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _defaultCustomizers>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    public static void clearDefaultCustomizers()
    {
        java.util.Map $r0, $r1;

        $r0 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _defaultCustomizers>;

        if $r0 == null goto label1;

        $r1 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _defaultCustomizers>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

     label1:
        return;
    }

    private static void initialize(java.lang.String, javax.swing.UIDefaults)
    {
        java.util.Vector $r0, $r1;
        int $i0, $i1;
        java.lang.String $r2, $r6, $r9, $r12, $r13, $r14, $r15, r17, r19, r20;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r3, $r4;
        javax.swing.UIDefaults r7;
        java.lang.Object $r5, $r8;
        java.lang.Class $r10, $r11, r18;
        java.lang.ClassNotFoundException $r16;

        r17 := @parameter0: java.lang.String;

        r7 := @parameter1: javax.swing.UIDefaults;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        virtualinvoke $r1.<java.util.Vector: void insertElementAt(java.lang.Object,int)>(r17, 0);

        $r2 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String guessLookAndFeelName(java.lang.String)>(r17);

        if $r2 == null goto label01;

        $r15 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r15.<java.lang.String: int length()>();

        if $i1 <= 0 goto label01;

        virtualinvoke $r0.<java.util.Vector: void insertElementAt(java.lang.Object,int)>($r2, 0);

     label01:
        r18 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r17);

     label02:
        if r18 == null goto label04;

        $r10 = virtualinvoke r18.<java.lang.Class: java.lang.Class getSuperclass()>();

        if $r10 == null goto label04;

        $r11 = class "Ljavax/swing/LookAndFeel;";

        $z1 = virtualinvoke $r11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r10);

        if $z1 == 0 goto label04;

        $r12 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r1.<java.util.Vector: void insertElementAt(java.lang.Object,int)>($r12, 0);

        $r13 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String guessLookAndFeelName(java.lang.String)>($r12);

        if $r13 == null goto label03;

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r14.<java.lang.String: int length()>();

        if $i0 <= 0 goto label03;

        virtualinvoke $r0.<java.util.Vector: void insertElementAt(java.lang.Object,int)>($r13, 0);

     label03:
        r18 = $r10;

        goto label02;

     label04:
        goto label06;

     label05:
        $r16 := @caughtexception;

     label06:
        $r3 = virtualinvoke $r1.<java.util.Vector: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r8 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r19 = (java.lang.String) $r8;

        $r9 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String findDefaultInitializer(java.lang.String)>(r19);

        if $r9 == null goto label08;

        staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: void invokeInitialize(javax.swing.UIDefaults,java.lang.String)>(r7, $r9);

     label08:
        goto label07;

     label09:
        $r4 = virtualinvoke $r0.<java.util.Vector: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.lang.String) $r5;

        $r6 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String getDefaultInitializer(java.lang.String)>(r20);

        if $r6 == null goto label11;

        staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: void invokeInitialize(javax.swing.UIDefaults,java.lang.String)>(r7, $r6);

     label11:
        goto label10;

     label12:
        return;

        catch java.lang.ClassNotFoundException from label01 to label04 with label05;
    }

    private static void invokeInitialize(javax.swing.UIDefaults, java.lang.String)
    {
        java.lang.IllegalAccessException $r9;
        java.lang.Object[] $r6;
        java.lang.NoSuchMethodException $r12;
        javax.swing.UIDefaults r7;
        java.lang.Class[] $r4;
        java.lang.reflect.InvocationTargetException $r11;
        java.lang.InstantiationException $r10;
        java.lang.Class $r1, $r3;
        java.lang.Object $r2;
        java.lang.ClassNotFoundException $r8;
        java.lang.String r0;
        java.lang.reflect.Method $r5;

        r7 := @parameter0: javax.swing.UIDefaults;

        r0 := @parameter1: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object newInstance()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = newarray (java.lang.Class)[1];

        $r4[0] = class "Ljavax/swing/UIDefaults;";

        $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("initialize", $r4);

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r7;

        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r6);

     label2:
        goto label8;

     label3:
        $r12 := @caughtexception;

        virtualinvoke $r12.<java.lang.NoSuchMethodException: void printStackTrace()>();

        goto label8;

     label4:
        $r11 := @caughtexception;

        virtualinvoke $r11.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

        goto label8;

     label5:
        $r10 := @caughtexception;

        virtualinvoke $r10.<java.lang.InstantiationException: void printStackTrace()>();

        goto label8;

     label6:
        $r9 := @caughtexception;

        virtualinvoke $r9.<java.lang.IllegalAccessException: void printStackTrace()>();

        goto label8;

     label7:
        $r8 := @caughtexception;

     label8:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
        catch java.lang.InstantiationException from label1 to label2 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.ClassNotFoundException from label1 to label2 with label7;
    }

    private static java.lang.String getDefaultInitializer(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r6, $r7;
        java.lang.String r2, $r3, $r8;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("com.jidesoft.plaf.");

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initializer");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private static java.lang.String findDefaultInitializer(java.lang.String)
    {
        java.util.Map $r0, $r2;
        java.lang.Object $r3;
        java.lang.String r1, r4;

        r1 := @parameter0: java.lang.String;

        $r0 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _defaultInitializers>;

        if $r0 == null goto label1;

        $r2 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _defaultInitializers>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.String) $r3;

        if r4 == null goto label1;

        return r4;

     label1:
        return null;
    }

    private static void customize(java.lang.String, javax.swing.UIDefaults)
    {
        java.util.Vector $r0, $r1;
        int $i0, $i1;
        java.lang.String $r2, $r6, $r9, $r12, $r13, $r14, $r15, r17, r19, r20;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r3, $r4;
        javax.swing.UIDefaults r7;
        java.lang.Object $r5, $r8;
        java.lang.Class $r10, $r11, r18;
        java.lang.ClassNotFoundException $r16;

        r17 := @parameter0: java.lang.String;

        r7 := @parameter1: javax.swing.UIDefaults;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        virtualinvoke $r1.<java.util.Vector: void insertElementAt(java.lang.Object,int)>(r17, 0);

        $r2 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String guessLookAndFeelName(java.lang.String)>(r17);

        if $r2 == null goto label01;

        $r15 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r15.<java.lang.String: int length()>();

        if $i1 <= 0 goto label01;

        virtualinvoke $r0.<java.util.Vector: void insertElementAt(java.lang.Object,int)>($r2, 0);

     label01:
        r18 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r17);

     label02:
        if r18 == null goto label04;

        $r10 = virtualinvoke r18.<java.lang.Class: java.lang.Class getSuperclass()>();

        if $r10 == null goto label04;

        $r11 = class "Ljavax/swing/LookAndFeel;";

        $z1 = virtualinvoke $r11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r10);

        if $z1 == 0 goto label04;

        $r12 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r1.<java.util.Vector: void insertElementAt(java.lang.Object,int)>($r12, 0);

        $r13 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String guessLookAndFeelName(java.lang.String)>($r12);

        if $r13 == null goto label03;

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r14.<java.lang.String: int length()>();

        if $i0 <= 0 goto label03;

        virtualinvoke $r0.<java.util.Vector: void insertElementAt(java.lang.Object,int)>($r13, 0);

     label03:
        r18 = $r10;

        goto label02;

     label04:
        goto label06;

     label05:
        $r16 := @caughtexception;

     label06:
        $r3 = virtualinvoke $r1.<java.util.Vector: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r8 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r19 = (java.lang.String) $r8;

        $r9 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String findDefaultCustomizer(java.lang.String)>(r19);

        if $r9 == null goto label08;

        staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: void invokeCustomize(javax.swing.UIDefaults,java.lang.String)>(r7, $r9);

     label08:
        goto label07;

     label09:
        $r4 = virtualinvoke $r0.<java.util.Vector: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.lang.String) $r5;

        $r6 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String getDefaultCustomizer(java.lang.String)>(r20);

        if $r6 == null goto label11;

        staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: void invokeCustomize(javax.swing.UIDefaults,java.lang.String)>(r7, $r6);

     label11:
        goto label10;

     label12:
        return;

        catch java.lang.ClassNotFoundException from label01 to label04 with label05;
    }

    private static void invokeCustomize(javax.swing.UIDefaults, java.lang.String)
    {
        java.lang.IllegalAccessException $r9;
        java.lang.Object[] $r6;
        java.lang.NoSuchMethodException $r12;
        javax.swing.UIDefaults r7;
        java.lang.Class[] $r4;
        java.lang.reflect.InvocationTargetException $r11;
        java.lang.InstantiationException $r10;
        java.lang.Class $r1, $r3;
        java.lang.Object $r2;
        java.lang.ClassNotFoundException $r8;
        java.lang.String r0;
        java.lang.reflect.Method $r5;

        r7 := @parameter0: javax.swing.UIDefaults;

        r0 := @parameter1: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object newInstance()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = newarray (java.lang.Class)[1];

        $r4[0] = class "Ljavax/swing/UIDefaults;";

        $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("customize", $r4);

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r7;

        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r6);

     label2:
        goto label8;

     label3:
        $r12 := @caughtexception;

        virtualinvoke $r12.<java.lang.NoSuchMethodException: void printStackTrace()>();

        goto label8;

     label4:
        $r11 := @caughtexception;

        virtualinvoke $r11.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

        goto label8;

     label5:
        $r10 := @caughtexception;

        virtualinvoke $r10.<java.lang.InstantiationException: void printStackTrace()>();

        goto label8;

     label6:
        $r9 := @caughtexception;

        virtualinvoke $r9.<java.lang.IllegalAccessException: void printStackTrace()>();

        goto label8;

     label7:
        $r8 := @caughtexception;

     label8:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
        catch java.lang.InstantiationException from label1 to label2 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.ClassNotFoundException from label1 to label2 with label7;
    }

    private static java.lang.String getDefaultCustomizer(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r6, $r7;
        java.lang.String r2, $r3, $r8;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("com.jidesoft.plaf.");

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Customizer");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private static java.lang.String findDefaultCustomizer(java.lang.String)
    {
        java.util.Map $r0, $r2;
        java.lang.Object $r3;
        java.lang.String r1, r4;

        r1 := @parameter0: java.lang.String;

        $r0 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _defaultCustomizers>;

        if $r0 == null goto label1;

        $r2 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _defaultCustomizers>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.String) $r3;

        if r4 == null goto label1;

        return r4;

     label1:
        return null;
    }

    private static java.lang.String guessLookAndFeelName(java.lang.String)
    {
        int $i0, i1, $i2, $i3, $i4;
        java.lang.String r0, $r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        i1 = $i0 + 1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("LookAndFeel");

        if $z0 == 0 goto label1;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        $r1 = "LookAndFeel";

        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i4 = $i2 - $i3;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, $i4);

        return $r2;

     label1:
        return null;
    }

    public static boolean isLnfInstalled(java.lang.String)
    {
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.Class $r4;
        java.lang.String r0, r3, $r5;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _installedLookAndFeels>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (java.lang.String) $r2;

        if r3 == null goto label1;

        $r5 = "installed";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        return $z1;

     label1:
        $z0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isLoadLookAndFeelClass()>();

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: java.lang.Class loadLnfClass(java.lang.String)>(r0);

        if $r4 == null goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static java.lang.ClassLoader getUIManagerClassLoader()
    {
        java.lang.Object $r0;
        java.lang.Class $r1;
        java.lang.ClassLoader $r2, $r3, r4;
        boolean $z0;

        $r0 = staticinvoke <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>("ClassLoader");

        $z0 = $r0 instanceof java.lang.ClassLoader;

        if $z0 == 0 goto label1;

        $r3 = (java.lang.ClassLoader) $r0;

        return $r3;

     label1:
        $r1 = class "Lcom/jidesoft/plaf/LookAndFeelFactory;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r4 = $r2;

        if $r2 != null goto label2;

        r4 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

     label2:
        return r4;
    }

    public static boolean isLnfInUse(java.lang.String)
    {
        javax.swing.LookAndFeel $r2;
        java.util.Map $r1, $r4, $r6;
        java.lang.Class $r3;
        java.lang.Object $r5, $r7;
        java.lang.String r0, $r8;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _installedLookAndFeels>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r4 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _installedLookAndFeels>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        if $r5 == null goto label2;

        $r6 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _installedLookAndFeels>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r8 = (java.lang.String) $r7;

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("not installed");

        if $z2 != 0 goto label2;

     label1:
        $r2 = staticinvoke <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isAssignableFrom(java.lang.String,java.lang.Class)>(r0, $r3);

        if $z1 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public static void setLnfInstalled(java.lang.String, boolean)
    {
        java.util.Map $r1;
        java.lang.String r0, $r2;
        boolean z0;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _installedLookAndFeels>;

        if z0 == 0 goto label1;

        $r2 = "installed";

        goto label2;

     label1:
        $r2 = "not installed";

     label2:
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r2);

        return;
    }

    private static java.lang.Class loadLnfClass(java.lang.String)
    {
        java.util.HashMap $r3, $r6;
        java.util.Map $r4, $r7;
        java.lang.Class $r2;
        java.lang.ClassNotFoundException $r5;
        java.lang.ClassLoader $r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

     label1:
        $r0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: java.lang.ClassLoader getUIManagerClassLoader()>();

        $r2 = virtualinvoke $r0.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r1);

        $r3 = new java.util.HashMap;

        $r4 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _installedLookAndFeels>;

        specialinvoke $r3.<java.util.HashMap: void <init>(java.util.Map)>($r4);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, "installed");

        <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _installedLookAndFeels> = $r3;

     label2:
        return $r2;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.util.HashMap;

        $r7 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _installedLookAndFeels>;

        specialinvoke $r6.<java.util.HashMap: void <init>(java.util.Map)>($r7);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, "not installed");

        <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _installedLookAndFeels> = $r6;

        return null;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    private static boolean isAssignableFrom(java.lang.String, java.lang.Class)
    {
        java.lang.Class r1, $r3;
        java.lang.String r0, $r2;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: java.lang.Class loadLnfClass(java.lang.String)>(r0);

        if $r3 == null goto label2;

        $z1 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static boolean isAquaLnfInstalled()
    {
        boolean $z0, $z1, $z2;

        $z0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isLnfInstalled(java.lang.String)>("com.apple.laf.AquaLookAndFeel");

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isLnfInstalled(java.lang.String)>("apple.laf.AquaLookAndFeel");

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static boolean isQuaquaLnfInstalled()
    {
        boolean $z0;

        $z0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isLnfInstalled(java.lang.String)>("ch.randelshofer.quaqua.QuaquaLookAndFeel");

        return $z0;
    }

    public static boolean isAlloyLnfInstalled()
    {
        boolean $z0;

        $z0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isLnfInstalled(java.lang.String)>("com.incors.plaf.alloy.AlloyLookAndFeel");

        return $z0;
    }

    public static boolean isBizlafLnfInstalled()
    {
        boolean $z0;

        $z0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isLnfInstalled(java.lang.String)>("de.centigrade.bizlaf.BizLookAndFeel");

        return $z0;
    }

    public static boolean isGTKLnfInstalled()
    {
        boolean $z0;

        $z0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isLnfInstalled(java.lang.String)>("com.sun.java.swing.plaf.gtk.GTKLookAndFeel");

        return $z0;
    }

    public static boolean isPlastic3DLnfInstalled()
    {
        boolean $z0;

        $z0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isLnfInstalled(java.lang.String)>("com.jgoodies.looks.plastic.Plastic3DLookAndFeel");

        return $z0;
    }

    public static boolean isPlastic3D13LnfInstalled()
    {
        boolean $z0;

        $z0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isLnfInstalled(java.lang.String)>("com.jgoodies.looks.plastic.Plastic3DLookAndFeel");

        return $z0;
    }

    public static boolean isPlasticXPLnfInstalled()
    {
        boolean $z0;

        $z0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isLnfInstalled(java.lang.String)>("com.jgoodies.looks.plastic.PlasticXPLookAndFeel");

        return $z0;
    }

    public static boolean isTonicLnfInstalled()
    {
        boolean $z0;

        $z0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isLnfInstalled(java.lang.String)>("com.digitprop.tonic.TonicLookAndFeel");

        return $z0;
    }

    public static boolean isA03LnfInstalled()
    {
        boolean $z0;

        $z0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isLnfInstalled(java.lang.String)>("a03.swing.plaf.A03LookAndFeel");

        return $z0;
    }

    public static boolean isPgsLnfInstalled()
    {
        boolean $z0;

        $z0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isLnfInstalled(java.lang.String)>("com.pagosoft.plaf.PgsLookAndFeel");

        return $z0;
    }

    public static boolean isSyntheticaLnfInstalled()
    {
        boolean $z0;

        $z0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isLnfInstalled(java.lang.String)>("de.javasoft.plaf.synthetica.SyntheticaLookAndFeel");

        return $z0;
    }

    public static boolean isNimbusLnfInstalled()
    {
        int i0, $i1, i2, $i4;
        java.lang.String $r2;
        javax.swing.UIManager$LookAndFeelInfo[] $r0;
        javax.swing.UIManager$LookAndFeelInfo r1;

        $r0 = staticinvoke <javax.swing.UIManager: javax.swing.UIManager$LookAndFeelInfo[] getInstalledLookAndFeels()>();

        i0 = lengthof $r0;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        r1 = $r0[i2];

        $r2 = virtualinvoke r1.<javax.swing.UIManager$LookAndFeelInfo: java.lang.String getClassName()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>("NimbusLookAndFeel");

        $i4 = (int) -1;

        if $i1 == $i4 goto label2;

        return 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static void installDefaultLookAndFeelAndExtension()
    {
        staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: void installDefaultLookAndFeel()>();

        staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: void installJideExtension()>();

        return;
    }

    public static void installDefaultLookAndFeel()
    {
        java.lang.String $r0, $r1;
        java.lang.Exception $r2;

     label1:
        $r0 = staticinvoke <com.jidesoft.utils.SecurityUtils: java.lang.String getProperty(java.lang.String,java.lang.String)>("swing.defaultlaf", null);

        if $r0 != null goto label2;

        $r1 = staticinvoke <javax.swing.UIManager: java.lang.String getSystemLookAndFeelClassName()>();

        staticinvoke <javax.swing.UIManager: void setLookAndFeel(java.lang.String)>($r1);

        goto label3;

     label2:
        staticinvoke <javax.swing.UIManager: void setLookAndFeel(java.lang.String)>($r0);

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

     label5:
        return;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    public static javax.swing.LookAndFeel getLookAndFeel()
    {
        javax.swing.LookAndFeel $r0;

        $r0 = <com.jidesoft.plaf.LookAndFeelFactory: javax.swing.LookAndFeel _lookAndFeel>;

        return $r0;
    }

    public static int getStyle()
    {
        int $i0;

        $i0 = <com.jidesoft.plaf.LookAndFeelFactory: int _style>;

        return $i0;
    }

    public static com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsCustomizer[] getUIDefaultsCustomizers()
    {
        java.util.List $r0, $r1;
        java.lang.Object[] $r3;
        com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsCustomizer[] $r2, $r4;
        int $i0;

        $r1 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.List _uiDefaultsCustomizers>;

        $r0 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.List _uiDefaultsCustomizers>;

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r2 = newarray (com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsCustomizer)[$i0];

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r4 = (com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsCustomizer[]) $r3;

        return $r4;
    }

    public static void addUIDefaultsCustomizer(com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsCustomizer)
    {
        java.util.List $r1, $r2;
        com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsCustomizer r0;
        boolean $z0;

        r0 := @parameter0: com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsCustomizer;

        $r1 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.List _uiDefaultsCustomizers>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean contains(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $r2 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.List _uiDefaultsCustomizers>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r0);

     label1:
        return;
    }

    public static void removeUIDefaultsCustomizer(com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsCustomizer)
    {
        com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsCustomizer r0;
        java.util.List $r1;

        r0 := @parameter0: com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsCustomizer;

        $r1 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.List _uiDefaultsCustomizers>;

        interfaceinvoke $r1.<java.util.List: boolean remove(java.lang.Object)>(r0);

        return;
    }

    public static com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsInitializer[] getUIDefaultsInitializers()
    {
        java.util.List $r0, $r1;
        com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsInitializer[] $r2, $r4;
        java.lang.Object[] $r3;
        int $i0;

        $r1 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.List _uiDefaultsInitializers>;

        $r0 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.List _uiDefaultsInitializers>;

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r2 = newarray (com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsInitializer)[$i0];

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r4 = (com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsInitializer[]) $r3;

        return $r4;
    }

    public static void addUIDefaultsInitializer(com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsInitializer)
    {
        com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsInitializer r0;
        java.util.List $r1, $r2;
        boolean $z0;

        r0 := @parameter0: com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsInitializer;

        $r1 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.List _uiDefaultsInitializers>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean contains(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $r2 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.List _uiDefaultsInitializers>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r0);

     label1:
        return;
    }

    public static void removeUIDefaultsInitializer(com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsInitializer)
    {
        com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsInitializer r0;
        java.util.List $r1;

        r0 := @parameter0: com.jidesoft.plaf.LookAndFeelFactory$UIDefaultsInitializer;

        $r1 = <com.jidesoft.plaf.LookAndFeelFactory: java.util.List _uiDefaultsInitializers>;

        interfaceinvoke $r1.<java.util.List: boolean remove(java.lang.Object)>(r0);

        return;
    }

    public static void verifyDefaults(javax.swing.UIDefaults, java.lang.Object[])
    {
        java.lang.Object[] r0;
        int i0, $i1, i2;
        java.lang.String $r12, $r19;
        java.io.PrintStream $r6, $r14;
        javax.swing.UIDefaults r2;
        java.lang.Object r1, $r3, $r4, $r8, $r16;
        java.lang.StringBuilder $r5, $r7, $r9, $r10, $r11, $r13, $r15, $r17, $r18;

        r2 := @parameter0: javax.swing.UIDefaults;

        r0 := @parameter1: java.lang.Object[];

        i2 = 0;

        i0 = lengthof r0;

     label1:
        if i2 >= i0 goto label4;

        $i1 = i2 + 1;

        r1 = r0[$i1];

        if r1 != null goto label2;

        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The value for ");

        $r16 = r0[i2];

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is null");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r19);

        goto label3;

     label2:
        $r3 = r0[i2];

        $r4 = virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object get(java.lang.Object)>($r3);

        if $r4 == null goto label3;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The value for ");

        $r8 = r0[i2];

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exists which is ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r12);

     label3:
        i2 = i2 + 2;

        goto label1;

     label4:
        return;
    }

    public static void putDefaults(javax.swing.UIDefaults, java.lang.Object[])
    {
        java.lang.Object[] r0;
        javax.swing.UIDefaults r2;
        int i0, $i1, i2;
        java.lang.Object r1, $r3, $r4, $r5, $r6;

        r2 := @parameter0: javax.swing.UIDefaults;

        r0 := @parameter1: java.lang.Object[];

        i2 = 0;

        i0 = lengthof r0;

     label1:
        if i2 >= i0 goto label4;

        $i1 = i2 + 1;

        r1 = r0[$i1];

        if r1 != null goto label2;

        $r6 = r0[i2];

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object remove(java.lang.Object)>($r6);

        goto label3;

     label2:
        $r3 = r0[i2];

        $r4 = virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object get(java.lang.Object)>($r3);

        if $r4 != null goto label3;

        $r5 = r0[i2];

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r1);

     label3:
        i2 = i2 + 2;

        goto label1;

     label4:
        return;
    }

    public static void overwriteDefaults(javax.swing.UIDefaults, java.lang.Object[])
    {
        java.lang.Object[] r0;
        javax.swing.UIDefaults r2;
        int i0, $i1, i2;
        java.lang.Object r1, $r3, $r4;

        r2 := @parameter0: javax.swing.UIDefaults;

        r0 := @parameter1: java.lang.Object[];

        i2 = 0;

        i0 = lengthof r0;

     label1:
        if i2 >= i0 goto label4;

        $i1 = i2 + 1;

        r1 = r0[$i1];

        if r1 != null goto label2;

        $r4 = r0[i2];

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object remove(java.lang.Object)>($r4);

        goto label3;

     label2:
        $r3 = r0[i2];

        virtualinvoke r2.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);

     label3:
        i2 = i2 + 2;

        goto label1;

     label4:
        return;
    }

    public static int getProductsUsed()
    {
        java.lang.Throwable $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i27, $i29;

        $i0 = <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed>;

        $i27 = (int) -1;

        if $i0 != $i27 goto label37;

        <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed> = 0;

     label01:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.jidesoft.docking.Product");

        $i1 = <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed>;

        $i2 = $i1 | 1;

        <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed> = $i2;

     label02:
        goto label04;

     label03:
        $r11 := @caughtexception;

     label04:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.jidesoft.action.Product");

        $i3 = <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed>;

        $i4 = $i3 | 16;

        <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed> = $i4;

     label05:
        goto label07;

     label06:
        $r10 := @caughtexception;

     label07:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.jidesoft.document.Product");

        $i5 = <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed>;

        $i6 = $i5 | 2;

        <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed> = $i6;

     label08:
        goto label10;

     label09:
        $r9 := @caughtexception;

     label10:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.jidesoft.grid.Product");

        $i7 = <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed>;

        $i8 = $i7 | 4;

        <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed> = $i8;

     label11:
        goto label13;

     label12:
        $r8 := @caughtexception;

     label13:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.jidesoft.wizard.Product");

        $i9 = <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed>;

        $i10 = $i9 | 8;

        <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed> = $i10;

     label14:
        goto label16;

     label15:
        $r7 := @caughtexception;

     label16:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.jidesoft.pivot.Product");

        $i11 = <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed>;

        $i12 = $i11 | 32;

        <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed> = $i12;

     label17:
        goto label19;

     label18:
        $r6 := @caughtexception;

     label19:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.jidesoft.shortcut.Product");

        $i13 = <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed>;

        $i14 = $i13 | 64;

        <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed> = $i14;

     label20:
        goto label22;

     label21:
        $r5 := @caughtexception;

     label22:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.jidesoft.editor.Product");

        $i15 = <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed>;

        $i16 = $i15 | 128;

        <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed> = $i16;

     label23:
        goto label25;

     label24:
        $r4 := @caughtexception;

     label25:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.jidesoft.rss.Product");

        $i17 = <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed>;

        $i18 = $i17 | 256;

        <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed> = $i18;

     label26:
        goto label28;

     label27:
        $r3 := @caughtexception;

     label28:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.jidesoft.treemap.Product");

        $i19 = <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed>;

        $i29 = (int) 32768;

        $i20 = $i19 | $i29;

        <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed> = $i20;

     label29:
        goto label31;

     label30:
        $r2 := @caughtexception;

     label31:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.jidesoft.chart.Product");

        $i21 = <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed>;

        $i22 = $i21 | 4096;

        <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed> = $i22;

     label32:
        goto label34;

     label33:
        $r1 := @caughtexception;

     label34:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.jidesoft.diff.Product");

        $i23 = <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed>;

        $i24 = $i23 | 16384;

        <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed> = $i24;

     label35:
        goto label37;

     label36:
        $r0 := @caughtexception;

     label37:
        $i25 = <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed>;

        return $i25;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label28 to label29 with label30;
        catch java.lang.Throwable from label31 to label32 with label33;
        catch java.lang.Throwable from label34 to label35 with label36;
    }

    public static void setProductsUsed(int)
    {
        int i0;

        i0 := @parameter0: int;

        <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed> = i0;

        return;
    }

    public static boolean isCurrentLnfDecorated()
    {
        boolean $z0, $z1, $z2;

        $z0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isLnfInstalled(java.lang.String)>("de.javasoft.plaf.synthetica.SyntheticaLookAndFeel");

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isLnfInUse(java.lang.String)>("de.javasoft.plaf.synthetica.SyntheticaLookAndFeel");

        if $z1 != 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static boolean isLoadLookAndFeelClass()
    {
        boolean $z0;

        $z0 = <com.jidesoft.plaf.LookAndFeelFactory: boolean _loadLookAndFeelClass>;

        return $z0;
    }

    public static void setLoadLookAndFeelClass(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <com.jidesoft.plaf.LookAndFeelFactory: boolean _loadLookAndFeelClass> = z0;

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        return;
    }

    static int access$002(int)
    {
        int i0;

        i0 := @parameter0: int;

        <com.jidesoft.plaf.LookAndFeelFactory: int _style> = i0;

        return i0;
    }

    static void <clinit>()
    {
        java.util.Vector $r3, $r4;
        int $i1, $i3, $i5;
        java.util.HashMap $r5;

        <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String LAF_NOT_INSTALLED> = "not installed";

        <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String LAF_INSTALLED> = "installed";

        <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String JIDE_STYLE_INSTALLED> = "jidesoft.extensionStyle";

        <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String JIDE_EXTENSION_INSTALLED> = "jidesoft.extensionInstalled";

        <com.jidesoft.plaf.LookAndFeelFactory: int EXTENSION_STYLE_ECLIPSE3X_WITHOUT_MENU> = 11;

        <com.jidesoft.plaf.LookAndFeelFactory: int EXTENSION_STYLE_ECLIPSE_WITHOUT_MENU> = 10;

        <com.jidesoft.plaf.LookAndFeelFactory: int EXTENSION_STYLE_OFFICE2007_WITHOUT_MENU> = 9;

        <com.jidesoft.plaf.LookAndFeelFactory: int EXTENSION_STYLE_OFFICE2003_WITHOUT_MENU> = 8;

        <com.jidesoft.plaf.LookAndFeelFactory: int EXTENSION_STYLE_OFFICE2007> = 7;

        <com.jidesoft.plaf.LookAndFeelFactory: int EXTENSION_STYLE_XERTO_WITHOUT_MENU> = 6;

        <com.jidesoft.plaf.LookAndFeelFactory: int EXTENSION_STYLE_ECLIPSE3X> = 5;

        <com.jidesoft.plaf.LookAndFeelFactory: int EXTENSION_STYLE_XERTO> = 4;

        <com.jidesoft.plaf.LookAndFeelFactory: int EXTENSION_STYLE_OFFICE2003> = 3;

        <com.jidesoft.plaf.LookAndFeelFactory: int EXTENSION_STYLE_ECLIPSE> = 2;

        <com.jidesoft.plaf.LookAndFeelFactory: int EXTENSION_STYLE_VSNET> = 1;

        <com.jidesoft.plaf.LookAndFeelFactory: int EXTENSION_STYLE_VSNET_WITHOUT_MENU> = 0;

        <com.jidesoft.plaf.LookAndFeelFactory: int OFFICE2007_STYLE> = 7;

        <com.jidesoft.plaf.LookAndFeelFactory: int ECLIPSE3X_STYLE> = 5;

        <com.jidesoft.plaf.LookAndFeelFactory: int XERTO_STYLE_WITHOUT_MENU> = 6;

        <com.jidesoft.plaf.LookAndFeelFactory: int XERTO_STYLE> = 4;

        <com.jidesoft.plaf.LookAndFeelFactory: int OFFICE2003_STYLE> = 3;

        <com.jidesoft.plaf.LookAndFeelFactory: int ECLIPSE_STYLE> = 2;

        <com.jidesoft.plaf.LookAndFeelFactory: int VSNET_STYLE> = 1;

        <com.jidesoft.plaf.LookAndFeelFactory: int VSNET_STYLE_WITHOUT_MENU> = 0;

        <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String NIMBUS_LNF_NAME> = "NimbusLookAndFeel";

        <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String BIZ_LNF> = "de.centigrade.bizlaf.BizLookAndFeel";

        <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String MOTIF_LNF> = "com.sun.java.swing.plaf.motif.MotifLookAndFeel";

        <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String GTK_LNF> = "com.sun.java.swing.plaf.gtk.GTKLookAndFeel";

        <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String PGS_LNF> = "com.pagosoft.plaf.PgsLookAndFeel";

        <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String A03_LNF> = "a03.swing.plaf.A03LookAndFeel";

        <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String TONIC_LNF> = "com.digitprop.tonic.TonicLookAndFeel";

        <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String PLASTICXP_LNF> = "com.jgoodies.looks.plastic.PlasticXPLookAndFeel";

        <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String PLASTIC3D_LNF_1_3> = "com.jgoodies.looks.plastic.Plastic3DLookAndFeel";

        <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String PLASTIC3D_LNF> = "com.jgoodies.looks.plastic.Plastic3DLookAndFeel";

        <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String SYNTHETICA_LNF_PREFIX> = "de.javasoft.plaf.synthetica.Synthetica";

        <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String SYNTHETICA_LNF> = "de.javasoft.plaf.synthetica.SyntheticaLookAndFeel";

        <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String ALLOY_LNF> = "com.incors.plaf.alloy.AlloyLookAndFeel";

        <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String QUAQUA_LNF> = "ch.randelshofer.quaqua.QuaquaLookAndFeel";

        <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String AQUA_LNF_6> = "com.apple.laf.AquaLookAndFeel";

        <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String AQUA_LNF> = "apple.laf.AquaLookAndFeel";

        <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String SYNTH_LNF> = "javax.swing.plaf.synth.SynthLookAndFeel";

        <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String METAL_LNF> = "javax.swing.plaf.metal.MetalLookAndFeel";

        <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String WINDOWS_LNF> = "com.sun.java.swing.plaf.windows.WindowsLookAndFeel";

        <com.jidesoft.plaf.LookAndFeelFactory: java.lang.String WINDOWS_CLASSIC_LNF> = "com.sun.java.swing.plaf.windows.WindowsClassicLookAndFeel";

        $i1 = (int) -1;

        <com.jidesoft.plaf.LookAndFeelFactory: int _style> = $i1;

        $i3 = (int) -1;

        <com.jidesoft.plaf.LookAndFeelFactory: int _defaultStyle> = $i3;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        <com.jidesoft.plaf.LookAndFeelFactory: java.util.List _uiDefaultsCustomizers> = $r3;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        <com.jidesoft.plaf.LookAndFeelFactory: java.util.List _uiDefaultsInitializers> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        <com.jidesoft.plaf.LookAndFeelFactory: java.util.Map _installedLookAndFeels> = $r5;

        <com.jidesoft.plaf.LookAndFeelFactory: boolean _loadLookAndFeelClass> = 1;

        $i5 = (int) -1;

        <com.jidesoft.plaf.LookAndFeelFactory: int _productsUsed> = $i5;

        return;
    }
}
