final class org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector extends org.apache.lucene.search.TermCollectingRewrite$TermCollector
{
    final org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart array;
    final org.apache.lucene.util.BytesRefHash terms;
    org.apache.lucene.index.TermsEnum termsEnum;
    private org.apache.lucene.search.BoostAttribute boostAtt;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.search.ScoringRewrite this$0;

    void <init>(org.apache.lucene.search.ScoringRewrite)
    {
        org.apache.lucene.search.ScoringRewrite r1;
        org.apache.lucene.util.ByteBlockPool$DirectAllocator $r5;
        org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart $r2, $r6;
        org.apache.lucene.util.BytesRefHash $r3;
        org.apache.lucene.util.ByteBlockPool $r4;
        org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector r0;

        r0 := @this: org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector;

        r1 := @parameter0: org.apache.lucene.search.ScoringRewrite;

        r0.<org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: org.apache.lucene.search.ScoringRewrite this$0> = r1;

        specialinvoke r0.<org.apache.lucene.search.TermCollectingRewrite$TermCollector: void <init>()>();

        $r2 = new org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart;

        specialinvoke $r2.<org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart: void <init>(int)>(16);

        r0.<org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart array> = $r2;

        $r3 = new org.apache.lucene.util.BytesRefHash;

        $r4 = new org.apache.lucene.util.ByteBlockPool;

        $r5 = new org.apache.lucene.util.ByteBlockPool$DirectAllocator;

        specialinvoke $r5.<org.apache.lucene.util.ByteBlockPool$DirectAllocator: void <init>()>();

        specialinvoke $r4.<org.apache.lucene.util.ByteBlockPool: void <init>(org.apache.lucene.util.ByteBlockPool$Allocator)>($r5);

        $r6 = r0.<org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart array>;

        specialinvoke $r3.<org.apache.lucene.util.BytesRefHash: void <init>(org.apache.lucene.util.ByteBlockPool,int,org.apache.lucene.util.BytesRefHash$BytesStartArray)>($r4, 16, $r6);

        r0.<org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: org.apache.lucene.util.BytesRefHash terms> = $r3;

        return;
    }

    public void setNextEnum(org.apache.lucene.index.TermsEnum)
    {
        org.apache.lucene.index.TermsEnum r1;
        org.apache.lucene.search.BoostAttribute $r4;
        org.apache.lucene.util.AttributeSource $r2;
        org.apache.lucene.util.Attribute $r3;
        org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector r0;

        r0 := @this: org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector;

        r1 := @parameter0: org.apache.lucene.index.TermsEnum;

        r0.<org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: org.apache.lucene.index.TermsEnum termsEnum> = r1;

        $r2 = virtualinvoke r1.<org.apache.lucene.index.TermsEnum: org.apache.lucene.util.AttributeSource attributes()>();

        $r3 = virtualinvoke $r2.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/search/BoostAttribute;");

        $r4 = (org.apache.lucene.search.BoostAttribute) $r3;

        r0.<org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: org.apache.lucene.search.BoostAttribute boostAtt> = $r4;

        return;
    }

    public boolean collect(org.apache.lucene.util.BytesRef) throws java.io.IOException
    {
        org.apache.lucene.util.BytesRefHash $r2, $r15;
        org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector r0;
        byte $b10;
        org.apache.lucene.index.TermsEnum $r3, $r11, $r14, $r20, $r22;
        boolean $z0, $z1;
        org.apache.lucene.search.ScoringRewrite $r16;
        org.apache.lucene.util.BytesRef r1;
        float $f0, $f1, $f2;
        org.apache.lucene.search.BoostAttribute $r6, $r25;
        float[] $r7, $r24;
        long $l3, $l9;
        java.lang.AssertionError $r26, $r27;
        int $i0, $i1, $i2, $i4, $i5, i6, $i7, $i8;
        org.apache.lucene.index.TermState $r4;
        org.apache.lucene.index.TermContext $r9, $r21;
        org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart $r5, $r8, $r17, $r23;
        org.apache.lucene.index.TermContext[] $r12, $r18;
        org.apache.lucene.index.AtomicReaderContext $r10, $r19;
        org.apache.lucene.index.IndexReaderContext $r13;

        r0 := @this: org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector;

        r1 := @parameter0: org.apache.lucene.util.BytesRef;

        $r2 = r0.<org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: org.apache.lucene.util.BytesRefHash terms>;

        $i0 = virtualinvoke $r2.<org.apache.lucene.util.BytesRefHash: int add(org.apache.lucene.util.BytesRef)>(r1);

        $r3 = r0.<org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: org.apache.lucene.index.TermsEnum termsEnum>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.TermState termState()>();

        $z0 = <org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if $r4 != null goto label1;

        $r27 = new java.lang.AssertionError;

        specialinvoke $r27.<java.lang.AssertionError: void <init>()>();

        throw $r27;

     label1:
        if $i0 >= 0 goto label3;

        $i5 = neg $i0;

        i6 = $i5 - 1;

        $r17 = r0.<org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart array>;

        $r18 = $r17.<org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart: org.apache.lucene.index.TermContext[] termState>;

        $r21 = $r18[i6];

        $r19 = r0.<org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: org.apache.lucene.index.AtomicReaderContext readerContext>;

        $i7 = $r19.<org.apache.lucene.index.AtomicReaderContext: int ord>;

        $r20 = r0.<org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: org.apache.lucene.index.TermsEnum termsEnum>;

        $i8 = virtualinvoke $r20.<org.apache.lucene.index.TermsEnum: int docFreq()>();

        $r22 = r0.<org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: org.apache.lucene.index.TermsEnum termsEnum>;

        $l9 = virtualinvoke $r22.<org.apache.lucene.index.TermsEnum: long totalTermFreq()>();

        virtualinvoke $r21.<org.apache.lucene.index.TermContext: void register(org.apache.lucene.index.TermState,int,int,long)>($r4, $i7, $i8, $l9);

        $z1 = <org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r23 = r0.<org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart array>;

        $r24 = $r23.<org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart: float[] boost>;

        $f1 = $r24[i6];

        $r25 = r0.<org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: org.apache.lucene.search.BoostAttribute boostAtt>;

        $f2 = interfaceinvoke $r25.<org.apache.lucene.search.BoostAttribute: float getBoost()>();

        $b10 = $f1 cmpl $f2;

        if $b10 == 0 goto label2;

        $r26 = new java.lang.AssertionError;

        specialinvoke $r26.<java.lang.AssertionError: void <init>(java.lang.Object)>("boost should be equal in all segment TermsEnums");

        throw $r26;

     label2:
        goto label4;

     label3:
        $r5 = r0.<org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart array>;

        $r7 = $r5.<org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart: float[] boost>;

        $r6 = r0.<org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: org.apache.lucene.search.BoostAttribute boostAtt>;

        $f0 = interfaceinvoke $r6.<org.apache.lucene.search.BoostAttribute: float getBoost()>();

        $r7[$i0] = $f0;

        $r8 = r0.<org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart array>;

        $r12 = $r8.<org.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart: org.apache.lucene.index.TermContext[] termState>;

        $r9 = new org.apache.lucene.index.TermContext;

        $r13 = r0.<org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: org.apache.lucene.index.IndexReaderContext topReaderContext>;

        $r10 = r0.<org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: org.apache.lucene.index.AtomicReaderContext readerContext>;

        $i1 = $r10.<org.apache.lucene.index.AtomicReaderContext: int ord>;

        $r11 = r0.<org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: org.apache.lucene.index.TermsEnum termsEnum>;

        $i2 = virtualinvoke $r11.<org.apache.lucene.index.TermsEnum: int docFreq()>();

        $r14 = r0.<org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: org.apache.lucene.index.TermsEnum termsEnum>;

        $l3 = virtualinvoke $r14.<org.apache.lucene.index.TermsEnum: long totalTermFreq()>();

        specialinvoke $r9.<org.apache.lucene.index.TermContext: void <init>(org.apache.lucene.index.IndexReaderContext,org.apache.lucene.index.TermState,int,int,long)>($r13, $r4, $i1, $i2, $l3);

        $r12[$i0] = $r9;

        $r16 = r0.<org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: org.apache.lucene.search.ScoringRewrite this$0>;

        $r15 = r0.<org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: org.apache.lucene.util.BytesRefHash terms>;

        $i4 = virtualinvoke $r15.<org.apache.lucene.util.BytesRefHash: int size()>();

        virtualinvoke $r16.<org.apache.lucene.search.ScoringRewrite: void checkMaxClauseCount(int)>($i4);

     label4:
        return 1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/search/ScoringRewrite;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector: boolean $assertionsDisabled> = $z1;

        return;
    }
}
