class org.eclipse.jetty.io.nio.SelectChannelEndPoint$2 extends java.lang.Object implements java.lang.Runnable
{
    final long val$idleForMs;
    final org.eclipse.jetty.io.nio.SelectChannelEndPoint this$0;

    void <init>(org.eclipse.jetty.io.nio.SelectChannelEndPoint, long)
    {
        org.eclipse.jetty.io.nio.SelectChannelEndPoint$2 r0;
        long l0;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint r1;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint$2;

        r1 := @parameter0: org.eclipse.jetty.io.nio.SelectChannelEndPoint;

        l0 := @parameter1: long;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint$2: org.eclipse.jetty.io.nio.SelectChannelEndPoint this$0> = r1;

        r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint$2: long val$idleForMs> = l0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        java.lang.Throwable $r3;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint$2 r0;
        long $l0;
        org.eclipse.jetty.io.nio.SelectChannelEndPoint $r1, $r2, $r4;

        r0 := @this: org.eclipse.jetty.io.nio.SelectChannelEndPoint$2;

     label1:
        $r1 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint$2: org.eclipse.jetty.io.nio.SelectChannelEndPoint this$0>;

        $l0 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint$2: long val$idleForMs>;

        virtualinvoke $r1.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void onIdleExpired(long)>($l0);

     label2:
        $r2 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint$2: org.eclipse.jetty.io.nio.SelectChannelEndPoint this$0>;

        virtualinvoke $r2.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void setCheckForIdle(boolean)>(1);

        goto label5;

     label3:
        $r3 := @caughtexception;

     label4:
        $r4 = r0.<org.eclipse.jetty.io.nio.SelectChannelEndPoint$2: org.eclipse.jetty.io.nio.SelectChannelEndPoint this$0>;

        virtualinvoke $r4.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void setCheckForIdle(boolean)>(1);

        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
