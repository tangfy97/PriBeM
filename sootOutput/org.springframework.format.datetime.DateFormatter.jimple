public class org.springframework.format.datetime.DateFormatter extends java.lang.Object implements org.springframework.format.Formatter
{
    private java.lang.String pattern;
    private int style;
    private java.util.TimeZone timeZone;
    private boolean lenient;

    public void <init>()
    {
        org.springframework.format.datetime.DateFormatter r0;

        r0 := @this: org.springframework.format.datetime.DateFormatter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.format.datetime.DateFormatter: int style> = 2;

        r0.<org.springframework.format.datetime.DateFormatter: boolean lenient> = 0;

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.format.datetime.DateFormatter r0;

        r0 := @this: org.springframework.format.datetime.DateFormatter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.format.datetime.DateFormatter: int style> = 2;

        r0.<org.springframework.format.datetime.DateFormatter: boolean lenient> = 0;

        r0.<org.springframework.format.datetime.DateFormatter: java.lang.String pattern> = r1;

        return;
    }

    public void setPattern(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.format.datetime.DateFormatter r0;

        r0 := @this: org.springframework.format.datetime.DateFormatter;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.format.datetime.DateFormatter: java.lang.String pattern> = r1;

        return;
    }

    public void setStyle(int)
    {
        int i0;
        org.springframework.format.datetime.DateFormatter r0;

        r0 := @this: org.springframework.format.datetime.DateFormatter;

        i0 := @parameter0: int;

        r0.<org.springframework.format.datetime.DateFormatter: int style> = i0;

        return;
    }

    public void setTimeZone(java.util.TimeZone)
    {
        java.util.TimeZone r1;
        org.springframework.format.datetime.DateFormatter r0;

        r0 := @this: org.springframework.format.datetime.DateFormatter;

        r1 := @parameter0: java.util.TimeZone;

        r0.<org.springframework.format.datetime.DateFormatter: java.util.TimeZone timeZone> = r1;

        return;
    }

    public void setLenient(boolean)
    {
        org.springframework.format.datetime.DateFormatter r0;
        boolean z0;

        r0 := @this: org.springframework.format.datetime.DateFormatter;

        z0 := @parameter0: boolean;

        r0.<org.springframework.format.datetime.DateFormatter: boolean lenient> = z0;

        return;
    }

    public java.lang.String print(java.util.Date, java.util.Locale)
    {
        java.util.Locale r1;
        java.util.Date r3;
        java.lang.String $r4;
        java.text.DateFormat $r2;
        org.springframework.format.datetime.DateFormatter r0;

        r0 := @this: org.springframework.format.datetime.DateFormatter;

        r3 := @parameter0: java.util.Date;

        r1 := @parameter1: java.util.Locale;

        $r2 = virtualinvoke r0.<org.springframework.format.datetime.DateFormatter: java.text.DateFormat getDateFormat(java.util.Locale)>(r1);

        $r4 = virtualinvoke $r2.<java.text.DateFormat: java.lang.String format(java.util.Date)>(r3);

        return $r4;
    }

    public java.util.Date parse(java.lang.String, java.util.Locale) throws java.text.ParseException
    {
        java.util.Locale r1;
        java.util.Date $r4;
        java.lang.String r3;
        java.text.DateFormat $r2;
        org.springframework.format.datetime.DateFormatter r0;

        r0 := @this: org.springframework.format.datetime.DateFormatter;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Locale;

        $r2 = virtualinvoke r0.<org.springframework.format.datetime.DateFormatter: java.text.DateFormat getDateFormat(java.util.Locale)>(r1);

        $r4 = virtualinvoke $r2.<java.text.DateFormat: java.util.Date parse(java.lang.String)>(r3);

        return $r4;
    }

    protected java.text.DateFormat getDateFormat(java.util.Locale)
    {
        java.util.TimeZone $r3, $r4;
        java.text.SimpleDateFormat $r5;
        org.springframework.format.datetime.DateFormatter r0;
        java.util.Locale r2;
        int $i0;
        java.lang.String $r1, $r6;
        java.text.DateFormat r7;
        boolean $z0;

        r0 := @this: org.springframework.format.datetime.DateFormatter;

        r2 := @parameter0: java.util.Locale;

        $r1 = r0.<org.springframework.format.datetime.DateFormatter: java.lang.String pattern>;

        if $r1 == null goto label1;

        $r5 = new java.text.SimpleDateFormat;

        $r6 = r0.<org.springframework.format.datetime.DateFormatter: java.lang.String pattern>;

        specialinvoke $r5.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>($r6, r2);

        r7 = $r5;

        goto label2;

     label1:
        $i0 = r0.<org.springframework.format.datetime.DateFormatter: int style>;

        r7 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>($i0, r2);

     label2:
        $r3 = r0.<org.springframework.format.datetime.DateFormatter: java.util.TimeZone timeZone>;

        if $r3 == null goto label3;

        $r4 = r0.<org.springframework.format.datetime.DateFormatter: java.util.TimeZone timeZone>;

        virtualinvoke r7.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>($r4);

     label3:
        $z0 = r0.<org.springframework.format.datetime.DateFormatter: boolean lenient>;

        virtualinvoke r7.<java.text.DateFormat: void setLenient(boolean)>($z0);

        return r7;
    }

    public volatile java.lang.String print(java.lang.Object, java.util.Locale)
    {
        java.util.Locale r2;
        java.util.Date $r3;
        java.lang.Object r1;
        java.lang.String $r4;
        org.springframework.format.datetime.DateFormatter r0;

        r0 := @this: org.springframework.format.datetime.DateFormatter;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.Locale;

        $r3 = (java.util.Date) r1;

        $r4 = virtualinvoke r0.<org.springframework.format.datetime.DateFormatter: java.lang.String print(java.util.Date,java.util.Locale)>($r3, r2);

        return $r4;
    }

    public volatile java.lang.Object parse(java.lang.String, java.util.Locale) throws java.text.ParseException
    {
        java.util.Locale r2;
        java.util.Date $r3;
        java.lang.String r1;
        org.springframework.format.datetime.DateFormatter r0;

        r0 := @this: org.springframework.format.datetime.DateFormatter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Locale;

        $r3 = virtualinvoke r0.<org.springframework.format.datetime.DateFormatter: java.util.Date parse(java.lang.String,java.util.Locale)>(r1, r2);

        return $r3;
    }
}
