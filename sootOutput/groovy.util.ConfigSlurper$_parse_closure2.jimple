class groovy.util.ConfigSlurper$_parse_closure2 extends groovy.lang.Closure implements org.codehaus.groovy.runtime.GeneratedClosure
{
    private groovy.lang.Reference stack;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$groovy$util$ConfigSlurper;
    static java.lang.Class class$java$util$LinkedList;

    public void <init>(java.lang.Object, java.lang.Object, groovy.lang.Reference)
    {
        groovy.util.ConfigSlurper$_parse_closure2 r2;
        groovy.lang.Reference r5, $r6;
        java.lang.Class $r0, $r1, $r7, $r8;
        java.lang.Object r3, r4;

        r2 := @this: groovy.util.ConfigSlurper$_parse_closure2;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        r5 := @parameter2: groovy.lang.Reference;

        $r0 = <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$(java.lang.String)>("groovy.util.ConfigSlurper$_parse_closure2");

        <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        specialinvoke r2.<groovy.lang.Closure: void <init>(java.lang.Object,java.lang.Object)>(r3, r4);

        $r6 = (groovy.lang.Reference) r5;

        r2.<groovy.util.ConfigSlurper$_parse_closure2: groovy.lang.Reference stack> = $r6;

        return;
    }

    public java.lang.Object doCall(java.lang.Object)
    {
        java.lang.Object[] $r15, $r16;
        java.util.Map $r29;
        groovy.util.ConfigSlurper$_parse_closure2 r5;
        groovy.lang.Reference $r1, $r6, $r24;
        java.lang.Object r0, $r7, $r14, $r25, $r26, $r27, $r28, $r30;
        java.lang.Class $r2, $r3, $r4, $r8, $r9, $r10, $r11, $r12, $r13, $r17, $r18, $r19, $r20, $r21, $r22, $r23;

        r5 := @this: groovy.util.ConfigSlurper$_parse_closure2;

        r0 := @parameter0: java.lang.Object;

        $r1 = new groovy.lang.Reference;

        specialinvoke $r1.<groovy.lang.Reference: void <init>(java.lang.Object)>(r0);

        $r2 = <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$0>;

        if $r2 != null goto label01;

        $r11 = staticinvoke <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$(java.lang.String)>("groovy.util.ConfigSlurper$_parse_closure2");

        <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$0> = $r11;

        goto label02;

     label01:
        $r11 = <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$0>;

     label02:
        $r3 = <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$groovy$lang$MetaClass>;

        if $r3 != null goto label03;

        $r12 = staticinvoke <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$groovy$lang$MetaClass> = $r12;

        goto label04;

     label03:
        $r12 = <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r4 = <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$groovy$util$ConfigSlurper>;

        if $r4 != null goto label05;

        $r10 = staticinvoke <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$(java.lang.String)>("groovy.util.ConfigSlurper");

        $r13 = $r10;

        <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$groovy$util$ConfigSlurper> = $r10;

        goto label06;

     label05:
        $r13 = <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$groovy$util$ConfigSlurper>;

     label06:
        $r6 = r5.<groovy.util.ConfigSlurper$_parse_closure2: groovy.lang.Reference stack>;

        $r14 = virtualinvoke $r6.<groovy.lang.Reference: java.lang.Object get()>();

        $r15 = newarray (java.lang.Object)[1];

        $r16 = newarray (java.lang.Object)[4];

        $r16[0] = "config";

        $r7 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r16[1] = $r7;

        $r16[2] = "scope";

        $r8 = <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$groovy$util$ConfigSlurper>;

        if $r8 != null goto label07;

        $r9 = staticinvoke <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$(java.lang.String)>("groovy.util.ConfigSlurper");

        $r17 = $r9;

        <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$groovy$util$ConfigSlurper> = $r9;

        goto label08;

     label07:
        $r17 = <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$groovy$util$ConfigSlurper>;

     label08:
        $r18 = <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$groovy$util$ConfigSlurper>;

        if $r18 != null goto label09;

        $r19 = staticinvoke <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$(java.lang.String)>("groovy.util.ConfigSlurper");

        $r20 = $r19;

        <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$groovy$util$ConfigSlurper> = $r19;

        goto label10;

     label09:
        $r20 = <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$groovy$util$ConfigSlurper>;

     label10:
        $r21 = <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$groovy$util$ConfigSlurper>;

        if $r21 != null goto label11;

        $r22 = staticinvoke <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$(java.lang.String)>("groovy.util.ConfigSlurper");

        $r23 = $r22;

        <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$groovy$util$ConfigSlurper> = $r22;

        goto label12;

     label11:
        $r23 = <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$groovy$util$ConfigSlurper>;

     label12:
        $r24 = r5.<groovy.util.ConfigSlurper$_parse_closure2: groovy.lang.Reference stack>;

        $r25 = virtualinvoke $r24.<groovy.lang.Reference: java.lang.Object get()>();

        $r26 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r23, $r25, "last");

        $r27 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r20, $r26, "scope");

        $r28 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>($r17, $r27, "clone");

        $r16[3] = $r28;

        $r29 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.Map createMap(java.lang.Object[])>($r16);

        $r15[0] = $r29;

        $r30 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r13, $r14, "leftShift", $r15);

        return $r30;
    }

    public java.util.LinkedList getStack()
    {
        groovy.util.ConfigSlurper$_parse_closure2 r2;
        groovy.lang.Reference $r3;
        java.lang.Class $r0, $r1, $r5, $r8, $r9, $r10;
        java.lang.Object $r4, $r6;
        java.util.LinkedList $r7;

        r2 := @this: groovy.util.ConfigSlurper$_parse_closure2;

        $r0 = <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r8 = staticinvoke <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$(java.lang.String)>("groovy.util.ConfigSlurper$_parse_closure2");

        <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$0> = $r8;

        goto label2;

     label1:
        $r8 = <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r9 = staticinvoke <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$groovy$lang$MetaClass> = $r9;

        goto label4;

     label3:
        $r9 = <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = r2.<groovy.util.ConfigSlurper$_parse_closure2: groovy.lang.Reference stack>;

        $r4 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r5 = <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$java$util$LinkedList>;

        if $r5 != null goto label5;

        $r10 = staticinvoke <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$(java.lang.String)>("java.util.LinkedList");

        <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$java$util$LinkedList> = $r10;

        goto label6;

     label5:
        $r10 = <groovy.util.ConfigSlurper$_parse_closure2: java.lang.Class class$java$util$LinkedList>;

     label6:
        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r10);

        $r7 = (java.util.LinkedList) $r6;

        return $r7;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
