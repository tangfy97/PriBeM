public class org.apache.xml.utils.Trie extends java.lang.Object
{
    public static final int ALPHA_SIZE;
    org.apache.xml.utils.Trie$Node m_Root;
    private char[] m_charBuffer;

    public void <init>()
    {
        char[] $r1;
        org.apache.xml.utils.Trie r0;
        org.apache.xml.utils.Trie$Node $r2;

        r0 := @this: org.apache.xml.utils.Trie;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (char)[0];

        r0.<org.apache.xml.utils.Trie: char[] m_charBuffer> = $r1;

        $r2 = new org.apache.xml.utils.Trie$Node;

        specialinvoke $r2.<org.apache.xml.utils.Trie$Node: void <init>(org.apache.xml.utils.Trie)>(r0);

        r0.<org.apache.xml.utils.Trie: org.apache.xml.utils.Trie$Node m_Root> = $r2;

        return;
    }

    public java.lang.Object put(java.lang.String, java.lang.Object)
    {
        org.apache.xml.utils.Trie$Node[] $r3, $r5, $r6;
        int $i0, $i1, i8, $i9, $i10, $i11;
        java.lang.String r0;
        org.apache.xml.utils.Trie$Node r10, r11, $r12;
        char $c2, $c3, $c4, $c5, $c6, $c7;
        char[] $r2, $r9;
        org.apache.xml.utils.Trie r1;
        java.lang.Object r7, $r8;

        r1 := @this: org.apache.xml.utils.Trie;

        r0 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.Object;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = r1.<org.apache.xml.utils.Trie: char[] m_charBuffer>;

        $i1 = lengthof $r2;

        if $i0 <= $i1 goto label1;

        $r9 = newarray (char)[$i0];

        r1.<org.apache.xml.utils.Trie: char[] m_charBuffer> = $r9;

     label1:
        r10 = r1.<org.apache.xml.utils.Trie: org.apache.xml.utils.Trie$Node m_Root>;

        i8 = 0;

        goto label6;

     label2:
        $r3 = r10.<org.apache.xml.utils.Trie$Node: org.apache.xml.utils.Trie$Node[] m_nextChar>;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i8);

        $c3 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c2);

        $i9 = (int) $c3;

        r11 = $r3[$i9];

        if r11 == null goto label4;

        r10 = r11;

        goto label5;

     label3:
        $r12 = new org.apache.xml.utils.Trie$Node;

        specialinvoke $r12.<org.apache.xml.utils.Trie$Node: void <init>(org.apache.xml.utils.Trie)>(r1);

        $r5 = r10.<org.apache.xml.utils.Trie$Node: org.apache.xml.utils.Trie$Node[] m_nextChar>;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i8);

        $c5 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c4);

        $i10 = (int) $c5;

        $r5[$i10] = $r12;

        $r6 = r10.<org.apache.xml.utils.Trie$Node: org.apache.xml.utils.Trie$Node[] m_nextChar>;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i8);

        $c7 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c6);

        $i11 = (int) $c7;

        $r6[$i11] = $r12;

        r10 = $r12;

        i8 = i8 + 1;

     label4:
        if i8 < $i0 goto label3;

        goto label7;

     label5:
        i8 = i8 + 1;

     label6:
        if i8 < $i0 goto label2;

     label7:
        $r8 = r10.<org.apache.xml.utils.Trie$Node: java.lang.Object m_Value>;

        r10.<org.apache.xml.utils.Trie$Node: java.lang.Object m_Value> = r7;

        return $r8;
    }

    public java.lang.Object get(java.lang.String)
    {
        org.apache.xml.utils.Trie$Node[] $r3, $r7;
        int $i0, $i1, i4, $i5, $i6, $i7, $i8;
        java.lang.String r0;
        org.apache.xml.utils.Trie$Node r9, r10;
        char $c2, c3;
        char[] $r2, $r5, $r6;
        org.apache.xml.utils.Trie r1;
        java.lang.Object $r4, $r8;

        r1 := @this: org.apache.xml.utils.Trie;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = r1.<org.apache.xml.utils.Trie: char[] m_charBuffer>;

        $i1 = lengthof $r2;

        if $i1 >= $i0 goto label1;

        return null;

     label1:
        r9 = r1.<org.apache.xml.utils.Trie: org.apache.xml.utils.Trie$Node m_Root>;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            default: goto label5;
        };

     label2:
        return null;

     label3:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i5 = (int) $c2;

        if $i5 >= 128 goto label4;

        $r3 = r9.<org.apache.xml.utils.Trie$Node: org.apache.xml.utils.Trie$Node[] m_nextChar>;

        $i6 = (int) $c2;

        r10 = $r3[$i6];

        if r10 == null goto label4;

        $r4 = r10.<org.apache.xml.utils.Trie$Node: java.lang.Object m_Value>;

        return $r4;

     label4:
        return null;

     label5:
        $r5 = r1.<org.apache.xml.utils.Trie: char[] m_charBuffer>;

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, $i0, $r5, 0);

        i4 = 0;

        goto label9;

     label6:
        $r6 = r1.<org.apache.xml.utils.Trie: char[] m_charBuffer>;

        c3 = $r6[i4];

        $i7 = (int) c3;

        if 128 > $i7 goto label7;

        return null;

     label7:
        $r7 = r9.<org.apache.xml.utils.Trie$Node: org.apache.xml.utils.Trie$Node[] m_nextChar>;

        $i8 = (int) c3;

        r9 = $r7[$i8];

        if r9 != null goto label8;

        return null;

     label8:
        i4 = i4 + 1;

     label9:
        if i4 < $i0 goto label6;

        $r8 = r9.<org.apache.xml.utils.Trie$Node: java.lang.Object m_Value>;

        return $r8;
    }

    public static void <clinit>()
    {
        <org.apache.xml.utils.Trie: int ALPHA_SIZE> = 128;

        return;
    }
}
