public class org.apache.lucene.analysis.synonym.SynonymFilterFactory extends org.apache.lucene.analysis.util.TokenFilterFactory implements org.apache.lucene.analysis.util.ResourceLoaderAware
{
    private final org.apache.lucene.analysis.util.TokenFilterFactory delegator;

    public void <init>(java.util.Map)
    {
        org.apache.lucene.analysis.synonym.FSTSynonymFilterFactory $r10;
        java.util.HashMap $r5, $r11;
        java.util.Map r1, $r6, $r12;
        java.lang.String $r8;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r9;
        org.apache.lucene.util.Version $r2, $r3;
        org.apache.lucene.analysis.synonym.SlowSynonymFilterFactory $r4;
        org.apache.lucene.analysis.synonym.SynonymFilterFactory r0;
        java.lang.Object $r7;

        r0 := @this: org.apache.lucene.analysis.synonym.SynonymFilterFactory;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.lucene.analysis.util.TokenFilterFactory: void <init>(java.util.Map)>(r1);

        virtualinvoke r0.<org.apache.lucene.analysis.synonym.SynonymFilterFactory: void assureMatchVersion()>();

        $r3 = r0.<org.apache.lucene.analysis.synonym.SynonymFilterFactory: org.apache.lucene.util.Version luceneMatchVersion>;

        $r2 = <org.apache.lucene.util.Version: org.apache.lucene.util.Version LUCENE_34>;

        $z0 = virtualinvoke $r3.<org.apache.lucene.util.Version: boolean onOrAfter(org.apache.lucene.util.Version)>($r2);

        if $z0 == 0 goto label1;

        $r10 = new org.apache.lucene.analysis.synonym.FSTSynonymFilterFactory;

        $r11 = new java.util.HashMap;

        $r12 = virtualinvoke r0.<org.apache.lucene.analysis.synonym.SynonymFilterFactory: java.util.Map getOriginalArgs()>();

        specialinvoke $r11.<java.util.HashMap: void <init>(java.util.Map)>($r12);

        specialinvoke $r10.<org.apache.lucene.analysis.synonym.FSTSynonymFilterFactory: void <init>(java.util.Map)>($r11);

        r0.<org.apache.lucene.analysis.synonym.SynonymFilterFactory: org.apache.lucene.analysis.util.TokenFilterFactory delegator> = $r10;

        goto label3;

     label1:
        $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("format");

        if $z1 == 0 goto label2;

        $r7 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("format");

        $r8 = (java.lang.String) $r7;

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("solr");

        if $z2 != 0 goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You must specify luceneMatchVersion >= 3.4 to use alternate synonyms formats");

        throw $r9;

     label2:
        $r4 = new org.apache.lucene.analysis.synonym.SlowSynonymFilterFactory;

        $r5 = new java.util.HashMap;

        $r6 = virtualinvoke r0.<org.apache.lucene.analysis.synonym.SynonymFilterFactory: java.util.Map getOriginalArgs()>();

        specialinvoke $r5.<java.util.HashMap: void <init>(java.util.Map)>($r6);

        specialinvoke $r4.<org.apache.lucene.analysis.synonym.SlowSynonymFilterFactory: void <init>(java.util.Map)>($r5);

        r0.<org.apache.lucene.analysis.synonym.SynonymFilterFactory: org.apache.lucene.analysis.util.TokenFilterFactory delegator> = $r4;

     label3:
        return;
    }

    public org.apache.lucene.analysis.TokenStream create(org.apache.lucene.analysis.TokenStream)
    {
        org.apache.lucene.analysis.TokenStream r1, $r3;
        org.apache.lucene.analysis.synonym.SynonymFilterFactory r0;
        org.apache.lucene.analysis.util.TokenFilterFactory $r2;

        r0 := @this: org.apache.lucene.analysis.synonym.SynonymFilterFactory;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        $r2 = r0.<org.apache.lucene.analysis.synonym.SynonymFilterFactory: org.apache.lucene.analysis.util.TokenFilterFactory delegator>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.analysis.util.TokenFilterFactory: org.apache.lucene.analysis.TokenStream create(org.apache.lucene.analysis.TokenStream)>(r1);

        return $r3;
    }

    public void inform(org.apache.lucene.analysis.util.ResourceLoader) throws java.io.IOException
    {
        org.apache.lucene.analysis.synonym.SynonymFilterFactory r0;
        org.apache.lucene.analysis.util.ResourceLoader r2;
        org.apache.lucene.analysis.util.TokenFilterFactory $r1;
        org.apache.lucene.analysis.util.ResourceLoaderAware $r3;

        r0 := @this: org.apache.lucene.analysis.synonym.SynonymFilterFactory;

        r2 := @parameter0: org.apache.lucene.analysis.util.ResourceLoader;

        $r1 = r0.<org.apache.lucene.analysis.synonym.SynonymFilterFactory: org.apache.lucene.analysis.util.TokenFilterFactory delegator>;

        $r3 = (org.apache.lucene.analysis.util.ResourceLoaderAware) $r1;

        interfaceinvoke $r3.<org.apache.lucene.analysis.util.ResourceLoaderAware: void inform(org.apache.lucene.analysis.util.ResourceLoader)>(r2);

        return;
    }

    org.apache.lucene.analysis.util.TokenFilterFactory getDelegator()
    {
        org.apache.lucene.analysis.util.TokenFilterFactory $r1;
        org.apache.lucene.analysis.synonym.SynonymFilterFactory r0;

        r0 := @this: org.apache.lucene.analysis.synonym.SynonymFilterFactory;

        $r1 = r0.<org.apache.lucene.analysis.synonym.SynonymFilterFactory: org.apache.lucene.analysis.util.TokenFilterFactory delegator>;

        return $r1;
    }
}
