public final class org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer extends java.lang.Object implements org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor
{
    private final org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target;
    private final java.util.Map annotationTracker;
    private final java.util.Map annotationChanges;

    public void <init>(org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor)
    {
        java.util.TreeMap $r1, $r2;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor r3;
        org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer;

        r3 := @parameter0: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: java.util.Map annotationTracker> = $r1;

        $r2 = new java.util.TreeMap;

        specialinvoke $r2.<java.util.TreeMap: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: java.util.Map annotationChanges> = $r2;

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target> = r3;

        return;
    }

    public java.lang.Object finish()
    {
        java.lang.Object $r2;
        org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: void flushAnnotations()>();

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: java.lang.Object finish()>();

        return $r2;
    }

    public void retain(int)
    {
        int i0;
        org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: void flushAnnotations()>();

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void retain(int)>(i0);

     label1:
        return;
    }

    public void characters(java.lang.String)
    {
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r2;
        java.lang.String r0;
        boolean $z0;
        org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer r1;

        r1 := @this: org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        specialinvoke r1.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: void flushAnnotations()>();

        $r2 = r1.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void characters(java.lang.String)>(r0);

     label1:
        return;
    }

    public void elementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r3;
        java.lang.String r1;
        org.waveprotocol.wave.model.document.operation.Attributes r2;
        org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: void flushAnnotations()>();

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void elementStart(java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>(r1, r2);

        return;
    }

    public void elementEnd()
    {
        org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: void flushAnnotations()>();

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void elementEnd()>();

        return;
    }

    public void deleteCharacters(java.lang.String)
    {
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r2;
        java.lang.String r0;
        boolean $z0;
        org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer r1;

        r1 := @this: org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        specialinvoke r1.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: void flushAnnotations()>();

        $r2 = r1.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void deleteCharacters(java.lang.String)>(r0);

     label1:
        return;
    }

    public void deleteElementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r3;
        java.lang.String r1;
        org.waveprotocol.wave.model.document.operation.Attributes r2;
        org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: void flushAnnotations()>();

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void deleteElementStart(java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>(r1, r2);

        return;
    }

    public void deleteElementEnd()
    {
        org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: void flushAnnotations()>();

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void deleteElementEnd()>();

        return;
    }

    public void replaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r3;
        org.waveprotocol.wave.model.document.operation.Attributes r1, r2;
        org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.Attributes;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: void flushAnnotations()>();

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void replaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes,org.waveprotocol.wave.model.document.operation.Attributes)>(r1, r2);

        return;
    }

    public void updateAttributes(org.waveprotocol.wave.model.document.operation.AttributesUpdate)
    {
        org.waveprotocol.wave.model.document.operation.AttributesUpdate r1;
        org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.AttributesUpdate;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: void flushAnnotations()>();

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void updateAttributes(org.waveprotocol.wave.model.document.operation.AttributesUpdate)>(r1);

        return;
    }

    public void annotationBoundary(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)
    {
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap r0;
        int $i0, $i1, i2, i3;
        java.lang.String $r2, $r3, $r4, $r5;
        org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer r1;

        r1 := @this: org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap;

        $i0 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: int changeSize()>();

        i2 = 0;

     label1:
        if i2 >= $i0 goto label2;

        $r3 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getChangeKey(int)>(i2);

        $r4 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getOldValue(int)>(i2);

        $r5 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getNewValue(int)>(i2);

        virtualinvoke r1.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: void startAnnotation(java.lang.String,java.lang.String,java.lang.String)>($r3, $r4, $r5);

        i2 = i2 + 1;

        goto label1;

     label2:
        $i1 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: int endSize()>();

        i3 = 0;

     label3:
        if i3 >= $i1 goto label4;

        $r2 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getEndKey(int)>(i3);

        virtualinvoke r1.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: void endAnnotation(java.lang.String)>($r2);

        i3 = i3 + 1;

        goto label3;

     label4:
        return;
    }

    public void startAnnotation(java.lang.String, java.lang.String, java.lang.String)
    {
        java.util.Map $r5;
        java.lang.String r1, r3, r4;
        org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer$AnnotationChangeValues $r2;
        org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r5 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: java.util.Map annotationChanges>;

        $r2 = new org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer$AnnotationChangeValues;

        specialinvoke $r2.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer$AnnotationChangeValues: void <init>(java.lang.String,java.lang.String)>(r3, r4);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r2);

        return;
    }

    public void endAnnotation(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer r0;
        java.util.Map $r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: java.util.Map annotationChanges>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, null);

        return;
    }

    private void flushAnnotations()
    {
        java.util.Map $r3, $r14, $r21, $r22, $r26;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r7;
        org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Set $r4;
        org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer$1 $r6;
        java.util.ArrayList $r0, $r1;
        java.lang.String r11, $r17, $r18, $r19, $r20, $r24, $r25;
        java.util.Map$Entry r9;
        java.util.Iterator $r5;
        org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer$AnnotationChange $r23;
        java.lang.Object $r8, $r10, $r12, $r15;
        org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer$AnnotationChangeValues r13, r16;

        r2 := @this: org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r3 = r2.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: java.util.Map annotationChanges>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r8 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Map$Entry) $r8;

        $r10 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        r11 = (java.lang.String) $r10;

        $r12 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        r13 = (org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer$AnnotationChangeValues) $r12;

        $r14 = r2.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: java.util.Map annotationTracker>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11);

        r16 = (org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer$AnnotationChangeValues) $r15;

        if r13 != null goto label2;

        if r16 == null goto label4;

        $r21 = r2.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: java.util.Map annotationTracker>;

        interfaceinvoke $r21.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r11);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(r11);

        goto label4;

     label2:
        if r16 == null goto label3;

        $r18 = r13.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer$AnnotationChangeValues: java.lang.String oldValue>;

        $r17 = r16.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer$AnnotationChangeValues: java.lang.String oldValue>;

        $z3 = staticinvoke <org.waveprotocol.wave.model.util.ValueUtils: boolean equal(java.lang.Object,java.lang.Object)>($r18, $r17);

        if $z3 == 0 goto label3;

        $r20 = r13.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer$AnnotationChangeValues: java.lang.String newValue>;

        $r19 = r16.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer$AnnotationChangeValues: java.lang.String newValue>;

        $z4 = staticinvoke <org.waveprotocol.wave.model.util.ValueUtils: boolean equal(java.lang.Object,java.lang.Object)>($r20, $r19);

        if $z4 != 0 goto label4;

     label3:
        $r22 = r2.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: java.util.Map annotationTracker>;

        interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, r13);

        $r23 = new org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer$AnnotationChange;

        $r24 = r13.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer$AnnotationChangeValues: java.lang.String oldValue>;

        $r25 = r13.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer$AnnotationChangeValues: java.lang.String newValue>;

        specialinvoke $r23.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer$AnnotationChange: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r11, $r24, $r25);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r23);

     label4:
        goto label1;

     label5:
        $z1 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label6;

        $z2 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label7;

     label6:
        $r7 = r2.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        $r6 = new org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer$1;

        specialinvoke $r6.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer$1: void <init>(org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer,java.util.List,java.util.List)>(r2, $r0, $r1);

        interfaceinvoke $r7.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void annotationBoundary(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)>($r6);

     label7:
        $r26 = r2.<org.waveprotocol.wave.model.document.operation.algorithm.AnnotationsNormalizer: java.util.Map annotationChanges>;

        interfaceinvoke $r26.<java.util.Map: void clear()>();

        return;
    }
}
