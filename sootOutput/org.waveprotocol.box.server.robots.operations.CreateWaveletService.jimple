public class org.waveprotocol.box.server.robots.operations.CreateWaveletService extends java.lang.Object implements org.waveprotocol.box.server.robots.operations.OperationService
{

    private void <init>()
    {
        org.waveprotocol.box.server.robots.operations.CreateWaveletService r0;

        r0 := @this: org.waveprotocol.box.server.robots.operations.CreateWaveletService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void execute(com.google.wave.api.OperationRequest, org.waveprotocol.box.server.robots.OperationContext, org.waveprotocol.wave.model.wave.ParticipantId) throws com.google.wave.api.InvalidRequestException
    {
        org.waveprotocol.wave.model.conversation.ObservableConversationThread $r17;
        org.waveprotocol.wave.model.wave.ParticipantId r5, $r41, r52;
        org.waveprotocol.wave.model.conversation.ObservableConversation $r16;
        java.lang.Long $r31;
        org.waveprotocol.wave.model.conversation.ObservableConversationView $r15;
        com.google.wave.api.JsonRpcConstant$ParamsProperty $r1, $r27;
        boolean $z0, $z1;
        org.waveprotocol.wave.model.id.WaveletName $r11;
        org.waveprotocol.box.server.robots.RobotWaveletData $r12;
        org.waveprotocol.box.server.robots.OperationContext r9;
        org.waveprotocol.wave.model.id.WaveId $r22, $r34;
        java.util.List $r7;
        java.lang.StringBuilder $r46, $r47, $r48;
        com.google.wave.api.OperationRequest r0;
        org.waveprotocol.wave.model.wave.InvalidParticipantAddress $r44;
        org.waveprotocol.wave.model.id.WaveletId $r25, $r37;
        long $l0;
        org.waveprotocol.wave.model.wave.opbased.OpBasedWavelet $r13;
        com.google.wave.api.impl.WaveletData r3;
        java.util.ArrayList $r6;
        com.google.wave.api.event.WaveletCreatedEvent $r29;
        org.waveprotocol.wave.model.conversation.ObservableConversationBlip $r18;
        java.lang.String $r21, $r24, $r26, $r30, $r32, $r35, $r38, $r49, r51, r53;
        org.waveprotocol.wave.model.id.IdSerialiser $r20, $r23, $r33, $r36;
        com.google.wave.api.InvalidRequestException $r43, $r45;
        org.waveprotocol.box.server.robots.util.ConversationUtil $r10, $r14;
        java.util.Iterator $r8, $r19;
        org.waveprotocol.wave.model.id.InvalidIdException $r42;
        org.waveprotocol.box.server.robots.operations.CreateWaveletService r50;
        org.waveprotocol.wave.model.wave.ParticipantId[] $r4;
        java.lang.Object $r2, $r28, $r39, $r40;

        r50 := @this: org.waveprotocol.box.server.robots.operations.CreateWaveletService;

        r0 := @parameter0: com.google.wave.api.OperationRequest;

        r9 := @parameter1: org.waveprotocol.box.server.robots.OperationContext;

        r5 := @parameter2: org.waveprotocol.wave.model.wave.ParticipantId;

        $r1 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty WAVELET_DATA>;

        $r2 = staticinvoke <org.waveprotocol.box.server.robots.util.OperationUtil: java.lang.Object getRequiredParameter(com.google.wave.api.OperationRequest,com.google.wave.api.JsonRpcConstant$ParamsProperty)>(r0, $r1);

        r3 = (com.google.wave.api.impl.WaveletData) $r2;

        $r4 = newarray (org.waveprotocol.wave.model.wave.ParticipantId)[1];

        $r4[0] = r5;

        $r6 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r4);

        $r7 = virtualinvoke r3.<com.google.wave.api.impl.WaveletData: java.util.List getParticipants()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r40 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r51 = (java.lang.String) $r40;

     label02:
        $r41 = staticinvoke <org.waveprotocol.wave.model.wave.ParticipantId: org.waveprotocol.wave.model.wave.ParticipantId of(java.lang.String)>(r51);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r41);

     label03:
        goto label05;

     label04:
        $r44 := @caughtexception;

        $r45 = new com.google.wave.api.InvalidRequestException;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a valid participant address");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r45.<com.google.wave.api.InvalidRequestException: void <init>(java.lang.String,com.google.wave.api.OperationRequest)>($r49, r0);

        throw $r45;

     label05:
        goto label01;

     label06:
        $r10 = interfaceinvoke r9.<org.waveprotocol.box.server.robots.OperationContext: org.waveprotocol.box.server.robots.util.ConversationUtil getConversationUtil()>();

        $r11 = virtualinvoke $r10.<org.waveprotocol.box.server.robots.util.ConversationUtil: org.waveprotocol.wave.model.id.WaveletName generateWaveletName()>();

        $r12 = staticinvoke <org.waveprotocol.box.server.robots.util.RobotsUtil: org.waveprotocol.box.server.robots.RobotWaveletData createEmptyRobotWavelet(org.waveprotocol.wave.model.wave.ParticipantId,org.waveprotocol.wave.model.id.WaveletName)>(r5, $r11);

        $r13 = virtualinvoke $r12.<org.waveprotocol.box.server.robots.RobotWaveletData: org.waveprotocol.wave.model.wave.opbased.OpBasedWavelet getOpBasedWavelet(org.waveprotocol.wave.model.wave.ParticipantId)>(r5);

        staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: void makeWaveletConversational(org.waveprotocol.wave.model.wave.Wavelet)>($r13);

        $r14 = interfaceinvoke r9.<org.waveprotocol.box.server.robots.OperationContext: org.waveprotocol.box.server.robots.util.ConversationUtil getConversationUtil()>();

        $r15 = virtualinvoke $r14.<org.waveprotocol.box.server.robots.util.ConversationUtil: org.waveprotocol.wave.model.conversation.ObservableConversationView buildConversation(org.waveprotocol.wave.model.wave.ObservableWavelet)>($r13);

        $r16 = interfaceinvoke $r15.<org.waveprotocol.wave.model.conversation.ObservableConversationView: org.waveprotocol.wave.model.conversation.ObservableConversation getRoot()>();

        $r17 = interfaceinvoke $r16.<org.waveprotocol.wave.model.conversation.ObservableConversation: org.waveprotocol.wave.model.conversation.ObservableConversationThread getRootThread()>();

        $r18 = interfaceinvoke $r17.<org.waveprotocol.wave.model.conversation.ObservableConversationThread: org.waveprotocol.wave.model.conversation.ObservableConversationBlip appendBlip()>();

        $r19 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r39 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r52 = (org.waveprotocol.wave.model.wave.ParticipantId) $r39;

        virtualinvoke $r13.<org.waveprotocol.wave.model.wave.opbased.OpBasedWavelet: void addParticipant(org.waveprotocol.wave.model.wave.ParticipantId)>(r52);

        goto label07;

     label08:
        $r20 = staticinvoke <com.google.wave.api.ApiIdSerializer: org.waveprotocol.wave.model.id.IdSerialiser instance()>();

        $r21 = virtualinvoke r3.<com.google.wave.api.impl.WaveletData: java.lang.String getWaveId()>();

        $r22 = interfaceinvoke $r20.<org.waveprotocol.wave.model.id.IdSerialiser: org.waveprotocol.wave.model.id.WaveId deserialiseWaveId(java.lang.String)>($r21);

        $r23 = staticinvoke <com.google.wave.api.ApiIdSerializer: org.waveprotocol.wave.model.id.IdSerialiser instance()>();

        $r24 = virtualinvoke r3.<com.google.wave.api.impl.WaveletData: java.lang.String getWaveletId()>();

        $r25 = interfaceinvoke $r23.<org.waveprotocol.wave.model.id.IdSerialiser: org.waveprotocol.wave.model.id.WaveletId deserialiseWaveletId(java.lang.String)>($r24);

        interfaceinvoke r9.<org.waveprotocol.box.server.robots.OperationContext: void putWavelet(org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId,org.waveprotocol.box.server.robots.RobotWaveletData)>($r22, $r25, $r12);

     label09:
        goto label11;

     label10:
        $r42 := @caughtexception;

        $r43 = new com.google.wave.api.InvalidRequestException;

        specialinvoke $r43.<com.google.wave.api.InvalidRequestException: void <init>(java.lang.String,com.google.wave.api.OperationRequest,java.lang.Exception)>("Invalid id", r0, $r42);

        throw $r43;

     label11:
        $r26 = virtualinvoke r3.<com.google.wave.api.impl.WaveletData: java.lang.String getRootBlipId()>();

        interfaceinvoke r9.<org.waveprotocol.box.server.robots.OperationContext: void putBlip(java.lang.String,org.waveprotocol.wave.model.conversation.ConversationBlip)>($r26, $r18);

        $r27 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty MESSAGE>;

        $r28 = staticinvoke <org.waveprotocol.box.server.robots.util.OperationUtil: java.lang.Object getOptionalParameter(com.google.wave.api.OperationRequest,com.google.wave.api.JsonRpcConstant$ParamsProperty)>(r0, $r27);

        r53 = (java.lang.String) $r28;

        $r29 = new com.google.wave.api.event.WaveletCreatedEvent;

        $r30 = virtualinvoke r5.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r32 = interfaceinvoke $r18.<org.waveprotocol.wave.model.conversation.ObservableConversationBlip: java.lang.String getId()>();

        $r33 = staticinvoke <com.google.wave.api.ApiIdSerializer: org.waveprotocol.wave.model.id.IdSerialiser instance()>();

        $r34 = $r11.<org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveId waveId>;

        $r35 = interfaceinvoke $r33.<org.waveprotocol.wave.model.id.IdSerialiser: java.lang.String serialiseWaveId(org.waveprotocol.wave.model.id.WaveId)>($r34);

        $r36 = staticinvoke <com.google.wave.api.ApiIdSerializer: org.waveprotocol.wave.model.id.IdSerialiser instance()>();

        $r37 = $r11.<org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveletId waveletId>;

        $r38 = interfaceinvoke $r36.<org.waveprotocol.wave.model.id.IdSerialiser: java.lang.String serialiseWaveletId(org.waveprotocol.wave.model.id.WaveletId)>($r37);

        specialinvoke $r29.<com.google.wave.api.event.WaveletCreatedEvent: void <init>(com.google.wave.api.Wavelet,com.google.wave.api.impl.EventMessageBundle,java.lang.String,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, null, $r30, $r31, $r32, r53, $r35, $r38);

        interfaceinvoke r9.<org.waveprotocol.box.server.robots.OperationContext: void processEvent(com.google.wave.api.OperationRequest,com.google.wave.api.event.Event)>(r0, $r29);

        return;

        catch org.waveprotocol.wave.model.wave.InvalidParticipantAddress from label02 to label03 with label04;
        catch org.waveprotocol.wave.model.id.InvalidIdException from label08 to label09 with label10;
    }

    public static org.waveprotocol.box.server.robots.operations.CreateWaveletService create()
    {
        org.waveprotocol.box.server.robots.operations.CreateWaveletService $r0;

        $r0 = new org.waveprotocol.box.server.robots.operations.CreateWaveletService;

        specialinvoke $r0.<org.waveprotocol.box.server.robots.operations.CreateWaveletService: void <init>()>();

        return $r0;
    }
}
