public class org.eclipse.jdt.internal.core.util.Disassembler extends org.eclipse.jdt.core.util.ClassFileBytesDisassembler
{
    private static final char[] ANY_EXCEPTION;
    private static final java.lang.String VERSION_UNKNOWN;

    static void <clinit>()
    {
        char[] $r1;
        java.lang.String $r0, $r2;

        $r0 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String classfileformat_anyexceptionhandler>;

        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.core.util.Disassembler: char[] ANY_EXCEPTION> = $r1;

        $r2 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String classfileformat_versionUnknown>;

        <org.eclipse.jdt.internal.core.util.Disassembler: java.lang.String VERSION_UNKNOWN> = $r2;

        return;
    }

    public void <init>()
    {
        org.eclipse.jdt.internal.core.util.Disassembler r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        specialinvoke r0.<org.eclipse.jdt.core.util.ClassFileBytesDisassembler: void <init>()>();

        return;
    }

    private boolean appendModifier(java.lang.StringBuffer, int, int, java.lang.String, boolean)
    {
        org.eclipse.jdt.internal.core.util.Disassembler r3;
        java.lang.StringBuffer r0;
        int i0, i1, $i2;
        java.lang.String r1, $r2;
        boolean z0;

        r3 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r0 := @parameter0: java.lang.StringBuffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        $i2 = i0 & i1;

        if $i2 == 0 goto label3;

        if z0 != 0 goto label1;

        $r2 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_space>;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

     label1:
        if z0 == 0 goto label2;

        z0 = 0;

     label2:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

     label3:
        return z0;
    }

    private void decodeModifiers(java.lang.StringBuffer, int, int[])
    {
        int[] r2;
        java.lang.StringBuffer r1;
        int i0;
        org.eclipse.jdt.internal.core.util.Disassembler r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r1 := @parameter0: java.lang.StringBuffer;

        i0 := @parameter1: int;

        r2 := @parameter2: int[];

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void decodeModifiers(java.lang.StringBuffer,int,boolean,boolean,int[])>(r1, i0, 0, 0, r2);

        return;
    }

    private void decodeModifiers(java.lang.StringBuffer, int, boolean, boolean, int[])
    {
        org.eclipse.jdt.internal.core.util.Disassembler r1;
        int[] r0;
        java.lang.StringBuffer r2;
        int i0, $i1, i2, i3;
        java.lang.String $r3;
        boolean z0, z1, z2;

        r1 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r2 := @parameter0: java.lang.StringBuffer;

        i2 := @parameter1: int;

        z1 := @parameter2: boolean;

        z0 := @parameter3: boolean;

        r0 := @parameter4: int[];

        if r0 != null goto label01;

        return;

     label01:
        z2 = 1;

        i3 = 0;

        i0 = lengthof r0;

        goto label17;

     label02:
        $i1 = r0[i3];

        lookupswitch($i1)
        {
            case 1: goto label03;
            case 2: goto label05;
            case 4: goto label04;
            case 8: goto label07;
            case 16: goto label08;
            case 32: goto label09;
            case 64: goto label13;
            case 128: goto label12;
            case 256: goto label10;
            case 1024: goto label06;
            case 2048: goto label11;
            case 16384: goto label15;
            default: goto label16;
        };

     label03:
        z2 = specialinvoke r1.<org.eclipse.jdt.internal.core.util.Disassembler: boolean appendModifier(java.lang.StringBuffer,int,int,java.lang.String,boolean)>(r2, i2, 1, "public", z2);

        goto label16;

     label04:
        z2 = specialinvoke r1.<org.eclipse.jdt.internal.core.util.Disassembler: boolean appendModifier(java.lang.StringBuffer,int,int,java.lang.String,boolean)>(r2, i2, 4, "protected", z2);

        goto label16;

     label05:
        z2 = specialinvoke r1.<org.eclipse.jdt.internal.core.util.Disassembler: boolean appendModifier(java.lang.StringBuffer,int,int,java.lang.String,boolean)>(r2, i2, 2, "private", z2);

        goto label16;

     label06:
        z2 = specialinvoke r1.<org.eclipse.jdt.internal.core.util.Disassembler: boolean appendModifier(java.lang.StringBuffer,int,int,java.lang.String,boolean)>(r2, i2, 1024, "abstract", z2);

        goto label16;

     label07:
        z2 = specialinvoke r1.<org.eclipse.jdt.internal.core.util.Disassembler: boolean appendModifier(java.lang.StringBuffer,int,int,java.lang.String,boolean)>(r2, i2, 8, "static", z2);

        goto label16;

     label08:
        z2 = specialinvoke r1.<org.eclipse.jdt.internal.core.util.Disassembler: boolean appendModifier(java.lang.StringBuffer,int,int,java.lang.String,boolean)>(r2, i2, 16, "final", z2);

        goto label16;

     label09:
        z2 = specialinvoke r1.<org.eclipse.jdt.internal.core.util.Disassembler: boolean appendModifier(java.lang.StringBuffer,int,int,java.lang.String,boolean)>(r2, i2, 32, "synchronized", z2);

        goto label16;

     label10:
        z2 = specialinvoke r1.<org.eclipse.jdt.internal.core.util.Disassembler: boolean appendModifier(java.lang.StringBuffer,int,int,java.lang.String,boolean)>(r2, i2, 256, "native", z2);

        goto label16;

     label11:
        z2 = specialinvoke r1.<org.eclipse.jdt.internal.core.util.Disassembler: boolean appendModifier(java.lang.StringBuffer,int,int,java.lang.String,boolean)>(r2, i2, 2048, "strictfp", z2);

        goto label16;

     label12:
        z2 = specialinvoke r1.<org.eclipse.jdt.internal.core.util.Disassembler: boolean appendModifier(java.lang.StringBuffer,int,int,java.lang.String,boolean)>(r2, i2, 128, "transient", z2);

        goto label16;

     label13:
        if z0 == 0 goto label14;

        z2 = specialinvoke r1.<org.eclipse.jdt.internal.core.util.Disassembler: boolean appendModifier(java.lang.StringBuffer,int,int,java.lang.String,boolean)>(r2, i2, 64, "bridge", z2);

        goto label16;

     label14:
        z2 = specialinvoke r1.<org.eclipse.jdt.internal.core.util.Disassembler: boolean appendModifier(java.lang.StringBuffer,int,int,java.lang.String,boolean)>(r2, i2, 64, "volatile", z2);

        goto label16;

     label15:
        z2 = specialinvoke r1.<org.eclipse.jdt.internal.core.util.Disassembler: boolean appendModifier(java.lang.StringBuffer,int,int,java.lang.String,boolean)>(r2, i2, 16384, "enum", z2);

     label16:
        i3 = i3 + 1;

     label17:
        if i3 < i0 goto label02;

        if z2 != 0 goto label18;

        if z1 != 0 goto label19;

        $r3 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_space>;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        goto label19;

     label18:
        if z1 == 0 goto label19;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("default");

     label19:
        return;
    }

    private void decodeModifiersForField(java.lang.StringBuffer, int)
    {
        int[] $r2;
        java.lang.StringBuffer r1;
        int i0;
        org.eclipse.jdt.internal.core.util.Disassembler r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r1 := @parameter0: java.lang.StringBuffer;

        i0 := @parameter1: int;

        $r2 = newarray (int)[8];

        $r2[0] = 1;

        $r2[1] = 4;

        $r2[2] = 2;

        $r2[3] = 8;

        $r2[4] = 16;

        $r2[5] = 128;

        $r2[6] = 64;

        $r2[7] = 16384;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void decodeModifiers(java.lang.StringBuffer,int,int[])>(r1, i0, $r2);

        return;
    }

    private void decodeModifiersForFieldForWorkingCopy(java.lang.StringBuffer, int)
    {
        int[] $r2;
        java.lang.StringBuffer r1;
        int i0;
        org.eclipse.jdt.internal.core.util.Disassembler r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r1 := @parameter0: java.lang.StringBuffer;

        i0 := @parameter1: int;

        $r2 = newarray (int)[7];

        $r2[0] = 1;

        $r2[1] = 4;

        $r2[2] = 2;

        $r2[3] = 8;

        $r2[4] = 16;

        $r2[5] = 128;

        $r2[6] = 64;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void decodeModifiers(java.lang.StringBuffer,int,int[])>(r1, i0, $r2);

        return;
    }

    private final void decodeModifiersForInnerClasses(java.lang.StringBuffer, int, boolean)
    {
        int[] $r2;
        java.lang.StringBuffer r1;
        int i0;
        org.eclipse.jdt.internal.core.util.Disassembler r0;
        boolean z0;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r1 := @parameter0: java.lang.StringBuffer;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r2 = newarray (int)[6];

        $r2[0] = 1;

        $r2[1] = 4;

        $r2[2] = 2;

        $r2[3] = 1024;

        $r2[4] = 8;

        $r2[5] = 16;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void decodeModifiers(java.lang.StringBuffer,int,boolean,boolean,int[])>(r1, i0, z0, 0, $r2);

        return;
    }

    private final void decodeModifiersForMethod(java.lang.StringBuffer, int)
    {
        int[] $r2;
        java.lang.StringBuffer r1;
        int i0;
        org.eclipse.jdt.internal.core.util.Disassembler r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r1 := @parameter0: java.lang.StringBuffer;

        i0 := @parameter1: int;

        $r2 = newarray (int)[10];

        $r2[0] = 1;

        $r2[1] = 4;

        $r2[2] = 2;

        $r2[3] = 1024;

        $r2[4] = 8;

        $r2[5] = 16;

        $r2[6] = 32;

        $r2[7] = 256;

        $r2[8] = 2048;

        $r2[9] = 64;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void decodeModifiers(java.lang.StringBuffer,int,boolean,boolean,int[])>(r1, i0, 0, 1, $r2);

        return;
    }

    private final void decodeModifiersForType(java.lang.StringBuffer, int)
    {
        int[] $r2;
        java.lang.StringBuffer r1;
        int i0;
        org.eclipse.jdt.internal.core.util.Disassembler r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r1 := @parameter0: java.lang.StringBuffer;

        i0 := @parameter1: int;

        $r2 = newarray (int)[3];

        $r2[0] = 1;

        $r2[1] = 1024;

        $r2[2] = 16;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void decodeModifiers(java.lang.StringBuffer,int,int[])>(r1, i0, $r2);

        return;
    }

    public static java.lang.String escapeString(java.lang.String)
    {
        java.lang.StringBuffer $r3;
        int $i0, i2, $i3;
        char $c1;
        java.lang.String r1, $r2;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        i2 = 0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        goto label17;

     label01:
        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        $i3 = (int) $c1;

        tableswitch($i3)
        {
            case 0: goto label07;
            case 1: goto label08;
            case 2: goto label09;
            case 3: goto label10;
            case 4: goto label11;
            case 5: goto label12;
            case 6: goto label13;
            case 7: goto label14;
            case 8: goto label02;
            case 9: goto label03;
            case 10: goto label04;
            case 11: goto label15;
            case 12: goto label05;
            case 13: goto label06;
            default: goto label15;
        };

     label02:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\b");

        goto label16;

     label03:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\t");

        goto label16;

     label04:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\n");

        goto label16;

     label05:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\f");

        goto label16;

     label06:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\r");

        goto label16;

     label07:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\0");

        goto label16;

     label08:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\1");

        goto label16;

     label09:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\2");

        goto label16;

     label10:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\3");

        goto label16;

     label11:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\4");

        goto label16;

     label12:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\5");

        goto label16;

     label13:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\6");

        goto label16;

     label14:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\7");

        goto label16;

     label15:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

     label16:
        i2 = i2 + 1;

     label17:
        if i2 < $i0 goto label01;

        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    static java.lang.String decodeStringValue(char[])
    {
        java.lang.StringBuffer $r3;
        int i0, i2, $i3;
        char[] r1;
        char c1;
        java.lang.String $r2;

        r1 := @parameter0: char[];

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        i2 = 0;

        i0 = lengthof r1;

        goto label17;

     label01:
        c1 = r1[i2];

        $i3 = (int) c1;

        tableswitch($i3)
        {
            case 0: goto label07;
            case 1: goto label08;
            case 2: goto label09;
            case 3: goto label10;
            case 4: goto label11;
            case 5: goto label12;
            case 6: goto label13;
            case 7: goto label14;
            case 8: goto label02;
            case 9: goto label03;
            case 10: goto label04;
            case 11: goto label15;
            case 12: goto label05;
            case 13: goto label06;
            default: goto label15;
        };

     label02:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\b");

        goto label16;

     label03:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\t");

        goto label16;

     label04:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\n");

        goto label16;

     label05:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\f");

        goto label16;

     label06:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\r");

        goto label16;

     label07:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\0");

        goto label16;

     label08:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\1");

        goto label16;

     label09:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\2");

        goto label16;

     label10:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\3");

        goto label16;

     label11:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\4");

        goto label16;

     label12:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\5");

        goto label16;

     label13:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\6");

        goto label16;

     label14:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\7");

        goto label16;

     label15:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c1);

     label16:
        i2 = i2 + 1;

     label17:
        if i2 < i0 goto label01;

        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    static java.lang.String decodeStringValue(java.lang.String)
    {
        char[] $r1;
        java.lang.String r0, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        $r2 = staticinvoke <org.eclipse.jdt.internal.core.util.Disassembler: java.lang.String decodeStringValue(char[])>($r1);

        return $r2;
    }

    public java.lang.String disassemble(byte[], java.lang.String) throws org.eclipse.jdt.core.util.ClassFormatException
    {
        java.io.PrintWriter $r13;
        java.lang.Throwable $r15;
        byte[] r2;
        java.io.StringWriter $r12;
        org.eclipse.jdt.internal.core.util.ClassFileReader $r11;
        org.eclipse.jdt.internal.core.util.Disassembler r0;
        java.lang.ArrayIndexOutOfBoundsException $r5;
        java.lang.StringBuffer $r9;
        org.eclipse.jdt.core.util.ClassFormatException $r14;
        int $i1;
        java.lang.String r3, $r4, $r10;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r2 := @parameter0: byte[];

        r3 := @parameter1: java.lang.String;

     label1:
        $r11 = new org.eclipse.jdt.internal.core.util.ClassFileReader;

        $i1 = (int) 65535;

        specialinvoke $r11.<org.eclipse.jdt.internal.core.util.ClassFileReader: void <init>(byte[],int)>(r2, $i1);

        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: java.lang.String disassemble(org.eclipse.jdt.core.util.IClassFileReader,java.lang.String,int)>($r11, r3, 2);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r12 = new java.io.StringWriter;

        specialinvoke $r12.<java.io.StringWriter: void <init>()>();

        $r13 = new java.io.PrintWriter;

        specialinvoke $r13.<java.io.PrintWriter: void <init>(java.io.Writer)>($r12);

        virtualinvoke $r5.<java.lang.ArrayIndexOutOfBoundsException: void printStackTrace(java.io.PrintWriter)>($r13);

        virtualinvoke $r13.<java.io.PrintWriter: void flush()>();

        virtualinvoke $r13.<java.io.PrintWriter: void close()>();

        $r14 = new org.eclipse.jdt.core.util.ClassFormatException;

        $r9 = virtualinvoke $r12.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9);

        specialinvoke $r14.<org.eclipse.jdt.core.util.ClassFormatException: void <init>(java.lang.String)>($r10);

        $r15 = (java.lang.Throwable) $r14;

        throw $r15;

        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label3;
    }

    public java.lang.String disassemble(byte[], java.lang.String, int) throws org.eclipse.jdt.core.util.ClassFormatException
    {
        java.io.PrintWriter $r13;
        java.lang.Throwable $r15;
        byte[] r2;
        java.io.StringWriter $r12;
        org.eclipse.jdt.internal.core.util.ClassFileReader $r11;
        org.eclipse.jdt.internal.core.util.Disassembler r0;
        java.lang.ArrayIndexOutOfBoundsException $r5;
        java.lang.StringBuffer $r9;
        int i0, $i2;
        org.eclipse.jdt.core.util.ClassFormatException $r14;
        java.lang.String r3, $r4, $r10;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r2 := @parameter0: byte[];

        r3 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

     label1:
        $r11 = new org.eclipse.jdt.internal.core.util.ClassFileReader;

        $i2 = (int) 65535;

        specialinvoke $r11.<org.eclipse.jdt.internal.core.util.ClassFileReader: void <init>(byte[],int)>(r2, $i2);

        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: java.lang.String disassemble(org.eclipse.jdt.core.util.IClassFileReader,java.lang.String,int)>($r11, r3, i0);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r12 = new java.io.StringWriter;

        specialinvoke $r12.<java.io.StringWriter: void <init>()>();

        $r13 = new java.io.PrintWriter;

        specialinvoke $r13.<java.io.PrintWriter: void <init>(java.io.Writer)>($r12);

        virtualinvoke $r5.<java.lang.ArrayIndexOutOfBoundsException: void printStackTrace(java.io.PrintWriter)>($r13);

        virtualinvoke $r13.<java.io.PrintWriter: void flush()>();

        virtualinvoke $r13.<java.io.PrintWriter: void close()>();

        $r14 = new org.eclipse.jdt.core.util.ClassFormatException;

        $r9 = virtualinvoke $r12.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9);

        specialinvoke $r14.<org.eclipse.jdt.core.util.ClassFormatException: void <init>(java.lang.String)>($r10);

        $r15 = (java.lang.Throwable) $r14;

        throw $r15;

        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label3;
    }

    private void disassemble(org.eclipse.jdt.core.util.IAnnotation, java.lang.StringBuffer, java.lang.String, int, int)
    {
        java.lang.String[] $r6;
        org.eclipse.jdt.internal.core.util.Disassembler r0;
        org.eclipse.jdt.core.util.IAnnotationComponent[] $r13;
        java.lang.StringBuffer r1;
        int i0, $i1, $i2, i3, i4, $i5, $i6, i7;
        java.lang.String r2, $r7, $r8, $r9, $r12, $r15;
        org.eclipse.jdt.core.util.IAnnotationComponent $r14;
        org.eclipse.jdt.core.util.IAnnotation r3;
        char[] $r4, $r5, $r10, $r11;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r3 := @parameter0: org.eclipse.jdt.core.util.IAnnotation;

        r1 := @parameter1: java.lang.StringBuffer;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i3 := @parameter4: int;

        $i1 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i1);

        $i2 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IAnnotation: int getTypeIndex()>();

        $r4 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IAnnotation: char[] getTypeName()>();

        $r5 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] replaceOnCopy(char[],char,char)>($r4, 47, 46);

        $r7 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_annotationentrystart>;

        $r6 = newarray (java.lang.String)[2];

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        $r6[0] = $r8;

        $r9 = new java.lang.String;

        $r10 = staticinvoke <org.eclipse.jdt.core.Signature: char[] toCharArray(char[])>($r5);

        $r11 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: char[] returnClassName(char[],char,int)>($r10, 46, i3);

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r11);

        $r6[1] = $r9;

        $r12 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r7, $r6);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r13 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IAnnotation: org.eclipse.jdt.core.util.IAnnotationComponent[] getComponents()>();

        i7 = 0;

        i4 = lengthof $r13;

        goto label2;

     label1:
        $r14 = $r13[i7];

        $i5 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IAnnotationComponent,java.lang.StringBuffer,java.lang.String,int,int)>($r14, r1, r2, $i5, i3);

        i7 = i7 + 1;

     label2:
        if i7 < i4 goto label1;

        $i6 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i6);

        $r15 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_annotationentryend>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        return;
    }

    private void disassemble(org.eclipse.jdt.core.util.IAnnotationComponent, java.lang.StringBuffer, java.lang.String, int, int)
    {
        java.lang.String[] $r3;
        org.eclipse.jdt.internal.core.util.Disassembler r0;
        org.eclipse.jdt.core.util.IAnnotationComponentValue $r10;
        java.lang.StringBuffer r1;
        int i0, $i1, $i2, i3, $i4;
        java.lang.String r2, $r5, $r6, $r7, $r9;
        org.eclipse.jdt.core.util.IAnnotationComponent r4;
        char[] $r8;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r4 := @parameter0: org.eclipse.jdt.core.util.IAnnotationComponent;

        r1 := @parameter1: java.lang.StringBuffer;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i3 := @parameter4: int;

        $i1 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i1);

        $r5 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_annotationcomponent>;

        $r3 = newarray (java.lang.String)[2];

        $i2 = interfaceinvoke r4.<org.eclipse.jdt.core.util.IAnnotationComponent: int getComponentNameIndex()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        $r3[0] = $r6;

        $r7 = new java.lang.String;

        $r8 = interfaceinvoke r4.<org.eclipse.jdt.core.util.IAnnotationComponent: char[] getComponentName()>();

        specialinvoke $r7.<java.lang.String: void <init>(char[])>($r8);

        $r3[1] = $r7;

        $r9 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r5, $r3);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r10 = interfaceinvoke r4.<org.eclipse.jdt.core.util.IAnnotationComponent: org.eclipse.jdt.core.util.IAnnotationComponentValue getComponentValue()>();

        $i4 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IAnnotationComponentValue,java.lang.StringBuffer,java.lang.String,int,int)>($r10, r1, r2, $i4, i3);

        return;
    }

    private void disassemble(org.eclipse.jdt.core.util.IAnnotationComponentValue, java.lang.StringBuffer, java.lang.String, int, int)
    {
        org.eclipse.jdt.core.util.IAnnotationComponentValue[] $r26;
        org.eclipse.jdt.core.util.IAnnotationComponentValue r0, $r28;
        long $l11;
        org.eclipse.jdt.internal.core.util.Disassembler r10;
        java.lang.StringBuffer r4, $r31, $r33, $r34, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r49, $r50;
        java.lang.String $r6, $r7, $r8, $r9, $r13, $r14, $r19, $r20, $r21, $r24, $r25, r27, $r29, $r32, $r35, $r48, $r51, r53, $r54, $r55, $r56;
        org.eclipse.jdt.core.util.IAnnotation $r52;
        char[] $r1, $r2, $r3, $r11, $r12, $r16, $r17, $r22, $r23, $r47;
        org.eclipse.jdt.core.util.IConstantPoolEntry $r15, $r30;
        float $f0;
        java.lang.String[] $r5, $r18;
        int $i0, $i1, $i2, i3, $i4, i5, i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i18, $i19, i20;
        double $d0;
        char $c17;

        r10 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r0 := @parameter0: org.eclipse.jdt.core.util.IAnnotationComponentValue;

        r4 := @parameter1: java.lang.StringBuffer;

        r27 := @parameter2: java.lang.String;

        i6 := @parameter3: int;

        i3 := @parameter4: int;

        $i0 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IAnnotationComponentValue: int getTag()>();

        lookupswitch($i0)
        {
            case 64: goto label18;
            case 66: goto label01;
            case 67: goto label01;
            case 68: goto label01;
            case 70: goto label01;
            case 73: goto label01;
            case 74: goto label01;
            case 83: goto label01;
            case 90: goto label01;
            case 91: goto label19;
            case 99: goto label17;
            case 101: goto label16;
            case 115: goto label01;
            default: goto label22;
        };

     label01:
        $r30 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IAnnotationComponentValue: org.eclipse.jdt.core.util.IConstantPoolEntry getConstantValue()>();

        r53 = null;

        $i10 = interfaceinvoke $r30.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getKind()>();

        tableswitch($i10)
        {
            case 1: goto label14;
            case 2: goto label15;
            case 3: goto label05;
            case 4: goto label03;
            case 5: goto label02;
            case 6: goto label04;
            default: goto label15;
        };

     label02:
        $r31 = new java.lang.StringBuffer;

        $l11 = interfaceinvoke $r30.<org.eclipse.jdt.core.util.IConstantPoolEntry: long getLongValue()>();

        $r32 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l11);

        specialinvoke $r31.<java.lang.StringBuffer: void <init>(java.lang.String)>($r32);

        $r33 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("L");

        r53 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label15;

     label03:
        $r34 = new java.lang.StringBuffer;

        $f0 = interfaceinvoke $r30.<org.eclipse.jdt.core.util.IConstantPoolEntry: float getFloatValue()>();

        $r35 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f0);

        specialinvoke $r34.<java.lang.StringBuffer: void <init>(java.lang.String)>($r35);

        $r36 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("f");

        r53 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label15;

     label04:
        $d0 = interfaceinvoke $r30.<org.eclipse.jdt.core.util.IConstantPoolEntry: double getDoubleValue()>();

        r53 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        goto label15;

     label05:
        $i12 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IAnnotationComponentValue: int getTag()>();

        lookupswitch($i12)
        {
            case 66: goto label10;
            case 67: goto label06;
            case 73: goto label12;
            case 83: goto label11;
            case 90: goto label07;
            default: goto label13;
        };

     label06:
        $r41 = new java.lang.StringBuffer;

        specialinvoke $r41.<java.lang.StringBuffer: void <init>(java.lang.String)>("\'");

        $i16 = interfaceinvoke $r30.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getIntegerValue()>();

        $c17 = (char) $i16;

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c17);

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        r53 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label15;

     label07:
        $i13 = interfaceinvoke $r30.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getIntegerValue()>();

        if $i13 != 1 goto label08;

        $r54 = "true";

        goto label09;

     label08:
        $r54 = "false";

     label09:
        r53 = $r54;

        goto label15;

     label10:
        $r44 = new java.lang.StringBuffer;

        specialinvoke $r44.<java.lang.StringBuffer: void <init>(java.lang.String)>("(byte) ");

        $i18 = interfaceinvoke $r30.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getIntegerValue()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i18);

        r53 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label15;

     label11:
        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>(java.lang.String)>("(short) ");

        $i14 = interfaceinvoke $r30.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getIntegerValue()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i14);

        r53 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label15;

     label12:
        $r39 = new java.lang.StringBuffer;

        specialinvoke $r39.<java.lang.StringBuffer: void <init>(java.lang.String)>("(int) ");

        $i15 = interfaceinvoke $r30.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getIntegerValue()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i15);

        r53 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.String toString()>();

     label13:
        goto label15;

     label14:
        $r46 = new java.lang.StringBuffer;

        specialinvoke $r46.<java.lang.StringBuffer: void <init>(java.lang.String)>("\"");

        $r47 = interfaceinvoke $r30.<org.eclipse.jdt.core.util.IConstantPoolEntry: char[] getUtf8Value()>();

        $r48 = staticinvoke <org.eclipse.jdt.internal.core.util.Disassembler: java.lang.String decodeStringValue(char[])>($r47);

        $r49 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        r53 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.String toString()>();

     label15:
        $r55 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_annotationdefaultvalue>;

        $r56 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object)>($r55, r53);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r56);

        goto label22;

     label16:
        $i1 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IAnnotationComponentValue: int getEnumConstantTypeNameIndex()>();

        $r1 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IAnnotationComponentValue: char[] getEnumConstantTypeName()>();

        $r2 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] replaceOnCopy(char[],char,char)>($r1, 47, 46);

        $i2 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IAnnotationComponentValue: int getEnumConstantNameIndex()>();

        $r3 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IAnnotationComponentValue: char[] getEnumConstantName()>();

        $r6 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_annotationenumvalue>;

        $r5 = newarray (java.lang.String)[4];

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $r5[0] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        $r5[1] = $r8;

        $r9 = new java.lang.String;

        $r11 = staticinvoke <org.eclipse.jdt.core.Signature: char[] toCharArray(char[])>($r2);

        $r12 = specialinvoke r10.<org.eclipse.jdt.internal.core.util.Disassembler: char[] returnClassName(char[],char,int)>($r11, 46, i3);

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r12);

        $r5[2] = $r9;

        $r13 = new java.lang.String;

        specialinvoke $r13.<java.lang.String: void <init>(char[])>($r3);

        $r5[3] = $r13;

        $r14 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r6, $r5);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        goto label22;

     label17:
        $i4 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IAnnotationComponentValue: int getClassInfoIndex()>();

        $r15 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IAnnotationComponentValue: org.eclipse.jdt.core.util.IConstantPoolEntry getClassInfo()>();

        $r16 = interfaceinvoke $r15.<org.eclipse.jdt.core.util.IConstantPoolEntry: char[] getUtf8Value()>();

        $r17 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] replaceOnCopy(char[],char,char)>($r16, 47, 46);

        $r19 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_annotationclassvalue>;

        $r18 = newarray (java.lang.String)[2];

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        $r18[0] = $r20;

        $r21 = new java.lang.String;

        $r22 = staticinvoke <org.eclipse.jdt.core.Signature: char[] toCharArray(char[])>($r17);

        $r23 = specialinvoke r10.<org.eclipse.jdt.internal.core.util.Disassembler: char[] returnClassName(char[],char,int)>($r22, 46, i3);

        specialinvoke $r21.<java.lang.String: void <init>(char[])>($r23);

        $r18[1] = $r21;

        $r24 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r19, $r18);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        goto label22;

     label18:
        $r51 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_annotationannotationvalue>;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r51);

        $r52 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IAnnotationComponentValue: org.eclipse.jdt.core.util.IAnnotation getAnnotationValue()>();

        $i19 = i6 + 1;

        specialinvoke r10.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IAnnotation,java.lang.StringBuffer,java.lang.String,int,int)>($r52, r4, r27, $i19, i3);

        goto label22;

     label19:
        $r25 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_annotationarrayvaluestart>;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r26 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IAnnotationComponentValue: org.eclipse.jdt.core.util.IAnnotationComponentValue[] getAnnotationComponentValues()>();

        i20 = 0;

        i5 = lengthof $r26;

        goto label21;

     label20:
        $i7 = i6 + 1;

        specialinvoke r10.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r4, r27, $i7);

        $r28 = $r26[i20];

        $i8 = i6 + 1;

        specialinvoke r10.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IAnnotationComponentValue,java.lang.StringBuffer,java.lang.String,int,int)>($r28, r4, r27, $i8, i3);

        i20 = i20 + 1;

     label21:
        if i20 < i5 goto label20;

        $i9 = i6 + 1;

        specialinvoke r10.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r4, r27, $i9);

        $r29 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_annotationarrayvalueend>;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

     label22:
        return;
    }

    private void disassemble(org.eclipse.jdt.core.util.IAnnotationDefaultAttribute, java.lang.StringBuffer, java.lang.String, int, int)
    {
        org.eclipse.jdt.internal.core.util.Disassembler r0;
        org.eclipse.jdt.core.util.IAnnotationComponentValue $r5;
        java.lang.StringBuffer r1;
        org.eclipse.jdt.core.util.IAnnotationDefaultAttribute r4;
        int i0, $i1, $i2, i3, $i4;
        java.lang.String r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r4 := @parameter0: org.eclipse.jdt.core.util.IAnnotationDefaultAttribute;

        r1 := @parameter1: java.lang.StringBuffer;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i3 := @parameter4: int;

        $i1 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i1);

        $r3 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_annotationdefaultheader>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = interfaceinvoke r4.<org.eclipse.jdt.core.util.IAnnotationDefaultAttribute: org.eclipse.jdt.core.util.IAnnotationComponentValue getMemberValue()>();

        $i2 = i0 + 2;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i2);

        $i4 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IAnnotationComponentValue,java.lang.StringBuffer,java.lang.String,int,int)>($r5, r1, r2, $i4, i3);

        return;
    }

    private void disassemble(org.eclipse.jdt.core.util.IClassFileAttribute, java.lang.StringBuffer, java.lang.String, int, int)
    {
        java.lang.String[] $r3;
        long $l2;
        org.eclipse.jdt.internal.core.util.Disassembler r0;
        org.eclipse.jdt.core.util.IClassFileAttribute r5;
        java.lang.StringBuffer r1;
        int i0, $i1, i3;
        char[] $r7;
        java.lang.String r2, $r4, $r6, $r8, $r9;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r5 := @parameter0: org.eclipse.jdt.core.util.IClassFileAttribute;

        r1 := @parameter1: java.lang.StringBuffer;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i3 := @parameter4: int;

        $i1 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i1);

        $r6 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_genericattributeheader>;

        $r3 = newarray (java.lang.String)[2];

        $r4 = new java.lang.String;

        $r7 = interfaceinvoke r5.<org.eclipse.jdt.core.util.IClassFileAttribute: char[] getAttributeName()>();

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r7);

        $r3[0] = $r4;

        $l2 = interfaceinvoke r5.<org.eclipse.jdt.core.util.IClassFileAttribute: long getAttributeLength()>();

        $r8 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l2);

        $r3[1] = $r8;

        $r9 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r6, $r3);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        return;
    }

    private void disassembleEnumConstructor(org.eclipse.jdt.core.util.IClassFileReader, char[], org.eclipse.jdt.core.util.IMethodInfo, java.lang.StringBuffer, java.lang.String, int, int)
    {
        char[][] $r12, $r16;
        org.eclipse.jdt.core.util.IClassFileAttribute $r7, $r9;
        org.eclipse.jdt.core.util.IClassFileReader r24;
        boolean z0, $z1, $z2, $z3;
        org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute $r23;
        org.eclipse.jdt.internal.core.util.Disassembler r0;
        org.eclipse.jdt.core.util.ICodeAttribute $r4;
        java.lang.StringBuffer r1, $r19;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i20, i21, i22, $i23;
        org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute $r22;
        java.lang.String r2, $r18, $r20;
        org.eclipse.jdt.core.util.IMethodInfo r3;
        org.eclipse.jdt.core.util.IExceptionAttribute $r14;
        char $c18;
        char[] $r5, $r6, $r8, r10, $r11, $r13, $r15, $r17, $r21;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r24 := @parameter0: org.eclipse.jdt.core.util.IClassFileReader;

        r10 := @parameter1: char[];

        r3 := @parameter2: org.eclipse.jdt.core.util.IMethodInfo;

        r1 := @parameter3: java.lang.StringBuffer;

        r2 := @parameter4: java.lang.String;

        i0 := @parameter5: int;

        i4 := @parameter6: int;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

        $r4 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IMethodInfo: org.eclipse.jdt.core.util.ICodeAttribute getCodeAttribute()>();

        $r5 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IMethodInfo: char[] getDescriptor()>();

        $r6 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] RUNTIME_VISIBLE_ANNOTATIONS>;

        $r7 = staticinvoke <org.eclipse.jdt.internal.core.util.Util: org.eclipse.jdt.core.util.IClassFileAttribute getAttribute(org.eclipse.jdt.core.util.IMethodInfo,char[])>(r3, $r6);

        $r8 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] RUNTIME_INVISIBLE_ANNOTATIONS>;

        $r9 = staticinvoke <org.eclipse.jdt.internal.core.util.Util: org.eclipse.jdt.core.util.IClassFileAttribute getAttribute(org.eclipse.jdt.core.util.IMethodInfo,char[])>(r3, $r8);

        if $r9 == null goto label01;

        $r23 = (org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute) $r9;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleAsModifier(org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute,java.lang.StringBuffer,java.lang.String,int,int)>($r23, r1, r2, i0, i4);

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

     label01:
        if $r7 == null goto label02;

        $r22 = (org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute) $r7;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleAsModifier(org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute,java.lang.StringBuffer,java.lang.String,int,int)>($r22, r1, r2, i0, i4);

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

     label02:
        $i1 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IMethodInfo: int getAccessFlags()>();

        $i2 = $i1 & 2;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void decodeModifiersForMethod(java.lang.StringBuffer,int)>(r1, $i2);

        staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: void replace(char[],char,char)>($r5, 47, 46);

        $i3 = $i1 & 128;

        if $i3 == 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        z0 = $z2;

        $r11 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: char[] returnClassName(char[],char,int)>(r10, 46, 8);

        $r12 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: char[][] getParameterNames(char[],org.eclipse.jdt.core.util.ICodeAttribute,int)>($r5, $r4, $i1);

        $z1 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i4, 8);

        if $z1 == 0 goto label05;

        $z3 = 0;

        goto label06;

     label05:
        $z3 = 1;

     label06:
        $r13 = staticinvoke <org.eclipse.jdt.core.Signature: char[] toCharArray(char[],char[],char[][],boolean,boolean,boolean)>($r5, $r11, $r12, $z3, 0, z0);

        $i5 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int indexOf(char,char[])>(44, $r13);

        $i6 = $i5 + 1;

        $i7 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int indexOf(char,char[],int)>(44, $r13, $i6);

        $i8 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int indexOf(char,char[])>(40, $r13);

        $i9 = $i8 + 1;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>($r13, 0, $i9);

        $i13 = $i7 + 2;

        $i10 = lengthof $r13;

        $i11 = $i10 - $i7;

        $i12 = $i11 - 2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>($r13, $i13, $i12);

        $r14 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IMethodInfo: org.eclipse.jdt.core.util.IExceptionAttribute getExceptionAttribute()>();

        if $r14 == null goto label10;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" throws ");

        $r16 = interfaceinvoke $r14.<org.eclipse.jdt.core.util.IExceptionAttribute: char[][] getExceptionNames()>();

        i21 = lengthof $r16;

        i22 = 0;

        goto label09;

     label07:
        if i22 == 0 goto label08;

        $r18 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_comma>;

        $r19 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_space>;

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

     label08:
        $r21 = $r16[i22];

        staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: void replace(char[],char,char)>($r21, 47, 46);

        $r17 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: char[] returnClassName(char[],char,int)>($r21, 46, i4);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r17);

        i22 = i22 + 1;

     label09:
        if i22 < i21 goto label07;

     label10:
        $i14 = $i1 & 256;

        if $i14 != 0 goto label16;

        $i15 = $i1 & 1024;

        if $i15 != 0 goto label16;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" {");

        $r15 = staticinvoke <org.eclipse.jdt.core.Signature: char[] getReturnType(char[])>($r5);

        $i16 = lengthof $r15;

        if $i16 != 1 goto label14;

        $c18 = $r15[0];

        $i23 = (int) $c18;

        lookupswitch($i23)
        {
            case 66: goto label12;
            case 67: goto label12;
            case 68: goto label12;
            case 70: goto label12;
            case 73: goto label12;
            case 74: goto label12;
            case 83: goto label12;
            case 86: goto label11;
            default: goto label13;
        };

     label11:
        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

        goto label15;

     label12:
        $i19 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i19);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return 0;");

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

        goto label15;

     label13:
        $i20 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i20);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return false;");

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

        goto label15;

     label14:
        $i17 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i17);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return null;");

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

     label15:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        goto label17;

     label16:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

     label17:
        return;
    }

    private void disassemble(org.eclipse.jdt.core.util.IClassFileReader, char[], org.eclipse.jdt.core.util.IMethodInfo, java.lang.StringBuffer, java.lang.String, int, int)
    {
        java.lang.StringBuffer r1, $r38, $r83;
        org.eclipse.jdt.core.util.IExceptionAttribute $r79;
        org.eclipse.jdt.core.util.IClassFileAttribute $r7, $r10, $r12, $r14, $r16, $r18, r80;
        org.eclipse.jdt.core.util.IClassFileReader r75;
        org.eclipse.jdt.core.util.IClassFileAttribute[] $r22;
        org.eclipse.jdt.core.util.ISignatureAttribute r8;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23, i24, i25, $i26, $i27, $i28, i29, i30, i31, i32, $i34, $i35;
        org.eclipse.jdt.core.util.IMethodInfo r3;
        char[][] $r20, $r35, $r48, $r53, $r56;
        org.eclipse.jdt.internal.core.util.Disassembler r0;
        java.lang.String r2, $r21, $r37, $r39, $r49, $r50, $r57, $r61, $r62, $r64, $r66, $r67, $r68, $r69, $r71, $r73, $r74, $r81, $r82;
        org.eclipse.jdt.core.util.IParameterAnnotation[] $r44, $r45;
        char[] $r5, $r6, $r9, $r11, $r13, $r15, $r17, $r19, $r28, $r29, $r30, $r31, $r32, $r36, $r40, $r46, $r47, r51, $r52, $r54, $r55, $r72, r76;
        org.eclipse.jdt.core.util.IRuntimeVisibleParameterAnnotationsAttribute $r24, $r43, r78;
        org.eclipse.jdt.core.util.IAnnotationDefaultAttribute $r27, $r33, $r34;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24;
        org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute $r25, $r59;
        java.lang.String[] $r60, $r65;
        org.eclipse.jdt.core.util.ICodeAttribute $r4;
        org.eclipse.jdt.core.util.IRuntimeInvisibleParameterAnnotationsAttribute $r23, $r42, r77;
        org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute $r26, $r58;
        char $c6;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r75 := @parameter0: org.eclipse.jdt.core.util.IClassFileReader;

        r51 := @parameter1: char[];

        r3 := @parameter2: org.eclipse.jdt.core.util.IMethodInfo;

        r1 := @parameter3: java.lang.StringBuffer;

        r2 := @parameter4: java.lang.String;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

        $r4 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IMethodInfo: org.eclipse.jdt.core.util.ICodeAttribute getCodeAttribute()>();

        $r5 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IMethodInfo: char[] getDescriptor()>();

        $r6 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] SIGNATURE>;

        $r7 = staticinvoke <org.eclipse.jdt.internal.core.util.Util: org.eclipse.jdt.core.util.IClassFileAttribute getAttribute(org.eclipse.jdt.core.util.IMethodInfo,char[])>(r3, $r6);

        r8 = (org.eclipse.jdt.core.util.ISignatureAttribute) $r7;

        $r9 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] RUNTIME_VISIBLE_ANNOTATIONS>;

        $r10 = staticinvoke <org.eclipse.jdt.internal.core.util.Util: org.eclipse.jdt.core.util.IClassFileAttribute getAttribute(org.eclipse.jdt.core.util.IMethodInfo,char[])>(r3, $r9);

        $r11 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] RUNTIME_INVISIBLE_ANNOTATIONS>;

        $r12 = staticinvoke <org.eclipse.jdt.internal.core.util.Util: org.eclipse.jdt.core.util.IClassFileAttribute getAttribute(org.eclipse.jdt.core.util.IMethodInfo,char[])>(r3, $r11);

        $r13 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS>;

        $r14 = staticinvoke <org.eclipse.jdt.internal.core.util.Util: org.eclipse.jdt.core.util.IClassFileAttribute getAttribute(org.eclipse.jdt.core.util.IMethodInfo,char[])>(r3, $r13);

        $r15 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS>;

        $r16 = staticinvoke <org.eclipse.jdt.internal.core.util.Util: org.eclipse.jdt.core.util.IClassFileAttribute getAttribute(org.eclipse.jdt.core.util.IMethodInfo,char[])>(r3, $r15);

        $r17 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] ANNOTATION_DEFAULT>;

        $r18 = staticinvoke <org.eclipse.jdt.internal.core.util.Util: org.eclipse.jdt.core.util.IClassFileAttribute getAttribute(org.eclipse.jdt.core.util.IMethodInfo,char[])>(r3, $r17);

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i1, 5);

        if $z0 == 0 goto label03;

        $r61 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String classfileformat_methoddescriptor>;

        $r60 = newarray (java.lang.String)[2];

        $i17 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IMethodInfo: int getDescriptorIndex()>();

        $r62 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i17);

        $r60[0] = $r62;

        $r81 = new java.lang.String;

        specialinvoke $r81.<java.lang.String: void <init>(char[])>($r5);

        $r60[1] = $r81;

        $r64 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r61, $r60);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r64);

        $z12 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IMethodInfo: boolean isDeprecated()>();

        if $z12 == 0 goto label01;

        $r74 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_deprecated>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r74);

     label01:
        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

        if r8 == null goto label02;

        $r71 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_signatureattributeheader>;

        $r82 = new java.lang.String;

        $r72 = interfaceinvoke r8.<org.eclipse.jdt.core.util.ISignatureAttribute: char[] getSignature()>();

        specialinvoke $r82.<java.lang.String: void <init>(char[])>($r72);

        $r73 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object)>($r71, $r82);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r73);

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

     label02:
        if $r4 == null goto label03;

        $r66 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String classfileformat_stacksAndLocals>;

        $r65 = newarray (java.lang.String)[2];

        $i18 = interfaceinvoke $r4.<org.eclipse.jdt.core.util.ICodeAttribute: int getMaxStack()>();

        $r67 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i18);

        $r65[0] = $r67;

        $i19 = interfaceinvoke $r4.<org.eclipse.jdt.core.util.ICodeAttribute: int getMaxLocals()>();

        $r68 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i19);

        $r65[1] = $r68;

        $r69 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r66, $r65);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r69);

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

     label03:
        $z13 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i1, 1);

        if $z13 == 0 goto label05;

        if $r12 == null goto label04;

        $r59 = (org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute) $r12;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleAsModifier(org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute,java.lang.StringBuffer,java.lang.String,int,int)>($r59, r1, r2, i0, i1);

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

     label04:
        if $r10 == null goto label05;

        $r58 = (org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute) $r10;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleAsModifier(org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute,java.lang.StringBuffer,java.lang.String,int,int)>($r58, r1, r2, i0, i1);

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

     label05:
        $i20 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IMethodInfo: int getAccessFlags()>();

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void decodeModifiersForMethod(java.lang.StringBuffer,int)>(r1, $i20);

        $z14 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IMethodInfo: boolean isSynthetic()>();

        if $z14 == 0 goto label06;

        $z11 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i1, 16);

        if $z11 != 0 goto label06;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("synthetic");

        $r57 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_space>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r57);

     label06:
        staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: void replace(char[],char,char)>($r5, 47, 46);

        $z15 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: boolean isVarArgs(org.eclipse.jdt.core.util.IMethodInfo)>(r3);

        $z16 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IMethodInfo: boolean isConstructor()>();

        if $z16 == 0 goto label12;

        $z8 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i1, 16);

        if $z8 == 0 goto label09;

        if r8 == null goto label09;

        $r54 = interfaceinvoke r8.<org.eclipse.jdt.core.util.ISignatureAttribute: char[] getSignature()>();

        staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: void replace(char[],char,char)>($r54, 47, 46);

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleGenericSignature(int,java.lang.StringBuffer,char[])>(i1, r1, $r54);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r55 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: char[] returnClassName(char[],char,int)>(r51, 46, 8);

        $r56 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: char[][] getParameterNames(char[],org.eclipse.jdt.core.util.ICodeAttribute,int)>($r5, $r4, $i20);

        $z10 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i1, 8);

        if $z10 == 0 goto label07;

        $z17 = 0;

        goto label08;

     label07:
        $z17 = 1;

     label08:
        r76 = staticinvoke <org.eclipse.jdt.core.Signature: char[] toCharArray(char[],char[],char[][],boolean,boolean,boolean)>($r54, $r55, $r56, $z17, 0, $z15);

        goto label19;

     label09:
        $r52 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: char[] returnClassName(char[],char,int)>(r51, 46, 8);

        $r53 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: char[][] getParameterNames(char[],org.eclipse.jdt.core.util.ICodeAttribute,int)>($r5, $r4, $i20);

        $z9 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i1, 8);

        if $z9 == 0 goto label10;

        $z18 = 0;

        goto label11;

     label10:
        $z18 = 1;

     label11:
        r76 = staticinvoke <org.eclipse.jdt.core.Signature: char[] toCharArray(char[],char[],char[][],boolean,boolean,boolean)>($r5, $r52, $r53, $z18, 0, $z15);

        goto label19;

     label12:
        $z1 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IMethodInfo: boolean isClinit()>();

        if $z1 == 0 goto label13;

        $r49 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String classfileformat_clinitname>;

        $r50 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String)>($r49);

        r76 = virtualinvoke $r50.<java.lang.String: char[] toCharArray()>();

        goto label19;

     label13:
        $z2 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i1, 16);

        if $z2 == 0 goto label16;

        if r8 == null goto label16;

        $r46 = interfaceinvoke r8.<org.eclipse.jdt.core.util.ISignatureAttribute: char[] getSignature()>();

        staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: void replace(char[],char,char)>($r46, 47, 46);

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleGenericSignature(int,java.lang.StringBuffer,char[])>(i1, r1, $r46);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r47 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IMethodInfo: char[] getName()>();

        $r48 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: char[][] getParameterNames(char[],org.eclipse.jdt.core.util.ICodeAttribute,int)>($r5, $r4, $i20);

        $z7 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i1, 8);

        if $z7 == 0 goto label14;

        $z19 = 0;

        goto label15;

     label14:
        $z19 = 1;

     label15:
        r76 = staticinvoke <org.eclipse.jdt.core.Signature: char[] toCharArray(char[],char[],char[][],boolean,boolean,boolean)>($r46, $r47, $r48, $z19, 1, $z15);

        goto label19;

     label16:
        $r19 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IMethodInfo: char[] getName()>();

        $r20 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: char[][] getParameterNames(char[],org.eclipse.jdt.core.util.ICodeAttribute,int)>($r5, $r4, $i20);

        $z3 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i1, 8);

        if $z3 == 0 goto label17;

        $z20 = 0;

        goto label18;

     label17:
        $z20 = 1;

     label18:
        r76 = staticinvoke <org.eclipse.jdt.core.Signature: char[] toCharArray(char[],char[],char[][],boolean,boolean,boolean)>($r5, $r19, $r20, $z20, 1, $z15);

     label19:
        $z21 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i1, 1);

        if $z21 == 0 goto label32;

        if $r16 != null goto label20;

        if $r14 == null goto label32;

     label20:
        $i34 = (int) -1;

        i21 = $i34;

        if $r16 == null goto label21;

        r77 = (org.eclipse.jdt.core.util.IRuntimeInvisibleParameterAnnotationsAttribute) $r16;

        $r45 = interfaceinvoke r77.<org.eclipse.jdt.core.util.IRuntimeInvisibleParameterAnnotationsAttribute: org.eclipse.jdt.core.util.IParameterAnnotation[] getParameterAnnotations()>();

        i21 = lengthof $r45;

     label21:
        if $r14 == null goto label22;

        r78 = (org.eclipse.jdt.core.util.IRuntimeVisibleParameterAnnotationsAttribute) $r14;

        $r44 = interfaceinvoke r78.<org.eclipse.jdt.core.util.IRuntimeVisibleParameterAnnotationsAttribute: org.eclipse.jdt.core.util.IParameterAnnotation[] getParameterAnnotations()>();

        i21 = lengthof $r44;

     label22:
        $i9 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int indexOf(char,char[])>(40, r76);

        $i16 = $i9 + 1;

        i22 = $i16;

        $r83 = new java.lang.StringBuffer;

        specialinvoke $r83.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r83.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>(r76, 0, $i16);

        i23 = 0;

        goto label31;

     label23:
        if i23 <= 0 goto label24;

        virtualinvoke $r83.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label24:
        $i10 = virtualinvoke $r83.<java.lang.StringBuffer: int length()>();

        i24 = $i10;

        if $r14 == null goto label25;

        $r43 = (org.eclipse.jdt.core.util.IRuntimeVisibleParameterAnnotationsAttribute) $r14;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleAsModifier(org.eclipse.jdt.core.util.IRuntimeVisibleParameterAnnotationsAttribute,java.lang.StringBuffer,int,java.lang.String,int,int)>($r43, $r83, i23, r2, i0, i1);

     label25:
        if $r16 == null goto label27;

        $i15 = virtualinvoke $r83.<java.lang.StringBuffer: int length()>();

        if $i15 == $i10 goto label26;

        virtualinvoke $r83.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        i24 = virtualinvoke $r83.<java.lang.StringBuffer: int length()>();

     label26:
        $r42 = (org.eclipse.jdt.core.util.IRuntimeInvisibleParameterAnnotationsAttribute) $r16;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleAsModifier(org.eclipse.jdt.core.util.IRuntimeInvisibleParameterAnnotationsAttribute,java.lang.StringBuffer,int,java.lang.String,int,int)>($r42, $r83, i23, r2, i0, i1);

     label27:
        if i23 != 0 goto label28;

        $i14 = virtualinvoke $r83.<java.lang.StringBuffer: int length()>();

        if $i14 == i24 goto label28;

        virtualinvoke $r83.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label28:
        i25 = i22;

        $i26 = i22 + 1;

        $i27 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int indexOf(char,char[],int)>(44, r76, $i26);

        $i28 = $i27 + 1;

        i22 = $i28;

        if $i28 != 0 goto label29;

        $i12 = lengthof r76;

        $i13 = $i12 - i25;

        virtualinvoke $r83.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>(r76, i25, $i13);

        goto label30;

     label29:
        $i11 = $i28 - i25;

        virtualinvoke $r83.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>(r76, i25, $i11);

     label30:
        i23 = i23 + 1;

     label31:
        if i23 < i21 goto label23;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>($r83);

        goto label33;

     label32:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>(r76);

     label33:
        $r79 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IMethodInfo: org.eclipse.jdt.core.util.IExceptionAttribute getExceptionAttribute()>();

        if $r79 == null goto label37;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" throws ");

        $r35 = interfaceinvoke $r79.<org.eclipse.jdt.core.util.IExceptionAttribute: char[][] getExceptionNames()>();

        i29 = lengthof $r35;

        i30 = 0;

        goto label36;

     label34:
        if i30 == 0 goto label35;

        $r37 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_comma>;

        $r38 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r37);

        $r39 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_space>;

        virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r39);

     label35:
        $r40 = $r35[i30];

        staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: void replace(char[],char,char)>($r40, 47, 46);

        $r36 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: char[] returnClassName(char[],char,int)>($r40, 46, i1);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r36);

        i30 = i30 + 1;

     label36:
        if i30 < i29 goto label34;

     label37:
        $z4 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i1, 1);

        if $z4 == 0 goto label38;

        if $r18 == null goto label38;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" default ");

        $r34 = (org.eclipse.jdt.core.util.IAnnotationDefaultAttribute) $r18;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleAsModifier(org.eclipse.jdt.core.util.IAnnotationDefaultAttribute,java.lang.StringBuffer,java.lang.String,int,int)>($r34, r1, r2, i0, i1);

     label38:
        $z22 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i1, 16);

        if $z22 == 0 goto label46;

        if $r18 == null goto label39;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" default ");

        $r33 = (org.eclipse.jdt.core.util.IAnnotationDefaultAttribute) $r18;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleAsModifier(org.eclipse.jdt.core.util.IAnnotationDefaultAttribute,java.lang.StringBuffer,java.lang.String,int,int)>($r33, r1, r2, i0, i1);

     label39:
        $i2 = $i20 & 256;

        if $i2 != 0 goto label45;

        $i3 = $i20 & 1024;

        if $i3 != 0 goto label45;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" {");

        $r32 = staticinvoke <org.eclipse.jdt.core.Signature: char[] getReturnType(char[])>($r5);

        $i4 = lengthof $r32;

        if $i4 != 1 goto label43;

        $c6 = $r32[0];

        $i35 = (int) $c6;

        lookupswitch($i35)
        {
            case 66: goto label41;
            case 67: goto label41;
            case 68: goto label41;
            case 70: goto label41;
            case 73: goto label41;
            case 74: goto label41;
            case 83: goto label41;
            case 86: goto label40;
            default: goto label42;
        };

     label40:
        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

        goto label44;

     label41:
        $i7 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i7);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return 0;");

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

        goto label44;

     label42:
        $i8 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i8);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return false;");

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

        goto label44;

     label43:
        $i5 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i5);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return null;");

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

     label44:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        goto label47;

     label45:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        goto label47;

     label46:
        $r21 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_endofmethodheader>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

     label47:
        $z23 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i1, 5);

        if $z23 == 0 goto label48;

        if $r4 == null goto label48;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.ICodeAttribute,java.lang.StringBuffer,java.lang.String,int,int)>($r4, r1, r2, i0, i1);

     label48:
        $z24 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i1, 4);

        if $z24 == 0 goto label57;

        $r22 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IMethodInfo: org.eclipse.jdt.core.util.IClassFileAttribute[] getAttributes()>();

        i31 = lengthof $r22;

        if i31 == 0 goto label52;

        i32 = 0;

        goto label51;

     label49:
        r80 = $r22[i32];

        if r80 == $r4 goto label50;

        if r80 == $r79 goto label50;

        if r80 == r8 goto label50;

        if r80 == $r18 goto label50;

        if r80 == $r12 goto label50;

        if r80 == $r10 goto label50;

        if r80 == $r16 goto label50;

        if r80 == $r14 goto label50;

        $r28 = interfaceinvoke r80.<org.eclipse.jdt.core.util.IClassFileAttribute: char[] getAttributeName()>();

        $r29 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] DEPRECATED>;

        $z5 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r28, $r29);

        if $z5 != 0 goto label50;

        $r30 = interfaceinvoke r80.<org.eclipse.jdt.core.util.IClassFileAttribute: char[] getAttributeName()>();

        $r31 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] SYNTHETIC>;

        $z6 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r30, $r31);

        if $z6 != 0 goto label50;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IClassFileAttribute,java.lang.StringBuffer,java.lang.String,int,int)>(r80, r1, r2, i0, i1);

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

     label50:
        i32 = i32 + 1;

     label51:
        if i32 < i31 goto label49;

     label52:
        if $r18 == null goto label53;

        $r27 = (org.eclipse.jdt.core.util.IAnnotationDefaultAttribute) $r18;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IAnnotationDefaultAttribute,java.lang.StringBuffer,java.lang.String,int,int)>($r27, r1, r2, i0, i1);

     label53:
        if $r10 == null goto label54;

        $r26 = (org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute) $r10;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute,java.lang.StringBuffer,java.lang.String,int,int)>($r26, r1, r2, i0, i1);

     label54:
        if $r12 == null goto label55;

        $r25 = (org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute) $r12;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute,java.lang.StringBuffer,java.lang.String,int,int)>($r25, r1, r2, i0, i1);

     label55:
        if $r14 == null goto label56;

        $r24 = (org.eclipse.jdt.core.util.IRuntimeVisibleParameterAnnotationsAttribute) $r14;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IRuntimeVisibleParameterAnnotationsAttribute,java.lang.StringBuffer,java.lang.String,int,int)>($r24, r1, r2, i0, i1);

     label56:
        if $r16 == null goto label57;

        $r23 = (org.eclipse.jdt.core.util.IRuntimeInvisibleParameterAnnotationsAttribute) $r16;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IRuntimeInvisibleParameterAnnotationsAttribute,java.lang.StringBuffer,java.lang.String,int,int)>($r23, r1, r2, i0, i1);

     label57:
        return;
    }

    public java.lang.String disassemble(org.eclipse.jdt.core.util.IClassFileReader, java.lang.String)
    {
        org.eclipse.jdt.core.util.IClassFileReader r1;
        org.eclipse.jdt.internal.core.util.Disassembler r0;
        java.lang.String r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r1 := @parameter0: org.eclipse.jdt.core.util.IClassFileReader;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: java.lang.String disassemble(org.eclipse.jdt.core.util.IClassFileReader,java.lang.String,int)>(r1, r2, 2);

        return $r3;
    }

    public java.lang.String disassemble(org.eclipse.jdt.core.util.IClassFileReader, java.lang.String, int)
    {
        char[][] $r8;
        org.eclipse.jdt.internal.core.util.Disassembler r7;
        java.lang.StringBuffer $r22, $r37, $r67, $r68;
        java.lang.String r9, $r21, $r23, $r27, $r33, $r34, $r36, $r38, $r39, $r41, $r43, $r44, $r47, $r48, r50, $r52, $r53, $r54, $r55, $r63, $r64, $r65, $r66, $r69;
        char[] $r1, $r2, $r5, $r13, $r14, $r15, $r16, $r20, $r24, $r25, $r26, $r29, $r30, $r42, $r45, r49, $r57, $r59, $r62;
        org.eclipse.jdt.core.util.ISourceAttribute $r4;
        org.eclipse.jdt.core.util.IInnerClassesAttributeEntry r61;
        org.eclipse.jdt.core.util.IClassFileAttribute $r6, r12, $r58, $r60;
        org.eclipse.jdt.core.util.IClassFileReader r0;
        org.eclipse.jdt.core.util.IClassFileAttribute[] $r10;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, z16, z18, z19, $z20, $z21, $z22, $z23;
        org.eclipse.jdt.core.util.IConstantPool $r19;
        org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute $r17, $r32;
        org.eclipse.jdt.core.util.ISignatureAttribute $r46;
        java.lang.String[] $r51;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, $i14, i15, i16, i17, i18, i19, $i21, $i23, $i25, $i27, $i29;
        org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute $r18, $r31;
        org.eclipse.jdt.core.util.IInnerClassesAttribute $r56;
        org.eclipse.jdt.core.util.IInnerClassesAttributeEntry[] $r28;
        org.eclipse.jdt.core.util.IEnclosingMethodAttribute $r11;

        r7 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r0 := @parameter0: org.eclipse.jdt.core.util.IClassFileReader;

        r9 := @parameter1: java.lang.String;

        i3 := @parameter2: int;

        if r0 != null goto label01;

        $r48 = <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String EMPTY_STRING>;

        return $r48;

     label01:
        $r1 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IClassFileReader: char[] getClassName()>();

        if $r1 != null goto label02;

        $r47 = <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String EMPTY_STRING>;

        return $r47;

     label02:
        $r2 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] replaceOnCopy(char[],char,char)>($r1, 47, 46);

        r49 = $r2;

        i0 = lengthof $r2;

        $i1 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IClassFileReader: int getAccessFlags()>();

        $i2 = $i1 & 16384;

        if $i2 == 0 goto label03;

        $z13 = 1;

        goto label04;

     label03:
        $z13 = 0;

     label04:
        z0 = $z13;

        $r67 = new java.lang.StringBuffer;

        specialinvoke $r67.<java.lang.StringBuffer: void <init>()>();

        $r4 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IClassFileReader: org.eclipse.jdt.core.util.ISourceAttribute getSourceFileAttribute()>();

        $r5 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] SIGNATURE>;

        $r6 = staticinvoke <org.eclipse.jdt.internal.core.util.Util: org.eclipse.jdt.core.util.IClassFileAttribute getAttribute(org.eclipse.jdt.core.util.IClassFileReader,char[])>(r0, $r5);

        $r46 = (org.eclipse.jdt.core.util.ISignatureAttribute) $r6;

        $z1 = specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i3, 5);

        if $z1 == 0 goto label17;

        $i8 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IClassFileReader: int getMinorVersion()>();

        $i9 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IClassFileReader: int getMajorVersion()>();

        $r33 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_begincommentline>;

        virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r33);

        if $r4 == null goto label05;

        $r44 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_sourceattributeheader>;

        virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r44);

        $r45 = interfaceinvoke $r4.<org.eclipse.jdt.core.util.ISourceAttribute: char[] getSourceFileName()>();

        virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r45);

     label05:
        r50 = <org.eclipse.jdt.internal.core.util.Disassembler: java.lang.String VERSION_UNKNOWN>;

        if $i8 != 3 goto label06;

        if $i9 != 45 goto label06;

        r50 = "1.1";

        goto label12;

     label06:
        if $i8 != 0 goto label07;

        if $i9 != 46 goto label07;

        r50 = "1.2";

        goto label12;

     label07:
        if $i8 != 0 goto label08;

        if $i9 != 47 goto label08;

        r50 = "1.3";

        goto label12;

     label08:
        if $i8 != 0 goto label09;

        if $i9 != 48 goto label09;

        r50 = "1.4";

        goto label12;

     label09:
        if $i8 != 0 goto label10;

        if $i9 != 49 goto label10;

        r50 = "1.5";

        goto label12;

     label10:
        if $i8 != 0 goto label11;

        if $i9 != 50 goto label11;

        r50 = "1.6";

        goto label12;

     label11:
        if $i8 != 0 goto label12;

        if $i9 != 51 goto label12;

        r50 = "1.7";

     label12:
        $r34 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String classfileformat_versiondetails>;

        $r51 = newarray (java.lang.String)[4];

        $r51[0] = r50;

        $r52 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i9);

        $r51[1] = $r52;

        $r53 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i8);

        $r51[2] = $r53;

        $r68 = new java.lang.StringBuffer;

        $i10 = $i1 & 32;

        if $i10 == 0 goto label13;

        $r54 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String classfileformat_superflagisset>;

        goto label14;

     label13:
        $r54 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String classfileformat_superflagisnotset>;

     label14:
        $r36 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r54);

        specialinvoke $r68.<java.lang.StringBuffer: void <init>(java.lang.String)>($r36);

        $z12 = specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: boolean isDeprecated(org.eclipse.jdt.core.util.IClassFileReader)>(r0);

        if $z12 == 0 goto label15;

        $r55 = ", deprecated";

        goto label16;

     label15:
        $r55 = <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String EMPTY_STRING>;

     label16:
        $r37 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r55);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.String toString()>();

        $r51[3] = $r38;

        $r39 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r34, $r51);

        virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r39);

        specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>($r67, r9, 0);

        if $r46 == null goto label17;

        $r41 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_signatureattributeheader>;

        $r69 = new java.lang.String;

        $r42 = interfaceinvoke $r46.<org.eclipse.jdt.core.util.ISignatureAttribute: char[] getSignature()>();

        specialinvoke $r69.<java.lang.String: void <init>(char[])>($r42);

        $r43 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object)>($r41, $r69);

        virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r43);

        specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>($r67, r9, 0);

     label17:
        $i11 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int lastIndexOf(char,char[])>(46, $r2);

        $z14 = specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i3, 16);

        if $z14 == 0 goto label18;

        $i21 = (int) -1;

        if $i11 == $i21 goto label18;

        virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("package ");

        virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>($r2, 0, $i11);

        virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>($r67, r9, 0);

     label18:
        $r56 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IClassFileReader: org.eclipse.jdt.core.util.IInnerClassesAttribute getInnerClassesAttribute()>();

        $r57 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] RUNTIME_VISIBLE_ANNOTATIONS>;

        $r58 = staticinvoke <org.eclipse.jdt.internal.core.util.Util: org.eclipse.jdt.core.util.IClassFileAttribute getAttribute(org.eclipse.jdt.core.util.IClassFileReader,char[])>(r0, $r57);

        $r59 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] RUNTIME_INVISIBLE_ANNOTATIONS>;

        $r60 = staticinvoke <org.eclipse.jdt.internal.core.util.Util: org.eclipse.jdt.core.util.IClassFileAttribute getAttribute(org.eclipse.jdt.core.util.IClassFileReader,char[])>(r0, $r59);

        $z15 = specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i3, 1);

        if $z15 == 0 goto label20;

        if $r60 == null goto label19;

        $r32 = (org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute) $r60;

        specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleAsModifier(org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute,java.lang.StringBuffer,java.lang.String,int,int)>($r32, $r67, r9, 0, i3);

        specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>($r67, r9, 0);

     label19:
        if $r58 == null goto label20;

        $r31 = (org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute) $r58;

        specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleAsModifier(org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute,java.lang.StringBuffer,java.lang.String,int,int)>($r31, $r67, r9, 0, i3);

        specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>($r67, r9, 0);

     label20:
        z16 = 0;

        if z0 == 0 goto label21;

        $z11 = specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i3, 16);

        if $z11 == 0 goto label21;

        $i7 = $i1 & 1;

        specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: void decodeModifiersForType(java.lang.StringBuffer,int)>($r67, $i7);

        goto label26;

     label21:
        if $r56 == null goto label25;

        $r28 = interfaceinvoke $r56.<org.eclipse.jdt.core.util.IInnerClassesAttribute: org.eclipse.jdt.core.util.IInnerClassesAttributeEntry[] getInnerClassAttributesEntries()>();

        i12 = 0;

        i13 = lengthof $r28;

        goto label24;

     label22:
        r61 = $r28[i12];

        $r29 = interfaceinvoke r61.<org.eclipse.jdt.core.util.IInnerClassesAttributeEntry: char[] getInnerClassName()>();

        if $r29 == null goto label23;

        $r30 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IClassFileReader: char[] getClassName()>();

        $z10 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r30, $r29);

        if $z10 == 0 goto label23;

        $i6 = interfaceinvoke r61.<org.eclipse.jdt.core.util.IInnerClassesAttributeEntry: int getAccessFlags()>();

        specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: void decodeModifiersForInnerClasses(java.lang.StringBuffer,int,boolean)>($r67, $i6, 0);

        z16 = 1;

     label23:
        i12 = i12 + 1;

     label24:
        if i12 < i13 goto label22;

     label25:
        if z16 != 0 goto label26;

        specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: void decodeModifiersForType(java.lang.StringBuffer,int)>($r67, $i1);

        $z9 = specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: boolean isSynthetic(org.eclipse.jdt.core.util.IClassFileReader)>(r0);

        if $z9 == 0 goto label26;

        virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("synthetic");

        $r27 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_space>;

        virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

     label26:
        $i14 = $i1 & 8192;

        if $i14 == 0 goto label27;

        $z23 = 1;

        $z22 = 1;

        goto label28;

     label27:
        $z23 = 0;

        $z22 = 0;

     label28:
        z18 = $z23;

        z19 = 0;

        if z0 == 0 goto label29;

        virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("enum ");

        goto label32;

     label29:
        $z2 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IClassFileReader: boolean isClass()>();

        if $z2 == 0 goto label30;

        virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("class ");

        goto label32;

     label30:
        if $z22 == 0 goto label31;

        virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("@");

     label31:
        virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("interface ");

        z19 = 1;

     label32:
        $z20 = specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i3, 16);

        if $z20 == 0 goto label33;

        i15 = $i11 + 1;

        $i5 = i0 - i15;

        virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>($r2, i15, $i5);

        r49 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] subarray(char[],int,int)>($r2, i15, i0);

        if $r46 == null goto label34;

        $r26 = interfaceinvoke $r46.<org.eclipse.jdt.core.util.ISignatureAttribute: char[] getSignature()>();

        specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleGenericSignature(int,java.lang.StringBuffer,char[])>(i3, $r67, $r26);

        goto label34;

     label33:
        virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r2);

     label34:
        $r62 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IClassFileReader: char[] getSuperclassName()>();

        if $r62 == null goto label35;

        staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: void replace(char[],char,char)>($r62, 47, 46);

        $z8 = specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: boolean isJavaLangObject(char[])>($r62);

        if $z8 != 0 goto label35;

        if z0 != 0 goto label35;

        virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" extends ");

        $r25 = specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: char[] returnClassName(char[],char,int)>($r62, 46, i3);

        virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r25);

     label35:
        if z18 == 0 goto label36;

        $z7 = specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i3, 16);

        if $z7 != 0 goto label42;

     label36:
        $r8 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IClassFileReader: char[][] getInterfaceNames()>();

        $i4 = lengthof $r8;

        if $i4 == 0 goto label42;

        if z19 == 0 goto label37;

        virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" extends ");

        goto label38;

     label37:
        virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" implements ");

     label38:
        i16 = 0;

        goto label41;

     label39:
        if i16 == 0 goto label40;

        $r21 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_comma>;

        $r22 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r23 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_space>;

        virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

     label40:
        $r24 = $r8[i16];

        staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: void replace(char[],char,char)>($r24, 47, 46);

        $r20 = specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: char[] returnClassName(char[],char,int)>($r24, 46, i3);

        virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r20);

        i16 = i16 + 1;

     label41:
        if i16 < $i4 goto label39;

     label42:
        $r63 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_opentypedeclaration>;

        $r64 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String)>($r63);

        virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r64);

        $z21 = specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i3, 4);

        if $z21 == 0 goto label43;

        $r19 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IClassFileReader: org.eclipse.jdt.core.util.IConstantPool getConstantPool()>();

        specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IConstantPool,java.lang.StringBuffer,java.lang.String,int)>($r19, $r67, r9, 1);

     label43:
        specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleTypeMembers(org.eclipse.jdt.core.util.IClassFileReader,char[],java.lang.StringBuffer,java.lang.String,int,int,boolean)>(r0, r49, $r67, r9, 1, i3, z0);

        $z3 = specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i3, 5);

        if $z3 == 0 goto label57;

        $r10 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IClassFileReader: org.eclipse.jdt.core.util.IClassFileAttribute[] getAttributes()>();

        i17 = lengthof $r10;

        $r11 = specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: org.eclipse.jdt.core.util.IEnclosingMethodAttribute getEnclosingMethodAttribute(org.eclipse.jdt.core.util.IClassFileReader)>(r0);

        i18 = i17;

        if $r56 == null goto label44;

        $i23 = (int) -1;

        i18 = i17 + $i23;

     label44:
        if $r11 == null goto label45;

        $i25 = (int) -1;

        i18 = i18 + $i25;

     label45:
        if $r4 == null goto label46;

        $i27 = (int) -1;

        i18 = i18 + $i27;

     label46:
        if $r46 == null goto label47;

        $i29 = (int) -1;

        i18 = i18 + $i29;

     label47:
        if $r56 != null goto label48;

        if $r11 != null goto label48;

        if i18 == 0 goto label49;

     label48:
        specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>($r67, r9, 0);

     label49:
        if $r56 == null goto label50;

        specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IInnerClassesAttribute,java.lang.StringBuffer,java.lang.String,int)>($r56, $r67, r9, 1);

     label50:
        if $r11 == null goto label51;

        specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IEnclosingMethodAttribute,java.lang.StringBuffer,java.lang.String,int)>($r11, $r67, r9, 0);

     label51:
        $z4 = specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i3, 4);

        if $z4 == 0 goto label57;

        if $r58 == null goto label52;

        $r18 = (org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute) $r58;

        specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute,java.lang.StringBuffer,java.lang.String,int,int)>($r18, $r67, r9, 0, i3);

     label52:
        if $r60 == null goto label53;

        $r17 = (org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute) $r60;

        specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute,java.lang.StringBuffer,java.lang.String,int,int)>($r17, $r67, r9, 0, i3);

     label53:
        if i17 == 0 goto label57;

        i19 = 0;

        goto label56;

     label54:
        r12 = $r10[i19];

        if r12 == $r56 goto label55;

        if r12 == $r4 goto label55;

        if r12 == $r46 goto label55;

        if r12 == $r11 goto label55;

        if r12 == $r60 goto label55;

        if r12 == $r58 goto label55;

        $r13 = interfaceinvoke r12.<org.eclipse.jdt.core.util.IClassFileAttribute: char[] getAttributeName()>();

        $r14 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] DEPRECATED>;

        $z5 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r13, $r14);

        if $z5 != 0 goto label55;

        $r15 = interfaceinvoke r12.<org.eclipse.jdt.core.util.IClassFileAttribute: char[] getAttributeName()>();

        $r16 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] SYNTHETIC>;

        $z6 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r15, $r16);

        if $z6 != 0 goto label55;

        specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IClassFileAttribute,java.lang.StringBuffer,java.lang.String,int,int)>(r12, $r67, r9, 0, i3);

     label55:
        i19 = i19 + 1;

     label56:
        if i19 < i17 goto label54;

     label57:
        specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>($r67, r9, 0);

        $r65 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_closetypedeclaration>;

        virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r65);

        $r66 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r66;
    }

    private void disassembleGenericSignature(int, java.lang.StringBuffer, char[])
    {
        org.eclipse.jdt.internal.core.util.Disassembler r7;
        char[][] $r1, $r6;
        java.lang.StringBuffer r2;
        int i0, $i1, i2, $i3, i4, i5;
        java.lang.String $r14;
        boolean $z0;
        char[] r0, $r3, $r4, $r5, $r8, $r9, $r10, $r11, $r12, $r13, r15;

        r7 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        i2 := @parameter0: int;

        r2 := @parameter1: java.lang.StringBuffer;

        r0 := @parameter2: char[];

        staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: void replace(char[],char,char)>(r0, 47, 46);

        $r1 = staticinvoke <org.eclipse.jdt.core.Signature: char[][] getTypeParameters(char[])>(r0);

        i0 = lengthof $r1;

        if i0 == 0 goto label9;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(60);

        i4 = 0;

        goto label8;

     label1:
        if i4 == 0 goto label2;

        $r14 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_comma>;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

     label2:
        $r4 = $r1[i4];

        $r3 = $r1[i4];

        $i1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int indexOf(char,char[])>(58, $r3);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>($r4, 0, $i1);

        $r5 = $r1[i4];

        $r6 = staticinvoke <org.eclipse.jdt.core.Signature: char[][] getTypeParameterBounds(char[])>($r5);

        $i3 = lengthof $r6;

        if $i3 == 0 goto label7;

        if $i3 != 1 goto label3;

        r15 = $r6[0];

        $r11 = staticinvoke <org.eclipse.jdt.core.Signature: char[] toCharArray(char[])>(r15);

        $z0 = specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: boolean isJavaLangObject(char[])>($r11);

        if $z0 != 0 goto label7;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" extends ");

        $r12 = staticinvoke <org.eclipse.jdt.core.Signature: char[] toCharArray(char[])>(r15);

        $r13 = specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: char[] returnClassName(char[],char,int)>($r12, 46, i2);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r13);

        goto label7;

     label3:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" extends ");

        i5 = 0;

        goto label6;

     label4:
        if i5 == 0 goto label5;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" & ");

     label5:
        $r8 = $r6[i5];

        $r9 = staticinvoke <org.eclipse.jdt.core.Signature: char[] toCharArray(char[])>($r8);

        $r10 = specialinvoke r7.<org.eclipse.jdt.internal.core.util.Disassembler: char[] returnClassName(char[],char,int)>($r9, 46, i2);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r10);

        i5 = i5 + 1;

     label6:
        if i5 < $i3 goto label4;

     label7:
        i4 = i4 + 1;

     label8:
        if i4 < i0 goto label1;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(62);

     label9:
        return;
    }

    private boolean isJavaLangObject(char[])
    {
        char[] r0;
        org.eclipse.jdt.internal.core.util.Disassembler r3;
        char[][] $r1, $r2;
        boolean $z0;

        r3 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r0 := @parameter0: char[];

        $r1 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_OBJECT>;

        $r2 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[][] splitOn(char,char[])>(46, r0);

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[][],char[][])>($r1, $r2);

        return $z0;
    }

    private boolean isVarArgs(org.eclipse.jdt.core.util.IMethodInfo)
    {
        org.eclipse.jdt.core.util.IClassFileAttribute $r2;
        org.eclipse.jdt.core.util.IMethodInfo r0;
        int $i0, $i1;
        char[] $r1;
        org.eclipse.jdt.internal.core.util.Disassembler r3;

        r3 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r0 := @parameter0: org.eclipse.jdt.core.util.IMethodInfo;

        $i0 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IMethodInfo: int getAccessFlags()>();

        $i1 = $i0 & 128;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        $r1 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] VarargsName>;

        $r2 = staticinvoke <org.eclipse.jdt.internal.core.util.Util: org.eclipse.jdt.core.util.IClassFileAttribute getAttribute(org.eclipse.jdt.core.util.IMethodInfo,char[])>(r0, $r1);

        if $r2 == null goto label2;

        return 1;

     label2:
        return 0;
    }

    private void disassemble(org.eclipse.jdt.core.util.ICodeAttribute, java.lang.StringBuffer, java.lang.String, int, int)
    {
        org.eclipse.jdt.core.util.IStackMapAttribute r82;
        org.eclipse.jdt.core.util.IExceptionTableEntry[] $r66;
        org.eclipse.jdt.core.util.IExceptionTableEntry $r76;
        long $l6;
        java.lang.StringBuffer r1;
        org.eclipse.jdt.core.util.ILocalVariableTableEntry[] $r42;
        org.eclipse.jdt.core.util.ILocalVariableTypeTableEntry $r40;
        org.eclipse.jdt.core.util.ILocalVariableAttribute $r6;
        org.eclipse.jdt.core.util.IClassFileAttribute $r8, r80;
        org.eclipse.jdt.core.util.ILocalVariableTypeTableEntry[] $r27;
        int[] $r60, $r63;
        org.eclipse.jdt.core.util.IClassFileAttribute[] $r9;
        int i0, $i1, i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, i38, i39, $i40, i41, i42, i43, $i44, i45, i46, i47, $i48, i49, i50, i51, i52;
        org.eclipse.jdt.core.util.ILocalVariableTableEntry $r55;
        java.lang.Throwable $r77;
        org.eclipse.jdt.core.util.ILineNumberAttribute $r5;
        org.eclipse.jdt.internal.core.util.Disassembler r0;
        java.lang.String r2, $r15, $r16, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r31, $r32, $r33, $r34, $r36, $r37, $r39, $r41, $r46, $r47, $r48, $r49, $r51, $r52, $r54, $r57, $r61, $r62, $r64, $r65, $r67, $r69, $r70, $r71, $r72, $r73, $r74, $r78;
        org.eclipse.jdt.core.util.ILocalVariableTypeTableAttribute $r56;
        char[] $r7, $r10, $r11, $r12, $r13, $r17, $r28, $r29, $r35, $r38, $r43, $r44, $r50, $r53, $r75, r79;
        int[][] $r58;
        boolean $z0, $z1, z2, z3, z4, z5, z6, z7, z8;
        java.lang.String[] $r14, $r30, $r45, $r59, $r68;
        org.eclipse.jdt.core.util.ICodeAttribute r4;
        org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor $r3;
        org.eclipse.jdt.core.util.IStackMapTableAttribute r81;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r4 := @parameter0: org.eclipse.jdt.core.util.ICodeAttribute;

        r1 := @parameter1: java.lang.StringBuffer;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i2 := @parameter4: int;

        $i1 = i0 - 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i1);

        $r3 = new org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor;

        specialinvoke $r3.<org.eclipse.jdt.internal.core.util.DefaultBytecodeVisitor: void <init>(org.eclipse.jdt.core.util.ICodeAttribute,java.lang.StringBuffer,java.lang.String,int,int)>(r4, r1, r2, i0, i2);

     label01:
        interfaceinvoke r4.<org.eclipse.jdt.core.util.ICodeAttribute: void traverse(org.eclipse.jdt.core.util.IBytecodeVisitor)>($r3);

     label02:
        goto label04;

     label03:
        $r77 := @caughtexception;

        $i36 = i0 + 2;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void dumpTab(int,java.lang.StringBuffer)>($i36, r1);

        $r78 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String classformat_classformatexception>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r78);

        $i37 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i37);

     label04:
        $i3 = interfaceinvoke r4.<org.eclipse.jdt.core.util.ICodeAttribute: int getExceptionTableLength()>();

        z2 = 1;

        z8 = 1;

        z7 = 1;

        z6 = 1;

        z5 = 1;

        z4 = 1;

        z3 = 1;

        if $i3 == 0 goto label10;

        i38 = i0 + 2;

        z2 = 0;

        z8 = 0;

        z7 = 0;

        z6 = 0;

        z5 = 0;

        z4 = 0;

        z3 = 0;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void dumpTab(int,java.lang.StringBuffer)>(i38, r1);

        $r66 = interfaceinvoke r4.<org.eclipse.jdt.core.util.ICodeAttribute: org.eclipse.jdt.core.util.IExceptionTableEntry[] getExceptionTable()>();

        $r67 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_exceptiontableheader>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r67);

        $i30 = i38 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i30);

        i39 = 0;

        goto label09;

     label05:
        if i39 == 0 goto label06;

        $i35 = i38 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i35);

     label06:
        $r76 = $r66[i39];

        $i31 = interfaceinvoke $r76.<org.eclipse.jdt.core.util.IExceptionTableEntry: int getCatchTypeIndex()>();

        if $i31 == 0 goto label07;

        $r75 = interfaceinvoke $r76.<org.eclipse.jdt.core.util.IExceptionTableEntry: char[] getCatchType()>();

        staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: void replace(char[],char,char)>($r75, 47, 46);

        r79 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: char[] returnClassName(char[],char,int)>($r75, 46, i2);

        goto label08;

     label07:
        r79 = <org.eclipse.jdt.internal.core.util.Disassembler: char[] ANY_EXCEPTION>;

     label08:
        $r69 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String classfileformat_exceptiontableentry>;

        $r68 = newarray (java.lang.String)[4];

        $i32 = interfaceinvoke $r76.<org.eclipse.jdt.core.util.IExceptionTableEntry: int getStartPC()>();

        $r70 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i32);

        $r68[0] = $r70;

        $i33 = interfaceinvoke $r76.<org.eclipse.jdt.core.util.IExceptionTableEntry: int getEndPC()>();

        $r71 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i33);

        $r68[1] = $r71;

        $i34 = interfaceinvoke $r76.<org.eclipse.jdt.core.util.IExceptionTableEntry: int getHandlerPC()>();

        $r72 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i34);

        $r68[2] = $r72;

        $r73 = new java.lang.String;

        specialinvoke $r73.<java.lang.String: void <init>(char[])>(r79);

        $r68[3] = $r73;

        $r74 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r69, $r68);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r74);

        i39 = i39 + 1;

     label09:
        if i39 < $i3 goto label05;

     label10:
        $r5 = interfaceinvoke r4.<org.eclipse.jdt.core.util.ICodeAttribute: org.eclipse.jdt.core.util.ILineNumberAttribute getLineNumberAttribute()>();

        if $r5 != null goto label11;

        $i40 = 0;

        goto label12;

     label11:
        $i40 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.ILineNumberAttribute: int getLineNumberTableLength()>();

     label12:
        i41 = $i40;

        if $i40 == 0 goto label18;

        i42 = i0 + 2;

        if z8 != 0 goto label13;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i42);

        goto label14;

     label13:
        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void dumpTab(int,java.lang.StringBuffer)>(i42, r1);

        z2 = 0;

        z7 = 0;

        z6 = 0;

        z5 = 0;

        z4 = 0;

        z3 = 0;

     label14:
        $r57 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_linenumberattributeheader>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r57);

        $i26 = i42 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i26);

        $r58 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.ILineNumberAttribute: int[][] getLineNumberTable()>();

        i43 = 0;

        goto label17;

     label15:
        if i43 == 0 goto label16;

        $i29 = i42 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i29);

     label16:
        $r61 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String classfileformat_linenumbertableentry>;

        $r59 = newarray (java.lang.String)[2];

        $r60 = $r58[i43];

        $i27 = $r60[0];

        $r62 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i27);

        $r59[0] = $r62;

        $r63 = $r58[i43];

        $i28 = $r63[1];

        $r64 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i28);

        $r59[1] = $r64;

        $r65 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r61, $r59);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r65);

        i43 = i43 + 1;

     label17:
        if i43 < i41 goto label15;

     label18:
        $r6 = interfaceinvoke r4.<org.eclipse.jdt.core.util.ICodeAttribute: org.eclipse.jdt.core.util.ILocalVariableAttribute getLocalVariableAttribute()>();

        if $r6 != null goto label19;

        $i44 = 0;

        goto label20;

     label19:
        $i44 = interfaceinvoke $r6.<org.eclipse.jdt.core.util.ILocalVariableAttribute: int getLocalVariableTableLength()>();

     label20:
        i45 = $i44;

        if $i44 == 0 goto label26;

        i46 = i0 + 2;

        if z6 != 0 goto label21;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i46);

        goto label22;

     label21:
        z2 = 0;

        z7 = 0;

        z5 = 0;

        z4 = 0;

        z3 = 0;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void dumpTab(int,java.lang.StringBuffer)>(i46, r1);

     label22:
        $r41 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_localvariabletableattributeheader>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r41);

        $i20 = i46 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i20);

        $r42 = interfaceinvoke $r6.<org.eclipse.jdt.core.util.ILocalVariableAttribute: org.eclipse.jdt.core.util.ILocalVariableTableEntry[] getLocalVariableTable()>();

        i47 = 0;

        goto label25;

     label23:
        if i47 == 0 goto label24;

        $i25 = i46 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i25);

     label24:
        $r55 = $r42[i47];

        $i21 = interfaceinvoke $r55.<org.eclipse.jdt.core.util.ILocalVariableTableEntry: int getIndex()>();

        $i22 = interfaceinvoke $r55.<org.eclipse.jdt.core.util.ILocalVariableTableEntry: int getStartPC()>();

        $i23 = interfaceinvoke $r55.<org.eclipse.jdt.core.util.ILocalVariableTableEntry: int getLength()>();

        $r43 = interfaceinvoke $r55.<org.eclipse.jdt.core.util.ILocalVariableTableEntry: char[] getDescriptor()>();

        $r44 = staticinvoke <org.eclipse.jdt.core.Signature: char[] toCharArray(char[])>($r43);

        staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: void replace(char[],char,char)>($r44, 47, 46);

        $r46 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String classfileformat_localvariabletableentry>;

        $r45 = newarray (java.lang.String)[5];

        $r47 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i22);

        $r45[0] = $r47;

        $i24 = $i22 + $i23;

        $r48 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i24);

        $r45[1] = $r48;

        $r49 = new java.lang.String;

        $r50 = interfaceinvoke $r55.<org.eclipse.jdt.core.util.ILocalVariableTableEntry: char[] getName()>();

        specialinvoke $r49.<java.lang.String: void <init>(char[])>($r50);

        $r45[2] = $r49;

        $r51 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i21);

        $r45[3] = $r51;

        $r52 = new java.lang.String;

        $r53 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: char[] returnClassName(char[],char,int)>($r44, 46, i2);

        specialinvoke $r52.<java.lang.String: void <init>(char[])>($r53);

        $r45[4] = $r52;

        $r54 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r46, $r45);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r54);

        i47 = i47 + 1;

     label25:
        if i47 < i45 goto label23;

     label26:
        $r7 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] LOCAL_VARIABLE_TYPE_TABLE>;

        $r8 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: org.eclipse.jdt.core.util.IClassFileAttribute getAttribute(char[],org.eclipse.jdt.core.util.ICodeAttribute)>($r7, r4);

        $r56 = (org.eclipse.jdt.core.util.ILocalVariableTypeTableAttribute) $r8;

        if $r56 != null goto label27;

        $i48 = 0;

        goto label28;

     label27:
        $i48 = interfaceinvoke $r56.<org.eclipse.jdt.core.util.ILocalVariableTypeTableAttribute: int getLocalVariableTypeTableLength()>();

     label28:
        i49 = $i48;

        if $i48 == 0 goto label34;

        i50 = i0 + 2;

        if z4 != 0 goto label29;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i50);

        goto label30;

     label29:
        z2 = 0;

        z7 = 0;

        z5 = 0;

        z3 = 0;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void dumpTab(int,java.lang.StringBuffer)>(i50, r1);

     label30:
        $r26 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_localvariabletypetableattributeheader>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $i14 = i50 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i14);

        $r27 = interfaceinvoke $r56.<org.eclipse.jdt.core.util.ILocalVariableTypeTableAttribute: org.eclipse.jdt.core.util.ILocalVariableTypeTableEntry[] getLocalVariableTypeTable()>();

        i51 = 0;

        goto label33;

     label31:
        if i51 == 0 goto label32;

        $i19 = i50 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i19);

     label32:
        $r40 = $r27[i51];

        $i15 = interfaceinvoke $r40.<org.eclipse.jdt.core.util.ILocalVariableTypeTableEntry: int getIndex()>();

        $i16 = interfaceinvoke $r40.<org.eclipse.jdt.core.util.ILocalVariableTypeTableEntry: int getStartPC()>();

        $i17 = interfaceinvoke $r40.<org.eclipse.jdt.core.util.ILocalVariableTypeTableEntry: int getLength()>();

        $r28 = interfaceinvoke $r40.<org.eclipse.jdt.core.util.ILocalVariableTypeTableEntry: char[] getSignature()>();

        $r29 = staticinvoke <org.eclipse.jdt.core.Signature: char[] toCharArray(char[])>($r28);

        staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: void replace(char[],char,char)>($r29, 47, 46);

        $r31 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String classfileformat_localvariabletableentry>;

        $r30 = newarray (java.lang.String)[5];

        $r32 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i16);

        $r30[0] = $r32;

        $i18 = $i16 + $i17;

        $r33 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i18);

        $r30[1] = $r33;

        $r34 = new java.lang.String;

        $r35 = interfaceinvoke $r40.<org.eclipse.jdt.core.util.ILocalVariableTypeTableEntry: char[] getName()>();

        specialinvoke $r34.<java.lang.String: void <init>(char[])>($r35);

        $r30[2] = $r34;

        $r36 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i15);

        $r30[3] = $r36;

        $r37 = new java.lang.String;

        $r38 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: char[] returnClassName(char[],char,int)>($r29, 46, i2);

        specialinvoke $r37.<java.lang.String: void <init>(char[])>($r38);

        $r30[4] = $r37;

        $r39 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r31, $r30);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r39);

        i51 = i51 + 1;

     label33:
        if i51 < i49 goto label31;

     label34:
        $i4 = interfaceinvoke r4.<org.eclipse.jdt.core.util.ICodeAttribute: int getAttributesCount()>();

        if $i4 == 0 goto label46;

        $r9 = interfaceinvoke r4.<org.eclipse.jdt.core.util.ICodeAttribute: org.eclipse.jdt.core.util.IClassFileAttribute[] getAttributes()>();

        i52 = 0;

        goto label45;

     label35:
        r80 = $r9[i52];

        $r10 = interfaceinvoke r80.<org.eclipse.jdt.core.util.IClassFileAttribute: char[] getAttributeName()>();

        $r11 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] STACK_MAP_TABLE>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r10, $r11);

        if $z0 == 0 goto label38;

        r81 = (org.eclipse.jdt.core.util.IStackMapTableAttribute) r80;

        if z7 != 0 goto label36;

        $i13 = i0 + 2;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i13);

        goto label37;

     label36:
        z2 = 0;

        z7 = 0;

        z5 = 0;

        z3 = 0;

        $i11 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void dumpTab(int,java.lang.StringBuffer)>($i11, r1);

     label37:
        $i12 = interfaceinvoke r81.<org.eclipse.jdt.core.util.IStackMapTableAttribute: int getNumberOfEntries()>();

        $r23 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_stackmaptableattributeheader>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i12);

        $r25 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object)>($r23, $r24);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        if $i12 == 0 goto label44;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IStackMapTableAttribute,java.lang.StringBuffer,java.lang.String,int,int)>(r81, r1, r2, i0, i2);

        goto label44;

     label38:
        $r12 = interfaceinvoke r80.<org.eclipse.jdt.core.util.IClassFileAttribute: char[] getAttributeName()>();

        $r13 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] STACK_MAP>;

        $z1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r12, $r13);

        if $z1 == 0 goto label41;

        r82 = (org.eclipse.jdt.core.util.IStackMapAttribute) r80;

        if z5 != 0 goto label39;

        $i10 = i0 + 2;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i10);

        goto label40;

     label39:
        z2 = 0;

        z7 = 0;

        z5 = 0;

        z3 = 0;

        $i8 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void dumpTab(int,java.lang.StringBuffer)>($i8, r1);

     label40:
        $i9 = interfaceinvoke r82.<org.eclipse.jdt.core.util.IStackMapAttribute: int getNumberOfEntries()>();

        $r20 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_stackmapattributeheader>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i9);

        $r22 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object)>($r20, $r21);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        if $i9 == 0 goto label44;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IStackMapAttribute,java.lang.StringBuffer,java.lang.String,int,int)>(r82, r1, r2, i0, i2);

        goto label44;

     label41:
        if r80 == $r5 goto label44;

        if r80 == $r6 goto label44;

        if r80 == $r56 goto label44;

        if z3 != 0 goto label42;

        $i7 = i0 + 2;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i7);

        goto label43;

     label42:
        z2 = 0;

        z7 = 0;

        z5 = 0;

        z3 = 0;

        $i5 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void dumpTab(int,java.lang.StringBuffer)>($i5, r1);

     label43:
        $r16 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_genericattributeheader>;

        $r14 = newarray (java.lang.String)[2];

        $r15 = new java.lang.String;

        $r17 = interfaceinvoke r80.<org.eclipse.jdt.core.util.IClassFileAttribute: char[] getAttributeName()>();

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r17);

        $r14[0] = $r15;

        $l6 = interfaceinvoke r80.<org.eclipse.jdt.core.util.IClassFileAttribute: long getAttributeLength()>();

        $r18 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l6);

        $r14[1] = $r18;

        $r19 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r16, $r14);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

     label44:
        i52 = i52 + 1;

     label45:
        if i52 < $i4 goto label35;

     label46:
        return;

        catch org.eclipse.jdt.core.util.ClassFormatException from label01 to label02 with label03;
    }

    private void disassemble(org.eclipse.jdt.core.util.IStackMapTableAttribute, java.lang.StringBuffer, java.lang.String, int, int)
    {
        org.eclipse.jdt.core.util.IStackMapFrame $r41;
        java.lang.String[] $r5;
        org.eclipse.jdt.internal.core.util.Disassembler r0;
        org.eclipse.jdt.core.util.IVerificationTypeInfo[] $r9, $r12, $r18, $r30, $r35;
        org.eclipse.jdt.core.util.IStackMapFrame[] $r4;
        org.eclipse.jdt.core.util.IStackMapTableAttribute r3;
        java.lang.StringBuffer r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, $i11, i12, i13, $i15, $i17;
        java.lang.String r2, $r6, $r7, $r8, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r31, $r32, $r33, $r34, $r36, $r37, $r38, $r39, $r40;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r3 := @parameter0: org.eclipse.jdt.core.util.IStackMapTableAttribute;

        r1 := @parameter1: java.lang.StringBuffer;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i7 := @parameter4: int;

        $i1 = i0 + 3;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i1);

        $i2 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IStackMapTableAttribute: int getNumberOfEntries()>();

        $r4 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IStackMapTableAttribute: org.eclipse.jdt.core.util.IStackMapFrame[] getStackMapFrame()>();

        $i15 = (int) -1;

        i12 = $i15;

        i13 = 0;

        goto label13;

     label01:
        if i13 <= 0 goto label02;

        $i11 = i0 + 3;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i11);

     label02:
        $r41 = $r4[i13];

        $i3 = interfaceinvoke $r41.<org.eclipse.jdt.core.util.IStackMapFrame: int getFrameType()>();

        $i4 = interfaceinvoke $r41.<org.eclipse.jdt.core.util.IStackMapFrame: int getOffsetDelta()>();

        $i17 = (int) -1;

        if i12 != $i17 goto label03;

        i12 = $i4;

        goto label04;

     label03:
        $i5 = $i4 + 1;

        i12 = i12 + $i5;

     label04:
        tableswitch($i3)
        {
            case 247: goto label05;
            case 248: goto label06;
            case 249: goto label06;
            case 250: goto label06;
            case 251: goto label07;
            case 252: goto label08;
            case 253: goto label08;
            case 254: goto label08;
            case 255: goto label09;
            default: goto label10;
        };

     label05:
        $r28 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_frame_same_locals_1_stack_item_extended>;

        $r29 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i12);

        $r30 = interfaceinvoke $r41.<org.eclipse.jdt.core.util.IStackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] getStackItems()>();

        $r31 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: java.lang.String disassemble(org.eclipse.jdt.core.util.IVerificationTypeInfo[],int)>($r30, i7);

        $r32 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object,java.lang.Object)>($r28, $r29, $r31);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        goto label12;

     label06:
        $r24 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_frame_chop>;

        $r25 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i12);

        $i10 = 251 - $i3;

        $r26 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i10);

        $r27 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object,java.lang.Object)>($r24, $r25, $r26);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        goto label12;

     label07:
        $r21 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_frame_same_frame_extended>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i12);

        $r23 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object)>($r21, $r22);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        goto label12;

     label08:
        $r16 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_frame_append>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i12);

        $r18 = interfaceinvoke $r41.<org.eclipse.jdt.core.util.IStackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] getLocals()>();

        $r19 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: java.lang.String disassemble(org.eclipse.jdt.core.util.IVerificationTypeInfo[],int)>($r18, i7);

        $r20 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object,java.lang.Object)>($r16, $r17, $r19);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        goto label12;

     label09:
        $r6 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_frame_full_frame>;

        $r5 = newarray (java.lang.String)[6];

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i12);

        $r5[0] = $r7;

        $i6 = interfaceinvoke $r41.<org.eclipse.jdt.core.util.IStackMapFrame: int getNumberOfLocals()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        $r5[1] = $r8;

        $r9 = interfaceinvoke $r41.<org.eclipse.jdt.core.util.IStackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] getLocals()>();

        $r10 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: java.lang.String disassemble(org.eclipse.jdt.core.util.IVerificationTypeInfo[],int)>($r9, i7);

        $r5[2] = $r10;

        $i8 = interfaceinvoke $r41.<org.eclipse.jdt.core.util.IStackMapFrame: int getNumberOfStackItems()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i8);

        $r5[3] = $r11;

        $r12 = interfaceinvoke $r41.<org.eclipse.jdt.core.util.IStackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] getStackItems()>();

        $r13 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: java.lang.String disassemble(org.eclipse.jdt.core.util.IVerificationTypeInfo[],int)>($r12, i7);

        $r5[4] = $r13;

        $i9 = i0 + 5;

        $r14 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: java.lang.String dumpNewLineWithTabs(java.lang.String,int)>(r2, $i9);

        $r5[5] = $r14;

        $r15 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r6, $r5);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        goto label12;

     label10:
        if $i3 > 63 goto label11;

        $r38 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_frame_same_frame>;

        $r39 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i12);

        $r40 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object)>($r38, $r39);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        goto label12;

     label11:
        if $i3 > 127 goto label12;

        $r33 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_frame_same_locals_1_stack_item>;

        $r34 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i12);

        $r35 = interfaceinvoke $r41.<org.eclipse.jdt.core.util.IStackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] getStackItems()>();

        $r36 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: java.lang.String disassemble(org.eclipse.jdt.core.util.IVerificationTypeInfo[],int)>($r35, i7);

        $r37 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object,java.lang.Object)>($r33, $r34, $r36);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r37);

     label12:
        i13 = i13 + 1;

     label13:
        if i13 < $i2 goto label01;

        return;
    }

    private void disassemble(org.eclipse.jdt.core.util.IStackMapAttribute, java.lang.StringBuffer, java.lang.String, int, int)
    {
        org.eclipse.jdt.core.util.IStackMapFrame $r16;
        java.lang.String[] $r5;
        org.eclipse.jdt.internal.core.util.Disassembler r0;
        org.eclipse.jdt.core.util.IVerificationTypeInfo[] $r9, $r12;
        org.eclipse.jdt.core.util.IStackMapFrame[] $r4;
        java.lang.StringBuffer r1;
        int i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, i9;
        org.eclipse.jdt.core.util.IStackMapAttribute r3;
        java.lang.String r2, $r6, $r7, $r8, $r10, $r11, $r13, $r14, $r15;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r3 := @parameter0: org.eclipse.jdt.core.util.IStackMapAttribute;

        r1 := @parameter1: java.lang.StringBuffer;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i5 := @parameter4: int;

        $i1 = i0 + 3;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i1);

        $i2 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IStackMapAttribute: int getNumberOfEntries()>();

        $r4 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IStackMapAttribute: org.eclipse.jdt.core.util.IStackMapFrame[] getStackMapFrame()>();

        i9 = 0;

        goto label3;

     label1:
        if i9 <= 0 goto label2;

        $i8 = i0 + 3;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i8);

     label2:
        $r16 = $r4[i9];

        $r6 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_frame_full_frame>;

        $r5 = newarray (java.lang.String)[6];

        $i3 = interfaceinvoke $r16.<org.eclipse.jdt.core.util.IStackMapFrame: int getOffsetDelta()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        $r5[0] = $r7;

        $i4 = interfaceinvoke $r16.<org.eclipse.jdt.core.util.IStackMapFrame: int getNumberOfLocals()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        $r5[1] = $r8;

        $r9 = interfaceinvoke $r16.<org.eclipse.jdt.core.util.IStackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] getLocals()>();

        $r10 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: java.lang.String disassemble(org.eclipse.jdt.core.util.IVerificationTypeInfo[],int)>($r9, i5);

        $r5[2] = $r10;

        $i6 = interfaceinvoke $r16.<org.eclipse.jdt.core.util.IStackMapFrame: int getNumberOfStackItems()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        $r5[3] = $r11;

        $r12 = interfaceinvoke $r16.<org.eclipse.jdt.core.util.IStackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] getStackItems()>();

        $r13 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: java.lang.String disassemble(org.eclipse.jdt.core.util.IVerificationTypeInfo[],int)>($r12, i5);

        $r5[4] = $r13;

        $i7 = i0 + 5;

        $r14 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: java.lang.String dumpNewLineWithTabs(java.lang.String,int)>(r2, $i7);

        $r5[5] = $r14;

        $r15 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r6, $r5);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        i9 = i9 + 1;

     label3:
        if i9 < $i2 goto label1;

        return;
    }

    private void disassemble(org.eclipse.jdt.core.util.IConstantPool, java.lang.StringBuffer, java.lang.String, int)
    {
        long $l14;
        org.eclipse.jdt.internal.core.util.Disassembler r0;
        java.lang.StringBuffer r1;
        java.lang.String r2, $r4, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r23, $r25, $r27, $r29, $r31, $r32, $r33, $r34, $r35, $r37, $r39, $r41, $r43, $r44, $r45, $r46, $r47, $r49, $r51, $r53, $r55, $r56, $r57, $r58, $r59, $r60, $r62, $r63, $r64, $r65, $r67, $r69, $r70, $r71, $r72, $r74, $r75, $r76, $r77, $r79, $r80, $r81, $r82, $r84, $r85, $r86, $r87, $r89, $r90, $r91, $r93, $r94;
        char[] $r7, $r9, $r24, $r26, $r28, $r36, $r38, $r40, $r48, $r50, $r52, $r66, $r92;
        org.eclipse.jdt.core.util.IConstantPool r3;
        org.eclipse.jdt.core.util.IConstantPoolEntry $r5, $r6, $r8;
        float $f0;
        java.lang.String[] $r10, $r18, $r30, $r42, $r54, $r61, $r68, $r73, $r78, $r83, $r88;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, i17;
        double $d0;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r3 := @parameter0: org.eclipse.jdt.core.util.IConstantPool;

        r1 := @parameter1: java.lang.StringBuffer;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

        $i1 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IConstantPool: int getConstantPoolCount()>();

        $r4 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_constantpoolheader>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $i2 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i2);

        i17 = 1;

        goto label15;

     label01:
        if i17 == 1 goto label02;

        $i16 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i16);

     label02:
        $r5 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IConstantPool: org.eclipse.jdt.core.util.IConstantPoolEntry decodeEntry(int)>(i17);

        $i3 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IConstantPool: int getEntryKind(int)>(i17);

        tableswitch($i3)
        {
            case 1: goto label13;
            case 2: goto label14;
            case 3: goto label07;
            case 4: goto label06;
            case 5: goto label09;
            case 6: goto label04;
            case 7: goto label03;
            case 8: goto label12;
            case 9: goto label05;
            case 10: goto label10;
            case 11: goto label08;
            case 12: goto label11;
            default: goto label14;
        };

     label03:
        $r62 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_constantpool_class>;

        $r61 = newarray (java.lang.String)[3];

        $r63 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i17);

        $r61[0] = $r63;

        $i13 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getClassInfoNameIndex()>();

        $r64 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i13);

        $r61[1] = $r64;

        $r65 = new java.lang.String;

        $r66 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: char[] getClassInfoName()>();

        specialinvoke $r65.<java.lang.String: void <init>(char[])>($r66);

        $r61[2] = $r65;

        $r67 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r62, $r61);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r67);

        goto label14;

     label04:
        $r69 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_constantpool_double>;

        $r68 = newarray (java.lang.String)[2];

        $r70 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i17);

        $r68[0] = $r70;

        $d0 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: double getDoubleValue()>();

        $r71 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        $r68[1] = $r71;

        $r72 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r69, $r68);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r72);

        goto label14;

     label05:
        $r43 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_constantpool_fieldref>;

        $r42 = newarray (java.lang.String)[6];

        $r44 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i17);

        $r42[0] = $r44;

        $i10 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getClassIndex()>();

        $r45 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i10);

        $r42[1] = $r45;

        $i11 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getNameAndTypeIndex()>();

        $r46 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i11);

        $r42[2] = $r46;

        $r47 = new java.lang.String;

        $r48 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: char[] getClassName()>();

        specialinvoke $r47.<java.lang.String: void <init>(char[])>($r48);

        $r42[3] = $r47;

        $r49 = new java.lang.String;

        $r50 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: char[] getFieldName()>();

        specialinvoke $r49.<java.lang.String: void <init>(char[])>($r50);

        $r42[4] = $r49;

        $r51 = new java.lang.String;

        $r52 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: char[] getFieldDescriptor()>();

        specialinvoke $r51.<java.lang.String: void <init>(char[])>($r52);

        $r42[5] = $r51;

        $r53 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r43, $r42);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r53);

        goto label14;

     label06:
        $r79 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_constantpool_float>;

        $r78 = newarray (java.lang.String)[2];

        $r80 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i17);

        $r78[0] = $r80;

        $f0 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: float getFloatValue()>();

        $r81 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f0);

        $r78[1] = $r81;

        $r82 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r79, $r78);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r82);

        goto label14;

     label07:
        $r84 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_constantpool_integer>;

        $r83 = newarray (java.lang.String)[2];

        $r85 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i17);

        $r83[0] = $r85;

        $i15 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getIntegerValue()>();

        $r86 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i15);

        $r83[1] = $r86;

        $r87 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r84, $r83);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r87);

        goto label14;

     label08:
        $r19 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_constantpool_interfacemethodref>;

        $r18 = newarray (java.lang.String)[6];

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i17);

        $r18[0] = $r20;

        $i6 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getClassIndex()>();

        $r21 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        $r18[1] = $r21;

        $i7 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getNameAndTypeIndex()>();

        $r22 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7);

        $r18[2] = $r22;

        $r23 = new java.lang.String;

        $r24 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: char[] getClassName()>();

        specialinvoke $r23.<java.lang.String: void <init>(char[])>($r24);

        $r18[3] = $r23;

        $r25 = new java.lang.String;

        $r26 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: char[] getMethodName()>();

        specialinvoke $r25.<java.lang.String: void <init>(char[])>($r26);

        $r18[4] = $r25;

        $r27 = new java.lang.String;

        $r28 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: char[] getMethodDescriptor()>();

        specialinvoke $r27.<java.lang.String: void <init>(char[])>($r28);

        $r18[5] = $r27;

        $r29 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r19, $r18);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        goto label14;

     label09:
        $r74 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_constantpool_long>;

        $r73 = newarray (java.lang.String)[2];

        $r75 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i17);

        $r73[0] = $r75;

        $l14 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: long getLongValue()>();

        $r76 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l14);

        $r73[1] = $r76;

        $r77 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r74, $r73);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r77);

        goto label14;

     label10:
        $r31 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_constantpool_methodref>;

        $r30 = newarray (java.lang.String)[6];

        $r32 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i17);

        $r30[0] = $r32;

        $i8 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getClassIndex()>();

        $r33 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i8);

        $r30[1] = $r33;

        $i9 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getNameAndTypeIndex()>();

        $r34 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i9);

        $r30[2] = $r34;

        $r35 = new java.lang.String;

        $r36 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: char[] getClassName()>();

        specialinvoke $r35.<java.lang.String: void <init>(char[])>($r36);

        $r30[3] = $r35;

        $r37 = new java.lang.String;

        $r38 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: char[] getMethodName()>();

        specialinvoke $r37.<java.lang.String: void <init>(char[])>($r38);

        $r30[4] = $r37;

        $r39 = new java.lang.String;

        $r40 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: char[] getMethodDescriptor()>();

        specialinvoke $r39.<java.lang.String: void <init>(char[])>($r40);

        $r30[5] = $r39;

        $r41 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r31, $r30);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r41);

        goto label14;

     label11:
        $i4 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getNameAndTypeInfoNameIndex()>();

        $i5 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getNameAndTypeInfoDescriptorIndex()>();

        $r6 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IConstantPool: org.eclipse.jdt.core.util.IConstantPoolEntry decodeEntry(int)>($i4);

        $r7 = interfaceinvoke $r6.<org.eclipse.jdt.core.util.IConstantPoolEntry: char[] getUtf8Value()>();

        $r8 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IConstantPool: org.eclipse.jdt.core.util.IConstantPoolEntry decodeEntry(int)>($i5);

        $r9 = interfaceinvoke $r8.<org.eclipse.jdt.core.util.IConstantPoolEntry: char[] getUtf8Value()>();

        $r11 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_constantpool_name_and_type>;

        $r10 = newarray (java.lang.String)[5];

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i17);

        $r10[0] = $r12;

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        $r10[1] = $r13;

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);

        $r10[2] = $r14;

        $r15 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r7);

        $r10[3] = $r15;

        $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r9);

        $r10[4] = $r16;

        $r17 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r11, $r10);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        goto label14;

     label12:
        $r55 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_constantpool_string>;

        $r54 = newarray (java.lang.String)[3];

        $r56 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i17);

        $r54[0] = $r56;

        $i12 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getStringIndex()>();

        $r57 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i12);

        $r54[1] = $r57;

        $r58 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: java.lang.String getStringValue()>();

        $r59 = staticinvoke <org.eclipse.jdt.internal.core.util.Disassembler: java.lang.String decodeStringValue(java.lang.String)>($r58);

        $r54[2] = $r59;

        $r60 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r55, $r54);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r60);

        goto label14;

     label13:
        $r89 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_constantpool_utf8>;

        $r88 = newarray (java.lang.String)[2];

        $r90 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i17);

        $r88[0] = $r90;

        $r91 = new java.lang.String;

        $r92 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: char[] getUtf8Value()>();

        specialinvoke $r91.<java.lang.String: void <init>(char[])>($r92);

        $r93 = staticinvoke <org.eclipse.jdt.internal.core.util.Disassembler: java.lang.String decodeStringValue(java.lang.String)>($r91);

        $r88[1] = $r93;

        $r94 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r89, $r88);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r94);

     label14:
        i17 = i17 + 1;

     label15:
        if i17 < $i1 goto label01;

        return;
    }

    private void disassemble(org.eclipse.jdt.core.util.IEnclosingMethodAttribute, java.lang.StringBuffer, java.lang.String, int)
    {
        org.eclipse.jdt.internal.core.util.Disassembler r0;
        java.lang.StringBuffer r1, $r5, $r7, $r8, $r10, $r11, $r12, $r14, $r16;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String r2, $r3, $r4, $r9;
        org.eclipse.jdt.core.util.IEnclosingMethodAttribute r6;
        char[] $r13, $r15, $r17;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r6 := @parameter0: org.eclipse.jdt.core.util.IEnclosingMethodAttribute;

        r1 := @parameter1: java.lang.StringBuffer;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $i1 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i1);

        $r3 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_enclosingmethodheader>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r4 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_constantpoolindex>;

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $i2 = interfaceinvoke r6.<org.eclipse.jdt.core.util.IEnclosingMethodAttribute: int getEnclosingClassIndex()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r9 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_constantpoolindex>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $i3 = interfaceinvoke r6.<org.eclipse.jdt.core.util.IEnclosingMethodAttribute: int getMethodNameAndTypeIndex()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r13 = interfaceinvoke r6.<org.eclipse.jdt.core.util.IEnclosingMethodAttribute: char[] getEnclosingClass()>();

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r13);

        $i4 = interfaceinvoke r6.<org.eclipse.jdt.core.util.IEnclosingMethodAttribute: int getMethodNameAndTypeIndex()>();

        if $i4 == 0 goto label1;

        $r14 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r15 = interfaceinvoke r6.<org.eclipse.jdt.core.util.IEnclosingMethodAttribute: char[] getMethodName()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r15);

        $r17 = interfaceinvoke r6.<org.eclipse.jdt.core.util.IEnclosingMethodAttribute: char[] getMethodDescriptor()>();

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r17);

     label1:
        return;
    }

    private void disassembleEnumConstants(org.eclipse.jdt.core.util.IFieldInfo, java.lang.StringBuffer, java.lang.String, int, char[][], int)
    {
        org.eclipse.jdt.internal.core.util.Disassembler r0;
        char[][] r10;
        org.eclipse.jdt.core.util.IClassFileAttribute $r5, $r7;
        java.lang.StringBuffer r1, $r11;
        int i0, $i1, i3, $i4, i5, $i6;
        org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute $r15;
        java.lang.String r2, $r12, $r13, $r17;
        org.eclipse.jdt.core.util.IFieldInfo r3;
        org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute $r16;
        char $c2;
        char[] $r4, $r6, $r9, $r14;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r3 := @parameter0: org.eclipse.jdt.core.util.IFieldInfo;

        r1 := @parameter1: java.lang.StringBuffer;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r10 := @parameter4: char[][];

        i3 := @parameter5: int;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

        $r4 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] RUNTIME_VISIBLE_ANNOTATIONS>;

        $r5 = staticinvoke <org.eclipse.jdt.internal.core.util.Util: org.eclipse.jdt.core.util.IClassFileAttribute getAttribute(org.eclipse.jdt.core.util.IFieldInfo,char[])>(r3, $r4);

        $r6 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] RUNTIME_INVISIBLE_ANNOTATIONS>;

        $r7 = staticinvoke <org.eclipse.jdt.internal.core.util.Util: org.eclipse.jdt.core.util.IClassFileAttribute getAttribute(org.eclipse.jdt.core.util.IFieldInfo,char[])>(r3, $r6);

        if $r7 == null goto label01;

        $r16 = (org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute) $r7;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleAsModifier(org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute,java.lang.StringBuffer,java.lang.String,int,int)>($r16, r1, r2, i0, i3);

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

     label01:
        if $r5 == null goto label02;

        $r15 = (org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute) $r5;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleAsModifier(org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute,java.lang.StringBuffer,java.lang.String,int,int)>($r15, r1, r2, i0, i3);

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

     label02:
        $r17 = new java.lang.String;

        $r9 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IFieldInfo: char[] getName()>();

        specialinvoke $r17.<java.lang.String: void <init>(char[])>($r9);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

        $i4 = lengthof r10;

        if $i4 == 0 goto label13;

        i5 = 0;

        goto label12;

     label03:
        if i5 == 0 goto label04;

        $r13 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_comma>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

     label04:
        $r14 = r10[i5];

        $i1 = lengthof $r14;

        tableswitch($i1)
        {
            case 1: goto label05;
            default: goto label10;
        };

     label05:
        $c2 = $r14[0];

        $i6 = (int) $c2;

        lookupswitch($i6)
        {
            case 66: goto label06;
            case 67: goto label08;
            case 68: goto label06;
            case 70: goto label06;
            case 73: goto label06;
            case 74: goto label06;
            case 83: goto label06;
            case 90: goto label07;
            default: goto label09;
        };

     label06:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

        goto label11;

     label07:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("false");

        goto label11;

     label08:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' \'");

     label09:
        goto label11;

     label10:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("null");

     label11:
        i5 = i5 + 1;

     label12:
        if i5 < $i4 goto label03;

     label13:
        $r11 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r12 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_comma>;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        return;
    }

    private void disassemble(org.eclipse.jdt.core.util.IFieldInfo, java.lang.StringBuffer, java.lang.String, int, int)
    {
        byte $b4, $b5;
        long $l6;
        org.eclipse.jdt.internal.core.util.Disassembler r0;
        java.lang.StringBuffer r1, $r23, $r24, $r28, $r32, $r35, $r36, $r68, $r69, $r70, $r71;
        java.lang.String r2, $r18, $r21, $r22, $r25, $r27, $r29, $r31, $r33, $r37, $r38, $r47, $r48, $r50, $r52, $r54, $r55, $r63, $r64, $r65, $r66, $r67;
        char[] $r4, $r5, $r8, $r9, $r14, $r15, $r16, $r17, $r39, $r40, $r41, $r42, $r43, $r53, $r56, $r58, $r61;
        org.eclipse.jdt.core.util.IClassFileAttribute $r6, r13, $r57, $r59;
        org.eclipse.jdt.core.util.IClassFileAttribute[] $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.eclipse.jdt.core.util.IFieldInfo r3;
        org.eclipse.jdt.core.util.IConstantPoolEntry $r19;
        org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute $r11, $r45;
        org.eclipse.jdt.core.util.ISignatureAttribute r7;
        float $f0;
        java.lang.String[] $r46;
        int i0, i1, $i2, $i3, $i8, $i9, $i10, $i11, $i13, $i14, $i15, i16, i17, $i18;
        org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute $r12, $r44;
        double $d0, $d1, $d2;
        org.eclipse.jdt.core.util.IConstantValueAttribute $r62;
        char $c7, $c12;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r3 := @parameter0: org.eclipse.jdt.core.util.IFieldInfo;

        r1 := @parameter1: java.lang.StringBuffer;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

        $r4 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IFieldInfo: char[] getDescriptor()>();

        $r5 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] SIGNATURE>;

        $r6 = staticinvoke <org.eclipse.jdt.internal.core.util.Util: org.eclipse.jdt.core.util.IClassFileAttribute getAttribute(org.eclipse.jdt.core.util.IFieldInfo,char[])>(r3, $r5);

        r7 = (org.eclipse.jdt.core.util.ISignatureAttribute) $r6;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i1, 5);

        if $z0 == 0 goto label02;

        $r47 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String classfileformat_fieldddescriptor>;

        $r46 = newarray (java.lang.String)[2];

        $i15 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IFieldInfo: int getDescriptorIndex()>();

        $r48 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i15);

        $r46[0] = $r48;

        $r65 = new java.lang.String;

        specialinvoke $r65.<java.lang.String: void <init>(char[])>($r4);

        $r46[1] = $r65;

        $r50 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r47, $r46);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r50);

        $z5 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IFieldInfo: boolean isDeprecated()>();

        if $z5 == 0 goto label01;

        $r55 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_deprecated>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r55);

     label01:
        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

        if r7 == null goto label02;

        $r52 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_signatureattributeheader>;

        $r66 = new java.lang.String;

        $r53 = interfaceinvoke r7.<org.eclipse.jdt.core.util.ISignatureAttribute: char[] getSignature()>();

        specialinvoke $r66.<java.lang.String: void <init>(char[])>($r53);

        $r54 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object)>($r52, $r66);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r54);

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

     label02:
        $r56 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] RUNTIME_VISIBLE_ANNOTATIONS>;

        $r57 = staticinvoke <org.eclipse.jdt.internal.core.util.Util: org.eclipse.jdt.core.util.IClassFileAttribute getAttribute(org.eclipse.jdt.core.util.IFieldInfo,char[])>(r3, $r56);

        $r58 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] RUNTIME_INVISIBLE_ANNOTATIONS>;

        $r59 = staticinvoke <org.eclipse.jdt.internal.core.util.Util: org.eclipse.jdt.core.util.IClassFileAttribute getAttribute(org.eclipse.jdt.core.util.IFieldInfo,char[])>(r3, $r58);

        $z6 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i1, 1);

        if $z6 == 0 goto label04;

        if $r59 == null goto label03;

        $r45 = (org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute) $r59;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleAsModifier(org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute,java.lang.StringBuffer,java.lang.String,int,int)>($r45, r1, r2, i0, i1);

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

     label03:
        if $r57 == null goto label04;

        $r44 = (org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute) $r57;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleAsModifier(org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute,java.lang.StringBuffer,java.lang.String,int,int)>($r44, r1, r2, i0, i1);

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

     label04:
        $z7 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i1, 16);

        if $z7 == 0 goto label06;

        $i14 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IFieldInfo: int getAccessFlags()>();

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void decodeModifiersForFieldForWorkingCopy(java.lang.StringBuffer,int)>(r1, $i14);

        if r7 == null goto label05;

        $r41 = interfaceinvoke r7.<org.eclipse.jdt.core.util.ISignatureAttribute: char[] getSignature()>();

        $r42 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: char[] getSignatureForField(char[])>($r41);

        $r43 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: char[] returnClassName(char[],char,int)>($r42, 46, i1);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r43);

        goto label08;

     label05:
        $r39 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: char[] getSignatureForField(char[])>($r4);

        $r40 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: char[] returnClassName(char[],char,int)>($r39, 46, i1);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r40);

        goto label08;

     label06:
        $i2 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IFieldInfo: int getAccessFlags()>();

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void decodeModifiersForField(java.lang.StringBuffer,int)>(r1, $i2);

        $z1 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IFieldInfo: boolean isSynthetic()>();

        if $z1 == 0 goto label07;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("synthetic");

        $r38 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_space>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r38);

     label07:
        $r8 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: char[] getSignatureForField(char[])>($r4);

        $r9 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: char[] returnClassName(char[],char,int)>($r8, 46, i1);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r9);

     label08:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r67 = new java.lang.String;

        $r61 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IFieldInfo: char[] getName()>();

        specialinvoke $r67.<java.lang.String: void <init>(char[])>($r61);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r67);

        $r62 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IFieldInfo: org.eclipse.jdt.core.util.IConstantValueAttribute getConstantValueAttribute()>();

        if $r62 == null goto label25;

        $r18 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_fieldhasconstant>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r19 = interfaceinvoke $r62.<org.eclipse.jdt.core.util.IConstantValueAttribute: org.eclipse.jdt.core.util.IConstantPoolEntry getConstantValue()>();

        $i3 = interfaceinvoke $r19.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getKind()>();

        tableswitch($i3)
        {
            case 3: goto label15;
            case 4: goto label10;
            case 5: goto label09;
            case 6: goto label11;
            case 7: goto label25;
            case 8: goto label24;
            default: goto label25;
        };

     label09:
        $r68 = new java.lang.StringBuffer;

        $l6 = interfaceinvoke $r19.<org.eclipse.jdt.core.util.IConstantPoolEntry: long getLongValue()>();

        $r27 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l6);

        specialinvoke $r68.<java.lang.StringBuffer: void <init>(java.lang.String)>($r27);

        $r28 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("L");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        goto label25;

     label10:
        $r69 = new java.lang.StringBuffer;

        $f0 = interfaceinvoke $r19.<org.eclipse.jdt.core.util.IConstantPoolEntry: float getFloatValue()>();

        $r31 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f0);

        specialinvoke $r69.<java.lang.StringBuffer: void <init>(java.lang.String)>($r31);

        $r32 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("f");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r33);

        goto label25;

     label11:
        $d0 = interfaceinvoke $r19.<org.eclipse.jdt.core.util.IConstantPoolEntry: double getDoubleValue()>();

        $z4 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i1, 16);

        if $z4 == 0 goto label14;

        $b4 = $d0 cmpl #Infinity;

        if $b4 != 0 goto label12;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("1.0 / 0.0");

        goto label25;

     label12:
        $b5 = $d0 cmpl #-Infinity;

        if $b5 != 0 goto label13;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-1.0 / 0.0");

        goto label25;

     label13:
        $d2 = interfaceinvoke $r19.<org.eclipse.jdt.core.util.IConstantPoolEntry: double getDoubleValue()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d2);

        goto label25;

     label14:
        $d1 = interfaceinvoke $r19.<org.eclipse.jdt.core.util.IConstantPoolEntry: double getDoubleValue()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d1);

        goto label25;

     label15:
        $c7 = $r4[0];

        $i18 = (int) $c7;

        lookupswitch($i18)
        {
            case 66: goto label20;
            case 67: goto label16;
            case 73: goto label22;
            case 83: goto label21;
            case 90: goto label17;
            default: goto label23;
        };

     label16:
        $r70 = new java.lang.StringBuffer;

        specialinvoke $r70.<java.lang.StringBuffer: void <init>(java.lang.String)>("\'");

        $i11 = interfaceinvoke $r19.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getIntegerValue()>();

        $c12 = (char) $i11;

        $r35 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c12);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r37);

        goto label25;

     label17:
        $i8 = interfaceinvoke $r19.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getIntegerValue()>();

        if $i8 != 1 goto label18;

        $r63 = "true";

        goto label19;

     label18:
        $r63 = "false";

     label19:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r63);

        goto label25;

     label20:
        $i13 = interfaceinvoke $r19.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getIntegerValue()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i13);

        goto label25;

     label21:
        $i9 = interfaceinvoke $r19.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getIntegerValue()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i9);

        goto label25;

     label22:
        $i10 = interfaceinvoke $r19.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getIntegerValue()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i10);

     label23:
        goto label25;

     label24:
        $r71 = new java.lang.StringBuffer;

        specialinvoke $r71.<java.lang.StringBuffer: void <init>(java.lang.String)>("\"");

        $r21 = interfaceinvoke $r19.<org.eclipse.jdt.core.util.IConstantPoolEntry: java.lang.String getStringValue()>();

        $r22 = staticinvoke <org.eclipse.jdt.internal.core.util.Disassembler: java.lang.String decodeStringValue(java.lang.String)>($r21);

        $r23 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

     label25:
        $r64 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_endoffieldheader>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r64);

        $z8 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i1, 4);

        if $z8 == 0 goto label31;

        $r10 = interfaceinvoke r3.<org.eclipse.jdt.core.util.IFieldInfo: org.eclipse.jdt.core.util.IClassFileAttribute[] getAttributes()>();

        i16 = lengthof $r10;

        if i16 == 0 goto label29;

        i17 = 0;

        goto label28;

     label26:
        r13 = $r10[i17];

        if r13 == $r62 goto label27;

        if r13 == r7 goto label27;

        if r13 == $r59 goto label27;

        if r13 == $r57 goto label27;

        $r14 = interfaceinvoke r13.<org.eclipse.jdt.core.util.IClassFileAttribute: char[] getAttributeName()>();

        $r15 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] DEPRECATED>;

        $z2 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r14, $r15);

        if $z2 != 0 goto label27;

        $r16 = interfaceinvoke r13.<org.eclipse.jdt.core.util.IClassFileAttribute: char[] getAttributeName()>();

        $r17 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] SYNTHETIC>;

        $z3 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r16, $r17);

        if $z3 != 0 goto label27;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IClassFileAttribute,java.lang.StringBuffer,java.lang.String,int,int)>(r13, r1, r2, i0, i1);

     label27:
        i17 = i17 + 1;

     label28:
        if i17 < i16 goto label26;

     label29:
        if $r57 == null goto label30;

        $r12 = (org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute) $r57;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute,java.lang.StringBuffer,java.lang.String,int,int)>($r12, r1, r2, i0, i1);

     label30:
        if $r59 == null goto label31;

        $r11 = (org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute) $r59;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute,java.lang.StringBuffer,java.lang.String,int,int)>($r11, r1, r2, i0, i1);

     label31:
        return;
    }

    private void disassemble(org.eclipse.jdt.core.util.IInnerClassesAttribute, java.lang.StringBuffer, java.lang.String, int)
    {
        org.eclipse.jdt.core.util.IInnerClassesAttributeEntry $r44;
        org.eclipse.jdt.internal.core.util.Disassembler r0;
        java.lang.StringBuffer r1, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r22, $r24, $r26, $r28, $r30, $r31, $r35, $r38, $r41;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, i8;
        java.lang.String r2, $r3, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r21, $r23, $r25, $r27, $r29, $r32, $r33, $r34, $r37, $r40, $r43;
        org.eclipse.jdt.core.util.IInnerClassesAttribute r4;
        org.eclipse.jdt.core.util.IInnerClassesAttributeEntry[] $r5;
        char[] $r36, $r39, $r42;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r4 := @parameter0: org.eclipse.jdt.core.util.IInnerClassesAttribute;

        r1 := @parameter1: java.lang.StringBuffer;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

        $r3 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_innerattributesheader>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $i1 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i1);

        $r5 = interfaceinvoke r4.<org.eclipse.jdt.core.util.IInnerClassesAttribute: org.eclipse.jdt.core.util.IInnerClassesAttributeEntry[] getInnerClassAttributesEntries()>();

        i2 = lengthof $r5;

        i8 = 0;

        goto label6;

     label1:
        if i8 == 0 goto label2;

        $r43 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_comma>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r43);

        $i7 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i7);

     label2:
        $r44 = $r5[i8];

        $i3 = interfaceinvoke $r44.<org.eclipse.jdt.core.util.IInnerClassesAttributeEntry: int getInnerClassNameIndex()>();

        $i4 = interfaceinvoke $r44.<org.eclipse.jdt.core.util.IInnerClassesAttributeEntry: int getOuterClassNameIndex()>();

        $i5 = interfaceinvoke $r44.<org.eclipse.jdt.core.util.IInnerClassesAttributeEntry: int getInnerNameIndex()>();

        $i6 = interfaceinvoke $r44.<org.eclipse.jdt.core.util.IInnerClassesAttributeEntry: int getAccessFlags()>();

        $r6 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_openinnerclassentry>;

        $r7 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_inner_class_info_name>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_constantpoolindex>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        if $i3 == 0 goto label3;

        $r40 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_space>;

        $r41 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r42 = interfaceinvoke $r44.<org.eclipse.jdt.core.util.IInnerClassesAttributeEntry: char[] getInnerClassName()>();

        virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r42);

     label3:
        $r12 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_comma>;

        $r13 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_space>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_outer_class_info_name>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_constantpoolindex>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        if $i4 == 0 goto label4;

        $r37 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_space>;

        $r38 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r37);

        $r39 = interfaceinvoke $r44.<org.eclipse.jdt.core.util.IInnerClassesAttributeEntry: char[] getOuterClassName()>();

        virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r39);

     label4:
        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, i0);

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void dumpTab(int,java.lang.StringBuffer)>(i0, r1);

        $r20 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_space>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $r21 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_inner_name>;

        $r22 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r23 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_constantpoolindex>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i5);

        if $i5 == 0 goto label5;

        $r34 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_space>;

        $r35 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        $r36 = interfaceinvoke $r44.<org.eclipse.jdt.core.util.IInnerClassesAttributeEntry: char[] getInnerName()>();

        virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r36);

     label5:
        $r25 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_comma>;

        $r26 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r27 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_space>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $r29 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_inner_accessflags>;

        $r30 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i6);

        $r32 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_space>;

        virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void decodeModifiersForInnerClasses(java.lang.StringBuffer,int,boolean)>(r1, $i6, 1);

        $r33 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_closeinnerclassentry>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r33);

        i8 = i8 + 1;

     label6:
        if i8 < i2 goto label1;

        return;
    }

    private void disassemble(int, org.eclipse.jdt.core.util.IParameterAnnotation, java.lang.StringBuffer, java.lang.String, int, int)
    {
        org.eclipse.jdt.core.util.IAnnotation[] $r1;
        java.lang.String[] $r5;
        org.eclipse.jdt.internal.core.util.Disassembler r2;
        java.lang.StringBuffer r3;
        int i0, $i1, i2, $i3, i4, i5, $i6, i7;
        java.lang.String r4, $r6, $r7, $r8, $r9;
        org.eclipse.jdt.core.util.IParameterAnnotation r0;
        org.eclipse.jdt.core.util.IAnnotation $r10;

        r2 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        i2 := @parameter0: int;

        r0 := @parameter1: org.eclipse.jdt.core.util.IParameterAnnotation;

        r3 := @parameter2: java.lang.StringBuffer;

        r4 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        i5 := @parameter5: int;

        $r1 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IParameterAnnotation: org.eclipse.jdt.core.util.IAnnotation[] getAnnotations()>();

        $i1 = i0 + 1;

        specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r3, r4, $i1);

        $r6 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_parameterannotationentrystart>;

        $r5 = newarray (java.lang.String)[2];

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

        $r5[0] = $r7;

        $i3 = lengthof $r1;

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        $r5[1] = $r8;

        $r9 = staticinvoke <org.eclipse.jdt.internal.core.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object[])>($r6, $r5);

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        i7 = 0;

        i4 = lengthof $r1;

        goto label2;

     label1:
        $r10 = $r1[i7];

        $i6 = i0 + 1;

        specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IAnnotation,java.lang.StringBuffer,java.lang.String,int,int)>($r10, r3, r4, $i6, i5);

        i7 = i7 + 1;

     label2:
        if i7 < i4 goto label1;

        return;
    }

    private void disassemble(org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute, java.lang.StringBuffer, java.lang.String, int, int)
    {
        org.eclipse.jdt.core.util.IAnnotation[] $r5;
        org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute r4;
        org.eclipse.jdt.internal.core.util.Disassembler r0;
        org.eclipse.jdt.core.util.IAnnotation $r6;
        java.lang.StringBuffer r1;
        int i0, $i1, i2, i3, $i4, i5;
        java.lang.String r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r4 := @parameter0: org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute;

        r1 := @parameter1: java.lang.StringBuffer;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i3 := @parameter4: int;

        $i1 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i1);

        $r3 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_runtimeinvisibleannotationsattributeheader>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = interfaceinvoke r4.<org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute: org.eclipse.jdt.core.util.IAnnotation[] getAnnotations()>();

        i5 = 0;

        i2 = lengthof $r5;

        goto label2;

     label1:
        $r6 = $r5[i5];

        $i4 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IAnnotation,java.lang.StringBuffer,java.lang.String,int,int)>($r6, r1, r2, $i4, i3);

        i5 = i5 + 1;

     label2:
        if i5 < i2 goto label1;

        return;
    }

    private void disassemble(org.eclipse.jdt.core.util.IRuntimeInvisibleParameterAnnotationsAttribute, java.lang.StringBuffer, java.lang.String, int, int)
    {
        org.eclipse.jdt.internal.core.util.Disassembler r0;
        org.eclipse.jdt.core.util.IParameterAnnotation $r6;
        java.lang.StringBuffer r1;
        org.eclipse.jdt.core.util.IRuntimeInvisibleParameterAnnotationsAttribute r4;
        int i0, $i1, i2, i3, $i4, i5;
        org.eclipse.jdt.core.util.IParameterAnnotation[] $r5;
        java.lang.String r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r4 := @parameter0: org.eclipse.jdt.core.util.IRuntimeInvisibleParameterAnnotationsAttribute;

        r1 := @parameter1: java.lang.StringBuffer;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i3 := @parameter4: int;

        $i1 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i1);

        $r3 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_runtimeinvisibleparameterannotationsattributeheader>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = interfaceinvoke r4.<org.eclipse.jdt.core.util.IRuntimeInvisibleParameterAnnotationsAttribute: org.eclipse.jdt.core.util.IParameterAnnotation[] getParameterAnnotations()>();

        i5 = 0;

        i2 = lengthof $r5;

        goto label2;

     label1:
        $r6 = $r5[i5];

        $i4 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(int,org.eclipse.jdt.core.util.IParameterAnnotation,java.lang.StringBuffer,java.lang.String,int,int)>(i5, $r6, r1, r2, $i4, i3);

        i5 = i5 + 1;

     label2:
        if i5 < i2 goto label1;

        return;
    }

    private void disassemble(org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute, java.lang.StringBuffer, java.lang.String, int, int)
    {
        org.eclipse.jdt.core.util.IAnnotation[] $r5;
        org.eclipse.jdt.internal.core.util.Disassembler r0;
        org.eclipse.jdt.core.util.IAnnotation $r6;
        java.lang.StringBuffer r1;
        int i0, $i1, i2, i3, $i4, i5;
        org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute r4;
        java.lang.String r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r4 := @parameter0: org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute;

        r1 := @parameter1: java.lang.StringBuffer;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i3 := @parameter4: int;

        $i1 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i1);

        $r3 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_runtimevisibleannotationsattributeheader>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = interfaceinvoke r4.<org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute: org.eclipse.jdt.core.util.IAnnotation[] getAnnotations()>();

        i5 = 0;

        i2 = lengthof $r5;

        goto label2;

     label1:
        $r6 = $r5[i5];

        $i4 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IAnnotation,java.lang.StringBuffer,java.lang.String,int,int)>($r6, r1, r2, $i4, i3);

        i5 = i5 + 1;

     label2:
        if i5 < i2 goto label1;

        return;
    }

    private void disassemble(org.eclipse.jdt.core.util.IRuntimeVisibleParameterAnnotationsAttribute, java.lang.StringBuffer, java.lang.String, int, int)
    {
        org.eclipse.jdt.internal.core.util.Disassembler r0;
        org.eclipse.jdt.core.util.IParameterAnnotation $r6;
        java.lang.StringBuffer r1;
        int i0, $i1, i2, i3, $i4, i5;
        org.eclipse.jdt.core.util.IParameterAnnotation[] $r5;
        org.eclipse.jdt.core.util.IRuntimeVisibleParameterAnnotationsAttribute r4;
        java.lang.String r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r4 := @parameter0: org.eclipse.jdt.core.util.IRuntimeVisibleParameterAnnotationsAttribute;

        r1 := @parameter1: java.lang.StringBuffer;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i3 := @parameter4: int;

        $i1 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r1, r2, $i1);

        $r3 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_runtimevisibleparameterannotationsattributeheader>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = interfaceinvoke r4.<org.eclipse.jdt.core.util.IRuntimeVisibleParameterAnnotationsAttribute: org.eclipse.jdt.core.util.IParameterAnnotation[] getParameterAnnotations()>();

        i5 = 0;

        i2 = lengthof $r5;

        goto label2;

     label1:
        $r6 = $r5[i5];

        $i4 = i0 + 1;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(int,org.eclipse.jdt.core.util.IParameterAnnotation,java.lang.StringBuffer,java.lang.String,int,int)>(i5, $r6, r1, r2, $i4, i3);

        i5 = i5 + 1;

     label2:
        if i5 < i2 goto label1;

        return;
    }

    private java.lang.String disassemble(org.eclipse.jdt.core.util.IVerificationTypeInfo[], int)
    {
        org.eclipse.jdt.internal.core.util.Disassembler r6;
        org.eclipse.jdt.core.util.IVerificationTypeInfo[] r1;
        org.eclipse.jdt.core.util.IVerificationTypeInfo $r2, $r3, $r4;
        java.lang.StringBuffer $r8, $r13;
        int i0, $i1, $i2, $i3, i4, i6, $i7;
        java.lang.String $r7, $r9, $r10;
        char $c5;
        char[] $r5, r11, $r12;

        r6 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r1 := @parameter0: org.eclipse.jdt.core.util.IVerificationTypeInfo[];

        i4 := @parameter1: int;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(123);

        i6 = 0;

        i0 = lengthof r1;

        goto label14;

     label01:
        if i6 == 0 goto label02;

        $r7 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_comma>;

        $r8 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_space>;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label02:
        $r2 = r1[i6];

        $i1 = interfaceinvoke $r2.<org.eclipse.jdt.core.util.IVerificationTypeInfo: int getTag()>();

        tableswitch($i1)
        {
            case 0: goto label10;
            case 1: goto label05;
            case 2: goto label04;
            case 3: goto label03;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label12;
            case 7: goto label08;
            case 8: goto label11;
            default: goto label13;
        };

     label03:
        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("double");

        goto label13;

     label04:
        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("float");

        goto label13;

     label05:
        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("int");

        goto label13;

     label06:
        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("long");

        goto label13;

     label07:
        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("null");

        goto label13;

     label08:
        $r4 = r1[i6];

        $r5 = interfaceinvoke $r4.<org.eclipse.jdt.core.util.IVerificationTypeInfo: char[] getClassTypeName()>();

        r11 = $r5;

        staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: void replace(char[],char,char)>($r5, 47, 46);

        $i3 = lengthof $r5;

        if $i3 <= 0 goto label09;

        $c5 = $r5[0];

        $i7 = (int) $c5;

        if $i7 != 91 goto label09;

        r11 = staticinvoke <org.eclipse.jdt.core.Signature: char[] toCharArray(char[])>($r5);

     label09:
        $r12 = specialinvoke r6.<org.eclipse.jdt.internal.core.util.Disassembler: char[] returnClassName(char[],char,int)>(r11, 46, i4);

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r12);

        goto label13;

     label10:
        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_");

        goto label13;

     label11:
        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("uninitialized(");

        $r3 = r1[i6];

        $i2 = interfaceinvoke $r3.<org.eclipse.jdt.core.util.IVerificationTypeInfo: int getOffset()>();

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        goto label13;

     label12:
        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("uninitialized_this");

     label13:
        i6 = i6 + 1;

     label14:
        if i6 < i0 goto label01;

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r13);

        return $r10;
    }

    private void disassembleAsModifier(org.eclipse.jdt.core.util.IAnnotation, java.lang.StringBuffer, java.lang.String, int, int)
    {
        org.eclipse.jdt.internal.core.util.Disassembler r5;
        org.eclipse.jdt.core.util.IAnnotationComponent[] $r8;
        java.lang.StringBuffer r3, $r4;
        int i0, i1, i2, $i3, i4;
        java.lang.String r9;
        org.eclipse.jdt.core.util.IAnnotationComponent $r10;
        org.eclipse.jdt.core.util.IAnnotation r0;
        char[] $r1, $r2, $r6, $r7;

        r5 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r0 := @parameter0: org.eclipse.jdt.core.util.IAnnotation;

        r3 := @parameter1: java.lang.StringBuffer;

        r9 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        i0 := @parameter4: int;

        $r1 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IAnnotation: char[] getTypeName()>();

        $r2 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] replaceOnCopy(char[],char,char)>($r1, 47, 46);

        $r4 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(64);

        $r6 = staticinvoke <org.eclipse.jdt.core.Signature: char[] toCharArray(char[])>($r2);

        $r7 = specialinvoke r5.<org.eclipse.jdt.internal.core.util.Disassembler: char[] returnClassName(char[],char,int)>($r6, 46, i0);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r7);

        $r8 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IAnnotation: org.eclipse.jdt.core.util.IAnnotationComponent[] getComponents()>();

        i1 = lengthof $r8;

        if i1 == 0 goto label4;

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

        i4 = 0;

        goto label3;

     label1:
        if i4 <= 0 goto label2;

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        specialinvoke r5.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r3, r9, i2);

     label2:
        $r10 = $r8[i4];

        $i3 = i2 + 1;

        specialinvoke r5.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleAsModifier(org.eclipse.jdt.core.util.IAnnotationComponent,java.lang.StringBuffer,java.lang.String,int,int)>($r10, r3, r9, $i3, i0);

        i4 = i4 + 1;

     label3:
        if i4 < i1 goto label1;

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

     label4:
        return;
    }

    private void disassembleAsModifier(org.eclipse.jdt.core.util.IAnnotationComponent, java.lang.StringBuffer, java.lang.String, int, int)
    {
        org.eclipse.jdt.internal.core.util.Disassembler r4;
        org.eclipse.jdt.core.util.IAnnotationComponent r1;
        org.eclipse.jdt.core.util.IAnnotationComponentValue $r5;
        java.lang.StringBuffer r0, $r3;
        int i0, i1, $i2;
        char[] $r2;
        java.lang.String r6;

        r4 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r1 := @parameter0: org.eclipse.jdt.core.util.IAnnotationComponent;

        r0 := @parameter1: java.lang.StringBuffer;

        r6 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $r2 = interfaceinvoke r1.<org.eclipse.jdt.core.util.IAnnotationComponent: char[] getComponentName()>();

        $r3 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r2);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(61);

        $r5 = interfaceinvoke r1.<org.eclipse.jdt.core.util.IAnnotationComponent: org.eclipse.jdt.core.util.IAnnotationComponentValue getComponentValue()>();

        $i2 = i0 + 1;

        specialinvoke r4.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleAsModifier(org.eclipse.jdt.core.util.IAnnotationComponentValue,java.lang.StringBuffer,java.lang.String,int,int)>($r5, r0, r6, $i2, i1);

        return;
    }

    private void disassembleAsModifier(org.eclipse.jdt.core.util.IAnnotationComponentValue, java.lang.StringBuffer, java.lang.String, int, int)
    {
        org.eclipse.jdt.core.util.IAnnotationComponentValue[] $r15;
        org.eclipse.jdt.core.util.IAnnotationComponentValue r0, $r17;
        org.eclipse.jdt.core.util.IConstantPoolEntry $r10, $r18;
        float $f0;
        long $l6;
        org.eclipse.jdt.internal.core.util.Disassembler r5;
        java.lang.StringBuffer r4, $r8, $r9, $r19, $r21, $r22, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r37, $r38;
        int $i0, i1, i2, i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i13, $i14, i15;
        java.lang.String r16, $r20, $r23, $r36, r40, $r41;
        double $d0;
        char $c12;
        org.eclipse.jdt.core.util.IAnnotation $r39;
        char[] $r1, $r2, $r3, $r6, $r7, $r11, $r12, $r13, $r14, $r35;

        r5 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r0 := @parameter0: org.eclipse.jdt.core.util.IAnnotationComponentValue;

        r4 := @parameter1: java.lang.StringBuffer;

        r16 := @parameter2: java.lang.String;

        i3 := @parameter3: int;

        i1 := @parameter4: int;

        $i0 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IAnnotationComponentValue: int getTag()>();

        lookupswitch($i0)
        {
            case 64: goto label18;
            case 66: goto label01;
            case 67: goto label01;
            case 68: goto label01;
            case 70: goto label01;
            case 73: goto label01;
            case 74: goto label01;
            case 83: goto label01;
            case 90: goto label01;
            case 91: goto label19;
            case 99: goto label17;
            case 101: goto label16;
            case 115: goto label01;
            default: goto label23;
        };

     label01:
        $r18 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IAnnotationComponentValue: org.eclipse.jdt.core.util.IConstantPoolEntry getConstantValue()>();

        r40 = null;

        $i5 = interfaceinvoke $r18.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getKind()>();

        tableswitch($i5)
        {
            case 1: goto label14;
            case 2: goto label15;
            case 3: goto label05;
            case 4: goto label03;
            case 5: goto label02;
            case 6: goto label04;
            default: goto label15;
        };

     label02:
        $r19 = new java.lang.StringBuffer;

        $l6 = interfaceinvoke $r18.<org.eclipse.jdt.core.util.IConstantPoolEntry: long getLongValue()>();

        $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l6);

        specialinvoke $r19.<java.lang.StringBuffer: void <init>(java.lang.String)>($r20);

        $r21 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("L");

        r40 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label15;

     label03:
        $r22 = new java.lang.StringBuffer;

        $f0 = interfaceinvoke $r18.<org.eclipse.jdt.core.util.IConstantPoolEntry: float getFloatValue()>();

        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f0);

        specialinvoke $r22.<java.lang.StringBuffer: void <init>(java.lang.String)>($r23);

        $r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("f");

        r40 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label15;

     label04:
        $d0 = interfaceinvoke $r18.<org.eclipse.jdt.core.util.IConstantPoolEntry: double getDoubleValue()>();

        r40 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        goto label15;

     label05:
        $i7 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IAnnotationComponentValue: int getTag()>();

        lookupswitch($i7)
        {
            case 66: goto label10;
            case 67: goto label06;
            case 73: goto label12;
            case 83: goto label11;
            case 90: goto label07;
            default: goto label13;
        };

     label06:
        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>(java.lang.String)>("\'");

        $i11 = interfaceinvoke $r18.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getIntegerValue()>();

        $c12 = (char) $i11;

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c12);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        r40 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label15;

     label07:
        $i8 = interfaceinvoke $r18.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getIntegerValue()>();

        if $i8 != 1 goto label08;

        $r41 = "true";

        goto label09;

     label08:
        $r41 = "false";

     label09:
        r40 = $r41;

        goto label15;

     label10:
        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>(java.lang.String)>("(byte) ");

        $i13 = interfaceinvoke $r18.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getIntegerValue()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i13);

        r40 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label15;

     label11:
        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>(java.lang.String)>("(short) ");

        $i9 = interfaceinvoke $r18.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getIntegerValue()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i9);

        r40 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label15;

     label12:
        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>(java.lang.String)>("(int) ");

        $i10 = interfaceinvoke $r18.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getIntegerValue()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i10);

        r40 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

     label13:
        goto label15;

     label14:
        $r34 = new java.lang.StringBuffer;

        specialinvoke $r34.<java.lang.StringBuffer: void <init>(java.lang.String)>("\"");

        $r35 = interfaceinvoke $r18.<org.eclipse.jdt.core.util.IConstantPoolEntry: char[] getUtf8Value()>();

        $r36 = staticinvoke <org.eclipse.jdt.internal.core.util.Disassembler: java.lang.String decodeStringValue(char[])>($r35);

        $r37 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        r40 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.String toString()>();

     label15:
        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r40);

        goto label23;

     label16:
        $r1 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IAnnotationComponentValue: char[] getEnumConstantTypeName()>();

        $r2 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] replaceOnCopy(char[],char,char)>($r1, 47, 46);

        $r3 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IAnnotationComponentValue: char[] getEnumConstantName()>();

        $r6 = staticinvoke <org.eclipse.jdt.core.Signature: char[] toCharArray(char[])>($r2);

        $r7 = specialinvoke r5.<org.eclipse.jdt.internal.core.util.Disassembler: char[] returnClassName(char[],char,int)>($r6, 46, i1);

        $r8 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r3);

        goto label23;

     label17:
        $r10 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IAnnotationComponentValue: org.eclipse.jdt.core.util.IConstantPoolEntry getClassInfo()>();

        $r11 = interfaceinvoke $r10.<org.eclipse.jdt.core.util.IConstantPoolEntry: char[] getUtf8Value()>();

        $r12 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] replaceOnCopy(char[],char,char)>($r11, 47, 46);

        $r13 = staticinvoke <org.eclipse.jdt.core.Signature: char[] toCharArray(char[])>($r12);

        $r14 = specialinvoke r5.<org.eclipse.jdt.internal.core.util.Disassembler: char[] returnClassName(char[],char,int)>($r13, 46, i1);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r14);

        goto label23;

     label18:
        $r39 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IAnnotationComponentValue: org.eclipse.jdt.core.util.IAnnotation getAnnotationValue()>();

        $i14 = i3 + 1;

        specialinvoke r5.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleAsModifier(org.eclipse.jdt.core.util.IAnnotation,java.lang.StringBuffer,java.lang.String,int,int)>($r39, r4, r16, $i14, i1);

        goto label23;

     label19:
        $r15 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IAnnotationComponentValue: org.eclipse.jdt.core.util.IAnnotationComponentValue[] getAnnotationComponentValues()>();

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(123);

        i15 = 0;

        i2 = lengthof $r15;

        goto label22;

     label20:
        if i15 <= 0 goto label21;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

     label21:
        $r17 = $r15[i15];

        $i4 = i3 + 1;

        specialinvoke r5.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleAsModifier(org.eclipse.jdt.core.util.IAnnotationComponentValue,java.lang.StringBuffer,java.lang.String,int,int)>($r17, r4, r16, $i4, i1);

        i15 = i15 + 1;

     label22:
        if i15 < i2 goto label20;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

     label23:
        return;
    }

    private void disassembleAsModifier(org.eclipse.jdt.core.util.IAnnotationDefaultAttribute, java.lang.StringBuffer, java.lang.String, int, int)
    {
        org.eclipse.jdt.internal.core.util.Disassembler r2;
        org.eclipse.jdt.core.util.IAnnotationComponentValue $r1;
        java.lang.StringBuffer r3;
        org.eclipse.jdt.core.util.IAnnotationDefaultAttribute r0;
        int i0, i1, $i2;
        java.lang.String r4;

        r2 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r0 := @parameter0: org.eclipse.jdt.core.util.IAnnotationDefaultAttribute;

        r3 := @parameter1: java.lang.StringBuffer;

        r4 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $r1 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IAnnotationDefaultAttribute: org.eclipse.jdt.core.util.IAnnotationComponentValue getMemberValue()>();

        $i2 = i0 + 1;

        specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleAsModifier(org.eclipse.jdt.core.util.IAnnotationComponentValue,java.lang.StringBuffer,java.lang.String,int,int)>($r1, r3, r4, $i2, i1);

        return;
    }

    private void disassembleAsModifier(org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute, java.lang.StringBuffer, java.lang.String, int, int)
    {
        org.eclipse.jdt.core.util.IAnnotation[] $r1;
        org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute r0;
        org.eclipse.jdt.internal.core.util.Disassembler r2;
        org.eclipse.jdt.core.util.IAnnotation $r5;
        java.lang.StringBuffer r3;
        int i0, i1, i2, $i3, i4;
        java.lang.String r4;

        r2 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r0 := @parameter0: org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute;

        r3 := @parameter1: java.lang.StringBuffer;

        r4 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $r1 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IRuntimeInvisibleAnnotationsAttribute: org.eclipse.jdt.core.util.IAnnotation[] getAnnotations()>();

        i4 = 0;

        i0 = lengthof $r1;

        goto label2;

     label1:
        $r5 = $r1[i4];

        $i3 = i1 + 1;

        specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleAsModifier(org.eclipse.jdt.core.util.IAnnotation,java.lang.StringBuffer,java.lang.String,int,int)>($r5, r3, r4, $i3, i2);

        i4 = i4 + 1;

     label2:
        if i4 < i0 goto label1;

        return;
    }

    private void disassembleAsModifier(org.eclipse.jdt.core.util.IRuntimeInvisibleParameterAnnotationsAttribute, java.lang.StringBuffer, int, java.lang.String, int, int)
    {
        org.eclipse.jdt.internal.core.util.Disassembler r2;
        org.eclipse.jdt.core.util.IParameterAnnotation $r5;
        java.lang.StringBuffer r3;
        org.eclipse.jdt.core.util.IRuntimeInvisibleParameterAnnotationsAttribute r0;
        org.eclipse.jdt.core.util.IParameterAnnotation[] $r1;
        int i0, $i1, i2, i3, $i4;
        java.lang.String r4;

        r2 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r0 := @parameter0: org.eclipse.jdt.core.util.IRuntimeInvisibleParameterAnnotationsAttribute;

        r3 := @parameter1: java.lang.StringBuffer;

        i0 := @parameter2: int;

        r4 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $r1 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IRuntimeInvisibleParameterAnnotationsAttribute: org.eclipse.jdt.core.util.IParameterAnnotation[] getParameterAnnotations()>();

        $i1 = lengthof $r1;

        if $i1 <= i0 goto label1;

        $r5 = $r1[i0];

        $i4 = i2 + 1;

        specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleAsModifier(org.eclipse.jdt.core.util.IParameterAnnotation,java.lang.StringBuffer,java.lang.String,int,int)>($r5, r3, r4, $i4, i3);

     label1:
        return;
    }

    private void disassembleAsModifier(org.eclipse.jdt.core.util.IRuntimeVisibleParameterAnnotationsAttribute, java.lang.StringBuffer, int, java.lang.String, int, int)
    {
        org.eclipse.jdt.internal.core.util.Disassembler r2;
        org.eclipse.jdt.core.util.IParameterAnnotation $r5;
        java.lang.StringBuffer r3;
        org.eclipse.jdt.core.util.IParameterAnnotation[] $r1;
        int i0, $i1, i2, i3, $i4;
        org.eclipse.jdt.core.util.IRuntimeVisibleParameterAnnotationsAttribute r0;
        java.lang.String r4;

        r2 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r0 := @parameter0: org.eclipse.jdt.core.util.IRuntimeVisibleParameterAnnotationsAttribute;

        r3 := @parameter1: java.lang.StringBuffer;

        i0 := @parameter2: int;

        r4 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $r1 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IRuntimeVisibleParameterAnnotationsAttribute: org.eclipse.jdt.core.util.IParameterAnnotation[] getParameterAnnotations()>();

        $i1 = lengthof $r1;

        if $i1 <= i0 goto label1;

        $r5 = $r1[i0];

        $i4 = i2 + 1;

        specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleAsModifier(org.eclipse.jdt.core.util.IParameterAnnotation,java.lang.StringBuffer,java.lang.String,int,int)>($r5, r3, r4, $i4, i3);

     label1:
        return;
    }

    private void disassembleAsModifier(org.eclipse.jdt.core.util.IParameterAnnotation, java.lang.StringBuffer, java.lang.String, int, int)
    {
        org.eclipse.jdt.core.util.IAnnotation[] $r1;
        org.eclipse.jdt.internal.core.util.Disassembler r2;
        org.eclipse.jdt.core.util.IParameterAnnotation r0;
        org.eclipse.jdt.core.util.IAnnotation $r5;
        java.lang.StringBuffer r3;
        int i0, i1, i2, $i3, i4;
        java.lang.String r4;

        r2 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r0 := @parameter0: org.eclipse.jdt.core.util.IParameterAnnotation;

        r3 := @parameter1: java.lang.StringBuffer;

        r4 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $r1 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IParameterAnnotation: org.eclipse.jdt.core.util.IAnnotation[] getAnnotations()>();

        i4 = 0;

        i0 = lengthof $r1;

        goto label3;

     label1:
        if i4 <= 0 goto label2;

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label2:
        $r5 = $r1[i4];

        $i3 = i1 + 1;

        specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleAsModifier(org.eclipse.jdt.core.util.IAnnotation,java.lang.StringBuffer,java.lang.String,int,int)>($r5, r3, r4, $i3, i2);

        i4 = i4 + 1;

     label3:
        if i4 < i0 goto label1;

        return;
    }

    private void disassembleAsModifier(org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute, java.lang.StringBuffer, java.lang.String, int, int)
    {
        org.eclipse.jdt.core.util.IAnnotation[] $r1;
        org.eclipse.jdt.internal.core.util.Disassembler r2;
        org.eclipse.jdt.core.util.IAnnotation $r5;
        java.lang.StringBuffer r3;
        int i0, i1, i2, $i3, i4;
        org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute r0;
        java.lang.String r4;

        r2 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r0 := @parameter0: org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute;

        r3 := @parameter1: java.lang.StringBuffer;

        r4 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $r1 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IRuntimeVisibleAnnotationsAttribute: org.eclipse.jdt.core.util.IAnnotation[] getAnnotations()>();

        i4 = 0;

        i0 = lengthof $r1;

        goto label3;

     label1:
        if i4 <= 0 goto label2;

        specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r3, r4, i1);

     label2:
        $r5 = $r1[i4];

        $i3 = i1 + 1;

        specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleAsModifier(org.eclipse.jdt.core.util.IAnnotation,java.lang.StringBuffer,java.lang.String,int,int)>($r5, r3, r4, $i3, i2);

        i4 = i4 + 1;

     label3:
        if i4 < i0 goto label1;

        return;
    }

    private void disassembleTypeMembers(org.eclipse.jdt.core.util.IClassFileReader, char[], java.lang.StringBuffer, java.lang.String, int, int, boolean)
    {
        char[][] $r10, $r21;
        org.eclipse.jdt.core.util.IClassFileReader r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11;
        org.eclipse.jdt.core.util.IFieldInfo $r5, $r11, $r12, $r34, r35;
        org.eclipse.jdt.internal.core.util.Disassembler r2;
        java.lang.StringBuffer r3;
        org.eclipse.jdt.core.util.IFieldInfo[] $r1;
        int i0, i1, $i2, $i3, $i4, i5, $i6, $i7, i8, i9, i10, i11, i12, i13;
        java.lang.String r4, $r22;
        org.eclipse.jdt.core.util.IMethodInfo $r8, r15;
        org.eclipse.jdt.core.util.IMethodInfo[] $r6, $r9;
        char[] r7, $r13, $r14, $r16, $r17, $r18, $r19, $r20, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33;

        r2 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r0 := @parameter0: org.eclipse.jdt.core.util.IClassFileReader;

        r7 := @parameter1: char[];

        r3 := @parameter2: java.lang.StringBuffer;

        r4 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        z0 := @parameter6: boolean;

        $r1 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IClassFileReader: org.eclipse.jdt.core.util.IFieldInfo[] getFieldInfos()>();

        if z0 == 0 goto label15;

        $z1 = specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: boolean checkMode(int,int)>(i1, 16);

        if $z1 == 0 goto label15;

        i8 = 0;

        i9 = lengthof $r1;

        $r9 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IClassFileReader: org.eclipse.jdt.core.util.IMethodInfo[] getMethodInfos()>();

        $r10 = specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: char[][] getConstructorArgumentsForEnum(org.eclipse.jdt.core.util.IMethodInfo[])>($r9);

        goto label02;

     label01:
        r35 = $r1[i8];

        $i3 = interfaceinvoke r35.<org.eclipse.jdt.core.util.IFieldInfo: int getAccessFlags()>();

        $i4 = $i3 & 16384;

        if $i4 == 0 goto label03;

        specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r3, r4, i0);

        $r34 = $r1[i8];

        specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleEnumConstants(org.eclipse.jdt.core.util.IFieldInfo,java.lang.StringBuffer,java.lang.String,int,char[][],int)>($r34, r3, r4, i0, $r10, i1);

        i8 = i8 + 1;

     label02:
        if i8 < i9 goto label01;

     label03:
        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        z11 = 0;

        goto label07;

     label04:
        if z11 != 0 goto label05;

        $r13 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] SYNTHETIC_ENUM_VALUES>;

        $r12 = $r1[i8];

        $r14 = interfaceinvoke $r12.<org.eclipse.jdt.core.util.IFieldInfo: char[] getName()>();

        $z2 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r13, $r14);

        if $z2 == 0 goto label05;

        z11 = 1;

        goto label06;

     label05:
        specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r3, r4, i0);

        $r11 = $r1[i8];

        specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IFieldInfo,java.lang.StringBuffer,java.lang.String,int,int)>($r11, r3, r4, i0, i1);

     label06:
        i8 = i8 + 1;

     label07:
        if i8 < i9 goto label04;

        i10 = 0;

        i5 = lengthof $r9;

        goto label14;

     label08:
        r15 = $r9[i10];

        $r16 = interfaceinvoke r15.<org.eclipse.jdt.core.util.IMethodInfo: char[] getName()>();

        $r17 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] VALUES>;

        $z3 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r16, $r17);

        if $z3 == 0 goto label09;

        $r28 = interfaceinvoke r15.<org.eclipse.jdt.core.util.IMethodInfo: char[] getDescriptor()>();

        staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: void replace(char[],char,char)>($r28, 47, 46);

        $i7 = staticinvoke <org.eclipse.jdt.core.Signature: int getParameterCount(char[])>($r28);

        if $i7 != 0 goto label13;

        $r29 = staticinvoke <org.eclipse.jdt.core.Signature: char[] getReturnType(char[])>($r28);

        $r30 = specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: char[] returnClassName(char[],char,int)>($r29, 46, i1);

        $r31 = newarray (char)[2];

        $r31[0] = 91;

        $r31[1] = 76;

        $r32 = newarray (char)[1];

        $r32[0] = 59;

        $r33 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concat(char[],char[],char[])>($r31, r7, $r32);

        $z10 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r30, $r33);

        if $z10 == 0 goto label13;

        goto label13;

     label09:
        $r18 = interfaceinvoke r15.<org.eclipse.jdt.core.util.IMethodInfo: char[] getName()>();

        $r19 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] VALUEOF>;

        $z4 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r18, $r19);

        if $z4 == 0 goto label10;

        $r20 = interfaceinvoke r15.<org.eclipse.jdt.core.util.IMethodInfo: char[] getDescriptor()>();

        staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: void replace(char[],char,char)>($r20, 47, 46);

        $r21 = staticinvoke <org.eclipse.jdt.core.Signature: char[][] getParameterTypes(char[])>($r20);

        $i6 = lengthof $r21;

        if $i6 != 1 goto label13;

        $r23 = $r21[0];

        $r22 = "Ljava.lang.String;";

        $r24 = virtualinvoke $r22.<java.lang.String: char[] toCharArray()>();

        $z8 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r23, $r24);

        if $z8 == 0 goto label13;

        $r25 = staticinvoke <org.eclipse.jdt.core.Signature: char[] getReturnType(char[])>($r20);

        $r26 = specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: char[] returnClassName(char[],char,int)>($r25, 46, i1);

        $r27 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concat(char,char[],char)>(76, r7, 59);

        $z9 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r26, $r27);

        if $z9 == 0 goto label13;

        goto label13;

     label10:
        $z5 = interfaceinvoke r15.<org.eclipse.jdt.core.util.IMethodInfo: boolean isClinit()>();

        if $z5 != 0 goto label13;

        $z6 = interfaceinvoke r15.<org.eclipse.jdt.core.util.IMethodInfo: boolean isSynthetic()>();

        if $z6 == 0 goto label11;

        goto label13;

     label11:
        $z7 = interfaceinvoke r15.<org.eclipse.jdt.core.util.IMethodInfo: boolean isConstructor()>();

        if $z7 == 0 goto label12;

        specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r3, r4, i0);

        specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: void disassembleEnumConstructor(org.eclipse.jdt.core.util.IClassFileReader,char[],org.eclipse.jdt.core.util.IMethodInfo,java.lang.StringBuffer,java.lang.String,int,int)>(r0, r7, r15, r3, r4, i0, i1);

        goto label13;

     label12:
        specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r3, r4, i0);

        specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IClassFileReader,char[],org.eclipse.jdt.core.util.IMethodInfo,java.lang.StringBuffer,java.lang.String,int,int)>(r0, r7, r15, r3, r4, i0, i1);

     label13:
        i10 = i10 + 1;

     label14:
        if i10 < i5 goto label08;

        goto label20;

     label15:
        i11 = 0;

        $i2 = lengthof $r1;

        goto label17;

     label16:
        specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r3, r4, i0);

        $r5 = $r1[i11];

        specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IFieldInfo,java.lang.StringBuffer,java.lang.String,int,int)>($r5, r3, r4, i0, i1);

        i11 = i11 + 1;

     label17:
        if i11 < $i2 goto label16;

        $r6 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IClassFileReader: org.eclipse.jdt.core.util.IMethodInfo[] getMethodInfos()>();

        i12 = 0;

        i13 = lengthof $r6;

        goto label19;

     label18:
        specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>(r3, r4, i0);

        $r8 = $r6[i12];

        specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: void disassemble(org.eclipse.jdt.core.util.IClassFileReader,char[],org.eclipse.jdt.core.util.IMethodInfo,java.lang.StringBuffer,java.lang.String,int,int)>(r0, r7, $r8, r3, r4, i0, i1);

        i12 = i12 + 1;

     label19:
        if i12 < i13 goto label18;

     label20:
        return;
    }

    private char[][] getConstructorArgumentsForEnum(org.eclipse.jdt.core.util.IMethodInfo[])
    {
        org.eclipse.jdt.core.util.IMethodInfo r1;
        org.eclipse.jdt.internal.core.util.Disassembler r5;
        char[][] $r3, $r4;
        org.eclipse.jdt.core.util.IMethodInfo[] r0;
        int i0, i1, i2;
        char[] $r2;
        boolean $z0;

        r5 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r0 := @parameter0: org.eclipse.jdt.core.util.IMethodInfo[];

        i2 = 0;

        i0 = lengthof r0;

        goto label3;

     label1:
        r1 = r0[i2];

        $z0 = interfaceinvoke r1.<org.eclipse.jdt.core.util.IMethodInfo: boolean isConstructor()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r1.<org.eclipse.jdt.core.util.IMethodInfo: char[] getDescriptor()>();

        $r3 = staticinvoke <org.eclipse.jdt.core.Signature: char[][] getParameterTypes(char[])>($r2);

        i1 = lengthof $r3;

        if i1 < 2 goto label2;

        $r4 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[][] subarray(char[][],int,int)>($r3, 2, i1);

        return $r4;

     label2:
        i2 = i2 + 1;

     label3:
        if i2 < i0 goto label1;

        return null;
    }

    private final void dumpTab(int, java.lang.StringBuffer)
    {
        java.lang.StringBuffer r0;
        int i0, i1;
        java.lang.String $r1;
        org.eclipse.jdt.internal.core.util.Disassembler r2;

        r2 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.StringBuffer;

        i1 = 0;

        goto label2;

     label1:
        $r1 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_indentation>;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

        return;
    }

    private final java.lang.String dumpNewLineWithTabs(java.lang.String, int)
    {
        java.lang.StringBuffer $r0;
        int i0;
        org.eclipse.jdt.internal.core.util.Disassembler r1;
        java.lang.String r2, $r3;

        r1 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        specialinvoke r1.<org.eclipse.jdt.internal.core.util.Disassembler: void writeNewLine(java.lang.StringBuffer,java.lang.String,int)>($r0, r2, i0);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        return $r3;
    }

    public java.lang.String getDescription()
    {
        java.lang.String $r0;
        org.eclipse.jdt.internal.core.util.Disassembler r1;

        r1 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        $r0 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_description>;

        return $r0;
    }

    private org.eclipse.jdt.core.util.IEnclosingMethodAttribute getEnclosingMethodAttribute(org.eclipse.jdt.core.util.IClassFileReader)
    {
        org.eclipse.jdt.internal.core.util.Disassembler r7;
        org.eclipse.jdt.core.util.IClassFileAttribute $r2, $r5;
        int i0, i1;
        org.eclipse.jdt.core.util.IEnclosingMethodAttribute $r6;
        org.eclipse.jdt.core.util.IClassFileReader r0;
        char[] $r3, $r4;
        org.eclipse.jdt.core.util.IClassFileAttribute[] $r1;
        boolean $z0;

        r7 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r0 := @parameter0: org.eclipse.jdt.core.util.IClassFileReader;

        $r1 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IClassFileReader: org.eclipse.jdt.core.util.IClassFileAttribute[] getAttributes()>();

        i1 = 0;

        i0 = lengthof $r1;

        goto label3;

     label1:
        $r2 = $r1[i1];

        $r3 = interfaceinvoke $r2.<org.eclipse.jdt.core.util.IClassFileAttribute: char[] getAttributeName()>();

        $r4 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] ENCLOSING_METHOD>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r3, $r4);

        if $z0 == 0 goto label2;

        $r5 = $r1[i1];

        $r6 = (org.eclipse.jdt.core.util.IEnclosingMethodAttribute) $r5;

        return $r6;

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < i0 goto label1;

        return null;
    }

    private org.eclipse.jdt.core.util.IClassFileAttribute getAttribute(char[], org.eclipse.jdt.core.util.ICodeAttribute)
    {
        org.eclipse.jdt.internal.core.util.Disassembler r6;
        org.eclipse.jdt.core.util.ICodeAttribute r0;
        org.eclipse.jdt.core.util.IClassFileAttribute $r2, $r5;
        int i0, i1;
        char[] $r3, r4;
        org.eclipse.jdt.core.util.IClassFileAttribute[] $r1;
        boolean $z0;

        r6 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r4 := @parameter0: char[];

        r0 := @parameter1: org.eclipse.jdt.core.util.ICodeAttribute;

        $r1 = interfaceinvoke r0.<org.eclipse.jdt.core.util.ICodeAttribute: org.eclipse.jdt.core.util.IClassFileAttribute[] getAttributes()>();

        i1 = 0;

        i0 = lengthof $r1;

        goto label3;

     label1:
        $r2 = $r1[i1];

        $r3 = interfaceinvoke $r2.<org.eclipse.jdt.core.util.IClassFileAttribute: char[] getAttributeName()>();

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r3, r4);

        if $z0 == 0 goto label2;

        $r5 = $r1[i1];

        return $r5;

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < i0 goto label1;

        return null;
    }

    private char[][] getParameterNames(char[], org.eclipse.jdt.core.util.ICodeAttribute, int)
    {
        org.eclipse.jdt.core.util.ILocalVariableAttribute $r8;
        char[][] r1;
        byte b3, $b5;
        org.eclipse.jdt.internal.core.util.Disassembler r15;
        org.eclipse.jdt.core.util.ICodeAttribute r2;
        int $i0, i1, $i2, $i4, i6, i7, i8;
        java.lang.String $r3, $r5, $r9, $r11, $r17, $r19;
        org.eclipse.jdt.core.util.ILocalVariableTableEntry[] $r14;
        org.eclipse.jdt.core.util.ILocalVariableTableEntry $r16;
        char[] r0, $r4, $r6, $r7, $r10, $r12, $r13, $r18, $r20, $r21, $r22;

        r15 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r0 := @parameter0: char[];

        r2 := @parameter1: org.eclipse.jdt.core.util.ICodeAttribute;

        i1 := @parameter2: int;

        $i0 = staticinvoke <org.eclipse.jdt.core.Signature: int getParameterCount(char[])>(r0);

        r1 = newarray (char[])[$i0];

        if r2 == null goto label10;

        $r8 = interfaceinvoke r2.<org.eclipse.jdt.core.util.ICodeAttribute: org.eclipse.jdt.core.util.ILocalVariableAttribute getLocalVariableAttribute()>();

        if $r8 == null goto label07;

        $r14 = interfaceinvoke $r8.<org.eclipse.jdt.core.util.ILocalVariableAttribute: org.eclipse.jdt.core.util.ILocalVariableTableEntry[] getLocalVariableTable()>();

        $i2 = i1 & 8;

        if $i2 == 0 goto label01;

        $b5 = 0;

        goto label02;

     label01:
        $b5 = 1;

     label02:
        b3 = $b5;

        i6 = 0;

        goto label06;

     label03:
        $i4 = specialinvoke r15.<org.eclipse.jdt.internal.core.util.Disassembler: int getLocalIndex(int,int,char[])>(b3, i6, r0);

        $r16 = specialinvoke r15.<org.eclipse.jdt.internal.core.util.Disassembler: org.eclipse.jdt.core.util.ILocalVariableTableEntry getEntryFor(int,org.eclipse.jdt.core.util.ILocalVariableTableEntry[])>($i4, $r14);

        if $r16 == null goto label04;

        $r22 = interfaceinvoke $r16.<org.eclipse.jdt.core.util.ILocalVariableTableEntry: char[] getName()>();

        r1[i6] = $r22;

        goto label05;

     label04:
        $r17 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_parametername>;

        $r18 = virtualinvoke $r17.<java.lang.String: char[] toCharArray()>();

        $r19 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i6);

        $r20 = virtualinvoke $r19.<java.lang.String: char[] toCharArray()>();

        $r21 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concat(char[],char[])>($r18, $r20);

        r1[i6] = $r21;

     label05:
        i6 = i6 + 1;

     label06:
        if i6 < $i0 goto label03;

        goto label13;

     label07:
        i7 = 0;

        goto label09;

     label08:
        $r9 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_parametername>;

        $r10 = virtualinvoke $r9.<java.lang.String: char[] toCharArray()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i7);

        $r12 = virtualinvoke $r11.<java.lang.String: char[] toCharArray()>();

        $r13 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concat(char[],char[])>($r10, $r12);

        r1[i7] = $r13;

        i7 = i7 + 1;

     label09:
        if i7 < $i0 goto label08;

        goto label13;

     label10:
        i8 = 0;

        goto label12;

     label11:
        $r3 = <org.eclipse.jdt.internal.core.util.Messages: java.lang.String disassembler_parametername>;

        $r4 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i8);

        $r6 = virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

        $r7 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concat(char[],char[])>($r4, $r6);

        r1[i8] = $r7;

        i8 = i8 + 1;

     label12:
        if i8 < $i0 goto label11;

     label13:
        return r1;
    }

    private int getLocalIndex(int, int, char[])
    {
        char $c3;
        org.eclipse.jdt.internal.core.util.Disassembler r3;
        char[][] $r1;
        int i0, i1, $i2, i4, i5, $i6;
        char[] r0, r2;

        r3 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: char[];

        i4 = i0;

        $r1 = staticinvoke <org.eclipse.jdt.core.Signature: char[][] getParameterTypes(char[])>(r0);

        i5 = 0;

        goto label7;

     label1:
        r2 = $r1[i5];

        $i2 = lengthof r2;

        tableswitch($i2)
        {
            case 1: goto label2;
            default: goto label5;
        };

     label2:
        $c3 = r2[0];

        $i6 = (int) $c3;

        lookupswitch($i6)
        {
            case 68: goto label3;
            case 74: goto label3;
            default: goto label4;
        };

     label3:
        i4 = i4 + 2;

        goto label6;

     label4:
        i4 = i4 + 1;

        goto label6;

     label5:
        i4 = i4 + 1;

     label6:
        i5 = i5 + 1;

     label7:
        if i5 < i1 goto label1;

        return i4;
    }

    private org.eclipse.jdt.core.util.ILocalVariableTableEntry getEntryFor(int, org.eclipse.jdt.core.util.ILocalVariableTableEntry[])
    {
        org.eclipse.jdt.core.util.ILocalVariableTableEntry[] r0;
        org.eclipse.jdt.core.util.ILocalVariableTableEntry r1;
        int i0, i1, $i2, i3;
        org.eclipse.jdt.internal.core.util.Disassembler r2;

        r2 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        i1 := @parameter0: int;

        r0 := @parameter1: org.eclipse.jdt.core.util.ILocalVariableTableEntry[];

        i3 = 0;

        i0 = lengthof r0;

        goto label3;

     label1:
        r1 = r0[i3];

        $i2 = interfaceinvoke r1.<org.eclipse.jdt.core.util.ILocalVariableTableEntry: int getIndex()>();

        if i1 != $i2 goto label2;

        return r1;

     label2:
        i3 = i3 + 1;

     label3:
        if i3 < i0 goto label1;

        return null;
    }

    private char[] getSignatureForField(char[])
    {
        char[] r0, $r1, $r2, $r3;
        org.eclipse.jdt.internal.core.util.Disassembler r4;

        r4 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r0 := @parameter0: char[];

        $r1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] replaceOnCopy(char[],char,char)>(r0, 47, 46);

        $r2 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] replaceOnCopy(char[],char,char)>($r1, 36, 37);

        $r3 = staticinvoke <org.eclipse.jdt.core.Signature: char[] toCharArray(char[])>($r2);

        staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: void replace(char[],char,char)>($r3, 37, 36);

        return $r3;
    }

    private boolean isDeprecated(org.eclipse.jdt.core.util.IClassFileReader)
    {
        org.eclipse.jdt.internal.core.util.Disassembler r5;
        org.eclipse.jdt.core.util.IClassFileAttribute $r2;
        int i0, i1;
        org.eclipse.jdt.core.util.IClassFileReader r0;
        char[] $r3, $r4;
        org.eclipse.jdt.core.util.IClassFileAttribute[] $r1;
        boolean $z0;

        r5 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r0 := @parameter0: org.eclipse.jdt.core.util.IClassFileReader;

        $r1 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IClassFileReader: org.eclipse.jdt.core.util.IClassFileAttribute[] getAttributes()>();

        i1 = 0;

        i0 = lengthof $r1;

        goto label3;

     label1:
        $r2 = $r1[i1];

        $r3 = interfaceinvoke $r2.<org.eclipse.jdt.core.util.IClassFileAttribute: char[] getAttributeName()>();

        $r4 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] DEPRECATED>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r3, $r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < i0 goto label1;

        return 0;
    }

    private boolean isSynthetic(org.eclipse.jdt.core.util.IClassFileReader)
    {
        org.eclipse.jdt.internal.core.util.Disassembler r5;
        org.eclipse.jdt.core.util.IClassFileAttribute $r2;
        int $i0, $i1, i2, i3;
        org.eclipse.jdt.core.util.IClassFileReader r0;
        char[] $r3, $r4;
        org.eclipse.jdt.core.util.IClassFileAttribute[] $r1;
        boolean $z0;

        r5 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r0 := @parameter0: org.eclipse.jdt.core.util.IClassFileReader;

        $i0 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IClassFileReader: int getAccessFlags()>();

        $i1 = $i0 & 4096;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        $r1 = interfaceinvoke r0.<org.eclipse.jdt.core.util.IClassFileReader: org.eclipse.jdt.core.util.IClassFileAttribute[] getAttributes()>();

        i3 = 0;

        i2 = lengthof $r1;

        goto label4;

     label2:
        $r2 = $r1[i3];

        $r3 = interfaceinvoke $r2.<org.eclipse.jdt.core.util.IClassFileAttribute: char[] getAttributeName()>();

        $r4 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] SYNTHETIC>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r3, $r4);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i3 = i3 + 1;

     label4:
        if i3 < i2 goto label2;

        return 0;
    }

    private boolean checkMode(int, int)
    {
        int i0, i1, $i2;
        org.eclipse.jdt.internal.core.util.Disassembler r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 & i1;

        if $i2 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isCompact(int)
    {
        int i0, $i1;
        org.eclipse.jdt.internal.core.util.Disassembler r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        i0 := @parameter0: int;

        $i1 = i0 & 8;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private char[] returnClassName(char[], char, int)
    {
        char c2;
        org.eclipse.jdt.internal.core.util.Disassembler r1;
        int $i0, i1, $i3, $i4, $i5, $i7;
        char[] r0, $r2, $r3;
        boolean $z0;

        r1 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r0 := @parameter0: char[];

        c2 := @parameter1: char;

        i1 := @parameter2: int;

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r3 = <org.eclipse.jdt.core.compiler.CharOperation: char[] NO_CHAR>;

        return $r3;

     label1:
        $z0 = specialinvoke r1.<org.eclipse.jdt.internal.core.util.Disassembler: boolean isCompact(int)>(i1);

        if $z0 == 0 goto label2;

        $i3 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int lastIndexOf(char,char[])>(c2, r0);

        $i7 = (int) -1;

        if $i3 == $i7 goto label2;

        $i5 = $i3 + 1;

        $i4 = lengthof r0;

        $r2 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] subarray(char[],int,int)>(r0, $i5, $i4);

        return $r2;

     label2:
        return r0;
    }

    private void writeNewLine(java.lang.StringBuffer, java.lang.String, int)
    {
        java.lang.StringBuffer r0;
        int i0;
        java.lang.String r1;
        org.eclipse.jdt.internal.core.util.Disassembler r2;

        r2 := @this: org.eclipse.jdt.internal.core.util.Disassembler;

        r0 := @parameter0: java.lang.StringBuffer;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        specialinvoke r2.<org.eclipse.jdt.internal.core.util.Disassembler: void dumpTab(int,java.lang.StringBuffer)>(i0, r0);

        return;
    }
}
