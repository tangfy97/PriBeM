public class javax.servlet.HttpMethodConstraintElement extends javax.servlet.HttpConstraintElement
{
    private java.lang.String methodName;

    public void <init>(java.lang.String)
    {
        int $i0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;
        javax.servlet.HttpMethodConstraintElement r0;

        r0 := @this: javax.servlet.HttpMethodConstraintElement;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<javax.servlet.HttpConstraintElement: void <init>()>();

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid HTTP method name");

        throw $r2;

     label2:
        r0.<javax.servlet.HttpMethodConstraintElement: java.lang.String methodName> = r1;

        return;
    }

    public void <init>(java.lang.String, javax.servlet.HttpConstraintElement)
    {
        javax.servlet.HttpConstraintElement r1;
        java.lang.String[] $r4;
        java.lang.IllegalArgumentException $r6;
        javax.servlet.HttpMethodConstraintElement r0;
        javax.servlet.'annotation'.ServletSecurity$EmptyRoleSemantic $r2;
        javax.servlet.'annotation'.ServletSecurity$TransportGuarantee $r3;
        int $i0;
        java.lang.String r5;

        r0 := @this: javax.servlet.HttpMethodConstraintElement;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: javax.servlet.HttpConstraintElement;

        $r2 = virtualinvoke r1.<javax.servlet.HttpConstraintElement: javax.servlet.'annotation'.ServletSecurity$EmptyRoleSemantic getEmptyRoleSemantic()>();

        $r3 = virtualinvoke r1.<javax.servlet.HttpConstraintElement: javax.servlet.'annotation'.ServletSecurity$TransportGuarantee getTransportGuarantee()>();

        $r4 = virtualinvoke r1.<javax.servlet.HttpConstraintElement: java.lang.String[] getRolesAllowed()>();

        specialinvoke r0.<javax.servlet.HttpConstraintElement: void <init>(javax.servlet.'annotation'.ServletSecurity$EmptyRoleSemantic,javax.servlet.'annotation'.ServletSecurity$TransportGuarantee,java.lang.String[])>($r2, $r3, $r4);

        if r5 == null goto label1;

        $i0 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid HTTP method name");

        throw $r6;

     label2:
        r0.<javax.servlet.HttpMethodConstraintElement: java.lang.String methodName> = r5;

        return;
    }

    public java.lang.String getMethodName()
    {
        java.lang.String $r1;
        javax.servlet.HttpMethodConstraintElement r0;

        r0 := @this: javax.servlet.HttpMethodConstraintElement;

        $r1 = r0.<javax.servlet.HttpMethodConstraintElement: java.lang.String methodName>;

        return $r1;
    }
}
