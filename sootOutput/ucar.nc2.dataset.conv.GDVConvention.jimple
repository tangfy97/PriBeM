public class ucar.nc2.dataset.conv.GDVConvention extends ucar.nc2.dataset.conv.CSMConvention
{
    protected ucar.nc2.dataset.ProjectionCT projCT;

    public void <init>()
    {
        ucar.nc2.dataset.conv.GDVConvention r0;

        r0 := @this: ucar.nc2.dataset.conv.GDVConvention;

        specialinvoke r0.<ucar.nc2.dataset.conv.CSMConvention: void <init>()>();

        r0.<ucar.nc2.dataset.conv.GDVConvention: ucar.nc2.dataset.ProjectionCT projCT> = null;

        r0.<ucar.nc2.dataset.conv.GDVConvention: java.lang.String conventionName> = "GDV";

        r0.<ucar.nc2.dataset.conv.GDVConvention: boolean checkForMeter> = 0;

        return;
    }

    public void augmentDataset(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask)
    {
        ucar.nc2.dataset.conv.GDVConvention r0;
        ucar.nc2.util.CancelTask r16;
        ucar.nc2.constants.AxisType $r6, $r8;
        java.lang.String $r7, $r9, $r15;
        ucar.nc2.dataset.VariableDS $r5;
        ucar.nc2.dataset.ProjectionCT $r2, $r3, $r4;
        ucar.nc2.Attribute $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.dataset.conv.GDVConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r16 := @parameter1: ucar.nc2.util.CancelTask;

        $r2 = specialinvoke r0.<ucar.nc2.dataset.conv.GDVConvention: ucar.nc2.dataset.ProjectionCT makeProjectionCT(ucar.nc2.dataset.NetcdfDataset)>(r1);

        r0.<ucar.nc2.dataset.conv.GDVConvention: ucar.nc2.dataset.ProjectionCT projCT> = $r2;

        $r3 = r0.<ucar.nc2.dataset.conv.GDVConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        if $r3 == null goto label1;

        $r4 = r0.<ucar.nc2.dataset.conv.GDVConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        $r5 = virtualinvoke r0.<ucar.nc2.dataset.conv.GDVConvention: ucar.nc2.dataset.VariableDS makeCoordinateTransformVariable(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.CoordinateTransform)>(r1, $r4);

        virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r5);

        $r6 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoX>;

        $r7 = specialinvoke r0.<ucar.nc2.dataset.conv.GDVConvention: java.lang.String findCoordinateName(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r6);

        $r8 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoY>;

        $r9 = specialinvoke r0.<ucar.nc2.dataset.conv.GDVConvention: java.lang.String findCoordinateName(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r8);

        if $r7 == null goto label1;

        if $r9 == null goto label1;

        $r10 = new ucar.nc2.Attribute;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxes", $r15);

        virtualinvoke $r5.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r10);

     label1:
        virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        return;
    }

    protected void findCoordinateAxes(ucar.nc2.dataset.NetcdfDataset)
    {
        java.lang.Object[] $r9;
        ucar.nc2.dataset.CoordSysBuilder$VarProcess r5;
        ucar.nc2.dataset.conv.GDVConvention r0;
        java.util.Formatter $r11;
        int $i0;
        ucar.nc2.Variable r6, $r10;
        java.lang.String $r7, $r12;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r2;
        java.util.List $r1;
        java.lang.Object $r4;
        ucar.nc2.Dimension $r8;
        ucar.nc2.dataset.NetcdfDataset r3;

        r0 := @this: ucar.nc2.dataset.conv.GDVConvention;

        r3 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = r0.<ucar.nc2.dataset.conv.GDVConvention: java.util.List varList>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (ucar.nc2.dataset.CoordSysBuilder$VarProcess) $r4;

        $z0 = r5.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: boolean isCoordinateVariable>;

        if $z0 == 0 goto label2;

        goto label1;

     label2:
        r6 = r5.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: ucar.nc2.Variable v>;

        $z1 = r6 instanceof ucar.nc2.dataset.VariableDS;

        if $z1 != 0 goto label3;

        goto label1;

     label3:
        $r7 = specialinvoke r0.<ucar.nc2.dataset.conv.GDVConvention: java.lang.String findAlias(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>(r3, r6);

        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i0 != 0 goto label4;

        goto label1;

     label4:
        $r8 = virtualinvoke r3.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>($r7);

        if null == $r8 goto label5;

        r5.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: boolean isCoordinateAxis> = 1;

        $r11 = r0.<ucar.nc2.dataset.conv.GDVConvention: java.util.Formatter parseInfo>;

        $r9 = newarray (java.lang.Object)[2];

        $r10 = r5.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: ucar.nc2.Variable v>;

        $r12 = virtualinvoke $r10.<ucar.nc2.Variable: java.lang.String getName()>();

        $r9[0] = $r12;

        $r9[1] = $r7;

        virtualinvoke $r11.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" Coordinate Axis added (GDV alias) = %s for dimension %s\n", $r9);

     label5:
        goto label1;

     label6:
        specialinvoke r0.<ucar.nc2.dataset.conv.CSMConvention: void findCoordinateAxes(ucar.nc2.dataset.NetcdfDataset)>(r3);

        specialinvoke r0.<ucar.nc2.dataset.conv.GDVConvention: void findCoordinateAxesForce(ucar.nc2.dataset.NetcdfDataset)>(r3);

        return;
    }

    private void findCoordinateAxesForce(ucar.nc2.dataset.NetcdfDataset)
    {
        java.lang.Object[] $r12;
        ucar.nc2.dataset.CoordSysBuilder$VarProcess r20, r21;
        java.util.HashMap $r0;
        ucar.nc2.dataset.conv.GDVConvention r1;
        java.util.Formatter $r14;
        ucar.nc2.constants.AxisType $r10, $r19;
        ucar.nc2.Variable $r8, $r13, $r17, r22;
        java.lang.String $r15;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r3, $r5;
        java.util.List $r2, $r4;
        ucar.nc2.dataset.VariableEnhanced $r9, $r18;
        java.lang.Object $r6, $r11, $r16;
        ucar.nc2.dataset.NetcdfDataset r7;

        r1 := @this: ucar.nc2.dataset.conv.GDVConvention;

        r7 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = r1.<ucar.nc2.dataset.conv.GDVConvention: java.util.List varList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r16 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r20 = (ucar.nc2.dataset.CoordSysBuilder$VarProcess) $r16;

        $z3 = r20.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: boolean isCoordinateAxis>;

        if $z3 == 0 goto label2;

        $r17 = r20.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: ucar.nc2.Variable v>;

        $r18 = (ucar.nc2.dataset.VariableEnhanced) $r17;

        $r19 = virtualinvoke r1.<ucar.nc2.dataset.conv.GDVConvention: ucar.nc2.constants.AxisType getAxisType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.VariableEnhanced)>(r7, $r18);

        if $r19 == null goto label2;

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, r20);

     label2:
        goto label1;

     label3:
        $r4 = r1.<ucar.nc2.dataset.conv.GDVConvention: java.util.List varList>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z4 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label8;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r21 = (ucar.nc2.dataset.CoordSysBuilder$VarProcess) $r6;

        $z1 = r21.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: boolean isCoordinateVariable>;

        if $z1 == 0 goto label5;

        goto label4;

     label5:
        r22 = r21.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: ucar.nc2.Variable v>;

        $z2 = r22 instanceof ucar.nc2.dataset.VariableDS;

        if $z2 != 0 goto label6;

        goto label4;

     label6:
        $r8 = r21.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: ucar.nc2.Variable v>;

        $r9 = (ucar.nc2.dataset.VariableEnhanced) $r8;

        $r10 = virtualinvoke r1.<ucar.nc2.dataset.conv.GDVConvention: ucar.nc2.constants.AxisType getAxisType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.VariableEnhanced)>(r7, $r9);

        if $r10 == null goto label7;

        $r11 = virtualinvoke $r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r10);

        if $r11 != null goto label7;

        r21.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: boolean isCoordinateAxis> = 1;

        $r14 = r1.<ucar.nc2.dataset.conv.GDVConvention: java.util.Formatter parseInfo>;

        $r12 = newarray (java.lang.Object)[2];

        $r13 = r21.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: ucar.nc2.Variable v>;

        $r15 = virtualinvoke $r13.<ucar.nc2.Variable: java.lang.String getName()>();

        $r12[0] = $r15;

        $r12[1] = $r10;

        virtualinvoke $r14.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" Coordinate Axis added (GDV forced) = %s  for axis %s\n", $r12);

     label7:
        goto label4;

     label8:
        return;
    }

    private java.lang.String findCoordinateName(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.constants.AxisType)
    {
        java.util.Iterator $r2;
        ucar.nc2.dataset.conv.GDVConvention r7;
        java.util.List $r1;
        ucar.nc2.dataset.VariableEnhanced r5;
        ucar.nc2.constants.AxisType r6, $r8;
        java.lang.Object $r3;
        ucar.nc2.Variable r4;
        java.lang.String $r9;
        ucar.nc2.dataset.NetcdfDataset r0;
        boolean $z0;

        r7 := @this: ucar.nc2.dataset.conv.GDVConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r6 := @parameter1: ucar.nc2.constants.AxisType;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.nc2.Variable) $r3;

        r5 = (ucar.nc2.dataset.VariableEnhanced) r4;

        $r8 = virtualinvoke r7.<ucar.nc2.dataset.conv.GDVConvention: ucar.nc2.constants.AxisType getAxisType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.VariableEnhanced)>(r0, r5);

        if r6 != $r8 goto label2;

        $r9 = interfaceinvoke r5.<ucar.nc2.dataset.VariableEnhanced: java.lang.String getName()>();

        return $r9;

     label2:
        goto label1;

     label3:
        return null;
    }

    protected void makeCoordinateTransforms(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.ProjectionCT $r1, $r3, $r6;
        ucar.nc2.dataset.CoordSysBuilder$VarProcess $r5;
        ucar.nc2.dataset.conv.GDVConvention r0;
        java.lang.String $r4;
        ucar.nc2.dataset.NetcdfDataset r2;

        r0 := @this: ucar.nc2.dataset.conv.GDVConvention;

        r2 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = r0.<ucar.nc2.dataset.conv.GDVConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        if $r1 == null goto label1;

        $r3 = r0.<ucar.nc2.dataset.conv.GDVConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        $r4 = virtualinvoke $r3.<ucar.nc2.dataset.ProjectionCT: java.lang.String getName()>();

        $r5 = virtualinvoke r0.<ucar.nc2.dataset.conv.GDVConvention: ucar.nc2.dataset.CoordSysBuilder$VarProcess findVarProcess(java.lang.String)>($r4);

        if $r5 == null goto label1;

        $r6 = r0.<ucar.nc2.dataset.conv.GDVConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        $r5.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: ucar.nc2.dataset.CoordinateTransform ct> = $r6;

     label1:
        specialinvoke r0.<ucar.nc2.dataset.conv.CSMConvention: void makeCoordinateTransforms(ucar.nc2.dataset.NetcdfDataset)>(r2);

        return;
    }

    protected ucar.nc2.constants.AxisType getAxisType(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.dataset.VariableEnhanced)
    {
        ucar.nc2.dataset.conv.GDVConvention r4;
        ucar.nc2.constants.AxisType $r3, $r8, $r14, $r16, $r17, $r18, $r19, $r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        ucar.nc2.Variable r1;
        java.lang.String $r2, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r15;
        ucar.nc2.dataset.VariableEnhanced r0;
        ucar.nc2.dataset.NetcdfDataset r5;

        r4 := @this: ucar.nc2.dataset.conv.GDVConvention;

        r5 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r0 := @parameter1: ucar.nc2.dataset.VariableEnhanced;

        r1 = (ucar.nc2.Variable) r0;

        $r2 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("x");

        if $z0 != 0 goto label01;

        $r6 = specialinvoke r4.<ucar.nc2.dataset.conv.GDVConvention: java.lang.String findAlias(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>(r5, r1);

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("x");

        if $z1 == 0 goto label02;

     label01:
        $r3 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoX>;

        return $r3;

     label02:
        $z2 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lon");

        if $z2 != 0 goto label03;

        $z3 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("longitude");

        if $z3 != 0 goto label03;

        $r7 = specialinvoke r4.<ucar.nc2.dataset.conv.GDVConvention: java.lang.String findAlias(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>(r5, r1);

        $z4 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lon");

        if $z4 == 0 goto label04;

     label03:
        $r17 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        return $r17;

     label04:
        $z5 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("y");

        if $z5 != 0 goto label05;

        $r9 = specialinvoke r4.<ucar.nc2.dataset.conv.GDVConvention: java.lang.String findAlias(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>(r5, r1);

        $z6 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("y");

        if $z6 == 0 goto label06;

     label05:
        $r8 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoY>;

        return $r8;

     label06:
        $z7 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lat");

        if $z7 != 0 goto label07;

        $z8 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("latitude");

        if $z8 != 0 goto label07;

        $r10 = specialinvoke r4.<ucar.nc2.dataset.conv.GDVConvention: java.lang.String findAlias(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>(r5, r1);

        $z9 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lat");

        if $z9 == 0 goto label08;

     label07:
        $r18 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        return $r18;

     label08:
        $z10 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lev");

        if $z10 != 0 goto label09;

        $r11 = specialinvoke r4.<ucar.nc2.dataset.conv.GDVConvention: java.lang.String findAlias(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>(r5, r1);

        $z11 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lev");

        if $z11 != 0 goto label09;

        $z12 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("level");

        if $z12 != 0 goto label09;

        $r12 = specialinvoke r4.<ucar.nc2.dataset.conv.GDVConvention: java.lang.String findAlias(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>(r5, r1);

        $z13 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("level");

        if $z13 == 0 goto label10;

     label09:
        $r19 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoZ>;

        return $r19;

     label10:
        $z14 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("z");

        if $z14 != 0 goto label11;

        $r13 = specialinvoke r4.<ucar.nc2.dataset.conv.GDVConvention: java.lang.String findAlias(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>(r5, r1);

        $z15 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("z");

        if $z15 != 0 goto label11;

        $z16 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("altitude");

        if $z16 != 0 goto label11;

        $z17 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("depth");

        if $z17 == 0 goto label12;

     label11:
        $r20 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        return $r20;

     label12:
        $z18 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("time");

        if $z18 != 0 goto label13;

        $r15 = specialinvoke r4.<ucar.nc2.dataset.conv.GDVConvention: java.lang.String findAlias(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>(r5, r1);

        $z19 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("time");

        if $z19 == 0 goto label14;

     label13:
        $r14 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        return $r14;

     label14:
        $r16 = specialinvoke r4.<ucar.nc2.dataset.conv.CSMConvention: ucar.nc2.constants.AxisType getAxisType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.VariableEnhanced)>(r5, r0);

        return $r16;
    }

    private java.lang.String findAlias(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Variable)
    {
        ucar.nc2.Variable r1;
        ucar.nc2.dataset.conv.GDVConvention r3;
        java.lang.String $r2, r4;
        ucar.nc2.dataset.NetcdfDataset r0;

        r3 := @this: ucar.nc2.dataset.conv.GDVConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: ucar.nc2.Variable;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r1, "coord_axis", null);

        r4 = $r2;

        if $r2 != null goto label1;

        r4 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r1, "coord_alias", "");

     label1:
        return r4;
    }

    private ucar.nc2.dataset.ProjectionCT makeProjectionCT(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.conv.GDVConvention r5;
        ucar.unidata.geoloc.ProjectionImpl r26;
        java.util.Formatter $r8, $r13, $r15, $r20;
        ucar.unidata.geoloc.projection.TransverseMercator $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        ucar.unidata.geoloc.projection.Stereographic $r6;
        java.lang.Object[] $r7, $r12, $r14, $r21;
        java.lang.Double $r22, $r23, $r24, $r25;
        double[] r3;
        java.util.StringTokenizer $r4, $r17;
        int $i0, $i1, i2;
        java.lang.String $r1, $r2, $r11, $r18, r19, $r28;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        ucar.nc2.dataset.ProjectionCT $r27;
        java.lang.NumberFormatException $r16;
        ucar.unidata.geoloc.projection.LambertConformal $r10;
        ucar.nc2.dataset.NetcdfDataset r0;

        r5 := @this: ucar.nc2.dataset.conv.GDVConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "projection", null);

        if null != $r1 goto label01;

        $r15 = r5.<ucar.nc2.dataset.conv.GDVConvention: java.util.Formatter parseInfo>;

        $r14 = newarray (java.lang.Object)[0];

        virtualinvoke $r15.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GDV Conventions error: NO projection name found \n", $r14);

        return null;

     label01:
        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "projection_params", null);

        r19 = $r2;

        if null != $r2 goto label02;

        r19 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "proj_params", null);

     label02:
        if null != r19 goto label03;

        $r13 = r5.<ucar.nc2.dataset.conv.GDVConvention: java.util.Formatter parseInfo>;

        $r12 = newarray (java.lang.Object)[0];

        virtualinvoke $r13.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GDV Conventions error: NO projection parameters found \n", $r12);

        return null;

     label03:
        i2 = 0;

        r3 = newarray (double)[4];

     label04:
        $r4 = new java.util.StringTokenizer;

        specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r19, " ,");

     label05:
        $z0 = virtualinvoke $r4.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label06;

        if i2 >= 4 goto label06;

        $i0 = i2;

        i2 = i2 + 1;

        $r11 = virtualinvoke $r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $d10 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r11);

        r3[$i0] = $d10;

        goto label05;

     label06:
        goto label09;

     label07:
        $r16 := @caughtexception;

        $r17 = new java.util.StringTokenizer;

        specialinvoke $r17.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r19, " ,");

     label08:
        $z4 = virtualinvoke $r17.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z4 == 0 goto label09;

        if i2 >= 4 goto label09;

        virtualinvoke $r17.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i1 = i2;

        i2 = i2 + 1;

        $r18 = virtualinvoke $r17.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $d11 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r18);

        r3[$i1] = $d11;

        goto label08;

     label09:
        $r20 = r5.<ucar.nc2.dataset.conv.GDVConvention: java.util.Formatter parseInfo>;

        $r21 = newarray (java.lang.Object)[5];

        $r21[0] = $r1;

        $d12 = r3[0];

        $r22 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d12);

        $r21[1] = $r22;

        $d13 = r3[1];

        $r23 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d13);

        $r21[2] = $r23;

        $d14 = r3[2];

        $r24 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d14);

        $r21[3] = $r24;

        $d15 = r3[3];

        $r25 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d15);

        $r21[4] = $r25;

        virtualinvoke $r20.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GDV Conventions projection %s params = %f %f %f %f\n", $r21);

        $z5 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("LambertConformal");

        if $z5 == 0 goto label10;

        $r10 = new ucar.unidata.geoloc.projection.LambertConformal;

        $d9 = r3[0];

        $d8 = r3[1];

        $d7 = r3[2];

        $d6 = r3[3];

        specialinvoke $r10.<ucar.unidata.geoloc.projection.LambertConformal: void <init>(double,double,double,double)>($d9, $d8, $d7, $d6);

        r26 = $r10;

        goto label14;

     label10:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("TransverseMercator");

        if $z1 == 0 goto label11;

        $r9 = new ucar.unidata.geoloc.projection.TransverseMercator;

        $d5 = r3[0];

        $d4 = r3[1];

        $d3 = r3[2];

        specialinvoke $r9.<ucar.unidata.geoloc.projection.TransverseMercator: void <init>(double,double,double)>($d5, $d4, $d3);

        r26 = $r9;

        goto label14;

     label11:
        $z2 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Stereographic");

        if $z2 != 0 goto label12;

        $z3 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Oblique_Stereographic");

        if $z3 == 0 goto label13;

     label12:
        $r6 = new ucar.unidata.geoloc.projection.Stereographic;

        $d2 = r3[0];

        $d1 = r3[1];

        $d0 = r3[2];

        specialinvoke $r6.<ucar.unidata.geoloc.projection.Stereographic: void <init>(double,double,double)>($d2, $d1, $d0);

        r26 = $r6;

        goto label14;

     label13:
        $r8 = r5.<ucar.nc2.dataset.conv.GDVConvention: java.util.Formatter parseInfo>;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = $r1;

        virtualinvoke $r8.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GDV Conventions error: Unknown projection %s\n", $r7);

        return null;

     label14:
        $r27 = new ucar.nc2.dataset.ProjectionCT;

        $r28 = virtualinvoke r26.<ucar.unidata.geoloc.ProjectionImpl: java.lang.String getClassName()>();

        specialinvoke $r27.<ucar.nc2.dataset.ProjectionCT: void <init>(java.lang.String,java.lang.String,ucar.unidata.geoloc.ProjectionImpl)>($r28, "FGDC", r26);

        return $r27;

        catch java.lang.NumberFormatException from label04 to label06 with label07;
    }
}
