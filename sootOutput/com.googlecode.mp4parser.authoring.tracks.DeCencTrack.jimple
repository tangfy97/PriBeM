public class com.googlecode.mp4parser.authoring.tracks.DeCencTrack extends com.googlecode.mp4parser.authoring.AbstractTrack
{
    com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList samples;
    com.googlecode.mp4parser.authoring.Track original;

    public void <init>(com.googlecode.mp4parser.authoring.Mp4TrackImpl, javax.crypto.SecretKey)
    {
        com.coremedia.iso.boxes.SchemeTypeBox r4;
        com.coremedia.iso.boxes.Box $r3;
        com.coremedia.iso.boxes.SampleDescriptionBox $r2;
        java.lang.RuntimeException $r11;
        java.util.List $r9, $r10;
        com.googlecode.mp4parser.authoring.Mp4TrackImpl r1;
        com.googlecode.mp4parser.authoring.tracks.DeCencTrack r0;
        com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList $r7;
        java.lang.String $r5, $r6;
        javax.crypto.SecretKey r8;
        boolean $z0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.DeCencTrack;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Mp4TrackImpl;

        r8 := @parameter1: javax.crypto.SecretKey;

        specialinvoke r0.<com.googlecode.mp4parser.authoring.AbstractTrack: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.tracks.DeCencTrack: com.googlecode.mp4parser.authoring.Track original> = r1;

        $r2 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.Mp4TrackImpl: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>();

        $r3 = staticinvoke <com.googlecode.mp4parser.util.Path: com.coremedia.iso.boxes.Box getPath(com.googlecode.mp4parser.AbstractContainerBox,java.lang.String)>($r2, "enc./sinf/schm");

        r4 = (com.coremedia.iso.boxes.SchemeTypeBox) $r3;

        $r5 = "cenc";

        $r6 = virtualinvoke r4.<com.coremedia.iso.boxes.SchemeTypeBox: java.lang.String getSchemeType()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label1;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>("You can only use the DeCencTrack with CENC encrypted tracks");

        throw $r11;

     label1:
        $r7 = new com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList;

        $r9 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.Mp4TrackImpl: java.util.List getSamples()>();

        $r10 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.Mp4TrackImpl: java.util.List getSampleEncryptionEntries()>();

        specialinvoke $r7.<com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList: void <init>(com.googlecode.mp4parser.authoring.tracks.DeCencTrack,javax.crypto.SecretKey,java.util.List,com.googlecode.mp4parser.authoring.Track,java.util.List)>(r0, r8, $r9, r1, $r10);

        r0.<com.googlecode.mp4parser.authoring.tracks.DeCencTrack: com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList samples> = $r7;

        return;
    }

    public long[] getSyncSamples()
    {
        com.googlecode.mp4parser.authoring.tracks.DeCencTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        long[] $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.DeCencTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.DeCencTrack: com.googlecode.mp4parser.authoring.Track original>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        return $r2;
    }

    public com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()
    {
        byte[] $r11;
        boolean $z0, $z1, $z2, $z3;
        com.coremedia.iso.boxes.OriginalFormatBox r4;
        java.util.List $r12, $r28;
        com.googlecode.mp4parser.authoring.tracks.DeCencTrack r0;
        java.lang.StringBuilder $r18, $r21;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry $r35;
        com.googlecode.mp4parser.authoring.Track $r1, $r6;
        java.io.ByteArrayOutputStream $r5;
        com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry $r15, $r16, $r19, $r23, $r27, $r33, $r34;
        com.coremedia.iso.IsoFile $r9;
        java.lang.String $r20, $r22, $r25, $r32, $r36;
        java.util.LinkedList $r26;
        java.util.Iterator $r29;
        com.coremedia.iso.boxes.Box $r3, r31;
        com.coremedia.iso.boxes.SampleDescriptionBox $r2, $r7, r14;
        java.io.IOException $r37;
        java.lang.RuntimeException $r17, $r38;
        com.googlecode.mp4parser.MemoryDataSourceImpl $r10;
        java.nio.channels.WritableByteChannel $r8;
        java.lang.Object $r13, $r30;
        com.coremedia.iso.boxes.sampleentry.VisualSampleEntry $r24;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.DeCencTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.DeCencTrack: com.googlecode.mp4parser.authoring.Track original>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>();

        $r3 = staticinvoke <com.googlecode.mp4parser.util.Path: com.coremedia.iso.boxes.Box getPath(com.googlecode.mp4parser.AbstractContainerBox,java.lang.String)>($r2, "enc./sinf/frma");

        r4 = (com.coremedia.iso.boxes.OriginalFormatBox) $r3;

        $r5 = new java.io.ByteArrayOutputStream;

        specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>()>();

     label1:
        $r6 = r0.<com.googlecode.mp4parser.authoring.tracks.DeCencTrack: com.googlecode.mp4parser.authoring.Track original>;

        $r7 = interfaceinvoke $r6.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>();

        $r8 = staticinvoke <java.nio.channels.Channels: java.nio.channels.WritableByteChannel newChannel(java.io.OutputStream)>($r5);

        virtualinvoke $r7.<com.coremedia.iso.boxes.SampleDescriptionBox: void getBox(java.nio.channels.WritableByteChannel)>($r8);

        $r9 = new com.coremedia.iso.IsoFile;

        $r10 = new com.googlecode.mp4parser.MemoryDataSourceImpl;

        $r11 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r10.<com.googlecode.mp4parser.MemoryDataSourceImpl: void <init>(byte[])>($r11);

        specialinvoke $r9.<com.coremedia.iso.IsoFile: void <init>(com.googlecode.mp4parser.DataSource)>($r10);

        $r12 = virtualinvoke $r9.<com.coremedia.iso.IsoFile: java.util.List getBoxes()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(0);

        r14 = (com.coremedia.iso.boxes.SampleDescriptionBox) $r13;

     label2:
        goto label4;

     label3:
        $r37 := @caughtexception;

        $r38 = new java.lang.RuntimeException;

        specialinvoke $r38.<java.lang.RuntimeException: void <init>(java.lang.String)>("Dumping stsd to memory failed");

        throw $r38;

     label4:
        $r15 = virtualinvoke r14.<com.coremedia.iso.boxes.SampleDescriptionBox: com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry getSampleEntry()>();

        $z0 = $r15 instanceof com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;

        if $z0 == 0 goto label5;

        $r34 = virtualinvoke r14.<com.coremedia.iso.boxes.SampleDescriptionBox: com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry getSampleEntry()>();

        $r35 = (com.coremedia.iso.boxes.sampleentry.AudioSampleEntry) $r34;

        $r36 = virtualinvoke r4.<com.coremedia.iso.boxes.OriginalFormatBox: java.lang.String getDataFormat()>();

        virtualinvoke $r35.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: void setType(java.lang.String)>($r36);

        goto label7;

     label5:
        $r16 = virtualinvoke r14.<com.coremedia.iso.boxes.SampleDescriptionBox: com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry getSampleEntry()>();

        $z1 = $r16 instanceof com.coremedia.iso.boxes.sampleentry.VisualSampleEntry;

        if $z1 == 0 goto label6;

        $r23 = virtualinvoke r14.<com.coremedia.iso.boxes.SampleDescriptionBox: com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry getSampleEntry()>();

        $r24 = (com.coremedia.iso.boxes.sampleentry.VisualSampleEntry) $r23;

        $r25 = virtualinvoke r4.<com.coremedia.iso.boxes.OriginalFormatBox: java.lang.String getDataFormat()>();

        virtualinvoke $r24.<com.coremedia.iso.boxes.sampleentry.VisualSampleEntry: void setType(java.lang.String)>($r25);

        goto label7;

     label6:
        $r17 = new java.lang.RuntimeException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>("I don\'t know ");

        $r19 = virtualinvoke r14.<com.coremedia.iso.boxes.SampleDescriptionBox: com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry getSampleEntry()>();

        $r20 = virtualinvoke $r19.<com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry: java.lang.String getType()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>($r22);

        throw $r17;

     label7:
        $r26 = new java.util.LinkedList;

        specialinvoke $r26.<java.util.LinkedList: void <init>()>();

        $r27 = virtualinvoke r14.<com.coremedia.iso.boxes.SampleDescriptionBox: com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry getSampleEntry()>();

        $r28 = virtualinvoke $r27.<com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry: java.util.List getBoxes()>();

        $r29 = interfaceinvoke $r28.<java.util.List: java.util.Iterator iterator()>();

        goto label9;

     label8:
        $r30 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

        r31 = (com.coremedia.iso.boxes.Box) $r30;

        $r32 = interfaceinvoke r31.<com.coremedia.iso.boxes.Box: java.lang.String getType()>();

        $z2 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>("sinf");

        if $z2 != 0 goto label9;

        interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>(r31);

     label9:
        $z3 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label8;

        $r33 = virtualinvoke r14.<com.coremedia.iso.boxes.SampleDescriptionBox: com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry getSampleEntry()>();

        virtualinvoke $r33.<com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry: void setBoxes(java.util.List)>($r26);

        return r14;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public long[] getSampleDurations()
    {
        com.googlecode.mp4parser.authoring.tracks.DeCencTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        long[] $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.DeCencTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.DeCencTrack: com.googlecode.mp4parser.authoring.Track original>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: long[] getSampleDurations()>();

        return $r2;
    }

    public com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()
    {
        com.googlecode.mp4parser.authoring.tracks.DeCencTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        com.googlecode.mp4parser.authoring.TrackMetaData $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.DeCencTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.DeCencTrack: com.googlecode.mp4parser.authoring.Track original>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        return $r2;
    }

    public java.lang.String getHandler()
    {
        com.googlecode.mp4parser.authoring.tracks.DeCencTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        java.lang.String $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.DeCencTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.DeCencTrack: com.googlecode.mp4parser.authoring.Track original>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        return $r2;
    }

    public java.util.List getSamples()
    {
        com.googlecode.mp4parser.authoring.tracks.DeCencTrack r0;
        com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList $r1;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.DeCencTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.DeCencTrack: com.googlecode.mp4parser.authoring.tracks.DeCencTrack$DecryptedSampleList samples>;

        return $r1;
    }

    public com.coremedia.iso.boxes.Box getMediaHeaderBox()
    {
        com.googlecode.mp4parser.authoring.tracks.DeCencTrack r0;
        com.googlecode.mp4parser.authoring.Track $r1;
        com.coremedia.iso.boxes.Box $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.DeCencTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.DeCencTrack: com.googlecode.mp4parser.authoring.Track original>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.Box getMediaHeaderBox()>();

        return $r2;
    }
}
