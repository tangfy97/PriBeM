class groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7 extends groovy.lang.Closure implements org.codehaus.groovy.runtime.GeneratedClosure
{
    private groovy.lang.Reference lafInstance;
    private groovy.lang.Reference possibleAttributes;
    private groovy.lang.Reference lafClassName;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$groovy$swing$LookAndFeelHelper;
    static java.lang.Class class$java$lang$RuntimeException;
    static java.lang.Class class$javax$swing$LookAndFeel;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$java$util$Map;

    public void <init>(java.lang.Object, java.lang.Object, groovy.lang.Reference, groovy.lang.Reference, groovy.lang.Reference)
    {
        groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7 r2;
        groovy.lang.Reference r5, $r6, r7, $r8, r9, $r10;
        java.lang.Class $r0, $r1, $r11, $r12;
        java.lang.Object r3, r4;

        r2 := @this: groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        r5 := @parameter2: groovy.lang.Reference;

        r7 := @parameter3: groovy.lang.Reference;

        r9 := @parameter4: groovy.lang.Reference;

        $r0 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r11 = staticinvoke <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7");

        <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$0> = $r11;

        goto label2;

     label1:
        $r11 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r12 = staticinvoke <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$lang$MetaClass> = $r12;

        goto label4;

     label3:
        $r12 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        specialinvoke r2.<groovy.lang.Closure: void <init>(java.lang.Object,java.lang.Object)>(r3, r4);

        $r6 = (groovy.lang.Reference) r5;

        r2.<groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: groovy.lang.Reference lafInstance> = $r6;

        $r8 = (groovy.lang.Reference) r7;

        r2.<groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: groovy.lang.Reference possibleAttributes> = $r8;

        $r10 = (groovy.lang.Reference) r9;

        r2.<groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: groovy.lang.Reference lafClassName> = $r10;

        return;
    }

    public java.lang.Object doCall(java.lang.Object, java.lang.Object)
    {
        groovy.lang.MissingPropertyException $r24;
        groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7 r7;
        java.lang.Throwable $r23, $r62;
        java.lang.Object[] $r10, $r15, $r36, $r39, $r54, $r56;
        java.lang.String $r50;
        groovy.lang.Reference $r1, $r3, $r8, $r14, $r34, $r40, $r57;
        boolean $z0;
        org.codehaus.groovy.runtime.GStringImpl $r46, $r55;
        java.lang.String[] $r17, $r60;
        java.lang.Object r0, r2, $r9, $r11, $r12, $r16, $r35, $r37, $r38, $r41, $r42, $r43, $r45, $r49, $r58, $r59, $r61;
        java.lang.Class $r4, $r5, $r6, $r13, $r18, $r19, $r20, $r21, $r22, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r44, $r47, $r48, $r51, $r52, $r53;

        r7 := @this: groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r1 = new groovy.lang.Reference;

        specialinvoke $r1.<groovy.lang.Reference: void <init>(java.lang.Object)>(r0);

        $r3 = new groovy.lang.Reference;

        specialinvoke $r3.<groovy.lang.Reference: void <init>(java.lang.Object)>(r2);

        $r4 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$0>;

        if $r4 != null goto label01;

        $r28 = staticinvoke <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7");

        <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$0> = $r28;

        goto label02;

     label01:
        $r28 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$0>;

     label02:
        $r5 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$lang$MetaClass>;

        if $r5 != null goto label03;

        $r29 = staticinvoke <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$lang$MetaClass> = $r29;

        goto label04;

     label03:
        $r29 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r6 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$swing$LookAndFeelHelper>;

        if $r6 != null goto label05;

        $r30 = staticinvoke <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper");

        <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$swing$LookAndFeelHelper> = $r30;

        goto label06;

     label05:
        $r30 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$swing$LookAndFeelHelper>;

     label06:
        $r8 = r7.<groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: groovy.lang.Reference possibleAttributes>;

        $r9 = virtualinvoke $r8.<groovy.lang.Reference: java.lang.Object get()>();

        $r10 = newarray (java.lang.Object)[1];

        $r11 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r10[0] = $r11;

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r30, $r9, "getAt", $r10);

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r12);

        if $z0 == 0 goto label11;

        $r20 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$swing$LookAndFeelHelper>;

        if $r20 != null goto label07;

        $r22 = staticinvoke <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper");

        $r31 = $r22;

        <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$swing$LookAndFeelHelper> = $r22;

        goto label08;

     label07:
        $r31 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$swing$LookAndFeelHelper>;

     label08:
        $r21 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$swing$LookAndFeelHelper>;

        if $r21 != null goto label09;

        $r32 = staticinvoke <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper");

        $r33 = $r32;

        <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$swing$LookAndFeelHelper> = $r32;

        goto label10;

     label09:
        $r33 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$swing$LookAndFeelHelper>;

     label10:
        $r34 = r7.<groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: groovy.lang.Reference possibleAttributes>;

        $r35 = virtualinvoke $r34.<groovy.lang.Reference: java.lang.Object get()>();

        $r36 = newarray (java.lang.Object)[1];

        $r37 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r36[0] = $r37;

        $r38 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r33, $r35, "getAt", $r36);

        $r39 = newarray (java.lang.Object)[2];

        $r40 = r7.<groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: groovy.lang.Reference lafInstance>;

        $r41 = virtualinvoke $r40.<groovy.lang.Reference: java.lang.Object get()>();

        $r39[0] = $r41;

        $r42 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r39[1] = $r42;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r31, $r38, "call", $r39);

        goto label23;

     label11:
        $r43 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r13 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$swing$LookAndFeelHelper>;

        if $r13 != null goto label12;

        $r19 = staticinvoke <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper");

        $r44 = $r19;

        <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$swing$LookAndFeelHelper> = $r19;

        goto label13;

     label12:
        $r44 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$swing$LookAndFeelHelper>;

     label13:
        $r14 = r7.<groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: groovy.lang.Reference lafInstance>;

        $r45 = virtualinvoke $r14.<groovy.lang.Reference: java.lang.Object get()>();

        $r46 = new org.codehaus.groovy.runtime.GStringImpl;

        $r15 = newarray (java.lang.Object)[1];

        $r16 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r15[0] = $r16;

        $r17 = newarray (java.lang.String)[2];

        $r17[0] = "";

        $r17[1] = "";

        specialinvoke $r46.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r15, $r17);

        $r18 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$java$lang$String>;

        if $r18 != null goto label14;

        $r47 = staticinvoke <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$(java.lang.String)>("java.lang.String");

        $r48 = $r47;

        <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$java$lang$String> = $r47;

        goto label15;

     label14:
        $r48 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$java$lang$String>;

     label15:
        $r49 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r46, $r48);

        $r50 = (java.lang.String) $r49;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>($r43, $r44, $r45, $r50);

        goto label21;

     label16:
        $r24 := @caughtexception;

        $r25 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$swing$LookAndFeelHelper>;

        if $r25 != null goto label17;

        $r27 = staticinvoke <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper");

        $r51 = $r27;

        <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$swing$LookAndFeelHelper> = $r27;

        goto label18;

     label17:
        $r51 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$swing$LookAndFeelHelper>;

     label18:
        $r26 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$java$lang$RuntimeException>;

        if $r26 != null goto label19;

        $r52 = staticinvoke <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$(java.lang.String)>("java.lang.RuntimeException");

        $r53 = $r52;

        <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$java$lang$RuntimeException> = $r52;

        goto label20;

     label19:
        $r53 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$java$lang$RuntimeException>;

     label20:
        $r54 = newarray (java.lang.Object)[1];

        $r55 = new org.codehaus.groovy.runtime.GStringImpl;

        $r56 = newarray (java.lang.Object)[2];

        $r57 = r7.<groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: groovy.lang.Reference lafClassName>;

        $r58 = virtualinvoke $r57.<groovy.lang.Reference: java.lang.Object get()>();

        $r56[0] = $r58;

        $r59 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r56[1] = $r59;

        $r60 = newarray (java.lang.String)[3];

        $r60[0] = "SwingBuilder initialization for the Look and Feel Class ";

        $r60[1] = " does accept the attribute ";

        $r60[2] = "";

        specialinvoke $r55.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r56, $r60);

        $r54[0] = $r55;

        $r61 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>($r51, $r53, $r54);

        $r62 = (java.lang.Throwable) $r61;

        throw $r62;

     label21:
        goto label23;

     label22:
        $r23 := @caughtexception;

        throw $r23;

     label23:
        return null;

        catch groovy.lang.MissingPropertyException from label11 to label16 with label16;
        catch java.lang.Throwable from label11 to label21 with label22;
    }

    public java.lang.Object call(java.lang.Object, java.lang.Object)
    {
        groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7 r7;
        java.lang.Object[] $r8;
        groovy.lang.Reference $r1, $r3;
        java.lang.Object r0, r2, $r9, $r10, $r11;
        java.lang.Class $r4, r5, $r6, $r12, $r13;

        r7 := @this: groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r1 = new groovy.lang.Reference;

        specialinvoke $r1.<groovy.lang.Reference: void <init>(java.lang.Object)>(r0);

        $r3 = new groovy.lang.Reference;

        specialinvoke $r3.<groovy.lang.Reference: void <init>(java.lang.Object)>(r2);

        $r4 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$0>;

        if $r4 != null goto label1;

        $r12 = staticinvoke <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7");

        <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$0> = $r12;

        goto label2;

     label1:
        $r12 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$0>;

     label2:
        r5 = $r12;

        $r6 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$lang$MetaClass>;

        if $r6 != null goto label3;

        $r13 = staticinvoke <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$lang$MetaClass> = $r13;

        goto label4;

     label3:
        $r13 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r8 = newarray (java.lang.Object)[2];

        $r9 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r8[0] = $r9;

        $r10 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r8[1] = $r10;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r5, r7, "doCall", $r8);

        return $r11;
    }

    public javax.swing.LookAndFeel getLafInstance()
    {
        groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7 r2;
        javax.swing.LookAndFeel $r7;
        groovy.lang.Reference $r3;
        java.lang.Class $r0, $r1, $r5, $r8, $r9, $r10;
        java.lang.Object $r4, $r6;

        r2 := @this: groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7;

        $r0 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r8 = staticinvoke <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7");

        <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$0> = $r8;

        goto label2;

     label1:
        $r8 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r9 = staticinvoke <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$lang$MetaClass> = $r9;

        goto label4;

     label3:
        $r9 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = r2.<groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: groovy.lang.Reference lafInstance>;

        $r4 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r5 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$javax$swing$LookAndFeel>;

        if $r5 != null goto label5;

        $r10 = staticinvoke <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$(java.lang.String)>("javax.swing.LookAndFeel");

        <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$javax$swing$LookAndFeel> = $r10;

        goto label6;

     label5:
        $r10 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$javax$swing$LookAndFeel>;

     label6:
        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r10);

        $r7 = (javax.swing.LookAndFeel) $r6;

        return $r7;
    }

    public java.util.Map getPossibleAttributes()
    {
        groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7 r2;
        groovy.lang.Reference $r3;
        java.util.Map $r7;
        java.lang.Class $r0, $r1, $r5, $r8, $r9, $r10;
        java.lang.Object $r4, $r6;

        r2 := @this: groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7;

        $r0 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r8 = staticinvoke <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7");

        <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$0> = $r8;

        goto label2;

     label1:
        $r8 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r9 = staticinvoke <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$lang$MetaClass> = $r9;

        goto label4;

     label3:
        $r9 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = r2.<groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: groovy.lang.Reference possibleAttributes>;

        $r4 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r5 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$java$util$Map>;

        if $r5 != null goto label5;

        $r10 = staticinvoke <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$(java.lang.String)>("java.util.Map");

        <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$java$util$Map> = $r10;

        goto label6;

     label5:
        $r10 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$java$util$Map>;

     label6:
        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r10);

        $r7 = (java.util.Map) $r6;

        return $r7;
    }

    public java.lang.String getLafClassName()
    {
        groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7 r2;
        groovy.lang.Reference $r3;
        java.lang.Class $r0, $r1, $r5, $r8, $r9, $r10;
        java.lang.Object $r4, $r6;
        java.lang.String $r7;

        r2 := @this: groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7;

        $r0 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r8 = staticinvoke <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7");

        <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$0> = $r8;

        goto label2;

     label1:
        $r8 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r9 = staticinvoke <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$lang$MetaClass> = $r9;

        goto label4;

     label3:
        $r9 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = r2.<groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: groovy.lang.Reference lafClassName>;

        $r4 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r5 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$java$lang$String>;

        if $r5 != null goto label5;

        $r10 = staticinvoke <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$java$lang$String> = $r10;

        goto label6;

     label5:
        $r10 = <groovy.swing.LookAndFeelHelper$_lookAndFeel_closure7: java.lang.Class class$java$lang$String>;

     label6:
        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r10);

        $r7 = (java.lang.String) $r6;

        return $r7;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
