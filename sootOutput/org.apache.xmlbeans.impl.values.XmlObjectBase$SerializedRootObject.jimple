class org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    transient java.lang.Class _xbeanClass;
    transient org.apache.xmlbeans.XmlObject _impl;

    private void <init>()
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private void <init>(org.apache.xmlbeans.XmlObject)
    {
        java.lang.Class $r3;
        org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject r0;
        org.apache.xmlbeans.XmlObject r1;
        org.apache.xmlbeans.SchemaType $r2;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.SchemaType schemaType()>();

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaType: java.lang.Class getJavaClass()>();

        r0.<org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject: java.lang.Class _xbeanClass> = $r3;

        r0.<org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject: org.apache.xmlbeans.XmlObject _impl> = r1;

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream r0;
        java.lang.Class $r2;
        org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject r1;
        org.apache.xmlbeans.XmlObject $r3;
        java.lang.String $r4;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject;

        r0 := @parameter0: java.io.ObjectOutputStream;

        $r2 = r1.<org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject: java.lang.Class _xbeanClass>;

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeShort(int)>(0);

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeShort(int)>(1);

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeShort(int)>(1);

        $r3 = r1.<org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject: org.apache.xmlbeans.XmlObject _impl>;

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlObject: java.lang.String xmlText()>();

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r4);

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeBoolean(boolean)>(0);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException
    {
        java.io.ObjectInputStream r1;
        org.apache.xmlbeans.SchemaType $r7;
        org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject r0;
        java.lang.Exception $r27;
        java.lang.Throwable $r30;
        java.lang.StringBuffer $r12, $r13, $r14, $r15, $r16, $r17, $r20, $r21, $r22, $r23, $r24, $r25;
        int $i0, i1, i2;
        org.apache.xmlbeans.XmlObject $r10;
        java.lang.String $r18, $r26, $r29, r33;
        org.apache.xmlbeans.SchemaTypeLoader $r9;
        java.io.IOException $r11, $r19, $r28, $r31, $r32;
        org.apache.xmlbeans.XmlOptions $r5, $r8;
        java.lang.Object $r2, $r4;
        java.lang.Class $r3, $r6;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject;

        r1 := @parameter0: java.io.ObjectInputStream;

     label01:
        $r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r3 = (java.lang.Class) $r2;

        r0.<org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject: java.lang.Class _xbeanClass> = $r3;

        $i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readUnsignedShort()>();

        i1 = 0;

        i2 = 0;

        if $i0 != 0 goto label02;

        i1 = virtualinvoke r1.<java.io.ObjectInputStream: int readUnsignedShort()>();

        i2 = virtualinvoke r1.<java.io.ObjectInputStream: int readUnsignedShort()>();

     label02:
        lookupswitch(i1)
        {
            case 0: goto label03;
            case 1: goto label04;
            default: goto label07;
        };

     label03:
        r33 = specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject: java.lang.String readObjectV0(java.io.ObjectInputStream,int)>(r1, $i0);

        virtualinvoke r1.<java.io.ObjectInputStream: boolean readBoolean()>();

        goto label08;

     label04:
        lookupswitch(i2)
        {
            case 1: goto label05;
            default: goto label06;
        };

     label05:
        $r4 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r33 = (java.lang.String) $r4;

        virtualinvoke r1.<java.io.ObjectInputStream: boolean readBoolean()>();

        goto label08;

     label06:
        $r11 = new java.io.IOException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Deserialization error: version number ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" not supported.");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r18);

        throw $r11;

     label07:
        $r19 = new java.io.IOException;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Deserialization error: version number ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i2);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" not supported.");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r19.<java.io.IOException: void <init>(java.lang.String)>($r26);

        throw $r19;

     label08:
        $r5 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r5.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        $r6 = r0.<org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject: java.lang.Class _xbeanClass>;

        $r7 = staticinvoke <org.apache.xmlbeans.XmlBeans: org.apache.xmlbeans.SchemaType typeForClass(java.lang.Class)>($r6);

        $r8 = virtualinvoke $r5.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setDocumentType(org.apache.xmlbeans.SchemaType)>($r7);

        $r9 = staticinvoke <org.apache.xmlbeans.XmlBeans: org.apache.xmlbeans.SchemaTypeLoader getContextTypeLoader()>();

        $r10 = interfaceinvoke $r9.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.XmlObject parse(java.lang.String,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>(r33, null, $r8);

        r0.<org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject: org.apache.xmlbeans.XmlObject _impl> = $r10;

     label09:
        goto label11;

     label10:
        $r27 := @caughtexception;

        $r28 = new java.io.IOException;

        $r29 = virtualinvoke $r27.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>($r29);

        $r30 = virtualinvoke $r28.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>($r27);

        $r31 = (java.io.IOException) $r30;

        $r32 = (java.io.IOException) $r31;

        throw $r32;

     label11:
        return;

        catch java.lang.Exception from label01 to label09 with label10;
    }

    private java.lang.String readObjectV0(java.io.ObjectInputStream, int) throws java.io.IOException
    {
        java.lang.Throwable $r13;
        byte[] r0;
        java.io.DataInputStream r15, $r19;
        java.io.ObjectInputStream r12;
        byte $b4, $b6;
        java.io.ByteArrayInputStream $r18;
        java.lang.StringBuffer $r6, $r7, $r8, $r9, $r10, $r16;
        int i0, $i1, $i2, $i3, $i5, $i7, $i8, $i9, i10, $i12;
        java.lang.String $r3, $r11;
        java.io.IOException $r17;
        org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject r14;

        r14 := @this: org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject;

        r12 := @parameter0: java.io.ObjectInputStream;

        i0 := @parameter1: int;

        $i1 = i0 + 2;

        r0 = newarray (byte)[$i1];

        $i2 = i0 >> 8;

        $i3 = 255 & $i2;

        $b4 = (byte) $i3;

        r0[0] = $b4;

        $i5 = 255 & i0;

        $b6 = (byte) $i5;

        r0[1] = $b6;

        i10 = 0;

     label01:
        if i10 >= i0 goto label03;

        $i8 = 2 + i10;

        $i7 = i0 - i10;

        $i9 = virtualinvoke r12.<java.io.ObjectInputStream: int read(byte[],int,int)>(r0, $i8, $i7);

        $i12 = (int) -1;

        if $i9 != $i12 goto label02;

        goto label03;

     label02:
        i10 = i10 + $i9;

        goto label01;

     label03:
        if i10 == i0 goto label04;

        $r17 = new java.io.IOException;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error reading backwards compatible XmlObject: number of bytes read (");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i10);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") != number expected (");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r17;

     label04:
        r15 = null;

     label05:
        $r19 = new java.io.DataInputStream;

        $r18 = new java.io.ByteArrayInputStream;

        specialinvoke $r18.<java.io.ByteArrayInputStream: void <init>(byte[])>(r0);

        specialinvoke $r19.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r18);

        r15 = $r19;

        $r3 = virtualinvoke $r19.<java.io.DataInputStream: java.lang.String readUTF()>();

     label06:
        if $r19 == null goto label10;

        virtualinvoke $r19.<java.io.DataInputStream: void close()>();

        goto label10;

     label07:
        $r13 := @caughtexception;

     label08:
        if r15 == null goto label09;

        virtualinvoke r15.<java.io.DataInputStream: void close()>();

     label09:
        throw $r13;

     label10:
        return $r3;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    private java.lang.Object readResolve() throws java.io.ObjectStreamException
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject r0;
        org.apache.xmlbeans.XmlObject $r1;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject;

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject: org.apache.xmlbeans.XmlObject _impl>;

        return $r1;
    }

    void <init>(org.apache.xmlbeans.XmlObject, org.apache.xmlbeans.impl.values.XmlObjectBase$1)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase$1 r2;
        org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject r0;
        org.apache.xmlbeans.XmlObject r1;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        r2 := @parameter1: org.apache.xmlbeans.impl.values.XmlObjectBase$1;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject: void <init>(org.apache.xmlbeans.XmlObject)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedRootObject: long serialVersionUID> = 1L;

        return;
    }
}
