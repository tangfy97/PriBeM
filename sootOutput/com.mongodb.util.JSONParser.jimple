class com.mongodb.util.JSONParser extends java.lang.Object
{
    java.lang.String s;
    int pos;
    org.bson.BSONCallback _callback;

    public void <init>(java.lang.String)
    {
        com.mongodb.util.JSONParser r0;
        java.lang.String r1;

        r0 := @this: com.mongodb.util.JSONParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.mongodb.util.JSONParser: void <init>(java.lang.String,org.bson.BSONCallback)>(r1, null);

        return;
    }

    public void <init>(java.lang.String, org.bson.BSONCallback)
    {
        org.bson.BSONCallback r2, $r3;
        com.mongodb.util.JSONParser r0;
        java.lang.String r1;
        com.mongodb.util.JSONCallback $r4;

        r0 := @this: com.mongodb.util.JSONParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.bson.BSONCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mongodb.util.JSONParser: int pos> = 0;

        r0.<com.mongodb.util.JSONParser: java.lang.String s> = r1;

        if r2 != null goto label1;

        $r4 = new com.mongodb.util.JSONCallback;

        $r3 = $r4;

        specialinvoke $r4.<com.mongodb.util.JSONCallback: void <init>()>();

        goto label2;

     label1:
        $r3 = r2;

     label2:
        r0.<com.mongodb.util.JSONParser: org.bson.BSONCallback _callback> = $r3;

        return;
    }

    public java.lang.Object parse()
    {
        com.mongodb.util.JSONParser r0;
        java.lang.Object $r1;

        r0 := @this: com.mongodb.util.JSONParser;

        $r1 = virtualinvoke r0.<com.mongodb.util.JSONParser: java.lang.Object parse(java.lang.String)>(null);

        return $r1;
    }

    protected java.lang.Object parse(java.lang.String)
    {
        com.mongodb.util.JSONParseException $r5;
        com.mongodb.util.JSONParser r0;
        char $c0;
        int $i1, $i2;
        java.lang.Object r4;
        java.lang.String r1, $r3;

        r0 := @this: com.mongodb.util.JSONParser;

        r1 := @parameter0: java.lang.String;

        $c0 = virtualinvoke r0.<com.mongodb.util.JSONParser: char get()>();

        $i2 = (int) $c0;

        lookupswitch($i2)
        {
            case 34: goto label4;
            case 39: goto label4;
            case 43: goto label5;
            case 45: goto label5;
            case 48: goto label5;
            case 49: goto label5;
            case 50: goto label5;
            case 51: goto label5;
            case 52: goto label5;
            case 53: goto label5;
            case 54: goto label5;
            case 55: goto label5;
            case 56: goto label5;
            case 57: goto label5;
            case 91: goto label6;
            case 102: goto label3;
            case 110: goto label1;
            case 116: goto label2;
            case 123: goto label7;
            default: goto label8;
        };

     label1:
        virtualinvoke r0.<com.mongodb.util.JSONParser: void read(char)>(110);

        virtualinvoke r0.<com.mongodb.util.JSONParser: void read(char)>(117);

        virtualinvoke r0.<com.mongodb.util.JSONParser: void read(char)>(108);

        virtualinvoke r0.<com.mongodb.util.JSONParser: void read(char)>(108);

        r4 = null;

        goto label9;

     label2:
        virtualinvoke r0.<com.mongodb.util.JSONParser: void read(char)>(116);

        virtualinvoke r0.<com.mongodb.util.JSONParser: void read(char)>(114);

        virtualinvoke r0.<com.mongodb.util.JSONParser: void read(char)>(117);

        virtualinvoke r0.<com.mongodb.util.JSONParser: void read(char)>(101);

        r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        goto label9;

     label3:
        virtualinvoke r0.<com.mongodb.util.JSONParser: void read(char)>(102);

        virtualinvoke r0.<com.mongodb.util.JSONParser: void read(char)>(97);

        virtualinvoke r0.<com.mongodb.util.JSONParser: void read(char)>(108);

        virtualinvoke r0.<com.mongodb.util.JSONParser: void read(char)>(115);

        virtualinvoke r0.<com.mongodb.util.JSONParser: void read(char)>(101);

        r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        goto label9;

     label4:
        r4 = virtualinvoke r0.<com.mongodb.util.JSONParser: java.lang.String parseString()>();

        goto label9;

     label5:
        r4 = virtualinvoke r0.<com.mongodb.util.JSONParser: java.lang.Number parseNumber()>();

        goto label9;

     label6:
        r4 = virtualinvoke r0.<com.mongodb.util.JSONParser: java.lang.Object parseArray(java.lang.String)>(r1);

        goto label9;

     label7:
        r4 = virtualinvoke r0.<com.mongodb.util.JSONParser: java.lang.Object parseObject(java.lang.String)>(r1);

        goto label9;

     label8:
        $r5 = new com.mongodb.util.JSONParseException;

        $r3 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i1 = r0.<com.mongodb.util.JSONParser: int pos>;

        specialinvoke $r5.<com.mongodb.util.JSONParseException: void <init>(java.lang.String,int)>($r3, $i1);

        throw $r5;

     label9:
        return r4;
    }

    public java.lang.Object parseObject()
    {
        com.mongodb.util.JSONParser r0;
        java.lang.Object $r1;

        r0 := @this: com.mongodb.util.JSONParser;

        $r1 = virtualinvoke r0.<com.mongodb.util.JSONParser: java.lang.Object parseObject(java.lang.String)>(null);

        return $r1;
    }

    protected java.lang.Object parseObject(java.lang.String)
    {
        com.mongodb.util.JSONParser r1;
        char $c0, $c1;
        org.bson.BSONCallback $r2, $r3, $r7;
        int $i2, $i3;
        java.lang.Object $r4, $r6;
        java.lang.String r0, $r5;

        r1 := @this: com.mongodb.util.JSONParser;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r7 = r1.<com.mongodb.util.JSONParser: org.bson.BSONCallback _callback>;

        interfaceinvoke $r7.<org.bson.BSONCallback: void objectStart(java.lang.String)>(r0);

        goto label2;

     label1:
        $r2 = r1.<com.mongodb.util.JSONParser: org.bson.BSONCallback _callback>;

        interfaceinvoke $r2.<org.bson.BSONCallback: void objectStart()>();

     label2:
        virtualinvoke r1.<com.mongodb.util.JSONParser: void read(char)>(123);

        virtualinvoke r1.<com.mongodb.util.JSONParser: char get()>();

     label3:
        $c1 = virtualinvoke r1.<com.mongodb.util.JSONParser: char get()>();

        $i2 = (int) $c1;

        if $i2 == 125 goto label4;

        $r5 = virtualinvoke r1.<com.mongodb.util.JSONParser: java.lang.String parseString()>();

        virtualinvoke r1.<com.mongodb.util.JSONParser: void read(char)>(58);

        $r6 = virtualinvoke r1.<com.mongodb.util.JSONParser: java.lang.Object parse(java.lang.String)>($r5);

        virtualinvoke r1.<com.mongodb.util.JSONParser: void doCallback(java.lang.String,java.lang.Object)>($r5, $r6);

        $c0 = virtualinvoke r1.<com.mongodb.util.JSONParser: char get()>();

        $i3 = (int) $c0;

        if $i3 != 44 goto label4;

        virtualinvoke r1.<com.mongodb.util.JSONParser: void read(char)>(44);

        goto label3;

     label4:
        virtualinvoke r1.<com.mongodb.util.JSONParser: void read(char)>(125);

        $r3 = r1.<com.mongodb.util.JSONParser: org.bson.BSONCallback _callback>;

        $r4 = interfaceinvoke $r3.<org.bson.BSONCallback: java.lang.Object objectDone()>();

        return $r4;
    }

    protected void doCallback(java.lang.String, java.lang.Object)
    {
        java.lang.Double $r3;
        com.mongodb.util.JSONParser r1;
        long $l0;
        java.lang.Integer $r7;
        java.lang.Long $r5;
        int $i1;
        java.lang.Boolean $r9;
        java.lang.String r2, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        double $d0;
        org.bson.BSONCallback $r4, $r6, $r8, $r10, $r12, $r13;
        java.lang.Object r0;

        r1 := @this: com.mongodb.util.JSONParser;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $r13 = r1.<com.mongodb.util.JSONParser: org.bson.BSONCallback _callback>;

        interfaceinvoke $r13.<org.bson.BSONCallback: void gotNull(java.lang.String)>(r2);

        goto label6;

     label1:
        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r12 = r1.<com.mongodb.util.JSONParser: org.bson.BSONCallback _callback>;

        $r11 = (java.lang.String) r0;

        interfaceinvoke $r12.<org.bson.BSONCallback: void gotString(java.lang.String,java.lang.String)>(r2, $r11);

        goto label6;

     label2:
        $z1 = r0 instanceof java.lang.Boolean;

        if $z1 == 0 goto label3;

        $r10 = r1.<com.mongodb.util.JSONParser: org.bson.BSONCallback _callback>;

        $r9 = (java.lang.Boolean) r0;

        $z5 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        interfaceinvoke $r10.<org.bson.BSONCallback: void gotBoolean(java.lang.String,boolean)>(r2, $z5);

        goto label6;

     label3:
        $z2 = r0 instanceof java.lang.Integer;

        if $z2 == 0 goto label4;

        $r8 = r1.<com.mongodb.util.JSONParser: org.bson.BSONCallback _callback>;

        $r7 = (java.lang.Integer) r0;

        $i1 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r8.<org.bson.BSONCallback: void gotInt(java.lang.String,int)>(r2, $i1);

        goto label6;

     label4:
        $z3 = r0 instanceof java.lang.Long;

        if $z3 == 0 goto label5;

        $r6 = r1.<com.mongodb.util.JSONParser: org.bson.BSONCallback _callback>;

        $r5 = (java.lang.Long) r0;

        $l0 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

        interfaceinvoke $r6.<org.bson.BSONCallback: void gotLong(java.lang.String,long)>(r2, $l0);

        goto label6;

     label5:
        $z4 = r0 instanceof java.lang.Double;

        if $z4 == 0 goto label6;

        $r4 = r1.<com.mongodb.util.JSONParser: org.bson.BSONCallback _callback>;

        $r3 = (java.lang.Double) r0;

        $d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        interfaceinvoke $r4.<org.bson.BSONCallback: void gotDouble(java.lang.String,double)>(r2, $d0);

     label6:
        return;
    }

    public void read(char)
    {
        com.mongodb.util.JSONParseException $r1;
        com.mongodb.util.JSONParser r0;
        char c0;
        int $i1, $i2, $i3;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.mongodb.util.JSONParser;

        c0 := @parameter0: char;

        $z0 = virtualinvoke r0.<com.mongodb.util.JSONParser: boolean check(char)>(c0);

        if $z0 != 0 goto label1;

        $r1 = new com.mongodb.util.JSONParseException;

        $r2 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i3 = r0.<com.mongodb.util.JSONParser: int pos>;

        specialinvoke $r1.<com.mongodb.util.JSONParseException: void <init>(java.lang.String,int)>($r2, $i3);

        throw $r1;

     label1:
        $i1 = r0.<com.mongodb.util.JSONParser: int pos>;

        $i2 = $i1 + 1;

        r0.<com.mongodb.util.JSONParser: int pos> = $i2;

        return;
    }

    public char read()
    {
        java.lang.IllegalStateException $r3;
        com.mongodb.util.JSONParser r0;
        char $c4;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1, $r2;

        r0 := @this: com.mongodb.util.JSONParser;

        $i0 = r0.<com.mongodb.util.JSONParser: int pos>;

        $r1 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 < $i1 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("string done");

        throw $r3;

     label1:
        $r2 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i2 = r0.<com.mongodb.util.JSONParser: int pos>;

        $i3 = $i2 + 1;

        r0.<com.mongodb.util.JSONParser: int pos> = $i3;

        $c4 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i2);

        return $c4;
    }

    public void readHex()
    {
        com.mongodb.util.JSONParseException $r10;
        com.mongodb.util.JSONParser r0;
        int $i0, $i1, $i2, $i4, $i6, $i8, $i10, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9;
        char $c3, $c5, $c7, $c9, $c11, $c13;

        r0 := @this: com.mongodb.util.JSONParser;

        $i0 = r0.<com.mongodb.util.JSONParser: int pos>;

        $r1 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label4;

        $r2 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i2 = r0.<com.mongodb.util.JSONParser: int pos>;

        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i2);

        $i17 = (int) $c3;

        if $i17 < 48 goto label1;

        $r7 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i12 = r0.<com.mongodb.util.JSONParser: int pos>;

        $c13 = virtualinvoke $r7.<java.lang.String: char charAt(int)>($i12);

        $i18 = (int) $c13;

        if $i18 <= 57 goto label3;

     label1:
        $r3 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i4 = r0.<com.mongodb.util.JSONParser: int pos>;

        $c5 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i4);

        $i19 = (int) $c5;

        if $i19 < 65 goto label2;

        $r6 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i10 = r0.<com.mongodb.util.JSONParser: int pos>;

        $c11 = virtualinvoke $r6.<java.lang.String: char charAt(int)>($i10);

        $i20 = (int) $c11;

        if $i20 <= 70 goto label3;

     label2:
        $r4 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i6 = r0.<com.mongodb.util.JSONParser: int pos>;

        $c7 = virtualinvoke $r4.<java.lang.String: char charAt(int)>($i6);

        $i21 = (int) $c7;

        if $i21 < 97 goto label4;

        $r5 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i8 = r0.<com.mongodb.util.JSONParser: int pos>;

        $c9 = virtualinvoke $r5.<java.lang.String: char charAt(int)>($i8);

        $i22 = (int) $c9;

        if $i22 > 102 goto label4;

     label3:
        $i14 = r0.<com.mongodb.util.JSONParser: int pos>;

        $i15 = $i14 + 1;

        r0.<com.mongodb.util.JSONParser: int pos> = $i15;

        goto label5;

     label4:
        $r10 = new com.mongodb.util.JSONParseException;

        $r9 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i16 = r0.<com.mongodb.util.JSONParser: int pos>;

        specialinvoke $r10.<com.mongodb.util.JSONParseException: void <init>(java.lang.String,int)>($r9, $i16);

        throw $r10;

     label5:
        return;
    }

    public boolean check(char)
    {
        int $i2, $i3;
        com.mongodb.util.JSONParser r0;
        char $c0, c1;
        boolean $z0;

        r0 := @this: com.mongodb.util.JSONParser;

        c1 := @parameter0: char;

        $c0 = virtualinvoke r0.<com.mongodb.util.JSONParser: char get()>();

        $i2 = (int) $c0;

        $i3 = (int) c1;

        if $i2 != $i3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void skipWS()
    {
        com.mongodb.util.JSONParser r0;
        char $c3;
        int $i0, $i1, $i2, $i4, $i5;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: com.mongodb.util.JSONParser;

     label1:
        $i0 = r0.<com.mongodb.util.JSONParser: int pos>;

        $r1 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label2;

        $r2 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i2 = r0.<com.mongodb.util.JSONParser: int pos>;

        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i2);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c3);

        if $z0 == 0 goto label2;

        $i4 = r0.<com.mongodb.util.JSONParser: int pos>;

        $i5 = $i4 + 1;

        r0.<com.mongodb.util.JSONParser: int pos> = $i5;

        goto label1;

     label2:
        return;
    }

    public char get()
    {
        int $i0, $i1, $i2;
        com.mongodb.util.JSONParser r0;
        char $c3;
        java.lang.String $r1, $r2;

        r0 := @this: com.mongodb.util.JSONParser;

        virtualinvoke r0.<com.mongodb.util.JSONParser: void skipWS()>();

        $i0 = r0.<com.mongodb.util.JSONParser: int pos>;

        $r1 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label1;

        $r2 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i2 = r0.<com.mongodb.util.JSONParser: int pos>;

        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i2);

        return $c3;

     label1:
        return 65535;
    }

    public java.lang.String parseString()
    {
        com.mongodb.util.JSONParseException $r15;
        com.mongodb.util.JSONParser r0;
        byte b20, b24, b29, b30;
        boolean $z0, $z1;
        java.lang.StringBuilder $r16;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, i14, $i15, $i16, $i18, $i19, i21, $i22, $i23, $i25, $i26, $i32, $i33, $i34;
        java.lang.String $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        char $c4, $c9, $c17, c27, c28, c31;

        r0 := @this: com.mongodb.util.JSONParser;

        $z0 = virtualinvoke r0.<com.mongodb.util.JSONParser: boolean check(char)>(39);

        if $z0 == 0 goto label01;

        b20 = 39;

        b29 = 39;

        c28 = 39;

        c27 = 39;

        goto label03;

     label01:
        $z1 = virtualinvoke r0.<com.mongodb.util.JSONParser: boolean check(char)>(34);

        if $z1 == 0 goto label02;

        b20 = 34;

        b29 = 34;

        c28 = 34;

        c27 = 34;

        goto label03;

     label02:
        $r15 = new com.mongodb.util.JSONParseException;

        $r2 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i0 = r0.<com.mongodb.util.JSONParser: int pos>;

        specialinvoke $r15.<com.mongodb.util.JSONParseException: void <init>(java.lang.String,int)>($r2, $i0);

        throw $r15;

     label03:
        virtualinvoke r0.<com.mongodb.util.JSONParser: void read(char)>(c27);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        i21 = r0.<com.mongodb.util.JSONParser: int pos>;

     label04:
        $i22 = r0.<com.mongodb.util.JSONParser: int pos>;

        $r12 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i23 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i22 >= $i23 goto label15;

        $r7 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i3 = r0.<com.mongodb.util.JSONParser: int pos>;

        $c4 = virtualinvoke $r7.<java.lang.String: char charAt(int)>($i3);

        $i32 = (int) $c4;

        if $i32 == b29 goto label15;

        $i33 = (int) $c4;

        if $i33 != 92 goto label14;

        $i7 = r0.<com.mongodb.util.JSONParser: int pos>;

        $i8 = $i7 + 1;

        r0.<com.mongodb.util.JSONParser: int pos> = $i8;

        $c9 = virtualinvoke r0.<com.mongodb.util.JSONParser: char get()>();

        b24 = 0;

        c31 = 0;

        b30 = 0;

        $i34 = (int) $c9;

        lookupswitch($i34)
        {
            case 34: goto label10;
            case 92: goto label11;
            case 98: goto label09;
            case 110: goto label06;
            case 114: goto label07;
            case 116: goto label08;
            case 117: goto label05;
            default: goto label12;
        };

     label05:
        $r8 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i10 = r0.<com.mongodb.util.JSONParser: int pos>;

        $i11 = $i10 - 1;

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int,int)>(i21, $i11);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $i12 = r0.<com.mongodb.util.JSONParser: int pos>;

        $i13 = $i12 + 1;

        r0.<com.mongodb.util.JSONParser: int pos> = $i13;

        i14 = r0.<com.mongodb.util.JSONParser: int pos>;

        virtualinvoke r0.<com.mongodb.util.JSONParser: void readHex()>();

        virtualinvoke r0.<com.mongodb.util.JSONParser: void readHex()>();

        virtualinvoke r0.<com.mongodb.util.JSONParser: void readHex()>();

        virtualinvoke r0.<com.mongodb.util.JSONParser: void readHex()>();

        $r10 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i15 = i14 + 4;

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int,int)>(i14, $i15);

        $i16 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r11, 16);

        $c17 = (char) $i16;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c17);

        i21 = r0.<com.mongodb.util.JSONParser: int pos>;

        goto label04;

     label06:
        b24 = 10;

        c31 = 10;

        b30 = 10;

        goto label12;

     label07:
        b24 = 13;

        c31 = 13;

        b30 = 13;

        goto label12;

     label08:
        b24 = 9;

        c31 = 9;

        b30 = 9;

        goto label12;

     label09:
        b24 = 8;

        c31 = 8;

        b30 = 8;

        goto label12;

     label10:
        b24 = 34;

        c31 = 34;

        b30 = 34;

        goto label12;

     label11:
        b24 = 92;

        c31 = 92;

        b30 = 92;

     label12:
        $r13 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i25 = r0.<com.mongodb.util.JSONParser: int pos>;

        $i26 = $i25 - 1;

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String substring(int,int)>(i21, $i26);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        if b30 == 0 goto label13;

        $i18 = r0.<com.mongodb.util.JSONParser: int pos>;

        $i19 = $i18 + 1;

        r0.<com.mongodb.util.JSONParser: int pos> = $i19;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c31);

     label13:
        i21 = r0.<com.mongodb.util.JSONParser: int pos>;

        goto label04;

     label14:
        $i5 = r0.<com.mongodb.util.JSONParser: int pos>;

        $i6 = $i5 + 1;

        r0.<com.mongodb.util.JSONParser: int pos> = $i6;

        goto label04;

     label15:
        virtualinvoke r0.<com.mongodb.util.JSONParser: void read(char)>(c28);

        $r4 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i1 = r0.<com.mongodb.util.JSONParser: int pos>;

        $i2 = $i1 - 1;

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(i21, $i2);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public java.lang.Number parseNumber()
    {
        java.lang.Double $r9;
        com.mongodb.util.JSONParser r0;
        java.lang.Integer $r3;
        java.lang.Long $r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14;
        java.lang.String $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11;
        boolean $z0, $z1, z2;
        char $c9;

        r0 := @this: com.mongodb.util.JSONParser;

        virtualinvoke r0.<com.mongodb.util.JSONParser: char get()>();

        i0 = r0.<com.mongodb.util.JSONParser: int pos>;

        z2 = 0;

        $z0 = virtualinvoke r0.<com.mongodb.util.JSONParser: boolean check(char)>(45);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<com.mongodb.util.JSONParser: boolean check(char)>(43);

        if $z1 == 0 goto label2;

     label1:
        $i1 = r0.<com.mongodb.util.JSONParser: int pos>;

        $i2 = $i1 + 1;

        r0.<com.mongodb.util.JSONParser: int pos> = $i2;

     label2:
        $i12 = r0.<com.mongodb.util.JSONParser: int pos>;

        $r11 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i13 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i12 >= $i13 goto label6;

        $r10 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i8 = r0.<com.mongodb.util.JSONParser: int pos>;

        $c9 = virtualinvoke $r10.<java.lang.String: char charAt(int)>($i8);

        $i14 = (int) $c9;

        tableswitch($i14)
        {
            case 46: goto label4;
            case 47: goto label5;
            case 48: goto label3;
            case 49: goto label3;
            case 50: goto label3;
            case 51: goto label3;
            case 52: goto label3;
            case 53: goto label3;
            case 54: goto label3;
            case 55: goto label3;
            case 56: goto label3;
            case 57: goto label3;
            default: goto label5;
        };

     label3:
        $i10 = r0.<com.mongodb.util.JSONParser: int pos>;

        $i11 = $i10 + 1;

        r0.<com.mongodb.util.JSONParser: int pos> = $i11;

        goto label2;

     label4:
        z2 = 1;

        virtualinvoke r0.<com.mongodb.util.JSONParser: void parseFraction()>();

        goto label2;

     label5:
        goto label6;

     label6:
        if z2 == 0 goto label7;

        $r7 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i7 = r0.<com.mongodb.util.JSONParser: int pos>;

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int,int)>(i0, $i7);

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r8);

        return $r9;

     label7:
        $i3 = r0.<com.mongodb.util.JSONParser: int pos>;

        $i4 = $i3 - i0;

        if $i4 < 10 goto label8;

        $r4 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i6 = r0.<com.mongodb.util.JSONParser: int pos>;

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(i0, $i6);

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r5);

        return $r6;

     label8:
        $r1 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i5 = r0.<com.mongodb.util.JSONParser: int pos>;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i5);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r2);

        return $r3;
    }

    public void parseFraction()
    {
        com.mongodb.util.JSONParser r0;
        char $c5;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8;
        java.lang.String $r1, $r2;

        r0 := @this: com.mongodb.util.JSONParser;

        $i0 = r0.<com.mongodb.util.JSONParser: int pos>;

        $i1 = $i0 + 1;

        r0.<com.mongodb.util.JSONParser: int pos> = $i1;

     label1:
        $i2 = r0.<com.mongodb.util.JSONParser: int pos>;

        $r1 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i2 >= $i3 goto label4;

        $r2 = r0.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i4 = r0.<com.mongodb.util.JSONParser: int pos>;

        $c5 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i4);

        $i8 = (int) $c5;

        tableswitch($i8)
        {
            case 48: goto label2;
            case 49: goto label2;
            case 50: goto label2;
            case 51: goto label2;
            case 52: goto label2;
            case 53: goto label2;
            case 54: goto label2;
            case 55: goto label2;
            case 56: goto label2;
            case 57: goto label2;
            default: goto label3;
        };

     label2:
        $i6 = r0.<com.mongodb.util.JSONParser: int pos>;

        $i7 = $i6 + 1;

        r0.<com.mongodb.util.JSONParser: int pos> = $i7;

        goto label1;

     label3:
        goto label4;

     label4:
        return;
    }

    public java.lang.Object parseArray()
    {
        com.mongodb.util.JSONParser r0;
        java.lang.Object $r1;

        r0 := @this: com.mongodb.util.JSONParser;

        $r1 = virtualinvoke r0.<com.mongodb.util.JSONParser: java.lang.Object parseArray(java.lang.String)>(null);

        return $r1;
    }

    protected java.lang.Object parseArray(java.lang.String)
    {
        com.mongodb.util.JSONParseException $r14;
        com.mongodb.util.JSONParser r1;
        int $i0, $i2, i3, $i5, $i6, $i7;
        java.lang.String r0, $r8, $r11;
        char $c1, c4;
        org.bson.BSONCallback $r2, $r3, $r12;
        java.lang.Object $r4, $r9;
        java.lang.StringBuilder $r6, $r7, $r13;

        r1 := @this: com.mongodb.util.JSONParser;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r12 = r1.<com.mongodb.util.JSONParser: org.bson.BSONCallback _callback>;

        interfaceinvoke $r12.<org.bson.BSONCallback: void arrayStart(java.lang.String)>(r0);

        goto label2;

     label1:
        $r2 = r1.<com.mongodb.util.JSONParser: org.bson.BSONCallback _callback>;

        interfaceinvoke $r2.<org.bson.BSONCallback: void arrayStart()>();

     label2:
        virtualinvoke r1.<com.mongodb.util.JSONParser: void read(char)>(91);

        i3 = 0;

        c4 = virtualinvoke r1.<com.mongodb.util.JSONParser: char get()>();

     label3:
        $i5 = (int) c4;

        if $i5 == 93 goto label7;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i0 = i3;

        i3 = i3 + 1;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke r1.<com.mongodb.util.JSONParser: java.lang.Object parse(java.lang.String)>($r8);

        virtualinvoke r1.<com.mongodb.util.JSONParser: void doCallback(java.lang.String,java.lang.Object)>($r8, $r9);

        $c1 = virtualinvoke r1.<com.mongodb.util.JSONParser: char get()>();

        c4 = $c1;

        $i6 = (int) $c1;

        if $i6 != 44 goto label4;

        virtualinvoke r1.<com.mongodb.util.JSONParser: void read(char)>(44);

        goto label6;

     label4:
        $i7 = (int) $c1;

        if $i7 != 93 goto label5;

        goto label7;

     label5:
        $r14 = new com.mongodb.util.JSONParseException;

        $r11 = r1.<com.mongodb.util.JSONParser: java.lang.String s>;

        $i2 = r1.<com.mongodb.util.JSONParser: int pos>;

        specialinvoke $r14.<com.mongodb.util.JSONParseException: void <init>(java.lang.String,int)>($r11, $i2);

        throw $r14;

     label6:
        goto label3;

     label7:
        virtualinvoke r1.<com.mongodb.util.JSONParser: void read(char)>(93);

        $r3 = r1.<com.mongodb.util.JSONParser: org.bson.BSONCallback _callback>;

        $r4 = interfaceinvoke $r3.<org.bson.BSONCallback: java.lang.Object arrayDone()>();

        return $r4;
    }
}
