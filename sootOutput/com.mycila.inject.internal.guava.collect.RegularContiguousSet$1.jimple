class com.mycila.inject.internal.guava.collect.RegularContiguousSet$1 extends com.mycila.inject.internal.guava.collect.AbstractLinkedIterator
{
    final java.lang.Comparable last;
    final com.mycila.inject.internal.guava.collect.RegularContiguousSet this$0;

    void <init>(com.mycila.inject.internal.guava.collect.RegularContiguousSet, java.lang.Comparable)
    {
        com.mycila.inject.internal.guava.collect.RegularContiguousSet r1, $r3;
        java.lang.Comparable r2, $r4;
        com.mycila.inject.internal.guava.collect.RegularContiguousSet$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.RegularContiguousSet$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.RegularContiguousSet;

        r2 := @parameter1: java.lang.Comparable;

        r0.<com.mycila.inject.internal.guava.collect.RegularContiguousSet$1: com.mycila.inject.internal.guava.collect.RegularContiguousSet this$0> = r1;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractLinkedIterator: void <init>(java.lang.Object)>(r2);

        $r3 = r0.<com.mycila.inject.internal.guava.collect.RegularContiguousSet$1: com.mycila.inject.internal.guava.collect.RegularContiguousSet this$0>;

        $r4 = virtualinvoke $r3.<com.mycila.inject.internal.guava.collect.RegularContiguousSet: java.lang.Comparable last()>();

        r0.<com.mycila.inject.internal.guava.collect.RegularContiguousSet$1: java.lang.Comparable last> = $r4;

        return;
    }

    protected java.lang.Comparable computeNext(java.lang.Comparable)
    {
        com.mycila.inject.internal.guava.collect.DiscreteDomain $r4;
        com.mycila.inject.internal.guava.collect.RegularContiguousSet $r3;
        java.lang.Comparable r0, $r2, $r5;
        com.mycila.inject.internal.guava.collect.RegularContiguousSet$1 r1;
        boolean $z0;

        r1 := @this: com.mycila.inject.internal.guava.collect.RegularContiguousSet$1;

        r0 := @parameter0: java.lang.Comparable;

        $r2 = r1.<com.mycila.inject.internal.guava.collect.RegularContiguousSet$1: java.lang.Comparable last>;

        $z0 = staticinvoke <com.mycila.inject.internal.guava.collect.RegularContiguousSet: boolean access$000(java.lang.Comparable,java.lang.Comparable)>(r0, $r2);

        if $z0 == 0 goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r3 = r1.<com.mycila.inject.internal.guava.collect.RegularContiguousSet$1: com.mycila.inject.internal.guava.collect.RegularContiguousSet this$0>;

        $r4 = $r3.<com.mycila.inject.internal.guava.collect.RegularContiguousSet: com.mycila.inject.internal.guava.collect.DiscreteDomain domain>;

        $r5 = virtualinvoke $r4.<com.mycila.inject.internal.guava.collect.DiscreteDomain: java.lang.Comparable next(java.lang.Comparable)>(r0);

     label2:
        return $r5;
    }

    protected volatile java.lang.Object computeNext(java.lang.Object)
    {
        java.lang.Object r1;
        java.lang.Comparable $r2, $r3;
        com.mycila.inject.internal.guava.collect.RegularContiguousSet$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.RegularContiguousSet$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Comparable) r1;

        $r3 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.RegularContiguousSet$1: java.lang.Comparable computeNext(java.lang.Comparable)>($r2);

        return $r3;
    }
}
