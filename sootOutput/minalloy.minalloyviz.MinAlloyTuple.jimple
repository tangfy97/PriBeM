public final class minalloy.minalloyviz.MinAlloyTuple extends java.lang.Object implements java.lang.Comparable
{
    private final edu.mit.csail.sdg.alloy4.ConstList atoms;

    public void <init>(java.util.List)
    {
        java.util.List r1;
        edu.mit.csail.sdg.alloy4.ConstList $r3;
        minalloy.minalloyviz.MinAlloyTuple r0;
        int $i0;
        java.lang.RuntimeException $r2;

        r0 := @this: minalloy.minalloyviz.MinAlloyTuple;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 >= 2 goto label2;

     label1:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("An AlloyTuple object must have 2 or more atoms.");

        throw $r2;

     label2:
        $r3 = staticinvoke <edu.mit.csail.sdg.alloy4.ConstList: edu.mit.csail.sdg.alloy4.ConstList make(java.lang.Iterable)>(r1);

        r0.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms> = $r3;

        return;
    }

    public transient void <init>(minalloy.minalloyviz.MinAlloyAtom[])
    {
        edu.mit.csail.sdg.alloy4.ConstList $r3;
        minalloy.minalloyviz.MinAlloyTuple r0;
        int $i0;
        minalloy.minalloyviz.MinAlloyAtom[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: minalloy.minalloyviz.MinAlloyTuple;

        r1 := @parameter0: minalloy.minalloyviz.MinAlloyAtom[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        $i0 = lengthof r1;

        if $i0 >= 2 goto label2;

     label1:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("An AlloyTuple object must have 2 or more atoms.");

        throw $r2;

     label2:
        $r3 = staticinvoke <minalloy.Util: edu.mit.csail.sdg.alloy4.ConstList asList(java.lang.Object[])>(r1);

        r0.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms> = $r3;

        return;
    }

    public edu.mit.csail.sdg.alloy4.ConstList project(java.util.Collection)
    {
        edu.mit.csail.sdg.alloy4.ConstList$TempList $r0;
        minalloy.minalloyviz.MinAlloyAtom $r7;
        java.lang.Integer $r4;
        int $i0, $i1, $i2, i3, $i4;
        boolean $z0;
        edu.mit.csail.sdg.alloy4.ConstList $r2, $r5, $r8, $r9, $r10, $r11;
        java.util.Collection r3;
        minalloy.minalloyviz.MinAlloyTuple r1;
        java.lang.Object $r6;

        r1 := @this: minalloy.minalloyviz.MinAlloyTuple;

        r3 := @parameter0: java.util.Collection;

        $r0 = new edu.mit.csail.sdg.alloy4.ConstList$TempList;

        $r2 = r1.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms>;

        $i0 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        specialinvoke $r0.<edu.mit.csail.sdg.alloy4.ConstList$TempList: void <init>(int)>($i0);

        i3 = 0;

        goto label3;

     label1:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $z0 = interfaceinvoke r3.<java.util.Collection: boolean contains(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

        $r5 = r1.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms>;

        $r6 = virtualinvoke $r5.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(i3);

        $r7 = (minalloy.minalloyviz.MinAlloyAtom) $r6;

        virtualinvoke $r0.<edu.mit.csail.sdg.alloy4.ConstList$TempList: edu.mit.csail.sdg.alloy4.ConstList$TempList add(java.lang.Object)>($r7);

     label2:
        i3 = i3 + 1;

     label3:
        $r11 = r1.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms>;

        $i4 = virtualinvoke $r11.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        if i3 < $i4 goto label1;

        $i1 = virtualinvoke $r0.<edu.mit.csail.sdg.alloy4.ConstList$TempList: int size()>();

        $r8 = r1.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms>;

        $i2 = virtualinvoke $r8.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        if $i1 != $i2 goto label4;

        $r10 = r1.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms>;

        return $r10;

     label4:
        $r9 = virtualinvoke $r0.<edu.mit.csail.sdg.alloy4.ConstList$TempList: edu.mit.csail.sdg.alloy4.ConstList makeConst()>();

        return $r9;
    }

    public int getArity()
    {
        int $i0;
        edu.mit.csail.sdg.alloy4.ConstList $r1;
        minalloy.minalloyviz.MinAlloyTuple r0;

        r0 := @this: minalloy.minalloyviz.MinAlloyTuple;

        $r1 = r0.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms>;

        $i0 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        return $i0;
    }

    public java.util.List getAtoms()
    {
        edu.mit.csail.sdg.alloy4.ConstList $r1;
        minalloy.minalloyviz.MinAlloyTuple r0;

        r0 := @this: minalloy.minalloyviz.MinAlloyTuple;

        $r1 = r0.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms>;

        return $r1;
    }

    public minalloy.minalloyviz.MinAlloyAtom getStart()
    {
        edu.mit.csail.sdg.alloy4.ConstList $r1;
        minalloy.minalloyviz.MinAlloyAtom $r3;
        minalloy.minalloyviz.MinAlloyTuple r0;
        java.lang.Object $r2;

        r0 := @this: minalloy.minalloyviz.MinAlloyTuple;

        $r1 = r0.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms>;

        $r2 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(0);

        $r3 = (minalloy.minalloyviz.MinAlloyAtom) $r2;

        return $r3;
    }

    public minalloy.minalloyviz.MinAlloyAtom getEnd()
    {
        edu.mit.csail.sdg.alloy4.ConstList $r1, $r2;
        minalloy.minalloyviz.MinAlloyAtom $r4;
        minalloy.minalloyviz.MinAlloyTuple r0;
        int $i0, $i1;
        java.lang.Object $r3;

        r0 := @this: minalloy.minalloyviz.MinAlloyTuple;

        $r2 = r0.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms>;

        $r1 = r0.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms>;

        $i0 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        $i1 = $i0 - 1;

        $r3 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>($i1);

        $r4 = (minalloy.minalloyviz.MinAlloyAtom) $r3;

        return $r4;
    }

    public minalloy.minalloyviz.MinAlloyTuple reverse()
    {
        edu.mit.csail.sdg.alloy4.ConstList $r2, $r3, $r4;
        minalloy.minalloyviz.MinAlloyAtom $r6;
        java.util.ArrayList $r8;
        minalloy.minalloyviz.MinAlloyTuple r1, $r9;
        int $i0, $i1, i2, $i4;
        java.lang.Object $r5;

        r1 := @this: minalloy.minalloyviz.MinAlloyTuple;

        $r8 = new java.util.ArrayList;

        $r2 = r1.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms>;

        $i0 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = r1.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms>;

        $i1 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        i2 = $i1 - 1;

        goto label2;

     label1:
        $r4 = r1.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms>;

        $r5 = virtualinvoke $r4.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(i2);

        $r6 = (minalloy.minalloyviz.MinAlloyAtom) $r5;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r6);

        $i4 = (int) -1;

        i2 = i2 + $i4;

     label2:
        if i2 >= 0 goto label1;

        $r9 = new minalloy.minalloyviz.MinAlloyTuple;

        specialinvoke $r9.<minalloy.minalloyviz.MinAlloyTuple: void <init>(java.util.List)>($r8);

        return $r9;
    }

    public java.lang.String toString()
    {
        int i0, $i1;
        java.lang.String $r2, $r7, $r10, $r12, r13;
        edu.mit.csail.sdg.alloy4.ConstList $r3, $r14;
        minalloy.minalloyviz.MinAlloyTuple r0;
        java.lang.StringBuilder $r1, $r5, $r6, $r8, $r9, $r11;
        java.lang.Object $r4;

        r0 := @this: minalloy.minalloyviz.MinAlloyTuple;

        r13 = "<";

        i0 = 0;

        goto label3;

     label1:
        if i0 == 0 goto label2;

        $r6 = new java.lang.StringBuilder;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r13);

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r1 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r13);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r3 = r0.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms>;

        $r4 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(i0);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        r13 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = i0 + 1;

     label3:
        $r14 = r0.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms>;

        $i1 = virtualinvoke $r14.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        if i0 < $i1 goto label1;

        $r9 = new java.lang.StringBuilder;

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r13);

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r10);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public int compareTo(minalloy.minalloyviz.MinAlloyTuple)
    {
        minalloy.minalloyviz.MinAlloyAtom $r10, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i8;
        edu.mit.csail.sdg.alloy4.ConstList $r2, $r3, $r4, $r5, $r6, $r7, $r9;
        minalloy.minalloyviz.MinAlloyTuple r0, r1;
        java.lang.Object $r8, $r11;

        r1 := @this: minalloy.minalloyviz.MinAlloyTuple;

        r0 := @parameter0: minalloy.minalloyviz.MinAlloyTuple;

        if r0 != null goto label1;

        return 1;

     label1:
        $r2 = r1.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms>;

        $i0 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        $r3 = r0.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms>;

        $i1 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        if $i0 >= $i1 goto label2;

        $i8 = (int) -1;

        return $i8;

     label2:
        $r4 = r1.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms>;

        $i2 = virtualinvoke $r4.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        $r5 = r0.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms>;

        $i3 = virtualinvoke $r5.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        if $i2 <= $i3 goto label3;

        return 1;

     label3:
        i6 = 0;

        goto label6;

     label4:
        $r7 = r1.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms>;

        $r8 = virtualinvoke $r7.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(i6);

        $r10 = (minalloy.minalloyviz.MinAlloyAtom) $r8;

        $r9 = r0.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms>;

        $r11 = virtualinvoke $r9.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(i6);

        $r12 = (minalloy.minalloyviz.MinAlloyAtom) $r11;

        $i5 = virtualinvoke $r10.<minalloy.minalloyviz.MinAlloyAtom: int compareTo(minalloy.minalloyviz.MinAlloyAtom)>($r12);

        if $i5 == 0 goto label5;

        return $i5;

     label5:
        i6 = i6 + 1;

     label6:
        $r6 = r1.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms>;

        $i4 = virtualinvoke $r6.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        if i6 < $i4 goto label4;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        edu.mit.csail.sdg.alloy4.ConstList $r3, $r4;
        minalloy.minalloyviz.MinAlloyTuple r1, $r2;
        java.lang.Object r0;
        boolean $z0, $z1;

        r1 := @this: minalloy.minalloyviz.MinAlloyTuple;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof minalloy.minalloyviz.MinAlloyTuple;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        if r0 != r1 goto label2;

        return 1;

     label2:
        $r4 = r1.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms>;

        $r2 = (minalloy.minalloyviz.MinAlloyTuple) r0;

        $r3 = $r2.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms>;

        $z1 = virtualinvoke $r4.<edu.mit.csail.sdg.alloy4.ConstList: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    public int hashCode()
    {
        int $i0;
        edu.mit.csail.sdg.alloy4.ConstList $r1;
        minalloy.minalloyviz.MinAlloyTuple r0;

        r0 := @this: minalloy.minalloyviz.MinAlloyTuple;

        $r1 = r0.<minalloy.minalloyviz.MinAlloyTuple: edu.mit.csail.sdg.alloy4.ConstList atoms>;

        $i0 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.ConstList: int hashCode()>();

        return $i0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        minalloy.minalloyviz.MinAlloyTuple r0, $r2;
        int $i0;
        java.lang.Object r1;

        r0 := @this: minalloy.minalloyviz.MinAlloyTuple;

        r1 := @parameter0: java.lang.Object;

        $r2 = (minalloy.minalloyviz.MinAlloyTuple) r1;

        $i0 = virtualinvoke r0.<minalloy.minalloyviz.MinAlloyTuple: int compareTo(minalloy.minalloyviz.MinAlloyTuple)>($r2);

        return $i0;
    }
}
