class com.hp.hpl.jena.util.CharEncoding$NonIANAnioEncoding extends com.hp.hpl.jena.util.CharEncoding
{

    void <init>(java.lang.String)
    {
        java.lang.String r1;
        com.hp.hpl.jena.util.CharEncoding$NonIANAnioEncoding r0;

        r0 := @this: com.hp.hpl.jena.util.CharEncoding$NonIANAnioEncoding;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.util.CharEncoding: void <init>(java.lang.String,com.hp.hpl.jena.util.CharEncoding$1)>(r1, null);

        return;
    }

    public boolean isIANA()
    {
        com.hp.hpl.jena.util.CharEncoding$NonIANAnioEncoding r0;

        r0 := @this: com.hp.hpl.jena.util.CharEncoding$NonIANAnioEncoding;

        return 0;
    }

    public boolean isInNIO()
    {
        com.hp.hpl.jena.util.CharEncoding$NonIANAnioEncoding r0;

        r0 := @this: com.hp.hpl.jena.util.CharEncoding$NonIANAnioEncoding;

        return 1;
    }

    public java.lang.String warningMessage()
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        java.lang.String $r3, $r6;
        com.hp.hpl.jena.util.CharEncoding$NonIANAnioEncoding r2;

        r2 := @this: com.hp.hpl.jena.util.CharEncoding$NonIANAnioEncoding;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The encoding \"");

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.util.CharEncoding$NonIANAnioEncoding: java.lang.String name()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" is not registered with IANA, and hence not suitable for Web content.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
