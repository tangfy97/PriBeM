public final class org.apache.xml.serialize.HTMLdtd extends java.lang.Object
{
    public static final java.lang.String HTMLPublicId;
    public static final java.lang.String HTMLSystemId;
    public static final java.lang.String XHTMLPublicId;
    public static final java.lang.String XHTMLSystemId;
    private static java.util.Hashtable _byChar;
    private static java.util.Hashtable _byName;
    private static java.util.Hashtable _boolAttrs;
    private static java.util.Hashtable _elemDefs;
    private static final java.lang.String ENTITIES_RESOURCE;
    private static final int ONLY_OPENING;
    private static final int ELEM_CONTENT;
    private static final int PRESERVE;
    private static final int OPT_CLOSING;
    private static final int EMPTY;
    private static final int ALLOWED_HEAD;
    private static final int CLOSE_P;
    private static final int CLOSE_DD_DT;
    private static final int CLOSE_SELF;
    private static final int CLOSE_TABLE;
    private static final int CLOSE_TH_TD;
    static java.lang.Class class$org$apache$xml$serialize$HTMLdtd;

    public void <init>()
    {
        org.apache.xml.serialize.HTMLdtd r0;

        r0 := @this: org.apache.xml.serialize.HTMLdtd;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isEmptyTag(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.xml.serialize.HTMLdtd: boolean isElement(java.lang.String,int)>(r0, 17);

        return $z0;
    }

    public static boolean isElementContent(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.xml.serialize.HTMLdtd: boolean isElement(java.lang.String,int)>(r0, 2);

        return $z0;
    }

    public static boolean isPreserveSpace(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.xml.serialize.HTMLdtd: boolean isElement(java.lang.String,int)>(r0, 4);

        return $z0;
    }

    public static boolean isOptionalClosing(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.xml.serialize.HTMLdtd: boolean isElement(java.lang.String,int)>(r0, 8);

        return $z0;
    }

    public static boolean isOnlyOpening(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.xml.serialize.HTMLdtd: boolean isElement(java.lang.String,int)>(r0, 1);

        return $z0;
    }

    public static boolean isClosing(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("HEAD");

        if $z0 == 0 goto label03;

        $z17 = staticinvoke <org.apache.xml.serialize.HTMLdtd: boolean isElement(java.lang.String,int)>(r1, 32);

        if $z17 != 0 goto label01;

        $z18 = 1;

        goto label02;

     label01:
        $z18 = 0;

     label02:
        return $z18;

     label03:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("P");

        if $z1 == 0 goto label04;

        $z16 = staticinvoke <org.apache.xml.serialize.HTMLdtd: boolean isElement(java.lang.String,int)>(r1, 64);

        return $z16;

     label04:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("DT");

        if $z2 != 0 goto label05;

        $z4 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("DD");

        if $z4 == 0 goto label06;

     label05:
        $z3 = staticinvoke <org.apache.xml.serialize.HTMLdtd: boolean isElement(java.lang.String,int)>(r1, 128);

        return $z3;

     label06:
        $z5 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("LI");

        if $z5 != 0 goto label07;

        $z7 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("OPTION");

        if $z7 == 0 goto label08;

     label07:
        $z6 = staticinvoke <org.apache.xml.serialize.HTMLdtd: boolean isElement(java.lang.String,int)>(r1, 256);

        return $z6;

     label08:
        $z8 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("THEAD");

        if $z8 != 0 goto label09;

        $z9 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("TFOOT");

        if $z9 != 0 goto label09;

        $z10 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("TBODY");

        if $z10 != 0 goto label09;

        $z11 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("TR");

        if $z11 != 0 goto label09;

        $z12 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("COLGROUP");

        if $z12 == 0 goto label10;

     label09:
        $z19 = staticinvoke <org.apache.xml.serialize.HTMLdtd: boolean isElement(java.lang.String,int)>(r1, 512);

        return $z19;

     label10:
        $z13 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("TH");

        if $z13 != 0 goto label11;

        $z15 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("TD");

        if $z15 == 0 goto label12;

     label11:
        $z14 = staticinvoke <org.apache.xml.serialize.HTMLdtd: boolean isElement(java.lang.String,int)>(r1, 16384);

        return $z14;

     label12:
        return 0;
    }

    public static boolean isURI(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0, $z1, $z2;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("href");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("src");

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static boolean isBoolean(java.lang.String, java.lang.String)
    {
        java.lang.String[] r5;
        java.util.Locale $r1;
        int $i0, i1;
        java.lang.Object $r4;
        java.lang.String r0, $r3, r6, $r7;
        java.util.Hashtable $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $r2 = <org.apache.xml.serialize.HTMLdtd: java.util.Hashtable _boolAttrs>;

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r1);

        $r4 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (java.lang.String[]) $r4;

        if r5 != null goto label1;

        return 0;

     label1:
        i1 = 0;

        goto label4;

     label2:
        $r7 = r5[i1];

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r6);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

     label4:
        $i0 = lengthof r5;

        if i1 < $i0 goto label2;

        return 0;
    }

    public static int charFromName(java.lang.String)
    {
        int $i0, $i2;
        java.lang.Object $r2;
        java.lang.String r0;
        java.lang.Integer $r3;
        java.util.Hashtable $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void initialize()>();

        $r1 = <org.apache.xml.serialize.HTMLdtd: java.util.Hashtable _byName>;

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0);

        if $r2 == null goto label1;

        $z0 = $r2 instanceof java.lang.Integer;

        if $z0 == 0 goto label1;

        $r3 = (java.lang.Integer) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        $i2 = (int) -1;

        return $i2;
    }

    public static java.lang.String fromChar(int)
    {
        int i0, $i2;
        java.lang.Object $r2;
        java.lang.String r3;
        java.lang.Integer $r4;
        java.util.Hashtable $r1;

        i0 := @parameter0: int;

        $i2 = (int) 65535;

        if i0 <= $i2 goto label1;

        return null;

     label1:
        staticinvoke <org.apache.xml.serialize.HTMLdtd: void initialize()>();

        $r1 = <org.apache.xml.serialize.HTMLdtd: java.util.Hashtable _byChar>;

        $r4 = new java.lang.Integer;

        specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0);

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r4);

        r3 = (java.lang.String) $r2;

        return r3;
    }

    private static void initialize()
    {
        java.lang.Exception $r12, $r13, $r15;
        java.lang.Throwable $r14;
        java.lang.Object[] $r10, $r17;
        int $i0, $i2, $i3, $i4, $i5, i7, $i8;
        java.lang.String $r7, $r8, $r11, $r18, $r19, r22, r23;
        java.util.Hashtable $r0, $r24, $r25;
        char $c1, $c6;
        java.lang.RuntimeException $r26, $r29;
        java.io.InputStreamReader $r27;
        java.lang.Class $r3, $r21;
        java.io.BufferedReader $r28;
        java.io.InputStream $r4, r20;

        r20 = null;

        $r0 = <org.apache.xml.serialize.HTMLdtd: java.util.Hashtable _byName>;

        if $r0 == null goto label01;

        return;

     label01:
        $r24 = new java.util.Hashtable;

        specialinvoke $r24.<java.util.Hashtable: void <init>()>();

        <org.apache.xml.serialize.HTMLdtd: java.util.Hashtable _byName> = $r24;

        $r25 = new java.util.Hashtable;

        specialinvoke $r25.<java.util.Hashtable: void <init>()>();

        <org.apache.xml.serialize.HTMLdtd: java.util.Hashtable _byChar> = $r25;

        $r3 = <org.apache.xml.serialize.HTMLdtd: java.lang.Class class$org$apache$xml$serialize$HTMLdtd>;

        if $r3 != null goto label02;

        $r21 = staticinvoke <org.apache.xml.serialize.HTMLdtd: java.lang.Class class$(java.lang.String)>("org.apache.xml.serialize.HTMLdtd");

        <org.apache.xml.serialize.HTMLdtd: java.lang.Class class$org$apache$xml$serialize$HTMLdtd> = $r21;

        goto label03;

     label02:
        $r21 = <org.apache.xml.serialize.HTMLdtd: java.lang.Class class$org$apache$xml$serialize$HTMLdtd>;

     label03:
        $r4 = virtualinvoke $r21.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("HTMLEntities.res");

        r20 = $r4;

        if $r4 != null goto label04;

        $r26 = new java.lang.RuntimeException;

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = "HTMLEntities.res";

        $r11 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://apache.org/xml/serializer", "ResourceNotFound", $r10);

        specialinvoke $r26.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r26;

     label04:
        $r28 = new java.io.BufferedReader;

        $r27 = new java.io.InputStreamReader;

        specialinvoke $r27.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r4, "ASCII");

        specialinvoke $r28.<java.io.BufferedReader: void <init>(java.io.Reader)>($r27);

        r22 = virtualinvoke $r28.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label10;

     label05:
        $i0 = virtualinvoke r22.<java.lang.String: int length()>();

        if $i0 == 0 goto label06;

        $c1 = virtualinvoke r22.<java.lang.String: char charAt(int)>(0);

        $i8 = (int) $c1;

        if $i8 != 35 goto label07;

     label06:
        r22 = virtualinvoke $r28.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label10;

     label07:
        $i2 = virtualinvoke r22.<java.lang.String: int indexOf(int)>(32);

        if $i2 <= 1 goto label09;

        $r7 = virtualinvoke r22.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        i7 = $i2 + 1;

        $i3 = virtualinvoke r22.<java.lang.String: int length()>();

        if i7 >= $i3 goto label09;

        $r8 = virtualinvoke r22.<java.lang.String: java.lang.String substring(int)>(i7);

        r23 = $r8;

        $i4 = virtualinvoke $r8.<java.lang.String: int indexOf(int)>(32);

        if $i4 <= 0 goto label08;

        r23 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

     label08:
        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r23);

        $c6 = (char) $i5;

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineEntity(java.lang.String,char)>($r7, $c6);

     label09:
        r22 = virtualinvoke $r28.<java.io.BufferedReader: java.lang.String readLine()>();

     label10:
        if r22 != null goto label05;

        virtualinvoke $r4.<java.io.InputStream: void close()>();

     label11:
        goto label17;

     label12:
        goto label16;

     label13:
        $r15 := @caughtexception;

        $r29 = new java.lang.RuntimeException;

        $r17 = newarray (java.lang.Object)[2];

        $r17[0] = "HTMLEntities.res";

        $r18 = virtualinvoke $r15.<java.lang.Exception: java.lang.String toString()>();

        $r17[1] = $r18;

        $r19 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://apache.org/xml/serializer", "ResourceNotLoaded", $r17);

        specialinvoke $r29.<java.lang.RuntimeException: void <init>(java.lang.String)>($r19);

        throw $r29;

     label14:
        $r14 := @caughtexception;

        goto label22;

     label15:
        throw $r14;

     label16:
        return;

     label17:
        if $r4 == null goto label21;

     label18:
        virtualinvoke $r4.<java.io.InputStream: void close()>();

     label19:
        goto label21;

     label20:
        $r13 := @caughtexception;

     label21:
        goto label12;

     label22:
        if r20 == null goto label26;

     label23:
        virtualinvoke r20.<java.io.InputStream: void close()>();

     label24:
        goto label26;

     label25:
        $r12 := @caughtexception;

     label26:
        goto label15;

        catch java.lang.Exception from label01 to label11 with label13;
        catch java.lang.Throwable from label01 to label14 with label14;
        catch java.lang.Exception from label18 to label19 with label20;
        catch java.lang.Exception from label23 to label24 with label25;
    }

    private static void defineEntity(java.lang.String, char)
    {
        char c0;
        java.lang.Integer $r7, $r8;
        int $i1, $i2;
        java.lang.Object $r2;
        java.lang.String r0;
        java.util.Hashtable $r1, $r4, $r6;

        r0 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        $r1 = <org.apache.xml.serialize.HTMLdtd: java.util.Hashtable _byName>;

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0);

        if $r2 != null goto label1;

        $r4 = <org.apache.xml.serialize.HTMLdtd: java.util.Hashtable _byName>;

        $r7 = new java.lang.Integer;

        $i1 = (int) c0;

        specialinvoke $r7.<java.lang.Integer: void <init>(int)>($i1);

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r7);

        $r6 = <org.apache.xml.serialize.HTMLdtd: java.util.Hashtable _byChar>;

        $r8 = new java.lang.Integer;

        $i2 = (int) c0;

        specialinvoke $r8.<java.lang.Integer: void <init>(int)>($i2);

        virtualinvoke $r6.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r0);

     label1:
        return;
    }

    private static void defineElement(java.lang.String, int)
    {
        int i0;
        java.lang.String r0;
        java.lang.Integer $r1;
        java.util.Hashtable $r2;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = <org.apache.xml.serialize.HTMLdtd: java.util.Hashtable _elemDefs>;

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i0);

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r1);

        return;
    }

    private static void defineBoolean(java.lang.String, java.lang.String)
    {
        java.lang.String[] $r1;
        java.lang.String r0, r2;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = r2;

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineBoolean(java.lang.String,java.lang.String[])>(r0, $r1);

        return;
    }

    private static void defineBoolean(java.lang.String, java.lang.String[])
    {
        java.lang.String[] r1;
        java.lang.String r0;
        java.util.Hashtable $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        $r2 = <org.apache.xml.serialize.HTMLdtd: java.util.Hashtable _boolAttrs>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

        return;
    }

    private static boolean isElement(java.lang.String, int)
    {
        java.lang.Integer r5;
        java.util.Locale $r1;
        int $i0, i1, $i2;
        java.lang.Object $r4;
        java.lang.String r0, $r3;
        java.util.Hashtable $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        $r2 = <org.apache.xml.serialize.HTMLdtd: java.util.Hashtable _elemDefs>;

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r1);

        $r4 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (java.lang.Integer) $r4;

        if r5 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

        $i2 = $i0 & i1;

        if $i2 != i1 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    static void <clinit>()
    {
        java.lang.String[] $r2, $r3, $r4, $r5;
        java.util.Hashtable $r0, $r1;

        <org.apache.xml.serialize.HTMLdtd: int CLOSE_TH_TD> = 16384;

        <org.apache.xml.serialize.HTMLdtd: int CLOSE_TABLE> = 512;

        <org.apache.xml.serialize.HTMLdtd: int CLOSE_SELF> = 256;

        <org.apache.xml.serialize.HTMLdtd: int CLOSE_DD_DT> = 128;

        <org.apache.xml.serialize.HTMLdtd: int CLOSE_P> = 64;

        <org.apache.xml.serialize.HTMLdtd: int ALLOWED_HEAD> = 32;

        <org.apache.xml.serialize.HTMLdtd: int EMPTY> = 17;

        <org.apache.xml.serialize.HTMLdtd: int OPT_CLOSING> = 8;

        <org.apache.xml.serialize.HTMLdtd: int PRESERVE> = 4;

        <org.apache.xml.serialize.HTMLdtd: int ELEM_CONTENT> = 2;

        <org.apache.xml.serialize.HTMLdtd: int ONLY_OPENING> = 1;

        <org.apache.xml.serialize.HTMLdtd: java.lang.String ENTITIES_RESOURCE> = "HTMLEntities.res";

        <org.apache.xml.serialize.HTMLdtd: java.lang.String XHTMLSystemId> = "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd";

        <org.apache.xml.serialize.HTMLdtd: java.lang.String XHTMLPublicId> = "-//W3C//DTD XHTML 1.0 Strict//EN";

        <org.apache.xml.serialize.HTMLdtd: java.lang.String HTMLSystemId> = "http://www.w3.org/TR/html4/strict.dtd";

        <org.apache.xml.serialize.HTMLdtd: java.lang.String HTMLPublicId> = "-//W3C//DTD HTML 4.01//EN";

        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>()>();

        <org.apache.xml.serialize.HTMLdtd: java.util.Hashtable _elemDefs> = $r0;

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("ADDRESS", 64);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("AREA", 17);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("BASE", 49);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("BASEFONT", 17);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("BLOCKQUOTE", 64);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("BODY", 8);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("BR", 17);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("COL", 17);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("COLGROUP", 522);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("DD", 137);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("DIV", 64);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("DL", 66);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("DT", 137);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("FIELDSET", 64);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("FORM", 64);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("FRAME", 25);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("H1", 64);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("H2", 64);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("H3", 64);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("H4", 64);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("H5", 64);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("H6", 64);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("HEAD", 10);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("HR", 81);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("HTML", 10);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("IMG", 17);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("INPUT", 17);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("ISINDEX", 49);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("LI", 265);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("LINK", 49);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("MAP", 32);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("META", 49);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("OL", 66);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("OPTGROUP", 2);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("OPTION", 265);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("P", 328);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("PARAM", 17);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("PRE", 68);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("SCRIPT", 36);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("NOSCRIPT", 36);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("SELECT", 2);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("STYLE", 36);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("TABLE", 66);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("TBODY", 522);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("TD", 16392);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("TEXTAREA", 4);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("TFOOT", 522);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("TH", 16392);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("THEAD", 522);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("TITLE", 32);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("TR", 522);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineElement(java.lang.String,int)>("UL", 66);

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        <org.apache.xml.serialize.HTMLdtd: java.util.Hashtable _boolAttrs> = $r1;

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineBoolean(java.lang.String,java.lang.String)>("AREA", "href");

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineBoolean(java.lang.String,java.lang.String)>("BUTTON", "disabled");

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineBoolean(java.lang.String,java.lang.String)>("DIR", "compact");

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineBoolean(java.lang.String,java.lang.String)>("DL", "compact");

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineBoolean(java.lang.String,java.lang.String)>("FRAME", "noresize");

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineBoolean(java.lang.String,java.lang.String)>("HR", "noshade");

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineBoolean(java.lang.String,java.lang.String)>("IMAGE", "ismap");

        $r2 = newarray (java.lang.String)[4];

        $r2[0] = "defaultchecked";

        $r2[1] = "checked";

        $r2[2] = "readonly";

        $r2[3] = "disabled";

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineBoolean(java.lang.String,java.lang.String[])>("INPUT", $r2);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineBoolean(java.lang.String,java.lang.String)>("LINK", "link");

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineBoolean(java.lang.String,java.lang.String)>("MENU", "compact");

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineBoolean(java.lang.String,java.lang.String)>("OBJECT", "declare");

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineBoolean(java.lang.String,java.lang.String)>("OL", "compact");

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineBoolean(java.lang.String,java.lang.String)>("OPTGROUP", "disabled");

        $r3 = newarray (java.lang.String)[3];

        $r3[0] = "default-selected";

        $r3[1] = "selected";

        $r3[2] = "disabled";

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineBoolean(java.lang.String,java.lang.String[])>("OPTION", $r3);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineBoolean(java.lang.String,java.lang.String)>("SCRIPT", "defer");

        $r4 = newarray (java.lang.String)[2];

        $r4[0] = "multiple";

        $r4[1] = "disabled";

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineBoolean(java.lang.String,java.lang.String[])>("SELECT", $r4);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineBoolean(java.lang.String,java.lang.String)>("STYLE", "disabled");

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineBoolean(java.lang.String,java.lang.String)>("TD", "nowrap");

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineBoolean(java.lang.String,java.lang.String)>("TH", "nowrap");

        $r5 = newarray (java.lang.String)[2];

        $r5[0] = "disabled";

        $r5[1] = "readonly";

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineBoolean(java.lang.String,java.lang.String[])>("TEXTAREA", $r5);

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void defineBoolean(java.lang.String,java.lang.String)>("UL", "compact");

        staticinvoke <org.apache.xml.serialize.HTMLdtd: void initialize()>();

        return;
    }
}
