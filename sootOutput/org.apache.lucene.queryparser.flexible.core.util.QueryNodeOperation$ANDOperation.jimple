final enum class org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation extends java.lang.Enum
{
    public static final enum org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation BOTH;
    public static final enum org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation Q1;
    public static final enum org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation Q2;
    public static final enum org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation NONE;
    private static final org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation[] $VALUES;

    public static org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation[] values()
    {
        org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation: org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation[]) $r1;

        return $r2;
    }

    public static org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation valueOf(java.lang.String)
    {
        java.lang.String r0;
        org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation $r2;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/lucene/queryparser/flexible/core/util/QueryNodeOperation$ANDOperation;", r0);

        $r2 = (org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation r0;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation[] $r4;
        org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;

        $r0 = new org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation;

        specialinvoke $r0.<org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation: void <init>(java.lang.String,int)>("BOTH", 0);

        <org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation: org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation BOTH> = $r0;

        $r1 = new org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation;

        specialinvoke $r1.<org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation: void <init>(java.lang.String,int)>("Q1", 1);

        <org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation: org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation Q1> = $r1;

        $r2 = new org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation;

        specialinvoke $r2.<org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation: void <init>(java.lang.String,int)>("Q2", 2);

        <org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation: org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation Q2> = $r2;

        $r3 = new org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation;

        specialinvoke $r3.<org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation: void <init>(java.lang.String,int)>("NONE", 3);

        <org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation: org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation NONE> = $r3;

        $r4 = newarray (org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation)[4];

        $r5 = <org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation: org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation BOTH>;

        $r4[0] = $r5;

        $r6 = <org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation: org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation Q1>;

        $r4[1] = $r6;

        $r7 = <org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation: org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation Q2>;

        $r4[2] = $r7;

        $r8 = <org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation: org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation NONE>;

        $r4[3] = $r8;

        <org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation: org.apache.lucene.queryparser.flexible.core.util.QueryNodeOperation$ANDOperation[] $VALUES> = $r4;

        return;
    }
}
