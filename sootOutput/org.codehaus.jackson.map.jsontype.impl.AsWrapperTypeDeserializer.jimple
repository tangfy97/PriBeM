public class org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer extends org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase
{

    public void <init>(org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.jsontype.TypeIdResolver, org.codehaus.jackson.map.BeanProperty)
    {
        org.codehaus.jackson.map.jsontype.TypeIdResolver r2;
        org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer r0;
        org.codehaus.jackson.type.JavaType r1;
        org.codehaus.jackson.map.BeanProperty r3;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer;

        r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        r2 := @parameter1: org.codehaus.jackson.map.jsontype.TypeIdResolver;

        r3 := @parameter2: org.codehaus.jackson.map.BeanProperty;

        specialinvoke r0.<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.jsontype.TypeIdResolver,org.codehaus.jackson.map.BeanProperty,java.lang.Class)>(r1, r2, r3, null);

        return;
    }

    public void <init>(org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.jsontype.TypeIdResolver, org.codehaus.jackson.map.BeanProperty, java.lang.Class)
    {
        org.codehaus.jackson.map.jsontype.TypeIdResolver r2;
        org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer r0;
        org.codehaus.jackson.type.JavaType r1;
        java.lang.Class r4;
        org.codehaus.jackson.map.BeanProperty r3;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer;

        r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        r2 := @parameter1: org.codehaus.jackson.map.jsontype.TypeIdResolver;

        r3 := @parameter2: org.codehaus.jackson.map.BeanProperty;

        r4 := @parameter3: java.lang.Class;

        specialinvoke r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.jsontype.TypeIdResolver,org.codehaus.jackson.map.BeanProperty,java.lang.Class)>(r1, r2, r3, null);

        return;
    }

    public org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion()
    {
        org.codehaus.jackson.annotate.JsonTypeInfo$As $r0;
        org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer r1;

        r1 := @this: org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer;

        $r0 = <org.codehaus.jackson.annotate.JsonTypeInfo$As: org.codehaus.jackson.annotate.JsonTypeInfo$As WRAPPER_OBJECT>;

        return $r0;
    }

    public java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer r0;
        java.lang.Object $r3;
        org.codehaus.jackson.JsonParser r1;
        org.codehaus.jackson.map.DeserializationContext r2;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = specialinvoke r0.<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object _deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r1, r2);

        return $r3;
    }

    public java.lang.Object deserializeTypedFromArray(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer r0;
        java.lang.Object $r3;
        org.codehaus.jackson.JsonParser r1;
        org.codehaus.jackson.map.DeserializationContext r2;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = specialinvoke r0.<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object _deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r1, r2);

        return $r3;
    }

    public java.lang.Object deserializeTypedFromScalar(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer r0;
        java.lang.Object $r3;
        org.codehaus.jackson.JsonParser r1;
        org.codehaus.jackson.map.DeserializationContext r2;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = specialinvoke r0.<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object _deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r1, r2);

        return $r3;
    }

    public java.lang.Object deserializeTypedFromAny(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer r0;
        java.lang.Object $r3;
        org.codehaus.jackson.JsonParser r1;
        org.codehaus.jackson.map.DeserializationContext r2;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = specialinvoke r0.<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object _deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r1, r2);

        return $r3;
    }

    private final java.lang.Object _deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r1, $r2, $r3, $r4, $r10, $r11, $r12, $r15, $r23;
        org.codehaus.jackson.map.DeserializationContext r6;
        org.codehaus.jackson.map.JsonMappingException $r13, $r21, $r28;
        org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer r5;
        org.codehaus.jackson.map.JsonDeserializer $r8;
        java.lang.String $r7, $r17, $r20, $r25, $r27;
        org.codehaus.jackson.JsonParser r0;
        java.lang.Object $r9;
        java.lang.StringBuilder $r14, $r16, $r18, $r19, $r22, $r24, $r26;

        r5 := @this: org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer;

        r0 := @parameter0: org.codehaus.jackson.JsonParser;

        r6 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r2 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_OBJECT>;

        if $r1 == $r2 goto label1;

        $r23 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_OBJECT>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("need JSON Object to contain As.WRAPPER_OBJECT type information for class ");

        $r25 = virtualinvoke r5.<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer: java.lang.String baseTypeName()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = virtualinvoke r6.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException wrongTokenException(org.codehaus.jackson.JsonParser,org.codehaus.jackson.JsonToken,java.lang.String)>(r0, $r23, $r27);

        throw $r28;

     label1:
        $r3 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        if $r3 == $r4 goto label2;

        $r15 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("need JSON String that contains type id (for subtype of ");

        $r17 = virtualinvoke r5.<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer: java.lang.String baseTypeName()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = virtualinvoke r6.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException wrongTokenException(org.codehaus.jackson.JsonParser,org.codehaus.jackson.JsonToken,java.lang.String)>(r0, $r15, $r20);

        throw $r21;

     label2:
        $r7 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: java.lang.String getText()>();

        $r8 = virtualinvoke r5.<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer: org.codehaus.jackson.map.JsonDeserializer _findDeserializer(org.codehaus.jackson.map.DeserializationContext,java.lang.String)>(r6, $r7);

        virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r9 = virtualinvoke $r8.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r0, r6);

        $r10 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r11 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_OBJECT>;

        if $r10 == $r11 goto label3;

        $r12 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_OBJECT>;

        $r13 = virtualinvoke r6.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException wrongTokenException(org.codehaus.jackson.JsonParser,org.codehaus.jackson.JsonToken,java.lang.String)>(r0, $r12, "expected closing END_OBJECT after type information and deserialized value");

        throw $r13;

     label3:
        return $r9;
    }
}
