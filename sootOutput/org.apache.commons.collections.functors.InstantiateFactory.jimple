public class org.apache.commons.collections.functors.InstantiateFactory extends java.lang.Object implements org.apache.commons.collections.Factory, java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.lang.Class iClassToInstantiate;
    private final java.lang.Class[] iParamTypes;
    private final java.lang.Object[] iArgs;
    private transient java.lang.reflect.Constructor iConstructor;

    public static org.apache.commons.collections.Factory getInstance(java.lang.Class, java.lang.Class[], java.lang.Object[])
    {
        java.lang.Object[] $r5, r9, r12;
        int $i0, $i1, $i2;
        java.lang.Class[] $r3, r8, r11;
        java.lang.IllegalArgumentException $r7, $r10;
        java.lang.Class r0;
        java.lang.Object $r2, $r4;
        org.apache.commons.collections.functors.InstantiateFactory $r1, $r6;

        r0 := @parameter0: java.lang.Class;

        r8 := @parameter1: java.lang.Class[];

        r9 := @parameter2: java.lang.Object[];

        if r0 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Class to instantiate must not be null");

        throw $r7;

     label1:
        if r8 != null goto label2;

        if r9 != null goto label4;

     label2:
        if r8 == null goto label3;

        if r9 == null goto label4;

     label3:
        if r8 == null goto label5;

        if r9 == null goto label5;

        $i2 = lengthof r8;

        $i1 = lengthof r9;

        if $i2 == $i1 goto label5;

     label4:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameter types must match the arguments");

        throw $r10;

     label5:
        if r8 == null goto label6;

        $i0 = lengthof r8;

        if $i0 != 0 goto label7;

     label6:
        $r1 = new org.apache.commons.collections.functors.InstantiateFactory;

        specialinvoke $r1.<org.apache.commons.collections.functors.InstantiateFactory: void <init>(java.lang.Class)>(r0);

        return $r1;

     label7:
        $r2 = virtualinvoke r8.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.lang.Class[]) $r2;

        r11 = (java.lang.Class[]) $r3;

        $r4 = virtualinvoke r9.<java.lang.Object: java.lang.Object clone()>();

        $r5 = (java.lang.Object[]) $r4;

        r12 = (java.lang.Object[]) $r5;

        $r6 = new org.apache.commons.collections.functors.InstantiateFactory;

        specialinvoke $r6.<org.apache.commons.collections.functors.InstantiateFactory: void <init>(java.lang.Class,java.lang.Class[],java.lang.Object[])>(r0, r11, r12);

        return $r6;
    }

    public void <init>(java.lang.Class)
    {
        java.lang.Class r1;
        org.apache.commons.collections.functors.InstantiateFactory r0;

        r0 := @this: org.apache.commons.collections.functors.InstantiateFactory;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.functors.InstantiateFactory: java.lang.reflect.Constructor iConstructor> = null;

        r0.<org.apache.commons.collections.functors.InstantiateFactory: java.lang.Class iClassToInstantiate> = r1;

        r0.<org.apache.commons.collections.functors.InstantiateFactory: java.lang.Class[] iParamTypes> = null;

        r0.<org.apache.commons.collections.functors.InstantiateFactory: java.lang.Object[] iArgs> = null;

        specialinvoke r0.<org.apache.commons.collections.functors.InstantiateFactory: void findConstructor()>();

        return;
    }

    public void <init>(java.lang.Class, java.lang.Class[], java.lang.Object[])
    {
        java.lang.Object[] r3;
        java.lang.Class[] r2;
        java.lang.Class r1;
        org.apache.commons.collections.functors.InstantiateFactory r0;

        r0 := @this: org.apache.commons.collections.functors.InstantiateFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class[];

        r3 := @parameter2: java.lang.Object[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.functors.InstantiateFactory: java.lang.reflect.Constructor iConstructor> = null;

        r0.<org.apache.commons.collections.functors.InstantiateFactory: java.lang.Class iClassToInstantiate> = r1;

        r0.<org.apache.commons.collections.functors.InstantiateFactory: java.lang.Class[] iParamTypes> = r2;

        r0.<org.apache.commons.collections.functors.InstantiateFactory: java.lang.Object[] iArgs> = r3;

        specialinvoke r0.<org.apache.commons.collections.functors.InstantiateFactory: void findConstructor()>();

        return;
    }

    private void findConstructor()
    {
        java.lang.NoSuchMethodException $r4;
        java.lang.Class[] $r1;
        java.lang.Class $r2;
        org.apache.commons.collections.functors.InstantiateFactory r0;
        java.lang.IllegalArgumentException $r5;
        java.lang.reflect.Constructor $r3;

        r0 := @this: org.apache.commons.collections.functors.InstantiateFactory;

     label1:
        $r2 = r0.<org.apache.commons.collections.functors.InstantiateFactory: java.lang.Class iClassToInstantiate>;

        $r1 = r0.<org.apache.commons.collections.functors.InstantiateFactory: java.lang.Class[] iParamTypes>;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r1);

        r0.<org.apache.commons.collections.functors.InstantiateFactory: java.lang.reflect.Constructor iConstructor> = $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("InstantiateFactory: The constructor must exist and be public ");

        throw $r5;

     label4:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    public java.lang.Object create()
    {
        java.lang.IllegalAccessException $r7;
        java.lang.Object[] $r2;
        java.lang.reflect.Constructor $r1, $r3;
        java.lang.reflect.InvocationTargetException $r5;
        org.apache.commons.collections.FunctorException $r6, $r8, $r10;
        java.lang.InstantiationException $r9;
        java.lang.Object $r4;
        org.apache.commons.collections.functors.InstantiateFactory r0;

        r0 := @this: org.apache.commons.collections.functors.InstantiateFactory;

        $r1 = r0.<org.apache.commons.collections.functors.InstantiateFactory: java.lang.reflect.Constructor iConstructor>;

        if $r1 != null goto label1;

        specialinvoke r0.<org.apache.commons.collections.functors.InstantiateFactory: void findConstructor()>();

     label1:
        $r3 = r0.<org.apache.commons.collections.functors.InstantiateFactory: java.lang.reflect.Constructor iConstructor>;

        $r2 = r0.<org.apache.commons.collections.functors.InstantiateFactory: java.lang.Object[] iArgs>;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r2);

     label2:
        return $r4;

     label3:
        $r9 := @caughtexception;

        $r10 = new org.apache.commons.collections.FunctorException;

        specialinvoke $r10.<org.apache.commons.collections.FunctorException: void <init>(java.lang.String,java.lang.Throwable)>("InstantiateFactory: InstantiationException", $r9);

        throw $r10;

     label4:
        $r7 := @caughtexception;

        $r8 = new org.apache.commons.collections.FunctorException;

        specialinvoke $r8.<org.apache.commons.collections.FunctorException: void <init>(java.lang.String,java.lang.Throwable)>("InstantiateFactory: Constructor must be public", $r7);

        throw $r8;

     label5:
        $r5 := @caughtexception;

        $r6 = new org.apache.commons.collections.FunctorException;

        specialinvoke $r6.<org.apache.commons.collections.FunctorException: void <init>(java.lang.String,java.lang.Throwable)>("InstantiateFactory: Constructor threw an exception", $r5);

        throw $r6;

        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections.functors.InstantiateFactory: long serialVersionUID> = -7732226881069447957L;

        return;
    }
}
