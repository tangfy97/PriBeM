class com.hp.hpl.jena.sparql.util.graph.FindableGraph extends java.lang.Object implements com.hp.hpl.jena.sparql.util.graph.Findable
{
    private com.hp.hpl.jena.graph.Graph graph;

    void <init>(com.hp.hpl.jena.graph.Graph)
    {
        com.hp.hpl.jena.sparql.util.graph.FindableGraph r0;
        com.hp.hpl.jena.graph.Graph r1;

        r0 := @this: com.hp.hpl.jena.sparql.util.graph.FindableGraph;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.util.graph.FindableGraph: com.hp.hpl.jena.graph.Graph graph> = r1;

        return;
    }

    public java.util.Iterator find(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r2;
        com.hp.hpl.jena.sparql.util.graph.FindableGraph r0;
        com.hp.hpl.jena.graph.Node r3, r4, r5;
        com.hp.hpl.jena.graph.Graph $r1;

        r0 := @this: com.hp.hpl.jena.sparql.util.graph.FindableGraph;

        r3 := @parameter0: com.hp.hpl.jena.graph.Node;

        r4 := @parameter1: com.hp.hpl.jena.graph.Node;

        r5 := @parameter2: com.hp.hpl.jena.graph.Node;

        if r3 != null goto label1;

        r3 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

     label1:
        if r4 != null goto label2;

        r4 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

     label2:
        if r5 != null goto label3;

        r5 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

     label3:
        $r1 = r0.<com.hp.hpl.jena.sparql.util.graph.FindableGraph: com.hp.hpl.jena.graph.Graph graph>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.util.iterator.ExtendedIterator find(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r3, r4, r5);

        return $r2;
    }

    public boolean contains(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.util.graph.FindableGraph r0;
        com.hp.hpl.jena.graph.Node r2, r3, r4;
        com.hp.hpl.jena.graph.Graph $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.util.graph.FindableGraph;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        r4 := @parameter2: com.hp.hpl.jena.graph.Node;

        if r2 != null goto label1;

        r2 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

     label1:
        if r3 != null goto label2;

        r3 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

     label2:
        if r4 != null goto label3;

        r4 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

     label3:
        $r1 = r0.<com.hp.hpl.jena.sparql.util.graph.FindableGraph: com.hp.hpl.jena.graph.Graph graph>;

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: boolean contains(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r2, r3, r4);

        return $z0;
    }
}
