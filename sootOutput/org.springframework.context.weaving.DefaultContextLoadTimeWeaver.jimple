public class org.springframework.context.weaving.DefaultContextLoadTimeWeaver extends java.lang.Object implements org.springframework.instrument.classloading.LoadTimeWeaver, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.DisposableBean
{
    protected final org.apache.commons.logging.Log logger;
    private org.springframework.instrument.classloading.LoadTimeWeaver loadTimeWeaver;

    public void <init>()
    {
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;
        org.springframework.context.weaving.DefaultContextLoadTimeWeaver r0;

        r0 := @this: org.springframework.context.weaving.DefaultContextLoadTimeWeaver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.springframework.context.weaving.DefaultContextLoadTimeWeaver: org.apache.commons.logging.Log logger> = $r2;

        return;
    }

    public void setBeanClassLoader(java.lang.ClassLoader)
    {
        java.lang.IllegalStateException $r21, $r22;
        org.springframework.context.weaving.DefaultContextLoadTimeWeaver r0;
        org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver $r13;
        java.lang.String $r9, $r11, $r18, $r20, $r24, $r25, $r28;
        org.springframework.instrument.classloading.LoadTimeWeaver $r2, $r6;
        boolean $z0, $z1;
        org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver $r3;
        java.lang.StringBuilder $r4, $r10, $r15, $r19, $r23, $r26, $r27;
        org.apache.commons.logging.Log $r5, $r12, $r14, $r16;
        java.lang.Class $r8, $r17;
        java.lang.ClassLoader r1, $r7;

        r0 := @this: org.springframework.context.weaving.DefaultContextLoadTimeWeaver;

        r1 := @parameter0: java.lang.ClassLoader;

        $r2 = virtualinvoke r0.<org.springframework.context.weaving.DefaultContextLoadTimeWeaver: org.springframework.instrument.classloading.LoadTimeWeaver createServerSpecificLoadTimeWeaver(java.lang.ClassLoader)>(r1);

        if $r2 == null goto label2;

        $r14 = r0.<org.springframework.context.weaving.DefaultContextLoadTimeWeaver: org.apache.commons.logging.Log logger>;

        $z1 = interfaceinvoke $r14.<org.apache.commons.logging.Log: boolean isInfoEnabled()>();

        if $z1 == 0 goto label1;

        $r16 = r0.<org.springframework.context.weaving.DefaultContextLoadTimeWeaver: org.apache.commons.logging.Log logger>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("Determined server-specific load-time weaver: ");

        $r17 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r20);

     label1:
        r0.<org.springframework.context.weaving.DefaultContextLoadTimeWeaver: org.springframework.instrument.classloading.LoadTimeWeaver loadTimeWeaver> = $r2;

        goto label6;

     label2:
        $z0 = staticinvoke <org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver: boolean isInstrumentationAvailable()>();

        if $z0 == 0 goto label3;

        $r12 = r0.<org.springframework.context.weaving.DefaultContextLoadTimeWeaver: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void info(java.lang.Object)>("Found Spring\'s JVM agent for instrumentation");

        $r13 = new org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver;

        specialinvoke $r13.<org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver: void <init>(java.lang.ClassLoader)>(r1);

        r0.<org.springframework.context.weaving.DefaultContextLoadTimeWeaver: org.springframework.instrument.classloading.LoadTimeWeaver loadTimeWeaver> = $r13;

        goto label6;

     label3:
        $r3 = new org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver;

        specialinvoke $r3.<org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver: void <init>(java.lang.ClassLoader)>(r1);

        r0.<org.springframework.context.weaving.DefaultContextLoadTimeWeaver: org.springframework.instrument.classloading.LoadTimeWeaver loadTimeWeaver> = $r3;

        $r5 = r0.<org.springframework.context.weaving.DefaultContextLoadTimeWeaver: org.apache.commons.logging.Log logger>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Using a reflective load-time weaver for class loader: ");

        $r6 = r0.<org.springframework.context.weaving.DefaultContextLoadTimeWeaver: org.springframework.instrument.classloading.LoadTimeWeaver loadTimeWeaver>;

        $r7 = interfaceinvoke $r6.<org.springframework.instrument.classloading.LoadTimeWeaver: java.lang.ClassLoader getInstrumentableClassLoader()>();

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r11);

     label4:
        goto label6;

     label5:
        $r21 := @caughtexception;

        $r22 = new java.lang.IllegalStateException;

        $r23 = new java.lang.StringBuilder;

        $r24 = virtualinvoke $r21.<java.lang.IllegalStateException: java.lang.String getMessage()>();

        $r25 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r24);

        specialinvoke $r23.<java.lang.StringBuilder: void <init>(java.lang.String)>($r25);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Specify a custom LoadTimeWeaver or start your ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Java virtual machine with Spring\'s agent: -javaagent:org.springframework.instrument.jar");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r28);

        throw $r22;

     label6:
        return;

        catch java.lang.IllegalStateException from label3 to label4 with label5;
    }

    protected org.springframework.instrument.classloading.LoadTimeWeaver createServerSpecificLoadTimeWeaver(java.lang.ClassLoader)
    {
        java.lang.IllegalStateException $r7;
        org.springframework.context.weaving.DefaultContextLoadTimeWeaver r8;
        org.springframework.instrument.classloading.glassfish.GlassFishLoadTimeWeaver $r3;
        org.springframework.instrument.classloading.jboss.JBossLoadTimeWeaver $r4;
        java.lang.String $r2, $r11, $r13;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.springframework.instrument.classloading.oc4j.OC4JLoadTimeWeaver $r5;
        java.lang.Class $r1;
        java.lang.StringBuilder $r9, $r12;
        org.apache.commons.logging.Log $r10;
        java.lang.ClassLoader r0;
        org.springframework.instrument.classloading.weblogic.WebLogicLoadTimeWeaver $r6;

        r8 := @this: org.springframework.context.weaving.DefaultContextLoadTimeWeaver;

        r0 := @parameter0: java.lang.ClassLoader;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

     label01:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("weblogic");

        if $z0 == 0 goto label03;

        $r6 = new org.springframework.instrument.classloading.weblogic.WebLogicLoadTimeWeaver;

        specialinvoke $r6.<org.springframework.instrument.classloading.weblogic.WebLogicLoadTimeWeaver: void <init>(java.lang.ClassLoader)>(r0);

     label02:
        return $r6;

     label03:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("oracle");

        if $z1 == 0 goto label05;

        $r5 = new org.springframework.instrument.classloading.oc4j.OC4JLoadTimeWeaver;

        specialinvoke $r5.<org.springframework.instrument.classloading.oc4j.OC4JLoadTimeWeaver: void <init>(java.lang.ClassLoader)>(r0);

     label04:
        return $r5;

     label05:
        $z2 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("com.sun.enterprise");

        if $z2 != 0 goto label06;

        $z3 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("org.glassfish");

        if $z3 == 0 goto label08;

     label06:
        $r3 = new org.springframework.instrument.classloading.glassfish.GlassFishLoadTimeWeaver;

        specialinvoke $r3.<org.springframework.instrument.classloading.glassfish.GlassFishLoadTimeWeaver: void <init>(java.lang.ClassLoader)>(r0);

     label07:
        return $r3;

     label08:
        $z4 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("org.jboss");

        if $z4 == 0 goto label11;

        $r4 = new org.springframework.instrument.classloading.jboss.JBossLoadTimeWeaver;

        specialinvoke $r4.<org.springframework.instrument.classloading.jboss.JBossLoadTimeWeaver: void <init>(java.lang.ClassLoader)>(r0);

     label09:
        return $r4;

     label10:
        $r7 := @caughtexception;

        $r10 = r8.<org.springframework.context.weaving.DefaultContextLoadTimeWeaver: org.apache.commons.logging.Log logger>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not obtain server-specific LoadTimeWeaver: ");

        $r11 = virtualinvoke $r7.<java.lang.IllegalStateException: java.lang.String getMessage()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r13);

     label11:
        return null;

        catch java.lang.IllegalStateException from label01 to label02 with label10;
        catch java.lang.IllegalStateException from label03 to label04 with label10;
        catch java.lang.IllegalStateException from label05 to label07 with label10;
        catch java.lang.IllegalStateException from label08 to label09 with label10;
    }

    public void destroy()
    {
        org.springframework.context.weaving.DefaultContextLoadTimeWeaver r0;
        org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver $r11;
        java.lang.StringBuilder $r2, $r8;
        org.apache.commons.logging.Log $r3;
        java.lang.Class $r6;
        java.lang.ClassLoader $r5;
        java.lang.String $r7, $r9;
        org.springframework.instrument.classloading.LoadTimeWeaver $r1, $r4, $r10;
        boolean $z0;

        r0 := @this: org.springframework.context.weaving.DefaultContextLoadTimeWeaver;

        $r1 = r0.<org.springframework.context.weaving.DefaultContextLoadTimeWeaver: org.springframework.instrument.classloading.LoadTimeWeaver loadTimeWeaver>;

        $z0 = $r1 instanceof org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.springframework.context.weaving.DefaultContextLoadTimeWeaver: org.apache.commons.logging.Log logger>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Removing all registered transformers for class loader: ");

        $r4 = r0.<org.springframework.context.weaving.DefaultContextLoadTimeWeaver: org.springframework.instrument.classloading.LoadTimeWeaver loadTimeWeaver>;

        $r5 = interfaceinvoke $r4.<org.springframework.instrument.classloading.LoadTimeWeaver: java.lang.ClassLoader getInstrumentableClassLoader()>();

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r9);

        $r10 = r0.<org.springframework.context.weaving.DefaultContextLoadTimeWeaver: org.springframework.instrument.classloading.LoadTimeWeaver loadTimeWeaver>;

        $r11 = (org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver) $r10;

        virtualinvoke $r11.<org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver: void removeTransformers()>();

     label1:
        return;
    }

    public void addTransformer(java.lang.instrument.ClassFileTransformer)
    {
        java.lang.instrument.ClassFileTransformer r1;
        org.springframework.context.weaving.DefaultContextLoadTimeWeaver r0;
        org.springframework.instrument.classloading.LoadTimeWeaver $r2;

        r0 := @this: org.springframework.context.weaving.DefaultContextLoadTimeWeaver;

        r1 := @parameter0: java.lang.instrument.ClassFileTransformer;

        $r2 = r0.<org.springframework.context.weaving.DefaultContextLoadTimeWeaver: org.springframework.instrument.classloading.LoadTimeWeaver loadTimeWeaver>;

        interfaceinvoke $r2.<org.springframework.instrument.classloading.LoadTimeWeaver: void addTransformer(java.lang.instrument.ClassFileTransformer)>(r1);

        return;
    }

    public java.lang.ClassLoader getInstrumentableClassLoader()
    {
        org.springframework.context.weaving.DefaultContextLoadTimeWeaver r0;
        java.lang.ClassLoader $r2;
        org.springframework.instrument.classloading.LoadTimeWeaver $r1;

        r0 := @this: org.springframework.context.weaving.DefaultContextLoadTimeWeaver;

        $r1 = r0.<org.springframework.context.weaving.DefaultContextLoadTimeWeaver: org.springframework.instrument.classloading.LoadTimeWeaver loadTimeWeaver>;

        $r2 = interfaceinvoke $r1.<org.springframework.instrument.classloading.LoadTimeWeaver: java.lang.ClassLoader getInstrumentableClassLoader()>();

        return $r2;
    }

    public java.lang.ClassLoader getThrowawayClassLoader()
    {
        org.springframework.context.weaving.DefaultContextLoadTimeWeaver r0;
        java.lang.ClassLoader $r2;
        org.springframework.instrument.classloading.LoadTimeWeaver $r1;

        r0 := @this: org.springframework.context.weaving.DefaultContextLoadTimeWeaver;

        $r1 = r0.<org.springframework.context.weaving.DefaultContextLoadTimeWeaver: org.springframework.instrument.classloading.LoadTimeWeaver loadTimeWeaver>;

        $r2 = interfaceinvoke $r1.<org.springframework.instrument.classloading.LoadTimeWeaver: java.lang.ClassLoader getThrowawayClassLoader()>();

        return $r2;
    }
}
