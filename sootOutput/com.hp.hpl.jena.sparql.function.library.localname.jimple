public class com.hp.hpl.jena.sparql.function.library.localname extends com.hp.hpl.jena.sparql.function.FunctionBase1
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.function.library.localname r0;

        r0 := @this: com.hp.hpl.jena.sparql.function.library.localname;

        specialinvoke r0.<com.hp.hpl.jena.sparql.function.FunctionBase1: void <init>()>();

        return;
    }

    public com.hp.hpl.jena.sparql.expr.NodeValue exec(com.hp.hpl.jena.sparql.expr.NodeValue)
    {
        com.hp.hpl.jena.sparql.expr.NodeValue r0, $r3;
        com.hp.hpl.jena.graph.Node $r1;
        com.hp.hpl.jena.sparql.expr.ExprEvalException $r4;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r2, $r7, $r9;
        com.hp.hpl.jena.sparql.function.library.localname r10;
        boolean $z0;

        r10 := @this: com.hp.hpl.jena.sparql.function.library.localname;

        r0 := @parameter0: com.hp.hpl.jena.sparql.expr.NodeValue;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.NodeValue: com.hp.hpl.jena.graph.Node asNode()>();

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.graph.Node: boolean isURI()>();

        if $z0 != 0 goto label1;

        $r4 = new com.hp.hpl.jena.sparql.expr.ExprEvalException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a URI: ");

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.util.FmtUtils: java.lang.String stringForNode(com.hp.hpl.jena.graph.Node)>($r1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<com.hp.hpl.jena.sparql.expr.ExprEvalException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.graph.Node: java.lang.String getLocalName()>();

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.expr.NodeValue: com.hp.hpl.jena.sparql.expr.NodeValue makeString(java.lang.String)>($r2);

        return $r3;
    }
}
