public class com.hp.hpl.jena.sparql.engine.http.Params extends java.lang.Object
{
    private java.util.List paramList;
    private java.util.Map params;

    public void <init>()
    {
        java.util.HashMap $r2;
        com.hp.hpl.jena.sparql.engine.http.Params r0;
        java.util.ArrayList $r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.Params;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.engine.http.Params: java.util.List paramList> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.engine.http.Params: java.util.Map params> = $r2;

        return;
    }

    public void <init>(com.hp.hpl.jena.sparql.engine.http.Params)
    {
        java.util.HashMap $r2;
        com.hp.hpl.jena.sparql.engine.http.Params r0, r3;
        java.util.ArrayList $r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.Params;

        r3 := @parameter0: com.hp.hpl.jena.sparql.engine.http.Params;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.engine.http.Params: java.util.List paramList> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.engine.http.Params: java.util.Map params> = $r2;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.http.Params: void merge(com.hp.hpl.jena.sparql.engine.http.Params)>(r3);

        return;
    }

    public void merge(com.hp.hpl.jena.sparql.engine.http.Params)
    {
        java.util.List $r4, $r5;
        java.util.Map $r2, $r3;
        com.hp.hpl.jena.sparql.engine.http.Params r0, r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.Params;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.http.Params;

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.http.Params: java.util.Map params>;

        $r2 = r1.<com.hp.hpl.jena.sparql.engine.http.Params: java.util.Map params>;

        interfaceinvoke $r3.<java.util.Map: void putAll(java.util.Map)>($r2);

        $r5 = r0.<com.hp.hpl.jena.sparql.engine.http.Params: java.util.List paramList>;

        $r4 = r1.<com.hp.hpl.jena.sparql.engine.http.Params: java.util.List paramList>;

        interfaceinvoke $r5.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        return;
    }

    public void addParam(java.lang.String, java.lang.String)
    {
        java.util.ArrayList $r7;
        com.hp.hpl.jena.sparql.engine.http.Params$Pair $r0;
        java.util.List $r4, r9;
        java.util.Map $r5, $r8;
        java.lang.Object $r6;
        java.lang.String r1, r2;
        com.hp.hpl.jena.sparql.engine.http.Params r3;

        r3 := @this: com.hp.hpl.jena.sparql.engine.http.Params;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r0 = new com.hp.hpl.jena.sparql.engine.http.Params$Pair;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.engine.http.Params$Pair: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        $r4 = r3.<com.hp.hpl.jena.sparql.engine.http.Params: java.util.List paramList>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r0);

        $r5 = r3.<com.hp.hpl.jena.sparql.engine.http.Params: java.util.Map params>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r9 = (java.util.List) $r6;

        if r9 != null goto label1;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r9 = $r7;

        $r8 = r3.<com.hp.hpl.jena.sparql.engine.http.Params: java.util.Map params>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

     label1:
        interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void addParam(java.lang.String)
    {
        com.hp.hpl.jena.sparql.engine.http.Params r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.Params;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.http.Params: void addParam(java.lang.String,java.lang.String)>(r1, null);

        return;
    }

    public boolean containsParam(java.lang.String)
    {
        java.util.Map $r2;
        com.hp.hpl.jena.sparql.engine.http.Params r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.Params;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.sparql.engine.http.Params: java.util.Map params>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.String getValue(java.lang.String)
    {
        com.hp.hpl.jena.sparql.engine.http.Params$MultiValueException $r5;
        java.util.List $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        com.hp.hpl.jena.sparql.engine.http.Params r0;
        java.lang.String r1, $r4, $r10;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.Params;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.http.Params: java.util.List getMV(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 == 1 goto label2;

        $r5 = new com.hp.hpl.jena.sparql.engine.http.Params$MultiValueException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multiple value (");

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when exactly one requested");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.hp.hpl.jena.sparql.engine.http.Params$MultiValueException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public java.util.List getValues(java.lang.String)
    {
        java.util.List $r2;
        com.hp.hpl.jena.sparql.engine.http.Params r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.Params;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.http.Params: java.util.List getMV(java.lang.String)>(r1);

        return $r2;
    }

    public void remove(java.lang.String)
    {
        java.util.Iterator $r2;
        java.util.List $r1;
        com.hp.hpl.jena.sparql.engine.http.Params$Pair r6;
        java.util.Map $r4;
        java.lang.Object $r5;
        com.hp.hpl.jena.sparql.engine.http.Params r0;
        java.lang.String r3, $r7;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.Params;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.http.Params: java.util.List paramList>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.hp.hpl.jena.sparql.engine.http.Params$Pair) $r5;

        $r7 = virtualinvoke r6.<com.hp.hpl.jena.sparql.engine.http.Params$Pair: java.lang.String getName()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label2;

        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

     label2:
        goto label1;

     label3:
        $r4 = r0.<com.hp.hpl.jena.sparql.engine.http.Params: java.util.Map params>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r3);

        return;
    }

    public java.util.List pairs()
    {
        java.util.List $r1;
        com.hp.hpl.jena.sparql.engine.http.Params r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.Params;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.http.Params: java.util.List paramList>;

        return $r1;
    }

    public int count()
    {
        int $i0;
        java.util.List $r1;
        com.hp.hpl.jena.sparql.engine.http.Params r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.Params;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.http.Params: java.util.List paramList>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public java.util.List names()
    {
        java.util.Iterator $r3;
        java.util.ArrayList $r0;
        java.util.List $r2;
        com.hp.hpl.jena.sparql.engine.http.Params$Pair r5;
        java.lang.Object $r4;
        com.hp.hpl.jena.sparql.engine.http.Params r1;
        java.lang.String $r6;
        boolean $z0, $z1;

        r1 := @this: com.hp.hpl.jena.sparql.engine.http.Params;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<com.hp.hpl.jena.sparql.engine.http.Params: java.util.List paramList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.hp.hpl.jena.sparql.engine.http.Params$Pair) $r4;

        $r6 = virtualinvoke r5.<com.hp.hpl.jena.sparql.engine.http.Params$Pair: java.lang.String getName()>();

        $z0 = interfaceinvoke $r0.<java.util.List: boolean contains(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        goto label1;

     label2:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label3:
        return $r0;
    }

    public java.lang.String httpString()
    {
        java.util.Iterator $r3;
        java.util.List $r2;
        com.hp.hpl.jena.sparql.engine.http.Params$Pair r6;
        java.lang.StringBuffer $r0;
        java.lang.Object $r5;
        com.hp.hpl.jena.sparql.engine.http.Params r1;
        java.lang.String $r4, $r7, $r8, $r9;
        boolean $z0, z1;

        r1 := @this: com.hp.hpl.jena.sparql.engine.http.Params;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        z1 = 1;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.engine.http.Params: java.util.List pairs()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.hp.hpl.jena.sparql.engine.http.Params$Pair) $r5;

        if z1 != 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(38);

     label2:
        $r7 = virtualinvoke r6.<com.hp.hpl.jena.sparql.engine.http.Params$Pair: java.lang.String getName()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(61);

        $r8 = virtualinvoke r6.<com.hp.hpl.jena.sparql.engine.http.Params$Pair: java.lang.String getValue()>();

        $r9 = staticinvoke <com.hp.hpl.jena.sparql.util.Convert: java.lang.String encWWWForm(java.lang.String)>($r8);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        z1 = 0;

        goto label1;

     label3:
        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    private java.util.List getMV(java.lang.String)
    {
        java.util.List $r4;
        java.util.Map $r2;
        java.lang.Object $r3;
        com.hp.hpl.jena.sparql.engine.http.Params r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.Params;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.sparql.engine.http.Params: java.util.Map params>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.List) $r3;

        return $r4;
    }
}
