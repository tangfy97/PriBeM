class groovy.swing.LookAndFeelHelper$_closure1 extends groovy.lang.Closure implements org.codehaus.groovy.runtime.GeneratedClosure
{
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$java$lang$Class;
    static java.lang.Class class$groovy$swing$LookAndFeelHelper;
    static java.lang.Class class$javax$swing$plaf$metal$MetalLookAndFeel;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$javax$swing$plaf$metal$DefaultMetalTheme;

    public void <init>(java.lang.Object, java.lang.Object)
    {
        java.lang.Class $r0, $r1, $r5, $r6;
        java.lang.Object r3, r4;
        groovy.swing.LookAndFeelHelper$_closure1 r2;

        r2 := @this: groovy.swing.LookAndFeelHelper$_closure1;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r0 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r5 = staticinvoke <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper$_closure1");

        <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$0> = $r5;

        goto label2;

     label1:
        $r5 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r6 = staticinvoke <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r6;

        goto label4;

     label3:
        $r6 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        specialinvoke r2.<groovy.lang.Closure: void <init>(java.lang.Object,java.lang.Object)>(r3, r4);

        return;
    }

    public java.lang.Object doCall(java.lang.Object, java.lang.Object)
    {
        boolean $z0, $z1, $z2, $z3;
        groovy.swing.LookAndFeelHelper$_closure1 r21;
        java.lang.Object[] $r30, $r42;
        org.codehaus.groovy.runtime.wrappers.Wrapper $r52;
        java.lang.String $r48;
        groovy.lang.Reference $r1;
        java.lang.Object r0, $r4, $r8, $r9, r22, $r31, $r32, $r36, $r43, $r47, $r53, $r54, $r55;
        java.lang.Class $r2, $r3, $r5, $r6, $r7, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r33, $r34, $r35, $r37, $r38, $r39, $r40, $r41, $r44, $r45, $r46, $r49, $r50, $r51, $r56, $r57, $r58;

        r21 := @this: groovy.swing.LookAndFeelHelper$_closure1;

        r22 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Object;

        $r1 = new groovy.lang.Reference;

        specialinvoke $r1.<groovy.lang.Reference: void <init>(java.lang.Object)>(r0);

        $r2 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$0>;

        if $r2 != null goto label01;

        $r23 = staticinvoke <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper$_closure1");

        <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$0> = $r23;

        goto label02;

     label01:
        $r23 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$0>;

     label02:
        $r3 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r3 != null goto label03;

        $r24 = staticinvoke <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r24;

        goto label04;

     label03:
        $r24 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r4 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $z0 = $r4 instanceof javax.swing.plaf.metal.MetalTheme;

        if $z0 != 0 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        if $z3 == 0 goto label30;

        $r8 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $z1 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r8, "ocean");

        if $z1 == 0 goto label13;

        $r17 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$swing$LookAndFeelHelper>;

        if $r17 != null goto label07;

        $r20 = staticinvoke <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper");

        $r25 = $r20;

        <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$swing$LookAndFeelHelper> = $r20;

        goto label08;

     label07:
        $r25 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$swing$LookAndFeelHelper>;

     label08:
        $r18 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$swing$LookAndFeelHelper>;

        if $r18 != null goto label09;

        $r19 = staticinvoke <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper");

        $r26 = $r19;

        <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$swing$LookAndFeelHelper> = $r19;

        goto label10;

     label09:
        $r26 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$swing$LookAndFeelHelper>;

     label10:
        $r27 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$java$lang$Class>;

        if $r27 != null goto label11;

        $r28 = staticinvoke <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        $r29 = $r28;

        <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$java$lang$Class> = $r28;

        goto label12;

     label11:
        $r29 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$java$lang$Class>;

     label12:
        $r30 = newarray (java.lang.Object)[1];

        $r30[0] = "javax.swing.plaf.metal.OceanTheme";

        $r31 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r26, $r29, "forName", $r30);

        $r32 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>($r25, $r31, "newInstance");

        virtualinvoke $r1.<groovy.lang.Reference: void set(java.lang.Object)>($r32);

        goto label29;

     label13:
        $r9 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $z2 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r9, "steel");

        if $z2 == 0 goto label18;

        $r14 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$swing$LookAndFeelHelper>;

        if $r14 != null goto label14;

        $r16 = staticinvoke <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper");

        $r33 = $r16;

        <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$swing$LookAndFeelHelper> = $r16;

        goto label15;

     label14:
        $r33 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$swing$LookAndFeelHelper>;

     label15:
        $r15 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$javax$swing$plaf$metal$DefaultMetalTheme>;

        if $r15 != null goto label16;

        $r34 = staticinvoke <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$(java.lang.String)>("javax.swing.plaf.metal.DefaultMetalTheme");

        $r35 = $r34;

        <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$javax$swing$plaf$metal$DefaultMetalTheme> = $r34;

        goto label17;

     label16:
        $r35 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$javax$swing$plaf$metal$DefaultMetalTheme>;

     label17:
        $r36 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>($r33, $r35);

        virtualinvoke $r1.<groovy.lang.Reference: void set(java.lang.Object)>($r36);

        goto label29;

     label18:
        $r10 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$swing$LookAndFeelHelper>;

        if $r10 != null goto label19;

        $r13 = staticinvoke <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper");

        $r37 = $r13;

        <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$swing$LookAndFeelHelper> = $r13;

        goto label20;

     label19:
        $r37 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$swing$LookAndFeelHelper>;

     label20:
        $r11 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$swing$LookAndFeelHelper>;

        if $r11 != null goto label21;

        $r12 = staticinvoke <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper");

        $r38 = $r12;

        <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$swing$LookAndFeelHelper> = $r12;

        goto label22;

     label21:
        $r38 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$swing$LookAndFeelHelper>;

     label22:
        $r39 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$java$lang$Class>;

        if $r39 != null goto label23;

        $r40 = staticinvoke <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        $r41 = $r40;

        <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$java$lang$Class> = $r40;

        goto label24;

     label23:
        $r41 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$java$lang$Class>;

     label24:
        $r42 = newarray (java.lang.Object)[1];

        $r43 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r44 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$java$lang$String>;

        if $r44 != null goto label25;

        $r45 = staticinvoke <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$(java.lang.String)>("java.lang.String");

        $r46 = $r45;

        <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$java$lang$String> = $r45;

        goto label26;

     label25:
        $r46 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$java$lang$String>;

     label26:
        $r47 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object asType(java.lang.Object,java.lang.Class)>($r43, $r46);

        $r48 = (java.lang.String) $r47;

        $r49 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$java$lang$String>;

        if $r49 != null goto label27;

        $r50 = staticinvoke <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$(java.lang.String)>("java.lang.String");

        $r51 = $r50;

        <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$java$lang$String> = $r50;

        goto label28;

     label27:
        $r51 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$java$lang$String>;

     label28:
        $r52 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: org.codehaus.groovy.runtime.wrappers.Wrapper createPojoWrapper(java.lang.Object,java.lang.Class)>($r48, $r51);

        $r42[0] = $r52;

        $r53 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r38, $r41, "forName", $r42);

        $r54 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>($r37, $r53, "newInstance");

        virtualinvoke $r1.<groovy.lang.Reference: void set(java.lang.Object)>($r54);

     label29:
        goto label30;

     label30:
        $r55 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r5 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$swing$LookAndFeelHelper>;

        if $r5 != null goto label31;

        $r7 = staticinvoke <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper");

        $r56 = $r7;

        <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$swing$LookAndFeelHelper> = $r7;

        goto label32;

     label31:
        $r56 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$swing$LookAndFeelHelper>;

     label32:
        $r6 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$javax$swing$plaf$metal$MetalLookAndFeel>;

        if $r6 != null goto label33;

        $r57 = staticinvoke <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$(java.lang.String)>("javax.swing.plaf.metal.MetalLookAndFeel");

        $r58 = $r57;

        <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$javax$swing$plaf$metal$MetalLookAndFeel> = $r57;

        goto label34;

     label33:
        $r58 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$javax$swing$plaf$metal$MetalLookAndFeel>;

     label34:
        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>($r55, $r56, $r58, "currentTheme");

        return $r55;
    }

    public java.lang.Object call(java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r6;
        groovy.swing.LookAndFeelHelper$_closure1 r5;
        groovy.lang.Reference $r1;
        java.lang.Object r0, r7, $r8, $r9;
        java.lang.Class $r2, r3, $r4, $r10, $r11;

        r5 := @this: groovy.swing.LookAndFeelHelper$_closure1;

        r7 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Object;

        $r1 = new groovy.lang.Reference;

        specialinvoke $r1.<groovy.lang.Reference: void <init>(java.lang.Object)>(r0);

        $r2 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$0>;

        if $r2 != null goto label1;

        $r10 = staticinvoke <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$(java.lang.String)>("groovy.swing.LookAndFeelHelper$_closure1");

        <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$0> = $r10;

        goto label2;

     label1:
        $r10 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$0>;

     label2:
        r3 = $r10;

        $r4 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r4 != null goto label3;

        $r11 = staticinvoke <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r11;

        goto label4;

     label3:
        $r11 = <groovy.swing.LookAndFeelHelper$_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = r7;

        $r8 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r6[1] = $r8;

        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r3, r5, "doCall", $r6);

        return $r9;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
