public class org.bouncycastle.crypto.util.PublicKeyFactory extends java.lang.Object
{

    public void <init>()
    {
        org.bouncycastle.crypto.util.PublicKeyFactory r0;

        r0 := @this: org.bouncycastle.crypto.util.PublicKeyFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(byte[]) throws java.io.IOException
    {
        byte[] r0;
        org.bouncycastle.asn1.x509.SubjectPublicKeyInfo $r2;
        org.bouncycastle.crypto.params.AsymmetricKeyParameter $r3;
        org.bouncycastle.asn1.ASN1Object $r1;

        r0 := @parameter0: byte[];

        $r1 = staticinvoke <org.bouncycastle.asn1.ASN1Object: org.bouncycastle.asn1.ASN1Object fromByteArray(byte[])>(r0);

        $r2 = staticinvoke <org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object)>($r1);

        $r3 = staticinvoke <org.bouncycastle.crypto.util.PublicKeyFactory: org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>($r2);

        return $r3;
    }

    public static org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(java.io.InputStream) throws java.io.IOException
    {
        org.bouncycastle.asn1.x509.SubjectPublicKeyInfo $r3;
        org.bouncycastle.asn1.DERObject $r2;
        org.bouncycastle.crypto.params.AsymmetricKeyParameter $r4;
        org.bouncycastle.asn1.ASN1InputStream $r0;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        $r0 = new org.bouncycastle.asn1.ASN1InputStream;

        specialinvoke $r0.<org.bouncycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream)>(r1);

        $r2 = virtualinvoke $r0.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        $r3 = staticinvoke <org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object)>($r2);

        $r4 = staticinvoke <org.bouncycastle.crypto.util.PublicKeyFactory: org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>($r3);

        return $r4;
    }

    public static org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) throws java.io.IOException
    {
        byte[] $r59, $r61, $r92;
        org.bouncycastle.asn1.ASN1Sequence $r6, $r17, $r53, $r75;
        java.math.BigInteger $r8, $r9, $r19, $r21, $r22, $r24, $r35, $r39, $r40, $r41, $r57, $r58, $r78, $r80, $r81, $r90, $r91;
        org.bouncycastle.crypto.params.DHPublicKeyParameters $r23;
        org.bouncycastle.crypto.params.DSAPublicKeyParameters $r34;
        org.bouncycastle.asn1.x9.X9ECParameters $r51, $r68, $r69, $r70, r86;
        org.bouncycastle.crypto.params.ElGamalPublicKeyParameters $r77;
        org.bouncycastle.asn1.DERObject $r5, $r18, $r31, $r36, $r50, $r52, $r67, $r76;
        org.bouncycastle.crypto.params.ECPublicKeyParameters $r65;
        org.bouncycastle.math.ec.ECPoint $r56, $r66, $r89;
        org.bouncycastle.crypto.params.DSAParameters $r38, r84;
        java.lang.RuntimeException $r46;
        org.bouncycastle.crypto.params.ElGamalParameters $r79;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r1, $r15, $r32, $r48, $r73;
        org.bouncycastle.asn1.x509.SubjectPublicKeyInfo r0;
        org.bouncycastle.asn1.pkcs.DHParameter $r14;
        org.bouncycastle.asn1.DERBitString $r60;
        org.bouncycastle.asn1.DERObjectIdentifier $r2, $r3, $r10, $r11, $r12, $r13, $r25, $r26, $r27, $r28, $r29, $r30, $r42, $r43, $r44, $r45, r85;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.bouncycastle.asn1.x9.X962Parameters $r47;
        org.bouncycastle.crypto.params.DHParameters $r20;
        org.bouncycastle.asn1.DEREncodable $r16, $r33, $r49, $r74;
        org.bouncycastle.asn1.DEROctetString $r62;
        org.bouncycastle.asn1.oiw.ElGamalParameter $r72;
        org.bouncycastle.crypto.params.RSAKeyParameters $r7;
        org.bouncycastle.crypto.params.ECDomainParameters $r54, $r87, r93;
        int $i0;
        org.bouncycastle.math.ec.ECCurve $r55, $r64, $r88;
        org.bouncycastle.asn1.DERInteger $r71, $r82, r83;
        org.bouncycastle.asn1.x9.X9ECPoint $r63;
        org.bouncycastle.asn1.x509.DSAParameter $r37;
        org.bouncycastle.asn1.x509.RSAPublicKeyStructure $r4;

        r0 := @parameter0: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo;

        $r1 = virtualinvoke r0.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        $r3 = <org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier rsaEncryption>;

        $z0 = virtualinvoke $r2.<org.bouncycastle.asn1.DERObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label01;

        $r10 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        $r11 = <org.bouncycastle.asn1.x509.X509ObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier id_ea_rsa>;

        $z1 = virtualinvoke $r10.<org.bouncycastle.asn1.DERObjectIdentifier: boolean equals(java.lang.Object)>($r11);

        if $z1 == 0 goto label02;

     label01:
        $r4 = new org.bouncycastle.asn1.x509.RSAPublicKeyStructure;

        $r5 = virtualinvoke r0.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: org.bouncycastle.asn1.DERObject getPublicKey()>();

        $r6 = (org.bouncycastle.asn1.ASN1Sequence) $r5;

        specialinvoke $r4.<org.bouncycastle.asn1.x509.RSAPublicKeyStructure: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r6);

        $r7 = new org.bouncycastle.crypto.params.RSAKeyParameters;

        $r8 = virtualinvoke $r4.<org.bouncycastle.asn1.x509.RSAPublicKeyStructure: java.math.BigInteger getModulus()>();

        $r9 = virtualinvoke $r4.<org.bouncycastle.asn1.x509.RSAPublicKeyStructure: java.math.BigInteger getPublicExponent()>();

        specialinvoke $r7.<org.bouncycastle.crypto.params.RSAKeyParameters: void <init>(boolean,java.math.BigInteger,java.math.BigInteger)>(0, $r8, $r9);

        return $r7;

     label02:
        $r12 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        $r13 = <org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier dhKeyAgreement>;

        $z2 = virtualinvoke $r12.<org.bouncycastle.asn1.DERObjectIdentifier: boolean equals(java.lang.Object)>($r13);

        if $z2 != 0 goto label03;

        $r25 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        $r26 = <org.bouncycastle.asn1.x9.X9ObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier dhpublicnumber>;

        $z3 = virtualinvoke $r25.<org.bouncycastle.asn1.DERObjectIdentifier: boolean equals(java.lang.Object)>($r26);

        if $z3 == 0 goto label06;

     label03:
        $r14 = new org.bouncycastle.asn1.pkcs.DHParameter;

        $r15 = virtualinvoke r0.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

        $r16 = virtualinvoke $r15.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DEREncodable getParameters()>();

        $r17 = (org.bouncycastle.asn1.ASN1Sequence) $r16;

        specialinvoke $r14.<org.bouncycastle.asn1.pkcs.DHParameter: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r17);

        $r18 = virtualinvoke r0.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: org.bouncycastle.asn1.DERObject getPublicKey()>();

        $r82 = (org.bouncycastle.asn1.DERInteger) $r18;

        $r19 = virtualinvoke $r14.<org.bouncycastle.asn1.pkcs.DHParameter: java.math.BigInteger getL()>();

        if $r19 != null goto label04;

        $i0 = 0;

        goto label05;

     label04:
        $i0 = virtualinvoke $r19.<java.math.BigInteger: int intValue()>();

     label05:
        $r20 = new org.bouncycastle.crypto.params.DHParameters;

        $r21 = virtualinvoke $r14.<org.bouncycastle.asn1.pkcs.DHParameter: java.math.BigInteger getP()>();

        $r22 = virtualinvoke $r14.<org.bouncycastle.asn1.pkcs.DHParameter: java.math.BigInteger getG()>();

        specialinvoke $r20.<org.bouncycastle.crypto.params.DHParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int)>($r21, $r22, null, $i0);

        $r23 = new org.bouncycastle.crypto.params.DHPublicKeyParameters;

        $r24 = virtualinvoke $r82.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        specialinvoke $r23.<org.bouncycastle.crypto.params.DHPublicKeyParameters: void <init>(java.math.BigInteger,org.bouncycastle.crypto.params.DHParameters)>($r24, $r20);

        return $r23;

     label06:
        $r27 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        $r28 = <org.bouncycastle.asn1.oiw.OIWObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier elGamalAlgorithm>;

        $z4 = virtualinvoke $r27.<org.bouncycastle.asn1.DERObjectIdentifier: boolean equals(java.lang.Object)>($r28);

        if $z4 == 0 goto label07;

        $r72 = new org.bouncycastle.asn1.oiw.ElGamalParameter;

        $r73 = virtualinvoke r0.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

        $r74 = virtualinvoke $r73.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DEREncodable getParameters()>();

        $r75 = (org.bouncycastle.asn1.ASN1Sequence) $r74;

        specialinvoke $r72.<org.bouncycastle.asn1.oiw.ElGamalParameter: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r75);

        $r76 = virtualinvoke r0.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: org.bouncycastle.asn1.DERObject getPublicKey()>();

        r83 = (org.bouncycastle.asn1.DERInteger) $r76;

        $r77 = new org.bouncycastle.crypto.params.ElGamalPublicKeyParameters;

        $r78 = virtualinvoke r83.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $r79 = new org.bouncycastle.crypto.params.ElGamalParameters;

        $r80 = virtualinvoke $r72.<org.bouncycastle.asn1.oiw.ElGamalParameter: java.math.BigInteger getP()>();

        $r81 = virtualinvoke $r72.<org.bouncycastle.asn1.oiw.ElGamalParameter: java.math.BigInteger getG()>();

        specialinvoke $r79.<org.bouncycastle.crypto.params.ElGamalParameters: void <init>(java.math.BigInteger,java.math.BigInteger)>($r80, $r81);

        specialinvoke $r77.<org.bouncycastle.crypto.params.ElGamalPublicKeyParameters: void <init>(java.math.BigInteger,org.bouncycastle.crypto.params.ElGamalParameters)>($r78, $r79);

        return $r77;

     label07:
        $r29 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        $r30 = <org.bouncycastle.asn1.x9.X9ObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier id_dsa>;

        $z5 = virtualinvoke $r29.<org.bouncycastle.asn1.DERObjectIdentifier: boolean equals(java.lang.Object)>($r30);

        if $z5 != 0 goto label08;

        $r42 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        $r43 = <org.bouncycastle.asn1.oiw.OIWObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier dsaWithSHA1>;

        $z6 = virtualinvoke $r42.<org.bouncycastle.asn1.DERObjectIdentifier: boolean equals(java.lang.Object)>($r43);

        if $z6 == 0 goto label10;

     label08:
        $r31 = virtualinvoke r0.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: org.bouncycastle.asn1.DERObject getPublicKey()>();

        $r71 = (org.bouncycastle.asn1.DERInteger) $r31;

        $r32 = virtualinvoke r0.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

        $r33 = virtualinvoke $r32.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DEREncodable getParameters()>();

        r84 = null;

        if $r33 == null goto label09;

        $r36 = interfaceinvoke $r33.<org.bouncycastle.asn1.DEREncodable: org.bouncycastle.asn1.DERObject getDERObject()>();

        $r37 = staticinvoke <org.bouncycastle.asn1.x509.DSAParameter: org.bouncycastle.asn1.x509.DSAParameter getInstance(java.lang.Object)>($r36);

        $r38 = new org.bouncycastle.crypto.params.DSAParameters;

        $r39 = virtualinvoke $r37.<org.bouncycastle.asn1.x509.DSAParameter: java.math.BigInteger getP()>();

        $r40 = virtualinvoke $r37.<org.bouncycastle.asn1.x509.DSAParameter: java.math.BigInteger getQ()>();

        $r41 = virtualinvoke $r37.<org.bouncycastle.asn1.x509.DSAParameter: java.math.BigInteger getG()>();

        specialinvoke $r38.<org.bouncycastle.crypto.params.DSAParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r39, $r40, $r41);

        r84 = $r38;

     label09:
        $r34 = new org.bouncycastle.crypto.params.DSAPublicKeyParameters;

        $r35 = virtualinvoke $r71.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        specialinvoke $r34.<org.bouncycastle.crypto.params.DSAPublicKeyParameters: void <init>(java.math.BigInteger,org.bouncycastle.crypto.params.DSAParameters)>($r35, r84);

        return $r34;

     label10:
        $r44 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        $r45 = <org.bouncycastle.asn1.x9.X9ObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier id_ecPublicKey>;

        $z7 = virtualinvoke $r44.<org.bouncycastle.asn1.DERObjectIdentifier: boolean equals(java.lang.Object)>($r45);

        if $z7 == 0 goto label14;

        $r47 = new org.bouncycastle.asn1.x9.X962Parameters;

        $r48 = virtualinvoke r0.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

        $r49 = virtualinvoke $r48.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DEREncodable getParameters()>();

        $r50 = (org.bouncycastle.asn1.DERObject) $r49;

        specialinvoke $r47.<org.bouncycastle.asn1.x9.X962Parameters: void <init>(org.bouncycastle.asn1.DERObject)>($r50);

        $z8 = virtualinvoke $r47.<org.bouncycastle.asn1.x9.X962Parameters: boolean isNamedCurve()>();

        if $z8 == 0 goto label12;

        $r67 = virtualinvoke $r47.<org.bouncycastle.asn1.x9.X962Parameters: org.bouncycastle.asn1.DERObject getParameters()>();

        r85 = (org.bouncycastle.asn1.DERObjectIdentifier) $r67;

        $r68 = staticinvoke <org.bouncycastle.asn1.x9.X962NamedCurves: org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.DERObjectIdentifier)>(r85);

        r86 = $r68;

        if $r68 != null goto label11;

        $r69 = staticinvoke <org.bouncycastle.asn1.sec.SECNamedCurves: org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.DERObjectIdentifier)>(r85);

        r86 = $r69;

        if $r69 != null goto label11;

        $r70 = staticinvoke <org.bouncycastle.asn1.nist.NISTNamedCurves: org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.DERObjectIdentifier)>(r85);

        r86 = $r70;

        if $r70 != null goto label11;

        r86 = staticinvoke <org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves: org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.DERObjectIdentifier)>(r85);

     label11:
        $r87 = new org.bouncycastle.crypto.params.ECDomainParameters;

        $r88 = virtualinvoke r86.<org.bouncycastle.asn1.x9.X9ECParameters: org.bouncycastle.math.ec.ECCurve getCurve()>();

        $r89 = virtualinvoke r86.<org.bouncycastle.asn1.x9.X9ECParameters: org.bouncycastle.math.ec.ECPoint getG()>();

        $r90 = virtualinvoke r86.<org.bouncycastle.asn1.x9.X9ECParameters: java.math.BigInteger getN()>();

        $r91 = virtualinvoke r86.<org.bouncycastle.asn1.x9.X9ECParameters: java.math.BigInteger getH()>();

        $r92 = virtualinvoke r86.<org.bouncycastle.asn1.x9.X9ECParameters: byte[] getSeed()>();

        specialinvoke $r87.<org.bouncycastle.crypto.params.ECDomainParameters: void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>($r88, $r89, $r90, $r91, $r92);

        r93 = $r87;

        goto label13;

     label12:
        $r51 = new org.bouncycastle.asn1.x9.X9ECParameters;

        $r52 = virtualinvoke $r47.<org.bouncycastle.asn1.x9.X962Parameters: org.bouncycastle.asn1.DERObject getParameters()>();

        $r53 = (org.bouncycastle.asn1.ASN1Sequence) $r52;

        specialinvoke $r51.<org.bouncycastle.asn1.x9.X9ECParameters: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r53);

        $r54 = new org.bouncycastle.crypto.params.ECDomainParameters;

        $r55 = virtualinvoke $r51.<org.bouncycastle.asn1.x9.X9ECParameters: org.bouncycastle.math.ec.ECCurve getCurve()>();

        $r56 = virtualinvoke $r51.<org.bouncycastle.asn1.x9.X9ECParameters: org.bouncycastle.math.ec.ECPoint getG()>();

        $r57 = virtualinvoke $r51.<org.bouncycastle.asn1.x9.X9ECParameters: java.math.BigInteger getN()>();

        $r58 = virtualinvoke $r51.<org.bouncycastle.asn1.x9.X9ECParameters: java.math.BigInteger getH()>();

        $r59 = virtualinvoke $r51.<org.bouncycastle.asn1.x9.X9ECParameters: byte[] getSeed()>();

        specialinvoke $r54.<org.bouncycastle.crypto.params.ECDomainParameters: void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>($r55, $r56, $r57, $r58, $r59);

        r93 = $r54;

     label13:
        $r60 = virtualinvoke r0.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: org.bouncycastle.asn1.DERBitString getPublicKeyData()>();

        $r61 = virtualinvoke $r60.<org.bouncycastle.asn1.DERBitString: byte[] getBytes()>();

        $r62 = new org.bouncycastle.asn1.DEROctetString;

        specialinvoke $r62.<org.bouncycastle.asn1.DEROctetString: void <init>(byte[])>($r61);

        $r63 = new org.bouncycastle.asn1.x9.X9ECPoint;

        $r64 = virtualinvoke r93.<org.bouncycastle.crypto.params.ECDomainParameters: org.bouncycastle.math.ec.ECCurve getCurve()>();

        specialinvoke $r63.<org.bouncycastle.asn1.x9.X9ECPoint: void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.asn1.ASN1OctetString)>($r64, $r62);

        $r65 = new org.bouncycastle.crypto.params.ECPublicKeyParameters;

        $r66 = virtualinvoke $r63.<org.bouncycastle.asn1.x9.X9ECPoint: org.bouncycastle.math.ec.ECPoint getPoint()>();

        specialinvoke $r65.<org.bouncycastle.crypto.params.ECPublicKeyParameters: void <init>(org.bouncycastle.math.ec.ECPoint,org.bouncycastle.crypto.params.ECDomainParameters)>($r66, r93);

        return $r65;

     label14:
        $r46 = new java.lang.RuntimeException;

        specialinvoke $r46.<java.lang.RuntimeException: void <init>(java.lang.String)>("algorithm identifier in key not recognised");

        throw $r46;
    }
}
