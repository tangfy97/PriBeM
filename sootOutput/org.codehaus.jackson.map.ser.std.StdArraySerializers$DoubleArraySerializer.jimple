public final class org.codehaus.jackson.map.ser.std.StdArraySerializers$DoubleArraySerializer extends org.codehaus.jackson.map.ser.std.StdArraySerializers$ArraySerializerBase
{

    public void <init>()
    {
        org.codehaus.jackson.map.ser.std.StdArraySerializers$DoubleArraySerializer r0;

        r0 := @this: org.codehaus.jackson.map.ser.std.StdArraySerializers$DoubleArraySerializer;

        specialinvoke r0.<org.codehaus.jackson.map.ser.std.StdArraySerializers$ArraySerializerBase: void <init>(java.lang.Class,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty)>(class "[D", null, null);

        return;
    }

    public org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)
    {
        org.codehaus.jackson.map.ser.std.StdArraySerializers$DoubleArraySerializer r0;
        org.codehaus.jackson.map.TypeSerializer r1;

        r0 := @this: org.codehaus.jackson.map.ser.std.StdArraySerializers$DoubleArraySerializer;

        r1 := @parameter0: org.codehaus.jackson.map.TypeSerializer;

        return r0;
    }

    public void serializeContents(double[], org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.JsonGenerator r1;
        double[] r0;
        int i0, i1;
        org.codehaus.jackson.map.ser.std.StdArraySerializers$DoubleArraySerializer r2;
        org.codehaus.jackson.map.SerializerProvider r3;
        double $d0;

        r2 := @this: org.codehaus.jackson.map.ser.std.StdArraySerializers$DoubleArraySerializer;

        r0 := @parameter0: double[];

        r1 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r3 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        i1 = 0;

        i0 = lengthof r0;

     label1:
        if i1 >= i0 goto label2;

        $d0 = r0[i1];

        virtualinvoke r1.<org.codehaus.jackson.JsonGenerator: void writeNumber(double)>($d0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider, java.lang.reflect.Type)
    {
        java.lang.reflect.Type r4;
        org.codehaus.jackson.map.ser.std.StdArraySerializers$DoubleArraySerializer r0;
        org.codehaus.jackson.map.SerializerProvider r3;
        org.codehaus.jackson.node.ObjectNode $r1, $r2;

        r0 := @this: org.codehaus.jackson.map.ser.std.StdArraySerializers$DoubleArraySerializer;

        r3 := @parameter0: org.codehaus.jackson.map.SerializerProvider;

        r4 := @parameter1: java.lang.reflect.Type;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ser.std.StdArraySerializers$DoubleArraySerializer: org.codehaus.jackson.node.ObjectNode createSchemaNode(java.lang.String,boolean)>("array", 1);

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ser.std.StdArraySerializers$DoubleArraySerializer: org.codehaus.jackson.node.ObjectNode createSchemaNode(java.lang.String)>("number");

        virtualinvoke $r1.<org.codehaus.jackson.node.ObjectNode: org.codehaus.jackson.JsonNode put(java.lang.String,org.codehaus.jackson.JsonNode)>("items", $r2);

        return $r1;
    }

    public volatile void serializeContents(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.JsonGenerator r2;
        double[] $r4;
        org.codehaus.jackson.map.ser.std.StdArraySerializers$DoubleArraySerializer r0;
        org.codehaus.jackson.map.SerializerProvider r3;
        java.lang.Object r1;

        r0 := @this: org.codehaus.jackson.map.ser.std.StdArraySerializers$DoubleArraySerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r3 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r4 = (double[]) r1;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.std.StdArraySerializers$DoubleArraySerializer: void serializeContents(double[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r4, r2, r3);

        return;
    }
}
