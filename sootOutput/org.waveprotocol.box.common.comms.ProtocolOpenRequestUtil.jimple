public final class org.waveprotocol.box.common.comms.ProtocolOpenRequestUtil extends java.lang.Object
{

    private void <init>()
    {
        org.waveprotocol.box.common.comms.ProtocolOpenRequestUtil r0;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolOpenRequestUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isEqual(org.waveprotocol.box.common.comms.ProtocolOpenRequest, org.waveprotocol.box.common.comms.ProtocolOpenRequest)
    {
        org.waveprotocol.box.common.comms.ProtocolOpenRequest r0, r2;
        java.util.List $r6, $r7, $r8, $r9;
        java.lang.String $r1, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: org.waveprotocol.box.common.comms.ProtocolOpenRequest;

        r2 := @parameter1: org.waveprotocol.box.common.comms.ProtocolOpenRequest;

        $r1 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolOpenRequest: java.lang.String getParticipantId()>();

        $r3 = interfaceinvoke r2.<org.waveprotocol.box.common.comms.ProtocolOpenRequest: java.lang.String getParticipantId()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolOpenRequest: java.lang.String getWaveId()>();

        $r5 = interfaceinvoke r2.<org.waveprotocol.box.common.comms.ProtocolOpenRequest: java.lang.String getWaveId()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r6 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolOpenRequest: java.util.List getWaveletIdPrefix()>();

        $r7 = interfaceinvoke r2.<org.waveprotocol.box.common.comms.ProtocolOpenRequest: java.util.List getWaveletIdPrefix()>();

        $z2 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z2 != 0 goto label3;

        return 0;

     label3:
        $r8 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolOpenRequest: java.util.List getKnownWavelet()>();

        $r9 = interfaceinvoke r2.<org.waveprotocol.box.common.comms.ProtocolOpenRequest: java.util.List getKnownWavelet()>();

        $z3 = staticinvoke <org.waveprotocol.box.common.comms.WaveletVersionUtil: boolean areAllEqual(java.util.List,java.util.List)>($r8, $r9);

        if $z3 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public static boolean areAllEqual(java.util.List, java.util.List)
    {
        java.util.Iterator $r2, $r3;
        org.waveprotocol.box.common.comms.ProtocolOpenRequest $r5, $r7;
        java.util.List r0, r1;
        int $i0, $i1;
        java.lang.Object $r4, $r6;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

        $r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.waveprotocol.box.common.comms.ProtocolOpenRequest) $r4;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.waveprotocol.box.common.comms.ProtocolOpenRequest) $r6;

        $z1 = staticinvoke <org.waveprotocol.box.common.comms.ProtocolOpenRequestUtil: boolean isEqual(org.waveprotocol.box.common.comms.ProtocolOpenRequest,org.waveprotocol.box.common.comms.ProtocolOpenRequest)>($r5, $r7);

        if $z1 != 0 goto label2;

        return 0;

     label3:
        return 1;
    }

    public static int getHashCode(org.waveprotocol.box.common.comms.ProtocolOpenRequest)
    {
        org.waveprotocol.box.common.comms.ProtocolOpenRequest r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10;
        java.lang.String $r1, $r2;
        java.util.List $r3, $r4;

        r0 := @parameter0: org.waveprotocol.box.common.comms.ProtocolOpenRequest;

        $r1 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolOpenRequest: java.lang.String getParticipantId()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        i7 = 31 + $i0;

        $i1 = 31 * i7;

        $r2 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolOpenRequest: java.lang.String getWaveId()>();

        $i2 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        i8 = $i1 + $i2;

        $i3 = 31 * i8;

        $r3 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolOpenRequest: java.util.List getWaveletIdPrefix()>();

        $i4 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

        i9 = $i3 + $i4;

        $i5 = 31 * i9;

        $r4 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolOpenRequest: java.util.List getKnownWavelet()>();

        $i6 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

        i10 = $i5 + $i6;

        return i10;
    }
}
