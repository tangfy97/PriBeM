public class org.eclipse.jdt.internal.compiler.lookup.MethodVerifier extends java.lang.Object
{
    org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type;
    org.eclipse.jdt.internal.compiler.util.HashtableOfObject inheritedMethods;
    org.eclipse.jdt.internal.compiler.util.HashtableOfObject currentMethods;
    org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment;
    private boolean allowCompatibleReturnTypes;

    void <init>(org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r0;
        long $l0, $l2;
        byte $b1, $b3;
        int $i4, $i5;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r2, $r3;
        org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment r1;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type> = null;

        r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.util.HashtableOfObject inheritedMethods> = null;

        r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.util.HashtableOfObject currentMethods> = null;

        r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment> = r1;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.impl.CompilerOptions globalOptions>;

        $l0 = $r2.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long complianceLevel>;

        $b1 = $l0 cmp 3211264L;

        $i4 = (int) $b1;

        if $i4 < 0 goto label1;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.impl.CompilerOptions globalOptions>;

        $l2 = $r3.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long sourceLevel>;

        $b3 = $l2 cmp 3211264L;

        $i5 = (int) $b3;

        if $i5 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean allowCompatibleReturnTypes> = $z0;

        return;
    }

    boolean areMethodsCompatible(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r0;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r1, r2;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean isParameterSubsignature(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r1, r2);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean areReturnTypesCompatible(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r1, r2);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean areParametersEqual(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r4;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0, r2;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] r1, r3;
        int i0, $i1, i2;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r5, $r6;
        boolean $z0;

        r4 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        r3 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        if r1 != r3 goto label1;

        return 1;

     label1:
        i0 = lengthof r1;

        $i1 = lengthof r3;

        if i0 == $i1 goto label2;

        return 0;

     label2:
        i2 = 0;

        goto label5;

     label3:
        $r6 = r1[i2];

        $r5 = r3[i2];

        $z0 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean areTypesEqual(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r6, $r5);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        i2 = i2 + 1;

     label5:
        if i2 < i0 goto label3;

        return 1;
    }

    boolean areReturnTypesCompatible(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r4;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0, r1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r7, $r8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r2, $r3, $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4;

        r4 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        if $r3 != $r2 goto label1;

        return 1;

     label1:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $z0 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean areTypesEqual(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r6, $r5);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $z1 = r4.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean allowCompatibleReturnTypes>;

        if $z1 == 0 goto label3;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z2 = $r7 instanceof org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding;

        if $z2 == 0 goto label3;

        $r8 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z3 = $r8 instanceof org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding;

        if $z3 == 0 goto label3;

        $z4 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean areReturnTypesCompatible0(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r0, r1);

        return $z4;

     label3:
        return 0;
    }

    boolean areReturnTypesCompatible0(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r24;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r1, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r21, $r22, $r23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0, r3;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r2, $r4, $r5, $r6, $r7, $r8, $r19;

        r24 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $z0 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z1 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isInterface()>();

        if $z1 != 0 goto label3;

        $r19 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $i1 = $r19.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: int id>;

        if $i1 != 1 goto label2;

        $r23 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $z10 = virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r22);

        return $z10;

     label2:
        $r21 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $r20 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $z9 = virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r20);

        return $z9;

     label3:
        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $i0 = $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: int id>;

        if $i0 != 1 goto label4;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $r17 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $z8 = virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r17);

        return $z8;

     label4:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z2 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean implementsInterface(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,boolean)>($r5, 1);

        if $z2 == 0 goto label5;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $r15 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $z7 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r15);

        return $z7;

     label5:
        $r8 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z3 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean implementsInterface(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,boolean)>($r7, 1);

        if $z3 == 0 goto label6;

        $r14 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $z6 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r13);

        return $z6;

     label6:
        $r10 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $r9 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $z4 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r9);

        if $z4 != 0 goto label7;

        $r12 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $z5 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r11);

        if $z5 != 0 goto label7;

        return 0;

     label7:
        return 1;
    }

    boolean areTypesEqual(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r6;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r3, $r5;
        org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding $r2, $r4;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r0, r1;
        boolean $z0, $z1;

        r6 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding;

        if $z0 == 0 goto label3;

        $r4 = (org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding) r0;

        $r5 = $r4.<org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding resolvedType>;

        if $r5 != r1 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        $z1 = r1 instanceof org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding;

        if $z1 == 0 goto label5;

        $r2 = (org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding) r1;

        $r3 = $r2.<org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding resolvedType>;

        if $r3 != r0 goto label4;

        return 1;

     label4:
        return 0;

     label5:
        return 0;
    }

    boolean canSkipInheritedMethods()
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r0;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r1, $r3, $r6;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r2, $r7;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r4, $r5;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $r2 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding superclass()>();

        if $r2 == null goto label1;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding superclass()>();

        $z0 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isAbstract()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] superInterfaces()>();

        $r5 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] NO_SUPERINTERFACES>;

        if $r4 != $r5 goto label2;

        return 1;

     label2:
        return 0;
    }

    boolean canSkipInheritedMethods(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r4;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0, r1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r2, $r3;

        r4 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        if r0 == null goto label1;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        if $r3 == $r2 goto label1;

        return 0;

     label1:
        return 1;
    }

    void checkAbstractMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r0;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r1;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r3, $r7, $r11;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r6, $r10;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r9;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope $r4;
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration $r8;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r5;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean mustImplementAbstractMethod(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r2);

        if $z0 == 0 goto label2;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $r4 = $r3.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        r5 = $r4.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration referenceContext>;

        if r5 == null goto label1;

        $r8 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration addMissingAbstractMethodFor(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r1);

        $r9 = $r8.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r11 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void abstractMethodMustBeImplemented(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r11, r1);

        goto label2;

     label1:
        $r6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r7 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void abstractMethodMustBeImplemented(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r7, r1);

     label2:
        return;
    }

    void checkAgainstInheritedMethods(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding[], int, org.eclipse.jdt.internal.compiler.lookup.MethodBinding[])
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r0;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r10, $r14, $r15, $r19, $r20;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] r6, r9;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r23, $r24;
        byte $b5;
        int[] r5, $r22;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r7, r8, $r11, $r21;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r4;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r1, $r2, $r17;
        long $l3, $l4;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope $r3;
        int i0, $i1, $i2, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, $i15, $i17;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r12, $r13, $r18;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r8 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r6 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[];

        i0 := @parameter2: int;

        r9 := @parameter3: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[];

        $r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $z0 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isAnnotationType()>();

        if $z0 == 0 goto label01;

        $r20 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i11 = i0 - 1;

        $r21 = r6[$i11];

        virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void annotationCannotOverrideMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r8, $r21);

        return;

     label01:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $r3 = $r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        if i0 <= 1 goto label02;

        $r22 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: int[] findOverriddenInheritedMethods(org.eclipse.jdt.internal.compiler.lookup.MethodBinding[],int)>(r6, i0);

        goto label03;

     label02:
        $r22 = null;

     label03:
        r5 = $r22;

        i12 = i0;

        goto label20;

     label04:
        r7 = r6[i12];

        if r5 == null goto label05;

        $i10 = r5[i12];

        if $i10 != 0 goto label19;

     label05:
        $z1 = virtualinvoke r8.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isStatic()>();

        $z2 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isStatic()>();

        if $z1 == $z2 goto label06;

        $r19 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r8);

        virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void staticAndInstanceConflict(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r8, r7);

        goto label20;

     label06:
        $z3 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isAbstract()>();

        if $z3 == 0 goto label08;

        $r18 = r7.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z15 = virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isInterface()>();

        if $z15 == 0 goto label07;

        $i8 = r8.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        $i9 = $i8 | 536870912;

        r8.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers> = $i9;

        goto label10;

     label07:
        $i6 = r8.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        $i7 = $i6 | 805306368;

        r8.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers> = $i7;

        goto label10;

     label08:
        $z4 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isPublic()>();

        if $z4 != 0 goto label09;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $z14 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isInterface()>();

        if $z14 != 0 goto label10;

     label09:
        $i1 = r8.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        $i2 = $i1 | 268435456;

        r8.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers> = $i2;

     label10:
        $z16 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean areReturnTypesCompatible(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r8, r7);

        if $z16 != 0 goto label11;

        $r16 = r8.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $l3 = $r16.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: long tagBits>;

        $l4 = $l3 & 128L;

        $b5 = $l4 cmp 0L;

        if $b5 != 0 goto label11;

        $z13 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean reportIncompatibleReturnTypeError(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r8, r7);

        if $z13 == 0 goto label11;

        goto label20;

     label11:
        $r23 = r8.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] thrownExceptions>;

        $r24 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] NO_EXCEPTIONS>;

        if $r23 == $r24 goto label12;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: void checkExceptions(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r8, r7);

     label12:
        $z5 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isFinal()>();

        if $z5 == 0 goto label13;

        $r15 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r8);

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void finalMethodCannotBeOverridden(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r8, r7);

     label13:
        $z6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean isAsVisible(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r8, r7);

        if $z6 != 0 goto label14;

        $r14 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r8);

        virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void visibilityConflict(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r8, r7);

     label14:
        $z7 = $r4.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: boolean reportDeprecationWhenOverridingDeprecatedMethod>;

        if $z7 == 0 goto label19;

        $z8 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isViewedAsDeprecated()>();

        if $z8 == 0 goto label19;

        $z9 = virtualinvoke r8.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isViewedAsDeprecated()>();

        if $z9 == 0 goto label15;

        $z12 = $r4.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: boolean reportDeprecationInsideDeprecatedCode>;

        if $z12 == 0 goto label19;

     label15:
        $r13 = r7.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z10 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isInterface()>();

        if $z10 == 0 goto label18;

        i13 = i0;

        goto label17;

     label16:
        if i12 == i13 goto label17;

        $r11 = r6[i13];

        $r12 = $r11.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z11 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean implementsInterface(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,boolean)>($r13, 0);

        if $z11 == 0 goto label17;

        goto label20;

     label17:
        $i15 = (int) -1;

        i13 = i13 + $i15;

        if i13 >= 0 goto label16;

     label18:
        $r10 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r8);

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void overridesDeprecatedMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r8, r7);

     label19:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: void checkForBridgeMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding[])>(r8, r7, r9);

     label20:
        $i17 = (int) -1;

        i12 = i12 + $i17;

        if i12 >= 0 goto label04;

        return;
    }

    void checkConcreteInheritedMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding[])
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r2;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r5, $r9;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r4, $r8;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] r1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r10, $r11;
        int i0, i1, i2, $i4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0, $r3, $r6, $r7;

        r2 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[];

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isStatic()>();

        if $z0 == 0 goto label01;

        $r8 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r9 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void staticInheritedMethodConflicts(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding[])>($r9, r0, r1);

     label01:
        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isPublic()>();

        if $z1 != 0 goto label10;

        i1 = 0;

        i0 = lengthof r1;

        $z2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isProtected()>();

        if $z2 == 0 goto label05;

        goto label04;

     label02:
        $r7 = r1[i1];

        $z5 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isPublic()>();

        if $z5 == 0 goto label03;

        goto label09;

     label03:
        i1 = i1 + 1;

     label04:
        if i1 < i0 goto label02;

        goto label09;

     label05:
        $z3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isDefault()>();

        if $z3 == 0 goto label09;

        goto label08;

     label06:
        $r6 = r1[i1];

        $z4 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isDefault()>();

        if $z4 != 0 goto label07;

        goto label09;

     label07:
        i1 = i1 + 1;

     label08:
        if i1 < i0 goto label06;

     label09:
        if i1 >= i0 goto label10;

        $r4 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r5 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void inheritedMethodReducesVisibility(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding[])>($r5, r0, r1);

     label10:
        $r10 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] thrownExceptions>;

        $r11 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] NO_EXCEPTIONS>;

        if $r10 == $r11 goto label13;

        i2 = lengthof r1;

        goto label12;

     label11:
        $r3 = r1[i2];

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: void checkExceptions(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r0, $r3);

     label12:
        $i4 = (int) -1;

        i2 = i2 + $i4;

        if i2 >= 0 goto label11;

     label13:
        return;
    }

    void checkExceptions(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r0;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r7;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r6;
        long $l0, $l1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r2, $r4;
        byte $b2;
        int i3, i4, $i6, $i8, $i10, $i12;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r1, r3;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r5, $r8;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] resolvedExceptionTypesFor(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r1);

        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] resolvedExceptionTypesFor(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r3);

        i3 = lengthof $r2;

        goto label4;

     label1:
        r5 = $r2[i3];

        i4 = lengthof $r4;

     label2:
        $i6 = (int) -1;

        i4 = i4 + $i6;

        $i8 = (int) -1;

        if i4 <= $i8 goto label3;

        $r8 = $r4[i4];

        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean isSameClassOrSubclassOf(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>(r5, $r8);

        if $z1 == 0 goto label2;

     label3:
        $i10 = (int) -1;

        if i4 != $i10 goto label4;

        $z0 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isUncheckedException(boolean)>(0);

        if $z0 != 0 goto label4;

        $l0 = r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: long tagBits>;

        $l1 = $l0 & 128L;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label4;

        $r6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r1);

        $r7 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void incompatibleExceptionInThrowsClause(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r7, r1, r3, r5);

     label4:
        $i12 = (int) -1;

        i3 = i3 + $i12;

        if i3 >= 0 goto label1;

        return;
    }

    void checkForBridgeMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding[])
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r0;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r1, r2;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r3 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[];

        return;
    }

    void checkForRedundantSuperinterfaces(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[])
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r8;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r15, $r27;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] r0, $r1, $r6, $r7, $r18, $r19, $r20, $r21, r33;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r14, $r26;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] r12, r32;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r13, $r16, $r25, $r28;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r11, $r24;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r9, $r17, $r22, $r29;
        org.eclipse.jdt.internal.compiler.util.SimpleSet $r2, $r4;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope $r10, $r23;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r3, r5, r30, r31, r34, r35;

        r8 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[];

        $r1 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] NO_SUPERINTERFACES>;

        if r0 != $r1 goto label01;

        return;

     label01:
        $r2 = new org.eclipse.jdt.internal.compiler.util.SimpleSet;

        $i0 = lengthof r0;

        specialinvoke $r2.<org.eclipse.jdt.internal.compiler.util.SimpleSet: void <init>(int)>($i0);

        i8 = 0;

        i9 = lengthof r0;

        goto label03;

     label02:
        $r3 = r0[i8];

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.util.SimpleSet: java.lang.Object add(java.lang.Object)>($r3);

        i8 = i8 + 1;

     label03:
        if i8 < i9 goto label02;

        $r4 = new org.eclipse.jdt.internal.compiler.util.SimpleSet;

        specialinvoke $r4.<org.eclipse.jdt.internal.compiler.util.SimpleSet: void <init>(int)>(5);

        r30 = r5;

        goto label13;

     label04:
        $r20 = virtualinvoke r30.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] superInterfaces()>();

        $r21 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] NO_SUPERINTERFACES>;

        if $r20 == $r21 goto label12;

        i10 = 0;

        i11 = lengthof $r20;

        goto label11;

     label05:
        r31 = $r20[i10];

        $z4 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.util.SimpleSet: boolean includes(java.lang.Object)>(r31);

        if $z4 != 0 goto label10;

        $z5 = virtualinvoke r31.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isValidBinding()>();

        if $z5 == 0 goto label10;

        $z6 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.util.SimpleSet: boolean includes(java.lang.Object)>(r31);

        if $z6 == 0 goto label09;

        $r22 = r8.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $r23 = $r22.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r24 = $r23.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration referenceContext>;

        r32 = $r24.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] superInterfaces>;

        i12 = 0;

        i13 = lengthof r32;

        goto label08;

     label06:
        $r25 = r32[i12];

        $r26 = $r25.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        if $r26 != r31 goto label07;

        $r27 = virtualinvoke r8.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r29 = r8.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $r28 = r32[i12];

        virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void redundantSuperInterface(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding,org.eclipse.jdt.internal.compiler.ast.TypeReference,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r29, $r28, r31, r30);

        goto label10;

     label07:
        i12 = i12 + 1;

     label08:
        if i12 < i13 goto label06;

        goto label10;

     label09:
        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.util.SimpleSet: java.lang.Object add(java.lang.Object)>(r31);

     label10:
        i10 = i10 + 1;

     label11:
        if i10 < i11 goto label05;

     label12:
        r30 = virtualinvoke r30.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding superclass()>();

     label13:
        if r30 == null goto label14;

        $z3 = virtualinvoke r30.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isValidBinding()>();

        if $z3 != 0 goto label04;

     label14:
        $i7 = $r4.<org.eclipse.jdt.internal.compiler.util.SimpleSet: int elementSize>;

        i14 = $i7;

        if $i7 != 0 goto label15;

        return;

     label15:
        r33 = newarray (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)[$i7];

        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.util.SimpleSet: void asArray(java.lang.Object[])>(r33);

        i15 = 0;

        goto label26;

     label16:
        r34 = r33[i15];

        $r6 = virtualinvoke r34.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] superInterfaces()>();

        $r7 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] NO_SUPERINTERFACES>;

        if $r6 == $r7 goto label25;

        i16 = lengthof $r6;

        $i2 = i14 + i16;

        $i1 = lengthof r33;

        if $i2 < $i1 goto label17;

        $r19 = r33;

        $i5 = i14 + i16;

        $i6 = $i5 + 5;

        $r18 = newarray (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)[$i6];

        r33 = $r18;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r19, 0, $r18, 0, i14);

     label17:
        i17 = 0;

        goto label24;

     label18:
        r35 = $r6[i17];

        $z0 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.util.SimpleSet: boolean includes(java.lang.Object)>(r35);

        if $z0 != 0 goto label23;

        $z1 = virtualinvoke r35.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isValidBinding()>();

        if $z1 == 0 goto label23;

        $z2 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.util.SimpleSet: boolean includes(java.lang.Object)>(r35);

        if $z2 == 0 goto label22;

        $r9 = r8.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $r10 = $r9.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r11 = $r10.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration referenceContext>;

        r12 = $r11.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] superInterfaces>;

        i18 = 0;

        i4 = lengthof r12;

        goto label21;

     label19:
        $r13 = r12[i18];

        $r14 = $r13.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        if $r14 != r35 goto label20;

        $r15 = virtualinvoke r8.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r17 = r8.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $r16 = r12[i18];

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void redundantSuperInterface(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding,org.eclipse.jdt.internal.compiler.ast.TypeReference,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r17, $r16, r35, r34);

        goto label23;

     label20:
        i18 = i18 + 1;

     label21:
        if i18 < i4 goto label19;

        goto label23;

     label22:
        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.util.SimpleSet: java.lang.Object add(java.lang.Object)>(r35);

        $i3 = i14;

        i14 = i14 + 1;

        r33[$i3] = r35;

     label23:
        i17 = i17 + 1;

     label24:
        if i17 < i16 goto label18;

     label25:
        i15 = i15 + 1;

     label26:
        if i15 < i14 goto label16;

        return;
    }

    void checkInheritedMethods(org.eclipse.jdt.internal.compiler.lookup.MethodBinding[], int)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r0;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r9, $r15;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] r1, r21, r25;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r14;
        int[] $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r2, $r3, $r5, $r10, $r12, $r16, $r18, $r20, r22;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r24;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r4, $r7, $r11, $r17, $r23;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope $r8;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9, i10, $i12, $i14, $i16;
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration $r13;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[];

        i0 := @parameter1: int;

        if i0 <= 1 goto label05;

        $r19 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: int[] findOverriddenInheritedMethods(org.eclipse.jdt.internal.compiler.lookup.MethodBinding[],int)>(r1, i0);

        if $r19 == null goto label04;

        i5 = 0;

        r21 = newarray (org.eclipse.jdt.internal.compiler.lookup.MethodBinding)[i0];

        i6 = 0;

        goto label03;

     label01:
        $i3 = $r19[i6];

        if $i3 != 0 goto label02;

        $i4 = i5;

        i5 = i5 + 1;

        $r20 = r1[i6];

        r21[$i4] = $r20;

     label02:
        i6 = i6 + 1;

     label03:
        if i6 < i0 goto label01;

        if i5 <= 1 goto label05;

        $z4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean checkInheritedReturnTypes(org.eclipse.jdt.internal.compiler.lookup.MethodBinding[],int)>(r21, i5);

        if $z4 != 0 goto label05;

        return;

     label04:
        $z3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean checkInheritedReturnTypes(org.eclipse.jdt.internal.compiler.lookup.MethodBinding[],int)>(r1, i0);

        if $z3 != 0 goto label05;

        return;

     label05:
        r22 = null;

        $r23 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $z5 = virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isInterface()>();

        if $z5 != 0 goto label08;

        i7 = i0;

        goto label07;

     label06:
        $r18 = r1[i7];

        $z2 = virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isAbstract()>();

        if $z2 != 0 goto label07;

        r22 = r1[i7];

        goto label08;

     label07:
        $i12 = (int) -1;

        i7 = i7 + $i12;

        if i7 >= 0 goto label06;

     label08:
        if r22 != null goto label14;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $z0 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isAbstract()>();

        if $z0 != 0 goto label13;

        i8 = i0;

        goto label12;

     label09:
        $r5 = r1[i8];

        $r6 = $r5.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean mustImplementAbstractMethod(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r6);

        if $z1 == 0 goto label12;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $r8 = $r7.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        r24 = $r8.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration referenceContext>;

        if r24 == null goto label10;

        $r12 = r1[0];

        $r13 = virtualinvoke r24.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration addMissingAbstractMethodFor(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r12);

        $r14 = $r13.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r15 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r17 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $r16 = r1[0];

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void abstractMethodMustBeImplemented(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r17, $r16);

        goto label11;

     label10:
        $r9 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r11 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $r10 = r1[0];

        virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void abstractMethodMustBeImplemented(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r11, $r10);

     label11:
        return;

     label12:
        $i14 = (int) -1;

        i8 = i8 + $i14;

        if i8 >= 0 goto label09;

     label13:
        return;

     label14:
        if i0 <= 1 goto label17;

        $i1 = i0 - 1;

        r25 = newarray (org.eclipse.jdt.internal.compiler.lookup.MethodBinding)[$i1];

        i9 = 0;

        i10 = i0;

        goto label16;

     label15:
        $r2 = r1[i10];

        if $r2 == r22 goto label16;

        $i2 = i9;

        i9 = i9 + 1;

        $r3 = r1[i10];

        r25[$i2] = $r3;

     label16:
        $i16 = (int) -1;

        i10 = i10 + $i16;

        if i10 >= 0 goto label15;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: void checkConcreteInheritedMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding[])>(r22, r25);

     label17:
        return;
    }

    boolean checkInheritedReturnTypes(org.eclipse.jdt.internal.compiler.lookup.MethodBinding[], int)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r2;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r3, $r5;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r4;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] r0;
        int i0, $i1, i2, i3, $i5, $i7;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r1, $r6, $r8;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r7;

        r2 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[];

        i0 := @parameter1: int;

        r1 = r0[0];

        i2 = i0;

     label1:
        $i5 = (int) -1;

        i2 = i2 + $i5;

        if i2 <= 0 goto label2;

        $r8 = r0[i2];

        $z1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean areReturnTypesCompatible(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r1, $r8);

        if $z1 != 0 goto label1;

     label2:
        if i2 != 0 goto label3;

        return 1;

     label3:
        $r3 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $z0 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isInterface()>();

        if $z0 == 0 goto label6;

        i3 = i0;

        goto label5;

     label4:
        $r6 = r0[i3];

        $r7 = $r6.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $i1 = $r7.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: int id>;

        if $i1 != 1 goto label5;

        return 0;

     label5:
        $i7 = (int) -1;

        i3 = i3 + $i7;

        if i3 >= 0 goto label4;

     label6:
        $r4 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r5 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void inheritedMethodsHaveIncompatibleReturnTypes(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding[],int)>($r5, r0, i0);

        return 0;
    }

    void checkMethods()
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r0;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] r5, $r14, $r17;
        char[][] $r19;
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r9, $r10, $r11, $r12, $r13, $r15, $r16, r20, r21, r22;
        java.lang.Object[] $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, i12, i13, i14, $i16, $i18, $i20, $i22, $i24;
        org.eclipse.jdt.internal.compiler.util.HashtableOfObject $r3, $r6, $r18;
        char[] $r1, $r2;
        java.lang.Object $r4, $r8;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean mustImplementAbstractMethods()>();

        if $z0 == 0 goto label01;

        $z7 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean canSkipInheritedMethods()>();

        if $z7 == 0 goto label01;

        $z8 = 1;

        goto label02;

     label01:
        $z8 = 0;

     label02:
        z1 = $z8;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.util.HashtableOfObject inheritedMethods>;

        $r19 = $r18.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: char[][] keyTable>;

        i7 = lengthof $r19;

        goto label28;

     label03:
        $r1 = $r19[i7];

        if $r1 != null goto label04;

        goto label28;

     label04:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.util.HashtableOfObject currentMethods>;

        $r2 = $r19[i7];

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object get(char[])>($r2);

        r5 = (org.eclipse.jdt.internal.compiler.lookup.MethodBinding[]) $r4;

        if r5 != null goto label05;

        if z1 == 0 goto label05;

        goto label28;

     label05:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.util.HashtableOfObject inheritedMethods>;

        $r7 = $r6.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object[] valueTable>;

        $r8 = $r7[i7];

        $r17 = (org.eclipse.jdt.internal.compiler.lookup.MethodBinding[]) $r8;

        $i0 = lengthof $r17;

        if $i0 != 1 goto label06;

        if r5 != null goto label06;

        if $z0 == 0 goto label28;

        $r15 = $r17[0];

        $z6 = virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isAbstract()>();

        if $z6 == 0 goto label28;

        $r16 = $r17[0];

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: void checkAbstractMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r16);

        goto label28;

     label06:
        $i16 = (int) -1;

        i8 = $i16;

        $i1 = lengthof $r17;

        $r14 = newarray (org.eclipse.jdt.internal.compiler.lookup.MethodBinding)[$i1];

        if r5 == null goto label15;

        i9 = 0;

        i10 = lengthof r5;

        goto label14;

     label07:
        r20 = r5[i9];

        i11 = 0;

        i12 = lengthof $r17;

        goto label10;

     label08:
        $r12 = $r17[i11];

        $r13 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.MethodBinding computeSubstituteMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r12, r20);

        if $r13 == null goto label09;

        $z5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean isParameterSubsignature(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r20, $r13);

        if $z5 == 0 goto label09;

        i8 = i8 + 1;

        $r14[i8] = $r13;

        $r17[i11] = null;

     label09:
        i11 = i11 + 1;

     label10:
        if i11 < i12 goto label08;

        if i8 < 0 goto label13;

        $i4 = i8 + 1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: void checkAgainstInheritedMethods(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding[],int,org.eclipse.jdt.internal.compiler.lookup.MethodBinding[])>(r20, $r14, $i4, $r17);

        goto label12;

     label11:
        $i5 = i8;

        $i18 = (int) -1;

        i8 = i8 + $i18;

        $r14[$i5] = null;

     label12:
        if i8 >= 0 goto label11;

     label13:
        i9 = i9 + 1;

     label14:
        if i9 < i10 goto label07;

     label15:
        i13 = 0;

        $i6 = lengthof $r17;

        goto label27;

     label16:
        r21 = $r17[i13];

        if r21 != null goto label17;

        goto label26;

     label17:
        i8 = i8 + 1;

        $r14[i8] = r21;

        i14 = i13 + 1;

        goto label21;

     label18:
        r22 = $r17[i14];

        $z2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean canSkipInheritedMethods(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r21, r22);

        if $z2 == 0 goto label19;

        goto label20;

     label19:
        $r9 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.MethodBinding computeSubstituteMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r22, r21);

        if $r9 == null goto label20;

        $z3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean isParameterSubsignature(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r21, $r9);

        if $z3 == 0 goto label20;

        i8 = i8 + 1;

        $r14[i8] = $r9;

        $r17[i14] = null;

     label20:
        i14 = i14 + 1;

     label21:
        if i14 < $i6 goto label18;

        $i20 = (int) -1;

        if i8 != $i20 goto label22;

        goto label26;

     label22:
        if i8 <= 0 goto label23;

        $i3 = i8 + 1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: void checkInheritedMethods(org.eclipse.jdt.internal.compiler.lookup.MethodBinding[],int)>($r14, $i3);

        goto label25;

     label23:
        if $z0 == 0 goto label25;

        $r10 = $r14[0];

        $z4 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isAbstract()>();

        if $z4 == 0 goto label25;

        $r11 = $r14[0];

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: void checkAbstractMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r11);

        goto label25;

     label24:
        $i2 = i8;

        $i22 = (int) -1;

        i8 = i8 + $i22;

        $r14[$i2] = null;

     label25:
        if i8 >= 0 goto label24;

     label26:
        i13 = i13 + 1;

     label27:
        if i13 < $i6 goto label16;

     label28:
        $i24 = (int) -1;

        i7 = i7 + $i24;

        if i7 >= 0 goto label03;

        return;
    }

    void checkPackagePrivateAbstractMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r3;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r4, $r6, $r12;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r11;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] $r13;
        int i0, $i2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0, r14;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r1, $r9, $r10, r15;
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding r2, $r5, $r8;
        char[] r7;

        r3 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        r2 = $r1.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.PackageBinding fPackage>;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $r5 = $r4.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.PackageBinding fPackage>;

        if r2 != $r5 goto label1;

        return;

     label1:
        $r6 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        r15 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding superclass()>();

        r7 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

     label2:
        $z0 = virtualinvoke r15.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isValidBinding()>();

        if $z0 != 0 goto label3;

        return;

     label3:
        $z1 = virtualinvoke r15.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isAbstract()>();

        if $z1 != 0 goto label4;

        return;

     label4:
        $r8 = r15.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.PackageBinding fPackage>;

        if r2 != $r8 goto label8;

        $r13 = virtualinvoke r15.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] getMethods(char[])>(r7);

        i0 = lengthof $r13;

        goto label7;

     label5:
        r14 = $r13[i0];

        $z2 = virtualinvoke r14.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isPrivate()>();

        if $z2 != 0 goto label7;

        $z3 = virtualinvoke r14.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isConstructor()>();

        if $z3 != 0 goto label7;

        $z4 = virtualinvoke r14.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isDefaultAbstract()>();

        if $z4 == 0 goto label6;

        goto label7;

     label6:
        $z5 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean areMethodsCompatible(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r14, r0);

        if $z5 == 0 goto label7;

        return;

     label7:
        $i2 = (int) -1;

        i0 = i0 + $i2;

        if i0 >= 0 goto label5;

     label8:
        $r9 = virtualinvoke r15.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding superclass()>();

        r15 = $r9;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        if $r9 != $r10 goto label2;

        $r11 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r12 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void abstractMethodCannotBeOverridden(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r12, r0);

        return;
    }

    void computeInheritedMethods()
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r0;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r1, $r2, $r3, $r5, $r7;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r9;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r4, $r6;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope $r8;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $z0 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isInterface()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $r8 = $r7.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding getJavaLangObject()>();

        goto label2;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $r9 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding superclass()>();

     label2:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] superInterfaces()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: void computeInheritedMethods(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[])>($r9, $r4);

        $r5 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] superInterfaces()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: void checkForRedundantSuperinterfaces(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[])>($r9, $r6);

        return;
    }

    void computeInheritedMethods(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[])
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r0;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] $r9, $r14, $r17, $r26, $r29, $r34, $r43, $r49, $r58, r60, r61, r62, $r66, r70, r71;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r13, $r36, $r37, $r39, $r44, $r45, $r48, r59, r69;
        org.eclipse.jdt.internal.compiler.util.SimpleSet $r6;
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding $r32, $r33;
        char[] $r10, $r15, $r21, $r24, $r27, $r35, $r64;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r38, $r41;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] r2, $r3, $r7, $r8, $r19, $r20, $r50, $r51, $r53, $r54, r55;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, z18;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r31, $r40, $r42;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, $i34, $i36;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r4, $r18, $r30, $r46, $r47, $r52, r56, r57, r67, r68;
        org.eclipse.jdt.internal.compiler.util.HashtableOfObject $r11, $r16, $r22, $r28, $r63, $r72, $r73;
        java.lang.Object $r12, $r23, $r25, $r65;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[];

        $r72 = new org.eclipse.jdt.internal.compiler.util.HashtableOfObject;

        specialinvoke $r72.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: void <init>(int)>(51);

        r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.util.HashtableOfObject inheritedMethods> = $r72;

        r55 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[]) null;

        i13 = 0;

        $r3 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] NO_SUPERINTERFACES>;

        if r2 == $r3 goto label01;

        i13 = lengthof r2;

        r55 = r2;

     label01:
        r56 = r4;

        $r73 = new org.eclipse.jdt.internal.compiler.util.HashtableOfObject;

        specialinvoke $r73.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: void <init>(int)>(3);

        z18 = 1;

        goto label34;

     label02:
        if z18 == 0 goto label12;

        $z17 = virtualinvoke r56.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isAbstract()>();

        if $z17 == 0 goto label11;

        $r50 = virtualinvoke r56.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] superInterfaces()>();

        $r51 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] NO_SUPERINTERFACES>;

        if $r50 == $r51 goto label12;

        if r55 != null goto label03;

        r55 = $r50;

        i13 = lengthof $r50;

        goto label12;

     label03:
        i14 = lengthof $r50;

        $i9 = i13 + i14;

        $i8 = lengthof r55;

        if $i9 < $i8 goto label04;

        $r54 = r55;

        $i11 = i13 + i14;

        $i12 = $i11 + 5;

        $r53 = newarray (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)[$i12];

        r55 = $r53;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r54, 0, $r53, 0, i13);

     label04:
        i15 = 0;

        goto label10;

     label05:
        r57 = $r50[i15];

        i16 = 0;

        goto label08;

     label06:
        $r52 = r55[i16];

        if r57 != $r52 goto label07;

        goto label09;

     label07:
        i16 = i16 + 1;

     label08:
        if i16 < i13 goto label06;

        $i10 = i13;

        i13 = i13 + 1;

        r55[$i10] = r57;

     label09:
        i15 = i15 + 1;

     label10:
        if i15 < i14 goto label05;

        goto label12;

     label11:
        z18 = 0;

     label12:
        $r58 = virtualinvoke r56.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] unResolvedMethods()>();

        i17 = lengthof $r58;

        goto label33;

     label13:
        r59 = $r58[i17];

        $z4 = virtualinvoke r59.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isPrivate()>();

        if $z4 != 0 goto label33;

        $z5 = virtualinvoke r59.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isConstructor()>();

        if $z5 != 0 goto label33;

        $z6 = virtualinvoke r59.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isDefaultAbstract()>();

        if $z6 == 0 goto label14;

        goto label33;

     label14:
        $r22 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.util.HashtableOfObject inheritedMethods>;

        $r21 = r59.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        $r23 = virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object get(char[])>($r21);

        r60 = (org.eclipse.jdt.internal.compiler.lookup.MethodBinding[]) $r23;

        if r60 == null goto label18;

        i18 = 0;

        i19 = lengthof r60;

        goto label17;

     label15:
        $r45 = r60[i18];

        $r47 = $r45.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r46 = r59.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        if $r47 == $r46 goto label16;

        $r48 = r60[i18];

        $z14 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean areMethodsCompatible(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r48, r59);

        if $z14 == 0 goto label16;

        $z15 = virtualinvoke r59.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isDefault()>();

        if $z15 == 0 goto label33;

        $z16 = virtualinvoke r59.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isAbstract()>();

        if $z16 == 0 goto label33;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: void checkPackagePrivateAbstractMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r59);

        goto label33;

     label16:
        i18 = i18 + 1;

     label17:
        if i18 < i19 goto label15;

     label18:
        $r24 = r59.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        $r25 = virtualinvoke $r73.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object get(char[])>($r24);

        $r49 = (org.eclipse.jdt.internal.compiler.lookup.MethodBinding[]) $r25;

        if $r49 == null goto label22;

        i20 = 0;

        i21 = lengthof $r49;

        goto label21;

     label19:
        $r44 = $r49[i20];

        $z13 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean areMethodsCompatible(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r44, r59);

        if $z13 == 0 goto label20;

        goto label33;

     label20:
        i20 = i20 + 1;

     label21:
        if i20 < i21 goto label19;

     label22:
        $z7 = virtualinvoke r59.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isDefault()>();

        if $z7 == 0 goto label23;

        $r30 = r59.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r33 = $r30.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.PackageBinding fPackage>;

        $r31 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $r32 = $r31.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.PackageBinding fPackage>;

        if $r33 != $r32 goto label26;

     label23:
        if r60 != null goto label24;

        $r29 = newarray (org.eclipse.jdt.internal.compiler.lookup.MethodBinding)[1];

        $r29[0] = r59;

        r61 = $r29;

        goto label25;

     label24:
        i22 = lengthof r60;

        $i6 = i22 + 1;

        $r26 = newarray (org.eclipse.jdt.internal.compiler.lookup.MethodBinding)[$i6];

        r61 = $r26;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r60, 0, $r26, 0, i22);

        $r26[i22] = r59;

     label25:
        $r28 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.util.HashtableOfObject inheritedMethods>;

        $r27 = r59.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        virtualinvoke $r28.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object put(char[],java.lang.Object)>($r27, r61);

        goto label33;

     label26:
        if $r49 != null goto label27;

        $r43 = newarray (org.eclipse.jdt.internal.compiler.lookup.MethodBinding)[1];

        $r43[0] = r59;

        r62 = $r43;

        goto label28;

     label27:
        i23 = lengthof $r49;

        $i7 = i23 + 1;

        $r34 = newarray (org.eclipse.jdt.internal.compiler.lookup.MethodBinding)[$i7];

        r62 = $r34;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r49, 0, $r34, 0, i23);

        $r34[i23] = r59;

     label28:
        $r35 = r59.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        virtualinvoke $r73.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object put(char[],java.lang.Object)>($r35, r62);

        $z8 = virtualinvoke r59.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isAbstract()>();

        if $z8 == 0 goto label29;

        $r40 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $z12 = virtualinvoke $r40.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isAbstract()>();

        if $z12 != 0 goto label29;

        $r41 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r42 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        virtualinvoke $r41.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void abstractMethodCannotBeOverridden(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r42, r59);

     label29:
        $r63 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.util.HashtableOfObject currentMethods>;

        $r64 = r59.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        $r65 = virtualinvoke $r63.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object get(char[])>($r64);

        $r66 = (org.eclipse.jdt.internal.compiler.lookup.MethodBinding[]) $r65;

        if $r66 == null goto label33;

        $z9 = virtualinvoke r59.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isStatic()>();

        if $z9 != 0 goto label33;

        i24 = 0;

        i25 = lengthof $r66;

        goto label32;

     label30:
        $r36 = $r66[i24];

        $z10 = virtualinvoke $r36.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isStatic()>();

        if $z10 != 0 goto label31;

        $r37 = $r66[i24];

        $z11 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean areMethodsCompatible(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r37, r59);

        if $z11 == 0 goto label31;

        $r38 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r39 = $r66[i24];

        virtualinvoke $r38.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void overridesPackageDefaultMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r39, r59);

        goto label33;

     label31:
        i24 = i24 + 1;

     label32:
        if i24 < i25 goto label30;

     label33:
        $i34 = (int) -1;

        i17 = i17 + $i34;

        if i17 >= 0 goto label13;

        r56 = virtualinvoke r56.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding superclass()>();

     label34:
        if r56 == null goto label35;

        $z3 = virtualinvoke r56.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isValidBinding()>();

        if $z3 != 0 goto label02;

     label35:
        if i13 != 0 goto label36;

        return;

     label36:
        $r6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.util.SimpleSet findSuperinterfaceCollisions(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[])>(r4, r2);

        i26 = 0;

        goto label55;

     label37:
        r67 = r55[i26];

        $z0 = virtualinvoke r67.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isValidBinding()>();

        if $z0 == 0 goto label54;

        if $r6 == null goto label38;

        $z2 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.util.SimpleSet: boolean includes(java.lang.Object)>(r67);

        if $z2 == 0 goto label38;

        goto label54;

     label38:
        $r7 = virtualinvoke r67.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] superInterfaces()>();

        $r8 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] NO_SUPERINTERFACES>;

        if $r7 == $r8 goto label46;

        i27 = lengthof $r7;

        $i2 = i13 + i27;

        $i1 = lengthof r55;

        if $i2 < $i1 goto label39;

        $r20 = r55;

        $i4 = i13 + i27;

        $i5 = $i4 + 5;

        $r19 = newarray (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)[$i5];

        r55 = $r19;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r20, 0, $r19, 0, i13);

     label39:
        i28 = 0;

        goto label45;

     label40:
        r68 = $r7[i28];

        i29 = 0;

        goto label43;

     label41:
        $r18 = r55[i29];

        if r68 != $r18 goto label42;

        goto label44;

     label42:
        i29 = i29 + 1;

     label43:
        if i29 < i13 goto label41;

        $i3 = i13;

        i13 = i13 + 1;

        r55[$i3] = r68;

     label44:
        i28 = i28 + 1;

     label45:
        if i28 < i27 goto label40;

     label46:
        $r9 = virtualinvoke r67.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] unResolvedMethods()>();

        i30 = lengthof $r9;

        goto label53;

     label47:
        r69 = $r9[i30];

        $r11 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.util.HashtableOfObject inheritedMethods>;

        $r10 = r69.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        $r12 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object get(char[])>($r10);

        r70 = (org.eclipse.jdt.internal.compiler.lookup.MethodBinding[]) $r12;

        if r70 != null goto label48;

        $r17 = newarray (org.eclipse.jdt.internal.compiler.lookup.MethodBinding)[1];

        $r17[0] = r69;

        r71 = $r17;

        goto label52;

     label48:
        i31 = lengthof r70;

        i32 = 0;

        goto label51;

     label49:
        $r13 = r70[i32];

        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean isInterfaceMethodImplemented(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>(r69, $r13, r67);

        if $z1 == 0 goto label50;

        goto label53;

     label50:
        i32 = i32 + 1;

     label51:
        if i32 < i31 goto label49;

        $i0 = i31 + 1;

        $r14 = newarray (org.eclipse.jdt.internal.compiler.lookup.MethodBinding)[$i0];

        r71 = $r14;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r70, 0, $r14, 0, i31);

        $r14[i31] = r69;

     label52:
        $r16 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.util.HashtableOfObject inheritedMethods>;

        $r15 = r69.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object put(char[],java.lang.Object)>($r15, r71);

     label53:
        $i36 = (int) -1;

        i30 = i30 + $i36;

        if i30 >= 0 goto label47;

     label54:
        i26 = i26 + 1;

     label55:
        if i26 < i13 goto label37;

        return;
    }

    void computeMethods()
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r0;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] $r2, $r8, r11, r12;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i10;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r4;
        org.eclipse.jdt.internal.compiler.util.HashtableOfObject $r6, $r10, $r13;
        char[] $r5, $r9;
        java.lang.Object $r7;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $r2 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] methods()>();

        i0 = lengthof $r2;

        $r13 = new org.eclipse.jdt.internal.compiler.util.HashtableOfObject;

        if i0 != 0 goto label1;

        $i7 = 1;

        goto label2;

     label1:
        $i7 = i0;

     label2:
        specialinvoke $r13.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: void <init>(int)>($i7);

        r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.util.HashtableOfObject currentMethods> = $r13;

        i8 = i0;

        goto label6;

     label3:
        r4 = $r2[i8];

        $z0 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isConstructor()>();

        if $z0 != 0 goto label6;

        $z1 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isDefaultAbstract()>();

        if $z1 != 0 goto label6;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.util.HashtableOfObject currentMethods>;

        $r5 = r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object get(char[])>($r5);

        r11 = (org.eclipse.jdt.internal.compiler.lookup.MethodBinding[]) $r7;

        if r11 != null goto label4;

        r12 = newarray (org.eclipse.jdt.internal.compiler.lookup.MethodBinding)[1];

        goto label5;

     label4:
        $i1 = lengthof r11;

        $i2 = $i1 + 1;

        $r8 = newarray (org.eclipse.jdt.internal.compiler.lookup.MethodBinding)[$i2];

        r12 = $r8;

        $i3 = lengthof $r8;

        $i4 = $i3 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r11, 0, $r8, 0, $i4);

     label5:
        $i5 = lengthof r12;

        $i6 = $i5 - 1;

        r12[$i6] = r4;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.util.HashtableOfObject currentMethods>;

        $r9 = r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.util.HashtableOfObject: java.lang.Object put(char[],java.lang.Object)>($r9, r12);

     label6:
        $i10 = (int) -1;

        i8 = i8 + $i10;

        if i8 >= 0 goto label3;

        return;
    }

    org.eclipse.jdt.internal.compiler.lookup.MethodBinding computeSubstituteMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r4;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0, r1;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r2, $r3;

        r4 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i1 = lengthof $r2;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i0 = lengthof $r3;

        if $i1 == $i0 goto label2;

        return null;

     label2:
        return r0;
    }

    boolean couldMethodOverride(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0, r1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4, $r6;
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding $r5, $r7;
        char[] $r2, $r3;

        r8 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r3, $r2);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        if r0 == r1 goto label2;

        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isStatic()>();

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isStatic()>();

        if $z2 == 0 goto label3;

     label2:
        return 0;

     label3:
        $z3 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isPrivate()>();

        if $z3 == 0 goto label4;

        return 0;

     label4:
        $z4 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isDefault()>();

        if $z4 == 0 goto label5;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.PackageBinding getPackage()>();

        $r6 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.PackageBinding getPackage()>();

        if $r5 == $r7 goto label5;

        return 0;

     label5:
        $z5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isPublic()>();

        if $z5 != 0 goto label7;

        $z6 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isPublic()>();

        if $z6 == 0 goto label6;

        return 0;

     label6:
        $z7 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isProtected()>();

        if $z7 == 0 goto label7;

        $z8 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isProtected()>();

        if $z8 != 0 goto label7;

        return 0;

     label7:
        return 1;
    }

    public boolean doesMethodOverride(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r0;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r1, $r2, r6;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r3, $r4;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r6 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean couldMethodOverride(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r1, r6);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $r4 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r3 = $r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding findSuperTypeOriginatingFrom(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r3);

        $z1 = $r5 instanceof org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $z2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean isParameterSubsignature(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r1, $r2);

        return $z2;
    }

    org.eclipse.jdt.internal.compiler.util.SimpleSet findSuperinterfaceCollisions(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[])
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r0;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] r2;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[];

        return null;
    }

    int[] findOverriddenInheritedMethods(org.eclipse.jdt.internal.compiler.lookup.MethodBinding[], int)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r9;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] r0;
        int[] r10;
        int i0, $i1, $i2, i3, i4, $i6, $i8, $i10, $i12, $i14;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r1, $r2, $r3, $r6, $r7, $r8;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4, $r5, r11, r12, r13;

        r9 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[];

        i0 := @parameter1: int;

        r10 = (int[]) null;

        i3 = 0;

        $r1 = r0[0];

        r11 = $r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z0 = virtualinvoke r11.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isInterface()>();

        if $z0 != 0 goto label17;

        i3 = 1;

        $r6 = r0[1];

        r12 = $r6.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        goto label03;

     label01:
        i3 = i3 + 1;

        if i3 != i0 goto label02;

        return null;

     label02:
        $r7 = r0[i3];

        r12 = $r7.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

     label03:
        if r11 == r12 goto label01;

        $z3 = virtualinvoke r12.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isInterface()>();

        if $z3 != 0 goto label17;

        r10 = newarray (int)[i0];

     label04:
        $i6 = (int) -1;

        r10[i3] = $i6;

        i3 = i3 + 1;

        if i3 != i0 goto label05;

        return r10;

     label05:
        $r8 = r0[i3];

        r13 = $r8.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z4 = virtualinvoke r13.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isInterface()>();

        if $z4 == 0 goto label04;

        goto label17;

     label06:
        if r10 == null goto label07;

        $i2 = r10[i3];

        $i8 = (int) -1;

        if $i2 != $i8 goto label07;

        goto label16;

     label07:
        $r2 = r0[i3];

        $r5 = $r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        i4 = i3 + 1;

        goto label15;

     label08:
        if r10 == null goto label09;

        $i1 = r10[i4];

        $i10 = (int) -1;

        if $i1 != $i10 goto label09;

        goto label14;

     label09:
        $r3 = r0[i4];

        $r4 = $r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        if $r5 != $r4 goto label10;

        goto label14;

     label10:
        $z1 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean implementsInterface(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,boolean)>($r4, 1);

        if $z1 == 0 goto label12;

        if r10 != null goto label11;

        r10 = newarray (int)[i0];

     label11:
        $i12 = (int) -1;

        r10[i4] = $i12;

        goto label14;

     label12:
        $z2 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean implementsInterface(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,boolean)>($r5, 1);

        if $z2 == 0 goto label14;

        if r10 != null goto label13;

        r10 = newarray (int)[i0];

     label13:
        $i14 = (int) -1;

        r10[i3] = $i14;

        goto label16;

     label14:
        i4 = i4 + 1;

     label15:
        if i4 < i0 goto label08;

     label16:
        i3 = i3 + 1;

     label17:
        if i3 < i0 goto label06;

        return r10;
    }

    boolean isAsVisible(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r2;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0, r1;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r2 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        if $i1 != $i0 goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isPublic()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isPublic()>();

        if $z1 == 0 goto label3;

        return 0;

     label3:
        $z2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isProtected()>();

        if $z2 == 0 goto label4;

        return 1;

     label4:
        $z3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isProtected()>();

        if $z3 == 0 goto label5;

        return 0;

     label5:
        $z4 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isPrivate()>();

        if $z4 == 0 goto label6;

        $z5 = 0;

        goto label7;

     label6:
        $z5 = 1;

     label7:
        return $z5;
    }

    boolean isInterfaceMethodImplemented(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r0;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r1, r2;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r3, $r4;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r3 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean areParametersEqual(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r1, r2);

        if $z0 == 0 goto label1;

        $r4 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z1 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean implementsInterface(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,boolean)>(r3, 1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isMethodSubsignature(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r4;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0, r1;
        char[] $r2, $r3;
        boolean $z0, $z1;

        r4 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r3, $r2);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean isParameterSubsignature(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r0, r1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean isParameterSubsignature(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r0;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r1, r2;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: boolean areParametersEqual(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r1, r2);

        return $z0;
    }

    boolean isSameClassOrSubclassOf(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r2;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r0, $r1, r3;

        r2 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

     label1:
        if r3 != r0 goto label2;

        return 1;

     label2:
        $r1 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding superclass()>();

        r3 = $r1;

        if $r1 != null goto label1;

        return 0;
    }

    boolean mustImplementAbstractMethod(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r0;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r1, $r4, $r5;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r2, r3, r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $r2 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding superclass()>();

        r6 = $r2;

        $z0 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isClass()>();

        if $z0 == 0 goto label3;

        goto label2;

     label1:
        r6 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding superclass()>();

     label2:
        $z5 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isAbstract()>();

        if $z5 == 0 goto label7;

        if r6 != r3 goto label1;

        goto label7;

     label3:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $z1 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean implementsInterface(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,boolean)>(r3, 0);

        if $z1 == 0 goto label6;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $z3 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isAbstract()>();

        if $z3 == 0 goto label4;

        return 0;

     label4:
        $z4 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean implementsInterface(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,boolean)>(r3, 1);

        if $z4 != 0 goto label6;

        return 1;

     label5:
        r6 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding superclass()>();

     label6:
        $z6 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isAbstract()>();

        if $z6 == 0 goto label7;

        $z2 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean implementsInterface(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,boolean)>(r3, 0);

        if $z2 == 0 goto label5;

     label7:
        $z7 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isAbstract()>();

        return $z7;
    }

    boolean mustImplementAbstractMethods()
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r0;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $z0 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isInterface()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $z1 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isAbstract()>();

        if $z1 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r0;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope $r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $r2 = $r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        return $r3;
    }

    org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r0;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r2;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r3;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r1;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r5, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r4 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        if $r4 != $r3 goto label1;

        $r5 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration sourceMethod()>();

        if $r5 == null goto label1;

        $r6 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration sourceMethod()>();

        $r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext> = $r6;

     label1:
        return $r1;
    }

    boolean reportIncompatibleReturnTypeError(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r0;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r1, r3;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r1);

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void incompatibleReturnType(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r1, r3);

        return 1;
    }

    org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] resolvedExceptionTypesFor(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r3;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r2, $r5, $r6;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] r1, $r7;
        int $i0, $i1, i2, $i4;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment $r4;

        r3 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] thrownExceptions>;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        $i1 = $i0 & 33554432;

        if $i1 != 0 goto label1;

        return r1;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z0 = $r2 instanceof org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding;

        if $z0 != 0 goto label2;

        $r7 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] NO_EXCEPTIONS>;

        return $r7;

     label2:
        i2 = lengthof r1;

        goto label4;

     label3:
        $r5 = r1[i2];

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment>;

        $r6 = staticinvoke <org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment,boolean)>($r5, $r4, 1);

        r1[i2] = $r6;

     label4:
        $i4 = (int) -1;

        i2 = i2 + $i4;

        if i2 >= 0 goto label3;

        return r1;
    }

    void verify(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r0;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type> = r1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: void computeMethods()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: void computeInheritedMethods()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: void checkMethods()>();

        return;
    }

    public java.lang.String toString()
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodVerifier r1;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r2;
        java.lang.StringBuffer $r0;
        char[] $r3;
        java.lang.String $r5;
        org.eclipse.jdt.internal.compiler.util.HashtableOfObject $r4;

        r1 := @this: org.eclipse.jdt.internal.compiler.lookup.MethodVerifier;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(10);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("MethodVerifier for type: ");

        $r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding type>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] readableName()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t-inherited methods: ");

        $r4 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodVerifier: org.eclipse.jdt.internal.compiler.util.HashtableOfObject inheritedMethods>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }
}
