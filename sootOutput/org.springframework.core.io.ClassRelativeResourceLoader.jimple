public class org.springframework.core.io.ClassRelativeResourceLoader extends org.springframework.core.io.DefaultResourceLoader
{
    private final java.lang.Class clazz;

    public void <init>(java.lang.Class)
    {
        java.lang.Class r1;
        org.springframework.core.io.ClassRelativeResourceLoader r0;
        java.lang.ClassLoader $r2;

        r0 := @this: org.springframework.core.io.ClassRelativeResourceLoader;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.springframework.core.io.DefaultResourceLoader: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Class must not be null");

        r0.<org.springframework.core.io.ClassRelativeResourceLoader: java.lang.Class clazz> = r1;

        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke r0.<org.springframework.core.io.ClassRelativeResourceLoader: void setClassLoader(java.lang.ClassLoader)>($r2);

        return;
    }

    protected org.springframework.core.io.Resource getResourceByPath(java.lang.String)
    {
        org.springframework.core.io.ClassRelativeResourceLoader r2;
        org.springframework.core.io.ClassRelativeResourceLoader$ClassRelativeContextResource $r0;
        java.lang.Class $r3;
        java.lang.String r1;

        r2 := @this: org.springframework.core.io.ClassRelativeResourceLoader;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.springframework.core.io.ClassRelativeResourceLoader$ClassRelativeContextResource;

        $r3 = r2.<org.springframework.core.io.ClassRelativeResourceLoader: java.lang.Class clazz>;

        specialinvoke $r0.<org.springframework.core.io.ClassRelativeResourceLoader$ClassRelativeContextResource: void <init>(java.lang.String,java.lang.Class)>(r1, $r3);

        return $r0;
    }
}
