public final class org.apache.neethi.util.PolicyComparator extends java.lang.Object
{

    private void <init>()
    {
        org.apache.neethi.util.PolicyComparator r0;

        r0 := @this: org.apache.neethi.util.PolicyComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean compare(org.apache.neethi.Policy, org.apache.neethi.Policy)
    {
        java.lang.String $r1, $r3, $r4, $r5, $r6, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        boolean $z0, $z1;
        org.apache.neethi.Policy r0, r2;
        java.util.List $r7, $r8;

        r0 := @parameter0: org.apache.neethi.Policy;

        r2 := @parameter1: org.apache.neethi.Policy;

        $r1 = virtualinvoke r0.<org.apache.neethi.Policy: java.lang.String getName()>();

        if $r1 == null goto label2;

        $r14 = virtualinvoke r2.<org.apache.neethi.Policy: java.lang.String getName()>();

        if $r14 == null goto label1;

        $r15 = virtualinvoke r0.<org.apache.neethi.Policy: java.lang.String getName()>();

        $r16 = virtualinvoke r2.<org.apache.neethi.Policy: java.lang.String getName()>();

        virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        goto label3;

     label1:
        return 0;

     label2:
        $r3 = virtualinvoke r2.<org.apache.neethi.Policy: java.lang.String getName()>();

        if $r3 == null goto label3;

        return 0;

     label3:
        $r4 = virtualinvoke r0.<org.apache.neethi.Policy: java.lang.String getNamespace()>();

        if $r4 == null goto label4;

        $r12 = virtualinvoke r0.<org.apache.neethi.Policy: java.lang.String getNamespace()>();

        $r13 = virtualinvoke r2.<org.apache.neethi.Policy: java.lang.String getNamespace()>();

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        $r5 = virtualinvoke r0.<org.apache.neethi.Policy: java.lang.String getId()>();

        if $r5 == null goto label6;

        $r9 = virtualinvoke r2.<org.apache.neethi.Policy: java.lang.String getId()>();

        if $r9 == null goto label5;

        $r10 = virtualinvoke r0.<org.apache.neethi.Policy: java.lang.String getId()>();

        $r11 = virtualinvoke r2.<org.apache.neethi.Policy: java.lang.String getId()>();

        virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        goto label7;

     label5:
        return 0;

     label6:
        $r6 = virtualinvoke r2.<org.apache.neethi.Policy: java.lang.String getId()>();

        if $r6 == null goto label7;

        return 0;

     label7:
        $r7 = virtualinvoke r0.<org.apache.neethi.Policy: java.util.List getPolicyComponents()>();

        $r8 = virtualinvoke r2.<org.apache.neethi.Policy: java.util.List getPolicyComponents()>();

        $z0 = staticinvoke <org.apache.neethi.util.PolicyComparator: boolean compare(java.util.List,java.util.List)>($r7, $r8);

        return $z0;
    }

    public static boolean compare(org.apache.neethi.PolicyComponent, org.apache.neethi.PolicyComponent)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.apache.neethi.All $r8, $r9;
        org.apache.neethi.Assertion $r4, $r5;
        org.apache.neethi.ExactlyOne $r6, $r7;
        org.apache.neethi.Policy $r10, $r11;
        org.apache.neethi.PolicyComponent r0, r2;
        java.lang.Class $r1, $r3;

        r0 := @parameter0: org.apache.neethi.PolicyComponent;

        r2 := @parameter1: org.apache.neethi.PolicyComponent;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = r0 instanceof org.apache.neethi.Policy;

        if $z1 == 0 goto label2;

        $r11 = (org.apache.neethi.Policy) r0;

        $r10 = (org.apache.neethi.Policy) r2;

        $z8 = staticinvoke <org.apache.neethi.util.PolicyComparator: boolean compare(org.apache.neethi.Policy,org.apache.neethi.Policy)>($r11, $r10);

        return $z8;

     label2:
        $z2 = r0 instanceof org.apache.neethi.All;

        if $z2 == 0 goto label3;

        $r9 = (org.apache.neethi.All) r0;

        $r8 = (org.apache.neethi.All) r2;

        $z7 = staticinvoke <org.apache.neethi.util.PolicyComparator: boolean compare(org.apache.neethi.All,org.apache.neethi.All)>($r9, $r8);

        return $z7;

     label3:
        $z3 = r0 instanceof org.apache.neethi.ExactlyOne;

        if $z3 == 0 goto label4;

        $r7 = (org.apache.neethi.ExactlyOne) r0;

        $r6 = (org.apache.neethi.ExactlyOne) r2;

        $z6 = staticinvoke <org.apache.neethi.util.PolicyComparator: boolean compare(org.apache.neethi.ExactlyOne,org.apache.neethi.ExactlyOne)>($r7, $r6);

        return $z6;

     label4:
        $z4 = r0 instanceof org.apache.neethi.Assertion;

        if $z4 == 0 goto label5;

        $r5 = (org.apache.neethi.Assertion) r0;

        $r4 = (org.apache.neethi.Assertion) r2;

        $z5 = staticinvoke <org.apache.neethi.util.PolicyComparator: boolean compare(org.apache.neethi.Assertion,org.apache.neethi.Assertion)>($r5, $r4);

        return $z5;

     label5:
        return 0;
    }

    public static boolean compare(org.apache.neethi.All, org.apache.neethi.All)
    {
        java.util.List $r1, $r3;
        org.apache.neethi.All r0, r2;
        boolean $z0;

        r0 := @parameter0: org.apache.neethi.All;

        r2 := @parameter1: org.apache.neethi.All;

        $r1 = virtualinvoke r0.<org.apache.neethi.All: java.util.List getPolicyComponents()>();

        $r3 = virtualinvoke r2.<org.apache.neethi.All: java.util.List getPolicyComponents()>();

        $z0 = staticinvoke <org.apache.neethi.util.PolicyComparator: boolean compare(java.util.List,java.util.List)>($r1, $r3);

        return $z0;
    }

    public static boolean compare(org.apache.neethi.ExactlyOne, org.apache.neethi.ExactlyOne)
    {
        java.util.List $r1, $r3;
        org.apache.neethi.ExactlyOne r0, r2;
        boolean $z0;

        r0 := @parameter0: org.apache.neethi.ExactlyOne;

        r2 := @parameter1: org.apache.neethi.ExactlyOne;

        $r1 = virtualinvoke r0.<org.apache.neethi.ExactlyOne: java.util.List getPolicyComponents()>();

        $r3 = virtualinvoke r2.<org.apache.neethi.ExactlyOne: java.util.List getPolicyComponents()>();

        $z0 = staticinvoke <org.apache.neethi.util.PolicyComparator: boolean compare(java.util.List,java.util.List)>($r1, $r3);

        return $z0;
    }

    public static boolean compare(org.apache.neethi.Assertion, org.apache.neethi.Assertion)
    {
        org.apache.neethi.Assertion r0, r2;
        javax.xml.namespace.QName $r1, $r3;
        boolean $z0;

        r0 := @parameter0: org.apache.neethi.Assertion;

        r2 := @parameter1: org.apache.neethi.Assertion;

        $r1 = interfaceinvoke r0.<org.apache.neethi.Assertion: javax.xml.namespace.QName getName()>();

        $r3 = interfaceinvoke r2.<org.apache.neethi.Assertion: javax.xml.namespace.QName getName()>();

        $z0 = virtualinvoke $r1.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    private static boolean compare(java.util.List, java.util.List)
    {
        java.util.Iterator $r2, $r5;
        java.util.List r0, r1;
        int $i0, $i1;
        org.apache.neethi.PolicyComponent r4, r7;
        java.lang.Object $r3, $r6;
        boolean $z0, $z1, $z2, z3;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.neethi.PolicyComponent) $r3;

        z3 = 0;

        $r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.neethi.PolicyComponent) $r6;

        $z2 = staticinvoke <org.apache.neethi.util.PolicyComparator: boolean compare(org.apache.neethi.PolicyComponent,org.apache.neethi.PolicyComponent)>(r4, r7);

        if $z2 == 0 goto label4;

        z3 = 1;

        goto label5;

     label4:
        goto label3;

     label5:
        if z3 != 0 goto label6;

        return 0;

     label6:
        goto label2;

     label7:
        return 1;
    }
}
