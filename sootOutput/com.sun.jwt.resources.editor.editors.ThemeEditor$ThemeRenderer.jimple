class com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer extends javax.swing.table.DefaultTableCellRenderer
{
    private java.util.Map face;
    private java.util.Map size;
    private java.util.Map style;
    final com.sun.jwt.resources.editor.editors.ThemeEditor this$0;

    public void <init>(com.sun.jwt.resources.editor.editors.ThemeEditor)
    {
        java.util.HashMap $r2, $r3, $r4;
        java.lang.Integer $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26;
        java.util.Map $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25;
        com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer r0;
        com.sun.jwt.resources.editor.editors.ThemeEditor r1;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer;

        r1 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: com.sun.jwt.resources.editor.editors.ThemeEditor this$0> = r1;

        specialinvoke r0.<javax.swing.table.DefaultTableCellRenderer: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: java.util.Map face> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: java.util.Map size> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: java.util.Map style> = $r4;

        $r5 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: java.util.Map face>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(32);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, "MONOSPACE");

        $r7 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: java.util.Map face>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(64);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, "PROPORTIONAL");

        $r9 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: java.util.Map face>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, "SYSTEM");

        $r11 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: java.util.Map size>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, "LARGE");

        $r13 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: java.util.Map size>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, "MEDIUM");

        $r15 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: java.util.Map size>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, "SMALL");

        $r17 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: java.util.Map style>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, "BOLD");

        $r19 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: java.util.Map style>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, "ITALIC");

        $r21 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: java.util.Map style>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, "BOLD ITALIC");

        $r23 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: java.util.Map style>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, "PLAIN");

        $r25 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: java.util.Map style>;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, "UNDERLINED");

        return;
    }

    public java.awt.Component getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int)
    {
        byte[] $r24, $r27, $r29, $r32;
        com.sun.jwt.resources.editor.editors.LWUITImageIcon $r105;
        java.lang.Integer $r73, $r79, $r85;
        byte $b11, $b12, $b14, $b15;
        java.util.Map $r72, $r78, $r84;
        com.sun.lwuit.util.EditableResources $r57, $r61, $r63, $r66, $r68, $r91, $r94;
        java.lang.StringBuilder $r5, $r6, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r20, $r22, $r40, $r41, $r45, $r46, $r49, $r50, $r53, $r71, $r76, $r77, $r82, $r83, $r88, $r104, $r106, $r108, $r109, $r110;
        java.lang.Object[] $r35, r101;
        javax.swing.JTable r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i13, $i16, $i17, $i18, $i19, $i20, i21, i22, i23, i24, i25, i26, i27, i28, $i29, $i31, $i33, $i34, $i35, $i37, $i38, $i39, $i41;
        com.sun.jwt.resources.editor.editors.ColorIcon $r107;
        com.sun.lwuit.Image $r64, r98;
        java.lang.Object r2, $r23, $r37, $r42, $r47, $r51, $r74, $r80, $r86;
        com.sun.lwuit.Font $r95, r96;
        java.lang.String $r3, $r7, $r12, $r17, $r19, $r21, $r26, $r31, $r39, $r44, $r54, $r55, $r75, $r81, $r87, $r89, r97, r99, r102, r103;
        java.lang.Number $r28, $r33, $r38, $r43, $r48, $r52;
        com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer r0;
        com.sun.jwt.resources.editor.editors.ThemeEditor $r56, $r60, $r62, $r65, $r67, $r90, $r93;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        float $f0, $f1;
        java.lang.String[] $r25, $r30, $r58, $r69, $r92;
        com.sun.lwuit.plaf.Border r100;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer;

        r1 := @parameter0: javax.swing.JTable;

        r2 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        specialinvoke r0.<javax.swing.table.DefaultTableCellRenderer: java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)>(r1, r2, z0, z1, i0, i1);

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: void setIcon(javax.swing.Icon)>(null);

        if i1 != 1 goto label21;

        $z2 = r2 instanceof com.sun.lwuit.Font;

        if $z2 == 0 goto label04;

        r96 = (com.sun.lwuit.Font) r2;

        $r67 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: com.sun.jwt.resources.editor.editors.ThemeEditor this$0>;

        $r68 = staticinvoke <com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.lwuit.util.EditableResources access$1000(com.sun.jwt.resources.editor.editors.ThemeEditor)>($r67);

        $r69 = virtualinvoke $r68.<com.sun.lwuit.util.EditableResources: java.lang.String[] getFontResourceNames()>();

        if $r69 == null goto label03;

        $r90 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: com.sun.jwt.resources.editor.editors.ThemeEditor this$0>;

        $r91 = staticinvoke <com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.lwuit.util.EditableResources access$1000(com.sun.jwt.resources.editor.editors.ThemeEditor)>($r90);

        $r92 = virtualinvoke $r91.<com.sun.lwuit.util.EditableResources: java.lang.String[] getFontResourceNames()>();

        i21 = lengthof $r92;

        i22 = 0;

     label01:
        if i22 >= i21 goto label03;

        r97 = $r92[i22];

        $r93 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: com.sun.jwt.resources.editor.editors.ThemeEditor this$0>;

        $r94 = staticinvoke <com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.lwuit.util.EditableResources access$1000(com.sun.jwt.resources.editor.editors.ThemeEditor)>($r93);

        $r95 = virtualinvoke $r94.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.Font getFont(java.lang.String)>(r97);

        if r96 != $r95 goto label02;

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: void setText(java.lang.String)>(r97);

        return r0;

     label02:
        i22 = i22 + 1;

        goto label01;

     label03:
        $r104 = new java.lang.StringBuilder;

        specialinvoke $r104.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("System: ");

        $r72 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: java.util.Map face>;

        $i18 = virtualinvoke r96.<com.sun.lwuit.Font: int getFace()>();

        $r73 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i18);

        $r74 = interfaceinvoke $r72.<java.util.Map: java.lang.Object get(java.lang.Object)>($r73);

        $r75 = (java.lang.String) $r74;

        $r76 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r78 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: java.util.Map style>;

        $i19 = virtualinvoke r96.<com.sun.lwuit.Font: int getStyle()>();

        $r79 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19);

        $r80 = interfaceinvoke $r78.<java.util.Map: java.lang.Object get(java.lang.Object)>($r79);

        $r81 = (java.lang.String) $r80;

        $r82 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r84 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: java.util.Map size>;

        $i20 = virtualinvoke r96.<com.sun.lwuit.Font: int getSize()>();

        $r85 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i20);

        $r86 = interfaceinvoke $r84.<java.util.Map: java.lang.Object get(java.lang.Object)>($r85);

        $r87 = (java.lang.String) $r86;

        $r88 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r87);

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: void setText(java.lang.String)>($r89);

        return r0;

     label04:
        $z3 = r2 instanceof com.sun.lwuit.Image;

        if $z3 == 0 goto label09;

        r98 = (com.sun.lwuit.Image) r2;

        $r56 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: com.sun.jwt.resources.editor.editors.ThemeEditor this$0>;

        $r57 = staticinvoke <com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.lwuit.util.EditableResources access$1000(com.sun.jwt.resources.editor.editors.ThemeEditor)>($r56);

        $r58 = virtualinvoke $r57.<com.sun.lwuit.util.EditableResources: java.lang.String[] getResourceNames()>();

        i23 = lengthof $r58;

        i24 = 0;

     label05:
        if i24 >= i23 goto label08;

        r99 = $r58[i24];

        $r60 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: com.sun.jwt.resources.editor.editors.ThemeEditor this$0>;

        $r61 = staticinvoke <com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.lwuit.util.EditableResources access$1000(com.sun.jwt.resources.editor.editors.ThemeEditor)>($r60);

        $z6 = virtualinvoke $r61.<com.sun.lwuit.util.EditableResources: boolean isImage(java.lang.String)>(r99);

        if $z6 != 0 goto label06;

        $r65 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: com.sun.jwt.resources.editor.editors.ThemeEditor this$0>;

        $r66 = staticinvoke <com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.lwuit.util.EditableResources access$1000(com.sun.jwt.resources.editor.editors.ThemeEditor)>($r65);

        $z7 = virtualinvoke $r66.<com.sun.lwuit.util.EditableResources: boolean isAnimation(java.lang.String)>(r99);

        if $z7 == 0 goto label07;

     label06:
        $r62 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: com.sun.jwt.resources.editor.editors.ThemeEditor this$0>;

        $r63 = staticinvoke <com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.lwuit.util.EditableResources access$1000(com.sun.jwt.resources.editor.editors.ThemeEditor)>($r62);

        $r64 = virtualinvoke $r63.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.Image getImage(java.lang.String)>(r99);

        if r98 != $r64 goto label07;

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: void setText(java.lang.String)>(r99);

        goto label08;

     label07:
        i24 = i24 + 1;

        goto label05;

     label08:
        $r105 = new com.sun.jwt.resources.editor.editors.LWUITImageIcon;

        specialinvoke $r105.<com.sun.jwt.resources.editor.editors.LWUITImageIcon: void <init>(com.sun.lwuit.Image)>(r98);

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: void setIcon(javax.swing.Icon)>($r105);

        return r0;

     label09:
        $z4 = r2 instanceof com.sun.lwuit.plaf.Border;

        if $z4 == 0 goto label10;

        r100 = (com.sun.lwuit.plaf.Border) r2;

        $r55 = staticinvoke <com.sun.lwuit.plaf.Accessor: java.lang.String toString(com.sun.lwuit.plaf.Border)>(r100);

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: void setText(java.lang.String)>($r55);

        return r0;

     label10:
        $z5 = r2 instanceof java.lang.Object[];

        if $z5 == 0 goto label11;

        $r35 = (java.lang.Object[]) r2;

        r101 = (java.lang.Object[]) $r35;

        $r106 = new java.lang.StringBuilder;

        specialinvoke $r106.<java.lang.StringBuilder: void <init>()>();

        $r37 = r101[0];

        $r38 = (java.lang.Number) $r37;

        $i16 = virtualinvoke $r38.<java.lang.Number: int intValue()>();

        $r39 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i16);

        $r40 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r42 = r101[1];

        $r43 = (java.lang.Number) $r42;

        $i17 = virtualinvoke $r43.<java.lang.Number: int intValue()>();

        $r44 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i17);

        $r45 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" x: ");

        $r47 = r101[2];

        $r48 = (java.lang.Number) $r47;

        $f0 = virtualinvoke $r48.<java.lang.Number: float floatValue()>();

        $r49 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" y: ");

        $r51 = r101[3];

        $r52 = (java.lang.Number) $r51;

        $f1 = virtualinvoke $r52.<java.lang.Number: float floatValue()>();

        $r53 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: void setText(java.lang.String)>($r54);

        return r0;

     label11:
        $r23 = virtualinvoke r1.<javax.swing.JTable: java.lang.Object getValueAt(int,int)>(i0, 0);

        r102 = (java.lang.String) $r23;

        $i7 = virtualinvoke r102.<java.lang.String: int indexOf(java.lang.String)>("Color");

        $i31 = (int) -1;

        if $i7 <= $i31 goto label12;

        $r107 = new com.sun.jwt.resources.editor.editors.ColorIcon;

        specialinvoke $r107.<com.sun.jwt.resources.editor.editors.ColorIcon: void <init>()>();

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: void setIcon(javax.swing.Icon)>($r107);

        return r0;

     label12:
        $i8 = virtualinvoke r102.<java.lang.String: int indexOf(java.lang.String)>("bgAlign");

        $i33 = (int) -1;

        if $i8 <= $i33 goto label16;

        i25 = 0;

        i26 = 0;

     label13:
        $r29 = <com.sun.jwt.resources.editor.editors.AddThemeEntry: byte[] IMAGE_ALIGNMENT_VALUES>;

        $i13 = lengthof $r29;

        if i26 >= $i13 goto label15;

        $r32 = <com.sun.jwt.resources.editor.editors.AddThemeEntry: byte[] IMAGE_ALIGNMENT_VALUES>;

        $b14 = $r32[i26];

        $r33 = (java.lang.Number) r2;

        $b15 = virtualinvoke $r33.<java.lang.Number: byte byteValue()>();

        $i34 = (int) $b14;

        $i35 = (int) $b15;

        if $i34 != $i35 goto label14;

        goto label15;

     label14:
        i25 = i25 + 1;

        i26 = i26 + 1;

        goto label13;

     label15:
        $r30 = <com.sun.jwt.resources.editor.editors.AddThemeEntry: java.lang.String[] IMAGE_ALIGNMENT_STRINGS>;

        $r31 = $r30[i25];

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: void setText(java.lang.String)>($r31);

        return r0;

     label16:
        $i9 = virtualinvoke r102.<java.lang.String: int indexOf(java.lang.String)>("bgType");

        $i37 = (int) -1;

        if $i9 <= $i37 goto label20;

        i27 = 0;

        i28 = 0;

     label17:
        $r24 = <com.sun.jwt.resources.editor.editors.AddThemeEntry: byte[] BACKGROUND_VALUES>;

        $i10 = lengthof $r24;

        if i28 >= $i10 goto label19;

        $r27 = <com.sun.jwt.resources.editor.editors.AddThemeEntry: byte[] BACKGROUND_VALUES>;

        $b11 = $r27[i28];

        $r28 = (java.lang.Number) r2;

        $b12 = virtualinvoke $r28.<java.lang.Number: byte byteValue()>();

        $i38 = (int) $b11;

        $i39 = (int) $b12;

        if $i38 != $i39 goto label18;

        goto label19;

     label18:
        i27 = i27 + 1;

        i28 = i28 + 1;

        goto label17;

     label19:
        $r25 = <com.sun.jwt.resources.editor.editors.AddThemeEntry: java.lang.String[] BACKGROUND_STRINGS>;

        $r26 = $r25[i27];

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: void setText(java.lang.String)>($r26);

        return r0;

     label20:
        goto label27;

     label21:
        r103 = (java.lang.String) r2;

        if r103 != null goto label22;

        return r0;

     label22:
        $i2 = virtualinvoke r103.<java.lang.String: int indexOf(int)>(35);

        $i41 = (int) -1;

        if $i2 <= $i41 goto label25;

        $i3 = virtualinvoke r103.<java.lang.String: int indexOf(int)>(46);

        if $i3 >= 0 goto label23;

        $i6 = $i2 + 1;

        r103 = virtualinvoke r103.<java.lang.String: java.lang.String substring(int)>($i6);

        goto label24;

     label23:
        $r108 = new java.lang.StringBuilder;

        specialinvoke $r108.<java.lang.StringBuilder: void <init>()>();

        $i4 = $i3 + 1;

        $r19 = virtualinvoke r103.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

        $r20 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $i5 = $i2 + 1;

        $r21 = virtualinvoke r103.<java.lang.String: java.lang.String substring(int)>($i5);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        r103 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

     label24:
        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: void setText(java.lang.String)>(r103);

     label25:
        $i29 = virtualinvoke r103.<java.lang.String: int indexOf(int)>(46);

        if $i29 >= 0 goto label26;

        $r109 = new java.lang.StringBuilder;

        specialinvoke $r109.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<html><body><b>");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: void setText(java.lang.String)>($r7);

        $r110 = new java.lang.StringBuilder;

        specialinvoke $r110.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<html><body>");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r12 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: java.lang.String getKeyTooltip(java.lang.String)>(r103);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br>");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This is a default property affecting all components<br>");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("that do not override this attribute explicitly.<br>");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: void setToolTipText(java.lang.String)>($r17);

        goto label27;

     label26:
        $r3 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: java.lang.String getKeyTooltip(java.lang.String)>(r103);

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer: void setToolTipText(java.lang.String)>($r3);

     label27:
        return r0;
    }

    private java.lang.String getKeyTooltip(java.lang.String)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i11, $i13, $i15, $i17, $i19, $i21, $i23;
        java.lang.String r0;
        com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer r1;

        r1 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeRenderer;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("fgColor");

        $i9 = (int) -1;

        if $i0 <= $i9 goto label1;

        return "Foreground color, changes font and border color";

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("bgColor");

        $i11 = (int) -1;

        if $i1 <= $i11 goto label2;

        return "Background color, changes background fill overriden by transparency and bgImage";

     label2:
        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("font");

        $i13 = (int) -1;

        if $i2 <= $i13 goto label3;

        return "Typeface to use, either device native fonts (system) or bitmap fonts generated on the desktop";

     label3:
        $i3 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("bgImage");

        $i15 = (int) -1;

        if $i3 <= $i15 goto label4;

        return "Image to stretch or tile on the background of the component";

     label4:
        $i4 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("transparency");

        $i17 = (int) -1;

        if $i4 <= $i17 goto label5;

        return "Opacity of the background as a number between 255 and 0 where 255 is completely opaque";

     label5:
        $i5 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("scale");

        $i19 = (int) -1;

        if $i5 <= $i19 goto label6;

        return "Indicates whether the bgImage should be scaled or tiled";

     label6:
        $i6 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("padding");

        $i21 = (int) -1;

        if $i6 <= $i21 goto label7;

        return "Determins the whitespace within the component";

     label7:
        $i7 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("margin");

        $i23 = (int) -1;

        if $i7 <= $i23 goto label8;

        return "Determins the whitespace around the component";

     label8:
        return "";
    }
}
