class org.waveprotocol.box.server.waveserver.ImportServlet$1 extends java.lang.Object implements org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener
{
    final java.io.StringWriter val$error;
    final org.waveprotocol.box.server.waveserver.ImportServlet this$0;

    void <init>(org.waveprotocol.box.server.waveserver.ImportServlet, java.io.StringWriter)
    {
        org.waveprotocol.box.server.waveserver.ImportServlet$1 r0;
        org.waveprotocol.box.server.waveserver.ImportServlet r1;
        java.io.StringWriter r2;

        r0 := @this: org.waveprotocol.box.server.waveserver.ImportServlet$1;

        r1 := @parameter0: org.waveprotocol.box.server.waveserver.ImportServlet;

        r2 := @parameter1: java.io.StringWriter;

        r0.<org.waveprotocol.box.server.waveserver.ImportServlet$1: org.waveprotocol.box.server.waveserver.ImportServlet this$0> = r1;

        r0.<org.waveprotocol.box.server.waveserver.ImportServlet$1: java.io.StringWriter val$error> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onSuccess(int, org.waveprotocol.wave.model.version.HashedVersion, long)
    {
        int i0;
        org.waveprotocol.wave.model.version.HashedVersion r1;
        org.waveprotocol.box.server.waveserver.ImportServlet$1 r0;
        long l1;

        r0 := @this: org.waveprotocol.box.server.waveserver.ImportServlet$1;

        i0 := @parameter0: int;

        r1 := @parameter1: org.waveprotocol.wave.model.version.HashedVersion;

        l1 := @parameter2: long;

        return;
    }

    public void onFailure(java.lang.String)
    {
        org.waveprotocol.box.server.waveserver.ImportServlet$1 r0;
        java.lang.String r1;
        java.io.StringWriter $r2;

        r0 := @this: org.waveprotocol.box.server.waveserver.ImportServlet$1;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.box.server.waveserver.ImportServlet$1: java.io.StringWriter val$error>;

        virtualinvoke $r2.<java.io.StringWriter: void write(java.lang.String)>(r1);

        return;
    }
}
