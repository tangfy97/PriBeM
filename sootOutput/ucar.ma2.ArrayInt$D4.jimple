public class ucar.ma2.ArrayInt$D4 extends ucar.ma2.ArrayInt
{
    private ucar.ma2.Index4D ix;

    public void <init>(int, int, int, int)
    {
        ucar.ma2.Index4D $r3;
        ucar.ma2.ArrayInt$D4 r0;
        int[] $r1;
        ucar.ma2.Index $r2;
        int i0, i1, i2, i3;

        r0 := @this: ucar.ma2.ArrayInt$D4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = newarray (int)[4];

        $r1[0] = i0;

        $r1[1] = i1;

        $r1[2] = i2;

        $r1[3] = i3;

        specialinvoke r0.<ucar.ma2.ArrayInt: void <init>(int[])>($r1);

        $r2 = r0.<ucar.ma2.ArrayInt$D4: ucar.ma2.Index indexCalc>;

        $r3 = (ucar.ma2.Index4D) $r2;

        r0.<ucar.ma2.ArrayInt$D4: ucar.ma2.Index4D ix> = $r3;

        return;
    }

    private void <init>(ucar.ma2.Index, int[])
    {
        ucar.ma2.ArrayInt$D4 r0;
        ucar.ma2.Index4D $r4;
        ucar.ma2.Index r1, $r3;
        int[] r2;

        r0 := @this: ucar.ma2.ArrayInt$D4;

        r1 := @parameter0: ucar.ma2.Index;

        r2 := @parameter1: int[];

        specialinvoke r0.<ucar.ma2.ArrayInt: void <init>(ucar.ma2.Index,int[])>(r1, r2);

        $r3 = r0.<ucar.ma2.ArrayInt$D4: ucar.ma2.Index indexCalc>;

        $r4 = (ucar.ma2.Index4D) $r3;

        r0.<ucar.ma2.ArrayInt$D4: ucar.ma2.Index4D ix> = $r4;

        return;
    }

    public int get(int, int, int, int)
    {
        ucar.ma2.Index4D $r1;
        ucar.ma2.ArrayInt$D4 r0;
        int[] $r2;
        int i0, i1, i2, i3, $i4, $i5;

        r0 := @this: ucar.ma2.ArrayInt$D4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r2 = r0.<ucar.ma2.ArrayInt$D4: int[] storage>;

        $r1 = r0.<ucar.ma2.ArrayInt$D4: ucar.ma2.Index4D ix>;

        $i4 = virtualinvoke $r1.<ucar.ma2.Index4D: int setDirect(int,int,int,int)>(i0, i1, i2, i3);

        $i5 = $r2[$i4];

        return $i5;
    }

    public void set(int, int, int, int, int)
    {
        ucar.ma2.Index4D $r1;
        ucar.ma2.ArrayInt$D4 r0;
        int[] $r2;
        int i0, i1, i2, i3, $i4, i5;

        r0 := @this: ucar.ma2.ArrayInt$D4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i5 := @parameter4: int;

        $r2 = r0.<ucar.ma2.ArrayInt$D4: int[] storage>;

        $r1 = r0.<ucar.ma2.ArrayInt$D4: ucar.ma2.Index4D ix>;

        $i4 = virtualinvoke $r1.<ucar.ma2.Index4D: int setDirect(int,int,int,int)>(i0, i1, i2, i3);

        $r2[$i4] = i5;

        return;
    }

    void <init>(ucar.ma2.Index, int[], ucar.ma2.ArrayInt$1)
    {
        ucar.ma2.ArrayInt$D4 r0;
        ucar.ma2.Index r1;
        int[] r2;
        ucar.ma2.ArrayInt$1 r3;

        r0 := @this: ucar.ma2.ArrayInt$D4;

        r1 := @parameter0: ucar.ma2.Index;

        r2 := @parameter1: int[];

        r3 := @parameter2: ucar.ma2.ArrayInt$1;

        specialinvoke r0.<ucar.ma2.ArrayInt$D4: void <init>(ucar.ma2.Index,int[])>(r1, r2);

        return;
    }
}
