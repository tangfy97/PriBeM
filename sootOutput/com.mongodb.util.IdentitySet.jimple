public class com.mongodb.util.IdentitySet extends java.lang.Object implements java.lang.Iterable
{
    final java.util.IdentityHashMap _map;

    public void <init>()
    {
        com.mongodb.util.IdentitySet r0;
        java.util.IdentityHashMap $r1;

        r0 := @this: com.mongodb.util.IdentitySet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.IdentityHashMap;

        specialinvoke $r1.<java.util.IdentityHashMap: void <init>()>();

        r0.<com.mongodb.util.IdentitySet: java.util.IdentityHashMap _map> = $r1;

        return;
    }

    public void <init>(java.lang.Iterable)
    {
        java.util.IdentityHashMap $r1;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        com.mongodb.util.IdentitySet r0;
        java.lang.Iterable r2;
        boolean $z0;

        r0 := @this: com.mongodb.util.IdentitySet;

        r2 := @parameter0: java.lang.Iterable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.IdentityHashMap;

        specialinvoke $r1.<java.util.IdentityHashMap: void <init>()>();

        r0.<com.mongodb.util.IdentitySet: java.util.IdentityHashMap _map> = $r1;

        $r3 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<com.mongodb.util.IdentitySet: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        return;
    }

    public boolean add(java.lang.Object)
    {
        java.util.IdentityHashMap $r2;
        java.lang.Object r1, $r3;
        com.mongodb.util.IdentitySet r0;
        boolean $z0;

        r0 := @this: com.mongodb.util.IdentitySet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.mongodb.util.IdentitySet: java.util.IdentityHashMap _map>;

        $r3 = virtualinvoke $r2.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, "a");

        if $r3 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.IdentityHashMap $r2;
        java.lang.Object r1;
        com.mongodb.util.IdentitySet r0;
        boolean $z0;

        r0 := @this: com.mongodb.util.IdentitySet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.mongodb.util.IdentitySet: java.util.IdentityHashMap _map>;

        $z0 = virtualinvoke $r2.<java.util.IdentityHashMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public void remove(java.lang.Object)
    {
        java.lang.Object r1;
        com.mongodb.util.IdentitySet r0;
        java.util.IdentityHashMap $r2;

        r0 := @this: com.mongodb.util.IdentitySet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.mongodb.util.IdentitySet: java.util.IdentityHashMap _map>;

        virtualinvoke $r2.<java.util.IdentityHashMap: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public void removeall(java.lang.Iterable)
    {
        java.util.IdentityHashMap $r4;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        com.mongodb.util.IdentitySet r3;
        java.lang.Iterable r0;
        boolean $z0;

        r3 := @this: com.mongodb.util.IdentitySet;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = r3.<com.mongodb.util.IdentitySet: java.util.IdentityHashMap _map>;

        virtualinvoke $r4.<java.util.IdentityHashMap: java.lang.Object remove(java.lang.Object)>($r2);

        goto label1;

     label2:
        return;
    }

    public void clear()
    {
        com.mongodb.util.IdentitySet r0;
        java.util.IdentityHashMap $r1;

        r0 := @this: com.mongodb.util.IdentitySet;

        $r1 = r0.<com.mongodb.util.IdentitySet: java.util.IdentityHashMap _map>;

        virtualinvoke $r1.<java.util.IdentityHashMap: void clear()>();

        return;
    }

    public int size()
    {
        int $i0;
        com.mongodb.util.IdentitySet r0;
        java.util.IdentityHashMap $r1;

        r0 := @this: com.mongodb.util.IdentitySet;

        $r1 = r0.<com.mongodb.util.IdentitySet: java.util.IdentityHashMap _map>;

        $i0 = virtualinvoke $r1.<java.util.IdentityHashMap: int size()>();

        return $i0;
    }

    public java.util.Iterator iterator()
    {
        java.util.IdentityHashMap $r1;
        java.util.Iterator $r3;
        java.util.Set $r2;
        com.mongodb.util.IdentitySet r0;

        r0 := @this: com.mongodb.util.IdentitySet;

        $r1 = r0.<com.mongodb.util.IdentitySet: java.util.IdentityHashMap _map>;

        $r2 = virtualinvoke $r1.<java.util.IdentityHashMap: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        return $r3;
    }

    public void addAll(java.util.Collection)
    {
        java.util.Iterator $r1;
        java.util.Collection r0;
        java.lang.Object $r2;
        com.mongodb.util.IdentitySet r3;
        boolean $z0;

        r3 := @this: com.mongodb.util.IdentitySet;

        r0 := @parameter0: java.util.Collection;

        $r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r3.<com.mongodb.util.IdentitySet: boolean add(java.lang.Object)>($r2);

        goto label1;

     label2:
        return;
    }

    public void addAll(com.mongodb.util.IdentitySet)
    {
        java.util.Iterator $r1;
        java.lang.Object $r2;
        com.mongodb.util.IdentitySet r0, r3;
        boolean $z0;

        r3 := @this: com.mongodb.util.IdentitySet;

        r0 := @parameter0: com.mongodb.util.IdentitySet;

        $r1 = virtualinvoke r0.<com.mongodb.util.IdentitySet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r3.<com.mongodb.util.IdentitySet: boolean add(java.lang.Object)>($r2);

        goto label1;

     label2:
        return;
    }

    public void removeAll(java.lang.Iterable)
    {
        java.util.Iterator $r1;
        java.lang.Object $r2;
        com.mongodb.util.IdentitySet r3;
        java.lang.Iterable r0;
        boolean $z0;

        r3 := @this: com.mongodb.util.IdentitySet;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r3.<com.mongodb.util.IdentitySet: void remove(java.lang.Object)>($r2);

        goto label1;

     label2:
        return;
    }
}
