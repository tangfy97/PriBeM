public class org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor extends org.apache.xmlbeans.impl.jam.visitor.MVisitor
{
    private org.apache.xmlbeans.impl.jam.visitor.MVisitor[] mVisitors;

    public void <init>(org.apache.xmlbeans.impl.jam.visitor.MVisitor[])
    {
        org.apache.xmlbeans.impl.jam.visitor.MVisitor[] r1;
        org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor r0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.visitor.MVisitor[];

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.visitor.MVisitor: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null visitors");

        throw $r2;

     label1:
        r0.<org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor[] mVisitors> = r1;

        return;
    }

    public void visit(org.apache.xmlbeans.impl.jam.mutable.MPackage)
    {
        org.apache.xmlbeans.impl.jam.visitor.MVisitor[] $r1, $r2;
        org.apache.xmlbeans.impl.jam.mutable.MPackage r3;
        org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor r0;
        org.apache.xmlbeans.impl.jam.visitor.MVisitor $r4;
        int $i0, i1;

        r0 := @this: org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor;

        r3 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MPackage;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor[] mVisitors>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r2 = r0.<org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor[] mVisitors>;

        $r4 = $r2[i1];

        virtualinvoke $r4.<org.apache.xmlbeans.impl.jam.visitor.MVisitor: void visit(org.apache.xmlbeans.impl.jam.mutable.MPackage)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void visit(org.apache.xmlbeans.impl.jam.mutable.MClass)
    {
        org.apache.xmlbeans.impl.jam.visitor.MVisitor[] $r1, $r2;
        org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor r0;
        org.apache.xmlbeans.impl.jam.visitor.MVisitor $r4;
        int $i0, i1;
        org.apache.xmlbeans.impl.jam.mutable.MClass r3;

        r0 := @this: org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor;

        r3 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MClass;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor[] mVisitors>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r2 = r0.<org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor[] mVisitors>;

        $r4 = $r2[i1];

        virtualinvoke $r4.<org.apache.xmlbeans.impl.jam.visitor.MVisitor: void visit(org.apache.xmlbeans.impl.jam.mutable.MClass)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void visit(org.apache.xmlbeans.impl.jam.mutable.MConstructor)
    {
        org.apache.xmlbeans.impl.jam.visitor.MVisitor[] $r1, $r2;
        org.apache.xmlbeans.impl.jam.mutable.MConstructor r3;
        org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor r0;
        org.apache.xmlbeans.impl.jam.visitor.MVisitor $r4;
        int $i0, i1;

        r0 := @this: org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor;

        r3 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MConstructor;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor[] mVisitors>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r2 = r0.<org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor[] mVisitors>;

        $r4 = $r2[i1];

        virtualinvoke $r4.<org.apache.xmlbeans.impl.jam.visitor.MVisitor: void visit(org.apache.xmlbeans.impl.jam.mutable.MConstructor)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void visit(org.apache.xmlbeans.impl.jam.mutable.MField)
    {
        org.apache.xmlbeans.impl.jam.visitor.MVisitor[] $r1, $r2;
        org.apache.xmlbeans.impl.jam.mutable.MField r3;
        org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor r0;
        org.apache.xmlbeans.impl.jam.visitor.MVisitor $r4;
        int $i0, i1;

        r0 := @this: org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor;

        r3 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MField;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor[] mVisitors>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r2 = r0.<org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor[] mVisitors>;

        $r4 = $r2[i1];

        virtualinvoke $r4.<org.apache.xmlbeans.impl.jam.visitor.MVisitor: void visit(org.apache.xmlbeans.impl.jam.mutable.MField)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void visit(org.apache.xmlbeans.impl.jam.mutable.MMethod)
    {
        org.apache.xmlbeans.impl.jam.visitor.MVisitor[] $r1, $r2;
        org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor r0;
        org.apache.xmlbeans.impl.jam.mutable.MMethod r3;
        org.apache.xmlbeans.impl.jam.visitor.MVisitor $r4;
        int $i0, i1;

        r0 := @this: org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor;

        r3 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MMethod;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor[] mVisitors>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r2 = r0.<org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor[] mVisitors>;

        $r4 = $r2[i1];

        virtualinvoke $r4.<org.apache.xmlbeans.impl.jam.visitor.MVisitor: void visit(org.apache.xmlbeans.impl.jam.mutable.MMethod)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void visit(org.apache.xmlbeans.impl.jam.mutable.MParameter)
    {
        org.apache.xmlbeans.impl.jam.visitor.MVisitor[] $r1, $r2;
        org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor r0;
        org.apache.xmlbeans.impl.jam.visitor.MVisitor $r4;
        int $i0, i1;
        org.apache.xmlbeans.impl.jam.mutable.MParameter r3;

        r0 := @this: org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor;

        r3 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MParameter;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor[] mVisitors>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r2 = r0.<org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor[] mVisitors>;

        $r4 = $r2[i1];

        virtualinvoke $r4.<org.apache.xmlbeans.impl.jam.visitor.MVisitor: void visit(org.apache.xmlbeans.impl.jam.mutable.MParameter)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void visit(org.apache.xmlbeans.impl.jam.mutable.MAnnotation)
    {
        org.apache.xmlbeans.impl.jam.visitor.MVisitor[] $r1, $r2;
        org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor r0;
        org.apache.xmlbeans.impl.jam.visitor.MVisitor $r4;
        org.apache.xmlbeans.impl.jam.mutable.MAnnotation r3;
        int $i0, i1;

        r0 := @this: org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor;

        r3 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MAnnotation;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor[] mVisitors>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r2 = r0.<org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor[] mVisitors>;

        $r4 = $r2[i1];

        virtualinvoke $r4.<org.apache.xmlbeans.impl.jam.visitor.MVisitor: void visit(org.apache.xmlbeans.impl.jam.mutable.MAnnotation)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void visit(org.apache.xmlbeans.impl.jam.mutable.MComment)
    {
        org.apache.xmlbeans.impl.jam.visitor.MVisitor[] $r1, $r2;
        org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor r0;
        org.apache.xmlbeans.impl.jam.visitor.MVisitor $r4;
        int $i0, i1;
        org.apache.xmlbeans.impl.jam.mutable.MComment r3;

        r0 := @this: org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor;

        r3 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MComment;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor[] mVisitors>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r2 = r0.<org.apache.xmlbeans.impl.jam.visitor.CompositeMVisitor: org.apache.xmlbeans.impl.jam.visitor.MVisitor[] mVisitors>;

        $r4 = $r2[i1];

        virtualinvoke $r4.<org.apache.xmlbeans.impl.jam.visitor.MVisitor: void visit(org.apache.xmlbeans.impl.jam.mutable.MComment)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
}
