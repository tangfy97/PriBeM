public class javax.activation.MimeTypeParameterList extends java.lang.Object
{
    private final java.util.Map params;

    public void <init>()
    {
        java.util.HashMap $r1;
        javax.activation.MimeTypeParameterList r0;

        r0 := @this: javax.activation.MimeTypeParameterList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<javax.activation.MimeTypeParameterList: java.util.Map params> = $r1;

        return;
    }

    public void <init>(java.lang.String) throws javax.activation.MimeTypeParseException
    {
        java.util.HashMap $r1;
        java.lang.String r2;
        javax.activation.MimeTypeParameterList r0;

        r0 := @this: javax.activation.MimeTypeParameterList;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<javax.activation.MimeTypeParameterList: java.util.Map params> = $r1;

        virtualinvoke r0.<javax.activation.MimeTypeParameterList: void parse(java.lang.String)>(r2);

        return;
    }

    protected void parse(java.lang.String) throws javax.activation.MimeTypeParseException
    {
        javax.activation.MimeTypeParameterList$RFC2045Parser $r1;
        javax.activation.MimeTypeParseException $r7;
        javax.activation.MimeTypeParameterList r4;
        java.util.Map $r5;
        java.lang.String r0, $r2, $r3, $r6;
        boolean $z0;

        r4 := @this: javax.activation.MimeTypeParameterList;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r7 = new javax.activation.MimeTypeParseException;

        specialinvoke $r7.<javax.activation.MimeTypeParseException: void <init>(java.lang.String)>("parameterList is null");

        throw $r7;

     label1:
        $r1 = new javax.activation.MimeTypeParameterList$RFC2045Parser;

        specialinvoke $r1.<javax.activation.MimeTypeParameterList$RFC2045Parser: void <init>(java.lang.String,javax.activation.MimeTypeParameterList$1)>(r0, null);

     label2:
        $z0 = staticinvoke <javax.activation.MimeTypeParameterList$RFC2045Parser: boolean access$100(javax.activation.MimeTypeParameterList$RFC2045Parser)>($r1);

        if $z0 == 0 goto label3;

        $r2 = staticinvoke <javax.activation.MimeTypeParameterList$RFC2045Parser: java.lang.String access$200(javax.activation.MimeTypeParameterList$RFC2045Parser)>($r1);

        staticinvoke <javax.activation.MimeTypeParameterList$RFC2045Parser: void access$300(javax.activation.MimeTypeParameterList$RFC2045Parser)>($r1);

        $r3 = staticinvoke <javax.activation.MimeTypeParameterList$RFC2045Parser: java.lang.String access$400(javax.activation.MimeTypeParameterList$RFC2045Parser)>($r1);

        $r5 = r4.<javax.activation.MimeTypeParameterList: java.util.Map params>;

        $r6 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r3);

        goto label2;

     label3:
        return;
    }

    public int size()
    {
        int $i0;
        javax.activation.MimeTypeParameterList r0;
        java.util.Map $r1;

        r0 := @this: javax.activation.MimeTypeParameterList;

        $r1 = r0.<javax.activation.MimeTypeParameterList: java.util.Map params>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        javax.activation.MimeTypeParameterList r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: javax.activation.MimeTypeParameterList;

        $r1 = r0.<javax.activation.MimeTypeParameterList: java.util.Map params>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public java.lang.String get(java.lang.String)
    {
        javax.activation.MimeTypeParameterList r0;
        java.util.Map $r2;
        java.lang.Object $r4;
        java.lang.String r1, $r3, $r5;

        r0 := @this: javax.activation.MimeTypeParameterList;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<javax.activation.MimeTypeParameterList: java.util.Map params>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    public void set(java.lang.String, java.lang.String)
    {
        javax.activation.MimeTypeParameterList r0;
        java.util.Map $r2;
        java.lang.String r1, $r3, r4;

        r0 := @this: javax.activation.MimeTypeParameterList;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r2 = r0.<javax.activation.MimeTypeParameterList: java.util.Map params>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r4);

        return;
    }

    public void remove(java.lang.String)
    {
        javax.activation.MimeTypeParameterList r0;
        java.util.Map $r2;
        java.lang.String r1, $r3;

        r0 := @this: javax.activation.MimeTypeParameterList;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<javax.activation.MimeTypeParameterList: java.util.Map params>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r3);

        return;
    }

    public java.util.Enumeration getNames()
    {
        java.util.Enumeration $r3;
        javax.activation.MimeTypeParameterList r0;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: javax.activation.MimeTypeParameterList;

        $r1 = r0.<javax.activation.MimeTypeParameterList: java.util.Map params>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r2);

        return $r3;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r9, $r11;
        javax.activation.MimeTypeParameterList r1;
        java.util.Map $r2, $r3;
        int $i0, $i1;
        java.lang.String $r6, $r13;
        boolean $z0;
        java.util.Map$Entry r8;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.lang.Object $r7, $r10, $r12;

        r1 := @this: javax.activation.MimeTypeParameterList;

        $r0 = new java.lang.StringBuffer;

        $r2 = r1.<javax.activation.MimeTypeParameterList: java.util.Map params>;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        $i1 = $i0 << 4;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>($i1);

        $r3 = r1.<javax.activation.MimeTypeParameterList: java.util.Map params>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r7;

        $r9 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; ");

        $r10 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r10);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(61);

        $r12 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (java.lang.String) $r12;

        specialinvoke r1.<javax.activation.MimeTypeParameterList: void quote(java.lang.StringBuffer,java.lang.String)>($r0, $r13);

        goto label1;

     label2:
        $r6 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    private void quote(java.lang.StringBuffer, java.lang.String)
    {
        char $c1, $c2;
        java.lang.StringBuffer r1;
        javax.activation.MimeTypeParameterList r2;
        int $i0, i3, i4, $i5, $i6;
        java.lang.String r0;
        boolean $z0, z1;

        r2 := @this: javax.activation.MimeTypeParameterList;

        r1 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        z1 = 0;

        i3 = 0;

     label1:
        if i3 >= $i0 goto label3;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $z0 = staticinvoke <javax.activation.MimeType: boolean isSpecial(char)>($c2);

        if $z0 == 0 goto label2;

        z1 = 1;

        goto label3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        if z1 == 0 goto label8;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        i4 = 0;

     label4:
        if i4 >= $i0 goto label7;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i5 = (int) $c1;

        if $i5 == 92 goto label5;

        $i6 = (int) $c1;

        if $i6 != 34 goto label6;

     label5:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

     label6:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        i4 = i4 + 1;

        goto label4;

     label7:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        goto label9;

     label8:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

     label9:
        return;
    }
}
