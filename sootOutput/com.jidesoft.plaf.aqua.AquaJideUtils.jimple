public class com.jidesoft.plaf.aqua.AquaJideUtils extends com.jidesoft.plaf.vsnet.VsnetLookAndFeelExtension
{
    public static final java.awt.Color[] HALF_LIGHT;
    public static final java.awt.Color[] HALF_DARK;
    public static final java.awt.Color[] AQUA_WHITE;
    public static final java.awt.Color[] AQUA_BLUE;
    public static final java.awt.Color[] AQUA_GRAPHITE;
    public static final java.awt.Color[] AQUA_BANNER_WHITE;
    public static final java.awt.Color[] AQUA_BANNER_BLUE;

    public void <init>()
    {
        com.jidesoft.plaf.aqua.AquaJideUtils r0;

        r0 := @this: com.jidesoft.plaf.aqua.AquaJideUtils;

        specialinvoke r0.<com.jidesoft.plaf.vsnet.VsnetLookAndFeelExtension: void <init>()>();

        return;
    }

    public static void initClassDefaults(javax.swing.UIDefaults)
    {
        javax.swing.UIDefaults r0;
        int $i0, $i1, $i2;

        r0 := @parameter0: javax.swing.UIDefaults;

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetLookAndFeelExtension: void initClassDefaults(javax.swing.UIDefaults)>(r0);

        $i0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: int getProductsUsed()>();

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("JideSplitButtonUI", "com.jidesoft.plaf.aqua.AquaJideSplitButtonUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("JidePopupMenuUI", "com.jidesoft.plaf.aqua.AquaJidePopupMenuUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("JideTabbedPaneUI", "com.jidesoft.plaf.aqua.AquaJideTabbedPaneUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("GripperUI", "com.jidesoft.plaf.aqua.AquaGripperUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("RangeSliderUI", "com.jidesoft.plaf.aqua.AquaRangeSliderUI");

        $i1 = $i0 & 4;

        if $i1 == 0 goto label1;

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("JideTableUI", "com.jidesoft.plaf.aqua.AquaJideTableUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("NavigableTableUI", "com.jidesoft.plaf.aqua.AquaNavigableTableUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("CellSpanTableUI", "com.jidesoft.plaf.aqua.AquaCellSpanTableUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("TreeTableUI", "com.jidesoft.plaf.aqua.AquaTreeTableUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("HierarchicalTableUI", "com.jidesoft.plaf.aqua.AquaHierarchicalTableUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("CellStyleTableHeaderUI", "com.jidesoft.plaf.aqua.AquaCellStyleTableHeaderUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("SortableTableHeaderUI", "com.jidesoft.plaf.aqua.AquaSortableTableHeaderUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("NestedTableHeaderUI", "com.jidesoft.plaf.aqua.AquaNestedTableHeaderUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("EditableTableHeaderUI", "com.jidesoft.plaf.aqua.AquaEditableTableHeaderUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("AutoFilterTableHeaderUI", "com.jidesoft.plaf.aqua.AquaAutoFilterTableHeaderUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("GroupTableHeaderUI", "com.jidesoft.plaf.aqua.AquaGroupTableHeaderUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("ExComboBoxUI", "com.jidesoft.plaf.aqua.AquaExComboBoxUI");

     label1:
        $i2 = $i0 & 1;

        if $i2 == 0 goto label2;

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("SidePaneUI", "com.jidesoft.plaf.aqua.AquaSidePaneUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("DockableFrameUI", "com.jidesoft.plaf.aqua.AquaDockableFrameUI");

     label2:
        return;
    }

    public static void initComponentDefaults(javax.swing.UIDefaults)
    {
        java.awt.Color $r75, $r85, $r88, $r90, $r92, $r149, $r161, $r162, $r163, $r164, $r174, $r182, $r198, $r201, $r203, $r204, $r205, $r206, $r209, $r234, $r260, $r266, $r267, $r268, $r284, $r285;
        java.lang.Integer $r30, $r31, $r36, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r72, $r76, $r79, $r94, $r95, $r96, $r97, $r98, $r100, $r101, $r107, $r147, $r148, $r151, $r154, $r160, $r178, $r187, $r188, $r212, $r213, $r214, $r218, $r219, $r220, $r221, $r225, $r230, $r231;
        javax.swing.border.Border $r12, $r38, $r67, $r86, $r104, $r140, $r142, $r144, $r159, $r166, $r168, $r170, $r175, $r177, $r183, $r190, $r191, $r192, $r193, $r199, $r202, $r208, $r233;
        java.lang.Object[] $r15, $r20, $r28, $r33, $r34, $r35, $r81, $r83, $r109, $r129, $r134, $r137, $r138, $r146, $r157, $r194;
        javax.swing.plaf.BorderUIResource $r242, $r244, $r252, $r261, $r262, $r263, $r270, $r271, $r272, $r273, $r274, $r275, $r276, $r278, $r279, $r280, $r281;
        javax.swing.plaf.basic.BasicBorders$MarginBorder $r239;
        java.awt.Toolkit $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        java.lang.Boolean $r70, $r77, $r78, $r102, $r106, $r135, $r155, $r179, $r186, $r195, $r210, $r211, $r215, $r226, $r227, $r228;
        com.jidesoft.plaf.aqua.AquaJideUtils$2 $r237;
        com.jidesoft.plaf.aqua.AquaJideUtils$1 $r235;
        com.jidesoft.plaf.ExtWindowsDesktopProperty $r236, $r238;
        javax.swing.UIDefaults$LazyInputMap $r241, $r250, $r251, $r259, $r282, $r286;
        java.lang.Object $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r16, $r21, $r23, $r24, $r25, $r26;
        javax.swing.plaf.ColorUIResource $r243, $r248, $r249, $r253, $r254, $r255, $r256, $r257, $r277, $r287, $r288, $r289, $r290;
        javax.swing.ImageIcon $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127, $r156, $r171, $r172, $r184, $r185, $r196;
        com.jidesoft.plaf.basic.ThemePainter $r128;
        javax.swing.UIDefaults r103;
        javax.swing.plaf.DimensionUIResource $r283;
        javax.swing.plaf.InsetsUIResource $r240, $r245, $r246, $r247, $r258, $r264, $r265, $r269;
        java.lang.String[] $r14, $r19;

        r103 := @parameter0: javax.swing.UIDefaults;

        $r0 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlText");

        $r2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("Panel.background");

        $r3 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlHighlight");

        $r4 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlLtHighlight");

        $r5 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        $r6 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlDkShadow");

        $r7 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("Panel.background");

        $r8 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("Button.font");

        $r9 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("TabbedPane.smallFont");

        $r10 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("Button.font");

        $r234 = new java.awt.Color;

        specialinvoke $r234.<java.awt.Color: void <init>(int,int,int)>(230, 230, 230);

        $r12 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color,int)>($r234, 2);

        $r236 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r14 = newarray (java.lang.String)[1];

        $r14[0] = "win.3d.shadowColor";

        $r15 = newarray (java.lang.Object)[1];

        $r16 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("control");

        $r15[0] = $r16;

        $r235 = new com.jidesoft.plaf.aqua.AquaJideUtils$1;

        specialinvoke $r235.<com.jidesoft.plaf.aqua.AquaJideUtils$1: void <init>()>();

        specialinvoke $r236.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r14, $r15, $r0, $r235);

        $r238 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r19 = newarray (java.lang.String)[1];

        $r19[0] = "win.3d.shadowColor";

        $r20 = newarray (java.lang.Object)[1];

        $r21 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        $r20[0] = $r21;

        $r237 = new com.jidesoft.plaf.aqua.AquaJideUtils$2;

        specialinvoke $r237.<com.jidesoft.plaf.aqua.AquaJideUtils$2: void <init>()>();

        specialinvoke $r238.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r19, $r20, $r0, $r237);

        $r23 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("Menu.selectionBackground");

        $r24 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("Menu.selectionBackground");

        $r25 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("Menu.selectionBackground");

        $r26 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("TextField.selectionBackground");

        $r239 = new javax.swing.plaf.basic.BasicBorders$MarginBorder;

        specialinvoke $r239.<javax.swing.plaf.basic.BasicBorders$MarginBorder: void <init>()>();

        $r28 = newarray (java.lang.Object)[252];

        $r28[0] = "JideLabel.font";

        $r28[1] = $r8;

        $r28[2] = "JideLabel.background";

        $r28[3] = $r2;

        $r28[4] = "JideLabel.foreground";

        $r28[5] = $r1;

        $r28[6] = "JideButton.selectedAndFocusedBackground";

        $r28[7] = $r24;

        $r28[8] = "JideButton.focusedBackground";

        $r28[9] = $r23;

        $r28[10] = "JideButton.selectedBackground";

        $r28[11] = $r25;

        $r28[12] = "JideButton.borderColor";

        $r28[13] = $r26;

        $r28[14] = "JideButton.font";

        $r28[15] = $r8;

        $r28[16] = "JideButton.background";

        $r28[17] = $r2;

        $r28[18] = "JideButton.foreground";

        $r28[19] = $r1;

        $r28[20] = "JideButton.shadow";

        $r28[21] = $r5;

        $r28[22] = "JideButton.darkShadow";

        $r28[23] = $r6;

        $r28[24] = "JideButton.light";

        $r28[25] = $r3;

        $r28[26] = "JideButton.highlight";

        $r28[27] = $r4;

        $r28[28] = "JideButton.border";

        $r28[29] = $r239;

        $r28[30] = "JideButton.margin";

        $r240 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r240.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(3, 3, 3, 3);

        $r28[31] = $r240;

        $r28[32] = "JideButton.textIconGap";

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r28[33] = $r30;

        $r28[34] = "JideButton.textShiftOffset";

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r28[35] = $r31;

        $r28[36] = "JideButton.focusInputMap";

        $r241 = new javax.swing.UIDefaults$LazyInputMap;

        $r33 = newarray (java.lang.Object)[8];

        $r33[0] = "SPACE";

        $r33[1] = "pressed";

        $r33[2] = "released SPACE";

        $r33[3] = "released";

        $r33[4] = "ENTER";

        $r33[5] = "pressed";

        $r33[6] = "released ENTER";

        $r33[7] = "released";

        specialinvoke $r241.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r33);

        $r28[37] = $r241;

        $r28[38] = "TristateCheckBox.icon";

        $r28[39] = null;

        $r28[40] = "TristateCheckBox.setMixed.clientProperty";

        $r34 = newarray (java.lang.Object)[2];

        $r34[0] = "JButton.selectedState";

        $r34[1] = "indeterminate";

        $r28[41] = $r34;

        $r28[42] = "TristateCheckBox.clearMixed.clientProperty";

        $r35 = newarray (java.lang.Object)[2];

        $r35[0] = "JButton.selectedState";

        $r35[1] = null;

        $r28[43] = $r35;

        $r28[44] = "JideSplitPane.dividerSize";

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r28[45] = $r36;

        $r28[46] = "JideSplitPaneDivider.border";

        $r242 = new javax.swing.plaf.BorderUIResource;

        $r38 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder()>();

        specialinvoke $r242.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r38);

        $r28[47] = $r242;

        $r28[48] = "JideSplitPaneDivider.background";

        $r28[49] = $r2;

        $r28[50] = "JideTabbedPane.defaultTabShape";

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r28[51] = $r39;

        $r28[52] = "JideTabbedPane.defaultResizeMode";

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r28[53] = $r40;

        $r28[54] = "JideTabbedPane.defaultTabColorTheme";

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r28[55] = $r41;

        $r28[56] = "JideTabbedPane.tabRectPadding";

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r28[57] = $r42;

        $r28[58] = "JideTabbedPane.closeButtonMarginHorizonal";

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r28[59] = $r43;

        $r28[60] = "JideTabbedPane.closeButtonMarginVertical";

        $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r28[61] = $r44;

        $r28[62] = "JideTabbedPane.textMarginVertical";

        $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r28[63] = $r45;

        $r28[64] = "JideTabbedPane.noIconMargin";

        $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r28[65] = $r46;

        $r28[66] = "JideTabbedPane.iconMargin";

        $r47 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r28[67] = $r47;

        $r28[68] = "JideTabbedPane.textPadding";

        $r48 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r28[69] = $r48;

        $r28[70] = "JideTabbedPane.buttonSize";

        $r49 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(18);

        $r28[71] = $r49;

        $r28[72] = "JideTabbedPane.buttonMargin";

        $r50 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r28[73] = $r50;

        $r28[74] = "JideTabbedPane.fitStyleBoundSize";

        $r51 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r28[75] = $r51;

        $r28[76] = "JideTabbedPane.fitStyleFirstTabMargin";

        $r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r28[77] = $r52;

        $r28[78] = "JideTabbedPane.fitStyleIconMinWidth";

        $r53 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(24);

        $r28[79] = $r53;

        $r28[80] = "JideTabbedPane.fitStyleTextMinWidth";

        $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16);

        $r28[81] = $r54;

        $r28[82] = "JideTabbedPane.compressedStyleNoIconRectSize";

        $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(24);

        $r28[83] = $r55;

        $r28[84] = "JideTabbedPane.compressedStyleIconMargin";

        $r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12);

        $r28[85] = $r56;

        $r28[86] = "JideTabbedPane.compressedStyleCloseButtonMarginHorizontal";

        $r57 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r28[87] = $r57;

        $r28[88] = "JideTabbedPane.compressedStyleCloseButtonMarginVertical";

        $r58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r28[89] = $r58;

        $r28[90] = "JideTabbedPane.fixedStyleRectSize";

        $r59 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(60);

        $r28[91] = $r59;

        $r28[92] = "JideTabbedPane.closeButtonMargin";

        $r60 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r28[93] = $r60;

        $r28[94] = "JideTabbedPane.gripLeftMargin";

        $r61 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r28[95] = $r61;

        $r28[96] = "JideTabbedPane.closeButtonMarginSize";

        $r62 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r28[97] = $r62;

        $r28[98] = "JideTabbedPane.closeButtonLeftMargin";

        $r63 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r28[99] = $r63;

        $r28[100] = "JideTabbedPane.closeButtonRightMargin";

        $r64 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r28[101] = $r64;

        $r28[102] = "JideTabbedPane.defaultTabBorderShadowColor";

        $r243 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r243.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(115, 109, 99);

        $r28[103] = $r243;

        $r28[104] = "JideTabbedPane.border";

        $r244 = new javax.swing.plaf.BorderUIResource;

        $r67 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke $r244.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r67);

        $r28[105] = $r244;

        $r28[106] = "JideTabbedPane.background";

        $r28[107] = $r236;

        $r28[108] = "JideTabbedPane.foreground";

        $r28[109] = $r1;

        $r28[110] = "JideTabbedPane.light";

        $r28[111] = $r3;

        $r28[112] = "JideTabbedPane.highlight";

        $r28[113] = $r4;

        $r28[114] = "JideTabbedPane.shadow";

        $r28[115] = $r5;

        $r28[116] = "JideTabbedPane.tabInsets";

        $r245 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r245.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(1, 4, 1, 4);

        $r28[117] = $r245;

        $r28[118] = "JideTabbedPane.contentBorderInsets";

        $r246 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r246.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(2, 2, 2, 2);

        $r28[119] = $r246;

        $r28[120] = "JideTabbedPane.ignoreContentBorderInsetsIfNoTabs";

        $r70 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r28[121] = $r70;

        $r28[122] = "JideTabbedPane.tabAreaInsets";

        $r247 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r247.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(2, 4, 0, 4);

        $r28[123] = $r247;

        $r28[124] = "JideTabbedPane.tabAreaBackground";

        $r28[125] = $r236;

        $r28[126] = "JideTabbedPane.tabAreaBackgroundLt";

        $r28[127] = $r4;

        $r28[128] = "JideTabbedPane.tabAreaBackgroundDk";

        $r28[129] = $r2;

        $r28[130] = "JideTabbedPane.tabRunOverlay";

        $r72 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r28[131] = $r72;

        $r28[132] = "JideTabbedPane.font";

        $r28[133] = $r9;

        $r28[134] = "JideTabbedPane.selectedTabFont";

        $r28[135] = $r9;

        $r28[136] = "JideTabbedPane.darkShadow";

        $r28[137] = $r1;

        $r28[138] = "JideTabbedPane.selectedTabTextForeground";

        $r28[139] = $r1;

        $r28[140] = "JideTabbedPane.unselectedTabTextForeground";

        $r28[141] = $r238;

        $r28[142] = "JideTabbedPane.selectedTabBackground";

        $r28[143] = $r2;

        $r28[144] = "JideTabbedPane.selectedTabBackgroundLt";

        $r248 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r248.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(230, 139, 44);

        $r28[145] = $r248;

        $r28[146] = "JideTabbedPane.selectedTabBackgroundDk";

        $r249 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r249.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 199, 60);

        $r28[147] = $r249;

        $r28[148] = "JideTabbedPane.tabListBackground";

        $r75 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("List.background");

        $r28[149] = $r75;

        $r28[150] = "JideTabbedPane.textIconGap";

        $r76 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r28[151] = $r76;

        $r28[152] = "JideTabbedPane.showIconOnTab";

        $r77 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r28[153] = $r77;

        $r28[154] = "JideTabbedPane.showCloseButtonOnTab";

        $r78 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r28[155] = $r78;

        $r28[156] = "JideTabbedPane.closeButtonAlignment";

        $r79 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        $r28[157] = $r79;

        $r28[158] = "JideTabbedPane.focusInputMap";

        $r250 = new javax.swing.UIDefaults$LazyInputMap;

        $r81 = newarray (java.lang.Object)[20];

        $r81[0] = "RIGHT";

        $r81[1] = "navigateRight";

        $r81[2] = "KP_RIGHT";

        $r81[3] = "navigateRight";

        $r81[4] = "LEFT";

        $r81[5] = "navigateLeft";

        $r81[6] = "KP_LEFT";

        $r81[7] = "navigateLeft";

        $r81[8] = "UP";

        $r81[9] = "navigateUp";

        $r81[10] = "KP_UP";

        $r81[11] = "navigateUp";

        $r81[12] = "DOWN";

        $r81[13] = "navigateDown";

        $r81[14] = "KP_DOWN";

        $r81[15] = "navigateDown";

        $r81[16] = "ctrl DOWN";

        $r81[17] = "requestFocusForVisibleComponent";

        $r81[18] = "ctrl KP_DOWN";

        $r81[19] = "requestFocusForVisibleComponent";

        specialinvoke $r250.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r81);

        $r28[159] = $r250;

        $r28[160] = "JideTabbedPane.ancestorInputMap";

        $r251 = new javax.swing.UIDefaults$LazyInputMap;

        $r83 = newarray (java.lang.Object)[8];

        $r83[0] = "ctrl PAGE_DOWN";

        $r83[1] = "navigatePageDown";

        $r83[2] = "ctrl PAGE_UP";

        $r83[3] = "navigatePageUp";

        $r83[4] = "ctrl UP";

        $r83[5] = "requestFocus";

        $r83[6] = "ctrl KP_UP";

        $r83[7] = "requestFocus";

        specialinvoke $r251.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r83);

        $r28[161] = $r251;

        $r28[162] = "Resizable.resizeBorder";

        $r28[163] = $r12;

        $r28[164] = "MeterProgressBar.border";

        $r252 = new javax.swing.plaf.BorderUIResource;

        $r85 = <java.awt.Color: java.awt.Color BLACK>;

        $r86 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color)>($r85);

        specialinvoke $r252.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r86);

        $r28[165] = $r252;

        $r28[166] = "MeterProgressBar.background";

        $r253 = new javax.swing.plaf.ColorUIResource;

        $r88 = <java.awt.Color: java.awt.Color BLACK>;

        specialinvoke $r253.<javax.swing.plaf.ColorUIResource: void <init>(java.awt.Color)>($r88);

        $r28[167] = $r253;

        $r28[168] = "MeterProgressBar.foreground";

        $r254 = new javax.swing.plaf.ColorUIResource;

        $r90 = <java.awt.Color: java.awt.Color GREEN>;

        specialinvoke $r254.<javax.swing.plaf.ColorUIResource: void <init>(java.awt.Color)>($r90);

        $r28[169] = $r254;

        $r28[170] = "MeterProgressBar.cellForeground";

        $r255 = new javax.swing.plaf.ColorUIResource;

        $r92 = <java.awt.Color: java.awt.Color GREEN>;

        specialinvoke $r255.<javax.swing.plaf.ColorUIResource: void <init>(java.awt.Color)>($r92);

        $r28[171] = $r255;

        $r28[172] = "MeterProgressBar.cellBackground";

        $r256 = new javax.swing.plaf.ColorUIResource;

        $i7 = (int) 32768;

        specialinvoke $r256.<javax.swing.plaf.ColorUIResource: void <init>(int)>($i7);

        $r28[173] = $r256;

        $r28[174] = "MeterProgressBar.cellLength";

        $r94 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r28[175] = $r94;

        $r28[176] = "MeterProgressBar.cellSpacing";

        $r95 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r28[177] = $r95;

        $r28[178] = "ButtonPanel.order";

        $r28[179] = "CA";

        $r28[180] = "ButtonPanel.oppositeOrder";

        $r28[181] = "HO";

        $r28[182] = "ButtonPanel.buttonGap";

        $r96 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r28[183] = $r96;

        $r28[184] = "ButtonPanel.groupGap";

        $r97 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12);

        $r28[185] = $r97;

        $r28[186] = "ButtonPanel.minButtonWidth";

        $r98 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(69);

        $r28[187] = $r98;

        $r28[188] = "Contour.color";

        $r257 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r257.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(136, 136, 136);

        $r28[189] = $r257;

        $r28[190] = "Contour.thickness";

        $r100 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r28[191] = $r100;

        $r28[192] = "Gripper.size";

        $r101 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r28[193] = $r101;

        $r28[194] = "Gripper.foreground";

        $r28[195] = $r5;

        $r28[196] = "Icon.floating";

        $r102 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r28[197] = $r102;

        $r28[198] = "JideScrollPane.border";

        $r104 = virtualinvoke r103.<javax.swing.UIDefaults: javax.swing.border.Border getBorder(java.lang.Object)>("ScrollPane.border");

        $r28[199] = $r104;

        $r28[200] = "JideSplitButton.font";

        $r28[201] = $r8;

        $r28[202] = "JideSplitButton.background";

        $r28[203] = $r2;

        $r28[204] = "JideSplitButton.foreground";

        $r28[205] = $r1;

        $r28[206] = "JideSplitButton.margin";

        $r258 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r258.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(3, 3, 3, 7);

        $r28[207] = $r258;

        $r28[208] = "JideSplitButton.border";

        $r28[209] = $r239;

        $r28[210] = "JideSplitButton.borderPainted";

        $r106 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r28[211] = $r106;

        $r28[212] = "JideSplitButton.textIconGap";

        $r107 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r28[213] = $r107;

        $r28[214] = "JideSplitButton.focusInputMap";

        $r259 = new javax.swing.UIDefaults$LazyInputMap;

        $r109 = newarray (java.lang.Object)[12];

        $r109[0] = "SPACE";

        $r109[1] = "pressed";

        $r109[2] = "released SPACE";

        $r109[3] = "released";

        $r109[4] = "ENTER";

        $r109[5] = "pressed";

        $r109[6] = "released ENTER";

        $r109[7] = "released";

        $r109[8] = "DOWN";

        $r109[9] = "downPressed";

        $r109[10] = "released DOWN";

        $r109[11] = "downReleased";

        specialinvoke $r259.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r109);

        $r28[215] = $r259;

        $r28[216] = "Cursor.hsplit";

        $r110 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_h_split.gif");

        $r28[217] = $r110;

        $r28[218] = "Cursor.vsplit";

        $r111 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_v_split.gif");

        $r28[219] = $r111;

        $r28[220] = "Cursor.north";

        $r112 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_north.gif");

        $r28[221] = $r112;

        $r28[222] = "Cursor.south";

        $r113 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_south.gif");

        $r28[223] = $r113;

        $r28[224] = "Cursor.east";

        $r114 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_east.gif");

        $r28[225] = $r114;

        $r28[226] = "Cursor.west";

        $r115 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_west.gif");

        $r28[227] = $r115;

        $r28[228] = "Cursor.tab";

        $r116 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_tab.gif");

        $r28[229] = $r116;

        $r28[230] = "Cursor.float";

        $r117 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_float.gif");

        $r28[231] = $r117;

        $r28[232] = "Cursor.vertical";

        $r118 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_vertical.gif");

        $r28[233] = $r118;

        $r28[234] = "Cursor.horizontal";

        $r119 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_horizontal.gif");

        $r28[235] = $r119;

        $r28[236] = "Cursor.delete";

        $r120 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_delete.gif");

        $r28[237] = $r120;

        $r28[238] = "Cursor.drag";

        $r121 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_drag.gif");

        $r28[239] = $r121;

        $r28[240] = "Cursor.dragStop";

        $r122 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_drag_stop.gif");

        $r28[241] = $r122;

        $r28[242] = "Cursor.dragText";

        $r123 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_drag_text.gif");

        $r28[243] = $r123;

        $r28[244] = "Cursor.dragTextStop";

        $r124 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_drag_text_stop.gif");

        $r28[245] = $r124;

        $r28[246] = "Cursor.percentage";

        $r125 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_percentage.gif");

        $r28[247] = $r125;

        $r28[248] = "Cursor.moveEast";

        $r126 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_move_east.gif");

        $r28[249] = $r126;

        $r28[250] = "Cursor.moveWest";

        $r127 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_move_west.gif");

        $r28[251] = $r127;

        virtualinvoke r103.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r28);

        $i0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: int getProductsUsed()>();

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $r260 = new java.awt.Color;

        specialinvoke $r260.<java.awt.Color: void <init>(int,int,int)>(190, 190, 190);

        $r190 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color)>($r260);

        $r191 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color)>($r260);

        $r192 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color)>($r260);

        $r193 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color)>($r260);

        $r194 = newarray (java.lang.Object)[94];

        $r194[0] = "DockableFrame.usingMacStandardIcons";

        $r195 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r194[1] = $r195;

        $r194[2] = "DockableFrame.defaultIcon";

        $r196 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/dockableframe_blank.gif");

        $r194[3] = $r196;

        $r194[4] = "DockableFrame.background";

        $r194[5] = $r2;

        $r194[6] = "DockableFrame.border";

        $r261 = new javax.swing.plaf.BorderUIResource;

        $r198 = <java.awt.Color: java.awt.Color lightGray>;

        $r199 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color,int)>($r198, 1);

        specialinvoke $r261.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r199);

        $r194[7] = $r261;

        $r194[8] = "DockableFrame.floatingBorder";

        $r262 = new javax.swing.plaf.BorderUIResource;

        $r201 = <java.awt.Color: java.awt.Color lightGray>;

        $r202 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color,int)>($r201, 1);

        specialinvoke $r262.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r202);

        $r194[9] = $r262;

        $r194[10] = "DockableFrame.slidingEastBorder";

        $r194[11] = $r190;

        $r194[12] = "DockableFrame.slidingWestBorder";

        $r194[13] = $r191;

        $r194[14] = "DockableFrame.slidingNorthBorder";

        $r194[15] = $r192;

        $r194[16] = "DockableFrame.slidingSouthBorder";

        $r194[17] = $r193;

        $r194[18] = "DockableFrame.activeTitleBackground";

        $r203 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("InternalFrame.activeTitleBackground");

        $r194[19] = $r203;

        $r194[20] = "DockableFrame.activeTitleForeground";

        $r204 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("InternalFrame.activeTitleForeground");

        $r194[21] = $r204;

        $r194[22] = "DockableFrame.inactiveTitleBackground";

        $r205 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("InternalFrame.inactiveTitleBackground");

        $r194[23] = $r205;

        $r194[24] = "DockableFrame.inactiveTitleForeground";

        $r206 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("InternalFrame.inactiveTitleForeground");

        $r194[25] = $r206;

        $r194[26] = "DockableFrame.titleBorder";

        $r263 = new javax.swing.plaf.BorderUIResource;

        $r208 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke $r263.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r208);

        $r194[27] = $r263;

        $r194[28] = "DockableFrame.activeTitleBorderColor";

        $r209 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("InternalFrame.activeTitleBackground");

        $r194[29] = $r209;

        $r194[30] = "DockableFrame.inactiveTitleBorderColor";

        $r194[31] = $r5;

        $r194[32] = "DockableFrame.font";

        $r194[33] = $r8;

        $r194[34] = "DockableFrameTitlePane.font";

        $r194[35] = $r9;

        $r194[36] = "DockableFrameTitlePane.titleBarComponent";

        $r210 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r194[37] = $r210;

        $r194[38] = "DockableFrameTitlePane.alwaysShowAllButtons";

        $r211 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r194[39] = $r211;

        $r194[40] = "DockableFrameTitlePane.buttonsAlignment";

        $r212 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r194[41] = $r212;

        $r194[42] = "DockableFrameTitlePane.titleAlignment";

        $r213 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r194[43] = $r213;

        $r194[44] = "DockableFrameTitlePane.buttonGap";

        $r214 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r194[45] = $r214;

        $r194[46] = "DockableFrameTitlePane.showIcon";

        $r215 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r194[47] = $r215;

        $r194[48] = "DockableFrameTitlePane.margin";

        $r264 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r264.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(0, 10, 0, 3);

        $r194[49] = $r264;

        $r194[50] = "SidePane.margin";

        $r265 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r265.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(1, 1, 1, 1);

        $r194[51] = $r265;

        $r194[52] = "SidePane.iconTextGap";

        $r218 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r194[53] = $r218;

        $r194[54] = "SidePane.textBorderGap";

        $r219 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(13);

        $r194[55] = $r219;

        $r194[56] = "SidePane.itemGap";

        $r220 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r194[57] = $r220;

        $r194[58] = "SidePane.groupGap";

        $r221 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r194[59] = $r221;

        $r194[60] = "SidePane.foreground";

        $r194[61] = $r6;

        $r194[62] = "SidePane.background";

        $r194[63] = $r236;

        $r194[64] = "SidePane.lineColor";

        $r266 = new java.awt.Color;

        specialinvoke $r266.<java.awt.Color: void <init>(int,int,int)>(151, 151, 151);

        $r194[65] = $r266;

        $r194[66] = "SidePane.buttonBackground";

        $r267 = new java.awt.Color;

        specialinvoke $r267.<java.awt.Color: void <init>(int,int,int)>(133, 133, 133);

        $r194[67] = $r267;

        $r194[68] = "SidePane.selectedButtonBackground";

        $r268 = new java.awt.Color;

        specialinvoke $r268.<java.awt.Color: void <init>(int,int,int)>(133, 133, 133);

        $r194[69] = $r268;

        $r194[70] = "SidePane.selectedButtonForeground";

        $r194[71] = $r1;

        $r194[72] = "SidePane.font";

        $r194[73] = $r9;

        $r194[74] = "SidePane.orientation";

        $r225 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r194[75] = $r225;

        $r194[76] = "SidePane.showSelectedTabText";

        $r226 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r194[77] = $r226;

        $r194[78] = "SidePane.alwaysShowTabText";

        $r227 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r194[79] = $r227;

        $r194[80] = "Workspace.background";

        $r194[81] = $r7;

        $r194[82] = "DockingFramework.changeCursor";

        $r228 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r194[83] = $r228;

        $r194[84] = "FrameContainer.contentBorderInsets";

        $r269 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r269.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(0, 0, 0, 0);

        $r194[85] = $r269;

        $r194[86] = "ContentContainer.background";

        $r194[87] = $r236;

        $r194[88] = "ContentContainer.vgap";

        $r230 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r194[89] = $r230;

        $r194[90] = "ContentContainer.hgap";

        $r231 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r194[91] = $r231;

        $r194[92] = "MainContainer.border";

        $r270 = new javax.swing.plaf.BorderUIResource;

        $r233 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke $r270.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r233);

        $r194[93] = $r270;

        virtualinvoke r103.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r194);

     label1:
        $i2 = $i0 & 2;

        if $i2 == 0 goto label2;

        $r156 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.Class,java.lang.String)>(class "Lcom/jidesoft/plaf/aqua/AquaJideUtils;", "icons/collapsible_pane_aqua.gif");

        $r157 = newarray (java.lang.Object)[54];

        $r157[0] = "CollapsiblePanes.border";

        $r271 = new javax.swing.plaf.BorderUIResource;

        $r159 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(12, 12, 12, 12);

        specialinvoke $r271.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r159);

        $r157[1] = $r271;

        $r157[2] = "CollapsiblePanes.gap";

        $r160 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(15);

        $r157[3] = $r160;

        $r157[4] = "CollapsiblePane.background";

        $r161 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("InternalFrame.inactiveTitleBackground");

        $r157[5] = $r161;

        $r157[6] = "CollapsiblePane.contentBackground";

        $r157[7] = $r4;

        $r157[8] = "CollapsiblePane.foreground";

        $r162 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("InternalFrame.activeTitleForeground");

        $r157[9] = $r162;

        $r157[10] = "CollapsiblePane.emphasizedBackground";

        $r163 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("InternalFrame.activeTitleBackground");

        $r157[11] = $r163;

        $r157[12] = "CollapsiblePane.emphasizedForeground";

        $r164 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("InternalFrame.activeTitleForeground");

        $r157[13] = $r164;

        $r157[14] = "CollapsiblePane.border";

        $r272 = new javax.swing.plaf.BorderUIResource;

        $r166 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke $r272.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r166);

        $r157[15] = $r272;

        $r157[16] = "CollapsiblePane.font";

        $r157[17] = $r8;

        $r157[18] = "CollapsiblePane.contentBorder";

        $r273 = new javax.swing.plaf.BorderUIResource;

        $r168 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(8, 10, 8, 10);

        specialinvoke $r273.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r168);

        $r157[19] = $r273;

        $r157[20] = "CollapsiblePane.titleBorder";

        $r274 = new javax.swing.plaf.BorderUIResource;

        $r170 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(3, 3, 3, 3);

        specialinvoke $r274.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r170);

        $r157[21] = $r274;

        $r157[22] = "CollapsiblePane.titleFont";

        $r157[23] = $r10;

        $r157[24] = "CollapsiblePane.downIcon";

        $r171 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r156, 0, 0, 12, 12);

        $r157[25] = $r171;

        $r157[26] = "CollapsiblePane.upIcon";

        $r172 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r156, 0, 12, 12, 12);

        $r157[27] = $r172;

        $r157[28] = "StatusBarItem.border";

        $r275 = new javax.swing.plaf.BorderUIResource;

        $r174 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlShadow");

        $r175 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color,int)>($r174, 1);

        specialinvoke $r275.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r175);

        $r157[29] = $r275;

        $r157[30] = "StatusBar.border";

        $r276 = new javax.swing.plaf.BorderUIResource;

        $r177 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(2, 0, 0, 0);

        specialinvoke $r276.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r177);

        $r157[31] = $r276;

        $r157[32] = "StatusBar.gap";

        $r178 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r157[33] = $r178;

        $r157[34] = "StatusBar.background";

        $r157[35] = $r2;

        $r157[36] = "StatusBar.font";

        $r157[37] = $r8;

        $r157[38] = "StatusBar.paintResizableIcon";

        $r179 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r157[39] = $r179;

        $r157[40] = "MemoryStatusBarItem.fillColor";

        $r277 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r277.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(236, 233, 176);

        $r157[41] = $r277;

        $r157[42] = "DocumentPane.groupBorder";

        $r278 = new javax.swing.plaf.BorderUIResource;

        $r182 = <java.awt.Color: java.awt.Color gray>;

        $r183 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color)>($r182);

        specialinvoke $r278.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r183);

        $r157[43] = $r278;

        $r157[44] = "DocumentPane.newHorizontalGroupIcon";

        $r184 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/windows_new_horizontal_tab_group.png");

        $r157[45] = $r184;

        $r157[46] = "DocumentPane.newVerticalGroupIcon";

        $r185 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/windows_new_vertical_tab_group.png");

        $r157[47] = $r185;

        $r157[48] = "DocumentPane.boldActiveTab";

        $r186 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r157[49] = $r186;

        $r157[50] = "OutlookTabbedPane.buttonStyle";

        $r187 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r157[51] = $r187;

        $r157[52] = "FloorTabbedPane.buttonStyle";

        $r188 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r157[53] = $r188;

        virtualinvoke r103.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r157);

     label2:
        $i3 = $i0 & 16;

        if $i3 == 0 goto label3;

        $r138 = newarray (java.lang.Object)[44];

        $r138[0] = "CommandBar.font";

        $r138[1] = $r8;

        $r138[2] = "CommandBar.background";

        $r138[3] = $r2;

        $r138[4] = "CommandBar.foreground";

        $r138[5] = $r1;

        $r138[6] = "CommandBar.shadow";

        $r138[7] = $r5;

        $r138[8] = "CommandBar.darkShadow";

        $r138[9] = $r6;

        $r138[10] = "CommandBar.light";

        $r138[11] = $r3;

        $r138[12] = "CommandBar.highlight";

        $r138[13] = $r4;

        $r138[14] = "CommandBar.border";

        $r279 = new javax.swing.plaf.BorderUIResource;

        $r140 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(1, 1, 1, 1);

        specialinvoke $r279.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r140);

        $r138[15] = $r279;

        $r138[16] = "CommandBar.borderVert";

        $r280 = new javax.swing.plaf.BorderUIResource;

        $r142 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(1, 1, 1, 1);

        specialinvoke $r280.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r142);

        $r138[17] = $r280;

        $r138[18] = "CommandBar.borderFloating";

        $r281 = new javax.swing.plaf.BorderUIResource;

        $r144 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(2, 2, 2, 2);

        specialinvoke $r281.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r144);

        $r138[19] = $r281;

        $r138[20] = "CommandBar.ancestorInputMap";

        $r282 = new javax.swing.UIDefaults$LazyInputMap;

        $r146 = newarray (java.lang.Object)[16];

        $r146[0] = "UP";

        $r146[1] = "navigateUp";

        $r146[2] = "KP_UP";

        $r146[3] = "navigateUp";

        $r146[4] = "DOWN";

        $r146[5] = "navigateDown";

        $r146[6] = "KP_DOWN";

        $r146[7] = "navigateDown";

        $r146[8] = "LEFT";

        $r146[9] = "navigateLeft";

        $r146[10] = "KP_LEFT";

        $r146[11] = "navigateLeft";

        $r146[12] = "RIGHT";

        $r146[13] = "navigateRight";

        $r146[14] = "KP_RIGHT";

        $r146[15] = "navigateRight";

        specialinvoke $r282.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r146);

        $r138[21] = $r282;

        $r138[22] = "CommandBar.titleBarSize";

        $r147 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(17);

        $r138[23] = $r147;

        $r138[24] = "CommandBar.titleBarButtonGap";

        $r148 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r138[25] = $r148;

        $r138[26] = "CommandBar.titleBarBackground";

        $r149 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("InternalFrame.activeTitleBackground");

        $r138[27] = $r149;

        $r138[28] = "CommandBar.titleBarForeground";

        $r138[29] = $r1;

        $r138[30] = "CommandBar.titleBarFont";

        $r138[31] = $r10;

        $r138[32] = "CommandBar.minimumSize";

        $r283 = new javax.swing.plaf.DimensionUIResource;

        specialinvoke $r283.<javax.swing.plaf.DimensionUIResource: void <init>(int,int)>(20, 20);

        $r138[33] = $r283;

        $r138[34] = "CommandBar.separatorSize";

        $r151 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r138[35] = $r151;

        $r138[36] = "CommandBarSeparator.background";

        $r284 = new java.awt.Color;

        specialinvoke $r284.<java.awt.Color: void <init>(int,int,int)>(219, 216, 209);

        $r138[37] = $r284;

        $r138[38] = "CommandBarSeparator.foreground";

        $r285 = new java.awt.Color;

        specialinvoke $r285.<java.awt.Color: void <init>(int,int,int)>(166, 166, 166);

        $r138[39] = $r285;

        $r138[40] = "Chevron.size";

        $r154 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        $r138[41] = $r154;

        $r138[42] = "Chevron.alwaysVisible";

        $r155 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r138[43] = $r155;

        virtualinvoke r103.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r138);

     label3:
        $i4 = $i0 & 4;

        if $i4 == 0 goto label4;

        $r134 = newarray (java.lang.Object)[4];

        $r134[0] = "AbstractComboBox.useJButton";

        $r135 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r134[1] = $r135;

        $r134[2] = "GroupList.ancestorInputMap";

        $r286 = new javax.swing.UIDefaults$LazyInputMap;

        $r137 = newarray (java.lang.Object)[4];

        $r137[0] = "TAB";

        $r137[1] = "selectNextGroup";

        $r137[2] = "shift TAB";

        $r137[3] = "selectPreviousGroup";

        specialinvoke $r286.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r137);

        $r134[3] = $r286;

        virtualinvoke r103.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r134);

     label4:
        $i5 = $i0 & 16384;

        if $i5 == 0 goto label5;

        $r129 = newarray (java.lang.Object)[8];

        $r129[0] = "DiffMerge.changed";

        $r287 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r287.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(196, 196, 255);

        $r129[1] = $r287;

        $r129[2] = "DiffMerge.deleted";

        $r288 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r288.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(200, 200, 200);

        $r129[3] = $r288;

        $r129[4] = "DiffMerge.inserted";

        $r289 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r289.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(196, 255, 196);

        $r129[5] = $r289;

        $r129[6] = "DiffMerge.conflicted";

        $r290 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r290.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 153, 153);

        $r129[7] = $r290;

        virtualinvoke r103.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r129);

     label5:
        $r128 = staticinvoke <com.jidesoft.plaf.aqua.AquaPainter: com.jidesoft.plaf.basic.ThemePainter getInstance()>();

        staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: void put(javax.swing.UIDefaults,java.lang.String,java.lang.Object)>(r103, "Theme.painter", $r128);

        return;
    }

    public static boolean isGraphite()
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 = staticinvoke <com.jidesoft.plaf.aqua.AquaPreferences: java.lang.String getString(java.lang.String)>("AppleAquaColorVariant");

        $r1 = "6";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        return $z0;
    }

    public static java.awt.Color[] reverse(java.awt.Color[])
    {
        java.awt.Color $r2;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.awt.Color[] r0, r1;

        r0 := @parameter0: java.awt.Color[];

        $i0 = lengthof r0;

        r1 = newarray (java.awt.Color)[$i0];

        i5 = 0;

     label1:
        $i1 = lengthof r0;

        if i5 >= $i1 goto label2;

        $i2 = lengthof r0;

        $i3 = $i2 - i5;

        $i4 = $i3 - 1;

        $r2 = r0[$i4];

        r1[i5] = $r2;

        i5 = i5 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static void fillAquaGradientHorizontal(java.awt.Graphics, java.awt.Shape, java.awt.Color[])
    {
        java.awt.Color $r8, $r9, $r10, $r11;
        java.awt.Rectangle $r5, $r6, $r7;
        java.awt.Graphics2D $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.awt.Shape r2;
        java.awt.Graphics r1;
        java.awt.Color[] r0, r3;

        r1 := @parameter0: java.awt.Graphics;

        r2 := @parameter1: java.awt.Shape;

        r0 := @parameter2: java.awt.Color[];

        r3 = r0;

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 == 4 goto label2;

     label1:
        r3 = <com.jidesoft.plaf.aqua.AquaJideUtils: java.awt.Color[] AQUA_WHITE>;

     label2:
        $r4 = (java.awt.Graphics2D) r1;

        $r5 = interfaceinvoke r2.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        $r6 = new java.awt.Rectangle;

        $i1 = $r5.<java.awt.Rectangle: int x>;

        $i2 = $r5.<java.awt.Rectangle: int y>;

        $i3 = $r5.<java.awt.Rectangle: int height>;

        $i4 = $i3 / 2;

        $i5 = $i2 + $i4;

        $i6 = $r5.<java.awt.Rectangle: int width>;

        $i7 = $r5.<java.awt.Rectangle: int height>;

        $i8 = $i7 / 2;

        specialinvoke $r6.<java.awt.Rectangle: void <init>(int,int,int,int)>($i1, $i5, $i6, $i8);

        $r7 = new java.awt.Rectangle;

        $i9 = $r5.<java.awt.Rectangle: int x>;

        $i10 = $r5.<java.awt.Rectangle: int y>;

        $i11 = $r5.<java.awt.Rectangle: int width>;

        $i12 = $r5.<java.awt.Rectangle: int height>;

        $i13 = $i12 / 2;

        specialinvoke $r7.<java.awt.Rectangle: void <init>(int,int,int,int)>($i9, $i10, $i11, $i13);

        $r8 = r3[0];

        $r9 = r3[1];

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>($r4, $r7, $r8, $r9, 1);

        $r10 = r3[2];

        $r11 = r3[3];

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>($r4, $r6, $r10, $r11, 1);

        return;
    }

    public static void fillAquaGradientVertical(java.awt.Graphics, java.awt.Shape, java.awt.Color[])
    {
        java.awt.Color $r8, $r9, $r10, $r11;
        java.awt.Rectangle $r5, $r6, $r7;
        java.awt.Graphics2D $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.awt.Shape r2;
        java.awt.Graphics r1;
        java.awt.Color[] r0, r3;

        r1 := @parameter0: java.awt.Graphics;

        r2 := @parameter1: java.awt.Shape;

        r0 := @parameter2: java.awt.Color[];

        r3 = r0;

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 == 4 goto label2;

     label1:
        r3 = <com.jidesoft.plaf.aqua.AquaJideUtils: java.awt.Color[] AQUA_WHITE>;

     label2:
        $r4 = (java.awt.Graphics2D) r1;

        $r5 = interfaceinvoke r2.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        $r6 = new java.awt.Rectangle;

        $i1 = $r5.<java.awt.Rectangle: int x>;

        $i2 = $r5.<java.awt.Rectangle: int width>;

        $i3 = $i2 / 2;

        $i4 = $i1 + $i3;

        $i5 = $r5.<java.awt.Rectangle: int y>;

        $i6 = $r5.<java.awt.Rectangle: int width>;

        $i7 = $i6 / 2;

        $i8 = $r5.<java.awt.Rectangle: int height>;

        specialinvoke $r6.<java.awt.Rectangle: void <init>(int,int,int,int)>($i4, $i5, $i7, $i8);

        $r7 = new java.awt.Rectangle;

        $i9 = $r5.<java.awt.Rectangle: int x>;

        $i10 = $r5.<java.awt.Rectangle: int y>;

        $i11 = $r5.<java.awt.Rectangle: int width>;

        $i12 = $i11 / 2;

        $i13 = $r5.<java.awt.Rectangle: int height>;

        specialinvoke $r7.<java.awt.Rectangle: void <init>(int,int,int,int)>($i9, $i10, $i12, $i13);

        $r8 = r3[0];

        $r9 = r3[1];

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>($r4, $r7, $r8, $r9, 0);

        $r10 = r3[2];

        $r11 = r3[3];

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>($r4, $r6, $r10, $r11, 0);

        return;
    }

    public static void fillSquareButtonHorizontal(java.awt.Graphics, java.awt.Shape, java.awt.Color[])
    {
        java.awt.Color $r6, $r7;
        java.awt.Rectangle $r5;
        java.awt.Graphics2D $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.awt.Shape r2;
        java.awt.Graphics r1;
        java.awt.Color[] r0, r3;

        r1 := @parameter0: java.awt.Graphics;

        r2 := @parameter1: java.awt.Shape;

        r0 := @parameter2: java.awt.Color[];

        r3 = r0;

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 == 2 goto label2;

     label1:
        r3 = <com.jidesoft.plaf.aqua.AquaJideUtils: java.awt.Color[] HALF_LIGHT>;

     label2:
        $r4 = (java.awt.Graphics2D) r1;

        $r5 = interfaceinvoke r2.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        $r6 = r3[0];

        virtualinvoke $r4.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r6);

        $i1 = $r5.<java.awt.Rectangle: int x>;

        $i2 = $r5.<java.awt.Rectangle: int y>;

        $i3 = $r5.<java.awt.Rectangle: int width>;

        $i4 = $r5.<java.awt.Rectangle: int height>;

        $i5 = $i4 / 2;

        virtualinvoke $r4.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i1, $i2, $i3, $i5);

        $r7 = r3[1];

        virtualinvoke $r4.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r7);

        $i6 = $r5.<java.awt.Rectangle: int x>;

        $i7 = $r5.<java.awt.Rectangle: int y>;

        $i8 = $r5.<java.awt.Rectangle: int height>;

        $i9 = $i8 / 2;

        $i10 = $i7 + $i9;

        $i11 = $r5.<java.awt.Rectangle: int width>;

        $i12 = $r5.<java.awt.Rectangle: int height>;

        $i13 = $i12 / 2;

        virtualinvoke $r4.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i6, $i10, $i11, $i13);

        return;
    }

    public static void fillSquareButtonVertical(java.awt.Graphics, java.awt.Shape, java.awt.Color[])
    {
        java.awt.Color $r6, $r7;
        java.awt.Rectangle $r5;
        java.awt.Graphics2D $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.awt.Shape r2;
        java.awt.Graphics r1;
        java.awt.Color[] r0, r3;

        r1 := @parameter0: java.awt.Graphics;

        r2 := @parameter1: java.awt.Shape;

        r0 := @parameter2: java.awt.Color[];

        r3 = r0;

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 == 2 goto label2;

     label1:
        r3 = <com.jidesoft.plaf.aqua.AquaJideUtils: java.awt.Color[] HALF_LIGHT>;

     label2:
        $r4 = (java.awt.Graphics2D) r1;

        $r5 = interfaceinvoke r2.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        $r6 = r3[0];

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);

        $i1 = $r5.<java.awt.Rectangle: int x>;

        $i2 = $r5.<java.awt.Rectangle: int y>;

        $i3 = $r5.<java.awt.Rectangle: int width>;

        $i4 = $i3 / 2;

        $i5 = $r5.<java.awt.Rectangle: int height>;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>($i1, $i2, $i4, $i5);

        $r7 = r3[1];

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r7);

        $i6 = $r5.<java.awt.Rectangle: int x>;

        $i7 = $r5.<java.awt.Rectangle: int width>;

        $i8 = $i7 / 2;

        $i9 = $i6 + $i8;

        $i10 = $r5.<java.awt.Rectangle: int y>;

        $i11 = $r5.<java.awt.Rectangle: int width>;

        $i12 = $i11 / 2;

        $i13 = $r5.<java.awt.Rectangle: int height>;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>($i9, $i10, $i12, $i13);

        return;
    }

    public static void antialiasShape(java.awt.Graphics, boolean)
    {
        java.awt.Graphics2D r1;
        java.awt.Graphics r0;
        java.awt.RenderingHints$Key $r2;
        java.lang.Object $r3;
        boolean z0;

        r0 := @parameter0: java.awt.Graphics;

        z0 := @parameter1: boolean;

        r1 = (java.awt.Graphics2D) r0;

        $r2 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_ANTIALIASING>;

        if z0 == 0 goto label1;

        $r3 = <java.awt.RenderingHints: java.lang.Object VALUE_ANTIALIAS_ON>;

        goto label2;

     label1:
        $r3 = <java.awt.RenderingHints: java.lang.Object VALUE_ANTIALIAS_OFF>;

     label2:
        virtualinvoke r1.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r2, $r3);

        return;
    }

    public static void antialiasText(java.awt.Graphics, boolean)
    {
        java.awt.Graphics2D r1;
        java.awt.Graphics r0;
        java.awt.RenderingHints$Key $r2;
        java.lang.Object $r3;
        boolean z0;

        r0 := @parameter0: java.awt.Graphics;

        z0 := @parameter1: boolean;

        r1 = (java.awt.Graphics2D) r0;

        $r2 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_TEXT_ANTIALIASING>;

        if z0 == 0 goto label1;

        $r3 = <java.awt.RenderingHints: java.lang.Object VALUE_TEXT_ANTIALIAS_ON>;

        goto label2;

     label1:
        $r3 = <java.awt.RenderingHints: java.lang.Object VALUE_TEXT_ANTIALIAS_OFF>;

     label2:
        virtualinvoke r1.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r2, $r3);

        return;
    }

    static void <clinit>()
    {
        java.awt.Color $r1, $r2, $r4, $r5, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r30;
        java.awt.Color[] $r0, $r3, $r6, $r11, $r16, $r21, $r26;

        $r0 = newarray (java.awt.Color)[2];

        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int)>(251, 251, 251);

        $r0[0] = $r1;

        $r2 = new java.awt.Color;

        specialinvoke $r2.<java.awt.Color: void <init>(int,int,int)>(237, 237, 237);

        $r0[1] = $r2;

        <com.jidesoft.plaf.aqua.AquaJideUtils: java.awt.Color[] HALF_LIGHT> = $r0;

        $r3 = newarray (java.awt.Color)[2];

        $r4 = new java.awt.Color;

        specialinvoke $r4.<java.awt.Color: void <init>(int,int,int)>(133, 133, 133);

        $r3[0] = $r4;

        $r5 = new java.awt.Color;

        specialinvoke $r5.<java.awt.Color: void <init>(int,int,int)>(125, 125, 125);

        $r3[1] = $r5;

        <com.jidesoft.plaf.aqua.AquaJideUtils: java.awt.Color[] HALF_DARK> = $r3;

        $r6 = newarray (java.awt.Color)[4];

        $r7 = new java.awt.Color;

        specialinvoke $r7.<java.awt.Color: void <init>(int,int,int)>(252, 252, 252);

        $r6[0] = $r7;

        $r8 = new java.awt.Color;

        specialinvoke $r8.<java.awt.Color: void <init>(int,int,int)>(236, 236, 236);

        $r6[1] = $r8;

        $r9 = new java.awt.Color;

        specialinvoke $r9.<java.awt.Color: void <init>(int,int,int)>(225, 225, 225);

        $r6[2] = $r9;

        $r10 = new java.awt.Color;

        specialinvoke $r10.<java.awt.Color: void <init>(int,int,int)>(255, 255, 255);

        $r6[3] = $r10;

        <com.jidesoft.plaf.aqua.AquaJideUtils: java.awt.Color[] AQUA_WHITE> = $r6;

        $r11 = newarray (java.awt.Color)[4];

        $r12 = new java.awt.Color;

        specialinvoke $r12.<java.awt.Color: void <init>(int,int,int)>(221, 225, 244);

        $r11[0] = $r12;

        $r13 = new java.awt.Color;

        specialinvoke $r13.<java.awt.Color: void <init>(int,int,int)>(139, 187, 238);

        $r11[1] = $r13;

        $r14 = new java.awt.Color;

        specialinvoke $r14.<java.awt.Color: void <init>(int,int,int)>(100, 168, 242);

        $r11[2] = $r14;

        $r15 = new java.awt.Color;

        specialinvoke $r15.<java.awt.Color: void <init>(int,int,int)>(187, 255, 255);

        $r11[3] = $r15;

        <com.jidesoft.plaf.aqua.AquaJideUtils: java.awt.Color[] AQUA_BLUE> = $r11;

        $r16 = newarray (java.awt.Color)[4];

        $r17 = new java.awt.Color;

        specialinvoke $r17.<java.awt.Color: void <init>(int,int,int)>(231, 233, 235);

        $r16[0] = $r17;

        $r18 = new java.awt.Color;

        specialinvoke $r18.<java.awt.Color: void <init>(int,int,int)>(182, 188, 198);

        $r16[1] = $r18;

        $r19 = new java.awt.Color;

        specialinvoke $r19.<java.awt.Color: void <init>(int,int,int)>(158, 158, 180);

        $r16[2] = $r19;

        $r20 = new java.awt.Color;

        specialinvoke $r20.<java.awt.Color: void <init>(int,int,int)>(231, 241, 255);

        $r16[3] = $r20;

        <com.jidesoft.plaf.aqua.AquaJideUtils: java.awt.Color[] AQUA_GRAPHITE> = $r16;

        $r21 = newarray (java.awt.Color)[4];

        $r22 = new java.awt.Color;

        specialinvoke $r22.<java.awt.Color: void <init>(int,int,int)>(255, 255, 255);

        $r21[0] = $r22;

        $r23 = new java.awt.Color;

        specialinvoke $r23.<java.awt.Color: void <init>(int,int,int)>(248, 248, 248);

        $r21[1] = $r23;

        $r24 = new java.awt.Color;

        specialinvoke $r24.<java.awt.Color: void <init>(int,int,int)>(228, 228, 228);

        $r21[2] = $r24;

        $r25 = new java.awt.Color;

        specialinvoke $r25.<java.awt.Color: void <init>(int,int,int)>(239, 239, 239);

        $r21[3] = $r25;

        <com.jidesoft.plaf.aqua.AquaJideUtils: java.awt.Color[] AQUA_BANNER_WHITE> = $r21;

        $r26 = newarray (java.awt.Color)[4];

        $r27 = new java.awt.Color;

        specialinvoke $r27.<java.awt.Color: void <init>(int,int,int)>(103, 159, 254);

        $r26[0] = $r27;

        $r28 = new java.awt.Color;

        specialinvoke $r28.<java.awt.Color: void <init>(int,int,int)>(73, 132, 253);

        $r26[1] = $r28;

        $r29 = new java.awt.Color;

        specialinvoke $r29.<java.awt.Color: void <init>(int,int,int)>(51, 132, 253);

        $r26[2] = $r29;

        $r30 = new java.awt.Color;

        specialinvoke $r30.<java.awt.Color: void <init>(int,int,int)>(84, 170, 254);

        $r26[3] = $r30;

        <com.jidesoft.plaf.aqua.AquaJideUtils: java.awt.Color[] AQUA_BANNER_BLUE> = $r26;

        return;
    }
}
