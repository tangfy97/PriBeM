public class com.hp.hpl.jena.sparql.expr.ExprAggregator extends com.hp.hpl.jena.sparql.expr.ExprNode
{
    protected com.hp.hpl.jena.sparql.expr.aggregate.Aggregator aggregator;
    protected com.hp.hpl.jena.sparql.core.Var var;
    protected com.hp.hpl.jena.sparql.expr.ExprVar exprVar;

    public void <init>(com.hp.hpl.jena.sparql.core.Var, com.hp.hpl.jena.sparql.expr.aggregate.Aggregator)
    {
        com.hp.hpl.jena.sparql.expr.aggregate.Aggregator r2;
        com.hp.hpl.jena.sparql.expr.ExprAggregator r0;
        com.hp.hpl.jena.sparql.core.Var r1;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprAggregator;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Var;

        r2 := @parameter1: com.hp.hpl.jena.sparql.expr.aggregate.Aggregator;

        specialinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprNode: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.expr.ExprVar exprVar> = null;

        specialinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprAggregator: void _setVar(com.hp.hpl.jena.sparql.core.Var)>(r1);

        r0.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.expr.aggregate.Aggregator aggregator> = r2;

        return;
    }

    public com.hp.hpl.jena.sparql.core.Var getVar()
    {
        com.hp.hpl.jena.sparql.expr.ExprAggregator r0;
        com.hp.hpl.jena.sparql.core.Var $r1;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprAggregator;

        $r1 = r0.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.core.Var var>;

        return $r1;
    }

    public void setVar(com.hp.hpl.jena.sparql.core.Var)
    {
        com.hp.hpl.jena.sparql.expr.ExprAggregator r0;
        java.lang.String $r5, $r8, $r11, $r18;
        com.hp.hpl.jena.sparql.core.Var $r1, r2, $r16;
        com.hp.hpl.jena.sparql.ARQInternalErrorException $r3, $r9;
        java.lang.StringBuilder $r4, $r6, $r7, $r10, $r12, $r13, $r14, $r15, $r17;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprAggregator;

        r2 := @parameter0: com.hp.hpl.jena.sparql.core.Var;

        $r1 = r0.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.core.Var var>;

        if $r1 == null goto label1;

        $r9 = new com.hp.hpl.jena.sparql.ARQInternalErrorException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = staticinvoke <com.hp.hpl.jena.sparql.util.Utils: java.lang.String className(java.lang.Object)>(r0);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Attempt to set variable to ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when already set as ");

        $r16 = r0.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.core.Var var>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<com.hp.hpl.jena.sparql.ARQInternalErrorException: void <init>(java.lang.String)>($r18);

        throw $r9;

     label1:
        if r2 != null goto label2;

        $r3 = new com.hp.hpl.jena.sparql.ARQInternalErrorException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.util.Utils: java.lang.String className(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Attempt to set variable to null");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<com.hp.hpl.jena.sparql.ARQInternalErrorException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label2:
        specialinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprAggregator: void _setVar(com.hp.hpl.jena.sparql.core.Var)>(r2);

        return;
    }

    private void _setVar(com.hp.hpl.jena.sparql.core.Var)
    {
        com.hp.hpl.jena.sparql.expr.ExprAggregator r0;
        com.hp.hpl.jena.sparql.core.Var r1, $r3;
        com.hp.hpl.jena.sparql.expr.ExprVar $r2;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprAggregator;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Var;

        r0.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.core.Var var> = r1;

        $r2 = new com.hp.hpl.jena.sparql.expr.ExprVar;

        $r3 = r0.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.core.Var var>;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.expr.ExprVar: void <init>(com.hp.hpl.jena.sparql.core.Var)>($r3);

        r0.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.expr.ExprVar exprVar> = $r2;

        return;
    }

    public com.hp.hpl.jena.sparql.expr.aggregate.Aggregator getAggregator()
    {
        com.hp.hpl.jena.sparql.expr.aggregate.Aggregator $r1;
        com.hp.hpl.jena.sparql.expr.ExprAggregator r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprAggregator;

        $r1 = r0.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.expr.aggregate.Aggregator aggregator>;

        return $r1;
    }

    public int hashCode()
    {
        com.hp.hpl.jena.sparql.expr.ExprAggregator r0;
        int $i0, $i1, i2;
        com.hp.hpl.jena.sparql.expr.aggregate.Aggregator $r1;
        com.hp.hpl.jena.sparql.core.Var $r2, $r3;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprAggregator;

        $r1 = r0.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.expr.aggregate.Aggregator aggregator>;

        $i0 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.expr.aggregate.Aggregator: int hashCode()>();

        i2 = $i0;

        $r2 = r0.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.core.Var var>;

        if $r2 == null goto label1;

        $r3 = r0.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.core.Var var>;

        $i1 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.core.Var: int hashCode()>();

        i2 = $i0 ^ $i1;

     label1:
        return i2;
    }

    public boolean equals(java.lang.Object)
    {
        com.hp.hpl.jena.sparql.core.Var $r3, $r4;
        com.hp.hpl.jena.sparql.expr.ExprAggregator r0, r2;
        java.lang.Object r1;
        com.hp.hpl.jena.sparql.expr.aggregate.Aggregator $r5, $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprAggregator;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof com.hp.hpl.jena.sparql.expr.ExprAggregator;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (com.hp.hpl.jena.sparql.expr.ExprAggregator) r1;

        $r4 = r0.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.core.Var var>;

        $r3 = r2.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.core.Var var>;

        $z1 = staticinvoke <org.apache.jena.atlas.lib.Lib: boolean equal(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r6 = r0.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.expr.aggregate.Aggregator aggregator>;

        $r5 = r2.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.expr.aggregate.Aggregator aggregator>;

        $z2 = staticinvoke <org.apache.jena.atlas.lib.Lib: boolean equal(java.lang.Object,java.lang.Object)>($r6, $r5);

        return $z2;
    }

    public com.hp.hpl.jena.sparql.expr.ExprVar getExprVar()
    {
        com.hp.hpl.jena.sparql.ARQInternalErrorException $r0;
        com.hp.hpl.jena.sparql.expr.ExprAggregator r1;

        r1 := @this: com.hp.hpl.jena.sparql.expr.ExprAggregator;

        $r0 = new com.hp.hpl.jena.sparql.ARQInternalErrorException;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.ARQInternalErrorException: void <init>()>();

        throw $r0;
    }

    public com.hp.hpl.jena.sparql.core.Var asVar()
    {
        com.hp.hpl.jena.sparql.ARQInternalErrorException $r0;
        com.hp.hpl.jena.sparql.expr.ExprAggregator r1;

        r1 := @this: com.hp.hpl.jena.sparql.expr.ExprAggregator;

        $r0 = new com.hp.hpl.jena.sparql.ARQInternalErrorException;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.ARQInternalErrorException: void <init>()>();

        throw $r0;
    }

    public com.hp.hpl.jena.sparql.expr.ExprVar getAggVar()
    {
        com.hp.hpl.jena.sparql.expr.ExprAggregator r0;
        com.hp.hpl.jena.sparql.expr.ExprVar $r1;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprAggregator;

        $r1 = r0.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.expr.ExprVar exprVar>;

        return $r1;
    }

    public java.lang.String asSparqlExpr()
    {
        com.hp.hpl.jena.sparql.expr.aggregate.Aggregator $r1;
        java.lang.String $r2;
        com.hp.hpl.jena.sparql.expr.ExprAggregator r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprAggregator;

        $r1 = r0.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.expr.aggregate.Aggregator aggregator>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public com.hp.hpl.jena.sparql.expr.ExprAggregator copySubstitute(com.hp.hpl.jena.sparql.engine.binding.Binding, boolean)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding r4;
        com.hp.hpl.jena.sparql.expr.ExprAggregator r0, $r3;
        com.hp.hpl.jena.sparql.expr.aggregate.Aggregator r2;
        com.hp.hpl.jena.sparql.core.Var r1;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprAggregator;

        r4 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        z0 := @parameter1: boolean;

        r1 = r0.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.core.Var var>;

        r2 = r0.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.expr.aggregate.Aggregator aggregator>;

        $r3 = new com.hp.hpl.jena.sparql.expr.ExprAggregator;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.expr.ExprAggregator: void <init>(com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.sparql.expr.aggregate.Aggregator)>(r1, r2);

        return $r3;
    }

    public com.hp.hpl.jena.sparql.expr.ExprAggregator applyNodeTransform(com.hp.hpl.jena.sparql.graph.NodeTransform)
    {
        com.hp.hpl.jena.graph.Node $r3, r9;
        com.hp.hpl.jena.sparql.core.Var $r2, $r7, $r8;
        com.hp.hpl.jena.sparql.graph.NodeTransform r0;
        com.hp.hpl.jena.sparql.expr.ExprAggregator r1, $r6;
        com.hp.hpl.jena.sparql.expr.aggregate.Aggregator $r4, $r5;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.sparql.expr.ExprAggregator;

        r0 := @parameter0: com.hp.hpl.jena.sparql.graph.NodeTransform;

        $r2 = r1.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.core.Var var>;

        $r3 = interfaceinvoke r0.<com.hp.hpl.jena.sparql.graph.NodeTransform: com.hp.hpl.jena.graph.Node convert(com.hp.hpl.jena.graph.Node)>($r2);

        r9 = $r3;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: boolean isVar(com.hp.hpl.jena.graph.Node)>($r3);

        if $z0 != 0 goto label1;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r1, "Attempt to convert an aggregation variable to a non-variable: ignored");

        r9 = r1.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.core.Var var>;

     label1:
        $r8 = (com.hp.hpl.jena.sparql.core.Var) r9;

        $r4 = r1.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.expr.aggregate.Aggregator aggregator>;

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.sparql.expr.aggregate.Aggregator: com.hp.hpl.jena.sparql.expr.aggregate.Aggregator copyTransform(com.hp.hpl.jena.sparql.graph.NodeTransform)>(r0);

        $r6 = new com.hp.hpl.jena.sparql.expr.ExprAggregator;

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: com.hp.hpl.jena.sparql.core.Var alloc(com.hp.hpl.jena.graph.Node)>(r9);

        specialinvoke $r6.<com.hp.hpl.jena.sparql.expr.ExprAggregator: void <init>(com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.sparql.expr.aggregate.Aggregator)>($r7, $r5);

        return $r6;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.jena.sparql.expr.ExprAggregator r2;
        java.lang.String $r7, $r12, $r15, $r16;
        com.hp.hpl.jena.sparql.expr.aggregate.Aggregator $r11;
        com.hp.hpl.jena.sparql.core.Var $r3, $r6;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r8, $r9, $r10, $r13, $r14;

        r2 := @this: com.hp.hpl.jena.sparql.expr.ExprAggregator;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(AGG ");

        $r3 = r2.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.core.Var var>;

        if $r3 != null goto label1;

        $r16 = "<>";

        goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r6 = r2.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.core.Var var>;

        $r7 = virtualinvoke $r6.<com.hp.hpl.jena.sparql.core.Var: java.lang.String getVarName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r16 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r9 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r11 = r2.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.expr.aggregate.Aggregator aggregator>;

        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.String toString()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    public com.hp.hpl.jena.sparql.expr.Expr copy(com.hp.hpl.jena.sparql.core.Var)
    {
        com.hp.hpl.jena.sparql.expr.ExprAggregator $r0, r2;
        com.hp.hpl.jena.sparql.expr.Expr $r5;
        com.hp.hpl.jena.sparql.expr.aggregate.Aggregator $r3, $r4, $r6;
        com.hp.hpl.jena.sparql.core.Var r1;

        r2 := @this: com.hp.hpl.jena.sparql.expr.ExprAggregator;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Var;

        $r0 = new com.hp.hpl.jena.sparql.expr.ExprAggregator;

        $r4 = r2.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.expr.aggregate.Aggregator aggregator>;

        $r3 = r2.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.expr.aggregate.Aggregator aggregator>;

        $r5 = interfaceinvoke $r3.<com.hp.hpl.jena.sparql.expr.aggregate.Aggregator: com.hp.hpl.jena.sparql.expr.Expr getExpr()>();

        $r6 = interfaceinvoke $r4.<com.hp.hpl.jena.sparql.expr.aggregate.Aggregator: com.hp.hpl.jena.sparql.expr.aggregate.Aggregator copy(com.hp.hpl.jena.sparql.expr.Expr)>($r5);

        specialinvoke $r0.<com.hp.hpl.jena.sparql.expr.ExprAggregator: void <init>(com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.sparql.expr.aggregate.Aggregator)>(r1, $r6);

        return $r0;
    }

    public com.hp.hpl.jena.sparql.expr.NodeValue eval(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.function.FunctionEnv)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding r1;
        com.hp.hpl.jena.sparql.expr.NodeValue $r4;
        com.hp.hpl.jena.sparql.expr.ExprAggregator r0;
        com.hp.hpl.jena.sparql.function.FunctionEnv r2;
        com.hp.hpl.jena.sparql.core.Var $r3;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprAggregator;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r2 := @parameter1: com.hp.hpl.jena.sparql.function.FunctionEnv;

        $r3 = r0.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.core.Var var>;

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.expr.ExprVar: com.hp.hpl.jena.sparql.expr.NodeValue eval(com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.function.FunctionEnv)>($r3, r1, r2);

        return $r4;
    }

    public com.hp.hpl.jena.sparql.expr.Expr apply(com.hp.hpl.jena.sparql.expr.ExprTransform)
    {
        com.hp.hpl.jena.sparql.expr.ExprTransform r0;
        com.hp.hpl.jena.sparql.expr.ExprAggregator r1;
        com.hp.hpl.jena.sparql.expr.Expr $r2;

        r1 := @this: com.hp.hpl.jena.sparql.expr.ExprAggregator;

        r0 := @parameter0: com.hp.hpl.jena.sparql.expr.ExprTransform;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprTransform: com.hp.hpl.jena.sparql.expr.Expr transform(com.hp.hpl.jena.sparql.expr.ExprAggregator)>(r1);

        return $r2;
    }

    public void visit(com.hp.hpl.jena.sparql.expr.ExprVisitor)
    {
        com.hp.hpl.jena.sparql.expr.ExprVisitor r0;
        com.hp.hpl.jena.sparql.expr.ExprAggregator r1;

        r1 := @this: com.hp.hpl.jena.sparql.expr.ExprAggregator;

        r0 := @parameter0: com.hp.hpl.jena.sparql.expr.ExprVisitor;

        interfaceinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprVisitor: void visit(com.hp.hpl.jena.sparql.expr.ExprAggregator)>(r1);

        return;
    }

    public volatile com.hp.hpl.jena.sparql.expr.Expr applyNodeTransform(com.hp.hpl.jena.sparql.graph.NodeTransform)
    {
        com.hp.hpl.jena.sparql.expr.ExprAggregator r0, $r2;
        com.hp.hpl.jena.sparql.graph.NodeTransform r1;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprAggregator;

        r1 := @parameter0: com.hp.hpl.jena.sparql.graph.NodeTransform;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.expr.ExprAggregator applyNodeTransform(com.hp.hpl.jena.sparql.graph.NodeTransform)>(r1);

        return $r2;
    }

    public volatile com.hp.hpl.jena.sparql.expr.Expr copySubstitute(com.hp.hpl.jena.sparql.engine.binding.Binding, boolean)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding r1;
        com.hp.hpl.jena.sparql.expr.ExprAggregator r0, $r2;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprAggregator;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprAggregator: com.hp.hpl.jena.sparql.expr.ExprAggregator copySubstitute(com.hp.hpl.jena.sparql.engine.binding.Binding,boolean)>(r1, z0);

        return $r2;
    }
}
