class com.google.gxp.compiler.cli.GxpcFlags extends java.lang.Object implements com.google.gxp.compiler.Configuration
{
    private final com.google.gxp.compiler.cli.GxpcFlags$CommandLine commandLine;
    private final com.google.gxp.com.google.common.collect.ImmutableSet sourceFiles;
    private final com.google.gxp.com.google.common.collect.ImmutableSet schemaFiles;
    private final com.google.gxp.com.google.common.collect.ImmutableSet outputLanguages;
    private final com.google.gxp.compiler.codegen.DefaultCodeGeneratorFactory codeGeneratorFactory;
    private final com.google.gxp.com.google.common.collect.ImmutableSet allowedOutputFileRefs;
    private final com.google.gxp.compiler.fs.FileRef dependencyFile;
    private final com.google.gxp.compiler.fs.FileRef propertiesFile;
    private final boolean isVerboseEnabled;
    private final boolean isDebugEnabled;
    private final com.google.gxp.compiler.alerts.AlertPolicy alertPolicy;
    private final com.google.gxp.com.google.common.collect.ImmutableSortedSet dotPhases;
    private final com.google.gxp.compiler.parser.SourceEntityResolver sourceEntityResolver;

    transient void <init>(com.google.gxp.compiler.fs.FileSystem, com.google.gxp.compiler.fs.FileRef, java.lang.String[]) throws org.kohsuke.args4j.CmdLineException, java.io.IOException
    {
        com.google.gxp.compiler.parser.FileSystemEntityResolver $r65;
        com.google.gxp.compiler.alerts.AlertPolicy $r35, $r78;
        java.util.EnumSet $r23;
        java.util.Set $r18, $r73, $r75;
        java.lang.StringBuilder $r43, $r44, $r48, $r49;
        com.google.gxp.compiler.cli.GxpcFlags r0;
        com.google.gxp.compiler.codegen.DefaultCodeGeneratorFactory $r66, $r67, $r70, $r72, $r74, $r76, $r77;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet $r64;
        java.lang.String $r8, $r10, $r13, $r15, $r37, $r39, $r42, $r46, $r47, $r50, r52, $r53, $r69;
        com.google.gxp.compiler.base.OutputLanguage $r54;
        com.google.gxp.compiler.cli.GxpcFlags$CommandLine $r1, $r4, $r7, $r9, $r12, $r14, $r20, $r24, $r28, $r31, $r32, $r36, $r38, $r40, $r41, $r45, $r60, $r61, $r62, $r68, $r71;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.google.gxp.com.google.common.collect.ImmutableSet $r6, $r19, $r22, $r27, $r30;
        java.util.List $r5, r16, $r21, $r25, $r29, $r33, $r34, $r57, $r63;
        java.lang.String[] r2;
        com.google.gxp.compiler.fs.SourcePathFileSystem $r17;
        com.google.gxp.compiler.fs.FileRef r11, r55, $r56, $r58, $r59;
        java.util.Iterator $r26;
        com.google.gxp.compiler.fs.FileSystem r3;
        java.lang.Object $r51;

        r0 := @this: com.google.gxp.compiler.cli.GxpcFlags;

        r3 := @parameter0: com.google.gxp.compiler.fs.FileSystem;

        r55 := @parameter1: com.google.gxp.compiler.fs.FileRef;

        r2 := @parameter2: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.google.gxp.compiler.cli.GxpcFlags$CommandLine;

        specialinvoke $r1.<com.google.gxp.compiler.cli.GxpcFlags$CommandLine: void <init>(java.lang.String[],com.google.gxp.compiler.cli.GxpcFlags$1)>(r2, null);

        r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.cli.GxpcFlags$CommandLine commandLine> = $r1;

        $r4 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.cli.GxpcFlags$CommandLine commandLine>;

        $r5 = $r4.<com.google.gxp.compiler.cli.GxpcFlags$CommandLine: java.util.List trailingArgs>;

        $r6 = staticinvoke <com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.com.google.common.collect.ImmutableSet getFileRefs(com.google.gxp.compiler.fs.FileSystem,java.lang.Iterable)>(r3, $r5);

        $r7 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.cli.GxpcFlags$CommandLine commandLine>;

        $r8 = $r7.<com.google.gxp.compiler.cli.GxpcFlags$CommandLine: java.lang.String FLAG_dir>;

        if $r8 != null goto label01;

        $r56 = r55;

        goto label02;

     label01:
        $r9 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.cli.GxpcFlags$CommandLine commandLine>;

        $r10 = $r9.<com.google.gxp.compiler.cli.GxpcFlags$CommandLine: java.lang.String FLAG_dir>;

        $r56 = interfaceinvoke r3.<com.google.gxp.compiler.fs.FileSystem: com.google.gxp.compiler.fs.FileRef parseFilename(java.lang.String)>($r10);

     label02:
        r11 = $r56;

        $r12 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.cli.GxpcFlags$CommandLine commandLine>;

        $r13 = $r12.<com.google.gxp.compiler.cli.GxpcFlags$CommandLine: java.lang.String FLAG_source>;

        if $r13 != null goto label03;

        $r57 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r55);

        goto label04;

     label03:
        $r14 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.cli.GxpcFlags$CommandLine commandLine>;

        $r15 = $r14.<com.google.gxp.compiler.cli.GxpcFlags$CommandLine: java.lang.String FLAG_source>;

        $r57 = interfaceinvoke r3.<com.google.gxp.compiler.fs.FileSystem: java.util.List parseFilenameList(java.lang.String)>($r15);

     label04:
        r16 = $r57;

        $r17 = new com.google.gxp.compiler.fs.SourcePathFileSystem;

        specialinvoke $r17.<com.google.gxp.compiler.fs.SourcePathFileSystem: void <init>(com.google.gxp.compiler.fs.FileSystem,java.lang.Iterable,java.lang.Iterable,com.google.gxp.compiler.fs.FileRef)>(r3, $r57, $r6, r11);

        $r18 = virtualinvoke $r17.<com.google.gxp.compiler.fs.SourcePathFileSystem: java.util.Set getSourceFileRefs()>();

        $r19 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSet: com.google.gxp.com.google.common.collect.ImmutableSet copyOf(java.lang.Iterable)>($r18);

        r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.com.google.common.collect.ImmutableSet sourceFiles> = $r19;

        $r20 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.cli.GxpcFlags$CommandLine commandLine>;

        $r21 = $r20.<com.google.gxp.compiler.cli.GxpcFlags$CommandLine: java.util.List FLAG_schema>;

        $r22 = staticinvoke <com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.com.google.common.collect.ImmutableSet getFileRefs(com.google.gxp.compiler.fs.FileSystem,java.lang.Iterable)>(r3, $r21);

        r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.com.google.common.collect.ImmutableSet schemaFiles> = $r22;

        $r23 = staticinvoke <java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>(class "Lcom/google/gxp/compiler/base/OutputLanguage;");

        $r24 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.cli.GxpcFlags$CommandLine commandLine>;

        $r25 = $r24.<com.google.gxp.compiler.cli.GxpcFlags$CommandLine: java.util.List FLAG_output_language>;

        $r26 = interfaceinvoke $r25.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke $r26.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r51 = interfaceinvoke $r26.<java.util.Iterator: java.lang.Object next()>();

        r52 = (java.lang.String) $r51;

        $r53 = virtualinvoke r52.<java.lang.String: java.lang.String toUpperCase()>();

        $r54 = staticinvoke <com.google.gxp.compiler.base.OutputLanguage: com.google.gxp.compiler.base.OutputLanguage valueOf(java.lang.String)>($r53);

        interfaceinvoke $r23.<java.util.Set: boolean add(java.lang.Object)>($r54);

        goto label05;

     label06:
        $r27 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSet: com.google.gxp.com.google.common.collect.ImmutableSet copyOf(java.lang.Iterable)>($r23);

        r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.com.google.common.collect.ImmutableSet outputLanguages> = $r27;

        $r28 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.cli.GxpcFlags$CommandLine commandLine>;

        $r29 = $r28.<com.google.gxp.compiler.cli.GxpcFlags$CommandLine: java.util.List FLAG_output>;

        $r30 = staticinvoke <com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.com.google.common.collect.ImmutableSet getFileRefs(com.google.gxp.compiler.fs.FileSystem,java.lang.Iterable)>($r17, $r29);

        r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.com.google.common.collect.ImmutableSet allowedOutputFileRefs> = $r30;

        $r31 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.cli.GxpcFlags$CommandLine commandLine>;

        $r34 = $r31.<com.google.gxp.compiler.cli.GxpcFlags$CommandLine: java.util.List FLAG_warn>;

        $r32 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.cli.GxpcFlags$CommandLine commandLine>;

        $r33 = $r32.<com.google.gxp.compiler.cli.GxpcFlags$CommandLine: java.util.List FLAG_error>;

        $r35 = staticinvoke <com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.alerts.AlertPolicy computeAlertPolicy(java.util.List,java.util.List)>($r34, $r33);

        r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.alerts.AlertPolicy alertPolicy> = $r35;

        $r36 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.cli.GxpcFlags$CommandLine commandLine>;

        $r37 = $r36.<com.google.gxp.compiler.cli.GxpcFlags$CommandLine: java.lang.String FLAG_depend>;

        if $r37 != null goto label07;

        $r58 = null;

        goto label08;

     label07:
        $r38 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.cli.GxpcFlags$CommandLine commandLine>;

        $r39 = $r38.<com.google.gxp.compiler.cli.GxpcFlags$CommandLine: java.lang.String FLAG_depend>;

        $r58 = interfaceinvoke r3.<com.google.gxp.compiler.fs.FileSystem: com.google.gxp.compiler.fs.FileRef parseFilename(java.lang.String)>($r39);

     label08:
        r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.fs.FileRef dependencyFile> = $r58;

        $r40 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.cli.GxpcFlags$CommandLine commandLine>;

        $z0 = $r40.<com.google.gxp.compiler.cli.GxpcFlags$CommandLine: boolean FLAG_output_properties>;

        if $z0 == 0 goto label09;

        $r41 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.cli.GxpcFlags$CommandLine commandLine>;

        $r42 = $r41.<com.google.gxp.compiler.cli.GxpcFlags$CommandLine: java.lang.String FLAG_message_source>;

        if $r42 == null goto label09;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r45 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.cli.GxpcFlags$CommandLine commandLine>;

        $r46 = $r45.<com.google.gxp.compiler.cli.GxpcFlags$CommandLine: java.lang.String FLAG_message_source>;

        $r47 = virtualinvoke $r46.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(".", "/");

        $r48 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_en.properties");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        $r59 = virtualinvoke r11.<com.google.gxp.compiler.fs.FileRef: com.google.gxp.compiler.fs.FileRef join(java.lang.String)>($r50);

        goto label10;

     label09:
        $r59 = null;

     label10:
        r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.fs.FileRef propertiesFile> = $r59;

        $r60 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.cli.GxpcFlags$CommandLine commandLine>;

        $z2 = $r60.<com.google.gxp.compiler.cli.GxpcFlags$CommandLine: boolean FLAG_verbose>;

        r0.<com.google.gxp.compiler.cli.GxpcFlags: boolean isVerboseEnabled> = $z2;

        $r61 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.cli.GxpcFlags$CommandLine commandLine>;

        $z3 = $r61.<com.google.gxp.compiler.cli.GxpcFlags$CommandLine: boolean FLAG_g>;

        r0.<com.google.gxp.compiler.cli.GxpcFlags: boolean isDebugEnabled> = $z3;

        $r62 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.cli.GxpcFlags$CommandLine commandLine>;

        $r63 = $r62.<com.google.gxp.compiler.cli.GxpcFlags$CommandLine: java.util.List FLAG_dot>;

        $r64 = staticinvoke <com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.com.google.common.collect.ImmutableSortedSet computeDotPhases(java.util.List)>($r63);

        r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.com.google.common.collect.ImmutableSortedSet dotPhases> = $r64;

        $r65 = new com.google.gxp.compiler.parser.FileSystemEntityResolver;

        specialinvoke $r65.<com.google.gxp.compiler.parser.FileSystemEntityResolver: void <init>(com.google.gxp.compiler.fs.FileSystem)>($r17);

        r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.parser.SourceEntityResolver sourceEntityResolver> = $r65;

        $r66 = new com.google.gxp.compiler.codegen.DefaultCodeGeneratorFactory;

        specialinvoke $r66.<com.google.gxp.compiler.codegen.DefaultCodeGeneratorFactory: void <init>()>();

        r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.codegen.DefaultCodeGeneratorFactory codeGeneratorFactory> = $r66;

        $r67 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.codegen.DefaultCodeGeneratorFactory codeGeneratorFactory>;

        $r68 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.cli.GxpcFlags$CommandLine commandLine>;

        $r69 = $r68.<com.google.gxp.compiler.cli.GxpcFlags$CommandLine: java.lang.String FLAG_message_source>;

        virtualinvoke $r67.<com.google.gxp.compiler.codegen.DefaultCodeGeneratorFactory: void setRuntimeMessageSource(java.lang.String)>($r69);

        $r70 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.codegen.DefaultCodeGeneratorFactory codeGeneratorFactory>;

        $r71 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.cli.GxpcFlags$CommandLine commandLine>;

        $z4 = $r71.<com.google.gxp.compiler.cli.GxpcFlags$CommandLine: boolean FLAG_dynamic>;

        virtualinvoke $r70.<com.google.gxp.compiler.codegen.DefaultCodeGeneratorFactory: void setDynamicModeEnabled(boolean)>($z4);

        $r72 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.codegen.DefaultCodeGeneratorFactory codeGeneratorFactory>;

        $r73 = virtualinvoke r0.<com.google.gxp.compiler.cli.GxpcFlags: java.util.Set getSourceFiles()>();

        virtualinvoke $r72.<com.google.gxp.compiler.codegen.DefaultCodeGeneratorFactory: void setSourceFiles(java.util.Collection)>($r73);

        $r74 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.codegen.DefaultCodeGeneratorFactory codeGeneratorFactory>;

        $r75 = virtualinvoke r0.<com.google.gxp.compiler.cli.GxpcFlags: java.util.Set getSchemaFiles()>();

        virtualinvoke $r74.<com.google.gxp.compiler.codegen.DefaultCodeGeneratorFactory: void setSchemaFiles(java.util.Collection)>($r75);

        $r76 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.codegen.DefaultCodeGeneratorFactory codeGeneratorFactory>;

        virtualinvoke $r76.<com.google.gxp.compiler.codegen.DefaultCodeGeneratorFactory: void setSourcePaths(java.util.Collection)>(r16);

        $r77 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.codegen.DefaultCodeGeneratorFactory codeGeneratorFactory>;

        $r78 = virtualinvoke r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.alerts.AlertPolicy getAlertPolicy()>();

        virtualinvoke $r77.<com.google.gxp.compiler.codegen.DefaultCodeGeneratorFactory: void setAlertPolicy(com.google.gxp.compiler.alerts.AlertPolicy)>($r78);

        return;
    }

    public boolean showHelp()
    {
        com.google.gxp.compiler.cli.GxpcFlags$CommandLine $r1;
        com.google.gxp.compiler.cli.GxpcFlags r0;
        boolean $z0;

        r0 := @this: com.google.gxp.compiler.cli.GxpcFlags;

        $r1 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.cli.GxpcFlags$CommandLine commandLine>;

        $z0 = $r1.<com.google.gxp.compiler.cli.GxpcFlags$CommandLine: boolean FLAG_help>;

        return $z0;
    }

    public void printHelp(java.lang.Appendable) throws java.io.IOException
    {
        com.google.gxp.compiler.cli.GxpcFlags$CommandLine $r2;
        com.google.gxp.compiler.cli.GxpcFlags r1;
        java.lang.Appendable r0;
        java.lang.String $r3;

        r1 := @this: com.google.gxp.compiler.cli.GxpcFlags;

        r0 := @parameter0: java.lang.Appendable;

        $r2 = r1.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.cli.GxpcFlags$CommandLine commandLine>;

        $r3 = virtualinvoke $r2.<com.google.gxp.compiler.cli.GxpcFlags$CommandLine: java.lang.String getUsage()>();

        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r3);

        return;
    }

    private static com.google.gxp.com.google.common.collect.ImmutableSet getFileRefs(com.google.gxp.compiler.fs.FileSystem, java.lang.Iterable)
    {
        java.util.Iterator $r2;
        java.lang.Iterable r1;
        java.util.HashSet $r0;
        com.google.gxp.com.google.common.collect.ImmutableSet $r3;
        com.google.gxp.compiler.fs.FileSystem r6;
        java.lang.Object $r4;
        java.lang.String r5;
        com.google.gxp.compiler.fs.FileRef $r7;
        boolean $z0;

        r6 := @parameter0: com.google.gxp.compiler.fs.FileSystem;

        r1 := @parameter1: java.lang.Iterable;

        $r0 = staticinvoke <com.google.gxp.com.google.common.collect.Sets: java.util.HashSet newHashSet()>();

        $r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $r7 = interfaceinvoke r6.<com.google.gxp.compiler.fs.FileSystem: com.google.gxp.compiler.fs.FileRef parseFilename(java.lang.String)>(r5);

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        $r3 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSet: com.google.gxp.com.google.common.collect.ImmutableSet copyOf(java.lang.Iterable)>($r0);

        return $r3;
    }

    private static final com.google.gxp.compiler.alerts.AlertPolicy computeAlertPolicy(java.util.List, java.util.List)
    {
        java.util.List r1, r3;
        com.google.gxp.compiler.alerts.ConfigurableAlertPolicy $r0;
        com.google.gxp.compiler.alerts.Alert$Severity $r2, $r4;
        boolean $z0;

        r1 := @parameter0: java.util.List;

        r3 := @parameter1: java.util.List;

        $r0 = new com.google.gxp.compiler.alerts.ConfigurableAlertPolicy;

        specialinvoke $r0.<com.google.gxp.compiler.alerts.ConfigurableAlertPolicy: void <init>()>();

        $r2 = <com.google.gxp.compiler.alerts.Alert$Severity: com.google.gxp.compiler.alerts.Alert$Severity WARNING>;

        staticinvoke <com.google.gxp.compiler.cli.GxpcFlags: void configureAlertPolicy(com.google.gxp.compiler.alerts.ConfigurableAlertPolicy,java.util.List,com.google.gxp.compiler.alerts.Alert$Severity)>($r0, r1, $r2);

        $r4 = <com.google.gxp.compiler.alerts.Alert$Severity: com.google.gxp.compiler.alerts.Alert$Severity ERROR>;

        staticinvoke <com.google.gxp.compiler.cli.GxpcFlags: void configureAlertPolicy(com.google.gxp.compiler.alerts.ConfigurableAlertPolicy,java.util.List,com.google.gxp.compiler.alerts.Alert$Severity)>($r0, r3, $r4);

        $z0 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>("error");

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<com.google.gxp.compiler.alerts.ConfigurableAlertPolicy: void setTreatWarningsAsErrors(boolean)>(1);

     label1:
        return $r0;
    }

    private static final void configureAlertPolicy(com.google.gxp.compiler.alerts.ConfigurableAlertPolicy, java.util.List, com.google.gxp.compiler.alerts.Alert$Severity)
    {
        java.util.List r0;
        com.google.gxp.compiler.alerts.ConfigurableAlertPolicy r1;
        com.google.gxp.compiler.alerts.Alert$Severity r2;
        boolean $z0;

        r1 := @parameter0: com.google.gxp.compiler.alerts.ConfigurableAlertPolicy;

        r0 := @parameter1: java.util.List;

        r2 := @parameter2: com.google.gxp.compiler.alerts.Alert$Severity;

        $z0 = interfaceinvoke r0.<java.util.List: boolean contains(java.lang.Object)>("i18n");

        if $z0 == 0 goto label1;

        virtualinvoke r1.<com.google.gxp.compiler.alerts.ConfigurableAlertPolicy: void setSeverity(java.lang.Class,com.google.gxp.compiler.alerts.Alert$Severity)>(class "Lcom/google/gxp/compiler/i18ncheck/UnextractableContentAlert;", r2);

     label1:
        return;
    }

    private static com.google.gxp.com.google.common.collect.ImmutableSortedSet computeDotPhases(java.util.List) throws org.kohsuke.args4j.CmdLineException
    {
        java.lang.Throwable $r20;
        java.util.TreeSet $r0;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet $r3;
        int $i0;
        java.lang.String $r5, $r6, $r7, $r16, r17;
        com.google.gxp.compiler.Phase[] $r9;
        boolean $z0, $z1;
        java.util.Iterator $r2;
        com.google.gxp.compiler.Phase $r8;
        java.lang.IllegalArgumentException $r11;
        org.kohsuke.args4j.CmdLineException $r19;
        java.util.List r1, $r10;
        java.lang.Object $r4;
        java.lang.StringBuilder $r14, $r15, $r18;

        r1 := @parameter0: java.util.List;

        $r0 = staticinvoke <com.google.gxp.com.google.common.collect.Sets: java.util.TreeSet newTreeSet()>();

        $z0 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>("*");

        if $z0 == 0 goto label1;

        $r9 = staticinvoke <com.google.gxp.compiler.Phase: com.google.gxp.compiler.Phase[] values()>();

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        interfaceinvoke $r0.<java.util.SortedSet: boolean addAll(java.util.Collection)>($r10);

        goto label8;

     label1:
        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.lang.String) $r4;

        $r5 = virtualinvoke r17.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 <= 0 goto label7;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String toUpperCase()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("-", "_");

     label3:
        $r8 = staticinvoke <com.google.gxp.compiler.Phase: com.google.gxp.compiler.Phase valueOf(java.lang.String)>($r7);

     label4:
        goto label6;

     label5:
        $r11 := @caughtexception;

        $r19 = new org.kohsuke.args4j.CmdLineException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal phase name in --dot flag: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<org.kohsuke.args4j.CmdLineException: void <init>(java.lang.String)>($r16);

        $r20 = (java.lang.Throwable) $r19;

        throw $r20;

     label6:
        interfaceinvoke $r0.<java.util.SortedSet: boolean add(java.lang.Object)>($r8);

     label7:
        goto label2;

     label8:
        $r3 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet copyOfSorted(java.util.SortedSet)>($r0);

        return $r3;

        catch java.lang.IllegalArgumentException from label3 to label4 with label5;
    }

    public java.util.Set getSourceFiles()
    {
        com.google.gxp.compiler.cli.GxpcFlags r0;
        com.google.gxp.com.google.common.collect.ImmutableSet $r1;

        r0 := @this: com.google.gxp.compiler.cli.GxpcFlags;

        $r1 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.com.google.common.collect.ImmutableSet sourceFiles>;

        return $r1;
    }

    public java.util.Set getSchemaFiles()
    {
        com.google.gxp.compiler.cli.GxpcFlags r0;
        com.google.gxp.com.google.common.collect.ImmutableSet $r1;

        r0 := @this: com.google.gxp.compiler.cli.GxpcFlags;

        $r1 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.com.google.common.collect.ImmutableSet schemaFiles>;

        return $r1;
    }

    public java.util.Set getOutputLanguages()
    {
        com.google.gxp.compiler.cli.GxpcFlags r0;
        com.google.gxp.com.google.common.collect.ImmutableSet $r1;

        r0 := @this: com.google.gxp.compiler.cli.GxpcFlags;

        $r1 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.com.google.common.collect.ImmutableSet outputLanguages>;

        return $r1;
    }

    public com.google.gxp.compiler.codegen.CodeGeneratorFactory getCodeGeneratorFactory()
    {
        com.google.gxp.compiler.cli.GxpcFlags r0;
        com.google.gxp.compiler.codegen.DefaultCodeGeneratorFactory $r1;

        r0 := @this: com.google.gxp.compiler.cli.GxpcFlags;

        $r1 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.codegen.DefaultCodeGeneratorFactory codeGeneratorFactory>;

        return $r1;
    }

    public java.util.Set getAllowedOutputFileRefs()
    {
        com.google.gxp.compiler.cli.GxpcFlags r0;
        com.google.gxp.com.google.common.collect.ImmutableSet $r1;

        r0 := @this: com.google.gxp.compiler.cli.GxpcFlags;

        $r1 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.com.google.common.collect.ImmutableSet allowedOutputFileRefs>;

        return $r1;
    }

    public com.google.gxp.compiler.fs.FileRef getDependencyFile()
    {
        com.google.gxp.compiler.cli.GxpcFlags r0;
        com.google.gxp.compiler.fs.FileRef $r1;

        r0 := @this: com.google.gxp.compiler.cli.GxpcFlags;

        $r1 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.fs.FileRef dependencyFile>;

        return $r1;
    }

    public com.google.gxp.compiler.fs.FileRef getPropertiesFile()
    {
        com.google.gxp.compiler.cli.GxpcFlags r0;
        com.google.gxp.compiler.fs.FileRef $r1;

        r0 := @this: com.google.gxp.compiler.cli.GxpcFlags;

        $r1 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.fs.FileRef propertiesFile>;

        return $r1;
    }

    public boolean isVerboseEnabled()
    {
        com.google.gxp.compiler.cli.GxpcFlags r0;
        boolean $z0;

        r0 := @this: com.google.gxp.compiler.cli.GxpcFlags;

        $z0 = r0.<com.google.gxp.compiler.cli.GxpcFlags: boolean isVerboseEnabled>;

        return $z0;
    }

    public boolean isDebugEnabled()
    {
        com.google.gxp.compiler.cli.GxpcFlags r0;
        boolean $z0;

        r0 := @this: com.google.gxp.compiler.cli.GxpcFlags;

        $z0 = r0.<com.google.gxp.compiler.cli.GxpcFlags: boolean isDebugEnabled>;

        return $z0;
    }

    public com.google.gxp.compiler.alerts.AlertPolicy getAlertPolicy()
    {
        com.google.gxp.compiler.cli.GxpcFlags r0;
        com.google.gxp.compiler.alerts.AlertPolicy $r1;

        r0 := @this: com.google.gxp.compiler.cli.GxpcFlags;

        $r1 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.alerts.AlertPolicy alertPolicy>;

        return $r1;
    }

    public java.util.SortedSet getDotPhases()
    {
        com.google.gxp.compiler.cli.GxpcFlags r0;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet $r1;

        r0 := @this: com.google.gxp.compiler.cli.GxpcFlags;

        $r1 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.com.google.common.collect.ImmutableSortedSet dotPhases>;

        return $r1;
    }

    public com.google.gxp.compiler.parser.SourceEntityResolver getEntityResolver()
    {
        com.google.gxp.compiler.cli.GxpcFlags r0;
        com.google.gxp.compiler.parser.SourceEntityResolver $r1;

        r0 := @this: com.google.gxp.compiler.cli.GxpcFlags;

        $r1 = r0.<com.google.gxp.compiler.cli.GxpcFlags: com.google.gxp.compiler.parser.SourceEntityResolver sourceEntityResolver>;

        return $r1;
    }
}
