public class com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner extends java.lang.Object implements com.hp.hpl.jena.reasoner.Reasoner
{
    protected com.hp.hpl.jena.reasoner.ReasonerFactory factory;
    protected java.util.List rules;
    protected com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore ruleStore;
    protected com.hp.hpl.jena.graph.Graph schemaGraph;
    protected boolean recordDerivations;
    boolean traceOn;
    protected com.hp.hpl.jena.graph.Capabilities capabilities;

    public void <init>(java.util.List)
    {
        java.util.List r1;
        com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner r0;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore $r2;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: boolean recordDerivations> = 0;

        r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: boolean traceOn> = 0;

        r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: java.util.List rules> = r1;

        $r2 = new com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore;

        specialinvoke $r2.<com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore: void <init>(java.util.List)>(r1);

        r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore ruleStore> = $r2;

        return;
    }

    public void <init>(java.util.List, com.hp.hpl.jena.reasoner.ReasonerFactory)
    {
        java.util.List r1;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore $r3;
        com.hp.hpl.jena.reasoner.ReasonerFactory r2;
        com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: com.hp.hpl.jena.reasoner.ReasonerFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: boolean recordDerivations> = 0;

        r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: boolean traceOn> = 0;

        r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: java.util.List rules> = r1;

        r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: com.hp.hpl.jena.reasoner.ReasonerFactory factory> = r2;

        $r3 = new com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore;

        specialinvoke $r3.<com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore: void <init>(java.util.List)>(r1);

        r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore ruleStore> = $r3;

        return;
    }

    protected void <init>(com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner, com.hp.hpl.jena.graph.Graph)
    {
        java.util.List $r2;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore $r3;
        com.hp.hpl.jena.reasoner.ReasonerFactory $r5;
        com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner r0, r1;
        com.hp.hpl.jena.graph.Graph r4;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner;

        r4 := @parameter1: com.hp.hpl.jena.graph.Graph;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: boolean recordDerivations> = 0;

        r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: boolean traceOn> = 0;

        $r2 = r1.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: java.util.List rules>;

        r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: java.util.List rules> = $r2;

        $r3 = r1.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore ruleStore>;

        r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore ruleStore> = $r3;

        r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: com.hp.hpl.jena.graph.Graph schemaGraph> = r4;

        $r5 = r1.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: com.hp.hpl.jena.reasoner.ReasonerFactory factory>;

        r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: com.hp.hpl.jena.reasoner.ReasonerFactory factory> = $r5;

        return;
    }

    public com.hp.hpl.jena.rdf.model.Model getReasonerCapabilities()
    {
        com.hp.hpl.jena.reasoner.ReasonerFactory $r1, $r2;
        com.hp.hpl.jena.rdf.model.Model $r3;
        com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner;

        $r1 = r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: com.hp.hpl.jena.reasoner.ReasonerFactory factory>;

        if $r1 == null goto label1;

        $r2 = r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: com.hp.hpl.jena.reasoner.ReasonerFactory factory>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.reasoner.ReasonerFactory: com.hp.hpl.jena.rdf.model.Model getCapabilities()>();

        return $r3;

     label1:
        return null;
    }

    public void addDescription(com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Model r1;
        com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner r0;
        com.hp.hpl.jena.rdf.model.Resource r2;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        return;
    }

    public synchronized void tablePredicate(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner r0;
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore $r2;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore ruleStore>;

        virtualinvoke $r2.<com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore: void tablePredicate(com.hp.hpl.jena.graph.Node)>(r1);

        return;
    }

    public boolean supportsProperty(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.reasoner.ReasonerFactory $r1, $r2, $r4;
        com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner r0;
        com.hp.hpl.jena.rdf.model.Resource $r6;
        com.hp.hpl.jena.rdf.model.Property r7, $r8;
        com.hp.hpl.jena.rdf.model.Model $r3;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner;

        r7 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r1 = r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: com.hp.hpl.jena.reasoner.ReasonerFactory factory>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: com.hp.hpl.jena.reasoner.ReasonerFactory factory>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.reasoner.ReasonerFactory: com.hp.hpl.jena.rdf.model.Model getCapabilities()>();

        $r4 = r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: com.hp.hpl.jena.reasoner.ReasonerFactory factory>;

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.reasoner.ReasonerFactory: java.lang.String getURI()>();

        $r6 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource getResource(java.lang.String)>($r5);

        $r8 = <com.hp.hpl.jena.vocabulary.ReasonerVocabulary: com.hp.hpl.jena.rdf.model.Property supportsP>;

        $z0 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Model: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r6, $r8, r7);

        return $z0;
    }

    public com.hp.hpl.jena.reasoner.Reasoner bindSchema(com.hp.hpl.jena.graph.Graph) throws com.hp.hpl.jena.reasoner.ReasonerException
    {
        com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner $r0, r1;
        com.hp.hpl.jena.graph.Graph r2;

        r1 := @this: com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner;

        r2 := @parameter0: com.hp.hpl.jena.graph.Graph;

        $r0 = new com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner;

        specialinvoke $r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: void <init>(com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner,com.hp.hpl.jena.graph.Graph)>(r1, r2);

        return $r0;
    }

    public com.hp.hpl.jena.reasoner.Reasoner bindSchema(com.hp.hpl.jena.rdf.model.Model) throws com.hp.hpl.jena.reasoner.ReasonerException
    {
        com.hp.hpl.jena.rdf.model.Model r2;
        com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner $r0, r1;
        com.hp.hpl.jena.graph.Graph $r3;

        r1 := @this: com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r0 = new com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner;

        $r3 = interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.graph.Graph getGraph()>();

        specialinvoke $r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: void <init>(com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner,com.hp.hpl.jena.graph.Graph)>(r1, $r3);

        return $r0;
    }

    public com.hp.hpl.jena.reasoner.InfGraph bind(com.hp.hpl.jena.graph.Graph) throws com.hp.hpl.jena.reasoner.ReasonerException
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore $r4;
        com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleInfGraph $r0;
        com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner r1;
        com.hp.hpl.jena.graph.Graph r2, $r3;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner;

        r2 := @parameter0: com.hp.hpl.jena.graph.Graph;

        $r0 = new com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleInfGraph;

        $r4 = r1.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore ruleStore>;

        $r3 = r1.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: com.hp.hpl.jena.graph.Graph schemaGraph>;

        specialinvoke $r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleInfGraph: void <init>(com.hp.hpl.jena.reasoner.Reasoner,com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore,com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Graph)>(r1, $r4, r2, $r3);

        $z0 = r1.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: boolean recordDerivations>;

        virtualinvoke $r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleInfGraph: void setDerivationLogging(boolean)>($z0);

        return $r0;
    }

    public java.util.List getRules()
    {
        java.util.List $r1;
        com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner;

        $r1 = r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: java.util.List rules>;

        return $r1;
    }

    public void setDerivationLogging(boolean)
    {
        com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner r0;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner;

        z0 := @parameter0: boolean;

        r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: boolean recordDerivations> = z0;

        return;
    }

    public void setTraceOn(boolean)
    {
        com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner r0;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner;

        z0 := @parameter0: boolean;

        r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: boolean traceOn> = z0;

        return;
    }

    public void setParameter(com.hp.hpl.jena.rdf.model.Property, java.lang.Object)
    {
        com.hp.hpl.jena.rdf.model.Property r1;
        java.lang.Object r4;
        com.hp.hpl.jena.reasoner.IllegalParameterException $r0;
        java.lang.String $r2;
        com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner r3;

        r3 := @this: com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        r4 := @parameter1: java.lang.Object;

        $r0 = new com.hp.hpl.jena.reasoner.IllegalParameterException;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r0.<com.hp.hpl.jena.reasoner.IllegalParameterException: void <init>(java.lang.String)>($r2);

        throw $r0;
    }

    public com.hp.hpl.jena.graph.Capabilities getGraphCapabilities()
    {
        com.hp.hpl.jena.reasoner.BaseInfGraph$InfCapabilities $r3;
        com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner r0;
        com.hp.hpl.jena.graph.Capabilities $r1, $r2;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner;

        $r1 = r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: com.hp.hpl.jena.graph.Capabilities capabilities>;

        if $r1 != null goto label1;

        $r3 = new com.hp.hpl.jena.reasoner.BaseInfGraph$InfCapabilities;

        specialinvoke $r3.<com.hp.hpl.jena.reasoner.BaseInfGraph$InfCapabilities: void <init>()>();

        r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: com.hp.hpl.jena.graph.Capabilities capabilities> = $r3;

     label1:
        $r2 = r0.<com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner: com.hp.hpl.jena.graph.Capabilities capabilities>;

        return $r2;
    }
}
