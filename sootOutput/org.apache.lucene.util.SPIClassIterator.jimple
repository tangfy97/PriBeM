public final class org.apache.lucene.util.SPIClassIterator extends java.lang.Object implements java.util.Iterator
{
    private static final java.lang.String META_INF_SERVICES;
    private final java.lang.Class clazz;
    private final java.lang.ClassLoader loader;
    private final java.util.Enumeration profilesEnum;
    private java.util.Iterator linesIterator;
    static final boolean $assertionsDisabled;

    public static org.apache.lucene.util.SPIClassIterator get(java.lang.Class)
    {
        java.lang.Thread $r2;
        java.lang.Class r1;
        java.lang.ClassLoader $r3;
        org.apache.lucene.util.SPIClassIterator $r0;

        r1 := @parameter0: java.lang.Class;

        $r0 = new org.apache.lucene.util.SPIClassIterator;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = virtualinvoke $r2.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        specialinvoke $r0.<org.apache.lucene.util.SPIClassIterator: void <init>(java.lang.Class,java.lang.ClassLoader)>(r1, $r3);

        return $r0;
    }

    public static org.apache.lucene.util.SPIClassIterator get(java.lang.Class, java.lang.ClassLoader)
    {
        java.lang.Class r1;
        java.lang.ClassLoader r2;
        org.apache.lucene.util.SPIClassIterator $r0;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.ClassLoader;

        $r0 = new org.apache.lucene.util.SPIClassIterator;

        specialinvoke $r0.<org.apache.lucene.util.SPIClassIterator: void <init>(java.lang.Class,java.lang.ClassLoader)>(r1, r2);

        return $r0;
    }

    public static boolean isParentClassLoader(java.lang.ClassLoader, java.lang.ClassLoader)
    {
        java.lang.ClassLoader r0, r1;

        r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.lang.ClassLoader;

     label1:
        if r1 == null goto label3;

        if r1 != r0 goto label2;

        return 1;

     label2:
        r1 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();

        goto label1;

     label3:
        return 0;
    }

    private void <init>(java.lang.Class, java.lang.ClassLoader)
    {
        java.util.Enumeration $r18;
        java.util.ServiceConfigurationError $r11;
        java.lang.String $r4, $r6, $r14, $r17;
        java.util.Iterator $r9;
        java.util.Set $r8;
        java.io.IOException $r10;
        java.lang.Class r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r12, $r13, $r15, $r16;
        java.lang.ClassLoader r7, $r19;
        org.apache.lucene.util.SPIClassIterator r0;

        r0 := @this: org.apache.lucene.util.SPIClassIterator;

        r1 := @parameter0: java.lang.Class;

        r7 := @parameter1: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.util.SPIClassIterator: java.lang.Class clazz> = r1;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("META-INF/services/");

        $r4 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        if r7 != null goto label2;

        $r18 = staticinvoke <java.lang.ClassLoader: java.util.Enumeration getSystemResources(java.lang.String)>($r6);

        goto label3;

     label2:
        $r18 = virtualinvoke r7.<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>($r6);

     label3:
        r0.<org.apache.lucene.util.SPIClassIterator: java.util.Enumeration profilesEnum> = $r18;

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;

        $r11 = new java.util.ServiceConfigurationError;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error loading SPI profiles for type ");

        $r14 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from classpath");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.util.ServiceConfigurationError: void <init>(java.lang.String,java.lang.Throwable)>($r17, $r10);

        throw $r11;

     label6:
        if r7 != null goto label7;

        $r19 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

        goto label8;

     label7:
        $r19 = r7;

     label8:
        r0.<org.apache.lucene.util.SPIClassIterator: java.lang.ClassLoader loader> = $r19;

        $r8 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

        r0.<org.apache.lucene.util.SPIClassIterator: java.util.Iterator linesIterator> = $r9;

        return;

        catch java.io.IOException from label1 to label4 with label5;
    }

    private boolean loadNextProfile()
    {
        java.lang.Throwable $r19;
        java.util.Enumeration $r1, $r3;
        java.net.URL $r12;
        java.util.ArrayList $r2, r23;
        java.nio.charset.Charset $r8;
        java.io.Closeable[] $r9, $r20, $r22;
        int $i0, $i1;
        java.util.ServiceConfigurationError $r14;
        java.lang.String $r11, $r18, $r24, r25;
        boolean $z0, $z1;
        java.util.Iterator $r10;
        java.io.IOException $r13, $r21;
        java.io.InputStreamReader $r7;
        java.lang.Object $r4;
        java.lang.StringBuilder $r15, $r16, $r17;
        java.io.BufferedReader $r6;
        org.apache.lucene.util.SPIClassIterator r0;
        java.io.InputStream $r5;

        r0 := @this: org.apache.lucene.util.SPIClassIterator;

        r23 = null;

     label01:
        $r1 = r0.<org.apache.lucene.util.SPIClassIterator: java.util.Enumeration profilesEnum>;

        $z0 = interfaceinvoke $r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label18;

        if r23 == null goto label02;

        virtualinvoke r23.<java.util.ArrayList: void clear()>();

        goto label03;

     label02:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r23 = $r2;

     label03:
        $r3 = r0.<org.apache.lucene.util.SPIClassIterator: java.util.Enumeration profilesEnum>;

        $r4 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r12 = (java.net.URL) $r4;

     label04:
        $r5 = virtualinvoke $r12.<java.net.URL: java.io.InputStream openStream()>();

     label05:
        $r6 = new java.io.BufferedReader;

        $r7 = new java.io.InputStreamReader;

        $r8 = <org.apache.lucene.util.IOUtils: java.nio.charset.Charset CHARSET_UTF_8>;

        specialinvoke $r7.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r5, $r8);

        specialinvoke $r6.<java.io.BufferedReader: void <init>(java.io.Reader)>($r7);

     label06:
        $r24 = virtualinvoke $r6.<java.io.BufferedReader: java.lang.String readLine()>();

        r25 = $r24;

        if $r24 == null goto label09;

        $i0 = virtualinvoke $r24.<java.lang.String: int indexOf(int)>(35);

        if $i0 < 0 goto label07;

        r25 = virtualinvoke $r24.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label07:
        $r11 = virtualinvoke r25.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i1 <= 0 goto label08;

        virtualinvoke r23.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label08:
        goto label06;

     label09:
        $r9 = newarray (java.io.Closeable)[1];

        $r9[0] = $r5;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.lang.Exception,java.io.Closeable[])>(null, $r9);

        goto label14;

     label10:
        $r21 := @caughtexception;

     label11:
        $r22 = newarray (java.io.Closeable)[1];

        $r22[0] = $r5;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.lang.Exception,java.io.Closeable[])>($r21, $r22);

        goto label14;

     label12:
        $r19 := @caughtexception;

     label13:
        $r20 = newarray (java.io.Closeable)[1];

        $r20[0] = $r5;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.lang.Exception,java.io.Closeable[])>(null, $r20);

        throw $r19;

     label14:
        goto label16;

     label15:
        $r13 := @caughtexception;

        $r14 = new java.util.ServiceConfigurationError;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error loading SPI class list from URL: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.util.ServiceConfigurationError: void <init>(java.lang.String,java.lang.Throwable)>($r18, $r13);

        throw $r14;

     label16:
        $z1 = virtualinvoke r23.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label17;

        $r10 = virtualinvoke r23.<java.util.ArrayList: java.util.Iterator iterator()>();

        r0.<org.apache.lucene.util.SPIClassIterator: java.util.Iterator linesIterator> = $r10;

        return 1;

     label17:
        goto label01;

     label18:
        return 0;

        catch java.io.IOException from label05 to label09 with label10;
        catch java.lang.Throwable from label05 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.io.IOException from label04 to label14 with label15;
    }

    public boolean hasNext()
    {
        java.util.Iterator $r1;
        org.apache.lucene.util.SPIClassIterator r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.util.SPIClassIterator;

        $r1 = r0.<org.apache.lucene.util.SPIClassIterator: java.util.Iterator linesIterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<org.apache.lucene.util.SPIClassIterator: boolean loadNextProfile()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public java.lang.Class next()
    {
        java.lang.Object[] $r13;
        java.lang.AssertionError $r9;
        java.util.Locale $r15;
        java.util.ServiceConfigurationError $r12;
        java.lang.String $r8, $r16, $r17;
        java.util.NoSuchElementException $r10;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r1, $r7;
        java.lang.Object $r2;
        java.lang.Class $r4, $r5, $r6, $r14;
        java.lang.ClassNotFoundException $r11;
        java.lang.ClassLoader $r3;
        org.apache.lucene.util.SPIClassIterator r0;

        r0 := @this: org.apache.lucene.util.SPIClassIterator;

        $z0 = virtualinvoke r0.<org.apache.lucene.util.SPIClassIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r10 = new java.util.NoSuchElementException;

        specialinvoke $r10.<java.util.NoSuchElementException: void <init>()>();

        throw $r10;

     label1:
        $z1 = <org.apache.lucene.util.SPIClassIterator: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r7 = r0.<org.apache.lucene.util.SPIClassIterator: java.util.Iterator linesIterator>;

        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label2;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label2:
        $r1 = r0.<org.apache.lucene.util.SPIClassIterator: java.util.Iterator linesIterator>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.lang.String) $r2;

     label3:
        $r3 = r0.<org.apache.lucene.util.SPIClassIterator: java.lang.ClassLoader loader>;

        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r8, 0, $r3);

        $r5 = r0.<org.apache.lucene.util.SPIClassIterator: java.lang.Class clazz>;

        $r6 = virtualinvoke $r4.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>($r5);

     label4:
        return $r6;

     label5:
        $r11 := @caughtexception;

        $r12 = new java.util.ServiceConfigurationError;

        $r15 = <java.util.Locale: java.util.Locale ROOT>;

        $r13 = newarray (java.lang.Object)[3];

        $r14 = r0.<org.apache.lucene.util.SPIClassIterator: java.lang.Class clazz>;

        $r16 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        $r13[0] = $r16;

        $r13[1] = $r8;

        $r13[2] = "META-INF/services/";

        $r17 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r15, "A SPI class of type %s with classname %s does not exist, please fix the file \'%s%1$s\' in your classpath.", $r13);

        specialinvoke $r12.<java.util.ServiceConfigurationError: void <init>(java.lang.String)>($r17);

        throw $r12;

        catch java.lang.ClassNotFoundException from label3 to label4 with label5;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.util.SPIClassIterator r1;

        r1 := @this: org.apache.lucene.util.SPIClassIterator;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public volatile java.lang.Object next()
    {
        java.lang.Class $r1;
        org.apache.lucene.util.SPIClassIterator r0;

        r0 := @this: org.apache.lucene.util.SPIClassIterator;

        $r1 = virtualinvoke r0.<org.apache.lucene.util.SPIClassIterator: java.lang.Class next()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.apache.lucene.util.SPIClassIterator: java.lang.String META_INF_SERVICES> = "META-INF/services/";

        $r0 = class "Lorg/apache/lucene/util/SPIClassIterator;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.util.SPIClassIterator: boolean $assertionsDisabled> = $z1;

        return;
    }
}
