public class tdb.cmdline.CmdSub extends java.lang.Object
{
    java.util.Map dispatch;
    java.lang.String subCmd;
    java.lang.String[] args;

    public transient void <init>(java.lang.String[])
    {
        tdb.cmdline.CmdSub r0;
        java.util.HashMap $r1;
        java.lang.String[] r2, $r4;
        java.lang.String $r3;

        r0 := @this: tdb.cmdline.CmdSub;

        r2 := @parameter0: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<tdb.cmdline.CmdSub: java.util.Map dispatch> = $r1;

        $r3 = staticinvoke <tdb.cmdline.CmdSub: java.lang.String subCommand(java.lang.String[])>(r2);

        r0.<tdb.cmdline.CmdSub: java.lang.String subCmd> = $r3;

        $r4 = staticinvoke <tdb.cmdline.CmdSub: java.lang.String[] cmdline(java.lang.String[])>(r2);

        r0.<tdb.cmdline.CmdSub: java.lang.String[] args> = $r4;

        return;
    }

    protected void exec()
    {
        tdb.cmdline.CmdSub r0;
        tdb.cmdline.CmdSub$Exec r4;
        java.lang.String[] $r5;
        java.util.Map $r2;
        arq.cmd.CmdException $r6;
        java.lang.Object $r3;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r1, $r9, $r11;

        r0 := @this: tdb.cmdline.CmdSub;

        $r2 = r0.<tdb.cmdline.CmdSub: java.util.Map dispatch>;

        $r1 = r0.<tdb.cmdline.CmdSub: java.lang.String subCmd>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (tdb.cmdline.CmdSub$Exec) $r3;

        if r4 != null goto label1;

        $r6 = new arq.cmd.CmdException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No subcommand: ");

        $r9 = r0.<tdb.cmdline.CmdSub: java.lang.String subCmd>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<arq.cmd.CmdException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label1:
        $r5 = r0.<tdb.cmdline.CmdSub: java.lang.String[] args>;

        interfaceinvoke r4.<tdb.cmdline.CmdSub$Exec: void exec(java.lang.String[])>($r5);

        return;
    }

    protected static transient java.lang.String[] cmdline(java.lang.String[])
    {
        int $i0, $i1, $i2, $i3;
        java.lang.String[] r0, r1;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        $i1 = $i0 - 1;

        r1 = newarray (java.lang.String)[$i1];

        $i2 = lengthof r0;

        $i3 = $i2 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 1, r1, 0, $i3);

        return r1;
    }

    protected static transient java.lang.String subCommand(java.lang.String[])
    {
        int $i0;
        arq.cmd.CmdException $r2, $r3;
        java.lang.String[] r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r3 = new arq.cmd.CmdException;

        specialinvoke $r3.<arq.cmd.CmdException: void <init>(java.lang.String)>("Missing subcommand");

        throw $r3;

     label1:
        r1 = r0[0];

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z0 == 0 goto label2;

        $r2 = new arq.cmd.CmdException;

        specialinvoke $r2.<arq.cmd.CmdException: void <init>(java.lang.String)>("Argument found where subcommand expected");

        throw $r2;

     label2:
        return r1;
    }

    protected void addSubCommand(java.lang.String, tdb.cmdline.CmdSub$Exec)
    {
        tdb.cmdline.CmdSub r0;
        tdb.cmdline.CmdSub$Exec r2;
        java.util.Map $r3;
        java.lang.String r1;

        r0 := @this: tdb.cmdline.CmdSub;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: tdb.cmdline.CmdSub$Exec;

        $r3 = r0.<tdb.cmdline.CmdSub: java.util.Map dispatch>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    protected java.util.Collection subCommandNames()
    {
        java.util.Set $r2;
        tdb.cmdline.CmdSub r0;
        java.util.Map $r1;

        r0 := @this: tdb.cmdline.CmdSub;

        $r1 = r0.<tdb.cmdline.CmdSub: java.util.Map dispatch>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }
}
