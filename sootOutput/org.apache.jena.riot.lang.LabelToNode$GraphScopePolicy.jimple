class org.apache.jena.riot.lang.LabelToNode$GraphScopePolicy extends java.lang.Object implements org.apache.jena.riot.system.MapWithScope$ScopePolicy
{
    private java.util.Map dftMap;
    private java.util.Map map;

    private void <init>()
    {
        org.apache.jena.riot.lang.LabelToNode$GraphScopePolicy r0;
        java.util.HashMap $r1, $r2;

        r0 := @this: org.apache.jena.riot.lang.LabelToNode$GraphScopePolicy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.jena.riot.lang.LabelToNode$GraphScopePolicy: java.util.Map dftMap> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.jena.riot.lang.LabelToNode$GraphScopePolicy: java.util.Map map> = $r2;

        return;
    }

    public java.util.Map getScope(com.hp.hpl.jena.graph.Node)
    {
        java.util.HashMap $r4;
        com.hp.hpl.jena.graph.Node r0;
        org.apache.jena.riot.lang.LabelToNode$GraphScopePolicy r1;
        java.util.Map $r2, $r5, $r6, r7;
        java.lang.Object $r3;

        r1 := @this: org.apache.jena.riot.lang.LabelToNode$GraphScopePolicy;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        if r0 != null goto label1;

        $r6 = r1.<org.apache.jena.riot.lang.LabelToNode$GraphScopePolicy: java.util.Map dftMap>;

        return $r6;

     label1:
        $r2 = r1.<org.apache.jena.riot.lang.LabelToNode$GraphScopePolicy: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r7 = (java.util.Map) $r3;

        if r7 != null goto label2;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r7 = $r4;

        $r5 = r1.<org.apache.jena.riot.lang.LabelToNode$GraphScopePolicy: java.util.Map map>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r4);

     label2:
        return r7;
    }

    public void clear()
    {
        org.apache.jena.riot.lang.LabelToNode$GraphScopePolicy r0;
        java.util.Map $r1, $r2;

        r0 := @this: org.apache.jena.riot.lang.LabelToNode$GraphScopePolicy;

        $r1 = r0.<org.apache.jena.riot.lang.LabelToNode$GraphScopePolicy: java.util.Map dftMap>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        $r2 = r0.<org.apache.jena.riot.lang.LabelToNode$GraphScopePolicy: java.util.Map map>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

        return;
    }

    public volatile java.util.Map getScope(java.lang.Object)
    {
        org.apache.jena.riot.lang.LabelToNode$GraphScopePolicy r0;
        java.util.Map $r3;
        java.lang.Object r1;
        com.hp.hpl.jena.graph.Node $r2;

        r0 := @this: org.apache.jena.riot.lang.LabelToNode$GraphScopePolicy;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.hp.hpl.jena.graph.Node) r1;

        $r3 = virtualinvoke r0.<org.apache.jena.riot.lang.LabelToNode$GraphScopePolicy: java.util.Map getScope(com.hp.hpl.jena.graph.Node)>($r2);

        return $r3;
    }

    void <init>(org.apache.jena.riot.lang.LabelToNode$1)
    {
        org.apache.jena.riot.lang.LabelToNode$GraphScopePolicy r0;
        org.apache.jena.riot.lang.LabelToNode$1 r1;

        r0 := @this: org.apache.jena.riot.lang.LabelToNode$GraphScopePolicy;

        r1 := @parameter0: org.apache.jena.riot.lang.LabelToNode$1;

        specialinvoke r0.<org.apache.jena.riot.lang.LabelToNode$GraphScopePolicy: void <init>()>();

        return;
    }
}
