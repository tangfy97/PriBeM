final class org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer extends org.apache.lucene.store.IndexInput
{
    private byte[] data;
    private long pointer;
    private int pos;

    void <init>(org.apache.lucene.store.IndexInput, int) throws java.io.IOException
    {
        org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer r0;
        byte[] $r6, $r7;
        org.apache.lucene.store.IndexInput r3;
        long $l1;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer;

        r3 := @parameter0: org.apache.lucene.store.IndexInput;

        i0 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SkipBuffer on ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.apache.lucene.store.IndexInput: void <init>(java.lang.String)>($r5);

        $r6 = newarray (byte)[i0];

        r0.<org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer: byte[] data> = $r6;

        $l1 = virtualinvoke r3.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        r0.<org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer: long pointer> = $l1;

        $r7 = r0.<org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer: byte[] data>;

        virtualinvoke r3.<org.apache.lucene.store.IndexInput: void readBytes(byte[],int,int)>($r7, 0, i0);

        return;
    }

    public void close()
    {
        org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer r0;

        r0 := @this: org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer;

        r0.<org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer: byte[] data> = null;

        return;
    }

    public long getFilePointer()
    {
        org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer r0;
        int $i0;
        long $l1, $l2, $l3;

        r0 := @this: org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer;

        $l2 = r0.<org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer: long pointer>;

        $i0 = r0.<org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer: int pos>;

        $l1 = (long) $i0;

        $l3 = $l2 + $l1;

        return $l3;
    }

    public long length()
    {
        org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer r0;
        byte[] $r1;
        int $i0;
        long $l1;

        r0 := @this: org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer;

        $r1 = r0.<org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer: byte[] data>;

        $i0 = lengthof $r1;

        $l1 = (long) $i0;

        return $l1;
    }

    public byte readByte()
    {
        org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer r0;
        byte[] $r1;
        byte $b2;
        int $i0, $i1;

        r0 := @this: org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer;

        $r1 = r0.<org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer: byte[] data>;

        $i0 = r0.<org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer: int pos>;

        $i1 = $i0 + 1;

        r0.<org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer: int pos> = $i1;

        $b2 = $r1[$i0];

        return $b2;
    }

    public void readBytes(byte[], int, int)
    {
        org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer r0;
        byte[] r1, $r2;
        int i0, i1, $i2, $i3, $i4;

        r0 := @this: org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer: byte[] data>;

        $i2 = r0.<org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer: int pos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i2, r1, i0, i1);

        $i3 = r0.<org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer: int pos>;

        $i4 = $i3 + i1;

        r0.<org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer: int pos> = $i4;

        return;
    }

    public void seek(long)
    {
        org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer r0;
        int $i3;
        long l0, $l1, $l2;

        r0 := @this: org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer;

        l0 := @parameter0: long;

        $l1 = r0.<org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer: long pointer>;

        $l2 = l0 - $l1;

        $i3 = (int) $l2;

        r0.<org.apache.lucene.codecs.MultiLevelSkipListReader$SkipBuffer: int pos> = $i3;

        return;
    }
}
