final class org.apache.lucene.index.DocFieldProcessor extends org.apache.lucene.index.DocConsumer
{
    final org.apache.lucene.index.DocFieldConsumer consumer;
    final org.apache.lucene.index.StoredFieldsConsumer storedConsumer;
    final org.apache.lucene.codecs.Codec codec;
    org.apache.lucene.index.DocFieldProcessorPerField[] fields;
    int fieldCount;
    org.apache.lucene.index.DocFieldProcessorPerField[] fieldHash;
    int hashMask;
    int totalFieldCount;
    int fieldGen;
    final org.apache.lucene.index.DocumentsWriterPerThread$DocState docState;
    final org.apache.lucene.util.Counter bytesUsed;
    private static final java.util.Comparator fieldsComp;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.index.DocumentsWriterPerThread, org.apache.lucene.index.DocFieldConsumer, org.apache.lucene.index.StoredFieldsConsumer)
    {
        org.apache.lucene.index.DocFieldProcessorPerField[] $r1, $r2;
        org.apache.lucene.index.DocFieldProcessor r0;
        org.apache.lucene.index.StoredFieldsConsumer r8;
        org.apache.lucene.index.DocFieldConsumer r7;
        org.apache.lucene.util.Counter $r6;
        org.apache.lucene.codecs.Codec $r5;
        org.apache.lucene.index.DocumentsWriterPerThread$DocState $r4;
        org.apache.lucene.index.DocumentsWriterPerThread r3;

        r0 := @this: org.apache.lucene.index.DocFieldProcessor;

        r3 := @parameter0: org.apache.lucene.index.DocumentsWriterPerThread;

        r7 := @parameter1: org.apache.lucene.index.DocFieldConsumer;

        r8 := @parameter2: org.apache.lucene.index.StoredFieldsConsumer;

        specialinvoke r0.<org.apache.lucene.index.DocConsumer: void <init>()>();

        $r1 = newarray (org.apache.lucene.index.DocFieldProcessorPerField)[1];

        r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldProcessorPerField[] fields> = $r1;

        $r2 = newarray (org.apache.lucene.index.DocFieldProcessorPerField)[2];

        r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldProcessorPerField[] fieldHash> = $r2;

        r0.<org.apache.lucene.index.DocFieldProcessor: int hashMask> = 1;

        $r4 = r3.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState> = $r4;

        $r5 = r3.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.codecs.Codec codec>;

        r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.codecs.Codec codec> = $r5;

        $r6 = r3.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.Counter bytesUsed>;

        r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.util.Counter bytesUsed> = $r6;

        r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldConsumer consumer> = r7;

        r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.StoredFieldsConsumer storedConsumer> = r8;

        return;
    }

    public void flush(org.apache.lucene.index.SegmentWriteState) throws java.io.IOException
    {
        org.apache.lucene.index.DocFieldProcessor r1;
        org.apache.lucene.codecs.FieldInfosWriter $r9;
        java.util.HashMap $r0;
        org.apache.lucene.index.StoredFieldsConsumer $r5;
        java.lang.AssertionError $r15;
        org.apache.lucene.store.Directory $r14;
        org.apache.lucene.index.SegmentWriteState r4;
        int $i0, $i1;
        java.lang.String $r13, $r19;
        org.apache.lucene.index.FieldInfos $r12;
        org.apache.lucene.store.IOContext $r11;
        boolean $z0, $z1;
        java.util.Iterator $r3;
        java.util.Collection $r2;
        org.apache.lucene.index.SegmentInfo $r10;
        org.apache.lucene.codecs.FieldInfosFormat $r8;
        org.apache.lucene.index.DocFieldConsumerPerField r17;
        org.apache.lucene.index.DocFieldConsumer $r6;
        org.apache.lucene.codecs.Codec $r7;
        org.apache.lucene.index.FieldInfo $r18;
        java.lang.Object $r16;

        r1 := @this: org.apache.lucene.index.DocFieldProcessor;

        r4 := @parameter0: org.apache.lucene.index.SegmentWriteState;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.lucene.index.DocFieldProcessor: java.util.Collection fields()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r16 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r17 = (org.apache.lucene.index.DocFieldConsumerPerField) $r16;

        $r18 = virtualinvoke r17.<org.apache.lucene.index.DocFieldConsumerPerField: org.apache.lucene.index.FieldInfo getFieldInfo()>();

        $r19 = $r18.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, r17);

        goto label1;

     label2:
        $z1 = <org.apache.lucene.index.DocFieldProcessor: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $i0 = interfaceinvoke $r2.<java.util.Collection: int size()>();

        $i1 = r1.<org.apache.lucene.index.DocFieldProcessor: int totalFieldCount>;

        if $i0 == $i1 goto label3;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label3:
        $r5 = r1.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.StoredFieldsConsumer storedConsumer>;

        virtualinvoke $r5.<org.apache.lucene.index.StoredFieldsConsumer: void flush(org.apache.lucene.index.SegmentWriteState)>(r4);

        $r6 = r1.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldConsumer consumer>;

        virtualinvoke $r6.<org.apache.lucene.index.DocFieldConsumer: void flush(java.util.Map,org.apache.lucene.index.SegmentWriteState)>($r0, r4);

        $r7 = r1.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.codecs.Codec codec>;

        $r8 = virtualinvoke $r7.<org.apache.lucene.codecs.Codec: org.apache.lucene.codecs.FieldInfosFormat fieldInfosFormat()>();

        $r9 = virtualinvoke $r8.<org.apache.lucene.codecs.FieldInfosFormat: org.apache.lucene.codecs.FieldInfosWriter getFieldInfosWriter()>();

        $r14 = r4.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.store.Directory directory>;

        $r10 = r4.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r13 = $r10.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r12 = r4.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.FieldInfos fieldInfos>;

        $r11 = <org.apache.lucene.store.IOContext: org.apache.lucene.store.IOContext DEFAULT>;

        virtualinvoke $r9.<org.apache.lucene.codecs.FieldInfosWriter: void write(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,org.apache.lucene.store.IOContext)>($r14, $r13, $r12, $r11);

        return;
    }

    public void abort()
    {
        java.lang.Throwable $r6, $r7, $r8, r9;
        org.apache.lucene.index.DocFieldProcessorPerField[] r10;
        org.apache.lucene.index.DocFieldProcessor r0;
        java.lang.Error $r3;
        org.apache.lucene.index.StoredFieldsConsumer $r1;
        int i0, i1;
        boolean $z0, $z1;
        java.lang.RuntimeException $r2, $r4;
        org.apache.lucene.index.DocFieldConsumer $r12;
        org.apache.lucene.index.DocFieldProcessorPerField r5, r11;

        r0 := @this: org.apache.lucene.index.DocFieldProcessor;

        r9 = null;

        r10 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldProcessorPerField[] fieldHash>;

        i0 = lengthof r10;

        i1 = 0;

     label01:
        if i1 >= i0 goto label08;

        r11 = r10[i1];

     label02:
        if r11 == null goto label07;

        r5 = r11.<org.apache.lucene.index.DocFieldProcessorPerField: org.apache.lucene.index.DocFieldProcessorPerField next>;

     label03:
        virtualinvoke r11.<org.apache.lucene.index.DocFieldProcessorPerField: void abort()>();

     label04:
        goto label06;

     label05:
        $r8 := @caughtexception;

        if r9 != null goto label06;

        r9 = $r8;

     label06:
        r11 = r5;

        goto label02;

     label07:
        i1 = i1 + 1;

        goto label01;

     label08:
        $r1 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.StoredFieldsConsumer storedConsumer>;

        virtualinvoke $r1.<org.apache.lucene.index.StoredFieldsConsumer: void abort()>();

     label09:
        goto label11;

     label10:
        $r7 := @caughtexception;

        if r9 != null goto label11;

        r9 = $r7;

     label11:
        $r12 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldConsumer consumer>;

        virtualinvoke $r12.<org.apache.lucene.index.DocFieldConsumer: void abort()>();

     label12:
        goto label14;

     label13:
        $r6 := @caughtexception;

        if r9 != null goto label14;

        r9 = $r6;

     label14:
        if r9 == null goto label17;

        $z0 = r9 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label15;

        $r4 = (java.lang.RuntimeException) r9;

        throw $r4;

     label15:
        $z1 = r9 instanceof java.lang.Error;

        if $z1 == 0 goto label16;

        $r3 = (java.lang.Error) r9;

        throw $r3;

     label16:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r9);

        throw $r2;

     label17:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public java.util.Collection fields()
    {
        org.apache.lucene.index.DocFieldProcessorPerField[] $r2, $r4;
        org.apache.lucene.index.DocFieldProcessor r1;
        java.lang.AssertionError $r3;
        org.apache.lucene.index.DocFieldConsumerPerField $r5;
        java.util.HashSet $r0;
        org.apache.lucene.index.DocFieldProcessorPerField r6;
        int $i0, $i1, $i2, i3;
        boolean $z0;

        r1 := @this: org.apache.lucene.index.DocFieldProcessor;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        i3 = 0;

     label1:
        $r2 = r1.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldProcessorPerField[] fieldHash>;

        $i0 = lengthof $r2;

        if i3 >= $i0 goto label4;

        $r4 = r1.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldProcessorPerField[] fieldHash>;

        r6 = $r4[i3];

     label2:
        if r6 == null goto label3;

        $r5 = r6.<org.apache.lucene.index.DocFieldProcessorPerField: org.apache.lucene.index.DocFieldConsumerPerField consumer>;

        interfaceinvoke $r0.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        r6 = r6.<org.apache.lucene.index.DocFieldProcessorPerField: org.apache.lucene.index.DocFieldProcessorPerField next>;

        goto label2;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        $z0 = <org.apache.lucene.index.DocFieldProcessor: boolean $assertionsDisabled>;

        if $z0 != 0 goto label5;

        $i1 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        $i2 = r1.<org.apache.lucene.index.DocFieldProcessor: int totalFieldCount>;

        if $i1 == $i2 goto label5;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label5:
        return $r0;
    }

    void doAfterFlush()
    {
        org.apache.lucene.index.DocFieldProcessorPerField[] $r1;
        org.apache.lucene.index.DocFieldProcessor r0;

        r0 := @this: org.apache.lucene.index.DocFieldProcessor;

        $r1 = newarray (org.apache.lucene.index.DocFieldProcessorPerField)[2];

        r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldProcessorPerField[] fieldHash> = $r1;

        r0.<org.apache.lucene.index.DocFieldProcessor: int hashMask> = 1;

        r0.<org.apache.lucene.index.DocFieldProcessor: int totalFieldCount> = 0;

        return;
    }

    private void rehash()
    {
        org.apache.lucene.index.DocFieldProcessorPerField[] $r1, $r2, $r7, $r8, $r10;
        org.apache.lucene.index.DocFieldProcessor r0;
        java.lang.AssertionError $r9;
        int $i0, i1, $i2, i3, $i4, $i5, i6, $i7;
        java.lang.String $r4;
        boolean $z0;
        org.apache.lucene.index.DocFieldProcessorPerField r5, $r6, r11;
        org.apache.lucene.index.FieldInfo $r3;

        r0 := @this: org.apache.lucene.index.DocFieldProcessor;

        $r1 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldProcessorPerField[] fieldHash>;

        $i0 = lengthof $r1;

        i1 = $i0 * 2;

        $z0 = <org.apache.lucene.index.DocFieldProcessor: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r7 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldProcessorPerField[] fieldHash>;

        $i4 = lengthof $r7;

        if i1 > $i4 goto label1;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label1:
        $r8 = newarray (org.apache.lucene.index.DocFieldProcessorPerField)[i1];

        $i5 = i1 - 1;

        i6 = 0;

     label2:
        $r10 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldProcessorPerField[] fieldHash>;

        $i7 = lengthof $r10;

        if i6 >= $i7 goto label5;

        $r2 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldProcessorPerField[] fieldHash>;

        r11 = $r2[i6];

     label3:
        if r11 == null goto label4;

        $r3 = r11.<org.apache.lucene.index.DocFieldProcessorPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r4 = $r3.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $i2 = virtualinvoke $r4.<java.lang.String: int hashCode()>();

        i3 = $i2 & $i5;

        r5 = r11.<org.apache.lucene.index.DocFieldProcessorPerField: org.apache.lucene.index.DocFieldProcessorPerField next>;

        $r6 = $r8[i3];

        r11.<org.apache.lucene.index.DocFieldProcessorPerField: org.apache.lucene.index.DocFieldProcessorPerField next> = $r6;

        $r8[i3] = r11;

        r11 = r5;

        goto label3;

     label4:
        i6 = i6 + 1;

        goto label2;

     label5:
        r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldProcessorPerField[] fieldHash> = $r8;

        r0.<org.apache.lucene.index.DocFieldProcessor: int hashMask> = $i5;

        return;
    }

    public void processDocument(org.apache.lucene.index.FieldInfos$Builder) throws java.io.IOException
    {
        org.apache.lucene.index.DocFieldProcessor r0;
        org.apache.lucene.index.FieldInfos$Builder r35;
        org.apache.lucene.index.StoredFieldsConsumer $r2, $r47;
        org.apache.lucene.index.DocFieldConsumerPerField $r24;
        org.apache.lucene.index.DocFieldConsumer $r1;
        org.apache.lucene.util.InfoStream $r11, $r14;
        java.lang.StringBuilder $r13, $r15, $r18, $r19;
        java.lang.String $r9, $r17, $r20, $r26, $r44;
        org.apache.lucene.index.FieldInfo $r28, $r37, $r43, $r49;
        org.apache.lucene.index.DocFieldProcessorPerField[] $r7, $r22, $r27, $r30, $r31, $r32, r33, $r34, $r39, $r41, $r42;
        org.apache.lucene.index.IndexableField r45;
        boolean $z0, $z1, $z2;
        org.apache.lucene.index.IndexableField[] $r23;
        org.apache.lucene.index.DocFieldProcessorPerField $r38, $r40, r46, r50;
        java.lang.Iterable $r4;
        org.apache.lucene.index.IndexableFieldType $r29, $r36;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, $i21, i22;
        org.apache.lucene.index.DocumentsWriterPerThread$DocState $r3, $r8, $r10, $r12, $r16, $r21, $r48;
        java.util.Iterator $r5;
        java.lang.Object $r25;
        java.util.Comparator $r6;

        r0 := @this: org.apache.lucene.index.DocFieldProcessor;

        r35 := @parameter0: org.apache.lucene.index.FieldInfos$Builder;

        $r1 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldConsumer consumer>;

        virtualinvoke $r1.<org.apache.lucene.index.DocFieldConsumer: void startDocument()>();

        $r2 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.StoredFieldsConsumer storedConsumer>;

        virtualinvoke $r2.<org.apache.lucene.index.StoredFieldsConsumer: void startDocument()>();

        r0.<org.apache.lucene.index.DocFieldProcessor: int fieldCount> = 0;

        $i0 = r0.<org.apache.lucene.index.DocFieldProcessor: int fieldGen>;

        $i1 = $i0 + 1;

        r0.<org.apache.lucene.index.DocFieldProcessor: int fieldGen> = $i1;

        $r3 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $r4 = $r3.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: java.lang.Iterable doc>;

        $r5 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r25 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r45 = (org.apache.lucene.index.IndexableField) $r25;

        $r26 = interfaceinvoke r45.<org.apache.lucene.index.IndexableField: java.lang.String name()>();

        $i5 = virtualinvoke $r26.<java.lang.String: int hashCode()>();

        $i6 = r0.<org.apache.lucene.index.DocFieldProcessor: int hashMask>;

        i7 = $i5 & $i6;

        $r27 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldProcessorPerField[] fieldHash>;

        r46 = $r27[i7];

     label02:
        if r46 == null goto label03;

        $r43 = r46.<org.apache.lucene.index.DocFieldProcessorPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r44 = $r43.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $z2 = virtualinvoke $r44.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z2 != 0 goto label03;

        r46 = r46.<org.apache.lucene.index.DocFieldProcessorPerField: org.apache.lucene.index.DocFieldProcessorPerField next>;

        goto label02;

     label03:
        if r46 != null goto label05;

        $r36 = interfaceinvoke r45.<org.apache.lucene.index.IndexableField: org.apache.lucene.index.IndexableFieldType fieldType()>();

        $r37 = virtualinvoke r35.<org.apache.lucene.index.FieldInfos$Builder: org.apache.lucene.index.FieldInfo addOrUpdate(java.lang.String,org.apache.lucene.index.IndexableFieldType)>($r26, $r36);

        $r38 = new org.apache.lucene.index.DocFieldProcessorPerField;

        specialinvoke $r38.<org.apache.lucene.index.DocFieldProcessorPerField: void <init>(org.apache.lucene.index.DocFieldProcessor,org.apache.lucene.index.FieldInfo)>(r0, $r37);

        r46 = $r38;

        $r39 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldProcessorPerField[] fieldHash>;

        $r40 = $r39[i7];

        $r38.<org.apache.lucene.index.DocFieldProcessorPerField: org.apache.lucene.index.DocFieldProcessorPerField next> = $r40;

        $r41 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldProcessorPerField[] fieldHash>;

        $r41[i7] = $r38;

        $i15 = r0.<org.apache.lucene.index.DocFieldProcessor: int totalFieldCount>;

        $i16 = $i15 + 1;

        r0.<org.apache.lucene.index.DocFieldProcessor: int totalFieldCount> = $i16;

        $i19 = r0.<org.apache.lucene.index.DocFieldProcessor: int totalFieldCount>;

        $r42 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldProcessorPerField[] fieldHash>;

        $i17 = lengthof $r42;

        $i18 = $i17 / 2;

        if $i19 < $i18 goto label04;

        specialinvoke r0.<org.apache.lucene.index.DocFieldProcessor: void rehash()>();

     label04:
        goto label06;

     label05:
        $r28 = r46.<org.apache.lucene.index.DocFieldProcessorPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r29 = interfaceinvoke r45.<org.apache.lucene.index.IndexableField: org.apache.lucene.index.IndexableFieldType fieldType()>();

        virtualinvoke $r28.<org.apache.lucene.index.FieldInfo: void update(org.apache.lucene.index.IndexableFieldType)>($r29);

     label06:
        $i8 = r46.<org.apache.lucene.index.DocFieldProcessorPerField: int lastGen>;

        if $i0 == $i8 goto label08;

        r46.<org.apache.lucene.index.DocFieldProcessorPerField: int fieldCount> = 0;

        $i10 = r0.<org.apache.lucene.index.DocFieldProcessor: int fieldCount>;

        $r30 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldProcessorPerField[] fields>;

        $i9 = lengthof $r30;

        if $i10 != $i9 goto label07;

        $r32 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldProcessorPerField[] fields>;

        $i13 = lengthof $r32;

        i20 = $i13 * 2;

        r33 = newarray (org.apache.lucene.index.DocFieldProcessorPerField)[i20];

        $r34 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldProcessorPerField[] fields>;

        $i14 = r0.<org.apache.lucene.index.DocFieldProcessor: int fieldCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r34, 0, r33, 0, $i14);

        r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldProcessorPerField[] fields> = r33;

     label07:
        $r31 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldProcessorPerField[] fields>;

        $i11 = r0.<org.apache.lucene.index.DocFieldProcessor: int fieldCount>;

        $i12 = $i11 + 1;

        r0.<org.apache.lucene.index.DocFieldProcessor: int fieldCount> = $i12;

        $r31[$i11] = r46;

        r46.<org.apache.lucene.index.DocFieldProcessorPerField: int lastGen> = $i0;

     label08:
        virtualinvoke r46.<org.apache.lucene.index.DocFieldProcessorPerField: void addField(org.apache.lucene.index.IndexableField)>(r45);

        $r47 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.StoredFieldsConsumer storedConsumer>;

        $r48 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $i21 = $r48.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: int docID>;

        $r49 = r46.<org.apache.lucene.index.DocFieldProcessorPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        virtualinvoke $r47.<org.apache.lucene.index.StoredFieldsConsumer: void addField(int,org.apache.lucene.index.IndexableField,org.apache.lucene.index.FieldInfo)>($i21, r45, $r49);

        goto label01;

     label09:
        $r7 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldProcessorPerField[] fields>;

        $i2 = r0.<org.apache.lucene.index.DocFieldProcessor: int fieldCount>;

        $r6 = <org.apache.lucene.index.DocFieldProcessor: java.util.Comparator fieldsComp>;

        staticinvoke <org.apache.lucene.util.ArrayUtil: void quickSort(java.lang.Object[],int,int,java.util.Comparator)>($r7, 0, $i2, $r6);

        i22 = 0;

     label10:
        $i3 = r0.<org.apache.lucene.index.DocFieldProcessor: int fieldCount>;

        if i22 >= $i3 goto label11;

        $r22 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldProcessorPerField[] fields>;

        r50 = $r22[i22];

        $r24 = r50.<org.apache.lucene.index.DocFieldProcessorPerField: org.apache.lucene.index.DocFieldConsumerPerField consumer>;

        $r23 = r50.<org.apache.lucene.index.DocFieldProcessorPerField: org.apache.lucene.index.IndexableField[] fields>;

        $i4 = r50.<org.apache.lucene.index.DocFieldProcessorPerField: int fieldCount>;

        virtualinvoke $r24.<org.apache.lucene.index.DocFieldConsumerPerField: void processFields(org.apache.lucene.index.IndexableField[],int)>($r23, $i4);

        i22 = i22 + 1;

        goto label10;

     label11:
        $r8 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $r9 = $r8.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: java.lang.String maxTermPrefix>;

        if $r9 == null goto label12;

        $r10 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $r11 = $r10.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: org.apache.lucene.util.InfoStream infoStream>;

        $z1 = virtualinvoke $r11.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("IW");

        if $z1 == 0 goto label12;

        $r12 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $r14 = $r12.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: org.apache.lucene.util.InfoStream infoStream>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WARNING: document contains at least one immense term (whose UTF8 encoding is longer than the max length 32766), all of which were skipped.  Please correct the analyzer to not produce such terms.  The prefix of the first immense term is: \'");

        $r16 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $r17 = $r16.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: java.lang.String maxTermPrefix>;

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...\'");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("IW", $r20);

        $r21 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $r21.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: java.lang.String maxTermPrefix> = null;

     label12:
        return;
    }

    void finishDocument() throws java.io.IOException
    {
        java.lang.Throwable $r3;
        org.apache.lucene.index.DocFieldConsumer $r2, $r4;
        org.apache.lucene.index.DocFieldProcessor r0;
        org.apache.lucene.index.StoredFieldsConsumer $r1;

        r0 := @this: org.apache.lucene.index.DocFieldProcessor;

     label1:
        $r1 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.StoredFieldsConsumer storedConsumer>;

        virtualinvoke $r1.<org.apache.lucene.index.StoredFieldsConsumer: void finishDocument()>();

     label2:
        $r2 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldConsumer consumer>;

        virtualinvoke $r2.<org.apache.lucene.index.DocFieldConsumer: void finishDocument()>();

        goto label5;

     label3:
        $r3 := @caughtexception;

     label4:
        $r4 = r0.<org.apache.lucene.index.DocFieldProcessor: org.apache.lucene.index.DocFieldConsumer consumer>;

        virtualinvoke $r4.<org.apache.lucene.index.DocFieldConsumer: void finishDocument()>();

        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void <clinit>()
    {
        org.apache.lucene.index.DocFieldProcessor$1 $r1;
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/DocFieldProcessor;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.DocFieldProcessor: boolean $assertionsDisabled> = $z1;

        $r1 = new org.apache.lucene.index.DocFieldProcessor$1;

        specialinvoke $r1.<org.apache.lucene.index.DocFieldProcessor$1: void <init>()>();

        <org.apache.lucene.index.DocFieldProcessor: java.util.Comparator fieldsComp> = $r1;

        return;
    }
}
