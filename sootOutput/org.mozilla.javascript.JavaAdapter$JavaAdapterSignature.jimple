class org.mozilla.javascript.JavaAdapter$JavaAdapterSignature extends java.lang.Object
{
    java.lang.Class superClass;
    java.lang.Class[] interfaces;
    org.mozilla.javascript.ObjToIntMap names;

    void <init>(java.lang.Class, java.lang.Class[], org.mozilla.javascript.ObjToIntMap)
    {
        java.lang.Class[] r2;
        java.lang.Class r1;
        org.mozilla.javascript.JavaAdapter$JavaAdapterSignature r0;
        org.mozilla.javascript.ObjToIntMap r3;

        r0 := @this: org.mozilla.javascript.JavaAdapter$JavaAdapterSignature;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class[];

        r3 := @parameter2: org.mozilla.javascript.ObjToIntMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mozilla.javascript.JavaAdapter$JavaAdapterSignature: java.lang.Class superClass> = r1;

        r0.<org.mozilla.javascript.JavaAdapter$JavaAdapterSignature: java.lang.Class[] interfaces> = r2;

        r0.<org.mozilla.javascript.JavaAdapter$JavaAdapterSignature: org.mozilla.javascript.ObjToIntMap names> = r3;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        boolean $z0, $z1;
        org.mozilla.javascript.JavaAdapter$JavaAdapterSignature r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        java.lang.String r12;
        java.lang.Class[] $r5, $r6, $r14, $r15, $r16, $r17, $r18;
        org.mozilla.javascript.ObjToIntMap$Iterator $r9;
        java.lang.Object r0, $r11;
        java.lang.Class $r3, $r4, $r19, $r20;
        org.mozilla.javascript.ObjToIntMap $r7, $r8, $r10, $r13;

        r2 := @this: org.mozilla.javascript.JavaAdapter$JavaAdapterSignature;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.mozilla.javascript.JavaAdapter$JavaAdapterSignature;

        if $z0 != 0 goto label01;

        return 0;

     label01:
        r1 = (org.mozilla.javascript.JavaAdapter$JavaAdapterSignature) r0;

        $r4 = r2.<org.mozilla.javascript.JavaAdapter$JavaAdapterSignature: java.lang.Class superClass>;

        $r3 = r1.<org.mozilla.javascript.JavaAdapter$JavaAdapterSignature: java.lang.Class superClass>;

        if $r4 == $r3 goto label02;

        return 0;

     label02:
        $r6 = r2.<org.mozilla.javascript.JavaAdapter$JavaAdapterSignature: java.lang.Class[] interfaces>;

        $r5 = r1.<org.mozilla.javascript.JavaAdapter$JavaAdapterSignature: java.lang.Class[] interfaces>;

        if $r6 == $r5 goto label06;

        $r14 = r2.<org.mozilla.javascript.JavaAdapter$JavaAdapterSignature: java.lang.Class[] interfaces>;

        $i6 = lengthof $r14;

        $r15 = r1.<org.mozilla.javascript.JavaAdapter$JavaAdapterSignature: java.lang.Class[] interfaces>;

        $i5 = lengthof $r15;

        if $i6 == $i5 goto label03;

        return 0;

     label03:
        i8 = 0;

     label04:
        $r16 = r2.<org.mozilla.javascript.JavaAdapter$JavaAdapterSignature: java.lang.Class[] interfaces>;

        $i7 = lengthof $r16;

        if i8 >= $i7 goto label06;

        $r17 = r2.<org.mozilla.javascript.JavaAdapter$JavaAdapterSignature: java.lang.Class[] interfaces>;

        $r20 = $r17[i8];

        $r18 = r1.<org.mozilla.javascript.JavaAdapter$JavaAdapterSignature: java.lang.Class[] interfaces>;

        $r19 = $r18[i8];

        if $r20 == $r19 goto label05;

        return 0;

     label05:
        i8 = i8 + 1;

        goto label04;

     label06:
        $r7 = r2.<org.mozilla.javascript.JavaAdapter$JavaAdapterSignature: org.mozilla.javascript.ObjToIntMap names>;

        $i0 = virtualinvoke $r7.<org.mozilla.javascript.ObjToIntMap: int size()>();

        $r8 = r1.<org.mozilla.javascript.JavaAdapter$JavaAdapterSignature: org.mozilla.javascript.ObjToIntMap names>;

        $i1 = virtualinvoke $r8.<org.mozilla.javascript.ObjToIntMap: int size()>();

        if $i0 == $i1 goto label07;

        return 0;

     label07:
        $r9 = new org.mozilla.javascript.ObjToIntMap$Iterator;

        $r10 = r2.<org.mozilla.javascript.JavaAdapter$JavaAdapterSignature: org.mozilla.javascript.ObjToIntMap names>;

        specialinvoke $r9.<org.mozilla.javascript.ObjToIntMap$Iterator: void <init>(org.mozilla.javascript.ObjToIntMap)>($r10);

        virtualinvoke $r9.<org.mozilla.javascript.ObjToIntMap$Iterator: void start()>();

     label08:
        $z1 = virtualinvoke $r9.<org.mozilla.javascript.ObjToIntMap$Iterator: boolean done()>();

        if $z1 != 0 goto label10;

        $r11 = virtualinvoke $r9.<org.mozilla.javascript.ObjToIntMap$Iterator: java.lang.Object getKey()>();

        r12 = (java.lang.String) $r11;

        $i2 = virtualinvoke $r9.<org.mozilla.javascript.ObjToIntMap$Iterator: int getValue()>();

        $r13 = r2.<org.mozilla.javascript.JavaAdapter$JavaAdapterSignature: org.mozilla.javascript.ObjToIntMap names>;

        $i3 = $i2 + 1;

        $i4 = virtualinvoke $r13.<org.mozilla.javascript.ObjToIntMap: int get(java.lang.Object,int)>(r12, $i3);

        if $i2 == $i4 goto label09;

        return 0;

     label09:
        virtualinvoke $r9.<org.mozilla.javascript.ObjToIntMap$Iterator: void next()>();

        goto label08;

     label10:
        return 1;
    }

    public int hashCode()
    {
        java.lang.Class[] $r3;
        org.mozilla.javascript.JavaAdapter$JavaAdapterSignature r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Class $r1;
        org.mozilla.javascript.ObjToIntMap $r2;

        r0 := @this: org.mozilla.javascript.JavaAdapter$JavaAdapterSignature;

        $r1 = r0.<org.mozilla.javascript.JavaAdapter$JavaAdapterSignature: java.lang.Class superClass>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $r2 = r0.<org.mozilla.javascript.JavaAdapter$JavaAdapterSignature: org.mozilla.javascript.ObjToIntMap names>;

        $i1 = virtualinvoke $r2.<org.mozilla.javascript.ObjToIntMap: int size()>();

        $r3 = r0.<org.mozilla.javascript.JavaAdapter$JavaAdapterSignature: java.lang.Class[] interfaces>;

        $i2 = lengthof $r3;

        $i3 = $i2 << 16;

        $i4 = $i1 | $i3;

        $i5 = -1640531527 * $i4;

        $i6 = $i0 | $i5;

        return $i6;
    }
}
