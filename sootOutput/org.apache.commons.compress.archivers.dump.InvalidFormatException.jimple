public class org.apache.commons.compress.archivers.dump.InvalidFormatException extends org.apache.commons.compress.archivers.dump.DumpArchiveException
{
    private static final long serialVersionUID;
    protected long offset;

    public void <init>()
    {
        org.apache.commons.compress.archivers.dump.InvalidFormatException r0;

        r0 := @this: org.apache.commons.compress.archivers.dump.InvalidFormatException;

        specialinvoke r0.<org.apache.commons.compress.archivers.dump.DumpArchiveException: void <init>(java.lang.String)>("there was an error decoding a tape segment");

        return;
    }

    public void <init>(long)
    {
        org.apache.commons.compress.archivers.dump.InvalidFormatException r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        long l0;
        java.lang.String $r5;

        r0 := @this: org.apache.commons.compress.archivers.dump.InvalidFormatException;

        l0 := @parameter0: long;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("there was an error decoding a tape segment header at offset ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.apache.commons.compress.archivers.dump.DumpArchiveException: void <init>(java.lang.String)>($r5);

        r0.<org.apache.commons.compress.archivers.dump.InvalidFormatException: long offset> = l0;

        return;
    }

    public long getOffset()
    {
        org.apache.commons.compress.archivers.dump.InvalidFormatException r0;
        long $l0;

        r0 := @this: org.apache.commons.compress.archivers.dump.InvalidFormatException;

        $l0 = r0.<org.apache.commons.compress.archivers.dump.InvalidFormatException: long offset>;

        return $l0;
    }

    public static void <clinit>()
    {
        <org.apache.commons.compress.archivers.dump.InvalidFormatException: long serialVersionUID> = 1L;

        return;
    }
}
