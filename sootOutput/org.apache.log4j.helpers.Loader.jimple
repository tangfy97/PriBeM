public class org.apache.log4j.helpers.Loader extends java.lang.Object
{
    static final java.lang.String TSTR;
    private static boolean java1;
    private static boolean ignoreTCL;
    static java.lang.Class class$org$apache$log4j$helpers$Loader;
    static java.lang.Class class$java$lang$Thread;

    public void <init>()
    {
        org.apache.log4j.helpers.Loader r0;

        r0 := @this: org.apache.log4j.helpers.Loader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.net.URL getResource(java.lang.String, java.lang.Class)
    {
        java.lang.Class r2;
        java.lang.String r0;
        java.net.URL $r1;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        $r1 = staticinvoke <org.apache.log4j.helpers.Loader: java.net.URL getResource(java.lang.String)>(r0);

        return $r1;
    }

    public static java.net.URL getResource(java.lang.String)
    {
        java.net.URL $r9, $r18, $r32;
        java.lang.Thread $r22;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalAccessException $r24;
        java.lang.reflect.InvocationTargetException $r20;
        java.lang.ClassLoader $r0, $r10;
        java.lang.Throwable $r19, $r21, $r23;
        java.lang.StringBuffer $r2, $r3, $r4, $r5, $r6, $r7, $r11, $r12, $r13, $r14, $r15, $r16, $r27, $r28, $r29, $r30;
        java.lang.String r1, $r8, $r17, $r31;
        java.lang.Class $r25, $r26;

        r1 := @parameter0: java.lang.String;

     label01:
        $z0 = <org.apache.log4j.helpers.Loader: boolean java1>;

        if $z0 != 0 goto label03;

        $z1 = <org.apache.log4j.helpers.Loader: boolean ignoreTCL>;

        if $z1 != 0 goto label03;

        $r10 = staticinvoke <org.apache.log4j.helpers.Loader: java.lang.ClassLoader getTCL()>();

        if $r10 == null goto label03;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Trying to find [");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] using context classloader ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r10);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r17);

        $r18 = virtualinvoke $r10.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>(r1);

        if $r18 == null goto label03;

     label02:
        return $r18;

     label03:
        $r25 = <org.apache.log4j.helpers.Loader: java.lang.Class class$org$apache$log4j$helpers$Loader>;

        if $r25 != null goto label04;

        $r26 = staticinvoke <org.apache.log4j.helpers.Loader: java.lang.Class class$(java.lang.String)>("org.apache.log4j.helpers.Loader");

        <org.apache.log4j.helpers.Loader: java.lang.Class class$org$apache$log4j$helpers$Loader> = $r26;

        goto label05;

     label04:
        $r26 = <org.apache.log4j.helpers.Loader: java.lang.Class class$org$apache$log4j$helpers$Loader>;

     label05:
        $r0 = virtualinvoke $r26.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if $r0 == null goto label07;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Trying to find [");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] using ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" class loader.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r8);

        $r9 = virtualinvoke $r0.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>(r1);

        if $r9 == null goto label07;

     label06:
        return $r9;

     label07:
        goto label13;

     label08:
        $r24 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Caught Exception while in Loader.getResource. This may be innocuous.", $r24);

        goto label13;

     label09:
        $r20 := @caughtexception;

        $r21 = virtualinvoke $r20.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $z2 = $r21 instanceof java.lang.InterruptedException;

        if $z2 != 0 goto label10;

        $r23 = virtualinvoke $r20.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $z3 = $r23 instanceof java.io.InterruptedIOException;

        if $z3 == 0 goto label11;

     label10:
        $r22 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r22.<java.lang.Thread: void interrupt()>();

     label11:
        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Caught Exception while in Loader.getResource. This may be innocuous.", $r20);

        goto label13;

     label12:
        $r19 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Caught Exception while in Loader.getResource. This may be innocuous.", $r19);

     label13:
        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Trying to find [");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] using ClassLoader.getSystemResource().");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r31);

        $r32 = staticinvoke <java.lang.ClassLoader: java.net.URL getSystemResource(java.lang.String)>(r1);

        return $r32;

        catch java.lang.IllegalAccessException from label01 to label02 with label08;
        catch java.lang.IllegalAccessException from label03 to label06 with label08;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label09;
        catch java.lang.reflect.InvocationTargetException from label03 to label06 with label09;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label06 with label12;
    }

    public static boolean isJava1()
    {
        boolean $z0;

        $z0 = <org.apache.log4j.helpers.Loader: boolean java1>;

        return $z0;
    }

    private static java.lang.ClassLoader getTCL() throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException
    {
        java.lang.NoSuchMethodException $r5;
        java.lang.Thread $r2;
        java.lang.Class $r0, $r6;
        java.lang.Object $r3;
        java.lang.ClassLoader $r4;
        java.lang.reflect.Method $r1;

     label1:
        $r0 = <org.apache.log4j.helpers.Loader: java.lang.Class class$java$lang$Thread>;

        if $r0 != null goto label2;

        $r6 = staticinvoke <org.apache.log4j.helpers.Loader: java.lang.Class class$(java.lang.String)>("java.lang.Thread");

        <org.apache.log4j.helpers.Loader: java.lang.Class class$java$lang$Thread> = $r6;

        goto label3;

     label2:
        $r6 = <org.apache.log4j.helpers.Loader: java.lang.Class class$java$lang$Thread>;

     label3:
        $r1 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getContextClassLoader", null);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        return null;

     label6:
        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, null);

        $r4 = (java.lang.ClassLoader) $r3;

        return $r4;

        catch java.lang.NoSuchMethodException from label1 to label4 with label5;
    }

    public static java.lang.Class loadClass(java.lang.String) throws java.lang.ClassNotFoundException
    {
        java.lang.Throwable $r4, $r7, $r9;
        java.lang.reflect.InvocationTargetException $r6;
        java.lang.Thread $r8;
        java.lang.Class $r1, $r3, $r5;
        java.lang.String r0;
        java.lang.ClassLoader $r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;

        $z0 = <org.apache.log4j.helpers.Loader: boolean java1>;

        if $z0 != 0 goto label1;

        $z1 = <org.apache.log4j.helpers.Loader: boolean ignoreTCL>;

        if $z1 == 0 goto label2;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 = staticinvoke <org.apache.log4j.helpers.Loader: java.lang.ClassLoader getTCL()>();

        $r3 = virtualinvoke $r2.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0);

     label3:
        return $r3;

     label4:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $z2 = $r7 instanceof java.lang.InterruptedException;

        if $z2 != 0 goto label5;

        $r9 = virtualinvoke $r6.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $z3 = $r9 instanceof java.io.InterruptedIOException;

        if $z3 == 0 goto label6;

     label5:
        $r8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r8.<java.lang.Thread: void interrupt()>();

     label6:
        goto label8;

     label7:
        $r4 := @caughtexception;

     label8:
        $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r5;

        catch java.lang.reflect.InvocationTargetException from label2 to label3 with label4;
        catch java.lang.Throwable from label2 to label3 with label7;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        char $c2;
        int $i0, $i1, $i4, $i5;
        java.lang.String $r0, $r1;
        boolean $z0;

        <org.apache.log4j.helpers.Loader: java.lang.String TSTR> = "Caught Exception while in Loader.getResource. This may be innocuous.";

        <org.apache.log4j.helpers.Loader: boolean java1> = 1;

        <org.apache.log4j.helpers.Loader: boolean ignoreTCL> = 0;

        $r0 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("java.version", null);

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(46);

        $i4 = (int) -1;

        if $i0 == $i4 goto label1;

        $i1 = $i0 + 1;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $i5 = (int) $c2;

        if $i5 == 49 goto label1;

        <org.apache.log4j.helpers.Loader: boolean java1> = 0;

     label1:
        $r1 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("log4j.ignoreTCL", null);

        if $r1 == null goto label2;

        $z0 = staticinvoke <org.apache.log4j.helpers.OptionConverter: boolean toBoolean(java.lang.String,boolean)>($r1, 1);

        <org.apache.log4j.helpers.Loader: boolean ignoreTCL> = $z0;

     label2:
        return;
    }
}
