public class org.apache.xmlbeans.impl.regex.SchemaRegularExpression extends org.apache.xmlbeans.impl.regex.RegularExpression
{
    static final java.util.Map knownPatterns;

    private void <init>(java.lang.String)
    {
        org.apache.xmlbeans.impl.regex.SchemaRegularExpression r0;
        java.lang.String r1;

        r0 := @this: org.apache.xmlbeans.impl.regex.SchemaRegularExpression;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.xmlbeans.impl.regex.RegularExpression: void <init>(java.lang.String,java.lang.String)>(r1, "X");

        return;
    }

    public static org.apache.xmlbeans.impl.regex.RegularExpression forPattern(java.lang.String)
    {
        org.apache.xmlbeans.impl.regex.RegularExpression $r4;
        org.apache.xmlbeans.impl.regex.SchemaRegularExpression r3;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.xmlbeans.impl.regex.SchemaRegularExpression: java.util.Map knownPatterns>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (org.apache.xmlbeans.impl.regex.SchemaRegularExpression) $r2;

        if r3 == null goto label1;

        return r3;

     label1:
        $r4 = new org.apache.xmlbeans.impl.regex.RegularExpression;

        specialinvoke $r4.<org.apache.xmlbeans.impl.regex.RegularExpression: void <init>(java.lang.String,java.lang.String)>(r0, "X");

        return $r4;
    }

    private static java.util.Map buildKnownPatternMap()
    {
        org.apache.xmlbeans.impl.regex.SchemaRegularExpression$2 $r2;
        org.apache.xmlbeans.impl.regex.SchemaRegularExpression$3 $r3;
        java.util.HashMap $r0;
        org.apache.xmlbeans.impl.regex.SchemaRegularExpression$1 $r1;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r1 = new org.apache.xmlbeans.impl.regex.SchemaRegularExpression$1;

        specialinvoke $r1.<org.apache.xmlbeans.impl.regex.SchemaRegularExpression$1: void <init>(java.lang.String)>("\\c+");

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\c+", $r1);

        $r2 = new org.apache.xmlbeans.impl.regex.SchemaRegularExpression$2;

        specialinvoke $r2.<org.apache.xmlbeans.impl.regex.SchemaRegularExpression$2: void <init>(java.lang.String)>("\\i\\c*");

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\i\\c*", $r2);

        $r3 = new org.apache.xmlbeans.impl.regex.SchemaRegularExpression$3;

        specialinvoke $r3.<org.apache.xmlbeans.impl.regex.SchemaRegularExpression$3: void <init>(java.lang.String)>("[\\i-[:]][\\c-[:]]*");

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("[\\i-[:]][\\c-[:]]*", $r3);

        return $r0;
    }

    void <init>(java.lang.String, org.apache.xmlbeans.impl.regex.SchemaRegularExpression$1)
    {
        org.apache.xmlbeans.impl.regex.SchemaRegularExpression r0;
        java.lang.String r1;
        org.apache.xmlbeans.impl.regex.SchemaRegularExpression$1 r2;

        r0 := @this: org.apache.xmlbeans.impl.regex.SchemaRegularExpression;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xmlbeans.impl.regex.SchemaRegularExpression$1;

        specialinvoke r0.<org.apache.xmlbeans.impl.regex.SchemaRegularExpression: void <init>(java.lang.String)>(r1);

        return;
    }

    static void <clinit>()
    {
        java.util.Map $r0;

        $r0 = staticinvoke <org.apache.xmlbeans.impl.regex.SchemaRegularExpression: java.util.Map buildKnownPatternMap()>();

        <org.apache.xmlbeans.impl.regex.SchemaRegularExpression: java.util.Map knownPatterns> = $r0;

        return;
    }
}
