public final class org.apache.poi.hslf.model.Polygon extends org.apache.poi.hslf.model.AutoShape
{

    protected void <init>(org.apache.poi.ddf.EscherContainerRecord, org.apache.poi.hslf.model.Shape)
    {
        org.apache.poi.ddf.EscherContainerRecord r1;
        org.apache.poi.hslf.model.Polygon r0;
        org.apache.poi.hslf.model.Shape r2;

        r0 := @this: org.apache.poi.hslf.model.Polygon;

        r1 := @parameter0: org.apache.poi.ddf.EscherContainerRecord;

        r2 := @parameter1: org.apache.poi.hslf.model.Shape;

        specialinvoke r0.<org.apache.poi.hslf.model.AutoShape: void <init>(org.apache.poi.ddf.EscherContainerRecord,org.apache.poi.hslf.model.Shape)>(r1, r2);

        return;
    }

    public void <init>(org.apache.poi.hslf.model.Shape)
    {
        org.apache.poi.ddf.EscherContainerRecord $r2;
        org.apache.poi.hslf.model.Shape r1;
        org.apache.poi.hslf.model.Polygon r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.model.Polygon;

        r1 := @parameter0: org.apache.poi.hslf.model.Shape;

        specialinvoke r0.<org.apache.poi.hslf.model.AutoShape: void <init>(org.apache.poi.ddf.EscherContainerRecord,org.apache.poi.hslf.model.Shape)>(null, r1);

        $z0 = r1 instanceof org.apache.poi.hslf.model.ShapeGroup;

        $r2 = virtualinvoke r0.<org.apache.poi.hslf.model.Polygon: org.apache.poi.ddf.EscherContainerRecord createSpContainer(int,boolean)>(0, $z0);

        r0.<org.apache.poi.hslf.model.Polygon: org.apache.poi.ddf.EscherContainerRecord _escherContainer> = $r2;

        return;
    }

    public void <init>()
    {
        org.apache.poi.hslf.model.Polygon r0;

        r0 := @this: org.apache.poi.hslf.model.Polygon;

        specialinvoke r0.<org.apache.poi.hslf.model.Polygon: void <init>(org.apache.poi.hslf.model.Shape)>(null);

        return;
    }

    public void setPoints(float[], float[])
    {
        byte[] $r9, $r11, $r12, $r13, $r14, $r15, $r16, r17, r18;
        float[] r1, r2;
        short $s6, $s8, $s22, $s24;
        org.apache.poi.ddf.EscherArrayProperty $r21, $r22;
        org.apache.poi.ddf.EscherOptRecord r5;
        org.apache.poi.ddf.EscherSimpleProperty $r19, $r20;
        org.apache.poi.ddf.EscherContainerRecord $r3;
        org.apache.poi.hslf.model.Polygon r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27;
        org.apache.poi.ddf.EscherRecord $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i23, i25, i26, i27, i28, $i30, $i32;

        r0 := @this: org.apache.poi.hslf.model.Polygon;

        r1 := @parameter0: float[];

        r2 := @parameter1: float[];

        $f0 = specialinvoke r0.<org.apache.poi.hslf.model.Polygon: float findBiggest(float[])>(r1);

        $f1 = specialinvoke r0.<org.apache.poi.hslf.model.Polygon: float findBiggest(float[])>(r2);

        $f2 = specialinvoke r0.<org.apache.poi.hslf.model.Polygon: float findSmallest(float[])>(r1);

        $f3 = specialinvoke r0.<org.apache.poi.hslf.model.Polygon: float findSmallest(float[])>(r2);

        $r3 = r0.<org.apache.poi.hslf.model.Polygon: org.apache.poi.ddf.EscherContainerRecord _escherContainer>;

        $i30 = (int) -4085;

        $r4 = staticinvoke <org.apache.poi.hslf.model.Polygon: org.apache.poi.ddf.EscherRecord getEscherChild(org.apache.poi.ddf.EscherContainerRecord,int)>($r3, $i30);

        r5 = (org.apache.poi.ddf.EscherOptRecord) $r4;

        $r19 = new org.apache.poi.ddf.EscherSimpleProperty;

        $f4 = $f0 - $f2;

        $f5 = $f4 * 72.0F;

        $f6 = $f5 / 576.0F;

        $i0 = (int) $f6;

        specialinvoke $r19.<org.apache.poi.ddf.EscherSimpleProperty: void <init>(short,int)>(322, $i0);

        virtualinvoke r5.<org.apache.poi.ddf.EscherOptRecord: void addEscherProperty(org.apache.poi.ddf.EscherProperty)>($r19);

        $r20 = new org.apache.poi.ddf.EscherSimpleProperty;

        $f7 = $f1 - $f3;

        $f8 = $f7 * 72.0F;

        $f9 = $f8 / 576.0F;

        $i1 = (int) $f9;

        specialinvoke $r20.<org.apache.poi.ddf.EscherSimpleProperty: void <init>(short,int)>(323, $i1);

        virtualinvoke r5.<org.apache.poi.ddf.EscherOptRecord: void addEscherProperty(org.apache.poi.ddf.EscherProperty)>($r20);

        i25 = 0;

     label1:
        $i2 = lengthof r1;

        if i25 >= $i2 goto label2;

        $f23 = r1[i25];

        $f22 = neg $f2;

        $f24 = $f23 + $f22;

        r1[i25] = $f24;

        $f26 = r2[i25];

        $f25 = neg $f3;

        $f27 = $f26 + $f25;

        r2[i25] = $f27;

        i25 = i25 + 1;

        goto label1;

     label2:
        i26 = lengthof r1;

        $r21 = new org.apache.poi.ddf.EscherArrayProperty;

        $r9 = newarray (byte)[0];

        specialinvoke $r21.<org.apache.poi.ddf.EscherArrayProperty: void <init>(short,boolean,byte[])>(325, 0, $r9);

        $i3 = i26 + 1;

        virtualinvoke $r21.<org.apache.poi.ddf.EscherArrayProperty: void setNumberOfElementsInArray(int)>($i3);

        $i4 = i26 + 1;

        virtualinvoke $r21.<org.apache.poi.ddf.EscherArrayProperty: void setNumberOfElementsInMemory(int)>($i4);

        $i32 = (int) 65520;

        virtualinvoke $r21.<org.apache.poi.ddf.EscherArrayProperty: void setSizeOfElements(int)>($i32);

        i27 = 0;

     label3:
        if i27 >= i26 goto label4;

        r17 = newarray (byte)[4];

        $f16 = r1[i27];

        $f17 = $f16 * 72.0F;

        $f18 = $f17 / 576.0F;

        $i21 = (int) $f18;

        $s22 = (short) $i21;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r17, 0, $s22);

        $f19 = r2[i27];

        $f20 = $f19 * 72.0F;

        $f21 = $f20 / 576.0F;

        $i23 = (int) $f21;

        $s24 = (short) $i23;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r17, 2, $s24);

        virtualinvoke $r21.<org.apache.poi.ddf.EscherArrayProperty: void setElement(int,byte[])>(i27, r17);

        i27 = i27 + 1;

        goto label3;

     label4:
        r18 = newarray (byte)[4];

        $f10 = r1[0];

        $f11 = $f10 * 72.0F;

        $f12 = $f11 / 576.0F;

        $i5 = (int) $f12;

        $s6 = (short) $i5;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r18, 0, $s6);

        $f13 = r2[0];

        $f14 = $f13 * 72.0F;

        $f15 = $f14 / 576.0F;

        $i7 = (int) $f15;

        $s8 = (short) $i7;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r18, 2, $s8);

        virtualinvoke $r21.<org.apache.poi.ddf.EscherArrayProperty: void setElement(int,byte[])>(i26, r18);

        virtualinvoke r5.<org.apache.poi.ddf.EscherOptRecord: void addEscherProperty(org.apache.poi.ddf.EscherProperty)>($r21);

        $r22 = new org.apache.poi.ddf.EscherArrayProperty;

        specialinvoke $r22.<org.apache.poi.ddf.EscherArrayProperty: void <init>(short,boolean,byte[])>(326, 0, null);

        virtualinvoke $r22.<org.apache.poi.ddf.EscherArrayProperty: void setSizeOfElements(int)>(2);

        $i9 = i26 * 2;

        $i10 = $i9 + 4;

        virtualinvoke $r22.<org.apache.poi.ddf.EscherArrayProperty: void setNumberOfElementsInArray(int)>($i10);

        $i11 = i26 * 2;

        $i12 = $i11 + 4;

        virtualinvoke $r22.<org.apache.poi.ddf.EscherArrayProperty: void setNumberOfElementsInMemory(int)>($i12);

        $r11 = newarray (byte)[2];

        $r11[0] = 0;

        $r11[1] = 64;

        virtualinvoke $r22.<org.apache.poi.ddf.EscherArrayProperty: void setElement(int,byte[])>(0, $r11);

        $r12 = newarray (byte)[2];

        $r12[0] = 0;

        $r12[1] = -84;

        virtualinvoke $r22.<org.apache.poi.ddf.EscherArrayProperty: void setElement(int,byte[])>(1, $r12);

        i28 = 0;

     label5:
        if i28 >= i26 goto label6;

        $i17 = i28 * 2;

        $i18 = 2 + $i17;

        $r15 = newarray (byte)[2];

        $r15[0] = 1;

        $r15[1] = 0;

        virtualinvoke $r22.<org.apache.poi.ddf.EscherArrayProperty: void setElement(int,byte[])>($i18, $r15);

        $i19 = i28 * 2;

        $i20 = 3 + $i19;

        $r16 = newarray (byte)[2];

        $r16[0] = 0;

        $r16[1] = -84;

        virtualinvoke $r22.<org.apache.poi.ddf.EscherArrayProperty: void setElement(int,byte[])>($i20, $r16);

        i28 = i28 + 1;

        goto label5;

     label6:
        $i13 = virtualinvoke $r22.<org.apache.poi.ddf.EscherArrayProperty: int getNumberOfElementsInArray()>();

        $i14 = $i13 - 2;

        $r13 = newarray (byte)[2];

        $r13[0] = 1;

        $r13[1] = 96;

        virtualinvoke $r22.<org.apache.poi.ddf.EscherArrayProperty: void setElement(int,byte[])>($i14, $r13);

        $i15 = virtualinvoke $r22.<org.apache.poi.ddf.EscherArrayProperty: int getNumberOfElementsInArray()>();

        $i16 = $i15 - 1;

        $r14 = newarray (byte)[2];

        $r14[0] = 0;

        $r14[1] = -128;

        virtualinvoke $r22.<org.apache.poi.ddf.EscherArrayProperty: void setElement(int,byte[])>($i16, $r14);

        virtualinvoke r5.<org.apache.poi.ddf.EscherOptRecord: void addEscherProperty(org.apache.poi.ddf.EscherProperty)>($r22);

        virtualinvoke r5.<org.apache.poi.ddf.EscherOptRecord: void sortProperties()>();

        return;
    }

    public void setPoints(java.awt.geom.Point2D[])
    {
        java.awt.geom.Point2D $r4, $r5;
        float[] r1, r2;
        org.apache.poi.hslf.model.Polygon r3;
        int $i0, $i1, $i2, i3;
        float $f0, $f1;
        java.awt.geom.Point2D[] r0;
        double $d0, $d1;

        r3 := @this: org.apache.poi.hslf.model.Polygon;

        r0 := @parameter0: java.awt.geom.Point2D[];

        $i0 = lengthof r0;

        r1 = newarray (float)[$i0];

        $i1 = lengthof r0;

        r2 = newarray (float)[$i1];

        i3 = 0;

     label1:
        $i2 = lengthof r0;

        if i3 >= $i2 goto label2;

        $r4 = r0[i3];

        $d0 = virtualinvoke $r4.<java.awt.geom.Point2D: double getX()>();

        $f0 = (float) $d0;

        r1[i3] = $f0;

        $r5 = r0[i3];

        $d1 = virtualinvoke $r5.<java.awt.geom.Point2D: double getY()>();

        $f1 = (float) $d1;

        r2[i3] = $f1;

        i3 = i3 + 1;

        goto label1;

     label2:
        virtualinvoke r3.<org.apache.poi.hslf.model.Polygon: void setPoints(float[],float[])>(r1, r2);

        return;
    }

    private float findBiggest(float[])
    {
        float[] r0;
        org.apache.poi.hslf.model.Polygon r1;
        byte $b1;
        int $i0, i2, $i3;
        float $f0, f1;

        r1 := @this: org.apache.poi.hslf.model.Polygon;

        r0 := @parameter0: float[];

        f1 = 1.4E-45F;

        i2 = 0;

     label1:
        $i0 = lengthof r0;

        if i2 >= $i0 goto label3;

        $f0 = r0[i2];

        $b1 = $f0 cmpl f1;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label2;

        f1 = r0[i2];

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return f1;
    }

    private float findSmallest(float[])
    {
        float[] r0;
        org.apache.poi.hslf.model.Polygon r1;
        byte $b1;
        int $i0, i2, $i3;
        float $f0, f1;

        r1 := @this: org.apache.poi.hslf.model.Polygon;

        r0 := @parameter0: float[];

        f1 = 3.4028235E38F;

        i2 = 0;

     label1:
        $i0 = lengthof r0;

        if i2 >= $i0 goto label3;

        $f0 = r0[i2];

        $b1 = $f0 cmpg f1;

        $i3 = (int) $b1;

        if $i3 >= 0 goto label2;

        f1 = r0[i2];

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return f1;
    }
}
