class com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor extends com.google.gxp.compiler.base.DefaultingExpressionVisitor
{
    private final com.google.gxp.compiler.base.SpaceOperatorSet spaceOperators;

    void <init>(com.google.gxp.compiler.base.SpaceOperatorSet)
    {
        com.google.gxp.compiler.base.SpaceOperatorSet r1, $r3;
        java.lang.Object $r2;
        com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor r0;

        r0 := @this: com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor;

        r1 := @parameter0: com.google.gxp.compiler.base.SpaceOperatorSet;

        specialinvoke r0.<com.google.gxp.compiler.base.DefaultingExpressionVisitor: void <init>()>();

        $r2 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (com.google.gxp.compiler.base.SpaceOperatorSet) $r2;

        r0.<com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor: com.google.gxp.compiler.base.SpaceOperatorSet spaceOperators> = $r3;

        return;
    }

    public com.google.gxp.compiler.base.Expression defaultVisitExpression(com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.base.Expression r0;
        com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor r1;

        r1 := @this: com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor;

        r0 := @parameter0: com.google.gxp.compiler.base.Expression;

        return r0;
    }

    public com.google.gxp.compiler.base.Expression visitCollapseExpression(com.google.gxp.compiler.base.CollapseExpression)
    {
        com.google.gxp.compiler.base.UnexpectedNodeException $r0;
        com.google.gxp.compiler.base.CollapseExpression r1;
        com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor r2;

        r2 := @this: com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor;

        r1 := @parameter0: com.google.gxp.compiler.base.CollapseExpression;

        $r0 = new com.google.gxp.compiler.base.UnexpectedNodeException;

        specialinvoke $r0.<com.google.gxp.compiler.base.UnexpectedNodeException: void <init>(com.google.gxp.compiler.base.Node)>(r1);

        throw $r0;
    }

    public com.google.gxp.compiler.base.Expression visitStringConstant(com.google.gxp.compiler.base.StringConstant)
    {
        com.google.gxp.compiler.alerts.SourcePosition $r1;
        java.util.List $r4, $r5;
        com.google.gxp.compiler.base.Expression $r6;
        com.google.gxp.compiler.schema.Schema $r3;
        com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor r2;
        com.google.gxp.compiler.base.StringConstant r0;

        r2 := @this: com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor;

        r0 := @parameter0: com.google.gxp.compiler.base.StringConstant;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.base.StringConstant: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r3 = virtualinvoke r0.<com.google.gxp.compiler.base.StringConstant: com.google.gxp.compiler.schema.Schema getSchema()>();

        $r4 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r0);

        $r5 = specialinvoke r2.<com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor: java.util.List processConcatenation(com.google.gxp.compiler.schema.Schema,java.util.List)>($r3, $r4);

        $r6 = staticinvoke <com.google.gxp.compiler.base.Concatenation: com.google.gxp.compiler.base.Expression create(com.google.gxp.compiler.alerts.SourcePosition,com.google.gxp.compiler.schema.Schema,java.util.List)>($r1, null, $r5);

        return $r6;
    }

    public com.google.gxp.compiler.base.Expression visitConcatenation(com.google.gxp.compiler.base.Concatenation)
    {
        java.util.List $r3, $r4;
        com.google.gxp.compiler.base.Expression $r5;
        com.google.gxp.compiler.schema.Schema $r2;
        com.google.gxp.compiler.base.Concatenation r0;
        com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor r1;

        r1 := @this: com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor;

        r0 := @parameter0: com.google.gxp.compiler.base.Concatenation;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.base.Concatenation: com.google.gxp.compiler.schema.Schema getSchema()>();

        $r3 = virtualinvoke r0.<com.google.gxp.compiler.base.Concatenation: java.util.List getValues()>();

        $r4 = specialinvoke r1.<com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor: java.util.List processConcatenation(com.google.gxp.compiler.schema.Schema,java.util.List)>($r2, $r3);

        $r5 = virtualinvoke r0.<com.google.gxp.compiler.base.Concatenation: com.google.gxp.compiler.base.Expression withValues(java.util.List)>($r4);

        return $r5;
    }

    private java.util.List processConcatenation(com.google.gxp.compiler.schema.Schema, java.util.List)
    {
        com.google.gxp.compiler.schema.Schema r37;
        java.util.regex.Matcher $r16, $r20, $r41;
        com.google.gxp.compiler.base.SpaceOperatorSet $r9, $r11;
        java.lang.CharSequence $r15, $r19;
        java.lang.StringBuilder $r0, $r21, $r22, $r25, $r27, $r30, $r31;
        com.google.gxp.compiler.base.Expression r53;
        java.util.ArrayList $r1, $r2, $r3, $r7;
        java.lang.String $r6, $r24, $r26, $r29, $r32, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r50, $r51, r55, r56, r57, r58;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.List r4;
        java.util.regex.Pattern $r13, $r17, $r40;
        com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12;
        com.google.gxp.compiler.alerts.SourcePosition $r38, r52;
        java.util.Iterator $r5;
        com.google.gxp.compiler.base.StringConstant $r35, r54;
        java.lang.Object $r14, $r18, $r23, $r28, $r33, $r34, $r36, $r39, $r49;
        com.google.gxp.compiler.base.SpaceOperator $r10, $r12;

        r8 := @this: com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor;

        r37 := @parameter0: com.google.gxp.compiler.schema.Schema;

        r4 := @parameter1: java.util.List;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        $r3 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        r52 = null;

        $r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r49 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r53 = (com.google.gxp.compiler.base.Expression) $r49;

        $z4 = r53 instanceof com.google.gxp.compiler.base.StringConstant;

        if $z4 == 0 goto label03;

        r54 = (com.google.gxp.compiler.base.StringConstant) r53;

        $r51 = virtualinvoke r54.<com.google.gxp.compiler.base.StringConstant: java.lang.String evaluate()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        if r52 != null goto label02;

        r52 = virtualinvoke r54.<com.google.gxp.compiler.base.StringConstant: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

     label02:
        goto label04;

     label03:
        $r50 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r50);

        virtualinvoke $r0.<java.lang.StringBuilder: void setLength(int)>(0);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r52);

        r52 = null;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r53);

     label04:
        goto label01;

     label05:
        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r52);

        $r7 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        $r9 = r8.<com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor: com.google.gxp.compiler.base.SpaceOperatorSet spaceOperators>;

        $r10 = virtualinvoke $r9.<com.google.gxp.compiler.base.SpaceOperatorSet: com.google.gxp.compiler.base.SpaceOperator getInteriorSpaceOperator()>();

        $r11 = r8.<com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor: com.google.gxp.compiler.base.SpaceOperatorSet spaceOperators>;

        $r12 = virtualinvoke $r11.<com.google.gxp.compiler.base.SpaceOperatorSet: com.google.gxp.compiler.base.SpaceOperator getExteriorSpaceOperator()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 <= 0 goto label17;

        $r13 = staticinvoke <com.google.gxp.compiler.collapse.SpaceCollapser: java.util.regex.Pattern access$400()>();

        $r14 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r15 = (java.lang.CharSequence) $r14;

        $r16 = virtualinvoke $r13.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r15);

        r55 = "";

        $z1 = virtualinvoke $r16.<java.util.regex.Matcher: boolean matches()>();

        if $z1 == 0 goto label06;

        $r47 = virtualinvoke $r16.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        r55 = virtualinvoke $r12.<com.google.gxp.compiler.base.SpaceOperator: java.lang.String apply(java.lang.String)>($r47);

        $r48 = virtualinvoke $r16.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        interfaceinvoke $r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(0, $r48);

     label06:
        $r17 = staticinvoke <com.google.gxp.compiler.collapse.SpaceCollapser: java.util.regex.Pattern access$500()>();

        $i1 = $i0 - 1;

        $r18 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r19 = (java.lang.CharSequence) $r18;

        $r20 = virtualinvoke $r17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r19);

        r56 = "";

        $z2 = virtualinvoke $r20.<java.util.regex.Matcher: boolean matches()>();

        if $z2 == 0 goto label07;

        $r45 = virtualinvoke $r20.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        r56 = virtualinvoke $r12.<com.google.gxp.compiler.base.SpaceOperator: java.lang.String apply(java.lang.String)>($r45);

        $i9 = $i0 - 1;

        $r46 = virtualinvoke $r20.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        interfaceinvoke $r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i9, $r46);

     label07:
        i10 = 0;

     label08:
        if i10 >= $i0 goto label13;

        $r39 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i10);

        r57 = (java.lang.String) $r39;

        $i6 = virtualinvoke r57.<java.lang.String: int length()>();

        if $i6 <= 0 goto label12;

        virtualinvoke $r0.<java.lang.StringBuilder: void setLength(int)>(0);

        $r40 = staticinvoke <com.google.gxp.compiler.collapse.SpaceCollapser: java.util.regex.Pattern access$600()>();

        $r41 = virtualinvoke $r40.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r57);

        i11 = 0;

     label09:
        $z3 = virtualinvoke $r41.<java.util.regex.Matcher: boolean find(int)>(i11);

        if $z3 == 0 goto label10;

        $i8 = virtualinvoke $r41.<java.util.regex.Matcher: int start()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r57, i11, $i8);

        i11 = virtualinvoke $r41.<java.util.regex.Matcher: int end()>();

        $r43 = virtualinvoke $r41.<java.util.regex.Matcher: java.lang.String group()>();

        $r44 = virtualinvoke $r10.<com.google.gxp.compiler.base.SpaceOperator: java.lang.String apply(java.lang.String)>($r43);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        goto label09;

     label10:
        $i7 = virtualinvoke r57.<java.lang.String: int length()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r57, i11, $i7);

        goto label11;

     label11:
        $r42 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i10, $r42);

     label12:
        i10 = i10 + 1;

        goto label08;

     label13:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r55);

        $r23 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r24 = (java.lang.String) $r23;

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(0, $r26);

        $i2 = $i0 - 1;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $i3 = $i0 - 1;

        $r28 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i3);

        $r29 = (java.lang.String) $r28;

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i2, $r32);

        i12 = 0;

     label14:
        if i12 >= $i0 goto label17;

        $r33 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i12);

        r58 = (java.lang.String) $r33;

        $i4 = virtualinvoke r58.<java.lang.String: int length()>();

        if $i4 <= 0 goto label15;

        $r35 = new com.google.gxp.compiler.base.StringConstant;

        $r36 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i12);

        $r38 = (com.google.gxp.compiler.alerts.SourcePosition) $r36;

        specialinvoke $r35.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.alerts.SourcePosition,com.google.gxp.compiler.schema.Schema,java.lang.String)>($r38, r37, r58);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r35);

     label15:
        $i5 = $i0 - 1;

        if i12 >= $i5 goto label16;

        $r34 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i12);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r34);

     label16:
        i12 = i12 + 1;

        goto label14;

     label17:
        return $r7;
    }

    public volatile java.lang.Object visitStringConstant(com.google.gxp.compiler.base.StringConstant)
    {
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor r0;
        com.google.gxp.compiler.base.StringConstant r1;

        r0 := @this: com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor;

        r1 := @parameter0: com.google.gxp.compiler.base.StringConstant;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor: com.google.gxp.compiler.base.Expression visitStringConstant(com.google.gxp.compiler.base.StringConstant)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitConcatenation(com.google.gxp.compiler.base.Concatenation)
    {
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.Concatenation r1;
        com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor r0;

        r0 := @this: com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor;

        r1 := @parameter0: com.google.gxp.compiler.base.Concatenation;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor: com.google.gxp.compiler.base.Expression visitConcatenation(com.google.gxp.compiler.base.Concatenation)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitCollapseExpression(com.google.gxp.compiler.base.CollapseExpression)
    {
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.CollapseExpression r1;
        com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor r0;

        r0 := @this: com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor;

        r1 := @parameter0: com.google.gxp.compiler.base.CollapseExpression;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor: com.google.gxp.compiler.base.Expression visitCollapseExpression(com.google.gxp.compiler.base.CollapseExpression)>(r1);

        return $r2;
    }

    public volatile java.lang.Object defaultVisitExpression(com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.base.Expression r1, $r2;
        com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor r0;

        r0 := @this: com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor;

        r1 := @parameter0: com.google.gxp.compiler.base.Expression;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.collapse.SpaceCollapser$CollapsingVisitor: com.google.gxp.compiler.base.Expression defaultVisitExpression(com.google.gxp.compiler.base.Expression)>(r1);

        return $r2;
    }
}
