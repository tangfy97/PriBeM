public class org.apache.lucene.index.PrefixCodedTerms$Builder extends java.lang.Object
{
    private org.apache.lucene.store.RAMFile buffer;
    private org.apache.lucene.store.RAMOutputStream output;
    private org.apache.lucene.index.Term lastTerm;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.apache.lucene.store.RAMOutputStream $r2;
        org.apache.lucene.store.RAMFile $r1, $r3;
        org.apache.lucene.index.Term $r4;
        org.apache.lucene.index.PrefixCodedTerms$Builder r0;

        r0 := @this: org.apache.lucene.index.PrefixCodedTerms$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.lucene.store.RAMFile;

        specialinvoke $r1.<org.apache.lucene.store.RAMFile: void <init>()>();

        r0.<org.apache.lucene.index.PrefixCodedTerms$Builder: org.apache.lucene.store.RAMFile buffer> = $r1;

        $r2 = new org.apache.lucene.store.RAMOutputStream;

        $r3 = r0.<org.apache.lucene.index.PrefixCodedTerms$Builder: org.apache.lucene.store.RAMFile buffer>;

        specialinvoke $r2.<org.apache.lucene.store.RAMOutputStream: void <init>(org.apache.lucene.store.RAMFile)>($r3);

        r0.<org.apache.lucene.index.PrefixCodedTerms$Builder: org.apache.lucene.store.RAMOutputStream output> = $r2;

        $r4 = new org.apache.lucene.index.Term;

        specialinvoke $r4.<org.apache.lucene.index.Term: void <init>(java.lang.String)>("");

        r0.<org.apache.lucene.index.PrefixCodedTerms$Builder: org.apache.lucene.index.Term lastTerm> = $r4;

        return;
    }

    public void add(org.apache.lucene.index.Term)
    {
        byte[] $r8;
        org.apache.lucene.index.Term r1, $r10, $r14, $r16, $r17, $r18, $r22, $r27;
        boolean $z0, $z1, $z2;
        org.apache.lucene.util.BytesRef $r6, $r7, $r11, $r12, $r23, $r24, $r25;
        java.lang.AssertionError $r19;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.apache.lucene.index.PrefixCodedTerms$Builder r0;
        java.lang.String $r3, $r13, $r26, $r28;
        java.io.IOException $r20;
        java.lang.RuntimeException $r21;
        org.apache.lucene.store.RAMOutputStream $r2, $r4, $r5, $r9, $r15;

        r0 := @this: org.apache.lucene.index.PrefixCodedTerms$Builder;

        r1 := @parameter0: org.apache.lucene.index.Term;

        $z0 = <org.apache.lucene.index.PrefixCodedTerms$Builder: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r17 = r0.<org.apache.lucene.index.PrefixCodedTerms$Builder: org.apache.lucene.index.Term lastTerm>;

        $r16 = new org.apache.lucene.index.Term;

        specialinvoke $r16.<org.apache.lucene.index.Term: void <init>(java.lang.String)>("");

        $z1 = virtualinvoke $r17.<org.apache.lucene.index.Term: boolean equals(java.lang.Object)>($r16);

        if $z1 != 0 goto label1;

        $r18 = r0.<org.apache.lucene.index.PrefixCodedTerms$Builder: org.apache.lucene.index.Term lastTerm>;

        $i5 = virtualinvoke r1.<org.apache.lucene.index.Term: int compareTo(org.apache.lucene.index.Term)>($r18);

        if $i5 > 0 goto label1;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();

        throw $r19;

     label1:
        $r22 = r0.<org.apache.lucene.index.PrefixCodedTerms$Builder: org.apache.lucene.index.Term lastTerm>;

        $r23 = $r22.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes>;

        $r24 = r1.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes>;

        $i6 = specialinvoke r0.<org.apache.lucene.index.PrefixCodedTerms$Builder: int sharedPrefix(org.apache.lucene.util.BytesRef,org.apache.lucene.util.BytesRef)>($r23, $r24);

        $r25 = r1.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes>;

        $i7 = $r25.<org.apache.lucene.util.BytesRef: int length>;

        $i8 = $i7 - $i6;

        $r26 = r1.<org.apache.lucene.index.Term: java.lang.String field>;

        $r27 = r0.<org.apache.lucene.index.PrefixCodedTerms$Builder: org.apache.lucene.index.Term lastTerm>;

        $r28 = $r27.<org.apache.lucene.index.Term: java.lang.String field>;

        $z2 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r28);

        if $z2 == 0 goto label2;

        $r15 = r0.<org.apache.lucene.index.PrefixCodedTerms$Builder: org.apache.lucene.store.RAMOutputStream output>;

        $i4 = $i6 << 1;

        virtualinvoke $r15.<org.apache.lucene.store.RAMOutputStream: void writeVInt(int)>($i4);

        goto label3;

     label2:
        $r2 = r0.<org.apache.lucene.index.PrefixCodedTerms$Builder: org.apache.lucene.store.RAMOutputStream output>;

        $i0 = $i6 << 1;

        $i1 = $i0 | 1;

        virtualinvoke $r2.<org.apache.lucene.store.RAMOutputStream: void writeVInt(int)>($i1);

        $r4 = r0.<org.apache.lucene.index.PrefixCodedTerms$Builder: org.apache.lucene.store.RAMOutputStream output>;

        $r3 = r1.<org.apache.lucene.index.Term: java.lang.String field>;

        virtualinvoke $r4.<org.apache.lucene.store.RAMOutputStream: void writeString(java.lang.String)>($r3);

     label3:
        $r5 = r0.<org.apache.lucene.index.PrefixCodedTerms$Builder: org.apache.lucene.store.RAMOutputStream output>;

        virtualinvoke $r5.<org.apache.lucene.store.RAMOutputStream: void writeVInt(int)>($i8);

        $r9 = r0.<org.apache.lucene.index.PrefixCodedTerms$Builder: org.apache.lucene.store.RAMOutputStream output>;

        $r6 = r1.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes>;

        $r8 = $r6.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r7 = r1.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes>;

        $i2 = $r7.<org.apache.lucene.util.BytesRef: int offset>;

        $i3 = $i2 + $i6;

        virtualinvoke $r9.<org.apache.lucene.store.RAMOutputStream: void writeBytes(byte[],int,int)>($r8, $i3, $i8);

        $r10 = r0.<org.apache.lucene.index.PrefixCodedTerms$Builder: org.apache.lucene.index.Term lastTerm>;

        $r12 = $r10.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes>;

        $r11 = r1.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes>;

        virtualinvoke $r12.<org.apache.lucene.util.BytesRef: void copyBytes(org.apache.lucene.util.BytesRef)>($r11);

        $r14 = r0.<org.apache.lucene.index.PrefixCodedTerms$Builder: org.apache.lucene.index.Term lastTerm>;

        $r13 = r1.<org.apache.lucene.index.Term: java.lang.String field>;

        $r14.<org.apache.lucene.index.Term: java.lang.String field> = $r13;

     label4:
        goto label6;

     label5:
        $r20 := @caughtexception;

        $r21 = new java.lang.RuntimeException;

        specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r20);

        throw $r21;

     label6:
        return;

        catch java.io.IOException from label1 to label4 with label5;
    }

    public org.apache.lucene.index.PrefixCodedTerms finish()
    {
        org.apache.lucene.store.RAMOutputStream $r1;
        org.apache.lucene.index.PrefixCodedTerms $r2;
        org.apache.lucene.store.RAMFile $r3;
        org.apache.lucene.index.PrefixCodedTerms$Builder r0;
        java.io.IOException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: org.apache.lucene.index.PrefixCodedTerms$Builder;

     label1:
        $r1 = r0.<org.apache.lucene.index.PrefixCodedTerms$Builder: org.apache.lucene.store.RAMOutputStream output>;

        virtualinvoke $r1.<org.apache.lucene.store.RAMOutputStream: void close()>();

        $r2 = new org.apache.lucene.index.PrefixCodedTerms;

        $r3 = r0.<org.apache.lucene.index.PrefixCodedTerms$Builder: org.apache.lucene.store.RAMFile buffer>;

        specialinvoke $r2.<org.apache.lucene.index.PrefixCodedTerms: void <init>(org.apache.lucene.store.RAMFile,org.apache.lucene.index.PrefixCodedTerms$1)>($r3, null);

     label2:
        return $r2;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private int sharedPrefix(org.apache.lucene.util.BytesRef, org.apache.lucene.util.BytesRef)
    {
        byte[] $r2, $r3;
        byte $b8, $b9;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, i10, i11, $i12, $i13;
        org.apache.lucene.index.PrefixCodedTerms$Builder r4;
        org.apache.lucene.util.BytesRef r0, r1;

        r4 := @this: org.apache.lucene.index.PrefixCodedTerms$Builder;

        r0 := @parameter0: org.apache.lucene.util.BytesRef;

        r1 := @parameter1: org.apache.lucene.util.BytesRef;

        i10 = 0;

        $i1 = r0.<org.apache.lucene.util.BytesRef: int length>;

        $i0 = r1.<org.apache.lucene.util.BytesRef: int length>;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        i3 = 0 + $i2;

        i11 = 0;

     label1:
        if i10 >= i3 goto label3;

        $r2 = r0.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i4 = r0.<org.apache.lucene.util.BytesRef: int offset>;

        $i5 = $i4 + i10;

        $b9 = $r2[$i5];

        $r3 = r1.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i6 = r1.<org.apache.lucene.util.BytesRef: int offset>;

        $i7 = $i6 + i11;

        $b8 = $r3[$i7];

        $i12 = (int) $b9;

        $i13 = (int) $b8;

        if $i12 == $i13 goto label2;

        return i10;

     label2:
        i10 = i10 + 1;

        i11 = i11 + 1;

        goto label1;

     label3:
        return i10;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/PrefixCodedTerms;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.PrefixCodedTerms$Builder: boolean $assertionsDisabled> = $z1;

        return;
    }
}
