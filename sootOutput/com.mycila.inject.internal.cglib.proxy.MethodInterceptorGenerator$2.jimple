class com.mycila.inject.internal.cglib.proxy.MethodInterceptorGenerator$2 extends java.lang.Object implements com.mycila.inject.internal.cglib.core.ObjectSwitchCallback
{
    private final com.mycila.inject.internal.cglib.core.CodeEmitter val$e;
    private final java.util.Map val$sigMap;
    private final com.mycila.inject.internal.cglib.proxy.MethodInterceptorGenerator this$0;

    void <init>(com.mycila.inject.internal.cglib.proxy.MethodInterceptorGenerator, com.mycila.inject.internal.cglib.core.CodeEmitter, java.util.Map)
    {
        com.mycila.inject.internal.cglib.proxy.MethodInterceptorGenerator r1;
        java.util.Map r3;
        com.mycila.inject.internal.cglib.core.CodeEmitter r2;
        com.mycila.inject.internal.cglib.proxy.MethodInterceptorGenerator$2 r0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.MethodInterceptorGenerator$2;

        r1 := @parameter0: com.mycila.inject.internal.cglib.proxy.MethodInterceptorGenerator;

        r2 := @parameter1: com.mycila.inject.internal.cglib.core.CodeEmitter;

        r3 := @parameter2: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mycila.inject.internal.cglib.proxy.MethodInterceptorGenerator$2: com.mycila.inject.internal.cglib.proxy.MethodInterceptorGenerator this$0> = r1;

        r0.<com.mycila.inject.internal.cglib.proxy.MethodInterceptorGenerator$2: com.mycila.inject.internal.cglib.core.CodeEmitter val$e> = r2;

        r0.<com.mycila.inject.internal.cglib.proxy.MethodInterceptorGenerator$2: java.util.Map val$sigMap> = r3;

        return;
    }

    public void processCase(java.lang.Object, com.mycila.inject.internal.asm.Label)
    {
        com.mycila.inject.internal.cglib.core.CodeEmitter $r3, $r6;
        com.mycila.inject.internal.cglib.proxy.MethodInterceptorGenerator$2 r0;
        java.util.Map $r2;
        com.mycila.inject.internal.asm.Label r7;
        java.lang.Object r1, $r4;
        java.lang.String $r5;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.MethodInterceptorGenerator$2;

        r1 := @parameter0: java.lang.Object;

        r7 := @parameter1: com.mycila.inject.internal.asm.Label;

        $r3 = r0.<com.mycila.inject.internal.cglib.proxy.MethodInterceptorGenerator$2: com.mycila.inject.internal.cglib.core.CodeEmitter val$e>;

        $r2 = r0.<com.mycila.inject.internal.cglib.proxy.MethodInterceptorGenerator$2: java.util.Map val$sigMap>;

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (java.lang.String) $r4;

        virtualinvoke $r3.<com.mycila.inject.internal.cglib.core.CodeEmitter: void getfield(java.lang.String)>($r5);

        $r6 = r0.<com.mycila.inject.internal.cglib.proxy.MethodInterceptorGenerator$2: com.mycila.inject.internal.cglib.core.CodeEmitter val$e>;

        virtualinvoke $r6.<com.mycila.inject.internal.cglib.core.CodeEmitter: void return_value()>();

        return;
    }

    public void processDefault()
    {
        com.mycila.inject.internal.cglib.core.CodeEmitter $r1, $r2;
        com.mycila.inject.internal.cglib.proxy.MethodInterceptorGenerator$2 r0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.MethodInterceptorGenerator$2;

        $r1 = r0.<com.mycila.inject.internal.cglib.proxy.MethodInterceptorGenerator$2: com.mycila.inject.internal.cglib.core.CodeEmitter val$e>;

        virtualinvoke $r1.<com.mycila.inject.internal.cglib.core.CodeEmitter: void aconst_null()>();

        $r2 = r0.<com.mycila.inject.internal.cglib.proxy.MethodInterceptorGenerator$2: com.mycila.inject.internal.cglib.core.CodeEmitter val$e>;

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void return_value()>();

        return;
    }
}
