public class com.mycila.inject.internal.cglib.reflect.FastMethod extends com.mycila.inject.internal.cglib.reflect.FastMember
{

    void <init>(com.mycila.inject.internal.cglib.reflect.FastClass, java.lang.reflect.Method)
    {
        int $i0;
        com.mycila.inject.internal.cglib.reflect.FastMethod r0;
        com.mycila.inject.internal.cglib.reflect.FastClass r1;
        java.lang.reflect.Method r2;

        r0 := @this: com.mycila.inject.internal.cglib.reflect.FastMethod;

        r1 := @parameter0: com.mycila.inject.internal.cglib.reflect.FastClass;

        r2 := @parameter1: java.lang.reflect.Method;

        $i0 = staticinvoke <com.mycila.inject.internal.cglib.reflect.FastMethod: int helper(com.mycila.inject.internal.cglib.reflect.FastClass,java.lang.reflect.Method)>(r1, r2);

        specialinvoke r0.<com.mycila.inject.internal.cglib.reflect.FastMember: void <init>(com.mycila.inject.internal.cglib.reflect.FastClass,java.lang.reflect.Member,int)>(r1, r2, $i0);

        return;
    }

    private static int helper(com.mycila.inject.internal.cglib.reflect.FastClass, java.lang.reflect.Method)
    {
        java.lang.reflect.Method r1;
        com.mycila.inject.internal.cglib.reflect.FastClass r0;
        java.lang.StringBuffer $r5, $r7, $r9, $r10, $r11, $r14, $r15, $r16, $r18, $r20, $r21, $r22, $r25;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r2, $r8, $r12, $r17, $r24, $r26;
        java.io.PrintStream $r6, $r19;
        java.lang.Class[] $r3, $r4;
        java.lang.IllegalArgumentException $r13;
        java.lang.Class $r23;

        r0 := @parameter0: com.mycila.inject.internal.cglib.reflect.FastClass;

        r1 := @parameter1: java.lang.reflect.Method;

        $r2 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.String getName()>();

        $r3 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i0 = virtualinvoke r0.<com.mycila.inject.internal.cglib.reflect.FastClass: int getIndex(java.lang.String,java.lang.Class[])>($r2, $r3);

        if $i0 >= 0 goto label3;

        $r4 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r6 = <java.lang.System: java.io.PrintStream err>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("hash=");

        $r8 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.String getName()>();

        $i1 = virtualinvoke $r8.<java.lang.String: int hashCode()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" size=");

        $i2 = lengthof $r4;

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r12);

        i4 = 0;

     label1:
        $i3 = lengthof $r4;

        if i4 >= $i3 goto label2;

        $r19 = <java.lang.System: java.io.PrintStream err>;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  types[");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i4);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]=");

        $r23 = $r4[i4];

        $r24 = virtualinvoke $r23.<java.lang.Class: java.lang.String getName()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r26);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r13 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot find method ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r13;

     label3:
        return $i0;
    }

    public java.lang.Class getReturnType()
    {
        java.lang.reflect.Member $r1;
        java.lang.Class $r3;
        com.mycila.inject.internal.cglib.reflect.FastMethod r0;
        java.lang.reflect.Method $r2;

        r0 := @this: com.mycila.inject.internal.cglib.reflect.FastMethod;

        $r1 = r0.<com.mycila.inject.internal.cglib.reflect.FastMethod: java.lang.reflect.Member member>;

        $r2 = (java.lang.reflect.Method) $r1;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        return $r3;
    }

    public java.lang.Class[] getParameterTypes()
    {
        java.lang.reflect.Member $r1;
        java.lang.Class[] $r3;
        com.mycila.inject.internal.cglib.reflect.FastMethod r0;
        java.lang.reflect.Method $r2;

        r0 := @this: com.mycila.inject.internal.cglib.reflect.FastMethod;

        $r1 = r0.<com.mycila.inject.internal.cglib.reflect.FastMethod: java.lang.reflect.Member member>;

        $r2 = (java.lang.reflect.Method) $r1;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        return $r3;
    }

    public java.lang.Class[] getExceptionTypes()
    {
        java.lang.reflect.Member $r1;
        java.lang.Class[] $r3;
        com.mycila.inject.internal.cglib.reflect.FastMethod r0;
        java.lang.reflect.Method $r2;

        r0 := @this: com.mycila.inject.internal.cglib.reflect.FastMethod;

        $r1 = r0.<com.mycila.inject.internal.cglib.reflect.FastMethod: java.lang.reflect.Member member>;

        $r2 = (java.lang.reflect.Method) $r1;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>();

        return $r3;
    }

    public java.lang.Object invoke(java.lang.Object, java.lang.Object[]) throws java.lang.reflect.InvocationTargetException
    {
        java.lang.Object[] r2;
        int $i0;
        java.lang.Object r1, $r4;
        com.mycila.inject.internal.cglib.reflect.FastMethod r0;
        com.mycila.inject.internal.cglib.reflect.FastClass $r3;

        r0 := @this: com.mycila.inject.internal.cglib.reflect.FastMethod;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object[];

        $r3 = r0.<com.mycila.inject.internal.cglib.reflect.FastMethod: com.mycila.inject.internal.cglib.reflect.FastClass fc>;

        $i0 = r0.<com.mycila.inject.internal.cglib.reflect.FastMethod: int index>;

        $r4 = virtualinvoke $r3.<com.mycila.inject.internal.cglib.reflect.FastClass: java.lang.Object invoke(int,java.lang.Object,java.lang.Object[])>($i0, r1, r2);

        return $r4;
    }

    public java.lang.reflect.Method getJavaMethod()
    {
        com.mycila.inject.internal.cglib.reflect.FastMethod r0;
        java.lang.reflect.Method $r2;
        java.lang.reflect.Member $r1;

        r0 := @this: com.mycila.inject.internal.cglib.reflect.FastMethod;

        $r1 = r0.<com.mycila.inject.internal.cglib.reflect.FastMethod: java.lang.reflect.Member member>;

        $r2 = (java.lang.reflect.Method) $r1;

        return $r2;
    }
}
