public class org.jdesktop.swingx.graphics.ShadowRenderer extends java.lang.Object
{
    public static final java.lang.String SIZE_CHANGED_PROPERTY;
    public static final java.lang.String OPACITY_CHANGED_PROPERTY;
    public static final java.lang.String COLOR_CHANGED_PROPERTY;
    private int size;
    private float opacity;
    private java.awt.Color color;
    private java.beans.PropertyChangeSupport changeSupport;

    public void <init>()
    {
        java.awt.Color $r1;
        org.jdesktop.swingx.graphics.ShadowRenderer r0;

        r0 := @this: org.jdesktop.swingx.graphics.ShadowRenderer;

        $r1 = <java.awt.Color: java.awt.Color BLACK>;

        specialinvoke r0.<org.jdesktop.swingx.graphics.ShadowRenderer: void <init>(int,float,java.awt.Color)>(5, 0.5F, $r1);

        return;
    }

    public void <init>(int, float, java.awt.Color)
    {
        java.awt.Color $r1, r3;
        org.jdesktop.swingx.graphics.ShadowRenderer r0;
        int i0;
        java.beans.PropertyChangeSupport $r2;
        float f0;

        r0 := @this: org.jdesktop.swingx.graphics.ShadowRenderer;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        r3 := @parameter2: java.awt.Color;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jdesktop.swingx.graphics.ShadowRenderer: int size> = 5;

        r0.<org.jdesktop.swingx.graphics.ShadowRenderer: float opacity> = 0.5F;

        $r1 = <java.awt.Color: java.awt.Color BLACK>;

        r0.<org.jdesktop.swingx.graphics.ShadowRenderer: java.awt.Color color> = $r1;

        $r2 = new java.beans.PropertyChangeSupport;

        specialinvoke $r2.<java.beans.PropertyChangeSupport: void <init>(java.lang.Object)>(r0);

        r0.<org.jdesktop.swingx.graphics.ShadowRenderer: java.beans.PropertyChangeSupport changeSupport> = $r2;

        virtualinvoke r0.<org.jdesktop.swingx.graphics.ShadowRenderer: void setSize(int)>(i0);

        virtualinvoke r0.<org.jdesktop.swingx.graphics.ShadowRenderer: void setOpacity(float)>(f0);

        virtualinvoke r0.<org.jdesktop.swingx.graphics.ShadowRenderer: void setColor(java.awt.Color)>(r3);

        return;
    }

    public void addPropertyChangeListener(java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeSupport $r2;
        org.jdesktop.swingx.graphics.ShadowRenderer r0;
        java.beans.PropertyChangeListener r1;

        r0 := @this: org.jdesktop.swingx.graphics.ShadowRenderer;

        r1 := @parameter0: java.beans.PropertyChangeListener;

        $r2 = r0.<org.jdesktop.swingx.graphics.ShadowRenderer: java.beans.PropertyChangeSupport changeSupport>;

        virtualinvoke $r2.<java.beans.PropertyChangeSupport: void addPropertyChangeListener(java.beans.PropertyChangeListener)>(r1);

        return;
    }

    public void removePropertyChangeListener(java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeSupport $r2;
        org.jdesktop.swingx.graphics.ShadowRenderer r0;
        java.beans.PropertyChangeListener r1;

        r0 := @this: org.jdesktop.swingx.graphics.ShadowRenderer;

        r1 := @parameter0: java.beans.PropertyChangeListener;

        $r2 = r0.<org.jdesktop.swingx.graphics.ShadowRenderer: java.beans.PropertyChangeSupport changeSupport>;

        virtualinvoke $r2.<java.beans.PropertyChangeSupport: void removePropertyChangeListener(java.beans.PropertyChangeListener)>(r1);

        return;
    }

    public java.awt.Color getColor()
    {
        java.awt.Color $r1;
        org.jdesktop.swingx.graphics.ShadowRenderer r0;

        r0 := @this: org.jdesktop.swingx.graphics.ShadowRenderer;

        $r1 = r0.<org.jdesktop.swingx.graphics.ShadowRenderer: java.awt.Color color>;

        return $r1;
    }

    public void setColor(java.awt.Color)
    {
        java.awt.Color r0, r2, $r3;
        org.jdesktop.swingx.graphics.ShadowRenderer r1;
        java.beans.PropertyChangeSupport $r4;

        r1 := @this: org.jdesktop.swingx.graphics.ShadowRenderer;

        r0 := @parameter0: java.awt.Color;

        if r0 == null goto label1;

        r2 = r1.<org.jdesktop.swingx.graphics.ShadowRenderer: java.awt.Color color>;

        r1.<org.jdesktop.swingx.graphics.ShadowRenderer: java.awt.Color color> = r0;

        $r4 = r1.<org.jdesktop.swingx.graphics.ShadowRenderer: java.beans.PropertyChangeSupport changeSupport>;

        $r3 = r1.<org.jdesktop.swingx.graphics.ShadowRenderer: java.awt.Color color>;

        virtualinvoke $r4.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("shadow_color", r2, $r3);

     label1:
        return;
    }

    public float getOpacity()
    {
        float $f0;
        org.jdesktop.swingx.graphics.ShadowRenderer r0;

        r0 := @this: org.jdesktop.swingx.graphics.ShadowRenderer;

        $f0 = r0.<org.jdesktop.swingx.graphics.ShadowRenderer: float opacity>;

        return $f0;
    }

    public void setOpacity(float)
    {
        java.lang.Float $r2, $r3;
        org.jdesktop.swingx.graphics.ShadowRenderer r0;
        byte $b0, $b1;
        int $i2, $i3;
        float f0, f1, $f2;
        java.beans.PropertyChangeSupport $r1;
        double $d0;

        r0 := @this: org.jdesktop.swingx.graphics.ShadowRenderer;

        f1 := @parameter0: float;

        f0 = r0.<org.jdesktop.swingx.graphics.ShadowRenderer: float opacity>;

        $d0 = (double) f1;

        $b0 = $d0 cmpg 0.0;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label1;

        r0.<org.jdesktop.swingx.graphics.ShadowRenderer: float opacity> = 0.0F;

        goto label3;

     label1:
        $b1 = f1 cmpl 1.0F;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label2;

        r0.<org.jdesktop.swingx.graphics.ShadowRenderer: float opacity> = 1.0F;

        goto label3;

     label2:
        r0.<org.jdesktop.swingx.graphics.ShadowRenderer: float opacity> = f1;

     label3:
        $r1 = r0.<org.jdesktop.swingx.graphics.ShadowRenderer: java.beans.PropertyChangeSupport changeSupport>;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $f2 = r0.<org.jdesktop.swingx.graphics.ShadowRenderer: float opacity>;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        virtualinvoke $r1.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("shadow_opacity", $r2, $r3);

        return;
    }

    public int getSize()
    {
        int $i0;
        org.jdesktop.swingx.graphics.ShadowRenderer r0;

        r0 := @this: org.jdesktop.swingx.graphics.ShadowRenderer;

        $i0 = r0.<org.jdesktop.swingx.graphics.ShadowRenderer: int size>;

        return $i0;
    }

    public void setSize(int)
    {
        org.jdesktop.swingx.graphics.ShadowRenderer r0;
        int i0, i1, $i2;
        java.beans.PropertyChangeSupport $r2;
        java.lang.Integer $r1, $r3;

        r0 := @this: org.jdesktop.swingx.graphics.ShadowRenderer;

        i1 := @parameter0: int;

        i0 = r0.<org.jdesktop.swingx.graphics.ShadowRenderer: int size>;

        if i1 >= 0 goto label1;

        r0.<org.jdesktop.swingx.graphics.ShadowRenderer: int size> = 0;

        goto label2;

     label1:
        r0.<org.jdesktop.swingx.graphics.ShadowRenderer: int size> = i1;

     label2:
        $r2 = r0.<org.jdesktop.swingx.graphics.ShadowRenderer: java.beans.PropertyChangeSupport changeSupport>;

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i0);

        $r3 = new java.lang.Integer;

        $i2 = r0.<org.jdesktop.swingx.graphics.ShadowRenderer: int size>;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>($i2);

        virtualinvoke $r2.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("shadow_size", $r1, $r3);

        return;
    }

    public java.awt.image.BufferedImage createShadow(java.awt.image.BufferedImage)
    {
        java.awt.Color $r2;
        org.jdesktop.swingx.graphics.ShadowRenderer r0;
        int[] r3, r5, r6, r7, r8;
        java.awt.image.BufferedImage r1, $r4;
        float $f0, f1, $f2, $f3, f4, $f5, $f6, $f7, $f8;
        int $i0, i1, $i2, $i3, i4, i5, i6, i7, i8, $i9, i10, $i11, $i12, i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, i40, i41, i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55, i56, i57, i58, i59, i60, i61, i62, i63, i64, i65, i66, i67;

        r0 := @this: org.jdesktop.swingx.graphics.ShadowRenderer;

        r1 := @parameter0: java.awt.image.BufferedImage;

        $i0 = r0.<org.jdesktop.swingx.graphics.ShadowRenderer: int size>;

        i1 = $i0 * 2;

        $i2 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>();

        $i3 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>();

        i4 = $i2 + i1;

        i5 = $i3 + i1;

        i6 = r0.<org.jdesktop.swingx.graphics.ShadowRenderer: int size>;

        i7 = i1 - i6;

        i8 = i5 - i7;

        $r2 = r0.<org.jdesktop.swingx.graphics.ShadowRenderer: java.awt.Color color>;

        $i9 = virtualinvoke $r2.<java.awt.Color: int getRGB()>();

        i10 = $i9 & 16777215;

        r3 = newarray (int)[i1];

        $r4 = new java.awt.image.BufferedImage;

        specialinvoke $r4.<java.awt.image.BufferedImage: void <init>(int,int,int)>(i4, i5, 2);

        $i11 = i4 * i5;

        r5 = newarray (int)[$i11];

        $i12 = $i2 * $i3;

        r6 = newarray (int)[$i12];

        staticinvoke <org.jdesktop.swingx.graphics.GraphicsUtilities: int[] getPixels(java.awt.image.BufferedImage,int,int,int,int,int[])>(r1, 0, 0, $i2, $i3, r6);

        i13 = i7 * i4;

        $f0 = (float) i1;

        f1 = 1.0F / $f0;

        $f3 = r0.<org.jdesktop.swingx.graphics.ShadowRenderer: float opacity>;

        $f2 = (float) i1;

        f4 = $f3 / $f2;

        $i14 = 256 * i1;

        r7 = newarray (int)[$i14];

        i40 = 0;

     label01:
        $i15 = lengthof r7;

        if i40 >= $i15 goto label02;

        $f7 = (float) i40;

        $f8 = $f7 * f1;

        $i39 = (int) $f8;

        r7[i40] = $i39;

        i40 = i40 + 1;

        goto label01;

     label02:
        $i16 = 256 * i1;

        r8 = newarray (int)[$i16];

        i41 = 0;

     label03:
        $i17 = lengthof r8;

        if i41 >= $i17 goto label04;

        $f5 = (float) i41;

        $f6 = $f5 * f4;

        $i38 = (int) $f6;

        r8[i41] = $i38;

        i41 = i41 + 1;

        goto label03;

     label04:
        i42 = 0;

        i43 = i6 * i4;

     label05:
        if i42 >= $i3 goto label14;

        i44 = 0;

     label06:
        if i44 >= i1 goto label07;

        $i37 = i44;

        i44 = i44 + 1;

        r3[$i37] = 0;

        goto label06;

     label07:
        i45 = 0;

        i46 = 0;

        i47 = i42 * $i2;

        i48 = 0;

     label08:
        if i48 >= $i2 goto label10;

        i49 = r7[i45];

        $i32 = i43;

        i43 = i43 + 1;

        $i33 = i49 << 24;

        r5[$i32] = $i33;

        $i34 = r3[i46];

        i50 = i45 - $i34;

        $i35 = i47 + i48;

        $i36 = r6[$i35];

        i51 = $i36 >>> 24;

        r3[i46] = i51;

        i45 = i50 + i51;

        i46 = i46 + 1;

        if i46 < i1 goto label09;

        i46 = i46 - i1;

     label09:
        i48 = i48 + 1;

        goto label08;

     label10:
        i52 = 0;

     label11:
        if i52 >= i1 goto label13;

        i53 = r7[i45];

        $i29 = i43;

        i43 = i43 + 1;

        $i30 = i53 << 24;

        r5[$i29] = $i30;

        $i31 = r3[i46];

        i45 = i45 - $i31;

        i46 = i46 + 1;

        if i46 < i1 goto label12;

        i46 = i46 - i1;

     label12:
        i52 = i52 + 1;

        goto label11;

     label13:
        i42 = i42 + 1;

        goto label05;

     label14:
        i54 = 0;

        i55 = 0;

     label15:
        if i54 >= i4 goto label26;

        i56 = 0;

        i57 = 0;

     label16:
        if i57 >= i6 goto label17;

        $i28 = i57;

        i57 = i57 + 1;

        r3[$i28] = 0;

        goto label16;

     label17:
        i58 = 0;

     label18:
        if i58 >= i7 goto label19;

        $i26 = r5[i55];

        i59 = $i26 >>> 24;

        $i27 = i57;

        i57 = i57 + 1;

        r3[$i27] = i59;

        i56 = i56 + i59;

        i58 = i58 + 1;

        i55 = i55 + i4;

        goto label18;

     label19:
        i60 = i54;

        i61 = 0;

        i62 = 0;

     label20:
        if i62 >= i8 goto label22;

        i63 = r8[i56];

        $i21 = i63 << 24;

        $i22 = $i21 | i10;

        r5[i60] = $i22;

        $i23 = r3[i61];

        i64 = i56 - $i23;

        $i24 = i60 + i13;

        $i25 = r5[$i24];

        i65 = $i25 >>> 24;

        r3[i61] = i65;

        i56 = i64 + i65;

        i61 = i61 + 1;

        if i61 < i1 goto label21;

        i61 = i61 - i1;

     label21:
        i62 = i62 + 1;

        i60 = i60 + i4;

        goto label20;

     label22:
        i66 = i8;

     label23:
        if i66 >= i5 goto label25;

        i67 = r8[i56];

        $i18 = i67 << 24;

        $i19 = $i18 | i10;

        r5[i60] = $i19;

        $i20 = r3[i61];

        i56 = i56 - $i20;

        i61 = i61 + 1;

        if i61 < i1 goto label24;

        i61 = i61 - i1;

     label24:
        i66 = i66 + 1;

        i60 = i60 + i4;

        goto label23;

     label25:
        i54 = i54 + 1;

        i55 = i54;

        goto label15;

     label26:
        staticinvoke <org.jdesktop.swingx.graphics.GraphicsUtilities: void setPixels(java.awt.image.BufferedImage,int,int,int,int,int[])>($r4, 0, 0, i4, i5, r5);

        return $r4;
    }

    public static void <clinit>()
    {
        <org.jdesktop.swingx.graphics.ShadowRenderer: java.lang.String COLOR_CHANGED_PROPERTY> = "shadow_color";

        <org.jdesktop.swingx.graphics.ShadowRenderer: java.lang.String OPACITY_CHANGED_PROPERTY> = "shadow_opacity";

        <org.jdesktop.swingx.graphics.ShadowRenderer: java.lang.String SIZE_CHANGED_PROPERTY> = "shadow_size";

        return;
    }
}
