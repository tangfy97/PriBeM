public final class org.apache.lucene.analysis.el.GreekAnalyzer extends org.apache.lucene.analysis.util.StopwordAnalyzerBase
{
    public static final java.lang.String DEFAULT_STOPWORD_FILE;

    public static final org.apache.lucene.analysis.util.CharArraySet getDefaultStopSet()
    {
        org.apache.lucene.analysis.util.CharArraySet $r0;

        $r0 = staticinvoke <org.apache.lucene.analysis.el.GreekAnalyzer$DefaultSetHolder: org.apache.lucene.analysis.util.CharArraySet access$000()>();

        return $r0;
    }

    public void <init>(org.apache.lucene.util.Version)
    {
        org.apache.lucene.analysis.util.CharArraySet $r2;
        org.apache.lucene.analysis.el.GreekAnalyzer r0;
        org.apache.lucene.util.Version r1;

        r0 := @this: org.apache.lucene.analysis.el.GreekAnalyzer;

        r1 := @parameter0: org.apache.lucene.util.Version;

        $r2 = staticinvoke <org.apache.lucene.analysis.el.GreekAnalyzer$DefaultSetHolder: org.apache.lucene.analysis.util.CharArraySet access$000()>();

        specialinvoke r0.<org.apache.lucene.analysis.el.GreekAnalyzer: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.util.CharArraySet)>(r1, $r2);

        return;
    }

    public void <init>(org.apache.lucene.util.Version, org.apache.lucene.analysis.util.CharArraySet)
    {
        org.apache.lucene.analysis.util.CharArraySet r2;
        org.apache.lucene.analysis.el.GreekAnalyzer r0;
        org.apache.lucene.util.Version r1;

        r0 := @this: org.apache.lucene.analysis.el.GreekAnalyzer;

        r1 := @parameter0: org.apache.lucene.util.Version;

        r2 := @parameter1: org.apache.lucene.analysis.util.CharArraySet;

        specialinvoke r0.<org.apache.lucene.analysis.util.StopwordAnalyzerBase: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.util.CharArraySet)>(r1, r2);

        return;
    }

    protected org.apache.lucene.analysis.Analyzer$TokenStreamComponents createComponents(java.lang.String, java.io.Reader)
    {
        org.apache.lucene.analysis.standard.StandardTokenizer $r0;
        org.apache.lucene.analysis.el.GreekLowerCaseFilter $r4;
        org.apache.lucene.analysis.el.GreekAnalyzer r1;
        java.lang.String r17;
        boolean $z0, $z1;
        org.apache.lucene.analysis.el.GreekStemFilter $r14;
        java.io.Reader r2;
        org.apache.lucene.util.Version $r3, $r5, $r6, $r7, $r10, $r11, $r12, $r16;
        org.apache.lucene.analysis.core.StopFilter $r8;
        org.apache.lucene.analysis.Analyzer$TokenStreamComponents $r13;
        org.apache.lucene.analysis.util.CharArraySet $r9;
        org.apache.lucene.analysis.TokenFilter r18, r19;
        org.apache.lucene.analysis.standard.StandardFilter $r15;

        r1 := @this: org.apache.lucene.analysis.el.GreekAnalyzer;

        r17 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.Reader;

        $r0 = new org.apache.lucene.analysis.standard.StandardTokenizer;

        $r3 = r1.<org.apache.lucene.analysis.el.GreekAnalyzer: org.apache.lucene.util.Version matchVersion>;

        specialinvoke $r0.<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.util.Version,java.io.Reader)>($r3, r2);

        $r4 = new org.apache.lucene.analysis.el.GreekLowerCaseFilter;

        $r5 = r1.<org.apache.lucene.analysis.el.GreekAnalyzer: org.apache.lucene.util.Version matchVersion>;

        specialinvoke $r4.<org.apache.lucene.analysis.el.GreekLowerCaseFilter: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.TokenStream)>($r5, $r0);

        r18 = $r4;

        $r7 = r1.<org.apache.lucene.analysis.el.GreekAnalyzer: org.apache.lucene.util.Version matchVersion>;

        $r6 = <org.apache.lucene.util.Version: org.apache.lucene.util.Version LUCENE_31>;

        $z0 = virtualinvoke $r7.<org.apache.lucene.util.Version: boolean onOrAfter(org.apache.lucene.util.Version)>($r6);

        if $z0 == 0 goto label1;

        $r15 = new org.apache.lucene.analysis.standard.StandardFilter;

        $r16 = r1.<org.apache.lucene.analysis.el.GreekAnalyzer: org.apache.lucene.util.Version matchVersion>;

        specialinvoke $r15.<org.apache.lucene.analysis.standard.StandardFilter: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.TokenStream)>($r16, $r4);

        r18 = $r15;

     label1:
        $r8 = new org.apache.lucene.analysis.core.StopFilter;

        $r10 = r1.<org.apache.lucene.analysis.el.GreekAnalyzer: org.apache.lucene.util.Version matchVersion>;

        $r9 = r1.<org.apache.lucene.analysis.el.GreekAnalyzer: org.apache.lucene.analysis.util.CharArraySet stopwords>;

        specialinvoke $r8.<org.apache.lucene.analysis.core.StopFilter: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.TokenStream,org.apache.lucene.analysis.util.CharArraySet)>($r10, r18, $r9);

        r19 = $r8;

        $r12 = r1.<org.apache.lucene.analysis.el.GreekAnalyzer: org.apache.lucene.util.Version matchVersion>;

        $r11 = <org.apache.lucene.util.Version: org.apache.lucene.util.Version LUCENE_31>;

        $z1 = virtualinvoke $r12.<org.apache.lucene.util.Version: boolean onOrAfter(org.apache.lucene.util.Version)>($r11);

        if $z1 == 0 goto label2;

        $r14 = new org.apache.lucene.analysis.el.GreekStemFilter;

        specialinvoke $r14.<org.apache.lucene.analysis.el.GreekStemFilter: void <init>(org.apache.lucene.analysis.TokenStream)>($r8);

        r19 = $r14;

     label2:
        $r13 = new org.apache.lucene.analysis.Analyzer$TokenStreamComponents;

        specialinvoke $r13.<org.apache.lucene.analysis.Analyzer$TokenStreamComponents: void <init>(org.apache.lucene.analysis.Tokenizer,org.apache.lucene.analysis.TokenStream)>($r0, r19);

        return $r13;
    }

    static org.apache.lucene.analysis.util.CharArraySet access$100(boolean, java.lang.Class, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.analysis.util.CharArraySet $r3;
        java.lang.Class r0;
        java.lang.String r1, r2;
        boolean z0;

        z0 := @parameter0: boolean;

        r0 := @parameter1: java.lang.Class;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        $r3 = staticinvoke <org.apache.lucene.analysis.el.GreekAnalyzer: org.apache.lucene.analysis.util.CharArraySet loadStopwordSet(boolean,java.lang.Class,java.lang.String,java.lang.String)>(z0, r0, r1, r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.analysis.el.GreekAnalyzer: java.lang.String DEFAULT_STOPWORD_FILE> = "stopwords.txt";

        return;
    }
}
