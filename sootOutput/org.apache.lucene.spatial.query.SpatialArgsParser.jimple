public class org.apache.lucene.spatial.query.SpatialArgsParser extends java.lang.Object
{
    public static final java.lang.String DIST_ERR_PCT;
    public static final java.lang.String DIST_ERR;

    public void <init>()
    {
        org.apache.lucene.spatial.query.SpatialArgsParser r0;

        r0 := @this: org.apache.lucene.spatial.query.SpatialArgsParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.String writeSpatialArgs(org.apache.lucene.spatial.query.SpatialArgs)
    {
        java.lang.Object[] $r12;
        java.lang.Double $r6, $r7, $r10, $r14, $r15;
        com.spatial4j.core.shape.Shape $r4;
        org.apache.lucene.spatial.query.SpatialArgs r1;
        java.util.Locale $r13;
        java.lang.String $r3, $r5, $r8, $r16;
        double $d0, $d1;
        java.lang.StringBuilder $r0, $r9, $r11;
        org.apache.lucene.spatial.query.SpatialOperation $r2;

        r1 := @parameter0: org.apache.lucene.spatial.query.SpatialArgs;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.lucene.spatial.query.SpatialArgs: org.apache.lucene.spatial.query.SpatialOperation getOperation()>();

        $r3 = virtualinvoke $r2.<org.apache.lucene.spatial.query.SpatialOperation: java.lang.String getName()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r4 = virtualinvoke r1.<org.apache.lucene.spatial.query.SpatialArgs: com.spatial4j.core.shape.Shape getShape()>();

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke r1.<org.apache.lucene.spatial.query.SpatialArgs: java.lang.Double getDistErrPct()>();

        if $r6 == null goto label1;

        $r11 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" distErrPct=");

        $r13 = <java.util.Locale: java.util.Locale ROOT>;

        $r12 = newarray (java.lang.Object)[1];

        $r14 = virtualinvoke r1.<org.apache.lucene.spatial.query.SpatialArgs: java.lang.Double getDistErrPct()>();

        $d0 = virtualinvoke $r14.<java.lang.Double: double doubleValue()>();

        $d1 = $d0 * 100.0;

        $r15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r12[0] = $r15;

        $r16 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r13, "%.2f%%", $r12);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

     label1:
        $r7 = virtualinvoke r1.<org.apache.lucene.spatial.query.SpatialArgs: java.lang.Double getDistErr()>();

        if $r7 == null goto label2;

        $r9 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" distErr=");

        $r10 = virtualinvoke r1.<org.apache.lucene.spatial.query.SpatialArgs: java.lang.Double getDistErr()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r8 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public org.apache.lucene.spatial.query.SpatialArgs parse(java.lang.String, com.spatial4j.core.context.SpatialContext) throws java.lang.IllegalArgumentException, com.spatial4j.core.exception.InvalidShapeException
    {
        org.apache.lucene.spatial.query.SpatialArgsParser r33;
        com.spatial4j.core.shape.Shape $r12;
        org.apache.lucene.spatial.query.SpatialArgs $r13;
        java.util.Map $r16;
        boolean $z0;
        com.spatial4j.core.context.SpatialContext r11;
        java.lang.StringBuilder $r2, $r3, $r4, $r24, $r25, $r26, $r29, $r30, $r31;
        java.lang.Double $r19, $r22;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String r0, $r5, $r6, $r7, $r9, $r10, $r14, $r15, $r18, $r21, $r27, $r32;
        java.lang.IllegalArgumentException $r1, $r23, $r28;
        java.lang.Object $r17, $r20;
        org.apache.lucene.spatial.query.SpatialOperation $r8;

        r33 := @this: org.apache.lucene.spatial.query.SpatialArgsParser;

        r0 := @parameter0: java.lang.String;

        r11 := @parameter1: com.spatial4j.core.context.SpatialContext;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(40);

        $i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(41);

        if $i0 < 0 goto label1;

        if $i0 <= $i1 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("missing parens: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r5, null);

        throw $r1;

     label2:
        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $r8 = staticinvoke <org.apache.lucene.spatial.query.SpatialOperation: org.apache.lucene.spatial.query.SpatialOperation get(java.lang.String)>($r7);

        $i2 = $i0 + 1;

        $r9 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i1);

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        $i3 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i3 >= 1 goto label3;

        $r28 = new java.lang.IllegalArgumentException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("missing body : ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r32, null);

        throw $r28;

     label3:
        $r12 = virtualinvoke r11.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Shape readShape(java.lang.String)>($r10);

        $r13 = new org.apache.lucene.spatial.query.SpatialArgs;

        specialinvoke $r13.<org.apache.lucene.spatial.query.SpatialArgs: void <init>(org.apache.lucene.spatial.query.SpatialOperation,com.spatial4j.core.shape.Shape)>($r8, $r12);

        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        $i5 = $i1 + 1;

        if $i4 <= $i5 goto label4;

        $i6 = $i1 + 1;

        $r14 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i6);

        $r15 = virtualinvoke $r14.<java.lang.String: java.lang.String trim()>();

        $i7 = virtualinvoke $r15.<java.lang.String: int length()>();

        if $i7 <= 0 goto label4;

        $r16 = staticinvoke <org.apache.lucene.spatial.query.SpatialArgsParser: java.util.Map parseMap(java.lang.String)>($r15);

        $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object remove(java.lang.Object)>("distErrPct");

        $r18 = (java.lang.String) $r17;

        $r19 = staticinvoke <org.apache.lucene.spatial.query.SpatialArgsParser: java.lang.Double readDouble(java.lang.String)>($r18);

        virtualinvoke $r13.<org.apache.lucene.spatial.query.SpatialArgs: void setDistErrPct(java.lang.Double)>($r19);

        $r20 = interfaceinvoke $r16.<java.util.Map: java.lang.Object remove(java.lang.Object)>("distErr");

        $r21 = (java.lang.String) $r20;

        $r22 = staticinvoke <org.apache.lucene.spatial.query.SpatialArgsParser: java.lang.Double readDouble(java.lang.String)>($r21);

        virtualinvoke $r13.<org.apache.lucene.spatial.query.SpatialArgs: void setDistErr(java.lang.Double)>($r22);

        $z0 = interfaceinvoke $r16.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r23 = new java.lang.IllegalArgumentException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unused parameters: ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r27, null);

        throw $r23;

     label4:
        virtualinvoke $r13.<org.apache.lucene.spatial.query.SpatialArgs: void validate()>();

        return $r13;
    }

    protected static java.lang.Double readDouble(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Double $r1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r1 = null;

        goto label2;

     label1:
        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r0);

     label2:
        return $r1;
    }

    protected static boolean readBool(java.lang.String, boolean)
    {
        java.lang.String r0;
        boolean z0, $z1;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if r0 != null goto label1;

        $z1 = z0;

        goto label2;

     label1:
        $z1 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r0);

     label2:
        return $z1;
    }

    protected static java.util.Map parseMap(java.lang.String)
    {
        java.util.HashMap $r0;
        java.util.StringTokenizer $r1;
        int $i0, $i1;
        java.lang.String r2, $r3, $r4, $r5;
        boolean $z0;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r1 = new java.util.StringTokenizer;

        specialinvoke $r1.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r2, " \n\t");

     label1:
        $z0 = virtualinvoke $r1.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label4;

        $r3 = virtualinvoke $r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(61);

        if $i0 <= 0 goto label2;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i1 = $i0 + 1;

        $r5 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i1);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

        goto label3;

     label2:
        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r3);

     label3:
        goto label1;

     label4:
        return $r0;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.spatial.query.SpatialArgsParser: java.lang.String DIST_ERR> = "distErr";

        <org.apache.lucene.spatial.query.SpatialArgsParser: java.lang.String DIST_ERR_PCT> = "distErrPct";

        return;
    }
}
