public abstract class com.jidesoft.converter.ArrayConverter extends java.lang.Object implements com.jidesoft.converter.ObjectConverter
{
    private java.lang.String _separator;
    private int _size;
    private java.lang.Class _elementClass;
    private java.lang.Class[] _elementClasses;
    private boolean _useTokenizer;

    public void <init>(java.lang.String, int, java.lang.Class)
    {
        com.jidesoft.converter.ArrayConverter r0;
        int i0;
        java.lang.Class r2;
        java.lang.String r1;

        r0 := @this: com.jidesoft.converter.ArrayConverter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jidesoft.converter.ArrayConverter: java.lang.String _separator> = r1;

        r0.<com.jidesoft.converter.ArrayConverter: int _size> = i0;

        r0.<com.jidesoft.converter.ArrayConverter: java.lang.Class _elementClass> = r2;

        return;
    }

    public void <init>(java.lang.String, int, java.lang.Class[])
    {
        java.lang.Class[] r4;
        java.lang.IllegalArgumentException $r2, $r5, $r6;
        com.jidesoft.converter.ArrayConverter r0;
        int $i0, i1, $i2;
        java.lang.String r1, $r3;

        r0 := @this: com.jidesoft.converter.ArrayConverter;

        r1 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        r4 := @parameter2: java.lang.Class[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("separator cannot be empty.");

        throw $r2;

     label2:
        if r4 != null goto label3;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("elementClasses cannot be null.");

        throw $r6;

     label3:
        $i2 = lengthof r4;

        if i1 == $i2 goto label4;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("size must be equal to the length of elementClasses.");

        throw $r5;

     label4:
        r0.<com.jidesoft.converter.ArrayConverter: java.lang.String _separator> = r1;

        r0.<com.jidesoft.converter.ArrayConverter: int _size> = i1;

        r0.<com.jidesoft.converter.ArrayConverter: java.lang.Class[] _elementClasses> = r4;

        return;
    }

    public java.lang.String arrayToString(java.lang.Object[], com.jidesoft.converter.ConverterContext)
    {
        java.lang.Object[] r1;
        com.jidesoft.converter.ArrayConverter r4;
        com.jidesoft.converter.ConverterContext r5;
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2, i3;
        java.lang.Object r3;
        java.lang.String $r2, $r6, $r7;

        r4 := @this: com.jidesoft.converter.ArrayConverter;

        r1 := @parameter0: java.lang.Object[];

        r5 := @parameter1: com.jidesoft.converter.ConverterContext;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i3 = 0;

     label1:
        $i0 = lengthof r1;

        if i3 >= $i0 goto label3;

        r3 = r1[i3];

        $r6 = virtualinvoke r4.<com.jidesoft.converter.ArrayConverter: java.lang.String toString(int,java.lang.Object,com.jidesoft.converter.ConverterContext)>(i3, r3, r5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $i1 = lengthof r1;

        $i2 = $i1 - 1;

        if i3 == $i2 goto label2;

        $r7 = r4.<com.jidesoft.converter.ArrayConverter: java.lang.String _separator>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(java.lang.StringBuffer)>($r0);

        return $r2;
    }

    protected java.lang.String toString(int, java.lang.Object, com.jidesoft.converter.ConverterContext)
    {
        java.lang.Class[] $r3;
        com.jidesoft.converter.ArrayConverter r0;
        com.jidesoft.converter.ConverterContext r4;
        int i0;
        java.lang.Class $r1, $r5, $r6;
        java.lang.Object r2;
        java.lang.String $r7;

        r0 := @this: com.jidesoft.converter.ArrayConverter;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.Object;

        r4 := @parameter2: com.jidesoft.converter.ConverterContext;

        $r1 = r0.<com.jidesoft.converter.ArrayConverter: java.lang.Class _elementClass>;

        if $r1 == null goto label1;

        $r6 = r0.<com.jidesoft.converter.ArrayConverter: java.lang.Class _elementClass>;

        $r7 = staticinvoke <com.jidesoft.converter.ObjectConverterManager: java.lang.String toString(java.lang.Object,java.lang.Class,com.jidesoft.converter.ConverterContext)>(r2, $r6, r4);

        goto label2;

     label1:
        $r3 = r0.<com.jidesoft.converter.ArrayConverter: java.lang.Class[] _elementClasses>;

        $r5 = $r3[i0];

        $r7 = staticinvoke <com.jidesoft.converter.ObjectConverterManager: java.lang.String toString(java.lang.Object,java.lang.Class,com.jidesoft.converter.ConverterContext)>(r2, $r5, r4);

     label2:
        return $r7;
    }

    public java.lang.Object[] arrayFromString(java.lang.String, com.jidesoft.converter.ConverterContext)
    {
        java.lang.Object[] $r9, $r15;
        java.lang.String[] $r4;
        java.util.StringTokenizer $r16;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, i8, $i9, $i11, $i13;
        java.lang.String r0, $r1, $r3, $r5, $r6, $r11, $r12, $r13;
        boolean $z0, $z1;
        com.jidesoft.converter.ArrayConverter r2;
        com.jidesoft.converter.ConverterContext r7;
        java.lang.Object $r8, $r14;

        r2 := @this: com.jidesoft.converter.ArrayConverter;

        r0 := @parameter0: java.lang.String;

        r7 := @parameter1: com.jidesoft.converter.ConverterContext;

        if r0 == null goto label01;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

     label01:
        return null;

     label02:
        $z0 = virtualinvoke r2.<com.jidesoft.converter.ArrayConverter: boolean isUseTokenizer()>();

        if $z0 == 0 goto label07;

        $r16 = new java.util.StringTokenizer;

        $r11 = r2.<com.jidesoft.converter.ArrayConverter: java.lang.String _separator>;

        specialinvoke $r16.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r0, $r11);

        $i3 = r2.<com.jidesoft.converter.ArrayConverter: int _size>;

        $i11 = (int) -1;

        if $i3 == $i11 goto label03;

        $i4 = r2.<com.jidesoft.converter.ArrayConverter: int _size>;

        goto label04;

     label03:
        $i4 = virtualinvoke $r16.<java.util.StringTokenizer: int countTokens()>();

     label04:
        $r15 = newarray (java.lang.Object)[$i4];

        i5 = 0;

     label05:
        $i6 = lengthof $r15;

        if i5 >= $i6 goto label06;

        $z1 = virtualinvoke $r16.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label06;

        $r12 = virtualinvoke $r16.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String trim()>();

        $r14 = virtualinvoke r2.<com.jidesoft.converter.ArrayConverter: java.lang.Object fromString(int,java.lang.String,com.jidesoft.converter.ConverterContext)>(i5, $r13, r7);

        $r15[i5] = $r14;

        i5 = i5 + 1;

        goto label05;

     label06:
        return $r15;

     label07:
        $r3 = r2.<com.jidesoft.converter.ArrayConverter: java.lang.String _separator>;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>($r3);

        $i1 = r2.<com.jidesoft.converter.ArrayConverter: int _size>;

        $i13 = (int) -1;

        if $i1 == $i13 goto label08;

        $i7 = r2.<com.jidesoft.converter.ArrayConverter: int _size>;

        goto label09;

     label08:
        $i7 = lengthof $r4;

     label09:
        $r9 = newarray (java.lang.Object)[$i7];

        i8 = 0;

     label10:
        $i9 = lengthof $r9;

        if i8 >= $i9 goto label11;

        $i2 = lengthof $r4;

        if i8 >= $i2 goto label11;

        $r5 = $r4[i8];

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        $r8 = virtualinvoke r2.<com.jidesoft.converter.ArrayConverter: java.lang.Object fromString(int,java.lang.String,com.jidesoft.converter.ConverterContext)>(i8, $r6, r7);

        $r9[i8] = $r8;

        i8 = i8 + 1;

        goto label10;

     label11:
        return $r9;
    }

    protected java.lang.Object fromString(int, java.lang.String, com.jidesoft.converter.ConverterContext)
    {
        java.lang.Class[] $r3;
        com.jidesoft.converter.ArrayConverter r0;
        com.jidesoft.converter.ConverterContext r4;
        int i0;
        java.lang.Class $r1, $r5, $r6;
        java.lang.Object $r7;
        java.lang.String r2;

        r0 := @this: com.jidesoft.converter.ArrayConverter;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: com.jidesoft.converter.ConverterContext;

        $r1 = r0.<com.jidesoft.converter.ArrayConverter: java.lang.Class _elementClass>;

        if $r1 == null goto label1;

        $r6 = r0.<com.jidesoft.converter.ArrayConverter: java.lang.Class _elementClass>;

        $r7 = staticinvoke <com.jidesoft.converter.ObjectConverterManager: java.lang.Object fromString(java.lang.String,java.lang.Class,com.jidesoft.converter.ConverterContext)>(r2, $r6, r4);

        goto label2;

     label1:
        $r3 = r0.<com.jidesoft.converter.ArrayConverter: java.lang.Class[] _elementClasses>;

        $r5 = $r3[i0];

        $r7 = staticinvoke <com.jidesoft.converter.ObjectConverterManager: java.lang.Object fromString(java.lang.String,java.lang.Class,com.jidesoft.converter.ConverterContext)>(r2, $r5, r4);

     label2:
        return $r7;
    }

    public java.lang.Class getElementClass()
    {
        com.jidesoft.converter.ArrayConverter r0;
        java.lang.Class $r1;

        r0 := @this: com.jidesoft.converter.ArrayConverter;

        $r1 = r0.<com.jidesoft.converter.ArrayConverter: java.lang.Class _elementClass>;

        return $r1;
    }

    public boolean isUseTokenizer()
    {
        com.jidesoft.converter.ArrayConverter r0;
        boolean $z0;

        r0 := @this: com.jidesoft.converter.ArrayConverter;

        $z0 = r0.<com.jidesoft.converter.ArrayConverter: boolean _useTokenizer>;

        return $z0;
    }

    public void setUseTokenizer(boolean)
    {
        com.jidesoft.converter.ArrayConverter r0;
        boolean z0;

        r0 := @this: com.jidesoft.converter.ArrayConverter;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.converter.ArrayConverter: boolean _useTokenizer> = z0;

        return;
    }
}
