final class com.mycila.inject.internal.guava.cache.CacheBuilder$1 extends java.lang.Object implements com.mycila.inject.internal.guava.cache.AbstractCache$StatsCounter
{

    void <init>()
    {
        com.mycila.inject.internal.guava.cache.CacheBuilder$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void recordHit()
    {
        com.mycila.inject.internal.guava.cache.CacheBuilder$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$1;

        return;
    }

    public void recordLoadSuccess(long)
    {
        com.mycila.inject.internal.guava.cache.CacheBuilder$1 r0;
        long l0;

        r0 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$1;

        l0 := @parameter0: long;

        return;
    }

    public void recordLoadException(long)
    {
        com.mycila.inject.internal.guava.cache.CacheBuilder$1 r0;
        long l0;

        r0 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$1;

        l0 := @parameter0: long;

        return;
    }

    public void recordConcurrentMiss()
    {
        com.mycila.inject.internal.guava.cache.CacheBuilder$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$1;

        return;
    }

    public void recordEviction()
    {
        com.mycila.inject.internal.guava.cache.CacheBuilder$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$1;

        return;
    }

    public com.mycila.inject.internal.guava.cache.CacheStats snapshot()
    {
        com.mycila.inject.internal.guava.cache.CacheBuilder$1 r1;
        com.mycila.inject.internal.guava.cache.CacheStats $r0;

        r1 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$1;

        $r0 = <com.mycila.inject.internal.guava.cache.CacheBuilder: com.mycila.inject.internal.guava.cache.CacheStats EMPTY_STATS>;

        return $r0;
    }
}
