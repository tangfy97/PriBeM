public class com.hp.hpl.jena.rdf.model.impl.NTripleWriter extends java.lang.Object implements com.hp.hpl.jena.rdf.model.RDFWriter
{
    com.hp.hpl.jena.rdf.model.RDFErrorHandler errorHandler;
    protected static org.slf4j.Logger logger;
    private static boolean[] okURIChars;

    public void <init>()
    {
        com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler $r1;
        com.hp.hpl.jena.rdf.model.impl.NTripleWriter r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.NTripleWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler;

        specialinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler: void <init>()>();

        r0.<com.hp.hpl.jena.rdf.model.impl.NTripleWriter: com.hp.hpl.jena.rdf.model.RDFErrorHandler errorHandler> = $r1;

        return;
    }

    public void write(com.hp.hpl.jena.rdf.model.Model, java.io.OutputStream, java.lang.String)
    {
        java.io.OutputStream r1;
        org.slf4j.Logger $r8;
        java.lang.Exception $r5;
        com.hp.hpl.jena.rdf.model.Model r3;
        java.io.Writer r9;
        java.io.OutputStreamWriter $r0;
        com.hp.hpl.jena.rdf.model.RDFErrorHandler $r6;
        java.lang.String r4;
        com.hp.hpl.jena.rdf.model.impl.NTripleWriter r2;
        java.io.UnsupportedEncodingException $r7;

        r2 := @this: com.hp.hpl.jena.rdf.model.impl.NTripleWriter;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r1 := @parameter1: java.io.OutputStream;

        r4 := @parameter2: java.lang.String;

     label1:
        $r0 = new java.io.OutputStreamWriter;

        specialinvoke $r0.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r1, "ascii");

        r9 = $r0;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = <com.hp.hpl.jena.rdf.model.impl.NTripleWriter: org.slf4j.Logger logger>;

        interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("ASCII is not supported: in NTripleWriter.write", $r7);

        r9 = staticinvoke <com.hp.hpl.jena.util.FileUtils: java.io.Writer asUTF8(java.io.OutputStream)>(r1);

     label4:
        virtualinvoke r2.<com.hp.hpl.jena.rdf.model.impl.NTripleWriter: void write(com.hp.hpl.jena.rdf.model.Model,java.io.Writer,java.lang.String)>(r3, r9, r4);

        virtualinvoke r9.<java.io.Writer: void flush()>();

     label5:
        goto label7;

     label6:
        $r5 := @caughtexception;

        $r6 = r2.<com.hp.hpl.jena.rdf.model.impl.NTripleWriter: com.hp.hpl.jena.rdf.model.RDFErrorHandler errorHandler>;

        interfaceinvoke $r6.<com.hp.hpl.jena.rdf.model.RDFErrorHandler: void error(java.lang.Exception)>($r5);

     label7:
        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label5 with label6;
    }

    public void write(com.hp.hpl.jena.rdf.model.Model, java.io.Writer, java.lang.String)
    {
        java.io.PrintWriter $r1, r12;
        com.hp.hpl.jena.rdf.model.RDFNode $r7;
        com.hp.hpl.jena.rdf.model.Statement $r4;
        com.hp.hpl.jena.rdf.model.Resource $r5;
        java.lang.Exception $r8;
        com.hp.hpl.jena.rdf.model.StmtIterator $r3;
        com.hp.hpl.jena.rdf.model.Property $r6;
        java.io.Writer r0;
        com.hp.hpl.jena.rdf.model.Model r2;
        com.hp.hpl.jena.rdf.model.RDFErrorHandler $r10;
        java.lang.String r11;
        com.hp.hpl.jena.rdf.model.impl.NTripleWriter r9;
        boolean $z0, $z1;

        r9 := @this: com.hp.hpl.jena.rdf.model.impl.NTripleWriter;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r0 := @parameter1: java.io.Writer;

        r11 := @parameter2: java.lang.String;

     label1:
        $z0 = r0 instanceof java.io.PrintWriter;

        if $z0 == 0 goto label2;

        r12 = (java.io.PrintWriter) r0;

        goto label3;

     label2:
        $r1 = new java.io.PrintWriter;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.Writer)>(r0);

        r12 = $r1;

     label3:
        $r3 = interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.StmtIterator listStatements()>();

     label4:
        $z1 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Resource getSubject()>();

        staticinvoke <com.hp.hpl.jena.rdf.model.impl.NTripleWriter: void writeResource(com.hp.hpl.jena.rdf.model.Resource,java.io.PrintWriter)>($r5, r12);

        virtualinvoke r12.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $r6 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Property getPredicate()>();

        staticinvoke <com.hp.hpl.jena.rdf.model.impl.NTripleWriter: void writeResource(com.hp.hpl.jena.rdf.model.Resource,java.io.PrintWriter)>($r6, r12);

        virtualinvoke r12.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $r7 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.RDFNode getObject()>();

        staticinvoke <com.hp.hpl.jena.rdf.model.impl.NTripleWriter: void writeNode(com.hp.hpl.jena.rdf.model.RDFNode,java.io.PrintWriter)>($r7, r12);

        virtualinvoke r12.<java.io.PrintWriter: void println(java.lang.String)>(" .");

        goto label4;

     label5:
        virtualinvoke r12.<java.io.PrintWriter: void flush()>();

     label6:
        goto label8;

     label7:
        $r8 := @caughtexception;

        $r10 = r9.<com.hp.hpl.jena.rdf.model.impl.NTripleWriter: com.hp.hpl.jena.rdf.model.RDFErrorHandler errorHandler>;

        interfaceinvoke $r10.<com.hp.hpl.jena.rdf.model.RDFErrorHandler: void error(java.lang.Exception)>($r8);

     label8:
        return;

        catch java.lang.Exception from label1 to label6 with label7;
    }

    public java.lang.Object setProperty(java.lang.String, java.lang.Object)
    {
        com.hp.hpl.jena.shared.UnknownPropertyException $r0;
        java.lang.Object r3;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.impl.NTripleWriter r2;

        r2 := @this: com.hp.hpl.jena.rdf.model.impl.NTripleWriter;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r0 = new com.hp.hpl.jena.shared.UnknownPropertyException;

        specialinvoke $r0.<com.hp.hpl.jena.shared.UnknownPropertyException: void <init>(java.lang.String)>(r1);

        throw $r0;
    }

    public void setNsPrefix(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        com.hp.hpl.jena.rdf.model.impl.NTripleWriter r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.NTripleWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public java.lang.String getPrefixFor(java.lang.String)
    {
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.impl.NTripleWriter r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.NTripleWriter;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.RDFErrorHandler setErrorHandler(com.hp.hpl.jena.rdf.model.RDFErrorHandler)
    {
        com.hp.hpl.jena.rdf.model.RDFErrorHandler r1, r2;
        com.hp.hpl.jena.rdf.model.impl.NTripleWriter r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.NTripleWriter;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.RDFErrorHandler;

        r1 = r0.<com.hp.hpl.jena.rdf.model.impl.NTripleWriter: com.hp.hpl.jena.rdf.model.RDFErrorHandler errorHandler>;

        r0.<com.hp.hpl.jena.rdf.model.impl.NTripleWriter: com.hp.hpl.jena.rdf.model.RDFErrorHandler errorHandler> = r2;

        return r1;
    }

    public static void write(com.hp.hpl.jena.rdf.model.Model, java.io.PrintWriter) throws java.io.IOException
    {
        java.io.PrintWriter r4;
        com.hp.hpl.jena.rdf.model.RDFNode $r6;
        com.hp.hpl.jena.rdf.model.Statement $r2;
        com.hp.hpl.jena.rdf.model.Resource $r3;
        com.hp.hpl.jena.rdf.model.StmtIterator $r1;
        com.hp.hpl.jena.rdf.model.Property $r5;
        com.hp.hpl.jena.rdf.model.Model r0;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r4 := @parameter1: java.io.PrintWriter;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.StmtIterator listStatements()>();

     label1:
        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Resource getSubject()>();

        staticinvoke <com.hp.hpl.jena.rdf.model.impl.NTripleWriter: void writeResource(com.hp.hpl.jena.rdf.model.Resource,java.io.PrintWriter)>($r3, r4);

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $r5 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Property getPredicate()>();

        staticinvoke <com.hp.hpl.jena.rdf.model.impl.NTripleWriter: void writeResource(com.hp.hpl.jena.rdf.model.Resource,java.io.PrintWriter)>($r5, r4);

        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $r6 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.RDFNode getObject()>();

        staticinvoke <com.hp.hpl.jena.rdf.model.impl.NTripleWriter: void writeNode(com.hp.hpl.jena.rdf.model.RDFNode,java.io.PrintWriter)>($r6, r4);

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>(" .");

        goto label1;

     label2:
        return;
    }

    protected static void writeResource(com.hp.hpl.jena.rdf.model.Resource, java.io.PrintWriter)
    {
        java.io.PrintWriter r1;
        com.hp.hpl.jena.rdf.model.AnonId $r3;
        java.lang.String $r2, $r4;
        com.hp.hpl.jena.rdf.model.Resource r0;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r1 := @parameter1: java.io.PrintWriter;

        $z0 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: boolean isAnon()>();

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.AnonId getId()>();

        $r4 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.NTripleWriter: java.lang.String anonName(com.hp.hpl.jena.rdf.model.AnonId)>($r3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r4);

        goto label2;

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("<");

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String getURI()>();

        staticinvoke <com.hp.hpl.jena.rdf.model.impl.NTripleWriter: void writeURIString(java.lang.String,java.io.PrintWriter)>($r2, r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(">");

     label2:
        return;
    }

    private static void writeURIString(java.lang.String, java.io.PrintWriter)
    {
        java.util.Locale $r3;
        int $i0, $i2, $i3, i4, i5, $i6, $i7, $i8, $i10;
        java.lang.String r0, $r2, $r4;
        boolean $z0;
        java.io.PrintWriter r5;
        boolean[] $r1, $r6;
        char $c1;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: java.io.PrintWriter;

        i4 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i4 >= $i0 goto label6;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $r1 = <com.hp.hpl.jena.rdf.model.impl.NTripleWriter: boolean[] okURIChars>;

        $i2 = lengthof $r1;

        $i6 = (int) $c1;

        if $i6 >= $i2 goto label2;

        $r6 = <com.hp.hpl.jena.rdf.model.impl.NTripleWriter: boolean[] okURIChars>;

        $i7 = (int) $c1;

        $z0 = $r6[$i7];

        if $z0 == 0 goto label2;

        virtualinvoke r5.<java.io.PrintWriter: void print(char)>($c1);

        goto label5;

     label2:
        $i8 = (int) $c1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i8);

        $r3 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r3);

        $i3 = virtualinvoke $r4.<java.lang.String: int length()>();

        i5 = 4 - $i3;

        virtualinvoke r5.<java.io.PrintWriter: void print(java.lang.String)>("\\u");

     label3:
        if i5 <= 0 goto label4;

        virtualinvoke r5.<java.io.PrintWriter: void print(java.lang.String)>("0");

        $i10 = (int) -1;

        i5 = i5 + $i10;

        goto label3;

     label4:
        virtualinvoke r5.<java.io.PrintWriter: void print(java.lang.String)>($r4);

     label5:
        i4 = i4 + 1;

        goto label1;

     label6:
        return;
    }

    private static void writeString(java.lang.String, java.io.PrintWriter)
    {
        int $i0, $i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14;
        java.lang.String r0, $r2, $r3;
        java.io.PrintWriter r1;
        char $c1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.PrintWriter;

        i3 = 0;

     label01:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i0 goto label11;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i5 = (int) $c1;

        if $i5 == 92 goto label02;

        $i6 = (int) $c1;

        if $i6 != 34 goto label03;

     label02:
        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(92);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>($c1);

        goto label10;

     label03:
        $i7 = (int) $c1;

        if $i7 != 10 goto label04;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("\\n");

        goto label10;

     label04:
        $i8 = (int) $c1;

        if $i8 != 13 goto label05;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("\\r");

        goto label10;

     label05:
        $i9 = (int) $c1;

        if $i9 != 9 goto label06;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("\\t");

        goto label10;

     label06:
        $i10 = (int) $c1;

        if $i10 < 32 goto label07;

        $i11 = (int) $c1;

        if $i11 >= 127 goto label07;

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>($c1);

        goto label10;

     label07:
        $i12 = (int) $c1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i12);

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>();

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        i4 = 4 - $i2;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("\\u");

     label08:
        if i4 <= 0 goto label09;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("0");

        $i14 = (int) -1;

        i4 = i4 + $i14;

        goto label08;

     label09:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r3);

     label10:
        i3 = i3 + 1;

        goto label01;

     label11:
        return;
    }

    protected static void writeLiteral(com.hp.hpl.jena.rdf.model.Literal, java.io.PrintWriter)
    {
        java.lang.String $r1, $r3, $r8, $r12, $r13;
        boolean $z0, $z1;
        java.io.PrintWriter r2;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9, $r10, $r11;
        com.hp.hpl.jena.rdf.model.Literal r0;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Literal;

        r2 := @parameter1: java.io.PrintWriter;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Literal: java.lang.String getString()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(char)>(34);

        staticinvoke <com.hp.hpl.jena.rdf.model.impl.NTripleWriter: void writeString(java.lang.String,java.io.PrintWriter)>($r1, r2);

        virtualinvoke r2.<java.io.PrintWriter: void print(char)>(34);

        $r3 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Literal: java.lang.String getLanguage()>();

        if $r3 == null goto label1;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 != 0 goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r12);

     label1:
        $r13 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Literal: java.lang.String getDatatypeURI()>();

        if $r13 == null goto label2;

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("^^<");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r8);

     label2:
        return;
    }

    protected static void writeNode(com.hp.hpl.jena.rdf.model.RDFNode, java.io.PrintWriter)
    {
        java.io.PrintWriter r1;
        com.hp.hpl.jena.rdf.model.RDFNode r0;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        com.hp.hpl.jena.rdf.model.Resource $r2;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.RDFNode;

        r1 := @parameter1: java.io.PrintWriter;

        $z0 = r0 instanceof com.hp.hpl.jena.rdf.model.Literal;

        if $z0 == 0 goto label1;

        $r3 = (com.hp.hpl.jena.rdf.model.Literal) r0;

        staticinvoke <com.hp.hpl.jena.rdf.model.impl.NTripleWriter: void writeLiteral(com.hp.hpl.jena.rdf.model.Literal,java.io.PrintWriter)>($r3, r1);

        goto label2;

     label1:
        $r2 = (com.hp.hpl.jena.rdf.model.Resource) r0;

        staticinvoke <com.hp.hpl.jena.rdf.model.impl.NTripleWriter: void writeResource(com.hp.hpl.jena.rdf.model.Resource,java.io.PrintWriter)>($r2, r1);

     label2:
        return;
    }

    protected static java.lang.String anonName(com.hp.hpl.jena.rdf.model.AnonId)
    {
        com.hp.hpl.jena.rdf.model.AnonId r0;
        int $i0, i2, $i3, $i4;
        java.lang.String $r1, $r5, r14;
        boolean $z0;
        char $c1;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r15, $r16, $r17;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.AnonId;

        r14 = "_:A";

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.AnonId: java.lang.String toString()>();

        i2 = 0;

     label1:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i2 >= $i0 goto label5;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i2);

        $i3 = (int) $c1;

        if $i3 != 88 goto label2;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XX");

        r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label2:
        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c1);

        if $z0 == 0 goto label3;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label3:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("X");

        $i4 = (int) $c1;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i4);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("X");

        r14 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        return r14;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;
        int i0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/hp/hpl/jena/rdf/model/impl/NTripleWriter;");

        <com.hp.hpl.jena.rdf.model.impl.NTripleWriter: org.slf4j.Logger logger> = $r0;

        $r1 = newarray (boolean)[128];

        <com.hp.hpl.jena.rdf.model.impl.NTripleWriter: boolean[] okURIChars> = $r1;

        i0 = 32;

     label1:
        if i0 >= 127 goto label2;

        $r5 = <com.hp.hpl.jena.rdf.model.impl.NTripleWriter: boolean[] okURIChars>;

        $r5[i0] = 1;

        i0 = i0 + 1;

        goto label1;

     label2:
        $r2 = <com.hp.hpl.jena.rdf.model.impl.NTripleWriter: boolean[] okURIChars>;

        $r2[60] = 0;

        $r3 = <com.hp.hpl.jena.rdf.model.impl.NTripleWriter: boolean[] okURIChars>;

        $r3[62] = 0;

        $r4 = <com.hp.hpl.jena.rdf.model.impl.NTripleWriter: boolean[] okURIChars>;

        $r4[92] = 0;

        return;
    }
}
