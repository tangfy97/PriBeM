class com.mycila.inject.internal.guava.collect.ArrayTable$Values extends java.util.AbstractCollection
{
    final com.mycila.inject.internal.guava.collect.ArrayTable this$0;

    private void <init>(com.mycila.inject.internal.guava.collect.ArrayTable)
    {
        com.mycila.inject.internal.guava.collect.ArrayTable r1;
        com.mycila.inject.internal.guava.collect.ArrayTable$Values r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ArrayTable$Values;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.ArrayTable;

        r0.<com.mycila.inject.internal.guava.collect.ArrayTable$Values: com.mycila.inject.internal.guava.collect.ArrayTable this$0> = r1;

        specialinvoke r0.<java.util.AbstractCollection: void <init>()>();

        return;
    }

    public java.util.Iterator iterator()
    {
        int $i0;
        com.mycila.inject.internal.guava.collect.ArrayTable$Values$1 $r0;
        com.mycila.inject.internal.guava.collect.ArrayTable$Values r1;

        r1 := @this: com.mycila.inject.internal.guava.collect.ArrayTable$Values;

        $r0 = new com.mycila.inject.internal.guava.collect.ArrayTable$Values$1;

        $i0 = virtualinvoke r1.<com.mycila.inject.internal.guava.collect.ArrayTable$Values: int size()>();

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.ArrayTable$Values$1: void <init>(com.mycila.inject.internal.guava.collect.ArrayTable$Values,int)>(r1, $i0);

        return $r0;
    }

    public int size()
    {
        int $i0;
        com.mycila.inject.internal.guava.collect.ArrayTable $r1;
        com.mycila.inject.internal.guava.collect.ArrayTable$Values r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ArrayTable$Values;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ArrayTable$Values: com.mycila.inject.internal.guava.collect.ArrayTable this$0>;

        $i0 = virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.ArrayTable: int size()>();

        return $i0;
    }

    public boolean contains(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.ArrayTable $r2;
        com.mycila.inject.internal.guava.collect.ArrayTable$Values r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ArrayTable$Values;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.ArrayTable$Values: com.mycila.inject.internal.guava.collect.ArrayTable this$0>;

        $z0 = virtualinvoke $r2.<com.mycila.inject.internal.guava.collect.ArrayTable: boolean containsValue(java.lang.Object)>(r1);

        return $z0;
    }

    void <init>(com.mycila.inject.internal.guava.collect.ArrayTable, com.mycila.inject.internal.guava.collect.ArrayTable$1)
    {
        com.mycila.inject.internal.guava.collect.ArrayTable r1;
        com.mycila.inject.internal.guava.collect.ArrayTable$1 r2;
        com.mycila.inject.internal.guava.collect.ArrayTable$Values r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ArrayTable$Values;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.ArrayTable;

        r2 := @parameter1: com.mycila.inject.internal.guava.collect.ArrayTable$1;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ArrayTable$Values: void <init>(com.mycila.inject.internal.guava.collect.ArrayTable)>(r1);

        return;
    }
}
