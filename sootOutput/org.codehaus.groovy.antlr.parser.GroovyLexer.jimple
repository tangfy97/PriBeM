public class org.codehaus.groovy.antlr.parser.GroovyLexer extends groovyjarjarantlr.CharScanner implements org.codehaus.groovy.antlr.parser.GroovyTokenTypes, groovyjarjarantlr.TokenStream
{
    private boolean assertEnabled;
    private boolean enumEnabled;
    private boolean whitespaceIncluded;
    protected int parenLevel;
    protected int suppressNewline;
    protected static final int SCS_TYPE;
    protected static final int SCS_VAL;
    protected static final int SCS_LIT;
    protected static final int SCS_LIMIT;
    protected static final int SCS_SQ_TYPE;
    protected static final int SCS_TQ_TYPE;
    protected static final int SCS_RE_TYPE;
    protected int stringCtorState;
    protected java.util.ArrayList parenLevelStack;
    protected int lastSigTokenType;
    public static boolean tracing;
    private static java.util.HashMap ttypes;
    protected org.codehaus.groovy.antlr.parser.GroovyRecognizer parser;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_0;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_1;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_2;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_3;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_4;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_5;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_6;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_7;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_8;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_9;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_10;
    static java.lang.Class class$org$codehaus$groovy$antlr$parser$GroovyTokenTypes;

    public void enableAssert(boolean)
    {
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: boolean assertEnabled> = z0;

        return;
    }

    public boolean isAssertEnabled()
    {
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        $z0 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: boolean assertEnabled>;

        return $z0;
    }

    public void enableEnum(boolean)
    {
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: boolean enumEnabled> = z0;

        return;
    }

    public boolean isEnumEnabled()
    {
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        $z0 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: boolean enumEnabled>;

        return $z0;
    }

    public void setWhitespaceIncluded(boolean)
    {
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: boolean whitespaceIncluded> = z0;

        return;
    }

    public boolean isWhitespaceIncluded()
    {
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        $z0 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: boolean whitespaceIncluded>;

        return $z0;
    }

    public void setTokenObjectClass(java.lang.String)
    {
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        r1 := @parameter0: java.lang.String;

        return;
    }

    protected groovyjarjarantlr.Token makeToken(int)
    {
        groovyjarjarantlr.LexerSharedInputState $r2, $r3, $r4, $r5;
        org.codehaus.groovy.antlr.GroovySourceToken $r0;
        org.codehaus.groovy.antlr.parser.GroovyLexer r1;
        int i0, $i1, $i2, $i3, $i4;

        r1 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        i0 := @parameter0: int;

        $r0 = new org.codehaus.groovy.antlr.GroovySourceToken;

        specialinvoke $r0.<org.codehaus.groovy.antlr.GroovySourceToken: void <init>(int)>(i0);

        $r2 = r1.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i1 = virtualinvoke $r2.<groovyjarjarantlr.LexerSharedInputState: int getTokenStartColumn()>();

        virtualinvoke $r0.<org.codehaus.groovy.antlr.GroovySourceToken: void setColumn(int)>($i1);

        $r3 = r1.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i2 = virtualinvoke $r3.<groovyjarjarantlr.LexerSharedInputState: int getTokenStartLine()>();

        virtualinvoke $r0.<org.codehaus.groovy.antlr.GroovySourceToken: void setLine(int)>($i2);

        $r4 = r1.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i3 = virtualinvoke $r4.<groovyjarjarantlr.LexerSharedInputState: int getColumn()>();

        virtualinvoke $r0.<org.codehaus.groovy.antlr.GroovySourceToken: void setColumnLast(int)>($i3);

        $r5 = r1.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i4 = virtualinvoke $r5.<groovyjarjarantlr.LexerSharedInputState: int getLine()>();

        virtualinvoke $r0.<org.codehaus.groovy.antlr.GroovySourceToken: void setLineLast(int)>($i4);

        return $r0;
    }

    protected void pushParenLevel()
    {
        int $i0, $i1, $i2, $i3;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        java.lang.Integer $r1;
        java.util.ArrayList $r2;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        $r2 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.ArrayList parenLevelStack>;

        $r1 = new java.lang.Integer;

        $i0 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int parenLevel>;

        $i2 = $i0 * 16;

        $i1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int stringCtorState>;

        $i3 = $i2 + $i1;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i3);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int parenLevel> = 0;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int stringCtorState> = 0;

        return;
    }

    protected void popParenLevel()
    {
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        java.lang.Integer $r4;
        java.util.ArrayList $r1, $r2;
        int $i0, $i1, $i2, $i3, i4, $i6;
        java.lang.Object $r3;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.ArrayList parenLevelStack>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.ArrayList parenLevelStack>;

        $i6 = (int) -1;

        i4 = $i0 + $i6;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object remove(int)>(i4);

        $r4 = (java.lang.Integer) $r3;

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $i2 = $i1 / 16;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int parenLevel> = $i2;

        $i3 = $i1 % 16;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int stringCtorState> = $i3;

        return;
    }

    protected void restartStringCtor(boolean)
    {
        byte $b4;
        int $i0, $i1, $i2, $i3;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        $i0 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int stringCtorState>;

        if $i0 == 0 goto label3;

        if z0 == 0 goto label1;

        $b4 = 8;

        goto label2;

     label1:
        $b4 = 4;

     label2:
        $i1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int stringCtorState>;

        $i2 = $i1 & 3;

        $i3 = $b4 + $i2;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int stringCtorState> = $i3;

     label3:
        return;
    }

    protected boolean allowRegexpLiteral()
    {
        int $i0;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        $i0 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int lastSigTokenType>;

        $z0 = staticinvoke <org.codehaus.groovy.antlr.parser.GroovyLexer: boolean isExpressionEndingToken(int)>($i0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    protected static boolean isExpressionEndingToken(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 78: goto label1;
            case 79: goto label1;
            case 80: goto label1;
            case 81: goto label1;
            case 82: goto label2;
            case 83: goto label1;
            case 84: goto label1;
            case 85: goto label1;
            case 86: goto label2;
            case 87: goto label2;
            case 88: goto label2;
            case 89: goto label1;
            case 90: goto label1;
            case 91: goto label1;
            case 92: goto label2;
            case 93: goto label2;
            case 94: goto label1;
            case 95: goto label1;
            case 96: goto label2;
            case 97: goto label2;
            case 98: goto label2;
            case 99: goto label2;
            case 100: goto label1;
            case 101: goto label1;
            case 102: goto label1;
            case 103: goto label1;
            case 104: goto label1;
            case 105: goto label1;
            case 106: goto label1;
            case 107: goto label1;
            case 108: goto label1;
            case 109: goto label2;
            case 110: goto label1;
            case 111: goto label1;
            case 112: goto label1;
            case 113: goto label1;
            case 114: goto label1;
            case 115: goto label1;
            case 116: goto label1;
            case 117: goto label1;
            case 118: goto label1;
            case 119: goto label1;
            case 120: goto label2;
            case 121: goto label2;
            case 122: goto label2;
            case 123: goto label1;
            case 124: goto label2;
            case 125: goto label2;
            case 126: goto label1;
            case 127: goto label1;
            case 128: goto label1;
            case 129: goto label1;
            case 130: goto label2;
            case 131: goto label2;
            case 132: goto label2;
            case 133: goto label1;
            case 134: goto label1;
            case 135: goto label1;
            case 136: goto label1;
            case 137: goto label1;
            case 138: goto label1;
            case 139: goto label1;
            case 140: goto label1;
            case 141: goto label1;
            case 142: goto label1;
            case 143: goto label1;
            case 144: goto label2;
            case 145: goto label2;
            case 146: goto label1;
            case 147: goto label1;
            case 148: goto label1;
            case 149: goto label1;
            case 150: goto label2;
            case 151: goto label2;
            case 152: goto label2;
            case 153: goto label2;
            case 154: goto label2;
            case 155: goto label2;
            case 156: goto label2;
            case 157: goto label2;
            case 158: goto label2;
            case 159: goto label2;
            case 160: goto label2;
            case 161: goto label2;
            case 162: goto label2;
            case 163: goto label2;
            case 164: goto label2;
            case 165: goto label2;
            case 166: goto label2;
            case 167: goto label2;
            case 168: goto label2;
            case 169: goto label2;
            case 170: goto label2;
            case 171: goto label2;
            case 172: goto label2;
            case 173: goto label2;
            case 174: goto label2;
            case 175: goto label2;
            case 176: goto label2;
            case 177: goto label1;
            case 178: goto label2;
            case 179: goto label2;
            case 180: goto label2;
            case 181: goto label1;
            case 182: goto label2;
            case 183: goto label2;
            case 184: goto label1;
            case 185: goto label2;
            case 186: goto label2;
            case 187: goto label2;
            case 188: goto label2;
            case 189: goto label1;
            case 190: goto label1;
            case 191: goto label1;
            case 192: goto label1;
            case 193: goto label1;
            case 194: goto label1;
            case 195: goto label1;
            case 196: goto label1;
            case 197: goto label1;
            case 198: goto label1;
            case 199: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    protected void newlineCheck(boolean) throws groovyjarjarantlr.RecognitionException
    {
        int $i0, $i1;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        boolean z0, $z1;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label3;

        $i0 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int suppressNewline>;

        if $i0 <= 0 goto label3;

        $i1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int suppressNewline>;

        if $i1 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        specialinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void require(boolean,java.lang.String,java.lang.String)>($z1, "end of line reached within a simple string \'x\' or \"x\" or /x/", "for multi-line literals, use triple quotes \'\'\'x\'\'\' or \"\"\"x\"\"\"");

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int suppressNewline> = 0;

     label3:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void newline()>();

        return;
    }

    protected boolean atValidDollarEscape() throws groovyjarjarantlr.CharStreamException
    {
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        char $c0, $c1, c2;
        int $i3, $i4, $i5, $i6;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        $c0 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i3 = (int) $c0;

        if $i3 == 36 goto label1;

        return 0;

     label1:
        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        c2 = $c1;

        $i4 = (int) $c1;

        if $i4 != 42 goto label2;

        c2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(3);

     label2:
        $i5 = (int) c2;

        if $i5 == 123 goto label3;

        $i6 = (int) c2;

        if $i6 == 36 goto label4;

        $z0 = staticinvoke <java.lang.Character: boolean isJavaIdentifierStart(char)>(c2);

        if $z0 == 0 goto label4;

     label3:
        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    public groovyjarjarantlr.TokenStream plumb()
    {
        org.codehaus.groovy.antlr.parser.GroovyLexer r1;
        org.codehaus.groovy.antlr.parser.GroovyLexer$1 $r0;

        r1 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        $r0 = new org.codehaus.groovy.antlr.parser.GroovyLexer$1;

        specialinvoke $r0.<org.codehaus.groovy.antlr.parser.GroovyLexer$1: void <init>(org.codehaus.groovy.antlr.parser.GroovyLexer)>(r1);

        return $r0;
    }

    public void traceIn(java.lang.String) throws groovyjarjarantlr.CharStreamException
    {
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        r1 := @parameter0: java.lang.String;

        $z0 = <org.codehaus.groovy.antlr.parser.GroovyLexer: boolean tracing>;

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<groovyjarjarantlr.CharScanner: void traceIn(java.lang.String)>(r1);

        return;
    }

    public void traceOut(java.lang.String) throws groovyjarjarantlr.CharStreamException
    {
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        java.lang.StringBuffer $r2, $r3, $r6;
        java.lang.String $r5, r7;
        groovyjarjarantlr.Token $r1, $r4;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        r7 := @parameter0: java.lang.String;

        $z0 = <org.codehaus.groovy.antlr.parser.GroovyLexer: boolean tracing>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken>;

        if $r1 == null goto label2;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken>;

        $r5 = staticinvoke <org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String tokenStringOf(groovyjarjarantlr.Token)>($r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        specialinvoke r0.<groovyjarjarantlr.CharScanner: void traceOut(java.lang.String)>(r7);

        return;
    }

    private static java.lang.String tokenStringOf(groovyjarjarantlr.Token)
    {
        java.lang.Integer $r1;
        groovyjarjarantlr.Token r2;
        java.lang.IllegalAccessException $r27;
        java.util.HashMap $r0, $r3, $r17;
        java.lang.StringBuffer $r5, $r6, $r7, $r8, $r10, $r11, $r13, $r14, $r15, $r16;
        int $i0, i1, $i2;
        java.lang.String $r9, $r12, $r26;
        java.lang.reflect.Field $r20, $r23, $r25;
        java.lang.reflect.Field[] $r19;
        java.lang.Object $r4, $r24, r29;
        java.lang.Class $r18, $r21, $r22, $r28;

        r2 := @parameter0: groovyjarjarantlr.Token;

        $r0 = <org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.HashMap ttypes>;

        if $r0 != null goto label09;

        $r17 = new java.util.HashMap;

        specialinvoke $r17.<java.util.HashMap: void <init>()>();

        $r18 = <org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.Class class$org$codehaus$groovy$antlr$parser$GroovyTokenTypes>;

        if $r18 != null goto label01;

        $r28 = staticinvoke <org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.antlr.parser.GroovyTokenTypes");

        <org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.Class class$org$codehaus$groovy$antlr$parser$GroovyTokenTypes> = $r28;

        goto label02;

     label01:
        $r28 = <org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.Class class$org$codehaus$groovy$antlr$parser$GroovyTokenTypes>;

     label02:
        $r19 = virtualinvoke $r28.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i1 = 0;

     label03:
        $i2 = lengthof $r19;

        if i1 >= $i2 goto label08;

        $r20 = $r19[i1];

        $r21 = virtualinvoke $r20.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r22 = <java.lang.Integer: java.lang.Class TYPE>;

        if $r21 == $r22 goto label04;

        goto label07;

     label04:
        $r23 = $r19[i1];

        $r24 = virtualinvoke $r23.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r25 = $r19[i1];

        $r26 = virtualinvoke $r25.<java.lang.reflect.Field: java.lang.String getName()>();

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r26);

     label05:
        goto label07;

     label06:
        $r27 := @caughtexception;

     label07:
        i1 = i1 + 1;

        goto label03;

     label08:
        <org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.HashMap ttypes> = $r17;

     label09:
        $r1 = new java.lang.Integer;

        $i0 = virtualinvoke r2.<groovyjarjarantlr.Token: int getType()>();

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i0);

        $r3 = <org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.HashMap ttypes>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        r29 = $r4;

        if $r4 != null goto label10;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        r29 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

     label10:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r29);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",\"");

        $r9 = virtualinvoke r2.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"]");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r12;

        catch java.lang.IllegalAccessException from label04 to label05 with label06;
    }

    private void require(boolean, java.lang.String, java.lang.String) throws groovyjarjarantlr.SemanticException
    {
        org.codehaus.groovy.antlr.parser.GroovyRecognizer $r3;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        java.lang.String r1, r2;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        if z0 != 0 goto label1;

        $r3 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: org.codehaus.groovy.antlr.parser.GroovyRecognizer parser>;

        virtualinvoke $r3.<org.codehaus.groovy.antlr.parser.GroovyRecognizer: void requireFailed(java.lang.String,java.lang.String)>(r1, r2);

     label1:
        return;
    }

    public void <init>(java.io.InputStream)
    {
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        groovyjarjarantlr.ByteBuffer $r1;
        java.io.InputStream r2;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        r2 := @parameter0: java.io.InputStream;

        $r1 = new groovyjarjarantlr.ByteBuffer;

        specialinvoke $r1.<groovyjarjarantlr.ByteBuffer: void <init>(java.io.InputStream)>(r2);

        specialinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void <init>(groovyjarjarantlr.InputBuffer)>($r1);

        return;
    }

    public void <init>(java.io.Reader)
    {
        groovyjarjarantlr.CharBuffer $r1;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        java.io.Reader r2;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        r2 := @parameter0: java.io.Reader;

        $r1 = new groovyjarjarantlr.CharBuffer;

        specialinvoke $r1.<groovyjarjarantlr.CharBuffer: void <init>(java.io.Reader)>(r2);

        specialinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void <init>(groovyjarjarantlr.InputBuffer)>($r1);

        return;
    }

    public void <init>(groovyjarjarantlr.InputBuffer)
    {
        groovyjarjarantlr.LexerSharedInputState $r1;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        groovyjarjarantlr.InputBuffer r2;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        r2 := @parameter0: groovyjarjarantlr.InputBuffer;

        $r1 = new groovyjarjarantlr.LexerSharedInputState;

        specialinvoke $r1.<groovyjarjarantlr.LexerSharedInputState: void <init>(groovyjarjarantlr.InputBuffer)>(r2);

        specialinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void <init>(groovyjarjarantlr.LexerSharedInputState)>($r1);

        return;
    }

    public void <init>(groovyjarjarantlr.LexerSharedInputState)
    {
        java.lang.Integer $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r48, $r51, $r54, $r57, $r60, $r63, $r66, $r69, $r72, $r75, $r78, $r81, $r84, $r87, $r90, $r93, $r96, $r99, $r102, $r105, $r108, $r111, $r114, $r117, $r120, $r123, $r126, $r129, $r132, $r135, $r138, $r141, $r144, $r147, $r150, $r153, $r156, $r159, $r162, $r165, $r168, $r171, $r174;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        groovyjarjarantlr.ANTLRHashString $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37, $r40, $r43, $r46, $r49, $r52, $r55, $r58, $r61, $r64, $r67, $r70, $r73, $r76, $r79, $r82, $r85, $r88, $r91, $r94, $r97, $r100, $r103, $r106, $r109, $r112, $r115, $r118, $r121, $r124, $r127, $r130, $r133, $r136, $r139, $r142, $r145, $r148, $r151, $r154, $r157, $r160, $r163, $r166, $r169, $r172;
        java.util.ArrayList $r2;
        groovyjarjarantlr.LexerSharedInputState r1;
        java.util.Hashtable $r3, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r47, $r50, $r53, $r56, $r59, $r62, $r65, $r68, $r71, $r74, $r77, $r80, $r83, $r86, $r89, $r92, $r95, $r98, $r101, $r104, $r107, $r110, $r113, $r116, $r119, $r122, $r125, $r128, $r131, $r134, $r137, $r140, $r143, $r146, $r149, $r152, $r155, $r158, $r161, $r164, $r167, $r170, $r173;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        r1 := @parameter0: groovyjarjarantlr.LexerSharedInputState;

        specialinvoke r0.<groovyjarjarantlr.CharScanner: void <init>(groovyjarjarantlr.LexerSharedInputState)>(r1);

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: boolean assertEnabled> = 1;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: boolean enumEnabled> = 1;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: boolean whitespaceIncluded> = 0;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void setTabSize(int)>(1);

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int parenLevel> = 0;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int suppressNewline> = 0;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int stringCtorState> = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.ArrayList parenLevelStack> = $r2;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int lastSigTokenType> = 1;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: boolean caseSensitiveLiterals> = 1;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void setCaseSensitive(boolean)>(1);

        $r3 = new java.util.Hashtable;

        specialinvoke $r3.<java.util.Hashtable: void <init>()>();

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals> = $r3;

        $r5 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r4 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r4.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("byte", r0);

        $r6 = new java.lang.Integer;

        specialinvoke $r6.<java.lang.Integer: void <init>(int)>(102);

        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        $r8 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r7 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r7.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("public", r0);

        $r9 = new java.lang.Integer;

        specialinvoke $r9.<java.lang.Integer: void <init>(int)>(112);

        virtualinvoke $r8.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r9);

        $r11 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r10 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r10.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("case", r0);

        $r12 = new java.lang.Integer;

        specialinvoke $r12.<java.lang.Integer: void <init>(int)>(146);

        virtualinvoke $r11.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r12);

        $r14 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r13 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r13.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("short", r0);

        $r15 = new java.lang.Integer;

        specialinvoke $r15.<java.lang.Integer: void <init>(int)>(104);

        virtualinvoke $r14.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r15);

        $r17 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r16 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r16.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("break", r0);

        $r18 = new java.lang.Integer;

        specialinvoke $r18.<java.lang.Integer: void <init>(int)>(140);

        virtualinvoke $r17.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r18);

        $r20 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r19 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r19.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("while", r0);

        $r21 = new java.lang.Integer;

        specialinvoke $r21.<java.lang.Integer: void <init>(int)>(135);

        virtualinvoke $r20.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r21);

        $r23 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r22 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r22.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("new", r0);

        $r24 = new java.lang.Integer;

        specialinvoke $r24.<java.lang.Integer: void <init>(int)>(190);

        virtualinvoke $r23.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r24);

        $r26 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r25 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r25.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("instanceof", r0);

        $r27 = new java.lang.Integer;

        specialinvoke $r27.<java.lang.Integer: void <init>(int)>(177);

        virtualinvoke $r26.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, $r27);

        $r29 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r28 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r28.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("implements", r0);

        $r30 = new java.lang.Integer;

        specialinvoke $r30.<java.lang.Integer: void <init>(int)>(128);

        virtualinvoke $r29.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, $r30);

        $r32 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r31 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r31.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("synchronized", r0);

        $r33 = new java.lang.Integer;

        specialinvoke $r33.<java.lang.Integer: void <init>(int)>(117);

        virtualinvoke $r32.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, $r33);

        $r35 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r34 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r34.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("const", r0);

        $r36 = new java.lang.Integer;

        specialinvoke $r36.<java.lang.Integer: void <init>(int)>(40);

        virtualinvoke $r35.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, $r36);

        $r38 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r37 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r37.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("float", r0);

        $r39 = new java.lang.Integer;

        specialinvoke $r39.<java.lang.Integer: void <init>(int)>(106);

        virtualinvoke $r38.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r37, $r39);

        $r41 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r40 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r40.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("package", r0);

        $r42 = new java.lang.Integer;

        specialinvoke $r42.<java.lang.Integer: void <init>(int)>(78);

        virtualinvoke $r41.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r40, $r42);

        $r44 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r43 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r43.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("return", r0);

        $r45 = new java.lang.Integer;

        specialinvoke $r45.<java.lang.Integer: void <init>(int)>(139);

        virtualinvoke $r44.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r43, $r45);

        $r47 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r46 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r46.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("throw", r0);

        $r48 = new java.lang.Integer;

        specialinvoke $r48.<java.lang.Integer: void <init>(int)>(142);

        virtualinvoke $r47.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r46, $r48);

        $r50 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r49 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r49.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("null", r0);

        $r51 = new java.lang.Integer;

        specialinvoke $r51.<java.lang.Integer: void <init>(int)>(193);

        virtualinvoke $r50.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r49, $r51);

        $r53 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r52 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r52.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("def", r0);

        $r54 = new java.lang.Integer;

        specialinvoke $r54.<java.lang.Integer: void <init>(int)>(81);

        virtualinvoke $r53.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r52, $r54);

        $r56 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r55 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r55.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("threadsafe", r0);

        $r57 = new java.lang.Integer;

        specialinvoke $r57.<java.lang.Integer: void <init>(int)>(116);

        virtualinvoke $r56.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r55, $r57);

        $r59 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r58 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r58.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("protected", r0);

        $r60 = new java.lang.Integer;

        specialinvoke $r60.<java.lang.Integer: void <init>(int)>(113);

        virtualinvoke $r59.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r58, $r60);

        $r62 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r61 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r61.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("class", r0);

        $r63 = new java.lang.Integer;

        specialinvoke $r63.<java.lang.Integer: void <init>(int)>(89);

        virtualinvoke $r62.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r61, $r63);

        $r65 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r64 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r64.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("throws", r0);

        $r66 = new java.lang.Integer;

        specialinvoke $r66.<java.lang.Integer: void <init>(int)>(127);

        virtualinvoke $r65.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r64, $r66);

        $r68 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r67 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r67.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("do", r0);

        $r69 = new java.lang.Integer;

        specialinvoke $r69.<java.lang.Integer: void <init>(int)>(41);

        virtualinvoke $r68.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r67, $r69);

        $r71 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r70 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r70.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("strictfp", r0);

        $r72 = new java.lang.Integer;

        specialinvoke $r72.<java.lang.Integer: void <init>(int)>(42);

        virtualinvoke $r71.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r70, $r72);

        $r74 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r73 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r73.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("super", r0);

        $r75 = new java.lang.Integer;

        specialinvoke $r75.<java.lang.Integer: void <init>(int)>(95);

        virtualinvoke $r74.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r73, $r75);

        $r77 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r76 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r76.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("transient", r0);

        $r78 = new java.lang.Integer;

        specialinvoke $r78.<java.lang.Integer: void <init>(int)>(114);

        virtualinvoke $r77.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r76, $r78);

        $r80 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r79 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r79.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("native", r0);

        $r81 = new java.lang.Integer;

        specialinvoke $r81.<java.lang.Integer: void <init>(int)>(115);

        virtualinvoke $r80.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r79, $r81);

        $r83 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r82 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r82.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("interface", r0);

        $r84 = new java.lang.Integer;

        specialinvoke $r84.<java.lang.Integer: void <init>(int)>(90);

        virtualinvoke $r83.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r82, $r84);

        $r86 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r85 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r85.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("final", r0);

        $r87 = new java.lang.Integer;

        specialinvoke $r87.<java.lang.Integer: void <init>(int)>(37);

        virtualinvoke $r86.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r85, $r87);

        $r89 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r88 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r88.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("if", r0);

        $r90 = new java.lang.Integer;

        specialinvoke $r90.<java.lang.Integer: void <init>(int)>(133);

        virtualinvoke $r89.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r88, $r90);

        $r92 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r91 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r91.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("double", r0);

        $r93 = new java.lang.Integer;

        specialinvoke $r93.<java.lang.Integer: void <init>(int)>(108);

        virtualinvoke $r92.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r91, $r93);

        $r95 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r94 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r94.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("volatile", r0);

        $r96 = new java.lang.Integer;

        specialinvoke $r96.<java.lang.Integer: void <init>(int)>(118);

        virtualinvoke $r95.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r94, $r96);

        $r98 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r97 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r97.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("as", r0);

        $r99 = new java.lang.Integer;

        specialinvoke $r99.<java.lang.Integer: void <init>(int)>(110);

        virtualinvoke $r98.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r97, $r99);

        $r101 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r100 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r100.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("assert", r0);

        $r102 = new java.lang.Integer;

        specialinvoke $r102.<java.lang.Integer: void <init>(int)>(143);

        virtualinvoke $r101.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r100, $r102);

        $r104 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r103 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r103.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("catch", r0);

        $r105 = new java.lang.Integer;

        specialinvoke $r105.<java.lang.Integer: void <init>(int)>(149);

        virtualinvoke $r104.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r103, $r105);

        $r107 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r106 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r106.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("try", r0);

        $r108 = new java.lang.Integer;

        specialinvoke $r108.<java.lang.Integer: void <init>(int)>(147);

        virtualinvoke $r107.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r106, $r108);

        $r110 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r109 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r109.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("goto", r0);

        $r111 = new java.lang.Integer;

        specialinvoke $r111.<java.lang.Integer: void <init>(int)>(39);

        virtualinvoke $r110.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r109, $r111);

        $r113 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r112 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r112.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("enum", r0);

        $r114 = new java.lang.Integer;

        specialinvoke $r114.<java.lang.Integer: void <init>(int)>(91);

        virtualinvoke $r113.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r112, $r114);

        $r116 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r115 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r115.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("int", r0);

        $r117 = new java.lang.Integer;

        specialinvoke $r117.<java.lang.Integer: void <init>(int)>(105);

        virtualinvoke $r116.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r115, $r117);

        $r119 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r118 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r118.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("for", r0);

        $r120 = new java.lang.Integer;

        specialinvoke $r120.<java.lang.Integer: void <init>(int)>(137);

        virtualinvoke $r119.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r118, $r120);

        $r122 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r121 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r121.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("extends", r0);

        $r123 = new java.lang.Integer;

        specialinvoke $r123.<java.lang.Integer: void <init>(int)>(94);

        virtualinvoke $r122.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r121, $r123);

        $r125 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r124 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r124.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("boolean", r0);

        $r126 = new java.lang.Integer;

        specialinvoke $r126.<java.lang.Integer: void <init>(int)>(101);

        virtualinvoke $r125.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r124, $r126);

        $r128 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r127 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r127.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("char", r0);

        $r129 = new java.lang.Integer;

        specialinvoke $r129.<java.lang.Integer: void <init>(int)>(103);

        virtualinvoke $r128.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r127, $r129);

        $r131 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r130 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r130.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("private", r0);

        $r132 = new java.lang.Integer;

        specialinvoke $r132.<java.lang.Integer: void <init>(int)>(111);

        virtualinvoke $r131.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r130, $r132);

        $r134 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r133 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r133.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("default", r0);

        $r135 = new java.lang.Integer;

        specialinvoke $r135.<java.lang.Integer: void <init>(int)>(126);

        virtualinvoke $r134.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r133, $r135);

        $r137 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r136 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r136.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("false", r0);

        $r138 = new java.lang.Integer;

        specialinvoke $r138.<java.lang.Integer: void <init>(int)>(192);

        virtualinvoke $r137.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r136, $r138);

        $r140 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r139 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r139.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("this", r0);

        $r141 = new java.lang.Integer;

        specialinvoke $r141.<java.lang.Integer: void <init>(int)>(129);

        virtualinvoke $r140.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r139, $r141);

        $r143 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r142 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r142.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("static", r0);

        $r144 = new java.lang.Integer;

        specialinvoke $r144.<java.lang.Integer: void <init>(int)>(80);

        virtualinvoke $r143.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r142, $r144);

        $r146 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r145 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r145.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("abstract", r0);

        $r147 = new java.lang.Integer;

        specialinvoke $r147.<java.lang.Integer: void <init>(int)>(38);

        virtualinvoke $r146.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r145, $r147);

        $r149 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r148 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r148.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("continue", r0);

        $r150 = new java.lang.Integer;

        specialinvoke $r150.<java.lang.Integer: void <init>(int)>(141);

        virtualinvoke $r149.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r148, $r150);

        $r152 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r151 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r151.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("finally", r0);

        $r153 = new java.lang.Integer;

        specialinvoke $r153.<java.lang.Integer: void <init>(int)>(148);

        virtualinvoke $r152.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r151, $r153);

        $r155 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r154 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r154.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("else", r0);

        $r156 = new java.lang.Integer;

        specialinvoke $r156.<java.lang.Integer: void <init>(int)>(134);

        virtualinvoke $r155.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r154, $r156);

        $r158 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r157 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r157.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("import", r0);

        $r159 = new java.lang.Integer;

        specialinvoke $r159.<java.lang.Integer: void <init>(int)>(79);

        virtualinvoke $r158.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r157, $r159);

        $r161 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r160 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r160.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("in", r0);

        $r162 = new java.lang.Integer;

        specialinvoke $r162.<java.lang.Integer: void <init>(int)>(138);

        virtualinvoke $r161.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r160, $r162);

        $r164 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r163 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r163.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("void", r0);

        $r165 = new java.lang.Integer;

        specialinvoke $r165.<java.lang.Integer: void <init>(int)>(100);

        virtualinvoke $r164.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r163, $r165);

        $r167 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r166 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r166.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("switch", r0);

        $r168 = new java.lang.Integer;

        specialinvoke $r168.<java.lang.Integer: void <init>(int)>(136);

        virtualinvoke $r167.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r166, $r168);

        $r170 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r169 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r169.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("true", r0);

        $r171 = new java.lang.Integer;

        specialinvoke $r171.<java.lang.Integer: void <init>(int)>(191);

        virtualinvoke $r170.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r169, $r171);

        $r173 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.util.Hashtable literals>;

        $r172 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r172.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("long", r0);

        $r174 = new java.lang.Integer;

        specialinvoke $r174.<java.lang.Integer: void <init>(int)>(107);

        virtualinvoke $r173.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r172, $r174);

        return;
    }

    public groovyjarjarantlr.Token nextToken() throws groovyjarjarantlr.TokenStreamException
    {
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        groovyjarjarantlr.CharStreamIOException $r12;
        groovyjarjarantlr.TokenStreamRecognitionException $r18;
        java.io.IOException $r13;
        groovyjarjarantlr.TokenStreamIOException $r19;
        groovyjarjarantlr.Token $r1, $r2, $r3, $r7, $r16;
        int $i1, $i46, $i47, $i48, $i49, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $i203, $i204, $i205, $i207;
        groovyjarjarantlr.NoViableAltForCharException $r17;
        java.lang.String $r6, $r10;
        boolean $z0, $z1;
        groovyjarjarantlr.collections.impl.BitSet $r4;
        groovyjarjarantlr.CharStreamException $r8;
        groovyjarjarantlr.RecognitionException $r14;
        char $c0, $c2, $c3, $c4, $c5, $c6, $c7, $c8, $c9, $c10, $c11, $c12, $c13, $c14, $c15, $c16, $c17, $c18, $c19, $c20, $c21, $c22, $c23, $c24, $c25, $c26, $c27, $c28, $c29, $c30, $c31, $c32, $c33, $c34, $c35, $c36, $c37, $c38, $c39, $c40, $c41, $c42, $c43, $c44, $c45, $c50, $c51, $c52, $c53, $c54, $c55, $c56, $c57, $c58, $c59, $c60, $c61, $c62, $c63, $c64, $c65, $c66, $c67, $c68, $c69, $c70, $c71, $c72, $c73, $c74, $c75, $c76, $c77, $c78, $c79, $c80, $c81, $c82, $c83, $c84, $c85, $c86, $c87, $c88, $c89, $c90, $c91, $c92, $c93, $c94, $c95, $c96, $c97, $c98, $c99, $c100, $c101, $c102, $c103, $c104, $c105;
        groovyjarjarantlr.TokenStreamException $r20;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

     label01:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void resetText()>();

     label02:
        $c0 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i106 = (int) $c0;

        tableswitch($i106)
        {
            case 9: goto label14;
            case 10: goto label15;
            case 11: goto label19;
            case 12: goto label14;
            case 13: goto label15;
            case 14: goto label19;
            case 15: goto label19;
            case 16: goto label19;
            case 17: goto label19;
            case 18: goto label19;
            case 19: goto label19;
            case 20: goto label19;
            case 21: goto label19;
            case 22: goto label19;
            case 23: goto label19;
            case 24: goto label19;
            case 25: goto label19;
            case 26: goto label19;
            case 27: goto label19;
            case 28: goto label19;
            case 29: goto label19;
            case 30: goto label19;
            case 31: goto label19;
            case 32: goto label14;
            case 33: goto label19;
            case 34: goto label16;
            case 35: goto label19;
            case 36: goto label13;
            case 37: goto label19;
            case 38: goto label19;
            case 39: goto label16;
            case 40: goto label03;
            case 41: goto label04;
            case 42: goto label19;
            case 43: goto label19;
            case 44: goto label10;
            case 45: goto label19;
            case 46: goto label19;
            case 47: goto label19;
            case 48: goto label17;
            case 49: goto label17;
            case 50: goto label17;
            case 51: goto label17;
            case 52: goto label17;
            case 53: goto label17;
            case 54: goto label17;
            case 55: goto label17;
            case 56: goto label17;
            case 57: goto label17;
            case 58: goto label09;
            case 59: goto label12;
            case 60: goto label19;
            case 61: goto label19;
            case 62: goto label19;
            case 63: goto label19;
            case 64: goto label18;
            case 65: goto label19;
            case 66: goto label19;
            case 67: goto label19;
            case 68: goto label19;
            case 69: goto label19;
            case 70: goto label19;
            case 71: goto label19;
            case 72: goto label19;
            case 73: goto label19;
            case 74: goto label19;
            case 75: goto label19;
            case 76: goto label19;
            case 77: goto label19;
            case 78: goto label19;
            case 79: goto label19;
            case 80: goto label19;
            case 81: goto label19;
            case 82: goto label19;
            case 83: goto label19;
            case 84: goto label19;
            case 85: goto label19;
            case 86: goto label19;
            case 87: goto label19;
            case 88: goto label19;
            case 89: goto label19;
            case 90: goto label19;
            case 91: goto label05;
            case 92: goto label14;
            case 93: goto label06;
            case 94: goto label19;
            case 95: goto label19;
            case 96: goto label19;
            case 97: goto label19;
            case 98: goto label19;
            case 99: goto label19;
            case 100: goto label19;
            case 101: goto label19;
            case 102: goto label19;
            case 103: goto label19;
            case 104: goto label19;
            case 105: goto label19;
            case 106: goto label19;
            case 107: goto label19;
            case 108: goto label19;
            case 109: goto label19;
            case 110: goto label19;
            case 111: goto label19;
            case 112: goto label19;
            case 113: goto label19;
            case 114: goto label19;
            case 115: goto label19;
            case 116: goto label19;
            case 117: goto label19;
            case 118: goto label19;
            case 119: goto label19;
            case 120: goto label19;
            case 121: goto label19;
            case 122: goto label19;
            case 123: goto label07;
            case 124: goto label19;
            case 125: goto label08;
            case 126: goto label11;
            default: goto label19;
        };

     label03:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mLPAREN(boolean)>(1);

        goto label73;

     label04:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mRPAREN(boolean)>(1);

        goto label73;

     label05:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mLBRACK(boolean)>(1);

        goto label73;

     label06:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mRBRACK(boolean)>(1);

        goto label73;

     label07:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mLCURLY(boolean)>(1);

        goto label73;

     label08:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mRCURLY(boolean)>(1);

        goto label73;

     label09:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mCOLON(boolean)>(1);

        goto label73;

     label10:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mCOMMA(boolean)>(1);

        goto label73;

     label11:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mBNOT(boolean)>(1);

        goto label73;

     label12:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mSEMI(boolean)>(1);

        goto label73;

     label13:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mDOLLAR(boolean)>(1);

        goto label73;

     label14:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mWS(boolean)>(1);

        goto label73;

     label15:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mNLS(boolean)>(1);

        goto label73;

     label16:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mSTRING_LITERAL(boolean)>(1);

        goto label73;

     label17:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mNUM_INT(boolean)>(1);

        goto label73;

     label18:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mAT(boolean)>(1);

        goto label73;

     label19:
        $c2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i107 = (int) $c2;

        if $i107 != 62 goto label20;

        $c93 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i108 = (int) $c93;

        if $i108 != 62 goto label20;

        $c94 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(3);

        $i109 = (int) $c94;

        if $i109 != 62 goto label20;

        $c95 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(4);

        $i110 = (int) $c95;

        if $i110 != 61 goto label20;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mBSR_ASSIGN(boolean)>(1);

        goto label73;

     label20:
        $c96 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i111 = (int) $c96;

        if $i111 != 60 goto label21;

        $c91 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i112 = (int) $c91;

        if $i112 != 61 goto label21;

        $c92 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(3);

        $i113 = (int) $c92;

        if $i113 != 62 goto label21;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mCOMPARE_TO(boolean)>(1);

        goto label73;

     label21:
        $c97 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i114 = (int) $c97;

        if $i114 != 62 goto label22;

        $c89 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i115 = (int) $c89;

        if $i115 != 62 goto label22;

        $c90 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(3);

        $i116 = (int) $c90;

        if $i116 != 61 goto label22;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mSR_ASSIGN(boolean)>(1);

        goto label73;

     label22:
        $c98 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i117 = (int) $c98;

        if $i117 != 62 goto label23;

        $c87 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i118 = (int) $c87;

        if $i118 != 62 goto label23;

        $c88 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(3);

        $i119 = (int) $c88;

        if $i119 != 62 goto label23;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mBSR(boolean)>(1);

        goto label73;

     label23:
        $c99 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i120 = (int) $c99;

        if $i120 != 60 goto label24;

        $c85 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i121 = (int) $c85;

        if $i121 != 60 goto label24;

        $c86 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(3);

        $i122 = (int) $c86;

        if $i122 != 61 goto label24;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mSL_ASSIGN(boolean)>(1);

        goto label73;

     label24:
        $c100 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i123 = (int) $c100;

        if $i123 != 46 goto label25;

        $c83 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i124 = (int) $c83;

        if $i124 != 46 goto label25;

        $c84 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(3);

        $i125 = (int) $c84;

        if $i125 != 60 goto label25;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mRANGE_EXCLUSIVE(boolean)>(1);

        goto label73;

     label25:
        $c101 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i126 = (int) $c101;

        if $i126 != 46 goto label26;

        $c81 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i127 = (int) $c81;

        if $i127 != 46 goto label26;

        $c82 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(3);

        $i128 = (int) $c82;

        if $i128 != 46 goto label26;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mTRIPLE_DOT(boolean)>(1);

        goto label73;

     label26:
        $c102 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i129 = (int) $c102;

        if $i129 != 61 goto label27;

        $c79 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i130 = (int) $c79;

        if $i130 != 61 goto label27;

        $c80 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(3);

        $i131 = (int) $c80;

        if $i131 != 126 goto label27;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mREGEX_MATCH(boolean)>(1);

        goto label73;

     label27:
        $c103 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i132 = (int) $c103;

        if $i132 != 42 goto label28;

        $c77 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i133 = (int) $c77;

        if $i133 != 42 goto label28;

        $c78 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(3);

        $i134 = (int) $c78;

        if $i134 != 61 goto label28;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mSTAR_STAR_ASSIGN(boolean)>(1);

        goto label73;

     label28:
        $c104 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i135 = (int) $c104;

        if $i135 != 61 goto label29;

        $c76 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i136 = (int) $c76;

        if $i136 != 61 goto label29;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mEQUAL(boolean)>(1);

        goto label73;

     label29:
        $c3 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i137 = (int) $c3;

        if $i137 != 33 goto label30;

        $c75 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i138 = (int) $c75;

        if $i138 != 61 goto label30;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mNOT_EQUAL(boolean)>(1);

        goto label73;

     label30:
        $c4 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i139 = (int) $c4;

        if $i139 != 43 goto label31;

        $c74 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i140 = (int) $c74;

        if $i140 != 61 goto label31;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mPLUS_ASSIGN(boolean)>(1);

        goto label73;

     label31:
        $c5 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i141 = (int) $c5;

        if $i141 != 43 goto label32;

        $c73 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i142 = (int) $c73;

        if $i142 != 43 goto label32;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mINC(boolean)>(1);

        goto label73;

     label32:
        $c6 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i143 = (int) $c6;

        if $i143 != 45 goto label33;

        $c72 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i144 = (int) $c72;

        if $i144 != 61 goto label33;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mMINUS_ASSIGN(boolean)>(1);

        goto label73;

     label33:
        $c7 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i145 = (int) $c7;

        if $i145 != 45 goto label34;

        $c71 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i146 = (int) $c71;

        if $i146 != 45 goto label34;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mDEC(boolean)>(1);

        goto label73;

     label34:
        $c8 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i147 = (int) $c8;

        if $i147 != 42 goto label35;

        $c70 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i148 = (int) $c70;

        if $i148 != 61 goto label35;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mSTAR_ASSIGN(boolean)>(1);

        goto label73;

     label35:
        $c9 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i149 = (int) $c9;

        if $i149 != 37 goto label36;

        $c69 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i150 = (int) $c69;

        if $i150 != 61 goto label36;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mMOD_ASSIGN(boolean)>(1);

        goto label73;

     label36:
        $c10 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i151 = (int) $c10;

        if $i151 != 62 goto label37;

        $c68 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i152 = (int) $c68;

        if $i152 != 62 goto label37;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mSR(boolean)>(1);

        goto label73;

     label37:
        $c11 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i153 = (int) $c11;

        if $i153 != 62 goto label38;

        $c67 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i154 = (int) $c67;

        if $i154 != 61 goto label38;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mGE(boolean)>(1);

        goto label73;

     label38:
        $c12 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i155 = (int) $c12;

        if $i155 != 60 goto label39;

        $c66 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i156 = (int) $c66;

        if $i156 != 60 goto label39;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mSL(boolean)>(1);

        goto label73;

     label39:
        $c13 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i157 = (int) $c13;

        if $i157 != 60 goto label40;

        $c65 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i158 = (int) $c65;

        if $i158 != 61 goto label40;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mLE(boolean)>(1);

        goto label73;

     label40:
        $c14 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i159 = (int) $c14;

        if $i159 != 94 goto label41;

        $c64 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i160 = (int) $c64;

        if $i160 != 61 goto label41;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mBXOR_ASSIGN(boolean)>(1);

        goto label73;

     label41:
        $c15 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i161 = (int) $c15;

        if $i161 != 124 goto label42;

        $c63 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i162 = (int) $c63;

        if $i162 != 61 goto label42;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mBOR_ASSIGN(boolean)>(1);

        goto label73;

     label42:
        $c16 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i163 = (int) $c16;

        if $i163 != 124 goto label43;

        $c62 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i164 = (int) $c62;

        if $i164 != 124 goto label43;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mLOR(boolean)>(1);

        goto label73;

     label43:
        $c17 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i165 = (int) $c17;

        if $i165 != 38 goto label44;

        $c61 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i166 = (int) $c61;

        if $i166 != 61 goto label44;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mBAND_ASSIGN(boolean)>(1);

        goto label73;

     label44:
        $c18 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i167 = (int) $c18;

        if $i167 != 38 goto label45;

        $c60 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i168 = (int) $c60;

        if $i168 != 38 goto label45;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mLAND(boolean)>(1);

        goto label73;

     label45:
        $c19 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i169 = (int) $c19;

        if $i169 != 46 goto label46;

        $c59 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i170 = (int) $c59;

        if $i170 != 46 goto label46;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mRANGE_INCLUSIVE(boolean)>(1);

        goto label73;

     label46:
        $c20 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i171 = (int) $c20;

        if $i171 != 42 goto label47;

        $c58 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i172 = (int) $c58;

        if $i172 != 46 goto label47;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mSPREAD_DOT(boolean)>(1);

        goto label73;

     label47:
        $c21 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i173 = (int) $c21;

        if $i173 != 63 goto label48;

        $c57 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i174 = (int) $c57;

        if $i174 != 46 goto label48;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mOPTIONAL_DOT(boolean)>(1);

        goto label73;

     label48:
        $c22 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i175 = (int) $c22;

        if $i175 != 63 goto label49;

        $c56 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i176 = (int) $c56;

        if $i176 != 58 goto label49;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mELVIS_OPERATOR(boolean)>(1);

        goto label73;

     label49:
        $c23 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i177 = (int) $c23;

        if $i177 != 46 goto label50;

        $c55 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i178 = (int) $c55;

        if $i178 != 38 goto label50;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mMEMBER_POINTER(boolean)>(1);

        goto label73;

     label50:
        $c24 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i179 = (int) $c24;

        if $i179 != 61 goto label51;

        $c54 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i180 = (int) $c54;

        if $i180 != 126 goto label51;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mREGEX_FIND(boolean)>(1);

        goto label73;

     label51:
        $c25 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i181 = (int) $c25;

        if $i181 != 42 goto label52;

        $c53 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i182 = (int) $c53;

        if $i182 != 42 goto label52;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mSTAR_STAR(boolean)>(1);

        goto label73;

     label52:
        $c26 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i183 = (int) $c26;

        if $i183 != 45 goto label53;

        $c52 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i184 = (int) $c52;

        if $i184 != 62 goto label53;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mCLOSABLE_BLOCK_OP(boolean)>(1);

        goto label73;

     label53:
        $c27 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i185 = (int) $c27;

        if $i185 != 47 goto label54;

        $c51 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i186 = (int) $c51;

        if $i186 != 47 goto label54;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mSL_COMMENT(boolean)>(1);

        goto label73;

     label54:
        $c28 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i187 = (int) $c28;

        if $i187 != 47 goto label55;

        $c50 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i188 = (int) $c50;

        if $i188 != 42 goto label55;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mML_COMMENT(boolean)>(1);

        goto label73;

     label55:
        $c29 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i189 = (int) $c29;

        if $i189 != 63 goto label56;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mQUESTION(boolean)>(1);

        goto label73;

     label56:
        $c30 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i190 = (int) $c30;

        if $i190 != 46 goto label57;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mDOT(boolean)>(1);

        goto label73;

     label57:
        $c31 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i191 = (int) $c31;

        if $i191 != 61 goto label58;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mASSIGN(boolean)>(1);

        goto label73;

     label58:
        $c32 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i192 = (int) $c32;

        if $i192 != 33 goto label59;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mLNOT(boolean)>(1);

        goto label73;

     label59:
        $c33 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i193 = (int) $c33;

        if $i193 != 43 goto label60;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mPLUS(boolean)>(1);

        goto label73;

     label60:
        $c34 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i194 = (int) $c34;

        if $i194 != 45 goto label61;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mMINUS(boolean)>(1);

        goto label73;

     label61:
        $c35 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i195 = (int) $c35;

        if $i195 != 42 goto label62;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mSTAR(boolean)>(1);

        goto label73;

     label62:
        $c36 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i196 = (int) $c36;

        if $i196 != 37 goto label63;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mMOD(boolean)>(1);

        goto label73;

     label63:
        $c37 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i197 = (int) $c37;

        if $i197 != 62 goto label64;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mGT(boolean)>(1);

        goto label73;

     label64:
        $c38 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i198 = (int) $c38;

        if $i198 != 60 goto label65;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mLT(boolean)>(1);

        goto label73;

     label65:
        $c39 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i199 = (int) $c39;

        if $i199 != 94 goto label66;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mBXOR(boolean)>(1);

        goto label73;

     label66:
        $c40 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i200 = (int) $c40;

        if $i200 != 124 goto label67;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mBOR(boolean)>(1);

        goto label73;

     label67:
        $c41 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i201 = (int) $c41;

        if $i201 != 38 goto label68;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mBAND(boolean)>(1);

        goto label73;

     label68:
        $c42 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i202 = (int) $c42;

        if $i202 != 35 goto label69;

        $i48 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        if $i48 != 1 goto label69;

        $i49 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        if $i49 != 1 goto label69;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mSH_COMMENT(boolean)>(1);

        goto label73;

     label69:
        $c105 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i203 = (int) $c105;

        if $i203 != 47 goto label70;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mREGEXP_LITERAL(boolean)>(1);

        goto label73;

     label70:
        $r4 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_0>;

        $c43 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i204 = (int) $c43;

        $z0 = virtualinvoke $r4.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i204);

        if $z0 == 0 goto label71;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mIDENT(boolean)>(1);

        goto label73;

     label71:
        $c44 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i205 = (int) $c44;

        $i207 = (int) 65535;

        if $i205 != $i207 goto label72;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void uponEOF()>();

        $r7 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(1);

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = $r7;

        goto label73;

     label72:
        $r17 = new groovyjarjarantlr.NoViableAltForCharException;

        $c45 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r6 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i46 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i47 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r17.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c45, $r6, $i46, $i47);

        throw $r17;

     label73:
        $r16 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken>;

        if $r16 != null goto label75;

     label74:
        goto label01;

     label75:
        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken>;

        $i1 = virtualinvoke $r1.<groovyjarjarantlr.Token: int getType()>();

        $r2 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken>;

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setType(int)>($i1);

        $r3 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken>;

     label76:
        return $r3;

     label77:
        $r14 := @caughtexception;

        $r18 = new groovyjarjarantlr.TokenStreamRecognitionException;

        specialinvoke $r18.<groovyjarjarantlr.TokenStreamRecognitionException: void <init>(groovyjarjarantlr.RecognitionException)>($r14);

        throw $r18;

     label78:
        $r8 := @caughtexception;

        $z1 = $r8 instanceof groovyjarjarantlr.CharStreamIOException;

        if $z1 == 0 goto label79;

        $r19 = new groovyjarjarantlr.TokenStreamIOException;

        $r12 = (groovyjarjarantlr.CharStreamIOException) $r8;

        $r13 = $r12.<groovyjarjarantlr.CharStreamIOException: java.io.IOException io>;

        specialinvoke $r19.<groovyjarjarantlr.TokenStreamIOException: void <init>(java.io.IOException)>($r13);

        throw $r19;

     label79:
        $r20 = new groovyjarjarantlr.TokenStreamException;

        $r10 = virtualinvoke $r8.<groovyjarjarantlr.CharStreamException: java.lang.String getMessage()>();

        specialinvoke $r20.<groovyjarjarantlr.TokenStreamException: void <init>(java.lang.String)>($r10);

        throw $r20;

        catch groovyjarjarantlr.RecognitionException from label02 to label74 with label77;
        catch groovyjarjarantlr.RecognitionException from label75 to label76 with label77;
        catch groovyjarjarantlr.CharStreamException from label02 to label74 with label78;
        catch groovyjarjarantlr.CharStreamException from label75 to label76 with label78;
        catch groovyjarjarantlr.CharStreamException from label77 to label78 with label78;
    }

    public final void mQUESTION(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(63);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 93 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(93);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mLPAREN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.LexerSharedInputState $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        java.lang.String $r9;
        groovyjarjarantlr.Token $r3, r8;
        boolean z0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r5, $r7;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        char[] $r6;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r8 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(40);

        $r2 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i1 = $r2.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i1 != 0 goto label1;

        $i4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int parenLevel>;

        $i5 = $i4 + 1;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int parenLevel> = $i5;

     label1:
        if z0 == 0 goto label2;

        if null != null goto label2;

        $i7 = (int) -1;

        if 88 == $i7 goto label2;

        $r3 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(88);

        r8 = $r3;

        $r9 = new java.lang.String;

        $r5 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r6 = virtualinvoke $r5.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r7 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r7.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>($r6, $i0, $i3);

        virtualinvoke $r3.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r9);

     label2:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r8;

        return;
    }

    public final void mRPAREN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.LexerSharedInputState $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        java.lang.String $r9;
        groovyjarjarantlr.Token $r3, r8;
        boolean z0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r5, $r7;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        char[] $r6;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r8 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(41);

        $r2 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i1 = $r2.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i1 != 0 goto label1;

        $i4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int parenLevel>;

        $i5 = $i4 - 1;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int parenLevel> = $i5;

     label1:
        if z0 == 0 goto label2;

        if null != null goto label2;

        $i7 = (int) -1;

        if 119 == $i7 goto label2;

        $r3 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(119);

        r8 = $r3;

        $r9 = new java.lang.String;

        $r5 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r6 = virtualinvoke $r5.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r7 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r7.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>($r6, $i0, $i3);

        virtualinvoke $r3.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r9);

     label2:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r8;

        return;
    }

    public final void mLBRACK(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.LexerSharedInputState $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        java.lang.String $r9;
        groovyjarjarantlr.Token $r3, r8;
        boolean z0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r5, $r7;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        char[] $r6;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r8 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(91);

        $r2 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i1 = $r2.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i1 != 0 goto label1;

        $i4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int parenLevel>;

        $i5 = $i4 + 1;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int parenLevel> = $i5;

     label1:
        if z0 == 0 goto label2;

        if null != null goto label2;

        $i7 = (int) -1;

        if 82 == $i7 goto label2;

        $r3 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(82);

        r8 = $r3;

        $r9 = new java.lang.String;

        $r5 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r6 = virtualinvoke $r5.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r7 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r7.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>($r6, $i0, $i3);

        virtualinvoke $r3.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r9);

     label2:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r8;

        return;
    }

    public final void mRBRACK(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.LexerSharedInputState $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        java.lang.String $r9;
        groovyjarjarantlr.Token $r3, r8;
        boolean z0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r5, $r7;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        char[] $r6;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r8 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(93);

        $r2 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i1 = $r2.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i1 != 0 goto label1;

        $i4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int parenLevel>;

        $i5 = $i4 - 1;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int parenLevel> = $i5;

     label1:
        if z0 == 0 goto label2;

        if null != null goto label2;

        $i7 = (int) -1;

        if 83 == $i7 goto label2;

        $r3 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(83);

        r8 = $r3;

        $r9 = new java.lang.String;

        $r5 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r6 = virtualinvoke $r5.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r7 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r7.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>($r6, $i0, $i3);

        virtualinvoke $r3.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r9);

     label2:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r8;

        return;
    }

    public final void mLCURLY(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.LexerSharedInputState $r2;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r5, $r7;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i3, $i5;
        char[] $r6;
        java.lang.String $r9;
        groovyjarjarantlr.Token $r3, r8;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r8 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(123);

        $r2 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i1 = $r2.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i1 != 0 goto label1;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void pushParenLevel()>();

     label1:
        if z0 == 0 goto label2;

        if null != null goto label2;

        $i5 = (int) -1;

        if 122 == $i5 goto label2;

        $r3 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(122);

        r8 = $r3;

        $r9 = new java.lang.String;

        $r5 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r6 = virtualinvoke $r5.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r7 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r7.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>($r6, $i0, $i3);

        virtualinvoke $r3.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r9);

     label2:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r8;

        return;
    }

    public final void mRCURLY(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.LexerSharedInputState $r2;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        java.lang.String $r9;
        groovyjarjarantlr.Token $r3, r8;
        boolean z0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r5, $r7;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        char[] $r6;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r8 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(125);

        $r2 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i1 = $r2.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i1 != 0 goto label1;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void popParenLevel()>();

        $i4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int stringCtorState>;

        if $i4 == 0 goto label1;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void restartStringCtor(boolean)>(1);

     label1:
        if z0 == 0 goto label2;

        if null != null goto label2;

        $i6 = (int) -1;

        if 123 == $i6 goto label2;

        $r3 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(123);

        r8 = $r3;

        $r9 = new java.lang.String;

        $r5 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r6 = virtualinvoke $r5.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r7 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r7.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>($r6, $i0, $i3);

        virtualinvoke $r3.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r9);

     label2:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r8;

        return;
    }

    public final void mCOLON(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(58);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 132 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(132);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mCOMMA(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(44);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 96 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(96);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mDOT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(46);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 87 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(87);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(61);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 120 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(120);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mCOMPARE_TO(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("<=>");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 174 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(174);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mEQUAL(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("==");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 173 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(173);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mLNOT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(33);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 187 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(187);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mBNOT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(126);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 186 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(186);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mNOT_EQUAL(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("!=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 172 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(172);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    protected final void mDIV(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(47);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 182 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(182);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    protected final void mDIV_ASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("/=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 156 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(156);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mPLUS(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(43);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 144 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(144);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mPLUS_ASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("+=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 153 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(153);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mINC(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("++");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 181 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(181);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mMINUS(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(45);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 145 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(145);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mMINUS_ASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("-=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 154 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(154);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mDEC(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("--");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 184 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(184);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mSTAR(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(42);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 109 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(109);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mSTAR_ASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("*=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 155 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(155);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mMOD(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(37);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 183 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(183);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mMOD_ASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("%=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 157 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(157);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mSR(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>(">>");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 98 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(98);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mSR_ASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>(">>=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 158 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(158);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mBSR(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>(">>>");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 99 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(99);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mBSR_ASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>(">>>=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 159 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(159);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mGE(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>(">=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 176 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(176);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mGT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>(">");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 97 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(97);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mSL(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("<<");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 178 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(178);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mSL_ASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("<<=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 160 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(160);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mLE(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("<=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 175 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(175);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mLT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(60);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 86 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(86);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mBXOR(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(94);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 169 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(169);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mBXOR_ASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("^=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 162 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(162);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mBOR(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(124);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 168 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(168);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mBOR_ASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("|=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 163 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(163);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mLOR(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("||");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 166 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(166);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mBAND(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(38);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 121 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(121);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mBAND_ASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("&=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 161 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(161);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mLAND(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("&&");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 167 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(167);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mSEMI(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(59);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 124 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(124);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mDOLLAR(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(36);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 200 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(200);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mRANGE_INCLUSIVE(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("..");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 179 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(179);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mRANGE_EXCLUSIVE(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("..<");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 180 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(180);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mTRIPLE_DOT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("...");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 130 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(130);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mSPREAD_DOT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("*.");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 150 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(150);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mOPTIONAL_DOT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("?.");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 151 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(151);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mELVIS_OPERATOR(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("?:");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 165 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(165);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mMEMBER_POINTER(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>(".&");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 152 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(152);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mREGEX_FIND(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("=~");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 170 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(170);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mREGEX_MATCH(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("==~");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 171 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(171);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mSTAR_STAR(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("**");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 185 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(185);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mSTAR_STAR_ASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("**=");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 164 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(164);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mCLOSABLE_BLOCK_OP(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("->");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 131 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(131);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mWS(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.Token $r5, r10;
        boolean z0, $z1;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        groovyjarjarantlr.LexerSharedInputState $r4;
        short s13, s15, s16;
        int $i0, $i6, $i7, $i8, $i9, $i10, i14, $i17, $i18, $i19, $i20, $i21, $i22, $i24;
        java.lang.String $r3, $r12;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r7, $r9;
        char $c1, $c2, $c3, $c4, $c5, $c11, $c12;
        groovyjarjarantlr.NoViableAltForCharException $r11;
        char[] $r8;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r10 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        s13 = 201;

        s16 = 201;

        s15 = 201;

        i14 = 0;

     label01:
        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i17 = (int) $c1;

        if $i17 != 92 goto label03;

        $c11 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i18 = (int) $c11;

        if $i18 == 10 goto label02;

        $c12 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i19 = (int) $c12;

        if $i19 != 13 goto label03;

     label02:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(92);

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mONE_NL(boolean,boolean)>(0, 0);

        goto label08;

     label03:
        $c2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i20 = (int) $c2;

        if $i20 != 32 goto label04;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(32);

        goto label08;

     label04:
        $c3 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i21 = (int) $c3;

        if $i21 != 9 goto label05;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(9);

        goto label08;

     label05:
        $c4 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i22 = (int) $c4;

        if $i22 != 12 goto label06;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(12);

        goto label08;

     label06:
        if i14 < 1 goto label07;

        goto label09;

     label07:
        $r11 = new groovyjarjarantlr.NoViableAltForCharException;

        $c5 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r3 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i6 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i7 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r11.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c5, $r3, $i6, $i7);

        throw $r11;

     label08:
        i14 = i14 + 1;

        goto label01;

     label09:
        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i8 = $r4.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i8 != 0 goto label10;

        $z1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: boolean whitespaceIncluded>;

        if $z1 != 0 goto label10;

        s13 = -1;

        s16 = -1;

        s15 = -1;

     label10:
        if z0 == 0 goto label11;

        if null != null goto label11;

        $i24 = (int) -1;

        if s15 == $i24 goto label11;

        $r5 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(s16);

        r10 = $r5;

        $r12 = new java.lang.String;

        $r7 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r8 = virtualinvoke $r7.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r9 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i9 = virtualinvoke $r9.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i10 = $i9 - $i0;

        specialinvoke $r12.<java.lang.String: void <init>(char[],int,int)>($r8, $i0, $i10);

        virtualinvoke $r5.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r12);

     label11:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r10;

        return;
    }

    protected final void mONE_NL(boolean, boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.Token $r6, r15;
        boolean z0, z1;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        groovyjarjarantlr.LexerSharedInputState $r16;
        int $i0, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i19;
        java.lang.String $r3, $r18;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r5, $r8, $r10, $r11, $r12, $r13, $r14;
        char $c1, $c2, $c3, $c4, $c11;
        groovyjarjarantlr.NoViableAltForCharException $r17;
        char[] $r9;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r15 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i14 = (int) $c1;

        if $i14 != 13 goto label1;

        $c11 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i15 = (int) $c11;

        if $i15 != 10 goto label1;

        $r13 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i12 = virtualinvoke $r13.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("\r\n");

        $r14 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r14.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i12);

        goto label4;

     label1:
        $c2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i16 = (int) $c2;

        if $i16 != 13 goto label2;

        $r11 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i10 = virtualinvoke $r11.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(13);

        $r12 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r12.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i10);

        goto label4;

     label2:
        $c3 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i17 = (int) $c3;

        if $i17 != 10 goto label3;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i7 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(10);

        $r5 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r5.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i7);

        goto label4;

     label3:
        $r17 = new groovyjarjarantlr.NoViableAltForCharException;

        $c4 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r3 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i5 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i6 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r17.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c4, $r3, $i5, $i6);

        throw $r17;

     label4:
        $r16 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i13 = $r16.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i13 != 0 goto label5;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void newlineCheck(boolean)>(z1);

     label5:
        if z0 == 0 goto label6;

        if null != null goto label6;

        $i19 = (int) -1;

        if 202 == $i19 goto label6;

        $r6 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(202);

        r15 = $r6;

        $r18 = new java.lang.String;

        $r8 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r9 = virtualinvoke $r8.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r10 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i8 = virtualinvoke $r10.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i9 = $i8 - $i0;

        specialinvoke $r18.<java.lang.String: void <init>(char[],int,int)>($r9, $i0, $i9);

        virtualinvoke $r6.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r18);

     label6:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r15;

        return;
    }

    public final void mNLS(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        byte b19, b22, b23;
        groovyjarjarantlr.Token $r2, r11;
        boolean z0, $z1, $z2;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        groovyjarjarantlr.LexerSharedInputState $r12;
        int $i0, $i2, $i3, $i4, $i9, $i10, i20, $i21, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i37;
        java.lang.String $r10, $r14;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6, $r7, $r8;
        char $c1, $c5, $c6, $c7, $c8, $c11, $c12, $c13, $c14, $c15, $c16, $c17, $c18;
        groovyjarjarantlr.NoViableAltForCharException $r13;
        char[] $r5;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r11 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        b19 = 125;

        b23 = 125;

        b22 = 125;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mONE_NL(boolean,boolean)>(0, 1);

        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i24 = (int) $c1;

        if $i24 == 9 goto label01;

        $c13 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i25 = (int) $c13;

        if $i25 == 10 goto label01;

        $c14 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i26 = (int) $c14;

        if $i26 == 12 goto label01;

        $c15 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i27 = (int) $c15;

        if $i27 == 13 goto label01;

        $c16 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i28 = (int) $c16;

        if $i28 == 32 goto label01;

        $c17 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i29 = (int) $c17;

        if $i29 == 47 goto label01;

        $c18 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i30 = (int) $c18;

        if $i30 != 92 goto label10;

     label01:
        $z2 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: boolean whitespaceIncluded>;

        if $z2 != 0 goto label10;

        i20 = 0;

     label02:
        $c5 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i31 = (int) $c5;

        lookupswitch($i31)
        {
            case 9: goto label04;
            case 10: goto label03;
            case 12: goto label04;
            case 13: goto label03;
            case 32: goto label04;
            case 92: goto label04;
            default: goto label05;
        };

     label03:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mONE_NL(boolean,boolean)>(0, 1);

        goto label09;

     label04:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mWS(boolean)>(0);

        goto label09;

     label05:
        $c6 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i32 = (int) $c6;

        if $i32 != 47 goto label06;

        $c12 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i33 = (int) $c12;

        if $i33 != 47 goto label06;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mSL_COMMENT(boolean)>(0);

        goto label09;

     label06:
        $c7 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i34 = (int) $c7;

        if $i34 != 47 goto label07;

        $c11 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i35 = (int) $c11;

        if $i35 != 42 goto label07;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mML_COMMENT(boolean)>(0);

        goto label09;

     label07:
        if i20 < 1 goto label08;

        goto label10;

     label08:
        $r13 = new groovyjarjarantlr.NoViableAltForCharException;

        $c8 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r10 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i9 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i10 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r13.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c8, $r10, $i9, $i10);

        throw $r13;

     label09:
        i20 = i20 + 1;

        goto label02;

     label10:
        $r12 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i21 = $r12.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i21 != 0 goto label13;

        $z1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: boolean whitespaceIncluded>;

        if $z1 == 0 goto label11;

        goto label13;

     label11:
        $i4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int parenLevel>;

        if $i4 == 0 goto label12;

        b19 = -1;

        b23 = -1;

        b22 = -1;

        goto label13;

     label12:
        $r7 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r7.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i0);

        $r8 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r8.<groovyjarjarantlr.ANTLRStringBuffer: void append(java.lang.String)>("<newline>");

     label13:
        if z0 == 0 goto label14;

        if null != null goto label14;

        $i37 = (int) -1;

        if b22 == $i37 goto label14;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(b23);

        r11 = $r2;

        $r14 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r14.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i3);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r14);

     label14:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r11;

        return;
    }

    public final void mSL_COMMENT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.LexerSharedInputState $r3;
        short s5, s6, s7;
        int $i0, $i2, $i3, $i4, $i8, $i10;
        java.lang.String $r11;
        groovyjarjarantlr.Token $r4, r10;
        boolean $z0, z1, $z2;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r6, $r8;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        char $c1;
        groovyjarjarantlr.collections.impl.BitSet $r2, $r9;
        char[] $r7;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z1 := @parameter0: boolean;

        r10 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        s5 = 203;

        s7 = 203;

        s6 = 203;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("//");

     label1:
        $r2 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_1>;

        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i8 = (int) $c1;

        $z0 = virtualinvoke $r2.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i8);

        if $z0 == 0 goto label2;

        $r9 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_1>;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(groovyjarjarantlr.collections.impl.BitSet)>($r9);

        goto label1;

     label2:
        $r3 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i2 = $r3.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i2 != 0 goto label3;

        $z2 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: boolean whitespaceIncluded>;

        if $z2 != 0 goto label3;

        s5 = -1;

        s7 = -1;

        s6 = -1;

     label3:
        if z1 == 0 goto label4;

        if null != null goto label4;

        $i10 = (int) -1;

        if s6 == $i10 goto label4;

        $r4 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(s7);

        r10 = $r4;

        $r11 = new java.lang.String;

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r7 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r8 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i3 = virtualinvoke $r8.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i4 = $i3 - $i0;

        specialinvoke $r11.<java.lang.String: void <init>(char[],int,int)>($r7, $i0, $i4);

        virtualinvoke $r4.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r11);

     label4:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r10;

        return;
    }

    public final void mML_COMMENT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.Token $r4, r13;
        boolean $z0, z1, $z2, z3;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        groovyjarjarantlr.collections.impl.BitSet $r2, $r9;
        groovyjarjarantlr.RecognitionException $r12;
        groovyjarjarantlr.LexerSharedInputState $r3, $r10, $r11;
        short s17, s18, s19;
        int $i0, $i5, $i6, $i7, $i12, $i13, $i14, $i15, $i16, $i20, $i21, $i22, $i24, $i25, $i26, $i28, $i29, $i30, $i31, $i33;
        java.lang.String $r14;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r6, $r8;
        char $c1, $c2, $c3, $c4, $c8, $c9, $c10, $c11;
        char[] $r7;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z1 := @parameter0: boolean;

        r13 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        s17 = 204;

        s19 = 204;

        s18 = 204;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("/*");

     label01:
        z3 = 0;

        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i20 = (int) $c1;

        if $i20 != 42 goto label06;

        $c8 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i21 = (int) $c8;

        if $i21 < 3 goto label06;

        $c9 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i22 = (int) $c9;

        $i24 = (int) 65534;

        if $i22 > $i24 goto label06;

        $c10 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(3);

        $i25 = (int) $c10;

        if $i25 < 3 goto label06;

        $c11 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(3);

        $i26 = (int) $c11;

        $i28 = (int) 65534;

        if $i26 > $i28 goto label06;

        $i12 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int mark()>();

        z3 = 1;

        $r10 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i13 = $r10.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        $i14 = $i13 + 1;

        $r10.<groovyjarjarantlr.LexerSharedInputState: int guessing> = $i14;

     label02:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(42);

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchNot(char)>(47);

     label03:
        goto label05;

     label04:
        $r12 := @caughtexception;

        z3 = 0;

     label05:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void rewind(int)>($i12);

        $r11 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i15 = $r11.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        $i16 = $i15 - 1;

        $r11.<groovyjarjarantlr.LexerSharedInputState: int guessing> = $i16;

     label06:
        if z3 == 0 goto label07;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(42);

        goto label10;

     label07:
        $c2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i29 = (int) $c2;

        if $i29 == 10 goto label08;

        $c3 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i30 = (int) $c3;

        if $i30 != 13 goto label09;

     label08:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mONE_NL(boolean,boolean)>(0, 1);

        goto label10;

     label09:
        $r2 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_2>;

        $c4 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i31 = (int) $c4;

        $z0 = virtualinvoke $r2.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i31);

        if $z0 == 0 goto label11;

        $r9 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_2>;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(groovyjarjarantlr.collections.impl.BitSet)>($r9);

     label10:
        goto label01;

     label11:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("*/");

        $r3 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i5 = $r3.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i5 != 0 goto label12;

        $z2 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: boolean whitespaceIncluded>;

        if $z2 != 0 goto label12;

        s17 = -1;

        s19 = -1;

        s18 = -1;

     label12:
        if z1 == 0 goto label13;

        if null != null goto label13;

        $i33 = (int) -1;

        if s18 == $i33 goto label13;

        $r4 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(s19);

        r13 = $r4;

        $r14 = new java.lang.String;

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r7 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r8 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i6 = virtualinvoke $r8.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i7 = $i6 - $i0;

        specialinvoke $r14.<java.lang.String: void <init>(char[],int,int)>($r7, $i0, $i7);

        virtualinvoke $r4.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r14);

     label13:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r13;

        return;

        catch groovyjarjarantlr.RecognitionException from label02 to label03 with label04;
    }

    public final void mSH_COMMENT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.LexerSharedInputState $r4;
        groovyjarjarantlr.SemanticException $r12;
        byte b7, b8, b9;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i10, $i12;
        java.lang.String $r13;
        groovyjarjarantlr.Token $r5, r11;
        boolean $z0, z1, $z2;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r7, $r9;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        char $c3;
        groovyjarjarantlr.collections.impl.BitSet $r3, $r10;
        char[] $r8;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z1 := @parameter0: boolean;

        r11 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        b7 = 77;

        b9 = 77;

        b8 = 77;

        $i1 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        if $i1 != 1 goto label1;

        $i2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        if $i2 == 1 goto label2;

     label1:
        $r12 = new groovyjarjarantlr.SemanticException;

        specialinvoke $r12.<groovyjarjarantlr.SemanticException: void <init>(java.lang.String)>("getLine() == 1 && getColumn() == 1");

        throw $r12;

     label2:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("#!");

     label3:
        $r3 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_1>;

        $c3 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i10 = (int) $c3;

        $z0 = virtualinvoke $r3.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i10);

        if $z0 == 0 goto label4;

        $r10 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_1>;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(groovyjarjarantlr.collections.impl.BitSet)>($r10);

        goto label3;

     label4:
        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i4 = $r4.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i4 != 0 goto label5;

        $z2 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: boolean whitespaceIncluded>;

        if $z2 != 0 goto label5;

        b7 = -1;

        b9 = -1;

        b8 = -1;

     label5:
        if z1 == 0 goto label6;

        if null != null goto label6;

        $i12 = (int) -1;

        if b8 == $i12 goto label6;

        $r5 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(b9);

        r11 = $r5;

        $r13 = new java.lang.String;

        $r7 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r8 = virtualinvoke $r7.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r9 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i5 = virtualinvoke $r9.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i6 = $i5 - $i0;

        specialinvoke $r13.<java.lang.String: void <init>(char[],int,int)>($r8, $i0, $i6);

        virtualinvoke $r5.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r13);

     label6:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r11;

        return;
    }

    public final void mSTRING_LITERAL(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r2, $r3, $r8, $r10, $r12, $r13, $r17, $r18, $r19, $r20, $r24, $r25, $r27, $r28;
        groovyjarjarantlr.Token $r6, r39;
        int $i0, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i32, $i33, $i34, $i35, $i36, $i37, $i41, $i48, $i49, $i50, $i54, $i55, $i56, $i57, $i62, $i63, $i64, $i65, $i66, i67, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i78, $i79, $i80, $i81, $i82, $i84, $i85, $i86, $i88, $i89, $i90, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i111, $i113;
        groovyjarjarantlr.NoViableAltForCharException $r42, $r43;
        java.lang.String $r32, $r41, $r44;
        char[] $r9;
        boolean z0, $z1, $z2, $z3, $z4, z5, z6, z7;
        groovyjarjarantlr.collections.impl.BitSet $r11, $r15, $r26, $r30;
        groovyjarjarantlr.RecognitionException $r36, $r37, $r38;
        groovyjarjarantlr.LexerSharedInputState $r4, $r5, $r14, $r16, $r21, $r22, $r23, $r29, $r33, $r34, $r35;
        char $c1, $c2, $c3, $c4, $c5, $c6, $c15, $c18, $c28, $c29, $c30, $c31, $c38, $c39, $c40, $c42, $c43, $c44, $c45, $c46, $c47, $c51, $c52, $c53, $c58, $c59, $c60, $c61, $c68, $c69;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r39 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        i67 = 85;

        z5 = 0;

        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i72 = (int) $c1;

        if $i72 != 39 goto label05;

        $c58 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i73 = (int) $c58;

        if $i73 != 39 goto label05;

        $c59 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(3);

        $i74 = (int) $c59;

        if $i74 != 39 goto label05;

        $c60 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(4);

        $i75 = (int) $c60;

        if $i75 < 3 goto label05;

        $c61 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(4);

        $i76 = (int) $c61;

        $i78 = (int) 65534;

        if $i76 > $i78 goto label05;

        $i62 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int mark()>();

        z5 = 1;

        $r34 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i63 = $r34.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        $i64 = $i63 + 1;

        $r34.<groovyjarjarantlr.LexerSharedInputState: int guessing> = $i64;

     label01:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("\'\'\'");

     label02:
        goto label04;

     label03:
        $r38 := @caughtexception;

        z5 = 0;

     label04:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void rewind(int)>($i62);

        $r35 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i65 = $r35.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        $i66 = $i65 - 1;

        $r35.<groovyjarjarantlr.LexerSharedInputState: int guessing> = $i66;

     label05:
        if z5 == 0 goto label22;

        $r24 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i37 = virtualinvoke $r24.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("\'\'\'");

        $r25 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r25.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i37);

     label06:
        $c38 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i79 = (int) $c38;

        lookupswitch($i79)
        {
            case 10: goto label10;
            case 13: goto label10;
            case 34: goto label08;
            case 36: goto label09;
            case 92: goto label07;
            default: goto label11;
        };

     label07:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mESC(boolean)>(0);

        goto label20;

     label08:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(34);

        goto label20;

     label09:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(36);

        goto label20;

     label10:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mSTRING_NL(boolean,boolean)>(0, 1);

        goto label20;

     label11:
        z6 = 0;

        $c39 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i80 = (int) $c39;

        if $i80 != 39 goto label18;

        $c42 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i81 = (int) $c42;

        if $i81 < 3 goto label18;

        $c43 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i82 = (int) $c43;

        $i84 = (int) 65534;

        if $i82 > $i84 goto label18;

        $c44 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(3);

        $i85 = (int) $c44;

        if $i85 < 3 goto label18;

        $c45 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(3);

        $i86 = (int) $c45;

        $i88 = (int) 65534;

        if $i86 > $i88 goto label18;

        $c46 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(4);

        $i89 = (int) $c46;

        if $i89 < 3 goto label18;

        $c47 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(4);

        $i90 = (int) $c47;

        $i92 = (int) 65534;

        if $i90 > $i92 goto label18;

        $i48 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int mark()>();

        z6 = 1;

        $r29 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i49 = $r29.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        $i50 = $i49 + 1;

        $r29.<groovyjarjarantlr.LexerSharedInputState: int guessing> = $i50;

     label12:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(39);

        $r30 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_3>;

        $c51 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i93 = (int) $c51;

        $z4 = virtualinvoke $r30.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i93);

        if $z4 == 0 goto label13;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchNot(char)>(39);

        goto label15;

     label13:
        $c52 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i94 = (int) $c52;

        if $i94 != 39 goto label14;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(39);

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchNot(char)>(39);

        goto label15;

     label14:
        $r42 = new groovyjarjarantlr.NoViableAltForCharException;

        $c53 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r32 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i54 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i55 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r42.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c53, $r32, $i54, $i55);

        throw $r42;

     label15:
        goto label17;

     label16:
        $r37 := @caughtexception;

        z6 = 0;

     label17:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void rewind(int)>($i48);

        $r33 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i56 = $r33.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        $i57 = $i56 - 1;

        $r33.<groovyjarjarantlr.LexerSharedInputState: int guessing> = $i57;

     label18:
        if z6 == 0 goto label19;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(39);

        goto label20;

     label19:
        $r26 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_4>;

        $c40 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i95 = (int) $c40;

        $z3 = virtualinvoke $r26.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i95);

        if $z3 == 0 goto label21;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mSTRING_CH(boolean)>(0);

     label20:
        goto label06;

     label21:
        $r27 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i41 = virtualinvoke $r27.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("\'\'\'");

        $r28 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r28.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i41);

        goto label39;

     label22:
        z7 = 0;

        $c2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i96 = (int) $c2;

        if $i96 != 34 goto label27;

        $c28 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i97 = (int) $c28;

        if $i97 != 34 goto label27;

        $c29 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(3);

        $i98 = (int) $c29;

        if $i98 != 34 goto label27;

        $c30 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(4);

        $i99 = (int) $c30;

        if $i99 < 3 goto label27;

        $c31 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(4);

        $i100 = (int) $c31;

        $i102 = (int) 65534;

        if $i100 > $i102 goto label27;

        $i32 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int mark()>();

        z7 = 1;

        $r22 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i33 = $r22.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        $i34 = $i33 + 1;

        $r22.<groovyjarjarantlr.LexerSharedInputState: int guessing> = $i34;

     label23:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("\"\"\"");

     label24:
        goto label26;

     label25:
        $r36 := @caughtexception;

        z7 = 0;

     label26:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void rewind(int)>($i32);

        $r23 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i35 = $r23.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        $i36 = $i35 - 1;

        $r23.<groovyjarjarantlr.LexerSharedInputState: int guessing> = $i36;

     label27:
        if z7 == 0 goto label28;

        $r19 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i25 = virtualinvoke $r19.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("\"\"\"");

        $r20 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r20.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i25);

        $i26 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int mSTRING_CTOR_END(boolean,boolean,boolean)>(0, 1, 1);

        $r21 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i27 = $r21.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i27 != 0 goto label39;

        i67 = $i26;

        goto label39;

     label28:
        $c3 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i103 = (int) $c3;

        if $i103 != 39 goto label36;

        $r11 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_1>;

        $c15 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i104 = (int) $c15;

        $z1 = virtualinvoke $r11.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i104);

        if $z1 == 0 goto label36;

        $r12 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i16 = virtualinvoke $r12.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(39);

        $r13 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r13.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i16);

        $r14 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i17 = $r14.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i17 != 0 goto label29;

        $i23 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int suppressNewline>;

        $i24 = $i23 + 1;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int suppressNewline> = $i24;

     label29:
        $c68 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i105 = (int) $c68;

        lookupswitch($i105)
        {
            case 34: goto label31;
            case 36: goto label32;
            case 92: goto label30;
            default: goto label33;
        };

     label30:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mESC(boolean)>(0);

        goto label29;

     label31:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(34);

        goto label29;

     label32:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(36);

        goto label29;

     label33:
        $r15 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_4>;

        $c18 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i106 = (int) $c18;

        $z2 = virtualinvoke $r15.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i106);

        if $z2 == 0 goto label34;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mSTRING_CH(boolean)>(0);

        goto label29;

     label34:
        $r16 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i19 = $r16.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i19 != 0 goto label35;

        $i21 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int suppressNewline>;

        $i22 = $i21 - 1;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int suppressNewline> = $i22;

     label35:
        $r17 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i20 = virtualinvoke $r17.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(39);

        $r18 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r18.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i20);

        goto label39;

     label36:
        $c4 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i107 = (int) $c4;

        if $i107 != 34 goto label38;

        $c5 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i108 = (int) $c5;

        if $i108 < 3 goto label38;

        $c6 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i109 = (int) $c6;

        $i111 = (int) 65534;

        if $i109 > $i111 goto label38;

        $r2 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i7 = virtualinvoke $r2.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(34);

        $r3 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r3.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i7);

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i8 = $r4.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i8 != 0 goto label37;

        $i13 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int suppressNewline>;

        $i14 = $i13 + 1;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int suppressNewline> = $i14;

     label37:
        $i9 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int mSTRING_CTOR_END(boolean,boolean,boolean)>(0, 1, 0);

        $r5 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i10 = $r5.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i10 != 0 goto label39;

        i67 = $i9;

        goto label39;

     label38:
        $r43 = new groovyjarjarantlr.NoViableAltForCharException;

        $c69 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r41 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i70 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i71 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r43.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c69, $r41, $i70, $i71);

        throw $r43;

     label39:
        if z0 == 0 goto label40;

        if null != null goto label40;

        $i113 = (int) -1;

        if i67 == $i113 goto label40;

        $r6 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(i67);

        r39 = $r6;

        $r44 = new java.lang.String;

        $r8 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r9 = virtualinvoke $r8.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r10 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i11 = virtualinvoke $r10.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i12 = $i11 - $i0;

        specialinvoke $r44.<java.lang.String: void <init>(char[],int,int)>($r9, $i0, $i12);

        virtualinvoke $r6.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r44);

     label40:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r39;

        return;

        catch groovyjarjarantlr.RecognitionException from label01 to label02 with label03;
        catch groovyjarjarantlr.RecognitionException from label12 to label15 with label16;
        catch groovyjarjarantlr.RecognitionException from label23 to label24 with label25;
    }

    protected final void mSTRING_CH(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r5, $r7;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        groovyjarjarantlr.collections.impl.BitSet $r2;
        int $i0, $i1, $i2, $i4;
        char[] $r6;
        java.lang.String $r9;
        groovyjarjarantlr.Token $r3, r8;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r8 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $r2 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_4>;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(groovyjarjarantlr.collections.impl.BitSet)>($r2);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 205 == $i4 goto label1;

        $r3 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(205);

        r8 = $r3;

        $r9 = new java.lang.String;

        $r5 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r6 = virtualinvoke $r5.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r7 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r7.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>($r6, $i0, $i2);

        virtualinvoke $r3.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r9);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r8;

        return;
    }

    protected final void mESC(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r5, $r6, $r7, $r10, $r12, $r18, $r20, $r21, $r22, $r23, $r24, $r26, $r27, $r29, $r30, $r32, $r33, $r35, $r36, $r38, $r39, $r44, $r46, $r47, $r48, $r52, $r54, $r55, $r56, $r62, $r63;
        groovyjarjarantlr.Token $r8, r61;
        int $i0, $i4, $i5, $i7, $i8, $i9, $i10, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i29, $i30, $i32, $i33, $i34, $i35, $i41, $i42, $i44, $i45, $i46, $i52, $i53, $i59, $i60, $i78, i80, $i84, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i114, $i115, $i116, $i117, $i118, $i120, $i121, $i122, $i124, $i125, $i126, $i128, $i129, $i130, $i131, $i132, $i134, $i135, $i136, $i138, $i139, $i140, $i141, $i143;
        groovyjarjarantlr.NoViableAltForCharException $r65, $r67, $r68, $r70, $r72, $r73;
        java.lang.String $r3, $r14, $r41, $r50, $r58, $r60, $r66, $r69, $r71, $r74;
        char[] $r11, $r19, $r45, $r53;
        boolean z0;
        groovyjarjarantlr.LexerSharedInputState $r15, $r16, $r25, $r28, $r31, $r34, $r37, $r42, $r64;
        char $c1, $c2, $c3, $c6, $c11, $c12, $c13, $c14, $c27, $c28, $c31, $c36, $c37, $c38, $c39, $c40, $c43, $c47, $c48, $c49, $c50, $c51, $c54, $c55, $c56, $c57, $c58, $c61, $c62, $c63, $c64, $c65, $c66, $c67, $c68, $c69, $c70, $c71, $c72, $c73, $c74, $c75, $c76, $c77, $c79, c81, $c82, $c83, c85, $c86, c87;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r61 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i88 = (int) $c1;

        if $i88 != 92 goto label29;

        $c12 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i89 = (int) $c12;

        if $i89 == 34 goto label01;

        $c61 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i90 = (int) $c61;

        if $i90 == 36 goto label01;

        $c62 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i91 = (int) $c62;

        if $i91 == 39 goto label01;

        $c63 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i92 = (int) $c63;

        if $i92 == 48 goto label01;

        $c64 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i93 = (int) $c64;

        if $i93 == 49 goto label01;

        $c65 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i94 = (int) $c65;

        if $i94 == 50 goto label01;

        $c66 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i95 = (int) $c66;

        if $i95 == 51 goto label01;

        $c67 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i96 = (int) $c67;

        if $i96 == 52 goto label01;

        $c68 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i97 = (int) $c68;

        if $i97 == 53 goto label01;

        $c69 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i98 = (int) $c69;

        if $i98 == 54 goto label01;

        $c70 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i99 = (int) $c70;

        if $i99 == 55 goto label01;

        $c71 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i100 = (int) $c71;

        if $i100 == 92 goto label01;

        $c72 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i101 = (int) $c72;

        if $i101 == 98 goto label01;

        $c73 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i102 = (int) $c73;

        if $i102 == 102 goto label01;

        $c74 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i103 = (int) $c74;

        if $i103 == 110 goto label01;

        $c75 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i104 = (int) $c75;

        if $i104 == 114 goto label01;

        $c76 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i105 = (int) $c76;

        if $i105 == 116 goto label01;

        $c77 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i106 = (int) $c77;

        if $i106 != 117 goto label29;

     label01:
        $r62 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i78 = virtualinvoke $r62.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(92);

        $r63 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r63.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i78);

        $c79 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i107 = (int) $c79;

        lookupswitch($i107)
        {
            case 34: goto label07;
            case 36: goto label10;
            case 39: goto label08;
            case 48: goto label18;
            case 49: goto label18;
            case 50: goto label18;
            case 51: goto label18;
            case 52: goto label24;
            case 53: goto label24;
            case 54: goto label24;
            case 55: goto label24;
            case 92: goto label09;
            case 98: goto label05;
            case 102: goto label06;
            case 110: goto label02;
            case 114: goto label03;
            case 116: goto label04;
            case 117: goto label11;
            default: goto label28;
        };

     label02:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(110);

        $r31 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i24 = $r31.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i24 != 0 goto label32;

        $r32 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r32.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i0);

        $r33 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r33.<groovyjarjarantlr.ANTLRStringBuffer: void append(java.lang.String)>("\n");

        goto label32;

     label03:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(114);

        $r28 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i23 = $r28.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i23 != 0 goto label32;

        $r29 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r29.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i0);

        $r30 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r30.<groovyjarjarantlr.ANTLRStringBuffer: void append(java.lang.String)>("\r");

        goto label32;

     label04:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(116);

        $r25 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i22 = $r25.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i22 != 0 goto label32;

        $r26 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r26.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i0);

        $r27 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r27.<groovyjarjarantlr.ANTLRStringBuffer: void append(java.lang.String)>("\t");

        goto label32;

     label05:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(98);

        $r37 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i26 = $r37.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i26 != 0 goto label32;

        $r38 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r38.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i0);

        $r39 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r39.<groovyjarjarantlr.ANTLRStringBuffer: void append(java.lang.String)>("\u0008");

        goto label32;

     label06:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(102);

        $r34 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i25 = $r34.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i25 != 0 goto label32;

        $r35 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r35.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i0);

        $r36 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r36.<groovyjarjarantlr.ANTLRStringBuffer: void append(java.lang.String)>("\f");

        goto label32;

     label07:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(34);

        goto label32;

     label08:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(39);

        goto label32;

     label09:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(92);

        goto label32;

     label10:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(36);

        goto label32;

     label11:
        i80 = 0;

     label12:
        $c13 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i108 = (int) $c13;

        if $i108 != 117 goto label13;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(117);

        goto label15;

     label13:
        if i80 < 1 goto label14;

        goto label16;

     label14:
        $r65 = new groovyjarjarantlr.NoViableAltForCharException;

        $c14 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r14 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i15 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i16 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r65.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c14, $r14, $i15, $i16);

        throw $r65;

     label15:
        i80 = i80 + 1;

        goto label12;

     label16:
        $r15 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i17 = $r15.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i17 != 0 goto label17;

        $r23 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r23.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i0);

        $r24 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r24.<groovyjarjarantlr.ANTLRStringBuffer: void append(java.lang.String)>("");

     label17:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mHEX_DIGIT(boolean)>(0);

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mHEX_DIGIT(boolean)>(0);

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mHEX_DIGIT(boolean)>(0);

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mHEX_DIGIT(boolean)>(0);

        $r16 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i18 = $r16.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i18 != 0 goto label32;

        $r66 = new java.lang.String;

        $r18 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r19 = virtualinvoke $r18.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r20 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i19 = virtualinvoke $r20.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i20 = $i19 - $i0;

        specialinvoke $r66.<java.lang.String: void <init>(char[],int,int)>($r19, $i0, $i20);

        $i21 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r66, 16);

        c81 = (char) $i21;

        $r21 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r21.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i0);

        $r22 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r22.<groovyjarjarantlr.ANTLRStringBuffer: void append(char)>(c81);

        goto label32;

     label18:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchRange(char,char)>(48, 51);

        $c39 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i109 = (int) $c39;

        if $i109 < 48 goto label21;

        $c47 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i110 = (int) $c47;

        if $i110 > 55 goto label21;

        $c48 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i111 = (int) $c48;

        if $i111 < 3 goto label21;

        $c49 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i112 = (int) $c49;

        $i114 = (int) 65534;

        if $i112 > $i114 goto label21;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchRange(char,char)>(48, 55);

        $c50 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i115 = (int) $c50;

        if $i115 < 48 goto label19;

        $c55 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i116 = (int) $c55;

        if $i116 > 55 goto label19;

        $c56 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i117 = (int) $c56;

        if $i117 < 3 goto label19;

        $c57 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i118 = (int) $c57;

        $i120 = (int) 65534;

        if $i118 > $i120 goto label19;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchRange(char,char)>(48, 55);

        goto label23;

     label19:
        $c82 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i121 = (int) $c82;

        if $i121 < 3 goto label20;

        $c54 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i122 = (int) $c54;

        $i124 = (int) 65534;

        if $i122 > $i124 goto label20;

        goto label23;

     label20:
        $r67 = new groovyjarjarantlr.NoViableAltForCharException;

        $c51 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r58 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i52 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i53 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r67.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c51, $r58, $i52, $i53);

        throw $r67;

     label21:
        $c83 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i125 = (int) $c83;

        if $i125 < 3 goto label22;

        $c43 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i126 = (int) $c43;

        $i128 = (int) 65534;

        if $i126 > $i128 goto label22;

        goto label23;

     label22:
        $r68 = new groovyjarjarantlr.NoViableAltForCharException;

        $c40 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r50 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i41 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i42 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r68.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c40, $r50, $i41, $i42);

        throw $r68;

     label23:
        $r64 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i84 = $r64.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i84 != 0 goto label32;

        $r69 = new java.lang.String;

        $r52 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r53 = virtualinvoke $r52.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r54 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i44 = virtualinvoke $r54.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i45 = $i44 - $i0;

        specialinvoke $r69.<java.lang.String: void <init>(char[],int,int)>($r53, $i0, $i45);

        $i46 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r69, 8);

        c85 = (char) $i46;

        $r55 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r55.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i0);

        $r56 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r56.<groovyjarjarantlr.ANTLRStringBuffer: void append(char)>(c85);

        goto label32;

     label24:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchRange(char,char)>(52, 55);

        $c27 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i129 = (int) $c27;

        if $i129 < 48 goto label25;

        $c36 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i130 = (int) $c36;

        if $i130 > 55 goto label25;

        $c37 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i131 = (int) $c37;

        if $i131 < 3 goto label25;

        $c38 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i132 = (int) $c38;

        $i134 = (int) 65534;

        if $i132 > $i134 goto label25;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchRange(char,char)>(48, 55);

        goto label27;

     label25:
        $c86 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i135 = (int) $c86;

        if $i135 < 3 goto label26;

        $c31 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i136 = (int) $c31;

        $i138 = (int) 65534;

        if $i136 > $i138 goto label26;

        goto label27;

     label26:
        $r70 = new groovyjarjarantlr.NoViableAltForCharException;

        $c28 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r41 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i29 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i30 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r70.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c28, $r41, $i29, $i30);

        throw $r70;

     label27:
        $r42 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i32 = $r42.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i32 != 0 goto label32;

        $r71 = new java.lang.String;

        $r44 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r45 = virtualinvoke $r44.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r46 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i33 = virtualinvoke $r46.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i34 = $i33 - $i0;

        specialinvoke $r71.<java.lang.String: void <init>(char[],int,int)>($r45, $i0, $i34);

        $i35 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r71, 8);

        c87 = (char) $i35;

        $r47 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r47.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i0);

        $r48 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r48.<groovyjarjarantlr.ANTLRStringBuffer: void append(char)>(c87);

        goto label32;

     label28:
        $r72 = new groovyjarjarantlr.NoViableAltForCharException;

        $c58 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r60 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i59 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i60 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r72.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c58, $r60, $i59, $i60);

        throw $r72;

     label29:
        $c2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i139 = (int) $c2;

        if $i139 != 92 goto label31;

        $c6 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i140 = (int) $c6;

        if $i140 == 10 goto label30;

        $c11 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i141 = (int) $c11;

        if $i141 != 13 goto label31;

     label30:
        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i7 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(92);

        $r5 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r5.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i7);

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i8 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mONE_NL(boolean,boolean)>(0, 0);

        $r7 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r7.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i8);

        goto label32;

     label31:
        $r73 = new groovyjarjarantlr.NoViableAltForCharException;

        $c3 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r3 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i4 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i5 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r73.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c3, $r3, $i4, $i5);

        throw $r73;

     label32:
        if z0 == 0 goto label33;

        if null != null goto label33;

        $i143 = (int) -1;

        if 209 == $i143 goto label33;

        $r8 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(209);

        r61 = $r8;

        $r74 = new java.lang.String;

        $r10 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r11 = virtualinvoke $r10.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r12 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i9 = virtualinvoke $r12.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i10 = $i9 - $i0;

        specialinvoke $r74.<java.lang.String: void <init>(char[],int,int)>($r11, $i0, $i10);

        virtualinvoke $r8.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r74);

     label33:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r61;

        return;
    }

    protected final void mSTRING_NL(boolean, boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.LexerSharedInputState $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        java.lang.String $r14;
        groovyjarjarantlr.MismatchedCharException $r13;
        groovyjarjarantlr.Token $r4, r12;
        boolean z0, z1;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r6, $r8, $r9, $r10;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        char[] $r7;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r12 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $r2 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i1 = $r2.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i1 != 0 goto label1;

        if z1 != 0 goto label1;

        $r13 = new groovyjarjarantlr.MismatchedCharException;

        specialinvoke $r13.<groovyjarjarantlr.MismatchedCharException: void <init>(char,char,boolean,groovyjarjarantlr.CharScanner)>(10, 10, 1, r0);

        throw $r13;

     label1:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mONE_NL(boolean,boolean)>(0, 0);

        $r3 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i2 = $r3.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i2 != 0 goto label2;

        $r9 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r9.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i0);

        $r10 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r10.<groovyjarjarantlr.ANTLRStringBuffer: void append(char)>(10);

     label2:
        if z0 == 0 goto label3;

        if null != null goto label3;

        $i6 = (int) -1;

        if 210 == $i6 goto label3;

        $r4 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(210);

        r12 = $r4;

        $r14 = new java.lang.String;

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r7 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r8 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i3 = virtualinvoke $r8.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i4 = $i3 - $i0;

        specialinvoke $r14.<java.lang.String: void <init>(char[],int,int)>($r7, $i0, $i4);

        virtualinvoke $r4.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r14);

     label3:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r12;

        return;
    }

    protected final int mSTRING_CTOR_END(boolean, boolean, boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        short s36, s37, $s39;
        java.lang.String $r13, $r20, $r24, $r32;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r5, $r9, $r11, $r14, $r15, $r17, $r18;
        char[] $r10;
        groovyjarjarantlr.Token $r7, r27;
        boolean z0, $z1, z2, z3, $z4, z5, z6, $z7;
        groovyjarjarantlr.collections.impl.BitSet $r2, $r22;
        groovyjarjarantlr.RecognitionException $r26;
        groovyjarjarantlr.LexerSharedInputState $r3, $r6, $r16, $r21, $r25, $r28;
        int $i0, $i5, $i6, $i7, $i8, $i9, $i10, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i22, $i23, $i26, $i27, $i28, $i32, $i33, $i34, $i35, $i40, $i41, $i42, $i43, $i44, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i55;
        char $c1, $c2, $c3, $c4, $c11, $c12, $c19, $c21, $c24, $c25, $c29, $c30, $c31, $c38;
        groovyjarjarantlr.NoViableAltForCharException $r29, $r30, $r31;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z2 := @parameter0: boolean;

        z3 := @parameter1: boolean;

        z0 := @parameter2: boolean;

        s36 = 189;

        r27 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        s37 = 189;

        z5 = 0;

     label01:
        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i41 = (int) $c1;

        lookupswitch($i41)
        {
            case 10: goto label04;
            case 13: goto label04;
            case 39: goto label03;
            case 92: goto label02;
            default: goto label05;
        };

     label02:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mESC(boolean)>(0);

        goto label14;

     label03:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(39);

        goto label14;

     label04:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mSTRING_NL(boolean,boolean)>(0, z0);

        goto label14;

     label05:
        z6 = 0;

        $c2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i42 = (int) $c2;

        if $i42 != 34 goto label12;

        $c24 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i43 = (int) $c24;

        if $i43 < 3 goto label12;

        $c25 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i44 = (int) $c25;

        $i46 = (int) 65534;

        if $i44 > $i46 goto label12;

        if z0 == 0 goto label12;

        $i26 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int mark()>();

        z6 = 1;

        $r21 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i27 = $r21.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        $i28 = $i27 + 1;

        $r21.<groovyjarjarantlr.LexerSharedInputState: int guessing> = $i28;

     label06:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(34);

        $r22 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_5>;

        $c29 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i47 = (int) $c29;

        $z4 = virtualinvoke $r22.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i47);

        if $z4 == 0 goto label07;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchNot(char)>(34);

        goto label09;

     label07:
        $c30 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i48 = (int) $c30;

        if $i48 != 34 goto label08;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(34);

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchNot(char)>(34);

        goto label09;

     label08:
        $r29 = new groovyjarjarantlr.NoViableAltForCharException;

        $c31 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r24 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i32 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i33 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r29.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c31, $r24, $i32, $i33);

        throw $r29;

     label09:
        goto label11;

     label10:
        $r26 := @caughtexception;

        z6 = 0;

     label11:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void rewind(int)>($i26);

        $r25 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i34 = $r25.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        $i35 = $i34 - 1;

        $r25.<groovyjarjarantlr.LexerSharedInputState: int guessing> = $i35;

     label12:
        if z6 == 0 goto label13;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(34);

        goto label14;

     label13:
        $r2 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_4>;

        $c3 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i49 = (int) $c3;

        $z1 = virtualinvoke $r2.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i49);

        if $z1 == 0 goto label15;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mSTRING_CH(boolean)>(0);

     label14:
        goto label01;

     label15:
        $c4 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i50 = (int) $c4;

        lookupswitch($i50)
        {
            case 34: goto label16;
            case 36: goto label21;
            default: goto label27;
        };

     label16:
        $c11 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i51 = (int) $c11;

        if $i51 != 34 goto label17;

        $c19 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i52 = (int) $c19;

        if $i52 != 34 goto label17;

        if z0 == 0 goto label17;

        $r17 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i20 = virtualinvoke $r17.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("\"\"\"");

        $r18 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r18.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i20);

        goto label19;

     label17:
        $c38 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i53 = (int) $c38;

        if $i53 != 34 goto label18;

        if z0 != 0 goto label18;

        $r14 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i15 = virtualinvoke $r14.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(java.lang.String)>("\"");

        $r15 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r15.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i15);

        goto label19;

     label18:
        $r30 = new groovyjarjarantlr.NoViableAltForCharException;

        $c12 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r13 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i13 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i14 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r30.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c12, $r13, $i13, $i14);

        throw $r30;

     label19:
        $r16 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i16 = $r16.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i16 != 0 goto label28;

        if z3 == 0 goto label20;

        s36 = 85;

     label20:
        if z0 != 0 goto label28;

        $i17 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int suppressNewline>;

        $i18 = $i17 - 1;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int suppressNewline> = $i18;

        goto label28;

     label21:
        $r3 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i5 = $r3.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i5 != 0 goto label22;

        z5 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: boolean atValidDollarEscape()>();

     label22:
        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i6 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(36);

        $r5 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r5.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i6);

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i7 = $r6.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i7 != 0 goto label28;

        specialinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void require(boolean,java.lang.String,java.lang.String)>(z5, "illegal string body character after dollar sign", "either escape a literal dollar sign \"\\$5\" or bracket the value expression \"${5}\"");

        if z3 == 0 goto label23;

        $s39 = 188;

        goto label24;

     label23:
        $s39 = 48;

     label24:
        s36 = $s39;

        if z0 == 0 goto label25;

        $z7 = 1;

        goto label26;

     label25:
        $z7 = 0;

     label26:
        $i10 = 4 + $z7;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int stringCtorState> = $i10;

        goto label28;

     label27:
        $r31 = new groovyjarjarantlr.NoViableAltForCharException;

        $c21 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r20 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i22 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i23 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r31.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c21, $r20, $i22, $i23);

        throw $r31;

     label28:
        $r28 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i40 = $r28.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i40 != 0 goto label29;

        s37 = s36;

     label29:
        if z2 == 0 goto label30;

        if null != null goto label30;

        $i55 = (int) -1;

        if s37 == $i55 goto label30;

        $r7 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(s37);

        r27 = $r7;

        $r32 = new java.lang.String;

        $r9 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r10 = virtualinvoke $r9.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r11 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i8 = virtualinvoke $r11.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i9 = $i8 - $i0;

        specialinvoke $r32.<java.lang.String: void <init>(char[],int,int)>($r10, $i0, $i9);

        virtualinvoke $r7.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r32);

     label30:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r27;

        return s36;

        catch groovyjarjarantlr.RecognitionException from label06 to label09 with label10;
    }

    public final void mREGEXP_LITERAL(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        java.lang.String $r3, $r16, $r26;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r7, $r9, $r12, $r13, $r17, $r18;
        char[] $r8;
        groovyjarjarantlr.Token $r5, r21;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        groovyjarjarantlr.collections.impl.BitSet $r11, $r20, $r22;
        groovyjarjarantlr.LexerSharedInputState $r4, $r10, $r14, $r19, $r23;
        int $i0, $i4, $i5, $i6, $i7, $i8, $i10, $i12, $i13, $i17, $i18, $i19, $i20, $i22, $i23, i24, i25, $i27, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i39;
        char $c1, $c2, $c3, $c9, $c11, $c14, $c15, $c16, $c21, $c26, $c28;
        groovyjarjarantlr.NoViableAltForCharException $r24, $r25;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r21 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        i24 = 206;

        i25 = 0;

        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i29 = (int) $c1;

        if $i29 != 47 goto label06;

        $r11 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_6>;

        $c11 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i30 = (int) $c11;

        $z1 = virtualinvoke $r11.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i30);

        if $z1 == 0 goto label06;

        $z2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: boolean allowRegexpLiteral()>();

        if $z2 == 0 goto label06;

        $r12 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i12 = virtualinvoke $r12.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(47);

        $r13 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r13.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i12);

        $r14 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i13 = $r14.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i13 != 0 goto label01;

        $i22 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int suppressNewline>;

        $i23 = $i22 + 1;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int suppressNewline> = $i23;

     label01:
        $c14 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i31 = (int) $c14;

        if $i31 != 36 goto label02;

        $r20 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_2>;

        $c21 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i32 = (int) $c21;

        $z3 = virtualinvoke $r20.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i32);

        if $z3 == 0 goto label02;

        $z4 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: boolean atValidDollarEscape()>();

        if $z4 != 0 goto label02;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(36);

        i25 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int mREGEXP_CTOR_END(boolean,boolean)>(0, 1);

        goto label05;

     label02:
        $r22 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_7>;

        $c26 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i33 = (int) $c26;

        $z5 = virtualinvoke $r22.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i33);

        if $z5 == 0 goto label03;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mREGEXP_SYMBOL(boolean)>(0);

        i25 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int mREGEXP_CTOR_END(boolean,boolean)>(0, 1);

        goto label05;

     label03:
        $c15 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i34 = (int) $c15;

        if $i34 != 36 goto label04;

        $r17 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i19 = virtualinvoke $r17.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(36);

        $r18 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r18.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i19);

        $r19 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i20 = $r19.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i20 != 0 goto label05;

        i25 = 188;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int stringCtorState> = 6;

        goto label05;

     label04:
        $r24 = new groovyjarjarantlr.NoViableAltForCharException;

        $c16 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r16 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i17 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i18 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r24.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c16, $r16, $i17, $i18);

        throw $r24;

     label05:
        $r23 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i27 = $r23.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i27 != 0 goto label09;

        i24 = i25;

        goto label09;

     label06:
        $c28 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i35 = (int) $c28;

        if $i35 != 47 goto label07;

        $c9 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i36 = (int) $c9;

        if $i36 != 61 goto label07;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mDIV_ASSIGN(boolean)>(0);

        $r10 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i10 = $r10.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i10 != 0 goto label09;

        i24 = 156;

        goto label09;

     label07:
        $c2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i37 = (int) $c2;

        if $i37 != 47 goto label08;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mDIV(boolean)>(0);

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i6 = $r4.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i6 != 0 goto label09;

        i24 = 182;

        goto label09;

     label08:
        $r25 = new groovyjarjarantlr.NoViableAltForCharException;

        $c3 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r3 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i4 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i5 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r25.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c3, $r3, $i4, $i5);

        throw $r25;

     label09:
        if z0 == 0 goto label10;

        if null != null goto label10;

        $i39 = (int) -1;

        if i24 == $i39 goto label10;

        $r5 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(i24);

        r21 = $r5;

        $r26 = new java.lang.String;

        $r7 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r8 = virtualinvoke $r7.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r9 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i7 = virtualinvoke $r9.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i8 = $i7 - $i0;

        specialinvoke $r26.<java.lang.String: void <init>(char[],int,int)>($r8, $i0, $i8);

        virtualinvoke $r5.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r26);

     label10:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r21;

        return;
    }

    protected final void mREGEXP_SYMBOL(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        java.lang.String $r4, $r25;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r8, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r21, $r22;
        char[] $r9;
        groovyjarjarantlr.Token $r6, r23;
        boolean $z0, z1, $z2, $z3;
        groovyjarjarantlr.collections.impl.BitSet $r2, $r5, $r18, $r19;
        groovyjarjarantlr.LexerSharedInputState $r15, $r20;
        int $i0, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i19, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i37;
        char $c1, $c2, $c3, $c8, $c12, $c13, $c14, $c15, $c16, $c17, $c18, $c20, $c21, $c22;
        groovyjarjarantlr.NoViableAltForCharException $r24;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z1 := @parameter0: boolean;

        r23 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i23 = (int) $c1;

        if $i23 != 92 goto label1;

        $c17 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i24 = (int) $c17;

        if $i24 != 47 goto label1;

        $r19 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_1>;

        $c18 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(3);

        $i25 = (int) $c18;

        $z3 = virtualinvoke $r19.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i25);

        if $z3 == 0 goto label1;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(92);

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(47);

        $r20 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i19 = $r20.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i19 != 0 goto label6;

        $r21 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r21.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i0);

        $r22 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r22.<groovyjarjarantlr.ANTLRStringBuffer: void append(char)>(47);

        goto label6;

     label1:
        $c20 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i26 = (int) $c20;

        if $i26 != 92 goto label2;

        $r18 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_1>;

        $c13 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i27 = (int) $c13;

        $z2 = virtualinvoke $r18.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i27);

        if $z2 == 0 goto label2;

        $c14 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i28 = (int) $c14;

        if $i28 == 47 goto label2;

        $c15 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i29 = (int) $c15;

        if $i29 == 10 goto label2;

        $c16 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i30 = (int) $c16;

        if $i30 == 13 goto label2;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(92);

        goto label6;

     label2:
        $c21 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i31 = (int) $c21;

        if $i31 != 92 goto label4;

        $c8 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i32 = (int) $c8;

        if $i32 == 10 goto label3;

        $c12 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i33 = (int) $c12;

        if $i33 != 13 goto label4;

     label3:
        $r11 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i9 = virtualinvoke $r11.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(92);

        $r12 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r12.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i9);

        $r13 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i10 = virtualinvoke $r13.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mONE_NL(boolean,boolean)>(0, 0);

        $r14 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r14.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i10);

        $r15 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i11 = $r15.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i11 != 0 goto label6;

        $r16 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r16.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i0);

        $r17 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r17.<groovyjarjarantlr.ANTLRStringBuffer: void append(char)>(10);

        goto label6;

     label4:
        $r2 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_8>;

        $c2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i34 = (int) $c2;

        $z0 = virtualinvoke $r2.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i34);

        if $z0 == 0 goto label5;

        $r5 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_8>;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(groovyjarjarantlr.collections.impl.BitSet)>($r5);

        goto label6;

     label5:
        $r24 = new groovyjarjarantlr.NoViableAltForCharException;

        $c3 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r4 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i4 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i5 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r24.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c3, $r4, $i4, $i5);

        throw $r24;

     label6:
        $c22 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i35 = (int) $c22;

        if $i35 != 42 goto label7;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(42);

        goto label6;

     label7:
        if z1 == 0 goto label8;

        if null != null goto label8;

        $i37 = (int) -1;

        if 208 == $i37 goto label8;

        $r6 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(208);

        r23 = $r6;

        $r25 = new java.lang.String;

        $r8 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r9 = virtualinvoke $r8.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r10 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i6 = virtualinvoke $r10.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i7 = $i6 - $i0;

        specialinvoke $r25.<java.lang.String: void <init>(char[],int,int)>($r9, $i0, $i7);

        virtualinvoke $r6.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r25);

     label8:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r23;

        return;
    }

    protected final int mREGEXP_CTOR_END(boolean, boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.Token $r5, r16;
        boolean z0, z1, $z2, $z3, $z4;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        groovyjarjarantlr.collections.impl.BitSet $r15, $r17;
        groovyjarjarantlr.LexerSharedInputState $r4, $r12, $r18;
        short s14, s15, $s18;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i19, $i20, $i21, $i22, $i23, $i25;
        java.lang.String $r14, $r20;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r2, $r3, $r7, $r9, $r10, $r11;
        char $c1, $c10, $c13, $c16, $c17;
        groovyjarjarantlr.NoViableAltForCharException $r19;
        char[] $r8;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        s14 = 189;

        r16 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        s15 = 207;

     label01:
        $c16 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i20 = (int) $c16;

        if $i20 != 36 goto label02;

        $r15 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_2>;

        $c13 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i21 = (int) $c13;

        $z2 = virtualinvoke $r15.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i21);

        if $z2 == 0 goto label02;

        $z3 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: boolean atValidDollarEscape()>();

        if $z3 != 0 goto label02;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(36);

        goto label01;

     label02:
        $r17 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_7>;

        $c17 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i22 = (int) $c17;

        $z4 = virtualinvoke $r17.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i22);

        if $z4 == 0 goto label03;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mREGEXP_SYMBOL(boolean)>(0);

        goto label01;

     label03:
        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i23 = (int) $c1;

        lookupswitch($i23)
        {
            case 36: goto label06;
            case 47: goto label04;
            default: goto label09;
        };

     label04:
        $r2 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r2.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(47);

        $r3 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r3.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i2);

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i3 = $r4.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i3 != 0 goto label10;

        if z1 == 0 goto label05;

        s14 = 85;

     label05:
        $i6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int suppressNewline>;

        $i7 = $i6 - 1;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int suppressNewline> = $i7;

        goto label10;

     label06:
        $r10 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i8 = virtualinvoke $r10.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(36);

        $r11 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        virtualinvoke $r11.<groovyjarjarantlr.ANTLRStringBuffer: void setLength(int)>($i8);

        $r12 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i9 = $r12.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i9 != 0 goto label10;

        if z1 == 0 goto label07;

        $s18 = 188;

        goto label08;

     label07:
        $s18 = 48;

     label08:
        s14 = $s18;

        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int stringCtorState> = 6;

        goto label10;

     label09:
        $r19 = new groovyjarjarantlr.NoViableAltForCharException;

        $c10 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r14 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i11 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i12 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r19.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c10, $r14, $i11, $i12);

        throw $r19;

     label10:
        $r18 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i19 = $r18.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i19 != 0 goto label11;

        s15 = s14;

     label11:
        if z0 == 0 goto label12;

        if null != null goto label12;

        $i25 = (int) -1;

        if s15 == $i25 goto label12;

        $r5 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(s15);

        r16 = $r5;

        $r20 = new java.lang.String;

        $r7 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r8 = virtualinvoke $r7.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r9 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i4 = virtualinvoke $r9.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i5 = $i4 - $i0;

        specialinvoke $r20.<java.lang.String: void <init>(char[],int,int)>($r8, $i0, $i5);

        virtualinvoke $r5.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r20);

     label12:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r16;

        return s14;
    }

    protected final void mHEX_DIGIT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i2, $i3, $i5, $i6, $i7, $i9;
        java.lang.String $r8, $r11;
        groovyjarjarantlr.Token $r2, r9;
        boolean z0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        char $c1, $c4;
        groovyjarjarantlr.NoViableAltForCharException $r10;
        char[] $r5;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r9 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i7 = (int) $c1;

        tableswitch($i7)
        {
            case 48: goto label1;
            case 49: goto label1;
            case 50: goto label1;
            case 51: goto label1;
            case 52: goto label1;
            case 53: goto label1;
            case 54: goto label1;
            case 55: goto label1;
            case 56: goto label1;
            case 57: goto label1;
            case 58: goto label4;
            case 59: goto label4;
            case 60: goto label4;
            case 61: goto label4;
            case 62: goto label4;
            case 63: goto label4;
            case 64: goto label4;
            case 65: goto label2;
            case 66: goto label2;
            case 67: goto label2;
            case 68: goto label2;
            case 69: goto label2;
            case 70: goto label2;
            case 71: goto label4;
            case 72: goto label4;
            case 73: goto label4;
            case 74: goto label4;
            case 75: goto label4;
            case 76: goto label4;
            case 77: goto label4;
            case 78: goto label4;
            case 79: goto label4;
            case 80: goto label4;
            case 81: goto label4;
            case 82: goto label4;
            case 83: goto label4;
            case 84: goto label4;
            case 85: goto label4;
            case 86: goto label4;
            case 87: goto label4;
            case 88: goto label4;
            case 89: goto label4;
            case 90: goto label4;
            case 91: goto label4;
            case 92: goto label4;
            case 93: goto label4;
            case 94: goto label4;
            case 95: goto label4;
            case 96: goto label4;
            case 97: goto label3;
            case 98: goto label3;
            case 99: goto label3;
            case 100: goto label3;
            case 101: goto label3;
            case 102: goto label3;
            default: goto label4;
        };

     label1:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchRange(char,char)>(48, 57);

        goto label5;

     label2:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchRange(char,char)>(65, 70);

        goto label5;

     label3:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchRange(char,char)>(97, 102);

        goto label5;

     label4:
        $r10 = new groovyjarjarantlr.NoViableAltForCharException;

        $c4 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r8 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i5 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i6 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r10.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c4, $r8, $i5, $i6);

        throw $r10;

     label5:
        if z0 == 0 goto label6;

        if null != null goto label6;

        $i9 = (int) -1;

        if 211 == $i9 goto label6;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(211);

        r9 = $r2;

        $r11 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r11.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i3);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r11);

     label6:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r9;

        return;
    }

    protected final void mVOCAB(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchRange(char,char)>(3, 255);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 212 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(212);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mIDENT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.Token $r3, r18;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        groovyjarjarantlr.collections.impl.BitSet $r19;
        groovyjarjarantlr.LexerSharedInputState $r2;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i16, $i18, i19, $i21, $i22, $i23, $i24, $i25, $i26, $i28;
        java.lang.String $r10, $r15, $r20, $r21, $r22;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r5, $r7, $r9, $r12, $r14, $r17;
        char $c1, $c12, $c13, $c14, $c15, $c17, $c20;
        char[] $r6, $r11, $r16;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r18 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        i16 = 84;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mLETTER(boolean)>(0);

     label01:
        $r19 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_0>;

        $c17 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i21 = (int) $c17;

        $z4 = virtualinvoke $r19.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i21);

        if $z4 == 0 goto label02;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mLETTER(boolean)>(0);

        goto label01;

     label02:
        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i22 = (int) $c1;

        if $i22 < 48 goto label03;

        $c15 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i23 = (int) $c15;

        if $i23 > 57 goto label03;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mDIGIT(boolean)>(0);

        goto label01;

     label03:
        $r2 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i2 = $r2.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i2 != 0 goto label10;

        $i5 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int stringCtorState>;

        if $i5 == 0 goto label05;

        $c12 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i24 = (int) $c12;

        if $i24 != 46 goto label04;

        $c13 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $i25 = (int) $c13;

        if $i25 == 36 goto label04;

        $c14 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(2);

        $z3 = staticinvoke <java.lang.Character: boolean isJavaIdentifierStart(char)>($c14);

        if $z3 == 0 goto label04;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void restartStringCtor(boolean)>(0);

        goto label05;

     label04:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void restartStringCtor(boolean)>(1);

     label05:
        $i18 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int testLiteralsTable(int)>(84);

        i19 = $i18;

        if $i18 == 110 goto label06;

        if $i18 == 81 goto label06;

        if $i18 != 138 goto label08;

     label06:
        $c20 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i26 = (int) $c20;

        if $i26 == 46 goto label07;

        $i10 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int lastSigTokenType>;

        if $i10 == 87 goto label07;

        $i11 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int lastSigTokenType>;

        if $i11 != 78 goto label08;

     label07:
        i19 = 84;

     label08:
        i16 = i19;

        $z5 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: boolean assertEnabled>;

        if $z5 == 0 goto label09;

        $r15 = "assert";

        $r20 = new java.lang.String;

        $r14 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r16 = virtualinvoke $r14.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r17 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i8 = virtualinvoke $r17.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i9 = $i8 - $i0;

        specialinvoke $r20.<java.lang.String: void <init>(char[],int,int)>($r16, $i0, $i9);

        $z2 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z2 == 0 goto label09;

        i16 = 143;

     label09:
        $z6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: boolean enumEnabled>;

        if $z6 == 0 goto label10;

        $r10 = "enum";

        $r21 = new java.lang.String;

        $r9 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r11 = virtualinvoke $r9.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r12 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i6 = virtualinvoke $r12.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i7 = $i6 - $i0;

        specialinvoke $r21.<java.lang.String: void <init>(char[],int,int)>($r11, $i0, $i7);

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        if $z1 == 0 goto label10;

        i16 = 91;

     label10:
        if z0 == 0 goto label11;

        if null != null goto label11;

        $i28 = (int) -1;

        if i16 == $i28 goto label11;

        $r3 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(i16);

        r18 = $r3;

        $r22 = new java.lang.String;

        $r5 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r6 = virtualinvoke $r5.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r7 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i3 = virtualinvoke $r7.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i4 = $i3 - $i0;

        specialinvoke $r22.<java.lang.String: void <init>(char[],int,int)>($r6, $i0, $i4);

        virtualinvoke $r3.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r22);

     label11:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r18;

        return;
    }

    protected final void mLETTER(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i2, $i3, $i6, $i7, $i9, $i10, $i11, $i13, $i15;
        java.lang.String $r8, $r11;
        groovyjarjarantlr.Token $r2, r9;
        boolean z0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        char $c1, $c4, $c5, $c8;
        groovyjarjarantlr.NoViableAltForCharException $r10;
        char[] $r5;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r9 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i9 = (int) $c1;

        tableswitch($i9)
        {
            case 65: goto label02;
            case 66: goto label02;
            case 67: goto label02;
            case 68: goto label02;
            case 69: goto label02;
            case 70: goto label02;
            case 71: goto label02;
            case 72: goto label02;
            case 73: goto label02;
            case 74: goto label02;
            case 75: goto label02;
            case 76: goto label02;
            case 77: goto label02;
            case 78: goto label02;
            case 79: goto label02;
            case 80: goto label02;
            case 81: goto label02;
            case 82: goto label02;
            case 83: goto label02;
            case 84: goto label02;
            case 85: goto label02;
            case 86: goto label02;
            case 87: goto label02;
            case 88: goto label02;
            case 89: goto label02;
            case 90: goto label02;
            case 91: goto label07;
            case 92: goto label07;
            case 93: goto label07;
            case 94: goto label07;
            case 95: goto label06;
            case 96: goto label07;
            case 97: goto label01;
            case 98: goto label01;
            case 99: goto label01;
            case 100: goto label01;
            case 101: goto label01;
            case 102: goto label01;
            case 103: goto label01;
            case 104: goto label01;
            case 105: goto label01;
            case 106: goto label01;
            case 107: goto label01;
            case 108: goto label01;
            case 109: goto label01;
            case 110: goto label01;
            case 111: goto label01;
            case 112: goto label01;
            case 113: goto label01;
            case 114: goto label01;
            case 115: goto label01;
            case 116: goto label01;
            case 117: goto label01;
            case 118: goto label01;
            case 119: goto label01;
            case 120: goto label01;
            case 121: goto label01;
            case 122: goto label01;
            case 123: goto label07;
            case 124: goto label07;
            case 125: goto label07;
            case 126: goto label07;
            case 127: goto label07;
            case 128: goto label07;
            case 129: goto label07;
            case 130: goto label07;
            case 131: goto label07;
            case 132: goto label07;
            case 133: goto label07;
            case 134: goto label07;
            case 135: goto label07;
            case 136: goto label07;
            case 137: goto label07;
            case 138: goto label07;
            case 139: goto label07;
            case 140: goto label07;
            case 141: goto label07;
            case 142: goto label07;
            case 143: goto label07;
            case 144: goto label07;
            case 145: goto label07;
            case 146: goto label07;
            case 147: goto label07;
            case 148: goto label07;
            case 149: goto label07;
            case 150: goto label07;
            case 151: goto label07;
            case 152: goto label07;
            case 153: goto label07;
            case 154: goto label07;
            case 155: goto label07;
            case 156: goto label07;
            case 157: goto label07;
            case 158: goto label07;
            case 159: goto label07;
            case 160: goto label07;
            case 161: goto label07;
            case 162: goto label07;
            case 163: goto label07;
            case 164: goto label07;
            case 165: goto label07;
            case 166: goto label07;
            case 167: goto label07;
            case 168: goto label07;
            case 169: goto label07;
            case 170: goto label07;
            case 171: goto label07;
            case 172: goto label07;
            case 173: goto label07;
            case 174: goto label07;
            case 175: goto label07;
            case 176: goto label07;
            case 177: goto label07;
            case 178: goto label07;
            case 179: goto label07;
            case 180: goto label07;
            case 181: goto label07;
            case 182: goto label07;
            case 183: goto label07;
            case 184: goto label07;
            case 185: goto label07;
            case 186: goto label07;
            case 187: goto label07;
            case 188: goto label07;
            case 189: goto label07;
            case 190: goto label07;
            case 191: goto label07;
            case 192: goto label03;
            case 193: goto label03;
            case 194: goto label03;
            case 195: goto label03;
            case 196: goto label03;
            case 197: goto label03;
            case 198: goto label03;
            case 199: goto label03;
            case 200: goto label03;
            case 201: goto label03;
            case 202: goto label03;
            case 203: goto label03;
            case 204: goto label03;
            case 205: goto label03;
            case 206: goto label03;
            case 207: goto label03;
            case 208: goto label03;
            case 209: goto label03;
            case 210: goto label03;
            case 211: goto label03;
            case 212: goto label03;
            case 213: goto label03;
            case 214: goto label03;
            case 215: goto label07;
            case 216: goto label04;
            case 217: goto label04;
            case 218: goto label04;
            case 219: goto label04;
            case 220: goto label04;
            case 221: goto label04;
            case 222: goto label04;
            case 223: goto label04;
            case 224: goto label04;
            case 225: goto label04;
            case 226: goto label04;
            case 227: goto label04;
            case 228: goto label04;
            case 229: goto label04;
            case 230: goto label04;
            case 231: goto label04;
            case 232: goto label04;
            case 233: goto label04;
            case 234: goto label04;
            case 235: goto label04;
            case 236: goto label04;
            case 237: goto label04;
            case 238: goto label04;
            case 239: goto label04;
            case 240: goto label04;
            case 241: goto label04;
            case 242: goto label04;
            case 243: goto label04;
            case 244: goto label04;
            case 245: goto label04;
            case 246: goto label04;
            case 247: goto label07;
            case 248: goto label05;
            case 249: goto label05;
            case 250: goto label05;
            case 251: goto label05;
            case 252: goto label05;
            case 253: goto label05;
            case 254: goto label05;
            case 255: goto label05;
            default: goto label07;
        };

     label01:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchRange(char,char)>(97, 122);

        goto label09;

     label02:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchRange(char,char)>(65, 90);

        goto label09;

     label03:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchRange(char,char)>(192, 214);

        goto label09;

     label04:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchRange(char,char)>(216, 246);

        goto label09;

     label05:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchRange(char,char)>(248, 255);

        goto label09;

     label06:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(95);

        goto label09;

     label07:
        $c4 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i10 = (int) $c4;

        if $i10 < 256 goto label08;

        $c8 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i11 = (int) $c8;

        $i13 = (int) 65534;

        if $i11 > $i13 goto label08;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchRange(char,char)>(256, 65534);

        goto label09;

     label08:
        $r10 = new groovyjarjarantlr.NoViableAltForCharException;

        $c5 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r8 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i6 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i7 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r10.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c5, $r8, $i6, $i7);

        throw $r10;

     label09:
        if z0 == 0 goto label10;

        if null != null goto label10;

        $i15 = (int) -1;

        if 213 == $i15 goto label10;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(213);

        r9 = $r2;

        $r11 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r11.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i3);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r11);

     label10:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r9;

        return;
    }

    protected final void mDIGIT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchRange(char,char)>(48, 57);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 214 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(214);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mNUM_INT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        short s97, s107, s108;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r6, $r8;
        groovyjarjarantlr.Token $r4, r51, r52, r54, r55, r56, r57, r58;
        int $i0, $i3, $i5, $i6, $i7, $i9, $i10, $i12, $i14, $i15, $i16, $i20, $i21, $i22, $i23, $i24, $i27, $i28, $i30, $i31, $i35, $i36, $i37, $i38, $i39, $i43, $i44, $i45, $i46, $i54, $i57, $i59, $i60, $i62, $i63, $i70, $i71, $i72, $i76, $i77, $i80, $i81, $i82, $i85, $i86, $i88, $i89, $i91, $i92, $i95, $i96, i98, i100, i101, i102, i104, $i106, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i147;
        groovyjarjarantlr.NoViableAltForCharException $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72;
        java.lang.String $r10, $r13, $r16, $r20, $r24, $r28, $r33, $r35, $r37, $r40, $r43, $r46, $r48, $r60, $r73;
        char[] $r7;
        boolean z0, $z1, z2, $z3, z4, z5;
        groovyjarjarantlr.collections.impl.BitSet $r26, $r53;
        groovyjarjarantlr.RecognitionException $r49, $r50;
        groovyjarjarantlr.LexerSharedInputState $r2, $r3, $r11, $r14, $r15, $r17, $r18, $r21, $r22, $r25, $r29, $r30, $r31, $r38, $r41, $r44, $r59;
        char $c1, $c2, $c4, $c8, $c11, $c13, $c17, $c18, $c19, $c25, $c26, $c29, $c32, $c33, $c34, $c40, $c41, $c42, $c47, $c48, $c49, $c50, $c51, $c52, $c53, $c55, $c56, $c58, $c61, $c64, $c65, $c66, $c67, $c68, $c69, $c73, $c74, $c75, $c78, $c79, $c83, $c84, $c87, $c90, $c93, $c94, $c99, $c103, $c105;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r51 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        s97 = 194;

        s108 = 194;

        s107 = 194;

        z2 = 0;

        r52 = null;

        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i109 = (int) $c1;

        tableswitch($i109)
        {
            case 48: goto label01;
            case 49: goto label41;
            case 50: goto label41;
            case 51: goto label41;
            case 52: goto label41;
            case 53: goto label41;
            case 54: goto label41;
            case 55: goto label41;
            case 56: goto label41;
            case 57: goto label41;
            default: goto label44;
        };

     label01:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(48);

        $r30 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i54 = $r30.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i54 != 0 goto label02;

        z2 = 1;

     label02:
        $c55 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i110 = (int) $c55;

        if $i110 == 88 goto label03;

        $c64 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i111 = (int) $c64;

        if $i111 != 120 goto label14;

     label03:
        $c56 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i112 = (int) $c56;

        lookupswitch($i112)
        {
            case 88: goto label05;
            case 120: goto label04;
            default: goto label06;
        };

     label04:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(120);

        goto label07;

     label05:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(88);

        goto label07;

     label06:
        $r61 = new groovyjarjarantlr.NoViableAltForCharException;

        $c61 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r35 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i62 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i63 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r61.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c61, $r35, $i62, $i63);

        throw $r61;

     label07:
        $r31 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i57 = $r31.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i57 != 0 goto label08;

        z2 = 0;

     label08:
        i98 = 0;

     label09:
        $r53 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_9>;

        $c99 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i113 = (int) $c99;

        $z3 = virtualinvoke $r53.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i113);

        if $z3 == 0 goto label10;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mHEX_DIGIT(boolean)>(0);

        goto label12;

     label10:
        if i98 < 1 goto label11;

        goto label13;

     label11:
        $r62 = new groovyjarjarantlr.NoViableAltForCharException;

        $c58 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r33 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i59 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i60 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r62.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c58, $r33, $i59, $i60);

        throw $r62;

     label12:
        i98 = i98 + 1;

        goto label09;

     label13:
        goto label45;

     label14:
        z4 = 0;

        $c65 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i114 = (int) $c65;

        if $i114 < 48 goto label28;

        $c79 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i115 = (int) $c79;

        if $i115 > 57 goto label28;

        $i80 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int mark()>();

        z4 = 1;

        $r41 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i81 = $r41.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        $i82 = $i81 + 1;

        $r41.<groovyjarjarantlr.LexerSharedInputState: int guessing> = $i82;

     label15:
        i100 = 0;

     label16:
        $c83 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i116 = (int) $c83;

        if $i116 < 48 goto label17;

        $c93 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i117 = (int) $c93;

        if $i117 > 57 goto label17;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchRange(char,char)>(48, 57);

        goto label19;

     label17:
        if i100 < 1 goto label18;

        goto label20;

     label18:
        $r63 = new groovyjarjarantlr.NoViableAltForCharException;

        $c84 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r43 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i85 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i86 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r63.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c84, $r43, $i85, $i86);

        throw $r63;

     label19:
        i100 = i100 + 1;

        goto label16;

     label20:
        $c87 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i118 = (int) $c87;

        lookupswitch($i118)
        {
            case 46: goto label21;
            case 68: goto label23;
            case 69: goto label22;
            case 70: goto label23;
            case 100: goto label23;
            case 101: goto label22;
            case 102: goto label23;
            default: goto label24;
        };

     label21:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(46);

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchRange(char,char)>(48, 57);

        goto label25;

     label22:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mEXPONENT(boolean)>(0);

        goto label25;

     label23:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mFLOAT_SUFFIX(boolean)>(0);

        goto label25;

     label24:
        $r64 = new groovyjarjarantlr.NoViableAltForCharException;

        $c90 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r46 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i91 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i92 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r64.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c90, $r46, $i91, $i92);

        throw $r64;

     label25:
        goto label27;

     label26:
        $r50 := @caughtexception;

        z4 = 0;

     label27:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void rewind(int)>($i80);

        $r44 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i88 = $r44.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        $i89 = $i88 - 1;

        $r44.<groovyjarjarantlr.LexerSharedInputState: int guessing> = $i89;

     label28:
        if z4 == 0 goto label34;

        i101 = 0;

     label29:
        $c74 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i119 = (int) $c74;

        if $i119 < 48 goto label30;

        $c78 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i120 = (int) $c78;

        if $i120 > 57 goto label30;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchRange(char,char)>(48, 57);

        goto label32;

     label30:
        if i101 < 1 goto label31;

        goto label33;

     label31:
        $r65 = new groovyjarjarantlr.NoViableAltForCharException;

        $c75 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r40 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i76 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i77 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r65.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c75, $r40, $i76, $i77);

        throw $r65;

     label32:
        i101 = i101 + 1;

        goto label29;

     label33:
        goto label40;

     label34:
        $c66 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i121 = (int) $c66;

        if $i121 < 48 goto label40;

        $c67 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i122 = (int) $c67;

        if $i122 > 55 goto label40;

        i102 = 0;

     label35:
        $c68 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i123 = (int) $c68;

        if $i123 < 48 goto label36;

        $c73 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i124 = (int) $c73;

        if $i124 > 55 goto label36;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchRange(char,char)>(48, 55);

        goto label38;

     label36:
        if i102 < 1 goto label37;

        goto label39;

     label37:
        $r66 = new groovyjarjarantlr.NoViableAltForCharException;

        $c69 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r37 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i70 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i71 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r66.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c69, $r37, $i70, $i71);

        throw $r66;

     label38:
        i102 = i102 + 1;

        goto label35;

     label39:
        $r38 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i72 = $r38.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i72 != 0 goto label40;

        z2 = 0;

     label40:
        goto label45;

     label41:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchRange(char,char)>(49, 57);

     label42:
        $c2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i125 = (int) $c2;

        if $i125 < 48 goto label43;

        $c53 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i126 = (int) $c53;

        if $i126 > 57 goto label43;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchRange(char,char)>(48, 57);

        goto label42;

     label43:
        $r2 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i3 = $r2.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i3 != 0 goto label45;

        z2 = 1;

        goto label45;

     label44:
        $r67 = new groovyjarjarantlr.NoViableAltForCharException;

        $c94 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r48 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i95 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i96 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r67.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c94, $r48, $i95, $i96);

        throw $r67;

     label45:
        $c103 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i127 = (int) $c103;

        lookupswitch($i127)
        {
            case 71: goto label56;
            case 73: goto label51;
            case 76: goto label46;
            case 103: goto label56;
            case 105: goto label51;
            case 108: goto label46;
            default: goto label57;
        };

     label46:
        $c4 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i128 = (int) $c4;

        lookupswitch($i128)
        {
            case 76: goto label48;
            case 108: goto label47;
            default: goto label49;
        };

     label47:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(108);

        goto label50;

     label48:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(76);

        goto label50;

     label49:
        $r68 = new groovyjarjarantlr.NoViableAltForCharException;

        $c8 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r10 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i9 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i10 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r68.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c8, $r10, $i9, $i10);

        throw $r68;

     label50:
        $r3 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i5 = $r3.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i5 != 0 goto label88;

        s97 = 196;

        s108 = 196;

        s107 = 196;

        goto label88;

     label51:
        $c11 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i129 = (int) $c11;

        lookupswitch($i129)
        {
            case 73: goto label53;
            case 105: goto label52;
            default: goto label54;
        };

     label52:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(105);

        goto label55;

     label53:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(73);

        goto label55;

     label54:
        $r69 = new groovyjarjarantlr.NoViableAltForCharException;

        $c13 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r13 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i14 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i15 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r69.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c13, $r13, $i14, $i15);

        throw $r69;

     label55:
        $r11 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i12 = $r11.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i12 != 0 goto label88;

        s97 = 194;

        s108 = 194;

        s107 = 194;

        goto label88;

     label56:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mBIG_SUFFIX(boolean)>(0);

        $r14 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i16 = $r14.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i16 != 0 goto label88;

        s97 = 198;

        s108 = 198;

        s107 = 198;

        goto label88;

     label57:
        z5 = 0;

        $c17 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i130 = (int) $c17;

        if $i130 == 46 goto label58;

        $c47 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i131 = (int) $c47;

        if $i131 == 68 goto label58;

        $c48 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i132 = (int) $c48;

        if $i132 == 69 goto label58;

        $c49 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i133 = (int) $c49;

        if $i133 == 70 goto label58;

        $c50 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i134 = (int) $c50;

        if $i134 == 100 goto label58;

        $c51 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i135 = (int) $c51;

        if $i135 == 101 goto label58;

        $c52 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i136 = (int) $c52;

        if $i136 != 102 goto label65;

     label58:
        if z2 == 0 goto label65;

        $i37 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int mark()>();

        z5 = 1;

        $r25 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i38 = $r25.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        $i39 = $i38 + 1;

        $r25.<groovyjarjarantlr.LexerSharedInputState: int guessing> = $i39;

     label59:
        $r26 = <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_10>;

        $c40 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i137 = (int) $c40;

        $z1 = virtualinvoke $r26.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i137);

        if $z1 == 0 goto label60;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchNot(char)>(46);

        goto label62;

     label60:
        $c41 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i138 = (int) $c41;

        if $i138 != 46 goto label61;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(46);

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchRange(char,char)>(48, 57);

        goto label62;

     label61:
        $r70 = new groovyjarjarantlr.NoViableAltForCharException;

        $c42 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r28 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i43 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i44 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r70.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c42, $r28, $i43, $i44);

        throw $r70;

     label62:
        goto label64;

     label63:
        $r49 := @caughtexception;

        z5 = 0;

     label64:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void rewind(int)>($i37);

        $r29 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i45 = $r29.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        $i46 = $i45 - 1;

        $r29.<groovyjarjarantlr.LexerSharedInputState: int guessing> = $i46;

     label65:
        if z5 == 0 goto label88;

        $c18 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i139 = (int) $c18;

        lookupswitch($i139)
        {
            case 46: goto label66;
            case 68: goto label81;
            case 69: goto label77;
            case 70: goto label81;
            case 100: goto label81;
            case 101: goto label77;
            case 102: goto label81;
            default: goto label82;
        };

     label66:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(46);

        i104 = 0;

     label67:
        $c25 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i140 = (int) $c25;

        if $i140 < 48 goto label68;

        $c33 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i141 = (int) $c33;

        if $i141 > 57 goto label68;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchRange(char,char)>(48, 57);

        goto label70;

     label68:
        if i104 < 1 goto label69;

        goto label71;

     label69:
        $r71 = new groovyjarjarantlr.NoViableAltForCharException;

        $c26 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r20 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i27 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i28 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r71.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c26, $r20, $i27, $i28);

        throw $r71;

     label70:
        i104 = i104 + 1;

        goto label67;

     label71:
        $c29 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i142 = (int) $c29;

        if $i142 == 69 goto label72;

        $c32 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i143 = (int) $c32;

        if $i143 != 101 goto label73;

     label72:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mEXPONENT(boolean)>(0);

     label73:
        $c105 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i144 = (int) $c105;

        lookupswitch($i144)
        {
            case 68: goto label74;
            case 70: goto label74;
            case 71: goto label75;
            case 100: goto label74;
            case 102: goto label74;
            case 103: goto label75;
            default: goto label76;
        };

     label74:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mFLOAT_SUFFIX(boolean)>(1);

        r54 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken>;

        $r22 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i31 = $r22.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i31 != 0 goto label83;

        r52 = r54;

        goto label83;

     label75:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mBIG_SUFFIX(boolean)>(1);

        r55 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken>;

        $r21 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i30 = $r21.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i30 != 0 goto label83;

        r52 = r55;

        goto label83;

     label76:
        goto label83;

     label77:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mEXPONENT(boolean)>(0);

        $c19 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i145 = (int) $c19;

        lookupswitch($i145)
        {
            case 68: goto label78;
            case 70: goto label78;
            case 71: goto label79;
            case 100: goto label78;
            case 102: goto label78;
            case 103: goto label79;
            default: goto label80;
        };

     label78:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mFLOAT_SUFFIX(boolean)>(1);

        r56 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken>;

        $r17 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i23 = $r17.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i23 != 0 goto label83;

        r52 = r56;

        goto label83;

     label79:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mBIG_SUFFIX(boolean)>(1);

        r57 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken>;

        $r15 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i20 = $r15.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i20 != 0 goto label83;

        r52 = r57;

        goto label83;

     label80:
        goto label83;

     label81:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void mFLOAT_SUFFIX(boolean)>(1);

        r58 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken>;

        $r18 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i24 = $r18.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i24 != 0 goto label83;

        r52 = r58;

        goto label83;

     label82:
        $r72 = new groovyjarjarantlr.NoViableAltForCharException;

        $c34 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r24 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i35 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i36 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r72.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c34, $r24, $i35, $i36);

        throw $r72;

     label83:
        $r59 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.LexerSharedInputState inputState>;

        $i106 = $r59.<groovyjarjarantlr.LexerSharedInputState: int guessing>;

        if $i106 != 0 goto label88;

        if r52 != null goto label84;

        $r60 = "";

        goto label85;

     label84:
        $r16 = virtualinvoke r52.<groovyjarjarantlr.Token: java.lang.String getText()>();

        $r60 = virtualinvoke $r16.<java.lang.String: java.lang.String toUpperCase()>();

     label85:
        $i21 = virtualinvoke $r60.<java.lang.String: int indexOf(int)>(70);

        if $i21 < 0 goto label86;

        s97 = 195;

        s108 = 195;

        s107 = 195;

        goto label88;

     label86:
        $i22 = virtualinvoke $r60.<java.lang.String: int indexOf(int)>(71);

        if $i22 < 0 goto label87;

        s97 = 199;

        s108 = 199;

        s107 = 199;

        goto label88;

     label87:
        s97 = 197;

        s108 = 197;

        s107 = 197;

     label88:
        if z0 == 0 goto label89;

        if null != null goto label89;

        $i147 = (int) -1;

        if s108 == $i147 goto label89;

        $r4 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(s107);

        r51 = $r4;

        $r73 = new java.lang.String;

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r7 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r8 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i6 = virtualinvoke $r8.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i7 = $i6 - $i0;

        specialinvoke $r73.<java.lang.String: void <init>(char[],int,int)>($r7, $i0, $i7);

        virtualinvoke $r4.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r73);

     label89:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r51;

        return;

        catch groovyjarjarantlr.RecognitionException from label15 to label25 with label26;
        catch groovyjarjarantlr.RecognitionException from label59 to label62 with label63;
    }

    protected final void mEXPONENT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.Token $r4, r13;
        boolean z0;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i4, $i5, $i6, $i7, $i10, $i11, $i13, $i14, i15, $i17, $i18, $i19, $i20, $i22;
        java.lang.String $r3, $r10, $r12, $r17;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r6, $r8;
        char $c1, $c2, $c3, $c8, $c9, $c12, $c16;
        groovyjarjarantlr.NoViableAltForCharException $r14, $r15, $r16;
        char[] $r7;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r13 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i17 = (int) $c1;

        lookupswitch($i17)
        {
            case 69: goto label02;
            case 101: goto label01;
            default: goto label03;
        };

     label01:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(101);

        goto label04;

     label02:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(69);

        goto label04;

     label03:
        $r14 = new groovyjarjarantlr.NoViableAltForCharException;

        $c12 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r12 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i13 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i14 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r14.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c12, $r12, $i13, $i14);

        throw $r14;

     label04:
        $c2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i18 = (int) $c2;

        tableswitch($i18)
        {
            case 43: goto label05;
            case 44: goto label08;
            case 45: goto label06;
            case 46: goto label08;
            case 47: goto label08;
            case 48: goto label07;
            case 49: goto label07;
            case 50: goto label07;
            case 51: goto label07;
            case 52: goto label07;
            case 53: goto label07;
            case 54: goto label07;
            case 55: goto label07;
            case 56: goto label07;
            case 57: goto label07;
            default: goto label08;
        };

     label05:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(43);

        goto label09;

     label06:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(45);

        goto label09;

     label07:
        goto label09;

     label08:
        $r15 = new groovyjarjarantlr.NoViableAltForCharException;

        $c9 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r10 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i10 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i11 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r15.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c9, $r10, $i10, $i11);

        throw $r15;

     label09:
        i15 = 0;

     label10:
        $c16 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i19 = (int) $c16;

        if $i19 < 48 goto label11;

        $c8 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i20 = (int) $c8;

        if $i20 > 57 goto label11;

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void matchRange(char,char)>(48, 57);

        goto label13;

     label11:
        if i15 < 1 goto label12;

        goto label14;

     label12:
        $r16 = new groovyjarjarantlr.NoViableAltForCharException;

        $c3 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r3 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i4 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i5 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r16.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c3, $r3, $i4, $i5);

        throw $r16;

     label13:
        i15 = i15 + 1;

        goto label10;

     label14:
        if z0 == 0 goto label15;

        if null != null goto label15;

        $i22 = (int) -1;

        if 215 == $i22 goto label15;

        $r4 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(215);

        r13 = $r4;

        $r17 = new java.lang.String;

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r7 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r8 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i6 = virtualinvoke $r8.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i7 = $i6 - $i0;

        specialinvoke $r17.<java.lang.String: void <init>(char[],int,int)>($r7, $i0, $i7);

        virtualinvoke $r4.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r17);

     label15:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r13;

        return;
    }

    protected final void mFLOAT_SUFFIX(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i2, $i3, $i5, $i6, $i7, $i9;
        java.lang.String $r8, $r11;
        groovyjarjarantlr.Token $r2, r9;
        boolean z0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        char $c1, $c4;
        groovyjarjarantlr.NoViableAltForCharException $r10;
        char[] $r5;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r9 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i7 = (int) $c1;

        lookupswitch($i7)
        {
            case 68: goto label4;
            case 70: goto label2;
            case 100: goto label3;
            case 102: goto label1;
            default: goto label5;
        };

     label1:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(102);

        goto label6;

     label2:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(70);

        goto label6;

     label3:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(100);

        goto label6;

     label4:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(68);

        goto label6;

     label5:
        $r10 = new groovyjarjarantlr.NoViableAltForCharException;

        $c4 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r8 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i5 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i6 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r10.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c4, $r8, $i5, $i6);

        throw $r10;

     label6:
        if z0 == 0 goto label7;

        if null != null goto label7;

        $i9 = (int) -1;

        if 216 == $i9 goto label7;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(216);

        r9 = $r2;

        $r11 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r11.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i3);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r11);

     label7:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r9;

        return;
    }

    protected final void mBIG_SUFFIX(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i2, $i3, $i5, $i6, $i7, $i9;
        java.lang.String $r8, $r11;
        groovyjarjarantlr.Token $r2, r9;
        boolean z0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        char $c1, $c4;
        groovyjarjarantlr.NoViableAltForCharException $r10;
        char[] $r5;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r9 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $c1 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $i7 = (int) $c1;

        lookupswitch($i7)
        {
            case 71: goto label2;
            case 103: goto label1;
            default: goto label3;
        };

     label1:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(103);

        goto label4;

     label2:
        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(71);

        goto label4;

     label3:
        $r10 = new groovyjarjarantlr.NoViableAltForCharException;

        $c4 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: char LA(int)>(1);

        $r8 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: java.lang.String getFilename()>();

        $i5 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getLine()>();

        $i6 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: int getColumn()>();

        specialinvoke $r10.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c4, $r8, $i5, $i6);

        throw $r10;

     label4:
        if z0 == 0 goto label5;

        if null != null goto label5;

        $i9 = (int) -1;

        if 217 == $i9 goto label5;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(217);

        r9 = $r2;

        $r11 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r11.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i3);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r11);

     label5:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r9;

        return;
    }

    public final void mAT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: org.codehaus.groovy.antlr.parser.GroovyLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: void match(char)>(64);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 92 == $i4 goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token makeToken(int)>(92);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    private static final long[] mk_tokenSet_0()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[2560];

        r0[1] = 576460745995190270L;

        r0[3] = -36028797027352577L;

        i0 = 4;

     label1:
        if i0 > 1022 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        r0[1023] = 9223372036854775807L;

        return r0;
    }

    private static final long[] mk_tokenSet_1()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[2048];

        r0[0] = -9224L;

        i0 = 1;

     label1:
        if i0 > 1022 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        r0[1023] = 9223372036854775807L;

        return r0;
    }

    private static final long[] mk_tokenSet_2()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[2048];

        r0[0] = -4398046520328L;

        i0 = 1;

     label1:
        if i0 > 1022 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        r0[1023] = 9223372036854775807L;

        return r0;
    }

    private static final long[] mk_tokenSet_3()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[2048];

        r0[0] = -549755813896L;

        i0 = 1;

     label1:
        if i0 > 1023 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static final long[] mk_tokenSet_4()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[2048];

        r0[0] = -635655169032L;

        r0[1] = -268435457L;

        i0 = 2;

     label1:
        if i0 > 1022 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        r0[1023] = 9223372036854775807L;

        return r0;
    }

    private static final long[] mk_tokenSet_5()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[2048];

        r0[0] = -17179869192L;

        i0 = 1;

     label1:
        if i0 > 1023 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static final long[] mk_tokenSet_6()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[2048];

        r0[0] = -145135534875656L;

        i0 = 1;

     label1:
        if i0 > 1022 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        r0[1023] = 9223372036854775807L;

        return r0;
    }

    private static final long[] mk_tokenSet_7()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[2048];

        r0[0] = -145204254352392L;

        i0 = 1;

     label1:
        if i0 > 1022 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        r0[1023] = 9223372036854775807L;

        return r0;
    }

    private static final long[] mk_tokenSet_8()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[2048];

        r0[0] = -145204254352392L;

        r0[1] = -268435457L;

        i0 = 2;

     label1:
        if i0 > 1022 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        r0[1023] = 9223372036854775807L;

        return r0;
    }

    private static final long[] mk_tokenSet_9()
    {
        long[] r0;

        r0 = newarray (long)[1025];

        r0[0] = 287948901175001088L;

        r0[1] = 541165879422L;

        return r0;
    }

    private static final long[] mk_tokenSet_10()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[2048];

        r0[0] = -70368744177672L;

        i0 = 1;

     label1:
        if i0 > 1023 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r0;
    }

    static groovyjarjarantlr.Token access$000(org.codehaus.groovy.antlr.parser.GroovyLexer)
    {
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        groovyjarjarantlr.Token $r1;

        r0 := @parameter0: org.codehaus.groovy.antlr.parser.GroovyLexer;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken>;

        return $r1;
    }

    static groovyjarjarantlr.Token access$100(org.codehaus.groovy.antlr.parser.GroovyLexer)
    {
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        groovyjarjarantlr.Token $r1;

        r0 := @parameter0: org.codehaus.groovy.antlr.parser.GroovyLexer;

        $r1 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.Token _returnToken>;

        return $r1;
    }

    static boolean access$200(org.codehaus.groovy.antlr.parser.GroovyLexer)
    {
        org.codehaus.groovy.antlr.parser.GroovyLexer r0;
        boolean $z0;

        r0 := @parameter0: org.codehaus.groovy.antlr.parser.GroovyLexer;

        $z0 = r0.<org.codehaus.groovy.antlr.parser.GroovyLexer: boolean whitespaceIncluded>;

        return $z0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        long[] $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21;
        groovyjarjarantlr.collections.impl.BitSet $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20;

        <org.codehaus.groovy.antlr.parser.GroovyLexer: int SCS_RE_TYPE> = 2;

        <org.codehaus.groovy.antlr.parser.GroovyLexer: int SCS_TQ_TYPE> = 1;

        <org.codehaus.groovy.antlr.parser.GroovyLexer: int SCS_SQ_TYPE> = 0;

        <org.codehaus.groovy.antlr.parser.GroovyLexer: int SCS_LIMIT> = 16;

        <org.codehaus.groovy.antlr.parser.GroovyLexer: int SCS_LIT> = 8;

        <org.codehaus.groovy.antlr.parser.GroovyLexer: int SCS_VAL> = 4;

        <org.codehaus.groovy.antlr.parser.GroovyLexer: int SCS_TYPE> = 3;

        <org.codehaus.groovy.antlr.parser.GroovyLexer: boolean tracing> = 0;

        $r0 = new groovyjarjarantlr.collections.impl.BitSet;

        $r1 = staticinvoke <org.codehaus.groovy.antlr.parser.GroovyLexer: long[] mk_tokenSet_0()>();

        specialinvoke $r0.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r1);

        <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_0> = $r0;

        $r2 = new groovyjarjarantlr.collections.impl.BitSet;

        $r3 = staticinvoke <org.codehaus.groovy.antlr.parser.GroovyLexer: long[] mk_tokenSet_1()>();

        specialinvoke $r2.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r3);

        <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_1> = $r2;

        $r4 = new groovyjarjarantlr.collections.impl.BitSet;

        $r5 = staticinvoke <org.codehaus.groovy.antlr.parser.GroovyLexer: long[] mk_tokenSet_2()>();

        specialinvoke $r4.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r5);

        <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_2> = $r4;

        $r6 = new groovyjarjarantlr.collections.impl.BitSet;

        $r7 = staticinvoke <org.codehaus.groovy.antlr.parser.GroovyLexer: long[] mk_tokenSet_3()>();

        specialinvoke $r6.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r7);

        <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_3> = $r6;

        $r8 = new groovyjarjarantlr.collections.impl.BitSet;

        $r9 = staticinvoke <org.codehaus.groovy.antlr.parser.GroovyLexer: long[] mk_tokenSet_4()>();

        specialinvoke $r8.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r9);

        <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_4> = $r8;

        $r10 = new groovyjarjarantlr.collections.impl.BitSet;

        $r11 = staticinvoke <org.codehaus.groovy.antlr.parser.GroovyLexer: long[] mk_tokenSet_5()>();

        specialinvoke $r10.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r11);

        <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_5> = $r10;

        $r12 = new groovyjarjarantlr.collections.impl.BitSet;

        $r13 = staticinvoke <org.codehaus.groovy.antlr.parser.GroovyLexer: long[] mk_tokenSet_6()>();

        specialinvoke $r12.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r13);

        <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_6> = $r12;

        $r14 = new groovyjarjarantlr.collections.impl.BitSet;

        $r15 = staticinvoke <org.codehaus.groovy.antlr.parser.GroovyLexer: long[] mk_tokenSet_7()>();

        specialinvoke $r14.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r15);

        <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_7> = $r14;

        $r16 = new groovyjarjarantlr.collections.impl.BitSet;

        $r17 = staticinvoke <org.codehaus.groovy.antlr.parser.GroovyLexer: long[] mk_tokenSet_8()>();

        specialinvoke $r16.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r17);

        <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_8> = $r16;

        $r18 = new groovyjarjarantlr.collections.impl.BitSet;

        $r19 = staticinvoke <org.codehaus.groovy.antlr.parser.GroovyLexer: long[] mk_tokenSet_9()>();

        specialinvoke $r18.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r19);

        <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_9> = $r18;

        $r20 = new groovyjarjarantlr.collections.impl.BitSet;

        $r21 = staticinvoke <org.codehaus.groovy.antlr.parser.GroovyLexer: long[] mk_tokenSet_10()>();

        specialinvoke $r20.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r21);

        <org.codehaus.groovy.antlr.parser.GroovyLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_10> = $r20;

        return;
    }
}
