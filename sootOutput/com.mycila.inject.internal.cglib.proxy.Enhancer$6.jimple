class com.mycila.inject.internal.cglib.proxy.Enhancer$6 extends java.lang.Object implements com.mycila.inject.internal.cglib.proxy.CallbackGenerator$Context
{
    private final java.util.Map val$originalModifiers;
    private final java.util.Map val$indexes;
    private final java.util.Map val$positions;
    private final java.util.Map val$bridgeToTarget;
    private final com.mycila.inject.internal.cglib.proxy.Enhancer this$0;

    void <init>(com.mycila.inject.internal.cglib.proxy.Enhancer, java.util.Map, java.util.Map, java.util.Map, java.util.Map)
    {
        com.mycila.inject.internal.cglib.proxy.Enhancer$6 r0;
        java.util.Map r2, r3, r4, r5;
        com.mycila.inject.internal.cglib.proxy.Enhancer r1;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.Enhancer$6;

        r1 := @parameter0: com.mycila.inject.internal.cglib.proxy.Enhancer;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.util.Map;

        r4 := @parameter3: java.util.Map;

        r5 := @parameter4: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mycila.inject.internal.cglib.proxy.Enhancer$6: com.mycila.inject.internal.cglib.proxy.Enhancer this$0> = r1;

        r0.<com.mycila.inject.internal.cglib.proxy.Enhancer$6: java.util.Map val$originalModifiers> = r2;

        r0.<com.mycila.inject.internal.cglib.proxy.Enhancer$6: java.util.Map val$indexes> = r3;

        r0.<com.mycila.inject.internal.cglib.proxy.Enhancer$6: java.util.Map val$positions> = r4;

        r0.<com.mycila.inject.internal.cglib.proxy.Enhancer$6: java.util.Map val$bridgeToTarget> = r5;

        return;
    }

    public java.lang.ClassLoader getClassLoader()
    {
        com.mycila.inject.internal.cglib.proxy.Enhancer $r1;
        java.lang.ClassLoader $r2;
        com.mycila.inject.internal.cglib.proxy.Enhancer$6 r0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.Enhancer$6;

        $r1 = r0.<com.mycila.inject.internal.cglib.proxy.Enhancer$6: com.mycila.inject.internal.cglib.proxy.Enhancer this$0>;

        $r2 = virtualinvoke $r1.<com.mycila.inject.internal.cglib.proxy.Enhancer: java.lang.ClassLoader getClassLoader()>();

        return $r2;
    }

    public int getOriginalModifiers(com.mycila.inject.internal.cglib.core.MethodInfo)
    {
        com.mycila.inject.internal.cglib.proxy.Enhancer$6 r0;
        java.util.Map $r2;
        int $i0;
        java.lang.Object $r3;
        java.lang.Integer $r4;
        com.mycila.inject.internal.cglib.core.MethodInfo r1;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.Enhancer$6;

        r1 := @parameter0: com.mycila.inject.internal.cglib.core.MethodInfo;

        $r2 = r0.<com.mycila.inject.internal.cglib.proxy.Enhancer$6: java.util.Map val$originalModifiers>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public int getIndex(com.mycila.inject.internal.cglib.core.MethodInfo)
    {
        com.mycila.inject.internal.cglib.proxy.Enhancer$6 r0;
        java.util.Map $r2;
        int $i0;
        java.lang.Object $r3;
        java.lang.Integer $r4;
        com.mycila.inject.internal.cglib.core.MethodInfo r1;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.Enhancer$6;

        r1 := @parameter0: com.mycila.inject.internal.cglib.core.MethodInfo;

        $r2 = r0.<com.mycila.inject.internal.cglib.proxy.Enhancer$6: java.util.Map val$indexes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public void emitCallback(com.mycila.inject.internal.cglib.core.CodeEmitter, int)
    {
        com.mycila.inject.internal.cglib.proxy.Enhancer$6 r0;
        int i0;
        com.mycila.inject.internal.cglib.proxy.Enhancer $r2;
        com.mycila.inject.internal.cglib.core.CodeEmitter r1;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.Enhancer$6;

        r1 := @parameter0: com.mycila.inject.internal.cglib.core.CodeEmitter;

        i0 := @parameter1: int;

        $r2 = r0.<com.mycila.inject.internal.cglib.proxy.Enhancer$6: com.mycila.inject.internal.cglib.proxy.Enhancer this$0>;

        staticinvoke <com.mycila.inject.internal.cglib.proxy.Enhancer: void access$300(com.mycila.inject.internal.cglib.proxy.Enhancer,com.mycila.inject.internal.cglib.core.CodeEmitter,int)>($r2, r1, i0);

        return;
    }

    public com.mycila.inject.internal.cglib.core.Signature getImplSignature(com.mycila.inject.internal.cglib.core.MethodInfo)
    {
        com.mycila.inject.internal.cglib.proxy.Enhancer$6 r0;
        com.mycila.inject.internal.cglib.core.Signature $r3, $r7;
        com.mycila.inject.internal.cglib.proxy.Enhancer $r2;
        java.lang.Integer $r6;
        com.mycila.inject.internal.cglib.core.MethodInfo r1;
        java.util.Map $r4;
        int $i0;
        java.lang.Object $r5;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.Enhancer$6;

        r1 := @parameter0: com.mycila.inject.internal.cglib.core.MethodInfo;

        $r2 = r0.<com.mycila.inject.internal.cglib.proxy.Enhancer$6: com.mycila.inject.internal.cglib.proxy.Enhancer this$0>;

        $r3 = virtualinvoke r1.<com.mycila.inject.internal.cglib.core.MethodInfo: com.mycila.inject.internal.cglib.core.Signature getSignature()>();

        $r4 = r0.<com.mycila.inject.internal.cglib.proxy.Enhancer$6: java.util.Map val$positions>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r6 = (java.lang.Integer) $r5;

        $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        $r7 = staticinvoke <com.mycila.inject.internal.cglib.proxy.Enhancer: com.mycila.inject.internal.cglib.core.Signature access$400(com.mycila.inject.internal.cglib.proxy.Enhancer,com.mycila.inject.internal.cglib.core.Signature,int)>($r2, $r3, $i0);

        return $r7;
    }

    public void emitInvoke(com.mycila.inject.internal.cglib.core.CodeEmitter, com.mycila.inject.internal.cglib.core.MethodInfo)
    {
        com.mycila.inject.internal.cglib.proxy.Enhancer$6 r0;
        com.mycila.inject.internal.cglib.core.Signature $r3, r5, $r7, $r8;
        com.mycila.inject.internal.asm.Type $r9, $r10;
        com.mycila.inject.internal.cglib.core.CodeEmitter r6;
        com.mycila.inject.internal.cglib.core.MethodInfo r1;
        java.util.Map $r2;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.Enhancer$6;

        r6 := @parameter0: com.mycila.inject.internal.cglib.core.CodeEmitter;

        r1 := @parameter1: com.mycila.inject.internal.cglib.core.MethodInfo;

        $r2 = r0.<com.mycila.inject.internal.cglib.proxy.Enhancer$6: java.util.Map val$bridgeToTarget>;

        $r3 = virtualinvoke r1.<com.mycila.inject.internal.cglib.core.MethodInfo: com.mycila.inject.internal.cglib.core.Signature getSignature()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (com.mycila.inject.internal.cglib.core.Signature) $r4;

        if r5 == null goto label2;

        virtualinvoke r6.<com.mycila.inject.internal.cglib.core.CodeEmitter: void invoke_virtual_this(com.mycila.inject.internal.cglib.core.Signature)>(r5);

        $r8 = virtualinvoke r1.<com.mycila.inject.internal.cglib.core.MethodInfo: com.mycila.inject.internal.cglib.core.Signature getSignature()>();

        $r9 = virtualinvoke $r8.<com.mycila.inject.internal.cglib.core.Signature: com.mycila.inject.internal.asm.Type getReturnType()>();

        $r10 = virtualinvoke r5.<com.mycila.inject.internal.cglib.core.Signature: com.mycila.inject.internal.asm.Type getReturnType()>();

        $z0 = virtualinvoke $r9.<com.mycila.inject.internal.asm.Type: boolean equals(java.lang.Object)>($r10);

        if $z0 != 0 goto label1;

        virtualinvoke r6.<com.mycila.inject.internal.cglib.core.CodeEmitter: void checkcast(com.mycila.inject.internal.asm.Type)>($r9);

     label1:
        goto label3;

     label2:
        $r7 = virtualinvoke r1.<com.mycila.inject.internal.cglib.core.MethodInfo: com.mycila.inject.internal.cglib.core.Signature getSignature()>();

        virtualinvoke r6.<com.mycila.inject.internal.cglib.core.CodeEmitter: void super_invoke(com.mycila.inject.internal.cglib.core.Signature)>($r7);

     label3:
        return;
    }

    public com.mycila.inject.internal.cglib.core.CodeEmitter beginMethod(com.mycila.inject.internal.cglib.core.ClassEmitter, com.mycila.inject.internal.cglib.core.MethodInfo)
    {
        com.mycila.inject.internal.cglib.proxy.Enhancer$6 r3;
        com.mycila.inject.internal.cglib.proxy.Enhancer $r4;
        com.mycila.inject.internal.cglib.core.CodeEmitter $r2;
        com.mycila.inject.internal.cglib.core.MethodInfo r1;
        com.mycila.inject.internal.cglib.core.ClassEmitter r0;
        int $i0;
        com.mycila.inject.internal.asm.Label $r5;
        boolean $z0, $z1;

        r3 := @this: com.mycila.inject.internal.cglib.proxy.Enhancer$6;

        r0 := @parameter0: com.mycila.inject.internal.cglib.core.ClassEmitter;

        r1 := @parameter1: com.mycila.inject.internal.cglib.core.MethodInfo;

        $r2 = staticinvoke <com.mycila.inject.internal.cglib.core.EmitUtils: com.mycila.inject.internal.cglib.core.CodeEmitter begin_method(com.mycila.inject.internal.cglib.core.ClassEmitter,com.mycila.inject.internal.cglib.core.MethodInfo)>(r0, r1);

        $r4 = r3.<com.mycila.inject.internal.cglib.proxy.Enhancer$6: com.mycila.inject.internal.cglib.proxy.Enhancer this$0>;

        $z0 = staticinvoke <com.mycila.inject.internal.cglib.proxy.Enhancer: boolean access$500(com.mycila.inject.internal.cglib.proxy.Enhancer)>($r4);

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke r1.<com.mycila.inject.internal.cglib.core.MethodInfo: int getModifiers()>();

        $z1 = staticinvoke <com.mycila.inject.internal.cglib.core.TypeUtils: boolean isAbstract(int)>($i0);

        if $z1 != 0 goto label1;

        $r5 = virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: com.mycila.inject.internal.asm.Label make_label()>();

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void load_this()>();

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void getfield(java.lang.String)>("CGLIB$CONSTRUCTED");

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void if_jump(int,com.mycila.inject.internal.asm.Label)>(154, $r5);

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void load_this()>();

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void load_args()>();

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void super_invoke()>();

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void return_value()>();

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void mark(com.mycila.inject.internal.asm.Label)>($r5);

     label1:
        return $r2;
    }
}
