abstract class org.waveprotocol.wave.model.experimental.schema.RegularExpressionChecker$State extends java.lang.Object
{

    private void <init>()
    {
        org.waveprotocol.wave.model.experimental.schema.RegularExpressionChecker$State r0;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.RegularExpressionChecker$State;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    abstract org.waveprotocol.wave.model.experimental.schema.RegularExpressionChecker$State nextState(int, char) throws org.waveprotocol.wave.model.experimental.schema.InvalidSchemaException;

    abstract void endOfInput() throws org.waveprotocol.wave.model.experimental.schema.InvalidSchemaException;

    void <init>(org.waveprotocol.wave.model.experimental.schema.RegularExpressionChecker$1)
    {
        org.waveprotocol.wave.model.experimental.schema.RegularExpressionChecker$1 r1;
        org.waveprotocol.wave.model.experimental.schema.RegularExpressionChecker$State r0;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.RegularExpressionChecker$State;

        r1 := @parameter0: org.waveprotocol.wave.model.experimental.schema.RegularExpressionChecker$1;

        specialinvoke r0.<org.waveprotocol.wave.model.experimental.schema.RegularExpressionChecker$State: void <init>()>();

        return;
    }
}
