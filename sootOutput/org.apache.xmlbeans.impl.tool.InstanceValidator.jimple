public class org.apache.xmlbeans.impl.tool.InstanceValidator extends java.lang.Object
{

    public void <init>()
    {
        org.apache.xmlbeans.impl.tool.InstanceValidator r0;

        r0 := @this: org.apache.xmlbeans.impl.tool.InstanceValidator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void printUsage()
    {
        java.io.PrintStream $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Validates the specified instance against the specified schema.");

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("Contrast with the svalidate tool, which validates using a stream.");

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Usage: validate [-dl] [-nopvr] [-noupa] [-license] schema.xsd instance.xml");

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Options:");

        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("    -dl - permit network downloads for imports and includes (default is off)");

        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("    -noupa - do not enforce the unique particle attribution rule");

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("    -nopvr - do not enforce the particle valid (restriction) rule");

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("    -strict - performs strict(er) validation");

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("    -partial - allow partial schema type system");

        $r9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("    -license - prints license information");

        return;
    }

    public static void main(java.lang.String[])
    {
        int $i0;
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        $i0 = staticinvoke <org.apache.xmlbeans.impl.tool.InstanceValidator: int extraMain(java.lang.String[])>(r0);

        staticinvoke <java.lang.System: void exit(int)>($i0);

        return;
    }

    public static int extraMain(java.lang.String[])
    {
        byte b9;
        org.apache.xmlbeans.SchemaType $r30, $r31;
        java.lang.Object[] $r21;
        java.lang.StringBuffer $r33, $r36, $r37, $r42, $r45, $r46, $r50, $r53, $r54, $r67, $r69, $r71, $r74, $r77, $r78, $r79, $r85, $r86, $r92, $r95, $r96, $r97, $r101;
        org.apache.xmlbeans.impl.tool.CommandLine $r1;
        org.apache.xmlbeans.ResourceLoader $r61;
        java.util.HashSet $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i8, i10, $i11;
        org.apache.xmlbeans.XmlObject $r28, $r66;
        java.io.PrintStream $r34, $r40, $r43, $r51, $r56, $r57, $r59, $r68, $r75, $r81, $r83, $r84, $r89, $r93;
        org.apache.xmlbeans.XmlOptions $r24, $r25, $r27, $r32, $r48, $r49, $r62, $r64, $r65, $r103;
        java.lang.Object $r41, $r60, $r90;
        java.io.File[] $r16, $r17, $r18;
        java.util.Set $r3;
        java.lang.Exception $r73, $r82, $r91;
        org.apache.xmlbeans.XmlObject[] $r20, $r22, r99;
        java.util.ArrayList $r19, $r23, $r29;
        java.lang.String $r4, $r5, $r6, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r38, $r47, $r55, $r70, $r72, $r80, $r87, $r98, $r102;
        org.apache.xmlbeans.SchemaTypeLoader r100;
        java.io.File $r26, $r35, $r44, $r52, $r63, $r76, $r94;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, $z12, $z13, $z14, $z15, $z16;
        java.lang.String[] r2, $r7, $r10;
        java.util.Iterator $r39, $r58, $r88;

        r2 := @parameter0: java.lang.String[];

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("h");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("help");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("usage");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("license");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("version");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("dl");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("noupa");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("nopvr");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("strict");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("partial");

        $r1 = new org.apache.xmlbeans.impl.tool.CommandLine;

        $r3 = <java.util.Collections: java.util.Set EMPTY_SET>;

        specialinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: void <init>(java.lang.String[],java.util.Collection,java.util.Collection)>(r2, $r0, $r3);

        $r4 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("h");

        if $r4 != null goto label01;

        $r5 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("help");

        if $r5 != null goto label01;

        $r6 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("usage");

        if $r6 != null goto label01;

        $i0 = lengthof r2;

        if $i0 >= 1 goto label02;

     label01:
        staticinvoke <org.apache.xmlbeans.impl.tool.InstanceValidator: void printUsage()>();

        return 0;

     label02:
        $r7 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String[] getBadOpts()>();

        $i1 = lengthof $r7;

        if $i1 <= 0 goto label05;

        i6 = 0;

     label03:
        $i5 = lengthof $r7;

        if i6 >= $i5 goto label04;

        $r68 = <java.lang.System: java.io.PrintStream out>;

        $r67 = new java.lang.StringBuffer;

        specialinvoke $r67.<java.lang.StringBuffer: void <init>()>();

        $r69 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized option: ");

        $r70 = $r7[i6];

        $r71 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r70);

        $r72 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r68.<java.io.PrintStream: void println(java.lang.String)>($r72);

        i6 = i6 + 1;

        goto label03;

     label04:
        staticinvoke <org.apache.xmlbeans.impl.tool.InstanceValidator: void printUsage()>();

        return 0;

     label05:
        $r8 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("license");

        if $r8 == null goto label06;

        staticinvoke <org.apache.xmlbeans.impl.tool.CommandLine: void printLicense()>();

        return 0;

     label06:
        $r9 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("version");

        if $r9 == null goto label07;

        staticinvoke <org.apache.xmlbeans.impl.tool.CommandLine: void printVersion()>();

        return 0;

     label07:
        $r10 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String[] args()>();

        $i2 = lengthof $r10;

        if $i2 != 0 goto label08;

        return 0;

     label08:
        $r11 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("dl");

        if $r11 == null goto label09;

        $z10 = 1;

        goto label10;

     label09:
        $z10 = 0;

     label10:
        z11 = $z10;

        $r12 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("nopvr");

        if $r12 == null goto label11;

        $z12 = 1;

        goto label12;

     label11:
        $z12 = 0;

     label12:
        z0 = $z12;

        $r13 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("noupa");

        if $r13 == null goto label13;

        $z13 = 1;

        goto label14;

     label13:
        $z13 = 0;

     label14:
        z1 = $z13;

        $r14 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("strict");

        if $r14 == null goto label15;

        $z14 = 1;

        goto label16;

     label15:
        $z14 = 0;

     label16:
        z2 = $z14;

        $r15 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("partial");

        if $r15 == null goto label17;

        $z15 = 1;

        goto label18;

     label17:
        $z15 = 0;

     label18:
        z3 = $z15;

        $r16 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: java.io.File[] filesEndingWith(java.lang.String)>(".xsd");

        $r17 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: java.io.File[] filesEndingWith(java.lang.String)>(".xml");

        $r18 = virtualinvoke $r1.<org.apache.xmlbeans.impl.tool.CommandLine: java.io.File[] filesEndingWith(java.lang.String)>(".jar");

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        i7 = 0;

     label19:
        $i8 = lengthof $r16;

        if i7 >= $i8 goto label24;

     label20:
        $r63 = $r16[i7];

        $r62 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r62.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        $r64 = virtualinvoke $r62.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setLoadLineNumbers()>();

        $r65 = virtualinvoke $r64.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setLoadMessageDigest()>();

        $r66 = staticinvoke <org.apache.xmlbeans.XmlObject$Factory: org.apache.xmlbeans.XmlObject parse(java.io.File,org.apache.xmlbeans.XmlOptions)>($r63, $r65);

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r66);

     label21:
        goto label23;

     label22:
        $r91 := @caughtexception;

        $r93 = <java.lang.System: java.io.PrintStream err>;

        $r92 = new java.lang.StringBuffer;

        specialinvoke $r92.<java.lang.StringBuffer: void <init>()>();

        $r94 = $r16[i7];

        $r95 = virtualinvoke $r92.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r94);

        $r96 = virtualinvoke $r95.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" not loadable: ");

        $r97 = virtualinvoke $r96.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r91);

        $r98 = virtualinvoke $r97.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r93.<java.io.PrintStream: void println(java.lang.String)>($r98);

     label23:
        i7 = i7 + 1;

        goto label19;

     label24:
        $r20 = newarray (org.apache.xmlbeans.XmlObject)[0];

        $r21 = interfaceinvoke $r19.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r20);

        $r22 = (org.apache.xmlbeans.XmlObject[]) $r21;

        r99 = (org.apache.xmlbeans.XmlObject[]) $r22;

        r100 = null;

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        $r24 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r24.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        virtualinvoke $r24.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setErrorListener(java.util.Collection)>($r23);

        if z11 == 0 goto label25;

        virtualinvoke $r24.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setCompileDownloadUrls()>();

     label25:
        if z0 == 0 goto label26;

        virtualinvoke $r24.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setCompileNoPvrRule()>();

     label26:
        if z1 == 0 goto label27;

        virtualinvoke $r24.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setCompileNoUpaRule()>();

     label27:
        if z3 == 0 goto label28;

        virtualinvoke $r24.<org.apache.xmlbeans.XmlOptions: void put(java.lang.Object)>("COMPILE_PARTIAL_TYPESYSTEM");

     label28:
        if $r18 == null goto label29;

        $i4 = lengthof $r18;

        if $i4 <= 0 goto label29;

        $r61 = staticinvoke <org.apache.xmlbeans.XmlBeans: org.apache.xmlbeans.ResourceLoader resourceLoaderForPath(java.io.File[])>($r18);

        r100 = staticinvoke <org.apache.xmlbeans.XmlBeans: org.apache.xmlbeans.SchemaTypeLoader typeLoaderForResource(org.apache.xmlbeans.ResourceLoader)>($r61);

     label29:
        b9 = 0;

     label30:
        if r99 == null goto label31;

        $i3 = lengthof r99;

        if $i3 <= 0 goto label31;

        r100 = staticinvoke <org.apache.xmlbeans.XmlBeans: org.apache.xmlbeans.SchemaTypeSystem compileXsd(org.apache.xmlbeans.XmlObject[],org.apache.xmlbeans.SchemaTypeLoader,org.apache.xmlbeans.XmlOptions)>(r99, r100, $r24);

     label31:
        goto label39;

     label32:
        $r82 := @caughtexception;

        $z8 = interfaceinvoke $r23.<java.util.Collection: boolean isEmpty()>();

        if $z8 != 0 goto label33;

        $z9 = $r82 instanceof org.apache.xmlbeans.XmlException;

        if $z9 != 0 goto label34;

     label33:
        $r83 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r82.<java.lang.Exception: void printStackTrace(java.io.PrintStream)>($r83);

     label34:
        $r84 = <java.lang.System: java.io.PrintStream out>;

        $r101 = new java.lang.StringBuffer;

        specialinvoke $r101.<java.lang.StringBuffer: void <init>()>();

        $r85 = virtualinvoke $r101.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Schema invalid:");

        if z3 == 0 goto label35;

        $r102 = " couldn\'t recover from errors";

        goto label36;

     label35:
        $r102 = "";

     label36:
        $r86 = virtualinvoke $r85.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r102);

        $r87 = virtualinvoke $r86.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r84.<java.io.PrintStream: void println(java.lang.String)>($r87);

        $r88 = interfaceinvoke $r23.<java.util.Collection: java.util.Iterator iterator()>();

     label37:
        $z16 = interfaceinvoke $r88.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label38;

        $r89 = <java.lang.System: java.io.PrintStream out>;

        $r90 = interfaceinvoke $r88.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r89.<java.io.PrintStream: void println(java.lang.Object)>($r90);

        goto label37;

     label38:
        return 10;

     label39:
        if z3 == 0 goto label41;

        $z6 = interfaceinvoke $r23.<java.util.Collection: boolean isEmpty()>();

        if $z6 != 0 goto label41;

        b9 = 11;

        $r57 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r57.<java.io.PrintStream: void println(java.lang.String)>("Schema invalid: partial schema type system recovered");

        $r58 = interfaceinvoke $r23.<java.util.Collection: java.util.Iterator iterator()>();

     label40:
        $z7 = interfaceinvoke $r58.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label41;

        $r59 = <java.lang.System: java.io.PrintStream out>;

        $r60 = interfaceinvoke $r58.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r59.<java.io.PrintStream: void println(java.lang.Object)>($r60);

        goto label40;

     label41:
        if r100 != null goto label42;

        r100 = staticinvoke <org.apache.xmlbeans.XmlBeans: org.apache.xmlbeans.SchemaTypeLoader getContextTypeLoader()>();

     label42:
        i10 = 0;

     label43:
        $i11 = lengthof $r17;

        if i10 >= $i11 goto label54;

     label44:
        $r26 = $r17[i10];

        $r25 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r25.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        $r27 = virtualinvoke $r25.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setLoadLineNumbers(java.lang.String)>("LOAD_LINE_NUMBERS_END_ELEMENT");

        $r28 = interfaceinvoke r100.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.XmlObject parse(java.io.File,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>($r26, null, $r27);

     label45:
        goto label47;

     label46:
        $r73 := @caughtexception;

        $r75 = <java.lang.System: java.io.PrintStream err>;

        $r74 = new java.lang.StringBuffer;

        specialinvoke $r74.<java.lang.StringBuffer: void <init>()>();

        $r76 = $r17[i10];

        $r77 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r76);

        $r78 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" not loadable: ");

        $r79 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r73);

        $r80 = virtualinvoke $r79.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r75.<java.io.PrintStream: void println(java.lang.String)>($r80);

        $r81 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r73.<java.lang.Exception: void printStackTrace(java.io.PrintStream)>($r81);

        goto label53;

     label47:
        $r29 = new java.util.ArrayList;

        specialinvoke $r29.<java.util.ArrayList: void <init>()>();

        $r30 = interfaceinvoke $r28.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.SchemaType schemaType()>();

        $r31 = <org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.SchemaType type>;

        if $r30 != $r31 goto label48;

        $r51 = <java.lang.System: java.io.PrintStream out>;

        $r50 = new java.lang.StringBuffer;

        specialinvoke $r50.<java.lang.StringBuffer: void <init>()>();

        $r52 = $r17[i10];

        $r53 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" NOT valid.  ");

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r51.<java.io.PrintStream: void println(java.lang.String)>($r55);

        $r56 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>("  Document type not found.");

        goto label53;

     label48:
        if z2 == 0 goto label49;

        $r48 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r48.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        $r49 = virtualinvoke $r48.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setErrorListener(java.util.Collection)>($r29);

        $r103 = virtualinvoke $r49.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setValidateStrict()>();

        goto label50;

     label49:
        $r32 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r32.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        $r103 = virtualinvoke $r32.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setErrorListener(java.util.Collection)>($r29);

     label50:
        $z4 = interfaceinvoke $r28.<org.apache.xmlbeans.XmlObject: boolean validate(org.apache.xmlbeans.XmlOptions)>($r103);

        if $z4 == 0 goto label51;

        $r43 = <java.lang.System: java.io.PrintStream out>;

        $r42 = new java.lang.StringBuffer;

        specialinvoke $r42.<java.lang.StringBuffer: void <init>()>();

        $r44 = $r17[i10];

        $r45 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" valid.");

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>($r47);

        goto label53;

     label51:
        b9 = 1;

        $r34 = <java.lang.System: java.io.PrintStream out>;

        $r33 = new java.lang.StringBuffer;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>()>();

        $r35 = $r17[i10];

        $r36 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" NOT valid.");

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r38);

        $r39 = interfaceinvoke $r29.<java.util.Collection: java.util.Iterator iterator()>();

     label52:
        $z5 = interfaceinvoke $r39.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label53;

        $r40 = <java.lang.System: java.io.PrintStream out>;

        $r41 = interfaceinvoke $r39.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.Object)>($r41);

        goto label52;

     label53:
        i10 = i10 + 1;

        goto label43;

     label54:
        return b9;

        catch java.lang.Exception from label20 to label21 with label22;
        catch java.lang.Exception from label30 to label31 with label32;
        catch java.lang.Exception from label44 to label45 with label46;
    }
}
