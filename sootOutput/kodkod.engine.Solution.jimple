public final class kodkod.engine.Solution extends java.lang.Object
{
    private final kodkod.engine.Solution$Outcome outcome;
    private final kodkod.engine.Statistics stats;
    private final kodkod.instance.Instance instance;
    private final kodkod.engine.Proof proof;
    static final boolean $assertionsDisabled;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lkodkod/engine/Solution;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <kodkod.engine.Solution: boolean $assertionsDisabled> = $z1;

        return;
    }

    private void <init>(kodkod.engine.Solution$Outcome, kodkod.engine.Statistics, kodkod.instance.Instance, kodkod.engine.Proof)
    {
        kodkod.instance.Instance r3;
        kodkod.engine.Proof r4;
        kodkod.engine.Solution$Outcome r1;
        java.lang.AssertionError $r5;
        kodkod.engine.Solution r0;
        kodkod.engine.Statistics r2;
        boolean $z0;

        r0 := @this: kodkod.engine.Solution;

        r1 := @parameter0: kodkod.engine.Solution$Outcome;

        r2 := @parameter1: kodkod.engine.Statistics;

        r3 := @parameter2: kodkod.instance.Instance;

        r4 := @parameter3: kodkod.engine.Proof;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = <kodkod.engine.Solution: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label2:
        r0.<kodkod.engine.Solution: kodkod.engine.Solution$Outcome outcome> = r1;

        r0.<kodkod.engine.Solution: kodkod.engine.Statistics stats> = r2;

        r0.<kodkod.engine.Solution: kodkod.instance.Instance instance> = r3;

        r0.<kodkod.engine.Solution: kodkod.engine.Proof proof> = r4;

        return;
    }

    static kodkod.engine.Solution satisfiable(kodkod.engine.Statistics, kodkod.instance.Instance)
    {
        kodkod.instance.Instance r2;
        kodkod.engine.Solution$Outcome $r3;
        kodkod.engine.Solution $r0;
        kodkod.engine.Statistics r1;

        r1 := @parameter0: kodkod.engine.Statistics;

        r2 := @parameter1: kodkod.instance.Instance;

        $r0 = new kodkod.engine.Solution;

        $r3 = <kodkod.engine.Solution$Outcome: kodkod.engine.Solution$Outcome SATISFIABLE>;

        specialinvoke $r0.<kodkod.engine.Solution: void <init>(kodkod.engine.Solution$Outcome,kodkod.engine.Statistics,kodkod.instance.Instance,kodkod.engine.Proof)>($r3, r1, r2, null);

        return $r0;
    }

    static kodkod.engine.Solution triviallySatisfiable(kodkod.engine.Statistics, kodkod.instance.Instance)
    {
        kodkod.instance.Instance r2;
        kodkod.engine.Solution$Outcome $r3;
        kodkod.engine.Solution $r0;
        kodkod.engine.Statistics r1;

        r1 := @parameter0: kodkod.engine.Statistics;

        r2 := @parameter1: kodkod.instance.Instance;

        $r0 = new kodkod.engine.Solution;

        $r3 = <kodkod.engine.Solution$Outcome: kodkod.engine.Solution$Outcome TRIVIALLY_SATISFIABLE>;

        specialinvoke $r0.<kodkod.engine.Solution: void <init>(kodkod.engine.Solution$Outcome,kodkod.engine.Statistics,kodkod.instance.Instance,kodkod.engine.Proof)>($r3, r1, r2, null);

        return $r0;
    }

    static kodkod.engine.Solution unsatisfiable(kodkod.engine.Statistics, kodkod.engine.Proof)
    {
        kodkod.engine.Proof r2;
        kodkod.engine.Solution$Outcome $r3;
        kodkod.engine.Solution $r0;
        kodkod.engine.Statistics r1;

        r1 := @parameter0: kodkod.engine.Statistics;

        r2 := @parameter1: kodkod.engine.Proof;

        $r0 = new kodkod.engine.Solution;

        $r3 = <kodkod.engine.Solution$Outcome: kodkod.engine.Solution$Outcome UNSATISFIABLE>;

        specialinvoke $r0.<kodkod.engine.Solution: void <init>(kodkod.engine.Solution$Outcome,kodkod.engine.Statistics,kodkod.instance.Instance,kodkod.engine.Proof)>($r3, r1, null, r2);

        return $r0;
    }

    static kodkod.engine.Solution triviallyUnsatisfiable(kodkod.engine.Statistics, kodkod.engine.Proof)
    {
        kodkod.engine.Proof r2;
        kodkod.engine.Solution$Outcome $r3;
        kodkod.engine.Solution $r0;
        kodkod.engine.Statistics r1;

        r1 := @parameter0: kodkod.engine.Statistics;

        r2 := @parameter1: kodkod.engine.Proof;

        $r0 = new kodkod.engine.Solution;

        $r3 = <kodkod.engine.Solution$Outcome: kodkod.engine.Solution$Outcome TRIVIALLY_UNSATISFIABLE>;

        specialinvoke $r0.<kodkod.engine.Solution: void <init>(kodkod.engine.Solution$Outcome,kodkod.engine.Statistics,kodkod.instance.Instance,kodkod.engine.Proof)>($r3, r1, null, r2);

        return $r0;
    }

    public kodkod.engine.Solution$Outcome outcome()
    {
        kodkod.engine.Solution r0;
        kodkod.engine.Solution$Outcome $r1;

        r0 := @this: kodkod.engine.Solution;

        $r1 = r0.<kodkod.engine.Solution: kodkod.engine.Solution$Outcome outcome>;

        return $r1;
    }

    public kodkod.instance.Instance instance()
    {
        kodkod.instance.Instance $r1;
        kodkod.engine.Solution r0;

        r0 := @this: kodkod.engine.Solution;

        $r1 = r0.<kodkod.engine.Solution: kodkod.instance.Instance instance>;

        return $r1;
    }

    public kodkod.engine.Proof proof()
    {
        kodkod.engine.Proof $r1;
        kodkod.engine.Solution r0;

        r0 := @this: kodkod.engine.Solution;

        $r1 = r0.<kodkod.engine.Solution: kodkod.engine.Proof proof>;

        return $r1;
    }

    public kodkod.engine.Statistics stats()
    {
        kodkod.engine.Solution r0;
        kodkod.engine.Statistics $r1;

        r0 := @this: kodkod.engine.Solution;

        $r1 = r0.<kodkod.engine.Solution: kodkod.engine.Statistics stats>;

        return $r1;
    }

    public java.lang.String toString()
    {
        kodkod.engine.Proof $r4, $r7;
        kodkod.engine.Solution r1;
        kodkod.instance.Instance $r3, $r8;
        kodkod.engine.Solution$Outcome $r2;
        java.lang.StringBuilder $r0;
        java.lang.String $r6;
        kodkod.engine.Statistics $r5;

        r1 := @this: kodkod.engine.Solution;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("---OUTCOME---\n");

        $r2 = r1.<kodkod.engine.Solution: kodkod.engine.Solution$Outcome outcome>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r3 = r1.<kodkod.engine.Solution: kodkod.instance.Instance instance>;

        if $r3 == null goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n---INSTANCE---\n");

        $r8 = r1.<kodkod.engine.Solution: kodkod.instance.Instance instance>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label1:
        $r4 = r1.<kodkod.engine.Solution: kodkod.engine.Proof proof>;

        if $r4 == null goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n---PROOF---\n");

        $r7 = r1.<kodkod.engine.Solution: kodkod.engine.Proof proof>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n---STATS---\n");

        $r5 = r1.<kodkod.engine.Solution: kodkod.engine.Statistics stats>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
