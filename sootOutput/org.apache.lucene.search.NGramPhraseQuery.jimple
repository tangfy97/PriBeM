public class org.apache.lucene.search.NGramPhraseQuery extends org.apache.lucene.search.PhraseQuery
{
    private final int n;

    public void <init>(int)
    {
        int i0;
        org.apache.lucene.search.NGramPhraseQuery r0;

        r0 := @this: org.apache.lucene.search.NGramPhraseQuery;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.lucene.search.PhraseQuery: void <init>()>();

        r0.<org.apache.lucene.search.NGramPhraseQuery: int n> = i0;

        return;
    }

    public org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader) throws java.io.IOException
    {
        org.apache.lucene.search.Query $r2, $r8, $r9;
        org.apache.lucene.index.Term $r7;
        org.apache.lucene.search.PhraseQuery $r6;
        int[] $r4;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15;
        org.apache.lucene.index.Term[] $r3, $r5;
        org.apache.lucene.search.NGramPhraseQuery r0;
        float $f0;
        org.apache.lucene.index.IndexReader r1;

        r0 := @this: org.apache.lucene.search.NGramPhraseQuery;

        r1 := @parameter0: org.apache.lucene.index.IndexReader;

        $i0 = virtualinvoke r0.<org.apache.lucene.search.NGramPhraseQuery: int getSlop()>();

        if $i0 == 0 goto label01;

        $r9 = specialinvoke r0.<org.apache.lucene.search.PhraseQuery: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)>(r1);

        return $r9;

     label01:
        $i1 = r0.<org.apache.lucene.search.NGramPhraseQuery: int n>;

        if $i1 < 2 goto label02;

        $r3 = virtualinvoke r0.<org.apache.lucene.search.NGramPhraseQuery: org.apache.lucene.index.Term[] getTerms()>();

        $i2 = lengthof $r3;

        if $i2 >= 3 goto label03;

     label02:
        $r2 = specialinvoke r0.<org.apache.lucene.search.PhraseQuery: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)>(r1);

        return $r2;

     label03:
        $r4 = virtualinvoke r0.<org.apache.lucene.search.NGramPhraseQuery: int[] getPositions()>();

        $r5 = virtualinvoke r0.<org.apache.lucene.search.NGramPhraseQuery: org.apache.lucene.index.Term[] getTerms()>();

        i11 = $r4[0];

        i12 = 1;

     label04:
        $i3 = lengthof $r4;

        if i12 >= $i3 goto label06;

        i13 = $r4[i12];

        $i10 = i11 + 1;

        if $i10 == i13 goto label05;

        $r8 = specialinvoke r0.<org.apache.lucene.search.PhraseQuery: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)>(r1);

        return $r8;

     label05:
        i11 = i13;

        i12 = i12 + 1;

        goto label04;

     label06:
        $r6 = new org.apache.lucene.search.PhraseQuery;

        specialinvoke $r6.<org.apache.lucene.search.PhraseQuery: void <init>()>();

        $f0 = virtualinvoke r0.<org.apache.lucene.search.NGramPhraseQuery: float getBoost()>();

        virtualinvoke $r6.<org.apache.lucene.search.PhraseQuery: void setBoost(float)>($f0);

        i14 = 0;

        $i4 = lengthof $r5;

        i5 = $i4 - 1;

        i15 = 0;

     label07:
        $i6 = lengthof $r5;

        if i15 >= $i6 goto label10;

        $i7 = r0.<org.apache.lucene.search.NGramPhraseQuery: int n>;

        $i8 = i14 % $i7;

        if $i8 == 0 goto label08;

        if i14 < i5 goto label09;

     label08:
        $r7 = $r5[i15];

        $i9 = $r4[i15];

        virtualinvoke $r6.<org.apache.lucene.search.PhraseQuery: void add(org.apache.lucene.index.Term,int)>($r7, $i9);

     label09:
        i14 = i14 + 1;

        i15 = i15 + 1;

        goto label07;

     label10:
        return $r6;
    }

    public boolean equals(java.lang.Object)
    {
        int $i0, $i1;
        java.lang.Object r0;
        org.apache.lucene.search.NGramPhraseQuery r1, r2;
        boolean $z0, $z1;

        r2 := @this: org.apache.lucene.search.NGramPhraseQuery;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.lucene.search.NGramPhraseQuery;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (org.apache.lucene.search.NGramPhraseQuery) r0;

        $i1 = r2.<org.apache.lucene.search.NGramPhraseQuery: int n>;

        $i0 = r1.<org.apache.lucene.search.NGramPhraseQuery: int n>;

        if $i1 == $i0 goto label2;

        return 0;

     label2:
        $z1 = specialinvoke r2.<org.apache.lucene.search.PhraseQuery: boolean equals(java.lang.Object)>(r1);

        return $z1;
    }

    public int hashCode()
    {
        org.apache.lucene.search.NGramPhraseQuery r0;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        float $f0;
        org.apache.lucene.index.Term[] $r1;

        r0 := @this: org.apache.lucene.search.NGramPhraseQuery;

        $f0 = virtualinvoke r0.<org.apache.lucene.search.NGramPhraseQuery: float getBoost()>();

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        $i1 = virtualinvoke r0.<org.apache.lucene.search.NGramPhraseQuery: int getSlop()>();

        $i2 = $i0 ^ $i1;

        $r1 = virtualinvoke r0.<org.apache.lucene.search.NGramPhraseQuery: org.apache.lucene.index.Term[] getTerms()>();

        $i3 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i4 = $i2 ^ $i3;

        $r2 = virtualinvoke r0.<org.apache.lucene.search.NGramPhraseQuery: int[] getPositions()>();

        $i5 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i7 = $i4 ^ $i5;

        $i6 = r0.<org.apache.lucene.search.NGramPhraseQuery: int n>;

        $i8 = $i7 ^ $i6;

        return $i8;
    }
}
