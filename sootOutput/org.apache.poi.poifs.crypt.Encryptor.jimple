public abstract class org.apache.poi.poifs.crypt.Encryptor extends java.lang.Object
{
    private javax.crypto.SecretKey secretKey;

    public void <init>()
    {
        org.apache.poi.poifs.crypt.Encryptor r0;

        r0 := @this: org.apache.poi.poifs.crypt.Encryptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract java.io.OutputStream getDataStream(org.apache.poi.poifs.filesystem.DirectoryNode) throws java.io.IOException, java.security.GeneralSecurityException;

    public abstract void confirmPassword(java.lang.String, byte[], byte[], byte[], byte[], byte[]);

    public abstract void confirmPassword(java.lang.String);

    public static org.apache.poi.poifs.crypt.Encryptor getInstance(org.apache.poi.poifs.crypt.EncryptionInfo)
    {
        org.apache.poi.poifs.crypt.Encryptor $r1;
        org.apache.poi.poifs.crypt.EncryptionInfo r0;

        r0 := @parameter0: org.apache.poi.poifs.crypt.EncryptionInfo;

        $r1 = virtualinvoke r0.<org.apache.poi.poifs.crypt.EncryptionInfo: org.apache.poi.poifs.crypt.Encryptor getEncryptor()>();

        return $r1;
    }

    public java.io.OutputStream getDataStream(org.apache.poi.poifs.filesystem.NPOIFSFileSystem) throws java.io.IOException, java.security.GeneralSecurityException
    {
        org.apache.poi.poifs.filesystem.DirectoryNode $r2;
        java.io.OutputStream $r3;
        org.apache.poi.poifs.crypt.Encryptor r0;
        org.apache.poi.poifs.filesystem.NPOIFSFileSystem r1;

        r0 := @this: org.apache.poi.poifs.crypt.Encryptor;

        r1 := @parameter0: org.apache.poi.poifs.filesystem.NPOIFSFileSystem;

        $r2 = virtualinvoke r1.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: org.apache.poi.poifs.filesystem.DirectoryNode getRoot()>();

        $r3 = virtualinvoke r0.<org.apache.poi.poifs.crypt.Encryptor: java.io.OutputStream getDataStream(org.apache.poi.poifs.filesystem.DirectoryNode)>($r2);

        return $r3;
    }

    public java.io.OutputStream getDataStream(org.apache.poi.poifs.filesystem.POIFSFileSystem) throws java.io.IOException, java.security.GeneralSecurityException
    {
        org.apache.poi.poifs.filesystem.DirectoryNode $r2;
        java.io.OutputStream $r3;
        org.apache.poi.poifs.crypt.Encryptor r0;
        org.apache.poi.poifs.filesystem.POIFSFileSystem r1;

        r0 := @this: org.apache.poi.poifs.crypt.Encryptor;

        r1 := @parameter0: org.apache.poi.poifs.filesystem.POIFSFileSystem;

        $r2 = virtualinvoke r1.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DirectoryNode getRoot()>();

        $r3 = virtualinvoke r0.<org.apache.poi.poifs.crypt.Encryptor: java.io.OutputStream getDataStream(org.apache.poi.poifs.filesystem.DirectoryNode)>($r2);

        return $r3;
    }

    public javax.crypto.SecretKey getSecretKey()
    {
        org.apache.poi.poifs.crypt.Encryptor r0;
        javax.crypto.SecretKey $r1;

        r0 := @this: org.apache.poi.poifs.crypt.Encryptor;

        $r1 = r0.<org.apache.poi.poifs.crypt.Encryptor: javax.crypto.SecretKey secretKey>;

        return $r1;
    }

    protected void setSecretKey(javax.crypto.SecretKey)
    {
        org.apache.poi.poifs.crypt.Encryptor r0;
        javax.crypto.SecretKey r1;

        r0 := @this: org.apache.poi.poifs.crypt.Encryptor;

        r1 := @parameter0: javax.crypto.SecretKey;

        r0.<org.apache.poi.poifs.crypt.Encryptor: javax.crypto.SecretKey secretKey> = r1;

        return;
    }
}
