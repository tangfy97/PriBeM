public class org.apache.xmlbeans.impl.jam.internal.javadoc.JavadocRunner extends com.sun.javadoc.Doclet
{
    private static final java.lang.String JAVADOC_RUNNER_150;

    public static org.apache.xmlbeans.impl.jam.internal.javadoc.JavadocRunner newInstance()
    {
        java.lang.IllegalAccessException $r4;
        org.apache.xmlbeans.impl.jam.internal.javadoc.JavadocRunner $r2, $r7, $r8;
        java.lang.InstantiationException $r3;
        java.lang.Class $r0;
        java.lang.Object $r1;
        java.lang.ClassNotFoundException $r5, $r6;

     label1:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.sun.javadoc.AnnotationDesc");

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new org.apache.xmlbeans.impl.jam.internal.javadoc.JavadocRunner;

        specialinvoke $r7.<org.apache.xmlbeans.impl.jam.internal.javadoc.JavadocRunner: void <init>()>();

        return $r7;

     label4:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.xmlbeans.impl.jam.internal.javadoc.JavadocRunner_150");

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>();

        $r2 = (org.apache.xmlbeans.impl.jam.internal.javadoc.JavadocRunner) $r1;

     label5:
        return $r2;

     label6:
        $r5 := @caughtexception;

        goto label9;

     label7:
        $r4 := @caughtexception;

        goto label9;

     label8:
        $r3 := @caughtexception;

     label9:
        $r8 = new org.apache.xmlbeans.impl.jam.internal.javadoc.JavadocRunner;

        specialinvoke $r8.<org.apache.xmlbeans.impl.jam.internal.javadoc.JavadocRunner: void <init>()>();

        return $r8;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.ClassNotFoundException from label4 to label5 with label6;
        catch java.lang.IllegalAccessException from label4 to label5 with label7;
        catch java.lang.InstantiationException from label4 to label5 with label8;
    }

    public void <init>()
    {
        org.apache.xmlbeans.impl.jam.internal.javadoc.JavadocRunner r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.javadoc.JavadocRunner;

        specialinvoke r0.<com.sun.javadoc.Doclet: void <init>()>();

        return;
    }

    synchronized com.sun.javadoc.RootDoc run(java.io.File[], java.io.PrintWriter, java.lang.String, java.lang.String, java.lang.String[], org.apache.xmlbeans.impl.jam.provider.JamLogger) throws java.io.IOException, java.io.FileNotFoundException
    {
        java.lang.Thread $r7, $r24, $r40;
        boolean $z0, $z1;
        java.io.PrintWriter r6, $r32, r44;
        org.apache.xmlbeans.impl.jam.internal.javadoc.JavadocClassloadingException $r23;
        java.io.FileNotFoundException $r1;
        org.apache.xmlbeans.impl.jam.internal.javadoc.JavadocRunner r10;
        java.util.List $r38;
        org.apache.xmlbeans.impl.jam.provider.JamLogger r9;
        java.lang.ClassLoader $r8;
        java.lang.Throwable $r39;
        java.lang.String[] r3, r42;
        java.util.ArrayList $r2;
        java.lang.StringBuffer $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r26, $r27, $r29;
        int $i0, $i1, $i2, $i3, i4, $i5, i6;
        com.sun.javadoc.RootDoc $r13;
        java.lang.String r4, r5, $r12, $r22, $r28, $r30, $r31, $r35, $r37, $r45;
        java.io.StringWriter $r25, $r33, r43;
        java.lang.RuntimeException $r14, $r41;
        java.io.File $r34, $r36;
        java.lang.Class $r11;
        java.io.File[] r0;

        r10 := @this: org.apache.xmlbeans.impl.jam.internal.javadoc.JavadocRunner;

        r0 := @parameter0: java.io.File[];

        r6 := @parameter1: java.io.PrintWriter;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String[];

        r9 := @parameter5: org.apache.xmlbeans.impl.jam.provider.JamLogger;

        if r0 == null goto label01;

        $i0 = lengthof r0;

        if $i0 != 0 goto label02;

     label01:
        $r1 = new java.io.FileNotFoundException;

        specialinvoke $r1.<java.io.FileNotFoundException: void <init>(java.lang.String)>("No input files found.");

        throw $r1;

     label02:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        if r3 == null goto label03;

        $r38 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r3);

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r38);

     label03:
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("-private");

        if r4 == null goto label04;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("-sourcepath");

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r4);

     label04:
        if r5 == null goto label05;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("-classpath");

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r5);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("-docletpath");

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r5);

     label05:
        i4 = 0;

     label06:
        $i5 = lengthof r0;

        if i4 >= $i5 goto label08;

        $r34 = r0[i4];

        $r35 = virtualinvoke $r34.<java.io.File: java.lang.String toString()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r35);

        if r6 == null goto label07;

        $r36 = r0[i4];

        $r37 = virtualinvoke $r36.<java.io.File: java.lang.String toString()>();

        virtualinvoke r6.<java.io.PrintWriter: void println(java.lang.String)>($r37);

     label07:
        i4 = i4 + 1;

        goto label06;

     label08:
        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        r42 = newarray (java.lang.String)[$i1];

        interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r42);

        r43 = null;

        if r6 != null goto label09;

        $r32 = new java.io.PrintWriter;

        $r33 = new java.io.StringWriter;

        specialinvoke $r33.<java.io.StringWriter: void <init>()>();

        r43 = $r33;

        specialinvoke $r32.<java.io.PrintWriter: void <init>(java.io.Writer)>($r33);

        r44 = $r32;

        goto label10;

     label09:
        r44 = r6;

     label10:
        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r8 = virtualinvoke $r7.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

     label11:
        staticinvoke <org.apache.xmlbeans.impl.jam.internal.javadoc.JavadocResults: void prepare()>();

        $z0 = interfaceinvoke r9.<org.apache.xmlbeans.impl.jam.provider.JamLogger: boolean isVerbose(java.lang.Object)>(r10);

        if $z0 == 0 goto label14;

        interfaceinvoke r9.<org.apache.xmlbeans.impl.jam.provider.JamLogger: void verbose(java.lang.String)>("Invoking javadoc.  Command line equivalent is: ");

        $r25 = new java.io.StringWriter;

        specialinvoke $r25.<java.io.StringWriter: void <init>()>();

        virtualinvoke $r25.<java.io.StringWriter: void write(java.lang.String)>("javadoc ");

        i6 = 0;

     label12:
        $i3 = lengthof r42;

        if i6 >= $i3 goto label13;

        virtualinvoke $r25.<java.io.StringWriter: void write(java.lang.String)>("\'");

        $r31 = r42[i6];

        virtualinvoke $r25.<java.io.StringWriter: void write(java.lang.String)>($r31);

        virtualinvoke $r25.<java.io.StringWriter: void write(java.lang.String)>("\' ");

        i6 = i6 + 1;

        goto label12;

     label13:
        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  ");

        $r28 = virtualinvoke $r25.<java.io.StringWriter: java.lang.String toString()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r9.<org.apache.xmlbeans.impl.jam.provider.JamLogger: void verbose(java.lang.String)>($r30);

     label14:
        $r11 = virtualinvoke r10.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $i2 = staticinvoke <com.sun.tools.javadoc.Main: int execute(java.lang.String,java.io.PrintWriter,java.io.PrintWriter,java.io.PrintWriter,java.lang.String,java.lang.String[])>("JAM", r44, r44, r44, $r12, r42);

        $r13 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.javadoc.JavadocResults: com.sun.javadoc.RootDoc getRoot()>();

        if $i2 != 0 goto label15;

        if $r13 != null goto label19;

     label15:
        virtualinvoke r44.<java.io.PrintWriter: void flush()>();

        $z1 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.javadoc.JavadocClassloadingException: boolean isClassloadingProblemPresent()>();

        if $z1 == 0 goto label16;

        $r23 = new org.apache.xmlbeans.impl.jam.internal.javadoc.JavadocClassloadingException;

        specialinvoke $r23.<org.apache.xmlbeans.impl.jam.internal.javadoc.JavadocClassloadingException: void <init>()>();

        throw $r23;

     label16:
        $r14 = new java.lang.RuntimeException;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown javadoc problem: result=");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", root=");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r13);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":\n");

        if r43 != null goto label17;

        $r45 = "";

        goto label18;

     label17:
        $r45 = virtualinvoke r43.<java.io.StringWriter: java.lang.String toString()>();

     label18:
        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r22);

        throw $r14;

     label19:
        $r24 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r24.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>($r8);

        return $r13;

     label20:
        $r41 := @caughtexception;

        throw $r41;

     label21:
        $r39 := @caughtexception;

     label22:
        $r40 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r40.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>($r8);

        throw $r39;

        catch java.lang.RuntimeException from label11 to label19 with label20;
        catch java.lang.Throwable from label11 to label19 with label21;
        catch java.lang.Throwable from label20 to label22 with label21;
    }

    public static boolean start(com.sun.javadoc.RootDoc)
    {
        com.sun.javadoc.RootDoc r0;

        r0 := @parameter0: com.sun.javadoc.RootDoc;

        staticinvoke <org.apache.xmlbeans.impl.jam.internal.javadoc.JavadocResults: void setRoot(com.sun.javadoc.RootDoc)>(r0);

        return 1;
    }

    public static void <clinit>()
    {
        <org.apache.xmlbeans.impl.jam.internal.javadoc.JavadocRunner: java.lang.String JAVADOC_RUNNER_150> = "org.apache.xmlbeans.impl.jam.internal.javadoc.JavadocRunner_150";

        return;
    }
}
