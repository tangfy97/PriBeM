public class org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener extends java.awt.event.ComponentAdapter
{
    private java.awt.Window window;
    private int minHeight;
    private int minWidth;

    void <init>(java.awt.Window, int, int)
    {
        org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener r0;
        java.awt.Window r1;
        int i0, i1;

        r0 := @this: org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener;

        r1 := @parameter0: java.awt.Window;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.awt.event.ComponentAdapter: void <init>()>();

        r0.<org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener: java.awt.Window window> = r1;

        virtualinvoke r0.<org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener: void resetSizes(int,int)>(i0, i1);

        return;
    }

    public void resetSizes(int, int)
    {
        org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener r0;
        java.awt.Window $r1;
        int i0, i1;

        r0 := @this: org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener: int minWidth> = i0;

        r0.<org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener: int minHeight> = i1;

        $r1 = r0.<org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener: java.awt.Window window>;

        specialinvoke r0.<org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener: void adjustIfNeeded(java.awt.Window)>($r1);

        return;
    }

    public void componentResized(java.awt.event.ComponentEvent)
    {
        org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener r0;
        java.awt.Window $r3;
        java.awt.event.ComponentEvent r1;
        java.awt.Component $r2;

        r0 := @this: org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener;

        r1 := @parameter0: java.awt.event.ComponentEvent;

        $r2 = virtualinvoke r1.<java.awt.event.ComponentEvent: java.awt.Component getComponent()>();

        $r3 = (java.awt.Window) $r2;

        specialinvoke r0.<org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener: void adjustIfNeeded(java.awt.Window)>($r3);

        return;
    }

    private void adjustIfNeeded(java.awt.Window)
    {
        java.awt.Window r0;
        org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener r1;
        org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener$1 $r2;
        int $i0, $i1, $i2, $i3, i4, i5;
        boolean z0;

        r1 := @this: org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener;

        r0 := @parameter0: java.awt.Window;

        z0 = 0;

        $i0 = virtualinvoke r0.<java.awt.Window: int getWidth()>();

        i4 = $i0;

        $i1 = virtualinvoke r0.<java.awt.Window: int getHeight()>();

        i5 = $i1;

        $i2 = r1.<org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener: int minWidth>;

        if $i0 >= $i2 goto label1;

        i4 = r1.<org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener: int minWidth>;

        z0 = 1;

     label1:
        $i3 = r1.<org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener: int minHeight>;

        if $i1 >= $i3 goto label2;

        i5 = r1.<org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener: int minHeight>;

        z0 = 1;

     label2:
        if z0 == 0 goto label3;

        $r2 = new org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener$1;

        specialinvoke $r2.<org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener$1: void <init>(org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener,java.awt.Window,int,int)>(r1, r0, i4, i5);

        staticinvoke <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>($r2);

     label3:
        return;
    }
}
