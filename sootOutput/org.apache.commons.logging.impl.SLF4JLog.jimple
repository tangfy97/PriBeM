public class org.apache.commons.logging.impl.SLF4JLog extends java.lang.Object implements org.apache.commons.logging.Log, java.io.Serializable
{
    private static final long serialVersionUID;
    protected java.lang.String name;
    private transient org.slf4j.Logger logger;

    void <init>(org.slf4j.Logger)
    {
        org.slf4j.Logger r1;
        java.lang.String $r2;
        org.apache.commons.logging.impl.SLF4JLog r0;

        r0 := @this: org.apache.commons.logging.impl.SLF4JLog;

        r1 := @parameter0: org.slf4j.Logger;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.logging.impl.SLF4JLog: org.slf4j.Logger logger> = r1;

        $r2 = interfaceinvoke r1.<org.slf4j.Logger: java.lang.String getName()>();

        r0.<org.apache.commons.logging.impl.SLF4JLog: java.lang.String name> = $r2;

        return;
    }

    public boolean isDebugEnabled()
    {
        org.slf4j.Logger $r1;
        org.apache.commons.logging.impl.SLF4JLog r0;
        boolean $z0;

        r0 := @this: org.apache.commons.logging.impl.SLF4JLog;

        $r1 = r0.<org.apache.commons.logging.impl.SLF4JLog: org.slf4j.Logger logger>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>();

        return $z0;
    }

    public boolean isErrorEnabled()
    {
        org.slf4j.Logger $r1;
        org.apache.commons.logging.impl.SLF4JLog r0;
        boolean $z0;

        r0 := @this: org.apache.commons.logging.impl.SLF4JLog;

        $r1 = r0.<org.apache.commons.logging.impl.SLF4JLog: org.slf4j.Logger logger>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isErrorEnabled()>();

        return $z0;
    }

    public boolean isFatalEnabled()
    {
        org.slf4j.Logger $r1;
        org.apache.commons.logging.impl.SLF4JLog r0;
        boolean $z0;

        r0 := @this: org.apache.commons.logging.impl.SLF4JLog;

        $r1 = r0.<org.apache.commons.logging.impl.SLF4JLog: org.slf4j.Logger logger>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isErrorEnabled()>();

        return $z0;
    }

    public boolean isInfoEnabled()
    {
        org.slf4j.Logger $r1;
        org.apache.commons.logging.impl.SLF4JLog r0;
        boolean $z0;

        r0 := @this: org.apache.commons.logging.impl.SLF4JLog;

        $r1 = r0.<org.apache.commons.logging.impl.SLF4JLog: org.slf4j.Logger logger>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isInfoEnabled()>();

        return $z0;
    }

    public boolean isTraceEnabled()
    {
        org.slf4j.Logger $r1;
        org.apache.commons.logging.impl.SLF4JLog r0;
        boolean $z0;

        r0 := @this: org.apache.commons.logging.impl.SLF4JLog;

        $r1 = r0.<org.apache.commons.logging.impl.SLF4JLog: org.slf4j.Logger logger>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isTraceEnabled()>();

        return $z0;
    }

    public boolean isWarnEnabled()
    {
        org.slf4j.Logger $r1;
        org.apache.commons.logging.impl.SLF4JLog r0;
        boolean $z0;

        r0 := @this: org.apache.commons.logging.impl.SLF4JLog;

        $r1 = r0.<org.apache.commons.logging.impl.SLF4JLog: org.slf4j.Logger logger>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isWarnEnabled()>();

        return $z0;
    }

    public void trace(java.lang.Object)
    {
        org.slf4j.Logger $r2;
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.commons.logging.impl.SLF4JLog r0;

        r0 := @this: org.apache.commons.logging.impl.SLF4JLog;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.logging.impl.SLF4JLog: org.slf4j.Logger logger>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        interfaceinvoke $r2.<org.slf4j.Logger: void trace(java.lang.String)>($r3);

        return;
    }

    public void trace(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r4;
        org.slf4j.Logger $r2;
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.commons.logging.impl.SLF4JLog r0;

        r0 := @this: org.apache.commons.logging.impl.SLF4JLog;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Throwable;

        $r2 = r0.<org.apache.commons.logging.impl.SLF4JLog: org.slf4j.Logger logger>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        interfaceinvoke $r2.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Throwable)>($r3, r4);

        return;
    }

    public void debug(java.lang.Object)
    {
        org.slf4j.Logger $r2;
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.commons.logging.impl.SLF4JLog r0;

        r0 := @this: org.apache.commons.logging.impl.SLF4JLog;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.logging.impl.SLF4JLog: org.slf4j.Logger logger>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String)>($r3);

        return;
    }

    public void debug(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r4;
        org.slf4j.Logger $r2;
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.commons.logging.impl.SLF4JLog r0;

        r0 := @this: org.apache.commons.logging.impl.SLF4JLog;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Throwable;

        $r2 = r0.<org.apache.commons.logging.impl.SLF4JLog: org.slf4j.Logger logger>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($r3, r4);

        return;
    }

    public void info(java.lang.Object)
    {
        org.slf4j.Logger $r2;
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.commons.logging.impl.SLF4JLog r0;

        r0 := @this: org.apache.commons.logging.impl.SLF4JLog;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.logging.impl.SLF4JLog: org.slf4j.Logger logger>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>($r3);

        return;
    }

    public void info(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r4;
        org.slf4j.Logger $r2;
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.commons.logging.impl.SLF4JLog r0;

        r0 := @this: org.apache.commons.logging.impl.SLF4JLog;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Throwable;

        $r2 = r0.<org.apache.commons.logging.impl.SLF4JLog: org.slf4j.Logger logger>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>($r3, r4);

        return;
    }

    public void warn(java.lang.Object)
    {
        org.slf4j.Logger $r2;
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.commons.logging.impl.SLF4JLog r0;

        r0 := @this: org.apache.commons.logging.impl.SLF4JLog;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.logging.impl.SLF4JLog: org.slf4j.Logger logger>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        interfaceinvoke $r2.<org.slf4j.Logger: void warn(java.lang.String)>($r3);

        return;
    }

    public void warn(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r4;
        org.slf4j.Logger $r2;
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.commons.logging.impl.SLF4JLog r0;

        r0 := @this: org.apache.commons.logging.impl.SLF4JLog;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Throwable;

        $r2 = r0.<org.apache.commons.logging.impl.SLF4JLog: org.slf4j.Logger logger>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        interfaceinvoke $r2.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r3, r4);

        return;
    }

    public void error(java.lang.Object)
    {
        org.slf4j.Logger $r2;
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.commons.logging.impl.SLF4JLog r0;

        r0 := @this: org.apache.commons.logging.impl.SLF4JLog;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.logging.impl.SLF4JLog: org.slf4j.Logger logger>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        interfaceinvoke $r2.<org.slf4j.Logger: void error(java.lang.String)>($r3);

        return;
    }

    public void error(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r4;
        org.slf4j.Logger $r2;
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.commons.logging.impl.SLF4JLog r0;

        r0 := @this: org.apache.commons.logging.impl.SLF4JLog;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Throwable;

        $r2 = r0.<org.apache.commons.logging.impl.SLF4JLog: org.slf4j.Logger logger>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        interfaceinvoke $r2.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r3, r4);

        return;
    }

    public void fatal(java.lang.Object)
    {
        org.slf4j.Logger $r2;
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.commons.logging.impl.SLF4JLog r0;

        r0 := @this: org.apache.commons.logging.impl.SLF4JLog;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.logging.impl.SLF4JLog: org.slf4j.Logger logger>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        interfaceinvoke $r2.<org.slf4j.Logger: void error(java.lang.String)>($r3);

        return;
    }

    public void fatal(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r4;
        org.slf4j.Logger $r2;
        java.lang.Object r1;
        java.lang.String $r3;
        org.apache.commons.logging.impl.SLF4JLog r0;

        r0 := @this: org.apache.commons.logging.impl.SLF4JLog;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Throwable;

        $r2 = r0.<org.apache.commons.logging.impl.SLF4JLog: org.slf4j.Logger logger>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        interfaceinvoke $r2.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r3, r4);

        return;
    }

    protected java.lang.Object readResolve() throws java.io.ObjectStreamException
    {
        org.slf4j.Logger $r2;
        java.lang.String $r1;
        org.apache.commons.logging.impl.SLF4JLog r0, $r3;

        r0 := @this: org.apache.commons.logging.impl.SLF4JLog;

        $r1 = r0.<org.apache.commons.logging.impl.SLF4JLog: java.lang.String name>;

        $r2 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>($r1);

        $r3 = new org.apache.commons.logging.impl.SLF4JLog;

        specialinvoke $r3.<org.apache.commons.logging.impl.SLF4JLog: void <init>(org.slf4j.Logger)>($r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <org.apache.commons.logging.impl.SLF4JLog: long serialVersionUID> = 680728617011167209L;

        return;
    }
}
