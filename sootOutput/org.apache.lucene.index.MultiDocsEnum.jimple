public final class org.apache.lucene.index.MultiDocsEnum extends org.apache.lucene.index.DocsEnum
{
    private final org.apache.lucene.index.MultiTermsEnum parent;
    final org.apache.lucene.index.DocsEnum[] subDocsEnum;
    private org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] subs;
    int numSubs;
    int upto;
    org.apache.lucene.index.DocsEnum current;
    int currentBase;
    int doc;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.index.MultiTermsEnum, int)
    {
        org.apache.lucene.index.MultiTermsEnum r1;
        int i0, $i2;
        org.apache.lucene.index.MultiDocsEnum r0;
        org.apache.lucene.index.DocsEnum[] $r2;

        r0 := @this: org.apache.lucene.index.MultiDocsEnum;

        r1 := @parameter0: org.apache.lucene.index.MultiTermsEnum;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.lucene.index.DocsEnum: void <init>()>();

        $i2 = (int) -1;

        r0.<org.apache.lucene.index.MultiDocsEnum: int doc> = $i2;

        r0.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.MultiTermsEnum parent> = r1;

        $r2 = newarray (org.apache.lucene.index.DocsEnum)[i0];

        r0.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.DocsEnum[] subDocsEnum> = $r2;

        return;
    }

    org.apache.lucene.index.MultiDocsEnum reset(org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[], int)
    {
        org.apache.lucene.index.ReaderSlice $r11;
        org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] r1, $r2, $r4, $r5, $r9;
        int i0, $i1, $i2, i3, $i5, $i7;
        org.apache.lucene.index.MultiDocsEnum r0;
        org.apache.lucene.index.MultiDocsEnum$EnumWithSlice $r6, $r8, $r10, $r12, $r13;
        org.apache.lucene.index.DocsEnum $r7;

        r0 := @this: org.apache.lucene.index.MultiDocsEnum;

        r1 := @parameter0: org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[];

        i0 := @parameter1: int;

        r0.<org.apache.lucene.index.MultiDocsEnum: int numSubs> = i0;

        $i1 = lengthof r1;

        $r2 = newarray (org.apache.lucene.index.MultiDocsEnum$EnumWithSlice)[$i1];

        r0.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] subs> = $r2;

        i3 = 0;

     label1:
        $i2 = lengthof r1;

        if i3 >= $i2 goto label2;

        $r4 = r0.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] subs>;

        $r13 = new org.apache.lucene.index.MultiDocsEnum$EnumWithSlice;

        specialinvoke $r13.<org.apache.lucene.index.MultiDocsEnum$EnumWithSlice: void <init>()>();

        $r4[i3] = $r13;

        $r5 = r0.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] subs>;

        $r8 = $r5[i3];

        $r6 = r1[i3];

        $r7 = $r6.<org.apache.lucene.index.MultiDocsEnum$EnumWithSlice: org.apache.lucene.index.DocsEnum docsEnum>;

        $r8.<org.apache.lucene.index.MultiDocsEnum$EnumWithSlice: org.apache.lucene.index.DocsEnum docsEnum> = $r7;

        $r9 = r0.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] subs>;

        $r12 = $r9[i3];

        $r10 = r1[i3];

        $r11 = $r10.<org.apache.lucene.index.MultiDocsEnum$EnumWithSlice: org.apache.lucene.index.ReaderSlice slice>;

        $r12.<org.apache.lucene.index.MultiDocsEnum$EnumWithSlice: org.apache.lucene.index.ReaderSlice slice> = $r11;

        i3 = i3 + 1;

        goto label1;

     label2:
        $i5 = (int) -1;

        r0.<org.apache.lucene.index.MultiDocsEnum: int upto> = $i5;

        $i7 = (int) -1;

        r0.<org.apache.lucene.index.MultiDocsEnum: int doc> = $i7;

        r0.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.DocsEnum current> = null;

        return r0;
    }

    public boolean canReuse(org.apache.lucene.index.MultiTermsEnum)
    {
        org.apache.lucene.index.MultiTermsEnum r1, $r2;
        org.apache.lucene.index.MultiDocsEnum r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.MultiDocsEnum;

        r1 := @parameter0: org.apache.lucene.index.MultiTermsEnum;

        $r2 = r0.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.MultiTermsEnum parent>;

        if $r2 != r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getNumSubs()
    {
        int $i0;
        org.apache.lucene.index.MultiDocsEnum r0;

        r0 := @this: org.apache.lucene.index.MultiDocsEnum;

        $i0 = r0.<org.apache.lucene.index.MultiDocsEnum: int numSubs>;

        return $i0;
    }

    public org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] getSubs()
    {
        org.apache.lucene.index.MultiDocsEnum r0;
        org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] $r1;

        r0 := @this: org.apache.lucene.index.MultiDocsEnum;

        $r1 = r0.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] subs>;

        return $r1;
    }

    public int freq() throws java.io.IOException
    {
        int $i0;
        org.apache.lucene.index.DocsEnum $r1;
        org.apache.lucene.index.MultiDocsEnum r0;

        r0 := @this: org.apache.lucene.index.MultiDocsEnum;

        $r1 = r0.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.DocsEnum current>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.DocsEnum: int freq()>();

        return $i0;
    }

    public int docID()
    {
        int $i0;
        org.apache.lucene.index.MultiDocsEnum r0;

        r0 := @this: org.apache.lucene.index.MultiDocsEnum;

        $i0 = r0.<org.apache.lucene.index.MultiDocsEnum: int doc>;

        return $i0;
    }

    public int advance(int) throws java.io.IOException
    {
        java.lang.AssertionError $r9;
        org.apache.lucene.index.ReaderSlice $r6;
        org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] $r1, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, i15;
        org.apache.lucene.index.MultiDocsEnum r0;
        boolean $z0;
        org.apache.lucene.index.MultiDocsEnum$EnumWithSlice $r2, $r5;
        org.apache.lucene.index.DocsEnum $r3, $r7, $r8, $r10;

        r0 := @this: org.apache.lucene.index.MultiDocsEnum;

        i8 := @parameter0: int;

        $z0 = <org.apache.lucene.index.MultiDocsEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i14 = r0.<org.apache.lucene.index.MultiDocsEnum: int doc>;

        if i8 > $i14 goto label1;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label1:
        $r10 = r0.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.DocsEnum current>;

        if $r10 == null goto label6;

        $i9 = r0.<org.apache.lucene.index.MultiDocsEnum: int currentBase>;

        if i8 >= $i9 goto label2;

        $r8 = r0.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.DocsEnum current>;

        i15 = virtualinvoke $r8.<org.apache.lucene.index.DocsEnum: int nextDoc()>();

        goto label3;

     label2:
        $r7 = r0.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.DocsEnum current>;

        $i10 = r0.<org.apache.lucene.index.MultiDocsEnum: int currentBase>;

        $i11 = i8 - $i10;

        i15 = virtualinvoke $r7.<org.apache.lucene.index.DocsEnum: int advance(int)>($i11);

     label3:
        if i15 != 2147483647 goto label4;

        r0.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.DocsEnum current> = null;

        goto label5;

     label4:
        $i12 = r0.<org.apache.lucene.index.MultiDocsEnum: int currentBase>;

        $i13 = i15 + $i12;

        r0.<org.apache.lucene.index.MultiDocsEnum: int doc> = $i13;

        return $i13;

     label5:
        goto label1;

     label6:
        $i2 = r0.<org.apache.lucene.index.MultiDocsEnum: int upto>;

        $i0 = r0.<org.apache.lucene.index.MultiDocsEnum: int numSubs>;

        $i1 = $i0 - 1;

        if $i2 != $i1 goto label7;

        r0.<org.apache.lucene.index.MultiDocsEnum: int doc> = 2147483647;

        return 2147483647;

     label7:
        $i3 = r0.<org.apache.lucene.index.MultiDocsEnum: int upto>;

        $i4 = $i3 + 1;

        r0.<org.apache.lucene.index.MultiDocsEnum: int upto> = $i4;

        $r1 = r0.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] subs>;

        $i5 = r0.<org.apache.lucene.index.MultiDocsEnum: int upto>;

        $r2 = $r1[$i5];

        $r3 = $r2.<org.apache.lucene.index.MultiDocsEnum$EnumWithSlice: org.apache.lucene.index.DocsEnum docsEnum>;

        r0.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.DocsEnum current> = $r3;

        $r4 = r0.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] subs>;

        $i6 = r0.<org.apache.lucene.index.MultiDocsEnum: int upto>;

        $r5 = $r4[$i6];

        $r6 = $r5.<org.apache.lucene.index.MultiDocsEnum$EnumWithSlice: org.apache.lucene.index.ReaderSlice slice>;

        $i7 = $r6.<org.apache.lucene.index.ReaderSlice: int start>;

        r0.<org.apache.lucene.index.MultiDocsEnum: int currentBase> = $i7;

        goto label1;
    }

    public int nextDoc() throws java.io.IOException
    {
        org.apache.lucene.index.ReaderSlice $r8;
        org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] $r3, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        org.apache.lucene.index.MultiDocsEnum r0;
        org.apache.lucene.index.MultiDocsEnum$EnumWithSlice $r4, $r7;
        org.apache.lucene.index.DocsEnum $r1, $r2, $r5;

        r0 := @this: org.apache.lucene.index.MultiDocsEnum;

     label1:
        $r1 = r0.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.DocsEnum current>;

        if $r1 != null goto label3;

        $i5 = r0.<org.apache.lucene.index.MultiDocsEnum: int upto>;

        $i3 = r0.<org.apache.lucene.index.MultiDocsEnum: int numSubs>;

        $i4 = $i3 - 1;

        if $i5 != $i4 goto label2;

        r0.<org.apache.lucene.index.MultiDocsEnum: int doc> = 2147483647;

        return 2147483647;

     label2:
        $i6 = r0.<org.apache.lucene.index.MultiDocsEnum: int upto>;

        $i7 = $i6 + 1;

        r0.<org.apache.lucene.index.MultiDocsEnum: int upto> = $i7;

        $r3 = r0.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] subs>;

        $i8 = r0.<org.apache.lucene.index.MultiDocsEnum: int upto>;

        $r4 = $r3[$i8];

        $r5 = $r4.<org.apache.lucene.index.MultiDocsEnum$EnumWithSlice: org.apache.lucene.index.DocsEnum docsEnum>;

        r0.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.DocsEnum current> = $r5;

        $r6 = r0.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] subs>;

        $i9 = r0.<org.apache.lucene.index.MultiDocsEnum: int upto>;

        $r7 = $r6[$i9];

        $r8 = $r7.<org.apache.lucene.index.MultiDocsEnum$EnumWithSlice: org.apache.lucene.index.ReaderSlice slice>;

        $i10 = $r8.<org.apache.lucene.index.ReaderSlice: int start>;

        r0.<org.apache.lucene.index.MultiDocsEnum: int currentBase> = $i10;

     label3:
        $r2 = r0.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.DocsEnum current>;

        $i0 = virtualinvoke $r2.<org.apache.lucene.index.DocsEnum: int nextDoc()>();

        if $i0 == 2147483647 goto label4;

        $i1 = r0.<org.apache.lucene.index.MultiDocsEnum: int currentBase>;

        $i2 = $i1 + $i0;

        r0.<org.apache.lucene.index.MultiDocsEnum: int doc> = $i2;

        return $i2;

     label4:
        r0.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.DocsEnum current> = null;

        goto label1;
    }

    public long cost()
    {
        org.apache.lucene.index.MultiDocsEnum$EnumWithSlice $r2;
        long $l1, l2;
        org.apache.lucene.index.DocsEnum $r3;
        org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] $r1;
        int $i0, i3;
        org.apache.lucene.index.MultiDocsEnum r0;

        r0 := @this: org.apache.lucene.index.MultiDocsEnum;

        l2 = 0L;

        i3 = 0;

     label1:
        $i0 = r0.<org.apache.lucene.index.MultiDocsEnum: int numSubs>;

        if i3 >= $i0 goto label2;

        $r1 = r0.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] subs>;

        $r2 = $r1[i3];

        $r3 = $r2.<org.apache.lucene.index.MultiDocsEnum$EnumWithSlice: org.apache.lucene.index.DocsEnum docsEnum>;

        $l1 = virtualinvoke $r3.<org.apache.lucene.index.DocsEnum: long cost()>();

        l2 = l2 + $l1;

        i3 = i3 + 1;

        goto label1;

     label2:
        return l2;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] $r3;
        java.lang.StringBuilder $r0, $r1, $r5, $r6;
        java.lang.String $r4, $r7;
        org.apache.lucene.index.MultiDocsEnum r2;

        r2 := @this: org.apache.lucene.index.MultiDocsEnum;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MultiDocsEnum(");

        $r3 = virtualinvoke r2.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] getSubs()>();

        $r4 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r3);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/MultiDocsEnum;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.MultiDocsEnum: boolean $assertionsDisabled> = $z1;

        return;
    }
}
