public class org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator extends org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator
{
    private java.util.List beanNames;

    public void <init>()
    {
        org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator r0;

        r0 := @this: org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator;

        specialinvoke r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: void <init>()>();

        return;
    }

    public void setBeanNames(java.lang.String[])
    {
        java.lang.String[] r0;
        java.util.ArrayList $r2;
        java.util.List $r4;
        int $i0, i1, i2;
        java.lang.String r3, $r5;
        org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator r1;

        r1 := @this: org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator;

        r0 := @parameter0: java.lang.String[];

        staticinvoke <org.springframework.util.Assert: void notEmpty(java.lang.Object[],java.lang.String)>(r0, "\'beanNames\' must not be empty");

        $r2 = new java.util.ArrayList;

        $i0 = lengthof r0;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0);

        r1.<org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator: java.util.List beanNames> = $r2;

        i1 = lengthof r0;

        i2 = 0;

        goto label2;

     label1:
        r3 = r0[i2];

        $r4 = r1.<org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator: java.util.List beanNames>;

        $r5 = staticinvoke <org.springframework.util.StringUtils: java.lang.String trimWhitespace(java.lang.String)>(r3);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        i2 = i2 + 1;

     label2:
        if i2 < i1 goto label1;

        return;
    }

    protected java.lang.Object[] getAdvicesAndAdvisorsForBean(java.lang.Class, java.lang.String, org.springframework.aop.TargetSource)
    {
        java.lang.Object[] $r2, $r12, $r13;
        org.springframework.aop.TargetSource r15;
        java.lang.String[] $r10;
        int i0, $i1, i2;
        java.lang.String r8, r11, $r14, r16;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r4;
        java.util.List $r1, $r3;
        org.springframework.beans.factory.BeanFactory $r9;
        java.lang.Object $r5;
        java.lang.Class r6, $r7;
        org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator r0;

        r0 := @this: org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator;

        r6 := @parameter0: java.lang.Class;

        r8 := @parameter1: java.lang.String;

        r15 := @parameter2: org.springframework.aop.TargetSource;

        $r1 = r0.<org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator: java.util.List beanNames>;

        if $r1 == null goto label9;

        $r3 = r0.<org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator: java.util.List beanNames>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        goto label8;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.lang.String) $r5;

        $r7 = class "Lorg/springframework/beans/factory/FactoryBean;";

        $z0 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r6);

        if $z0 == 0 goto label3;

        $z3 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>("&");

        if $z3 != 0 goto label2;

        goto label8;

     label2:
        $r14 = "&";

        $i1 = virtualinvoke $r14.<java.lang.String: int length()>();

        r16 = virtualinvoke r16.<java.lang.String: java.lang.String substring(int)>($i1);

     label3:
        $z1 = virtualinvoke r0.<org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator: boolean isMatch(java.lang.String,java.lang.String)>(r8, r16);

        if $z1 == 0 goto label4;

        $r13 = <org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator: java.lang.Object[] PROXY_WITHOUT_ADDITIONAL_INTERCEPTORS>;

        return $r13;

     label4:
        $r9 = virtualinvoke r0.<org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator: org.springframework.beans.factory.BeanFactory getBeanFactory()>();

        if $r9 == null goto label8;

        $r10 = interfaceinvoke $r9.<org.springframework.beans.factory.BeanFactory: java.lang.String[] getAliases(java.lang.String)>(r8);

        i0 = lengthof $r10;

        i2 = 0;

        goto label7;

     label5:
        r11 = $r10[i2];

        $z2 = virtualinvoke r0.<org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator: boolean isMatch(java.lang.String,java.lang.String)>(r11, r16);

        if $z2 == 0 goto label6;

        $r12 = <org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator: java.lang.Object[] PROXY_WITHOUT_ADDITIONAL_INTERCEPTORS>;

        return $r12;

     label6:
        i2 = i2 + 1;

     label7:
        if i2 < i0 goto label5;

     label8:
        $z4 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label1;

     label9:
        $r2 = <org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator: java.lang.Object[] DO_NOT_PROXY>;

        return $r2;
    }

    protected boolean isMatch(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator r2;
        boolean $z0;

        r2 := @this: org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $z0 = staticinvoke <org.springframework.util.PatternMatchUtils: boolean simpleMatch(java.lang.String,java.lang.String)>(r0, r1);

        return $z0;
    }
}
