public class ucar.nc2.dataset.StructureDS extends ucar.nc2.Structure implements ucar.nc2.dataset.VariableEnhanced
{
    private static org.slf4j.Logger log;
    private ucar.nc2.dataset.EnhancementsImpl proxy;
    protected ucar.nc2.Structure orgVar;
    private java.lang.String orgName;

    protected void <init>(ucar.nc2.NetcdfFile, ucar.nc2.Group, java.lang.String)
    {
        ucar.nc2.dataset.StructureDS r0;
        ucar.nc2.NetcdfFile r1;
        java.lang.String r3;
        ucar.nc2.Group r2;

        r0 := @this: ucar.nc2.dataset.StructureDS;

        r1 := @parameter0: ucar.nc2.NetcdfFile;

        r2 := @parameter1: ucar.nc2.Group;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<ucar.nc2.Structure: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r1, r2, null, r3);

        return;
    }

    public void <init>(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Group, ucar.nc2.Structure, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        ucar.nc2.Group r2;
        ucar.nc2.Structure r3;
        ucar.nc2.dataset.StructureDS r0;
        ucar.nc2.dataset.EnhancementsImpl $r6;
        ucar.nc2.Attribute $r9, $r10;
        java.lang.String r4, r5, r7, r8;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.dataset.StructureDS;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: ucar.nc2.Group;

        r3 := @parameter2: ucar.nc2.Structure;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r7 := @parameter5: java.lang.String;

        r8 := @parameter6: java.lang.String;

        specialinvoke r0.<ucar.nc2.Structure: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r1, r2, r3, r4);

        virtualinvoke r0.<ucar.nc2.dataset.StructureDS: void setDimensions(java.lang.String)>(r5);

        $r6 = new ucar.nc2.dataset.EnhancementsImpl;

        specialinvoke $r6.<ucar.nc2.dataset.EnhancementsImpl: void <init>(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r0, r7, r8);

        r0.<ucar.nc2.dataset.StructureDS: ucar.nc2.dataset.EnhancementsImpl proxy> = $r6;

        if r7 == null goto label1;

        $r10 = new ucar.nc2.Attribute;

        specialinvoke $r10.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", r7);

        virtualinvoke r0.<ucar.nc2.dataset.StructureDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r10);

     label1:
        if r8 == null goto label2;

        $r9 = new ucar.nc2.Attribute;

        specialinvoke $r9.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", r8);

        virtualinvoke r0.<ucar.nc2.dataset.StructureDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r9);

     label2:
        return;
    }

    public void <init>(ucar.nc2.Group, ucar.nc2.Structure)
    {
        java.util.Iterator $r7;
        ucar.nc2.Structure r1;
        ucar.nc2.Group r2;
        java.util.ArrayList $r4;
        java.util.List $r5, $r6;
        ucar.nc2.dataset.StructureDS r0;
        ucar.nc2.dataset.EnhancementsImpl $r3;
        int $i0;
        java.lang.Object $r8;
        ucar.nc2.Variable r9, $r10;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.dataset.StructureDS;

        r2 := @parameter0: ucar.nc2.Group;

        r1 := @parameter1: ucar.nc2.Structure;

        specialinvoke r0.<ucar.nc2.Structure: void <init>(ucar.nc2.Structure)>(r1);

        r0.<ucar.nc2.dataset.StructureDS: ucar.nc2.Group group> = r2;

        r0.<ucar.nc2.dataset.StructureDS: ucar.nc2.Structure orgVar> = r1;

        $r3 = new ucar.nc2.dataset.EnhancementsImpl;

        specialinvoke $r3.<ucar.nc2.dataset.EnhancementsImpl: void <init>(ucar.nc2.Variable)>(r0);

        r0.<ucar.nc2.dataset.StructureDS: ucar.nc2.dataset.EnhancementsImpl proxy> = $r3;

        r0.<ucar.nc2.dataset.StructureDS: ucar.nc2.NetcdfFile ncfile> = null;

        r0.<ucar.nc2.dataset.StructureDS: java.lang.Object spiObject> = null;

        virtualinvoke r0.<ucar.nc2.dataset.StructureDS: void createNewCache()>();

        $z0 = r1 instanceof ucar.nc2.dataset.StructureDS;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = new java.util.ArrayList;

        $r5 = r0.<ucar.nc2.dataset.StructureDS: java.util.List members>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i0);

        $r6 = r0.<ucar.nc2.dataset.StructureDS: java.util.List members>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (ucar.nc2.Variable) $r8;

        $r10 = specialinvoke r0.<ucar.nc2.dataset.StructureDS: ucar.nc2.Variable convertVariable(ucar.nc2.Group,ucar.nc2.Variable)>(r2, r9);

        virtualinvoke $r10.<ucar.nc2.Variable: void setParentStructure(ucar.nc2.Structure)>(r0);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label2;

     label3:
        virtualinvoke r0.<ucar.nc2.dataset.StructureDS: void setMemberVariables(java.util.List)>($r4);

        return;
    }

    private ucar.nc2.Variable convertVariable(ucar.nc2.Group, ucar.nc2.Variable)
    {
        ucar.nc2.dataset.VariableDS $r1;
        ucar.nc2.Group r2;
        ucar.nc2.Structure $r4;
        ucar.nc2.dataset.StructureDS $r3, r7;
        ucar.nc2.Sequence $r6;
        ucar.nc2.Variable r0, r8;
        boolean $z0, $z1;
        ucar.nc2.dataset.SequenceDS $r5;

        r7 := @this: ucar.nc2.dataset.StructureDS;

        r2 := @parameter0: ucar.nc2.Group;

        r0 := @parameter1: ucar.nc2.Variable;

        $z0 = r0 instanceof ucar.nc2.Sequence;

        if $z0 == 0 goto label1;

        $r5 = new ucar.nc2.dataset.SequenceDS;

        $r6 = (ucar.nc2.Sequence) r0;

        specialinvoke $r5.<ucar.nc2.dataset.SequenceDS: void <init>(ucar.nc2.Group,ucar.nc2.Sequence)>(r2, $r6);

        r8 = $r5;

        goto label3;

     label1:
        $z1 = r0 instanceof ucar.nc2.Structure;

        if $z1 == 0 goto label2;

        $r3 = new ucar.nc2.dataset.StructureDS;

        $r4 = (ucar.nc2.Structure) r0;

        specialinvoke $r3.<ucar.nc2.dataset.StructureDS: void <init>(ucar.nc2.Group,ucar.nc2.Structure)>(r2, $r4);

        r8 = $r3;

        goto label3;

     label2:
        $r1 = new ucar.nc2.dataset.VariableDS;

        specialinvoke $r1.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.Group,ucar.nc2.Variable,boolean)>(r2, r0, 0);

        r8 = $r1;

     label3:
        return r8;
    }

    public void <init>(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Group, ucar.nc2.Structure, java.lang.String, ucar.nc2.Structure)
    {
        java.lang.IllegalArgumentException $r6;
        ucar.nc2.Group r2;
        ucar.nc2.Structure r3, r5;
        ucar.nc2.dataset.StructureDS r0;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String r4, $r9, $r11;
        ucar.nc2.dataset.NetcdfDataset r1;
        boolean $z0;

        r0 := @this: ucar.nc2.dataset.StructureDS;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: ucar.nc2.Group;

        r3 := @parameter2: ucar.nc2.Structure;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: ucar.nc2.Structure;

        specialinvoke r0.<ucar.nc2.Structure: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r1, r2, r3, r4);

        $z0 = r5 instanceof ucar.nc2.Structure;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("VariableDS must not wrap a Structure; name=");

        $r9 = virtualinvoke r5.<ucar.nc2.Structure: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label1:
        r0.<ucar.nc2.dataset.StructureDS: java.lang.Object spiObject> = null;

        virtualinvoke r0.<ucar.nc2.dataset.StructureDS: void createNewCache()>();

        r0.<ucar.nc2.dataset.StructureDS: ucar.nc2.Structure orgVar> = r5;

        return;
    }

    protected ucar.nc2.Variable copy()
    {
        ucar.nc2.dataset.StructureDS $r0, r1;
        ucar.nc2.Group $r2;

        r1 := @this: ucar.nc2.dataset.StructureDS;

        $r0 = new ucar.nc2.dataset.StructureDS;

        $r2 = r1.<ucar.nc2.dataset.StructureDS: ucar.nc2.Group group>;

        specialinvoke $r0.<ucar.nc2.dataset.StructureDS: void <init>(ucar.nc2.Group,ucar.nc2.Structure)>($r2, r1);

        return $r0;
    }

    public ucar.nc2.Structure select(java.util.List)
    {
        java.util.Iterator $r6;
        ucar.nc2.Structure $r2;
        ucar.nc2.Group $r3;
        java.util.ArrayList $r4;
        java.util.List r5;
        ucar.nc2.dataset.StructureDS $r0, r1;
        java.lang.Object $r7;
        ucar.nc2.Variable $r9;
        java.lang.String r8;
        boolean $z0;

        r1 := @this: ucar.nc2.dataset.StructureDS;

        r5 := @parameter0: java.util.List;

        $r0 = new ucar.nc2.dataset.StructureDS;

        $r3 = r1.<ucar.nc2.dataset.StructureDS: ucar.nc2.Group group>;

        $r2 = r1.<ucar.nc2.dataset.StructureDS: ucar.nc2.Structure orgVar>;

        specialinvoke $r0.<ucar.nc2.dataset.StructureDS: void <init>(ucar.nc2.Group,ucar.nc2.Structure)>($r3, $r2);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r7;

        $r9 = virtualinvoke r1.<ucar.nc2.dataset.StructureDS: ucar.nc2.Variable findVariable(java.lang.String)>(r8);

        if null == $r9 goto label2;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r9);

     label2:
        goto label1;

     label3:
        virtualinvoke $r0.<ucar.nc2.dataset.StructureDS: void setMemberVariables(java.util.List)>($r4);

        $r0.<ucar.nc2.dataset.StructureDS: boolean isSubset> = 1;

        return $r0;
    }

    public ucar.nc2.Variable getOriginalVariable()
    {
        ucar.nc2.dataset.StructureDS r0;
        ucar.nc2.Structure $r1;

        r0 := @this: ucar.nc2.dataset.StructureDS;

        $r1 = r0.<ucar.nc2.dataset.StructureDS: ucar.nc2.Structure orgVar>;

        return $r1;
    }

    public void setOriginalVariable(ucar.nc2.Variable)
    {
        java.lang.IllegalArgumentException $r3;
        ucar.nc2.Structure $r2;
        ucar.nc2.dataset.StructureDS r1;
        ucar.nc2.Variable r0;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8;
        boolean $z0;

        r1 := @this: ucar.nc2.dataset.StructureDS;

        r0 := @parameter0: ucar.nc2.Variable;

        $z0 = r0 instanceof ucar.nc2.Structure;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("STructureDS must wrap a Structure; name=");

        $r6 = virtualinvoke r0.<ucar.nc2.Variable: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label1:
        $r2 = (ucar.nc2.Structure) r0;

        r1.<ucar.nc2.dataset.StructureDS: ucar.nc2.Structure orgVar> = $r2;

        return;
    }

    public ucar.ma2.DataType getOriginalDataType()
    {
        ucar.ma2.DataType $r0;
        ucar.nc2.dataset.StructureDS r1;

        r1 := @this: ucar.nc2.dataset.StructureDS;

        $r0 = <ucar.ma2.DataType: ucar.ma2.DataType STRUCTURE>;

        return $r0;
    }

    public java.lang.String getOriginalName()
    {
        ucar.nc2.dataset.StructureDS r0;
        java.lang.String $r1;

        r0 := @this: ucar.nc2.dataset.StructureDS;

        $r1 = r0.<ucar.nc2.dataset.StructureDS: java.lang.String orgName>;

        return $r1;
    }

    public void setName(java.lang.String)
    {
        ucar.nc2.dataset.StructureDS r0;
        java.lang.String $r1, r2;

        r0 := @this: ucar.nc2.dataset.StructureDS;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<ucar.nc2.dataset.StructureDS: java.lang.String shortName>;

        r0.<ucar.nc2.dataset.StructureDS: java.lang.String orgName> = $r1;

        specialinvoke r0.<ucar.nc2.Structure: void setName(java.lang.String)>(r2);

        return;
    }

    public ucar.ma2.Array reallyRead(ucar.nc2.Variable, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.lang.IllegalStateException $r2;
        ucar.ma2.ArrayStructure $r4;
        ucar.nc2.Structure $r1, $r3;
        ucar.ma2.Array r7;
        ucar.nc2.dataset.StructureDS r0;
        ucar.nc2.util.CancelTask r6;
        ucar.nc2.Variable r5;
        boolean $z0;

        r0 := @this: ucar.nc2.dataset.StructureDS;

        r5 := @parameter0: ucar.nc2.Variable;

        r6 := @parameter1: ucar.nc2.util.CancelTask;

        $z0 = virtualinvoke r0.<ucar.nc2.dataset.StructureDS: boolean hasCachedData()>();

        if $z0 == 0 goto label1;

        r7 = specialinvoke r0.<ucar.nc2.Structure: ucar.ma2.Array reallyRead(ucar.nc2.Variable,ucar.nc2.util.CancelTask)>(r5, r6);

        goto label3;

     label1:
        $r1 = r0.<ucar.nc2.dataset.StructureDS: ucar.nc2.Structure orgVar>;

        if $r1 == null goto label2;

        $r3 = r0.<ucar.nc2.dataset.StructureDS: ucar.nc2.Structure orgVar>;

        r7 = virtualinvoke $r3.<ucar.nc2.Structure: ucar.ma2.Array read()>();

        goto label3;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("StructureDS has no way to get data");

        throw $r2;

     label3:
        $r4 = virtualinvoke r0.<ucar.nc2.dataset.StructureDS: ucar.ma2.ArrayStructure convert(ucar.ma2.Array,ucar.ma2.Section)>(r7, null);

        return $r4;
    }

    public ucar.ma2.Array reallyRead(ucar.nc2.Variable, ucar.ma2.Section, ucar.nc2.util.CancelTask) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        java.lang.IllegalStateException $r3;
        ucar.ma2.Section r0;
        ucar.ma2.ArrayStructure $r5;
        long $l0, $l1;
        ucar.nc2.Structure $r2, $r4;
        ucar.ma2.Array $r8, r9;
        ucar.nc2.dataset.StructureDS r1;
        ucar.nc2.util.CancelTask r7;
        byte $b2;
        ucar.nc2.Variable r6;
        boolean $z0;

        r1 := @this: ucar.nc2.dataset.StructureDS;

        r6 := @parameter0: ucar.nc2.Variable;

        r0 := @parameter1: ucar.ma2.Section;

        r7 := @parameter2: ucar.nc2.util.CancelTask;

        $l0 = virtualinvoke r0.<ucar.ma2.Section: long computeSize()>();

        $l1 = virtualinvoke r1.<ucar.nc2.dataset.StructureDS: long getSize()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label1;

        $r8 = virtualinvoke r1.<ucar.nc2.dataset.StructureDS: ucar.ma2.Array _read()>();

        return $r8;

     label1:
        $z0 = virtualinvoke r1.<ucar.nc2.dataset.StructureDS: boolean hasCachedData()>();

        if $z0 == 0 goto label2;

        r9 = specialinvoke r1.<ucar.nc2.Structure: ucar.ma2.Array reallyRead(ucar.nc2.Variable,ucar.ma2.Section,ucar.nc2.util.CancelTask)>(r6, r0, r7);

        goto label4;

     label2:
        $r2 = r1.<ucar.nc2.dataset.StructureDS: ucar.nc2.Structure orgVar>;

        if $r2 == null goto label3;

        $r4 = r1.<ucar.nc2.dataset.StructureDS: ucar.nc2.Structure orgVar>;

        r9 = virtualinvoke $r4.<ucar.nc2.Structure: ucar.ma2.Array read(ucar.ma2.Section)>(r0);

        goto label4;

     label3:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("StructureDS has no way to get data");

        throw $r3;

     label4:
        $r5 = virtualinvoke r1.<ucar.nc2.dataset.StructureDS: ucar.ma2.ArrayStructure convert(ucar.ma2.Array,ucar.ma2.Section)>(r9, r0);

        return $r5;
    }

    private boolean convertNeeded(ucar.ma2.StructureMembers)
    {
        ucar.nc2.dataset.VariableDS r6;
        java.util.Iterator $r2;
        java.util.List $r1;
        ucar.nc2.dataset.StructureDS r0, r7;
        ucar.ma2.StructureMembers r5;
        java.lang.Object $r3;
        ucar.nc2.Variable r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: ucar.nc2.dataset.StructureDS;

        r5 := @parameter0: ucar.ma2.StructureMembers;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.StructureDS: java.util.List getVariables()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.nc2.Variable) $r3;

        $z1 = r4 instanceof ucar.nc2.dataset.VariableDS;

        if $z1 == 0 goto label3;

        r6 = (ucar.nc2.dataset.VariableDS) r4;

        $z5 = virtualinvoke r6.<ucar.nc2.dataset.VariableDS: boolean needConvert()>();

        if $z5 == 0 goto label2;

        return 1;

     label2:
        goto label4;

     label3:
        $z2 = r4 instanceof ucar.nc2.dataset.StructureDS;

        if $z2 == 0 goto label4;

        r7 = (ucar.nc2.dataset.StructureDS) r4;

        $z4 = specialinvoke r7.<ucar.nc2.dataset.StructureDS: boolean convertNeeded(ucar.ma2.StructureMembers)>(null);

        if $z4 == 0 goto label4;

        return 1;

     label4:
        if r5 == null goto label5;

        $z3 = specialinvoke r0.<ucar.nc2.dataset.StructureDS: boolean varHasData(ucar.nc2.Variable,ucar.ma2.StructureMembers)>(r4, r5);

        if $z3 != 0 goto label5;

        return 1;

     label5:
        goto label1;

     label6:
        return 0;
    }

    protected ucar.ma2.ArrayStructure convert(ucar.ma2.Array, ucar.ma2.Section) throws java.io.IOException
    {
        ucar.ma2.StructureMembers$Member $r21, r42;
        byte $b4;
        ucar.nc2.Group $r11;
        ucar.ma2.StructureMembers $r3, $r7, $r38, $r47;
        ucar.nc2.dataset.StructureDS$SequenceConverter $r50;
        ucar.ma2.Section r14;
        long $l0, $l2, $l3;
        ucar.nc2.Structure $r36;
        java.lang.String $r12, $r16, $r17, $r18, $r23, $r37, $r41;
        java.io.IOException $r51;
        ucar.ma2.Array r0, $r15, $r27, $r29, $r34, $r35;
        ucar.ma2.InvalidRangeException $r39;
        ucar.nc2.dataset.StructureDS r2, r45;
        ucar.nc2.dataset.VariableEnhanced r43;
        ucar.ma2.ArrayStructure r1, $r28;
        int[] $r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        ucar.nc2.dataset.VariableDS r44;
        ucar.ma2.DataType $r19, $r25, $r26;
        ucar.ma2.ArrayObject$D1 r46, $r49;
        java.util.List $r5, $r8;
        int $i1, i5, $i6;
        ucar.nc2.Variable $r13, $r24, r48;
        ucar.ma2.ArrayStructureMA $r4;
        java.util.Iterator $r6, $r9;
        ucar.ma2.ArraySequence r32;
        java.lang.Object $r10, $r22, $r31;

        r2 := @this: ucar.nc2.dataset.StructureDS;

        r0 := @parameter0: ucar.ma2.Array;

        r14 := @parameter1: ucar.ma2.Section;

        r1 = (ucar.ma2.ArrayStructure) r0;

        $r3 = virtualinvoke r1.<ucar.ma2.ArrayStructure: ucar.ma2.StructureMembers getStructureMembers()>();

        $z0 = specialinvoke r2.<ucar.nc2.dataset.StructureDS: boolean convertNeeded(ucar.ma2.StructureMembers)>($r3);

        if $z0 != 0 goto label01;

        $r38 = virtualinvoke r1.<ucar.ma2.ArrayStructure: ucar.ma2.StructureMembers getStructureMembers()>();

        specialinvoke r2.<ucar.nc2.dataset.StructureDS: void convertMemberInfo(ucar.ma2.StructureMembers)>($r38);

        return r1;

     label01:
        $r4 = staticinvoke <ucar.ma2.ArrayStructureMA: ucar.ma2.ArrayStructureMA factoryMA(ucar.ma2.ArrayStructure)>(r1);

        $r5 = virtualinvoke $r4.<ucar.ma2.ArrayStructure: java.util.List getMembers()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z7 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label12;

        $r22 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r42 = (ucar.ma2.StructureMembers$Member) $r22;

        $r23 = virtualinvoke r42.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        $r24 = virtualinvoke r2.<ucar.nc2.dataset.StructureDS: ucar.nc2.Variable findVariable(java.lang.String)>($r23);

        r43 = (ucar.nc2.dataset.VariableEnhanced) $r24;

        if r43 != null goto label03;

        $r36 = r2.<ucar.nc2.dataset.StructureDS: ucar.nc2.Structure orgVar>;

        if $r36 == null goto label03;

        $r37 = virtualinvoke r42.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        r43 = specialinvoke r2.<ucar.nc2.dataset.StructureDS: ucar.nc2.dataset.VariableEnhanced findVariableFromOrgName(java.lang.String)>($r37);

     label03:
        if r43 != null goto label04;

        goto label02;

     label04:
        $z3 = r43 instanceof ucar.nc2.dataset.VariableDS;

        if $z3 == 0 goto label06;

        r44 = (ucar.nc2.dataset.VariableDS) r43;

        $z6 = virtualinvoke r44.<ucar.nc2.dataset.VariableDS: boolean needConvert()>();

        if $z6 == 0 goto label05;

        $r34 = virtualinvoke $r4.<ucar.ma2.ArrayStructure: ucar.ma2.Array extractMemberArray(ucar.ma2.StructureMembers$Member)>(r42);

        $r35 = virtualinvoke r44.<ucar.nc2.dataset.VariableDS: ucar.ma2.Array convert(ucar.ma2.Array)>($r34);

        virtualinvoke $r4.<ucar.ma2.ArrayStructure: void setMemberArray(ucar.ma2.StructureMembers$Member,ucar.ma2.Array)>(r42, $r35);

     label05:
        goto label11;

     label06:
        $z4 = r43 instanceof ucar.nc2.dataset.StructureDS;

        if $z4 == 0 goto label11;

        r45 = (ucar.nc2.dataset.StructureDS) r43;

        $z5 = specialinvoke r45.<ucar.nc2.dataset.StructureDS: boolean convertNeeded(ucar.ma2.StructureMembers)>(null);

        if $z5 == 0 goto label10;

        $r25 = virtualinvoke r45.<ucar.nc2.dataset.StructureDS: ucar.ma2.DataType getDataType()>();

        $r26 = <ucar.ma2.DataType: ucar.ma2.DataType SEQUENCE>;

        if $r25 != $r26 goto label09;

        $r29 = virtualinvoke $r4.<ucar.ma2.ArrayStructure: ucar.ma2.Array extractMemberArray(ucar.ma2.StructureMembers$Member)>(r42);

        r46 = (ucar.ma2.ArrayObject$D1) $r29;

        $r49 = new ucar.ma2.ArrayObject$D1;

        $l0 = virtualinvoke r46.<ucar.ma2.ArrayObject$D1: long getSize()>();

        $i1 = (int) $l0;

        specialinvoke $r49.<ucar.ma2.ArrayObject$D1: void <init>(java.lang.Class,int)>(class "Lucar/ma2/ArraySequence;", $i1);

        virtualinvoke r42.<ucar.ma2.StructureMembers$Member: void setDataArray(ucar.ma2.Array)>($r49);

        i5 = 0;

     label07:
        $l2 = (long) i5;

        $l3 = virtualinvoke r46.<ucar.ma2.ArrayObject$D1: long getSize()>();

        $b4 = $l2 cmp $l3;

        $i6 = (int) $b4;

        if $i6 >= 0 goto label08;

        $r31 = virtualinvoke r46.<ucar.ma2.ArrayObject$D1: java.lang.Object get(int)>(i5);

        r32 = (ucar.ma2.ArraySequence) $r31;

        $r50 = new ucar.nc2.dataset.StructureDS$SequenceConverter;

        specialinvoke $r50.<ucar.nc2.dataset.StructureDS$SequenceConverter: void <init>(ucar.nc2.dataset.StructureDS,ucar.nc2.dataset.StructureDS,ucar.ma2.ArraySequence)>(r2, r45, r32);

        virtualinvoke $r49.<ucar.ma2.ArrayObject$D1: void set(int,java.lang.Object)>(i5, $r50);

        i5 = i5 + 1;

        goto label07;

     label08:
        goto label10;

     label09:
        $r27 = virtualinvoke $r4.<ucar.ma2.ArrayStructure: ucar.ma2.Array extractMemberArray(ucar.ma2.StructureMembers$Member)>(r42);

        $r28 = virtualinvoke r45.<ucar.nc2.dataset.StructureDS: ucar.ma2.ArrayStructure convert(ucar.ma2.Array,ucar.ma2.Section)>($r27, null);

        virtualinvoke $r4.<ucar.ma2.ArrayStructure: void setMemberArray(ucar.ma2.StructureMembers$Member,ucar.ma2.Array)>(r42, $r28);

     label10:
        $r47 = virtualinvoke r42.<ucar.ma2.StructureMembers$Member: ucar.ma2.StructureMembers getStructureMembers()>();

        specialinvoke r45.<ucar.nc2.dataset.StructureDS: void convertMemberInfo(ucar.ma2.StructureMembers)>($r47);

     label11:
        goto label02;

     label12:
        $r7 = virtualinvoke $r4.<ucar.ma2.ArrayStructure: ucar.ma2.StructureMembers getStructureMembers()>();

        specialinvoke r2.<ucar.nc2.dataset.StructureDS: void convertMemberInfo(ucar.ma2.StructureMembers)>($r7);

        $r8 = virtualinvoke r2.<ucar.nc2.dataset.StructureDS: java.util.List getVariables()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label18;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r48 = (ucar.nc2.Variable) $r10;

        $z2 = specialinvoke r2.<ucar.nc2.dataset.StructureDS: boolean varHasData(ucar.nc2.Variable,ucar.ma2.StructureMembers)>(r48, $r7);

        if $z2 != 0 goto label17;

     label14:
        $r11 = virtualinvoke r2.<ucar.nc2.dataset.StructureDS: ucar.nc2.Group getParentGroup()>();

        $r12 = virtualinvoke r48.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r13 = virtualinvoke $r11.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r12);

        $r15 = virtualinvoke $r13.<ucar.nc2.Variable: ucar.ma2.Array read(ucar.ma2.Section)>(r14);

        $r16 = virtualinvoke r48.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r17 = virtualinvoke r48.<ucar.nc2.Variable: java.lang.String getDescription()>();

        $r18 = virtualinvoke r48.<ucar.nc2.Variable: java.lang.String getUnitsString()>();

        $r19 = virtualinvoke r48.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r20 = virtualinvoke r48.<ucar.nc2.Variable: int[] getShape()>();

        $r21 = virtualinvoke $r7.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member addMember(java.lang.String,java.lang.String,java.lang.String,ucar.ma2.DataType,int[])>($r16, $r17, $r18, $r19, $r20);

        virtualinvoke $r4.<ucar.ma2.ArrayStructure: void setMemberArray(ucar.ma2.StructureMembers$Member,ucar.ma2.Array)>($r21, $r15);

     label15:
        goto label17;

     label16:
        $r39 := @caughtexception;

        $r51 = new java.io.IOException;

        $r41 = virtualinvoke $r39.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        specialinvoke $r51.<java.io.IOException: void <init>(java.lang.String)>($r41);

        throw $r51;

     label17:
        goto label13;

     label18:
        return $r4;

        catch ucar.ma2.InvalidRangeException from label14 to label15 with label16;
    }

    protected ucar.ma2.StructureData convert(ucar.ma2.StructureData, int) throws java.io.IOException
    {
        ucar.ma2.StructureMembers$Member $r23, $r28, r53;
        byte $b5;
        ucar.nc2.Group $r12;
        ucar.ma2.StructureMembers $r2, $r4, $r8, $r33, $r49, $r61;
        java.lang.StringBuilder $r43, $r45, $r63;
        ucar.nc2.dataset.StructureDS$SequenceConverter $r65, $r66;
        ucar.ma2.Section $r16, $r67;
        long $l1, $l3, $l4;
        ucar.ma2.StructureDataW $r62;
        ucar.nc2.Structure $r47;
        java.lang.String $r13, $r18, $r19, $r20, $r25, $r27, $r44, $r46, $r48, $r52;
        java.io.IOException $r68;
        ucar.ma2.Array $r17, $r31, $r34, $r40, r56;
        ucar.ma2.InvalidRangeException $r50;
        ucar.nc2.dataset.StructureDS r0, r57;
        ucar.nc2.dataset.VariableEnhanced r54;
        ucar.ma2.ArrayStructure $r32;
        ucar.ma2.StructureData r1;
        int[] $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        ucar.nc2.dataset.VariableDS r55;
        ucar.ma2.DataType $r21, $r29, $r30;
        ucar.ma2.ArrayObject$D1 r58, $r64;
        java.util.List $r6, $r9;
        int i0, $i2, i6, $i7;
        ucar.nc2.Variable $r14, $r26, r60;
        org.slf4j.Logger $r42;
        java.util.Iterator $r7, $r10;
        ucar.ma2.ArraySequence r38, r59;
        java.lang.Object $r11, $r24, $r37;

        r0 := @this: ucar.nc2.dataset.StructureDS;

        r1 := @parameter0: ucar.ma2.StructureData;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r1.<ucar.ma2.StructureData: ucar.ma2.StructureMembers getStructureMembers()>();

        $z0 = specialinvoke r0.<ucar.nc2.dataset.StructureDS: boolean convertNeeded(ucar.ma2.StructureMembers)>($r2);

        if $z0 != 0 goto label01;

        $r49 = virtualinvoke r1.<ucar.ma2.StructureData: ucar.ma2.StructureMembers getStructureMembers()>();

        specialinvoke r0.<ucar.nc2.dataset.StructureDS: void convertMemberInfo(ucar.ma2.StructureMembers)>($r49);

        return r1;

     label01:
        $r61 = new ucar.ma2.StructureMembers;

        $r4 = virtualinvoke r1.<ucar.ma2.StructureData: ucar.ma2.StructureMembers getStructureMembers()>();

        specialinvoke $r61.<ucar.ma2.StructureMembers: void <init>(ucar.ma2.StructureMembers)>($r4);

        $r62 = new ucar.ma2.StructureDataW;

        specialinvoke $r62.<ucar.ma2.StructureDataW: void <init>(ucar.ma2.StructureMembers)>($r61);

        $r6 = virtualinvoke r1.<ucar.ma2.StructureData: java.util.List getMembers()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z6 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label14;

        $r24 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r53 = (ucar.ma2.StructureMembers$Member) $r24;

        $r25 = virtualinvoke r53.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        $r26 = virtualinvoke r0.<ucar.nc2.dataset.StructureDS: ucar.nc2.Variable findVariable(java.lang.String)>($r25);

        r54 = (ucar.nc2.dataset.VariableEnhanced) $r26;

        if r54 != null goto label03;

        $r47 = r0.<ucar.nc2.dataset.StructureDS: ucar.nc2.Structure orgVar>;

        if $r47 == null goto label03;

        $r48 = virtualinvoke r53.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        r54 = specialinvoke r0.<ucar.nc2.dataset.StructureDS: ucar.nc2.dataset.VariableEnhanced findVariableFromOrgName(java.lang.String)>($r48);

     label03:
        if r54 != null goto label04;

        $r42 = <ucar.nc2.dataset.StructureDS: org.slf4j.Logger log>;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StructureDataDS.convert Cant find member ");

        $r44 = virtualinvoke r53.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r42.<org.slf4j.Logger: void warn(java.lang.String)>($r46);

        goto label02;

     label04:
        $r27 = virtualinvoke r53.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        $r28 = virtualinvoke $r61.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r27);

        $z3 = r54 instanceof ucar.nc2.dataset.VariableDS;

        if $z3 == 0 goto label06;

        r55 = (ucar.nc2.dataset.VariableDS) r54;

        $r40 = virtualinvoke r1.<ucar.ma2.StructureData: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r53);

        r56 = $r40;

        $z5 = virtualinvoke r55.<ucar.nc2.dataset.VariableDS: boolean needConvert()>();

        if $z5 == 0 goto label05;

        r56 = virtualinvoke r55.<ucar.nc2.dataset.VariableDS: ucar.ma2.Array convert(ucar.ma2.Array)>($r40);

     label05:
        virtualinvoke $r62.<ucar.ma2.StructureDataW: void setMemberData(ucar.ma2.StructureMembers$Member,ucar.ma2.Array)>($r28, r56);

     label06:
        $z7 = r54 instanceof ucar.nc2.dataset.StructureDS;

        if $z7 == 0 goto label13;

        r57 = (ucar.nc2.dataset.StructureDS) r54;

        $r29 = virtualinvoke r57.<ucar.nc2.dataset.StructureDS: ucar.ma2.DataType getDataType()>();

        $r30 = <ucar.ma2.DataType: ucar.ma2.DataType SEQUENCE>;

        if $r29 != $r30 goto label11;

        $r34 = virtualinvoke r1.<ucar.ma2.StructureData: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r53);

        $z4 = $r34 instanceof ucar.ma2.ArrayObject$D1;

        if $z4 == 0 goto label09;

        r58 = (ucar.ma2.ArrayObject$D1) $r34;

        $r64 = new ucar.ma2.ArrayObject$D1;

        $l1 = virtualinvoke r58.<ucar.ma2.ArrayObject$D1: long getSize()>();

        $i2 = (int) $l1;

        specialinvoke $r64.<ucar.ma2.ArrayObject$D1: void <init>(java.lang.Class,int)>(class "Lucar/ma2/ArraySequence;", $i2);

        virtualinvoke $r28.<ucar.ma2.StructureMembers$Member: void setDataArray(ucar.ma2.Array)>($r64);

        i6 = 0;

     label07:
        $l3 = (long) i6;

        $l4 = virtualinvoke r58.<ucar.ma2.ArrayObject$D1: long getSize()>();

        $b5 = $l3 cmp $l4;

        $i7 = (int) $b5;

        if $i7 >= 0 goto label08;

        $r37 = virtualinvoke r58.<ucar.ma2.ArrayObject$D1: java.lang.Object get(int)>(i6);

        r38 = (ucar.ma2.ArraySequence) $r37;

        $r65 = new ucar.nc2.dataset.StructureDS$SequenceConverter;

        specialinvoke $r65.<ucar.nc2.dataset.StructureDS$SequenceConverter: void <init>(ucar.nc2.dataset.StructureDS,ucar.nc2.dataset.StructureDS,ucar.ma2.ArraySequence)>(r0, r57, r38);

        virtualinvoke $r64.<ucar.ma2.ArrayObject$D1: void set(int,java.lang.Object)>(i6, $r65);

        i6 = i6 + 1;

        goto label07;

     label08:
        goto label10;

     label09:
        r59 = (ucar.ma2.ArraySequence) $r34;

        $r66 = new ucar.nc2.dataset.StructureDS$SequenceConverter;

        specialinvoke $r66.<ucar.nc2.dataset.StructureDS$SequenceConverter: void <init>(ucar.nc2.dataset.StructureDS,ucar.nc2.dataset.StructureDS,ucar.ma2.ArraySequence)>(r0, r57, r59);

        virtualinvoke $r62.<ucar.ma2.StructureDataW: void setMemberData(ucar.ma2.StructureMembers$Member,ucar.ma2.Array)>($r28, $r66);

     label10:
        goto label12;

     label11:
        $r31 = virtualinvoke r1.<ucar.ma2.StructureData: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r53);

        $r32 = virtualinvoke r57.<ucar.nc2.dataset.StructureDS: ucar.ma2.ArrayStructure convert(ucar.ma2.Array,ucar.ma2.Section)>($r31, null);

        virtualinvoke $r62.<ucar.ma2.StructureDataW: void setMemberData(ucar.ma2.StructureMembers$Member,ucar.ma2.Array)>($r28, $r32);

     label12:
        $r33 = virtualinvoke $r28.<ucar.ma2.StructureMembers$Member: ucar.ma2.StructureMembers getStructureMembers()>();

        specialinvoke r57.<ucar.nc2.dataset.StructureDS: void convertMemberInfo(ucar.ma2.StructureMembers)>($r33);

     label13:
        goto label02;

     label14:
        $r8 = virtualinvoke $r62.<ucar.ma2.StructureDataW: ucar.ma2.StructureMembers getStructureMembers()>();

        specialinvoke r0.<ucar.nc2.dataset.StructureDS: void convertMemberInfo(ucar.ma2.StructureMembers)>($r8);

        $r9 = virtualinvoke r0.<ucar.nc2.dataset.StructureDS: java.util.List getVariables()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label20;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r60 = (ucar.nc2.Variable) $r11;

        $z2 = specialinvoke r0.<ucar.nc2.dataset.StructureDS: boolean varHasData(ucar.nc2.Variable,ucar.ma2.StructureMembers)>(r60, $r8);

        if $z2 != 0 goto label19;

     label16:
        $r12 = virtualinvoke r0.<ucar.nc2.dataset.StructureDS: ucar.nc2.Group getParentGroup()>();

        $r13 = virtualinvoke r60.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r14 = virtualinvoke $r12.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r13);

        $r67 = new ucar.ma2.Section;

        specialinvoke $r67.<ucar.ma2.Section: void <init>()>();

        $r16 = virtualinvoke $r67.<ucar.ma2.Section: ucar.ma2.Section appendRange(int,int)>(i0, i0);

        $r17 = virtualinvoke $r14.<ucar.nc2.Variable: ucar.ma2.Array read(ucar.ma2.Section)>($r16);

        $r18 = virtualinvoke r60.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r19 = virtualinvoke r60.<ucar.nc2.Variable: java.lang.String getDescription()>();

        $r20 = virtualinvoke r60.<ucar.nc2.Variable: java.lang.String getUnitsString()>();

        $r21 = virtualinvoke r60.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r22 = virtualinvoke r60.<ucar.nc2.Variable: int[] getShape()>();

        $r23 = virtualinvoke $r8.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member addMember(java.lang.String,java.lang.String,java.lang.String,ucar.ma2.DataType,int[])>($r18, $r19, $r20, $r21, $r22);

        virtualinvoke $r62.<ucar.ma2.StructureDataW: void setMemberData(ucar.ma2.StructureMembers$Member,ucar.ma2.Array)>($r23, $r17);

     label17:
        goto label19;

     label18:
        $r50 := @caughtexception;

        $r68 = new java.io.IOException;

        $r52 = virtualinvoke $r50.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        specialinvoke $r68.<java.io.IOException: void <init>(java.lang.String)>($r52);

        throw $r68;

     label19:
        goto label15;

     label20:
        return $r62;

        catch ucar.ma2.InvalidRangeException from label16 to label17 with label18;
    }

    private void convertMemberInfo(ucar.ma2.StructureMembers)
    {
        ucar.nc2.Structure $r14;
        ucar.ma2.StructureMembers$Member r4;
        ucar.nc2.Variable $r7, r17;
        java.lang.String $r6, $r10, $r11, $r12, $r15;
        boolean $z0, $z1;
        java.util.Iterator $r2;
        ucar.ma2.DataType $r13;
        java.util.List $r1;
        ucar.ma2.StructureMembers r0, $r9;
        ucar.nc2.dataset.StructureDS r5, r8;
        ucar.nc2.dataset.VariableEnhanced $r16;
        java.lang.Object $r3;

        r5 := @this: ucar.nc2.dataset.StructureDS;

        r0 := @parameter0: ucar.ma2.StructureMembers;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureMembers: java.util.List getMembers()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.ma2.StructureMembers$Member) $r3;

        $r6 = virtualinvoke r4.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        $r7 = virtualinvoke r5.<ucar.nc2.dataset.StructureDS: ucar.nc2.Variable findVariable(java.lang.String)>($r6);

        r17 = $r7;

        if $r7 != null goto label2;

        $r14 = r5.<ucar.nc2.dataset.StructureDS: ucar.nc2.Structure orgVar>;

        if $r14 == null goto label2;

        $r15 = virtualinvoke r4.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        $r16 = specialinvoke r5.<ucar.nc2.dataset.StructureDS: ucar.nc2.dataset.VariableEnhanced findVariableFromOrgName(java.lang.String)>($r15);

        r17 = (ucar.nc2.Variable) $r16;

     label2:
        if r17 == null goto label3;

        $r10 = virtualinvoke r17.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r11 = virtualinvoke r17.<ucar.nc2.Variable: java.lang.String getDescription()>();

        $r12 = virtualinvoke r17.<ucar.nc2.Variable: java.lang.String getUnitsString()>();

        $r13 = virtualinvoke r17.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        virtualinvoke r4.<ucar.ma2.StructureMembers$Member: void setVariableInfo(java.lang.String,java.lang.String,java.lang.String,ucar.ma2.DataType)>($r10, $r11, $r12, $r13);

     label3:
        $z1 = r17 instanceof ucar.nc2.dataset.StructureDS;

        if $z1 == 0 goto label4;

        r8 = (ucar.nc2.dataset.StructureDS) r17;

        $r9 = virtualinvoke r4.<ucar.ma2.StructureMembers$Member: ucar.ma2.StructureMembers getStructureMembers()>();

        specialinvoke r8.<ucar.nc2.dataset.StructureDS: void convertMemberInfo(ucar.ma2.StructureMembers)>($r9);

     label4:
        goto label1;

     label5:
        return;
    }

    private ucar.nc2.dataset.VariableEnhanced findVariableFromOrgName(java.lang.String)
    {
        java.util.Iterator $r2;
        java.util.List $r1;
        ucar.nc2.dataset.StructureDS r0;
        ucar.nc2.dataset.VariableEnhanced r5, $r9;
        java.lang.Object $r3;
        ucar.nc2.Variable r4, r10;
        java.lang.String $r6, $r7, r8;
        boolean $z0, $z1, $z2;

        r0 := @this: ucar.nc2.dataset.StructureDS;

        r8 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.StructureDS: java.util.List getVariables()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.nc2.Variable) $r3;

        r10 = r4;

     label2:
        $z1 = r10 instanceof ucar.nc2.dataset.VariableEnhanced;

        if $z1 == 0 goto label4;

        r5 = (ucar.nc2.dataset.VariableEnhanced) r10;

        $r6 = interfaceinvoke r5.<ucar.nc2.dataset.VariableEnhanced: java.lang.String getOriginalName()>();

        if $r6 == null goto label3;

        $r7 = interfaceinvoke r5.<ucar.nc2.dataset.VariableEnhanced: java.lang.String getOriginalName()>();

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z2 == 0 goto label3;

        $r9 = (ucar.nc2.dataset.VariableEnhanced) r4;

        return $r9;

     label3:
        r10 = interfaceinvoke r5.<ucar.nc2.dataset.VariableEnhanced: ucar.nc2.Variable getOriginalVariable()>();

        goto label2;

     label4:
        goto label1;

     label5:
        return null;
    }

    private boolean varHasData(ucar.nc2.Variable, ucar.ma2.StructureMembers)
    {
        ucar.ma2.StructureMembers$Member $r2, $r5;
        ucar.ma2.StructureMembers r0;
        ucar.nc2.dataset.StructureDS r6;
        ucar.nc2.dataset.VariableEnhanced r3;
        ucar.nc2.Variable r7;
        java.lang.String $r1, $r4;
        boolean $z0;

        r6 := @this: ucar.nc2.dataset.StructureDS;

        r7 := @parameter0: ucar.nc2.Variable;

        r0 := @parameter1: ucar.ma2.StructureMembers;

        $r1 = virtualinvoke r7.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r2 = virtualinvoke r0.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r1);

        if $r2 == null goto label1;

        return 1;

     label1:
        $z0 = r7 instanceof ucar.nc2.dataset.VariableEnhanced;

        if $z0 == 0 goto label3;

        r3 = (ucar.nc2.dataset.VariableEnhanced) r7;

        $r4 = interfaceinvoke r3.<ucar.nc2.dataset.VariableEnhanced: java.lang.String getOriginalName()>();

        $r5 = virtualinvoke r0.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r4);

        if $r5 == null goto label2;

        return 1;

     label2:
        r7 = interfaceinvoke r3.<ucar.nc2.dataset.VariableEnhanced: ucar.nc2.Variable getOriginalVariable()>();

        goto label1;

     label3:
        return 0;
    }

    public void enhance(java.util.Set)
    {
        java.util.Iterator $r2;
        java.util.Set r6;
        java.util.List $r1;
        ucar.nc2.dataset.StructureDS r0;
        ucar.nc2.dataset.VariableEnhanced r5;
        java.lang.Object $r3;
        ucar.nc2.Variable r4;
        boolean $z0;

        r0 := @this: ucar.nc2.dataset.StructureDS;

        r6 := @parameter0: java.util.Set;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.StructureDS: java.util.List getVariables()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.nc2.Variable) $r3;

        r5 = (ucar.nc2.dataset.VariableEnhanced) r4;

        interfaceinvoke r5.<ucar.nc2.dataset.VariableEnhanced: void enhance(java.util.Set)>(r6);

        goto label1;

     label2:
        return;
    }

    public void clearCoordinateSystems()
    {
        ucar.nc2.dataset.StructureDS r0;
        ucar.nc2.dataset.EnhancementsImpl $r1;
        java.lang.String $r2, $r3;

        r0 := @this: ucar.nc2.dataset.StructureDS;

        $r1 = new ucar.nc2.dataset.EnhancementsImpl;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.StructureDS: java.lang.String getUnitsString()>();

        $r3 = virtualinvoke r0.<ucar.nc2.dataset.StructureDS: java.lang.String getDescription()>();

        specialinvoke $r1.<ucar.nc2.dataset.EnhancementsImpl: void <init>(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r0, $r2, $r3);

        r0.<ucar.nc2.dataset.StructureDS: ucar.nc2.dataset.EnhancementsImpl proxy> = $r1;

        return;
    }

    public void addCoordinateSystem(ucar.nc2.dataset.CoordinateSystem)
    {
        ucar.nc2.dataset.StructureDS r0;
        ucar.nc2.dataset.CoordinateSystem r1;
        ucar.nc2.dataset.EnhancementsImpl $r2;

        r0 := @this: ucar.nc2.dataset.StructureDS;

        r1 := @parameter0: ucar.nc2.dataset.CoordinateSystem;

        $r2 = r0.<ucar.nc2.dataset.StructureDS: ucar.nc2.dataset.EnhancementsImpl proxy>;

        virtualinvoke $r2.<ucar.nc2.dataset.EnhancementsImpl: void addCoordinateSystem(ucar.nc2.dataset.CoordinateSystem)>(r1);

        return;
    }

    public void removeCoordinateSystem(ucar.nc2.dataset.CoordinateSystem)
    {
        ucar.nc2.dataset.StructureDS r0;
        ucar.nc2.dataset.CoordinateSystem r1;
        ucar.nc2.dataset.EnhancementsImpl $r2;

        r0 := @this: ucar.nc2.dataset.StructureDS;

        r1 := @parameter0: ucar.nc2.dataset.CoordinateSystem;

        $r2 = r0.<ucar.nc2.dataset.StructureDS: ucar.nc2.dataset.EnhancementsImpl proxy>;

        virtualinvoke $r2.<ucar.nc2.dataset.EnhancementsImpl: void removeCoordinateSystem(ucar.nc2.dataset.CoordinateSystem)>(r1);

        return;
    }

    public java.util.List getCoordinateSystems()
    {
        java.util.List $r2;
        ucar.nc2.dataset.StructureDS r0;
        ucar.nc2.dataset.EnhancementsImpl $r1;

        r0 := @this: ucar.nc2.dataset.StructureDS;

        $r1 = r0.<ucar.nc2.dataset.StructureDS: ucar.nc2.dataset.EnhancementsImpl proxy>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.EnhancementsImpl: java.util.List getCoordinateSystems()>();

        return $r2;
    }

    public java.lang.String getDescription()
    {
        ucar.nc2.dataset.StructureDS r0;
        java.lang.String $r2;
        ucar.nc2.dataset.EnhancementsImpl $r1;

        r0 := @this: ucar.nc2.dataset.StructureDS;

        $r1 = r0.<ucar.nc2.dataset.StructureDS: ucar.nc2.dataset.EnhancementsImpl proxy>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.EnhancementsImpl: java.lang.String getDescription()>();

        return $r2;
    }

    public java.lang.String getUnitsString()
    {
        ucar.nc2.dataset.StructureDS r0;
        java.lang.String $r2;
        ucar.nc2.dataset.EnhancementsImpl $r1;

        r0 := @this: ucar.nc2.dataset.StructureDS;

        $r1 = r0.<ucar.nc2.dataset.StructureDS: ucar.nc2.dataset.EnhancementsImpl proxy>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.EnhancementsImpl: java.lang.String getUnitsString()>();

        return $r2;
    }

    public void setUnitsString(java.lang.String)
    {
        ucar.nc2.dataset.StructureDS r0;
        java.lang.String r1;
        ucar.nc2.dataset.EnhancementsImpl $r2;

        r0 := @this: ucar.nc2.dataset.StructureDS;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.nc2.dataset.StructureDS: ucar.nc2.dataset.EnhancementsImpl proxy>;

        virtualinvoke $r2.<ucar.nc2.dataset.EnhancementsImpl: void setUnitsString(java.lang.String)>(r1);

        return;
    }

    static void access$000(ucar.nc2.dataset.StructureDS, ucar.ma2.StructureMembers)
    {
        ucar.nc2.dataset.StructureDS r0;
        ucar.ma2.StructureMembers r1;

        r0 := @parameter0: ucar.nc2.dataset.StructureDS;

        r1 := @parameter1: ucar.ma2.StructureMembers;

        specialinvoke r0.<ucar.nc2.dataset.StructureDS: void convertMemberInfo(ucar.ma2.StructureMembers)>(r1);

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/dataset/StructureDS;");

        <ucar.nc2.dataset.StructureDS: org.slf4j.Logger log> = $r0;

        return;
    }
}
