public class nu.xom.jaxen.expr.DefaultUnionExpr extends nu.xom.jaxen.expr.DefaultBinaryExpr implements nu.xom.jaxen.expr.UnionExpr
{
    private static final long serialVersionUID;

    public void <init>(nu.xom.jaxen.expr.Expr, nu.xom.jaxen.expr.Expr)
    {
        nu.xom.jaxen.expr.DefaultUnionExpr r0;
        nu.xom.jaxen.expr.Expr r1, r2;

        r0 := @this: nu.xom.jaxen.expr.DefaultUnionExpr;

        r1 := @parameter0: nu.xom.jaxen.expr.Expr;

        r2 := @parameter1: nu.xom.jaxen.expr.Expr;

        specialinvoke r0.<nu.xom.jaxen.expr.DefaultBinaryExpr: void <init>(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr)>(r1, r2);

        return;
    }

    public java.lang.String getOperator()
    {
        nu.xom.jaxen.expr.DefaultUnionExpr r0;

        r0 := @this: nu.xom.jaxen.expr.DefaultUnionExpr;

        return "|";
    }

    public java.lang.String toString()
    {
        nu.xom.jaxen.expr.Expr $r3, $r6;
        java.lang.StringBuffer $r0, $r1, $r4, $r5, $r7, $r8;
        nu.xom.jaxen.expr.DefaultUnionExpr r2;
        java.lang.String $r9;

        r2 := @this: nu.xom.jaxen.expr.DefaultUnionExpr;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[(DefaultUnionExpr): ");

        $r3 = virtualinvoke r2.<nu.xom.jaxen.expr.DefaultUnionExpr: nu.xom.jaxen.expr.Expr getLHS()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r6 = virtualinvoke r2.<nu.xom.jaxen.expr.DefaultUnionExpr: nu.xom.jaxen.expr.Expr getRHS()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }

    public java.lang.Object evaluate(nu.xom.jaxen.Context) throws nu.xom.jaxen.JaxenException
    {
        java.lang.ClassCastException $r13;
        java.util.ArrayList $r0;
        java.util.HashSet $r8;
        int $i0;
        java.lang.String $r15;
        nu.xom.jaxen.Navigator $r11;
        boolean $z0, $z1;
        nu.xom.jaxen.expr.Expr $r2, $r5;
        java.util.Iterator $r9;
        nu.xom.jaxen.XPathSyntaxException $r14;
        java.util.List r7, r16;
        nu.xom.jaxen.expr.NodeComparator $r10;
        java.lang.Object $r4, $r6, $r12;
        nu.xom.jaxen.expr.DefaultUnionExpr r1;
        nu.xom.jaxen.Context r3;

        r1 := @this: nu.xom.jaxen.expr.DefaultUnionExpr;

        r3 := @parameter0: nu.xom.jaxen.Context;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

     label1:
        $r2 = virtualinvoke r1.<nu.xom.jaxen.expr.DefaultUnionExpr: nu.xom.jaxen.expr.Expr getLHS()>();

        $r4 = interfaceinvoke $r2.<nu.xom.jaxen.expr.Expr: java.lang.Object evaluate(nu.xom.jaxen.Context)>(r3);

        r16 = (java.util.List) $r4;

        $r5 = virtualinvoke r1.<nu.xom.jaxen.expr.DefaultUnionExpr: nu.xom.jaxen.expr.Expr getRHS()>();

        $r6 = interfaceinvoke $r5.<nu.xom.jaxen.expr.Expr: java.lang.Object evaluate(nu.xom.jaxen.Context)>(r3);

        r7 = (java.util.List) $r6;

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>(r16);

        interfaceinvoke $r8.<java.util.Set: boolean addAll(java.util.Collection)>(r16);

        $r9 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r12 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $z1 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>($r12);

        if $z1 != 0 goto label3;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r12);

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r12);

     label3:
        goto label2;

     label4:
        $r10 = new nu.xom.jaxen.expr.NodeComparator;

        $r11 = virtualinvoke r3.<nu.xom.jaxen.Context: nu.xom.jaxen.Navigator getNavigator()>();

        specialinvoke $r10.<nu.xom.jaxen.expr.NodeComparator: void <init>(nu.xom.jaxen.Navigator)>($r11);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r0, $r10);

     label5:
        return $r0;

     label6:
        $r13 := @caughtexception;

        $r14 = new nu.xom.jaxen.XPathSyntaxException;

        $r15 = virtualinvoke r1.<nu.xom.jaxen.expr.DefaultUnionExpr: java.lang.String getText()>();

        $i0 = virtualinvoke r3.<nu.xom.jaxen.Context: int getPosition()>();

        specialinvoke $r14.<nu.xom.jaxen.XPathSyntaxException: void <init>(java.lang.String,int,java.lang.String)>($r15, $i0, "Unions are only allowed over node-sets");

        throw $r14;

        catch java.lang.ClassCastException from label1 to label5 with label6;
    }

    public static void <clinit>()
    {
        <nu.xom.jaxen.expr.DefaultUnionExpr: long serialVersionUID> = 7629142718276852707L;

        return;
    }
}
