class com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries$1 extends com.mycila.inject.internal.guava.collect.ForwardingIterator
{
    final java.util.Iterator val$iterator;
    final com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries this$0;

    void <init>(com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries, java.util.Iterator)
    {
        com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries r1;
        java.util.Iterator r2;
        com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries;

        r2 := @parameter1: java.util.Iterator;

        r0.<com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries$1: com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries this$0> = r1;

        r0.<com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries$1: java.util.Iterator val$iterator> = r2;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingIterator: void <init>()>();

        return;
    }

    protected java.util.Iterator delegate()
    {
        java.util.Iterator $r1;
        com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries$1;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries$1: java.util.Iterator val$iterator>;

        return $r1;
    }

    public java.util.Map$Entry next()
    {
        java.util.Map$Entry r3;
        com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries$1$1 $r4;
        java.util.Iterator $r1;
        com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries$1 r0;
        java.lang.Object $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries$1;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries$1: java.util.Iterator val$iterator>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r2;

        $r4 = new com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries$1$1;

        specialinvoke $r4.<com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries$1$1: void <init>(com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries$1,java.util.Map$Entry)>(r0, r3);

        return $r4;
    }

    public volatile java.lang.Object next()
    {
        java.util.Map$Entry $r1;
        com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries$1;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries$1: java.util.Map$Entry next()>();

        return $r1;
    }

    protected volatile java.lang.Object delegate()
    {
        java.util.Iterator $r1;
        com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries$1;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.Synchronized$SynchronizedAsMapEntries$1: java.util.Iterator delegate()>();

        return $r1;
    }
}
