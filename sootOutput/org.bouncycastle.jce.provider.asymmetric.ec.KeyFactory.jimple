public class org.bouncycastle.jce.provider.asymmetric.ec.KeyFactory extends org.bouncycastle.jce.provider.JDKKeyFactory
{
    java.lang.String algorithm;

    void <init>(java.lang.String)
    {
        org.bouncycastle.jce.provider.asymmetric.ec.KeyFactory r0;
        java.lang.String r1;

        r0 := @this: org.bouncycastle.jce.provider.asymmetric.ec.KeyFactory;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.bouncycastle.jce.provider.JDKKeyFactory: void <init>()>();

        r0.<org.bouncycastle.jce.provider.asymmetric.ec.KeyFactory: java.lang.String algorithm> = r1;

        return;
    }

    protected java.security.Key engineTranslateKey(java.security.Key) throws java.security.InvalidKeyException
    {
        org.bouncycastle.jce.provider.JCEECPublicKey $r4;
        java.security.Key r0;
        org.bouncycastle.jce.provider.asymmetric.ec.KeyFactory r6;
        java.security.interfaces.ECPrivateKey $r3;
        java.security.InvalidKeyException $r1;
        java.security.interfaces.ECPublicKey $r5;
        org.bouncycastle.jce.provider.JCEECPrivateKey $r2;
        boolean $z0, $z1;

        r6 := @this: org.bouncycastle.jce.provider.asymmetric.ec.KeyFactory;

        r0 := @parameter0: java.security.Key;

        $z0 = r0 instanceof java.security.interfaces.ECPublicKey;

        if $z0 == 0 goto label1;

        $r4 = new org.bouncycastle.jce.provider.JCEECPublicKey;

        $r5 = (java.security.interfaces.ECPublicKey) r0;

        specialinvoke $r4.<org.bouncycastle.jce.provider.JCEECPublicKey: void <init>(java.security.interfaces.ECPublicKey)>($r5);

        return $r4;

     label1:
        $z1 = r0 instanceof java.security.interfaces.ECPrivateKey;

        if $z1 == 0 goto label2;

        $r2 = new org.bouncycastle.jce.provider.JCEECPrivateKey;

        $r3 = (java.security.interfaces.ECPrivateKey) r0;

        specialinvoke $r2.<org.bouncycastle.jce.provider.JCEECPrivateKey: void <init>(java.security.interfaces.ECPrivateKey)>($r3);

        return $r2;

     label2:
        $r1 = new java.security.InvalidKeyException;

        specialinvoke $r1.<java.security.InvalidKeyException: void <init>(java.lang.String)>("key type unknown");

        throw $r1;
    }

    protected java.security.spec.KeySpec engineGetKeySpec(java.security.Key, java.lang.Class) throws java.security.spec.InvalidKeySpecException
    {
        byte[] $r14, $r25, $r33, $r36;
        java.security.spec.ECPublicKeySpec $r22, $r28;
        org.bouncycastle.jce.provider.asymmetric.ec.KeyFactory r37;
        java.math.BigInteger $r12, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.security.spec.EllipticCurve $r15, $r26;
        java.security.spec.X509EncodedKeySpec $r32;
        java.security.Key r4;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r7;
        java.security.interfaces.ECPublicKey r38;
        java.security.spec.ECPrivateKeySpec $r11, $r17;
        java.security.interfaces.ECPrivateKey r39;
        java.lang.String $r8, $r31, $r34;
        org.bouncycastle.math.ec.ECCurve $r13, $r24;
        java.security.spec.PKCS8EncodedKeySpec $r35;
        java.lang.RuntimeException $r1;
        java.security.spec.ECParameterSpec $r9, $r16, $r19, $r20, $r27, $r30;
        java.security.spec.ECPoint $r23, $r29;
        java.lang.Class r0;
        org.bouncycastle.jce.spec.ECParameterSpec $r10, $r21;

        r37 := @this: org.bouncycastle.jce.provider.asymmetric.ec.KeyFactory;

        r4 := @parameter0: java.security.Key;

        r0 := @parameter1: java.lang.Class;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/security/spec/PKCS8EncodedKeySpec;");

        if $z0 == 0 goto label1;

        $r34 = interfaceinvoke r4.<java.security.Key: java.lang.String getFormat()>();

        $z7 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>("PKCS#8");

        if $z7 == 0 goto label1;

        $r35 = new java.security.spec.PKCS8EncodedKeySpec;

        $r36 = interfaceinvoke r4.<java.security.Key: byte[] getEncoded()>();

        specialinvoke $r35.<java.security.spec.PKCS8EncodedKeySpec: void <init>(byte[])>($r36);

        return $r35;

     label1:
        $z1 = virtualinvoke r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/security/spec/X509EncodedKeySpec;");

        if $z1 == 0 goto label2;

        $r31 = interfaceinvoke r4.<java.security.Key: java.lang.String getFormat()>();

        $z6 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>("X.509");

        if $z6 == 0 goto label2;

        $r32 = new java.security.spec.X509EncodedKeySpec;

        $r33 = interfaceinvoke r4.<java.security.Key: byte[] getEncoded()>();

        specialinvoke $r32.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r33);

        return $r32;

     label2:
        $z2 = virtualinvoke r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/security/spec/ECPublicKeySpec;");

        if $z2 == 0 goto label4;

        $z5 = r4 instanceof java.security.interfaces.ECPublicKey;

        if $z5 == 0 goto label4;

        r38 = (java.security.interfaces.ECPublicKey) r4;

        $r20 = interfaceinvoke r38.<java.security.interfaces.ECPublicKey: java.security.spec.ECParameterSpec getParams()>();

        if $r20 == null goto label3;

        $r28 = new java.security.spec.ECPublicKeySpec;

        $r29 = interfaceinvoke r38.<java.security.interfaces.ECPublicKey: java.security.spec.ECPoint getW()>();

        $r30 = interfaceinvoke r38.<java.security.interfaces.ECPublicKey: java.security.spec.ECParameterSpec getParams()>();

        specialinvoke $r28.<java.security.spec.ECPublicKeySpec: void <init>(java.security.spec.ECPoint,java.security.spec.ECParameterSpec)>($r29, $r30);

        return $r28;

     label3:
        $r21 = staticinvoke <org.bouncycastle.jce.provider.ProviderUtil: org.bouncycastle.jce.spec.ECParameterSpec getEcImplicitlyCa()>();

        $r22 = new java.security.spec.ECPublicKeySpec;

        $r23 = interfaceinvoke r38.<java.security.interfaces.ECPublicKey: java.security.spec.ECPoint getW()>();

        $r24 = virtualinvoke $r21.<org.bouncycastle.jce.spec.ECParameterSpec: org.bouncycastle.math.ec.ECCurve getCurve()>();

        $r25 = virtualinvoke $r21.<org.bouncycastle.jce.spec.ECParameterSpec: byte[] getSeed()>();

        $r26 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: java.security.spec.EllipticCurve convertCurve(org.bouncycastle.math.ec.ECCurve,byte[])>($r24, $r25);

        $r27 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: java.security.spec.ECParameterSpec convertSpec(java.security.spec.EllipticCurve,org.bouncycastle.jce.spec.ECParameterSpec)>($r26, $r21);

        specialinvoke $r22.<java.security.spec.ECPublicKeySpec: void <init>(java.security.spec.ECPoint,java.security.spec.ECParameterSpec)>($r23, $r27);

        return $r22;

     label4:
        $z3 = virtualinvoke r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/security/spec/ECPrivateKeySpec;");

        if $z3 == 0 goto label6;

        $z4 = r4 instanceof java.security.interfaces.ECPrivateKey;

        if $z4 == 0 goto label6;

        r39 = (java.security.interfaces.ECPrivateKey) r4;

        $r9 = interfaceinvoke r39.<java.security.interfaces.ECPrivateKey: java.security.spec.ECParameterSpec getParams()>();

        if $r9 == null goto label5;

        $r17 = new java.security.spec.ECPrivateKeySpec;

        $r18 = interfaceinvoke r39.<java.security.interfaces.ECPrivateKey: java.math.BigInteger getS()>();

        $r19 = interfaceinvoke r39.<java.security.interfaces.ECPrivateKey: java.security.spec.ECParameterSpec getParams()>();

        specialinvoke $r17.<java.security.spec.ECPrivateKeySpec: void <init>(java.math.BigInteger,java.security.spec.ECParameterSpec)>($r18, $r19);

        return $r17;

     label5:
        $r10 = staticinvoke <org.bouncycastle.jce.provider.ProviderUtil: org.bouncycastle.jce.spec.ECParameterSpec getEcImplicitlyCa()>();

        $r11 = new java.security.spec.ECPrivateKeySpec;

        $r12 = interfaceinvoke r39.<java.security.interfaces.ECPrivateKey: java.math.BigInteger getS()>();

        $r13 = virtualinvoke $r10.<org.bouncycastle.jce.spec.ECParameterSpec: org.bouncycastle.math.ec.ECCurve getCurve()>();

        $r14 = virtualinvoke $r10.<org.bouncycastle.jce.spec.ECParameterSpec: byte[] getSeed()>();

        $r15 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: java.security.spec.EllipticCurve convertCurve(org.bouncycastle.math.ec.ECCurve,byte[])>($r13, $r14);

        $r16 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: java.security.spec.ECParameterSpec convertSpec(java.security.spec.EllipticCurve,org.bouncycastle.jce.spec.ECParameterSpec)>($r15, $r10);

        specialinvoke $r11.<java.security.spec.ECPrivateKeySpec: void <init>(java.math.BigInteger,java.security.spec.ECParameterSpec)>($r12, $r16);

        return $r11;

     label6:
        $r1 = new java.lang.RuntimeException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not implemented yet ");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r1;
    }

    protected java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        byte[] $r16;
        java.security.spec.InvalidKeySpecException $r1, $r21;
        java.security.spec.ECPrivateKeySpec $r10;
        java.security.spec.KeySpec r0;
        org.bouncycastle.jce.provider.asymmetric.ec.KeyFactory r9;
        java.lang.String $r5, $r7, $r11, $r14, $r19, $r22;
        boolean $z0, $z1, $z2;
        org.bouncycastle.jce.spec.ECPrivateKeySpec $r13;
        java.security.spec.PKCS8EncodedKeySpec $r15;
        java.lang.Exception $r20;
        java.security.PrivateKey $r17;
        java.lang.StringBuilder $r2, $r3, $r6;
        java.lang.Class $r4;
        org.bouncycastle.jce.provider.JCEECPrivateKey $r8, $r12, $r18, r23;

        r9 := @this: org.bouncycastle.jce.provider.asymmetric.ec.KeyFactory;

        r0 := @parameter0: java.security.spec.KeySpec;

        $z0 = r0 instanceof java.security.spec.PKCS8EncodedKeySpec;

        if $z0 == 0 goto label4;

     label1:
        $r15 = (java.security.spec.PKCS8EncodedKeySpec) r0;

        $r16 = virtualinvoke $r15.<java.security.spec.PKCS8EncodedKeySpec: byte[] getEncoded()>();

        $r17 = staticinvoke <org.bouncycastle.jce.provider.JDKKeyFactory: java.security.PrivateKey createPrivateKeyFromDERStream(byte[])>($r16);

        r23 = (org.bouncycastle.jce.provider.JCEECPrivateKey) $r17;

        $r18 = new org.bouncycastle.jce.provider.JCEECPrivateKey;

        $r19 = r9.<org.bouncycastle.jce.provider.asymmetric.ec.KeyFactory: java.lang.String algorithm>;

        specialinvoke $r18.<org.bouncycastle.jce.provider.JCEECPrivateKey: void <init>(java.lang.String,org.bouncycastle.jce.provider.JCEECPrivateKey)>($r19, r23);

     label2:
        return $r18;

     label3:
        $r20 := @caughtexception;

        $r21 = new java.security.spec.InvalidKeySpecException;

        $r22 = virtualinvoke $r20.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r21.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r22);

        throw $r21;

     label4:
        $z1 = r0 instanceof org.bouncycastle.jce.spec.ECPrivateKeySpec;

        if $z1 == 0 goto label5;

        $r12 = new org.bouncycastle.jce.provider.JCEECPrivateKey;

        $r14 = r9.<org.bouncycastle.jce.provider.asymmetric.ec.KeyFactory: java.lang.String algorithm>;

        $r13 = (org.bouncycastle.jce.spec.ECPrivateKeySpec) r0;

        specialinvoke $r12.<org.bouncycastle.jce.provider.JCEECPrivateKey: void <init>(java.lang.String,org.bouncycastle.jce.spec.ECPrivateKeySpec)>($r14, $r13);

        return $r12;

     label5:
        $z2 = r0 instanceof java.security.spec.ECPrivateKeySpec;

        if $z2 == 0 goto label6;

        $r8 = new org.bouncycastle.jce.provider.JCEECPrivateKey;

        $r11 = r9.<org.bouncycastle.jce.provider.asymmetric.ec.KeyFactory: java.lang.String algorithm>;

        $r10 = (java.security.spec.ECPrivateKeySpec) r0;

        specialinvoke $r8.<org.bouncycastle.jce.provider.JCEECPrivateKey: void <init>(java.lang.String,java.security.spec.ECPrivateKeySpec)>($r11, $r10);

        return $r8;

     label6:
        $r1 = new java.security.spec.InvalidKeySpecException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown KeySpec type: ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r7);

        throw $r1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        byte[] $r16;
        java.security.spec.ECPublicKeySpec $r10;
        java.security.spec.InvalidKeySpecException $r1, $r21;
        java.security.spec.KeySpec r0;
        org.bouncycastle.jce.provider.asymmetric.ec.KeyFactory r9;
        java.lang.String $r5, $r7, $r11, $r14, $r19, $r22;
        boolean $z0, $z1, $z2;
        org.bouncycastle.jce.provider.JCEECPublicKey $r8, $r12, $r18, r23;
        java.security.PublicKey $r17;
        java.security.spec.X509EncodedKeySpec $r15;
        java.lang.Exception $r20;
        java.lang.StringBuilder $r2, $r3, $r6;
        java.lang.Class $r4;
        org.bouncycastle.jce.spec.ECPublicKeySpec $r13;

        r9 := @this: org.bouncycastle.jce.provider.asymmetric.ec.KeyFactory;

        r0 := @parameter0: java.security.spec.KeySpec;

        $z0 = r0 instanceof java.security.spec.X509EncodedKeySpec;

        if $z0 == 0 goto label4;

     label1:
        $r15 = (java.security.spec.X509EncodedKeySpec) r0;

        $r16 = virtualinvoke $r15.<java.security.spec.X509EncodedKeySpec: byte[] getEncoded()>();

        $r17 = staticinvoke <org.bouncycastle.jce.provider.JDKKeyFactory: java.security.PublicKey createPublicKeyFromDERStream(byte[])>($r16);

        r23 = (org.bouncycastle.jce.provider.JCEECPublicKey) $r17;

        $r18 = new org.bouncycastle.jce.provider.JCEECPublicKey;

        $r19 = r9.<org.bouncycastle.jce.provider.asymmetric.ec.KeyFactory: java.lang.String algorithm>;

        specialinvoke $r18.<org.bouncycastle.jce.provider.JCEECPublicKey: void <init>(java.lang.String,org.bouncycastle.jce.provider.JCEECPublicKey)>($r19, r23);

     label2:
        return $r18;

     label3:
        $r20 := @caughtexception;

        $r21 = new java.security.spec.InvalidKeySpecException;

        $r22 = virtualinvoke $r20.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r21.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r22);

        throw $r21;

     label4:
        $z1 = r0 instanceof org.bouncycastle.jce.spec.ECPublicKeySpec;

        if $z1 == 0 goto label5;

        $r12 = new org.bouncycastle.jce.provider.JCEECPublicKey;

        $r14 = r9.<org.bouncycastle.jce.provider.asymmetric.ec.KeyFactory: java.lang.String algorithm>;

        $r13 = (org.bouncycastle.jce.spec.ECPublicKeySpec) r0;

        specialinvoke $r12.<org.bouncycastle.jce.provider.JCEECPublicKey: void <init>(java.lang.String,org.bouncycastle.jce.spec.ECPublicKeySpec)>($r14, $r13);

        return $r12;

     label5:
        $z2 = r0 instanceof java.security.spec.ECPublicKeySpec;

        if $z2 == 0 goto label6;

        $r8 = new org.bouncycastle.jce.provider.JCEECPublicKey;

        $r11 = r9.<org.bouncycastle.jce.provider.asymmetric.ec.KeyFactory: java.lang.String algorithm>;

        $r10 = (java.security.spec.ECPublicKeySpec) r0;

        specialinvoke $r8.<org.bouncycastle.jce.provider.JCEECPublicKey: void <init>(java.lang.String,java.security.spec.ECPublicKeySpec)>($r11, $r10);

        return $r8;

     label6:
        $r1 = new java.security.spec.InvalidKeySpecException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown KeySpec type: ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r7);

        throw $r1;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
