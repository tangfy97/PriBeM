class org.apache.lucene.search.ScoringRewrite$3 extends java.lang.Object implements org.apache.lucene.search.TermCollectingRewrite$TermCollector
{
    final org.apache.lucene.search.Query val$result;
    final org.apache.lucene.search.MultiTermQuery val$query;
    final int[] val$size;
    final org.apache.lucene.search.ScoringRewrite this$0;

    void <init>(org.apache.lucene.search.ScoringRewrite, org.apache.lucene.search.Query, org.apache.lucene.search.MultiTermQuery, int[])
    {
        org.apache.lucene.search.ScoringRewrite r1;
        org.apache.lucene.search.Query r2;
        org.apache.lucene.search.MultiTermQuery r3;
        int[] r4;
        org.apache.lucene.search.ScoringRewrite$3 r0;

        r0 := @this: org.apache.lucene.search.ScoringRewrite$3;

        r1 := @parameter0: org.apache.lucene.search.ScoringRewrite;

        r2 := @parameter1: org.apache.lucene.search.Query;

        r3 := @parameter2: org.apache.lucene.search.MultiTermQuery;

        r4 := @parameter3: int[];

        r0.<org.apache.lucene.search.ScoringRewrite$3: org.apache.lucene.search.ScoringRewrite this$0> = r1;

        r0.<org.apache.lucene.search.ScoringRewrite$3: org.apache.lucene.search.Query val$result> = r2;

        r0.<org.apache.lucene.search.ScoringRewrite$3: org.apache.lucene.search.MultiTermQuery val$query> = r3;

        r0.<org.apache.lucene.search.ScoringRewrite$3: int[] val$size> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean collect(org.apache.lucene.index.Term, float) throws java.io.IOException
    {
        org.apache.lucene.search.ScoringRewrite $r3;
        org.apache.lucene.search.Query $r4;
        org.apache.lucene.index.Term r1;
        org.apache.lucene.search.ScoringRewrite$3 r0;
        org.apache.lucene.search.MultiTermQuery $r2;
        int[] $r5;
        int $i0, $i1;
        float $f0, f1, $f2;

        r0 := @this: org.apache.lucene.search.ScoringRewrite$3;

        r1 := @parameter0: org.apache.lucene.index.Term;

        f1 := @parameter1: float;

        $r3 = r0.<org.apache.lucene.search.ScoringRewrite$3: org.apache.lucene.search.ScoringRewrite this$0>;

        $r4 = r0.<org.apache.lucene.search.ScoringRewrite$3: org.apache.lucene.search.Query val$result>;

        $r2 = r0.<org.apache.lucene.search.ScoringRewrite$3: org.apache.lucene.search.MultiTermQuery val$query>;

        $f0 = virtualinvoke $r2.<org.apache.lucene.search.MultiTermQuery: float getBoost()>();

        $f2 = $f0 * f1;

        virtualinvoke $r3.<org.apache.lucene.search.ScoringRewrite: void addClause(org.apache.lucene.search.Query,org.apache.lucene.index.Term,float)>($r4, r1, $f2);

        $r5 = r0.<org.apache.lucene.search.ScoringRewrite$3: int[] val$size>;

        $i0 = $r5[0];

        $i1 = $i0 + 1;

        $r5[0] = $i1;

        return 1;
    }
}
