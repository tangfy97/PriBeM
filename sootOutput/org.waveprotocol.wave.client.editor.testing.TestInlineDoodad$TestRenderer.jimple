class org.waveprotocol.wave.client.editor.testing.TestInlineDoodad$TestRenderer extends org.waveprotocol.wave.client.editor.RenderingMutationHandler
{

    private void <init>()
    {
        org.waveprotocol.wave.client.editor.testing.TestInlineDoodad$TestRenderer r0;

        r0 := @this: org.waveprotocol.wave.client.editor.testing.TestInlineDoodad$TestRenderer;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.RenderingMutationHandler: void <init>()>();

        return;
    }

    public com.google.gwt.dom.client.Element createDomImpl(org.waveprotocol.wave.client.editor.content.Renderer$Renderable)
    {
        org.waveprotocol.wave.client.editor.testing.TestInlineDoodad$TestRenderer r4;
        org.waveprotocol.wave.client.editor.content.Renderer$Renderable r2;
        com.google.gwt.dom.client.Element $r3, $r5;
        com.google.gwt.dom.client.SpanElement $r1;
        com.google.gwt.dom.client.Document $r0;

        r4 := @this: org.waveprotocol.wave.client.editor.testing.TestInlineDoodad$TestRenderer;

        r2 := @parameter0: org.waveprotocol.wave.client.editor.content.Renderer$Renderable;

        $r0 = staticinvoke <com.google.gwt.dom.client.Document: com.google.gwt.dom.client.Document get()>();

        $r1 = virtualinvoke $r0.<com.google.gwt.dom.client.Document: com.google.gwt.dom.client.SpanElement createSpanElement()>();

        $r5 = (com.google.gwt.dom.client.Element) $r1;

        $r3 = interfaceinvoke r2.<org.waveprotocol.wave.client.editor.content.Renderer$Renderable: com.google.gwt.dom.client.Element setAutoAppendContainer(com.google.gwt.dom.client.Element)>($r5);

        return $r3;
    }

    void <init>(org.waveprotocol.wave.client.editor.testing.TestInlineDoodad$1)
    {
        org.waveprotocol.wave.client.editor.testing.TestInlineDoodad$TestRenderer r0;
        org.waveprotocol.wave.client.editor.testing.TestInlineDoodad$1 r1;

        r0 := @this: org.waveprotocol.wave.client.editor.testing.TestInlineDoodad$TestRenderer;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.testing.TestInlineDoodad$1;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.testing.TestInlineDoodad$TestRenderer: void <init>()>();

        return;
    }
}
