final class org.wiztools.commons.CollectionsUtil$1 extends java.lang.Object implements org.wiztools.commons.MultiValueMap
{

    void <init>()
    {
        org.wiztools.commons.CollectionsUtil$1 r0;

        r0 := @this: org.wiztools.commons.CollectionsUtil$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void clear()
    {
        java.lang.UnsupportedOperationException $r0;
        org.wiztools.commons.CollectionsUtil$1 r1;

        r1 := @this: org.wiztools.commons.CollectionsUtil$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean containsKey(java.lang.Object)
    {
        java.lang.Object r1;
        org.wiztools.commons.CollectionsUtil$1 r0;

        r0 := @this: org.wiztools.commons.CollectionsUtil$1;

        r1 := @parameter0: java.lang.Object;

        return 0;
    }

    public boolean containsValue(java.lang.Object)
    {
        java.lang.Object r1;
        org.wiztools.commons.CollectionsUtil$1 r0;

        r0 := @this: org.wiztools.commons.CollectionsUtil$1;

        r1 := @parameter0: java.lang.Object;

        return 0;
    }

    public java.util.Collection get(java.lang.Object)
    {
        java.lang.Object r1;
        org.wiztools.commons.CollectionsUtil$1 r0;

        r0 := @this: org.wiztools.commons.CollectionsUtil$1;

        r1 := @parameter0: java.lang.Object;

        return null;
    }

    public boolean isEmpty()
    {
        org.wiztools.commons.CollectionsUtil$1 r0;

        r0 := @this: org.wiztools.commons.CollectionsUtil$1;

        return 1;
    }

    public java.util.Set keySet()
    {
        java.util.Set $r0;
        org.wiztools.commons.CollectionsUtil$1 r1;

        r1 := @this: org.wiztools.commons.CollectionsUtil$1;

        $r0 = <java.util.Collections: java.util.Set EMPTY_SET>;

        return $r0;
    }

    public java.util.Collection put(java.lang.Object, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        org.wiztools.commons.CollectionsUtil$1 r1;
        java.lang.Object r2, r3;

        r1 := @this: org.wiztools.commons.CollectionsUtil$1;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.util.Collection remove(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object r2;
        org.wiztools.commons.CollectionsUtil$1 r1;

        r1 := @this: org.wiztools.commons.CollectionsUtil$1;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public int size()
    {
        org.wiztools.commons.CollectionsUtil$1 r0;

        r0 := @this: org.wiztools.commons.CollectionsUtil$1;

        return 0;
    }

    public java.util.Collection values()
    {
        java.util.List $r0;
        org.wiztools.commons.CollectionsUtil$1 r1;

        r1 := @this: org.wiztools.commons.CollectionsUtil$1;

        $r0 = <java.util.Collections: java.util.List EMPTY_LIST>;

        return $r0;
    }

    public boolean equals(java.lang.Object)
    {
        org.wiztools.commons.CollectionsUtil$1 r2;
        int $i0;
        java.lang.Object r0;
        org.wiztools.commons.MultiValueMap r1;
        boolean $z0;

        r2 := @this: org.wiztools.commons.CollectionsUtil$1;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $z0 = r0 instanceof org.wiztools.commons.MultiValueMap;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r1 = (org.wiztools.commons.MultiValueMap) r0;

        $i0 = interfaceinvoke r1.<org.wiztools.commons.MultiValueMap: int size()>();

        if $i0 == 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public int hashCode()
    {
        int $i0;
        org.wiztools.commons.CollectionsUtil$1 r0;

        r0 := @this: org.wiztools.commons.CollectionsUtil$1;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }
}
