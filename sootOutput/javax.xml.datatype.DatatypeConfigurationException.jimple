public class javax.xml.datatype.DatatypeConfigurationException extends java.lang.Exception
{
    private static final long serialVersionUID;
    private java.lang.Throwable causeOnJDK13OrBelow;
    private transient boolean isJDK14OrAbove;
    static java.lang.Class class$java$lang$Throwable;

    public void <init>()
    {
        javax.xml.datatype.DatatypeConfigurationException r0;

        r0 := @this: javax.xml.datatype.DatatypeConfigurationException;

        specialinvoke r0.<java.lang.Exception: void <init>()>();

        r0.<javax.xml.datatype.DatatypeConfigurationException: boolean isJDK14OrAbove> = 0;

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        javax.xml.datatype.DatatypeConfigurationException r0;

        r0 := @this: javax.xml.datatype.DatatypeConfigurationException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        r0.<javax.xml.datatype.DatatypeConfigurationException: boolean isJDK14OrAbove> = 0;

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        java.lang.String r1;
        javax.xml.datatype.DatatypeConfigurationException r0;

        r0 := @this: javax.xml.datatype.DatatypeConfigurationException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        r0.<javax.xml.datatype.DatatypeConfigurationException: boolean isJDK14OrAbove> = 0;

        specialinvoke r0.<javax.xml.datatype.DatatypeConfigurationException: void initCauseByReflection(java.lang.Throwable)>(r2);

        return;
    }

    public void <init>(java.lang.Throwable)
    {
        java.lang.Throwable r1;
        java.lang.String $r2;
        javax.xml.datatype.DatatypeConfigurationException r0;

        r0 := @this: javax.xml.datatype.DatatypeConfigurationException;

        r1 := @parameter0: java.lang.Throwable;

        if r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<java.lang.Throwable: java.lang.String toString()>();

     label2:
        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>($r2);

        r0.<javax.xml.datatype.DatatypeConfigurationException: boolean isJDK14OrAbove> = 0;

        specialinvoke r0.<javax.xml.datatype.DatatypeConfigurationException: void initCauseByReflection(java.lang.Throwable)>(r1);

        return;
    }

    public void printStackTrace()
    {
        java.lang.Throwable $r1;
        java.io.PrintWriter $r2;
        java.io.PrintStream $r3;
        javax.xml.datatype.DatatypeConfigurationException r0;
        boolean $z0;

        r0 := @this: javax.xml.datatype.DatatypeConfigurationException;

        $z0 = r0.<javax.xml.datatype.DatatypeConfigurationException: boolean isJDK14OrAbove>;

        if $z0 != 0 goto label1;

        $r1 = r0.<javax.xml.datatype.DatatypeConfigurationException: java.lang.Throwable causeOnJDK13OrBelow>;

        if $r1 == null goto label1;

        $r2 = new java.io.PrintWriter;

        $r3 = <java.lang.System: java.io.PrintStream err>;

        specialinvoke $r2.<java.io.PrintWriter: void <init>(java.io.OutputStream,boolean)>($r3, 1);

        specialinvoke r0.<javax.xml.datatype.DatatypeConfigurationException: void printStackTrace0(java.io.PrintWriter)>($r2);

        goto label2;

     label1:
        specialinvoke r0.<java.lang.Throwable: void printStackTrace()>();

     label2:
        return;
    }

    public void printStackTrace(java.io.PrintStream)
    {
        java.io.PrintStream r1;
        java.lang.Throwable $r2;
        java.io.PrintWriter $r3;
        javax.xml.datatype.DatatypeConfigurationException r0;
        boolean $z0;

        r0 := @this: javax.xml.datatype.DatatypeConfigurationException;

        r1 := @parameter0: java.io.PrintStream;

        $z0 = r0.<javax.xml.datatype.DatatypeConfigurationException: boolean isJDK14OrAbove>;

        if $z0 != 0 goto label1;

        $r2 = r0.<javax.xml.datatype.DatatypeConfigurationException: java.lang.Throwable causeOnJDK13OrBelow>;

        if $r2 == null goto label1;

        $r3 = new java.io.PrintWriter;

        specialinvoke $r3.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(r1);

        specialinvoke r0.<javax.xml.datatype.DatatypeConfigurationException: void printStackTrace0(java.io.PrintWriter)>($r3);

        goto label2;

     label1:
        specialinvoke r0.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>(r1);

     label2:
        return;
    }

    public void printStackTrace(java.io.PrintWriter)
    {
        java.io.PrintWriter r1;
        java.lang.Throwable $r2;
        javax.xml.datatype.DatatypeConfigurationException r0;
        boolean $z0;

        r0 := @this: javax.xml.datatype.DatatypeConfigurationException;

        r1 := @parameter0: java.io.PrintWriter;

        $z0 = r0.<javax.xml.datatype.DatatypeConfigurationException: boolean isJDK14OrAbove>;

        if $z0 != 0 goto label1;

        $r2 = r0.<javax.xml.datatype.DatatypeConfigurationException: java.lang.Throwable causeOnJDK13OrBelow>;

        if $r2 == null goto label1;

        specialinvoke r0.<javax.xml.datatype.DatatypeConfigurationException: void printStackTrace0(java.io.PrintWriter)>(r1);

        goto label2;

     label1:
        specialinvoke r0.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r1);

     label2:
        return;
    }

    private void printStackTrace0(java.io.PrintWriter)
    {
        java.io.PrintWriter r1;
        java.lang.Throwable $r2;
        javax.xml.datatype.DatatypeConfigurationException r0;

        r0 := @this: javax.xml.datatype.DatatypeConfigurationException;

        r1 := @parameter0: java.io.PrintWriter;

        $r2 = r0.<javax.xml.datatype.DatatypeConfigurationException: java.lang.Throwable causeOnJDK13OrBelow>;

        virtualinvoke $r2.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("------------------------------------------");

        specialinvoke r0.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r1);

        return;
    }

    private void initCauseByReflection(java.lang.Throwable)
    {
        java.lang.Throwable r1;
        java.lang.Object[] $r6;
        javax.xml.datatype.DatatypeConfigurationException r0;
        java.lang.Class[] $r3;
        java.lang.Exception $r7;
        java.lang.Class $r2, $r4, $r8;
        java.lang.reflect.Method $r5;

        r0 := @this: javax.xml.datatype.DatatypeConfigurationException;

        r1 := @parameter0: java.lang.Throwable;

        r0.<javax.xml.datatype.DatatypeConfigurationException: java.lang.Throwable causeOnJDK13OrBelow> = r1;

     label1:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = newarray (java.lang.Class)[1];

        $r4 = <javax.xml.datatype.DatatypeConfigurationException: java.lang.Class class$java$lang$Throwable>;

        if $r4 != null goto label2;

        $r8 = staticinvoke <javax.xml.datatype.DatatypeConfigurationException: java.lang.Class class$(java.lang.String)>("java.lang.Throwable");

        <javax.xml.datatype.DatatypeConfigurationException: java.lang.Class class$java$lang$Throwable> = $r8;

        goto label3;

     label2:
        $r8 = <javax.xml.datatype.DatatypeConfigurationException: java.lang.Class class$java$lang$Throwable>;

     label3:
        $r3[0] = $r8;

        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("initCause", $r3);

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r1;

        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r6);

        r0.<javax.xml.datatype.DatatypeConfigurationException: boolean isJDK14OrAbove> = 1;

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

     label6:
        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.lang.Throwable r7, $r8, $r14;
        java.lang.Object[] $r5, $r13;
        javax.xml.datatype.DatatypeConfigurationException r1;
        java.io.ObjectInputStream r0;
        java.lang.reflect.Method $r4, $r12;
        java.lang.Class[] $r3, $r10;
        java.lang.Exception $r15;
        java.lang.Class $r2, $r9, $r11, $r16;
        java.lang.Object $r6;

        r1 := @this: javax.xml.datatype.DatatypeConfigurationException;

        r0 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

     label1:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = newarray (java.lang.Class)[0];

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getCause", $r3);

        $r5 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r5);

        r7 = (java.lang.Throwable) $r6;

        $r8 = r1.<javax.xml.datatype.DatatypeConfigurationException: java.lang.Throwable causeOnJDK13OrBelow>;

        if $r8 != null goto label2;

        r1.<javax.xml.datatype.DatatypeConfigurationException: java.lang.Throwable causeOnJDK13OrBelow> = r7;

        goto label5;

     label2:
        if r7 != null goto label5;

        $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = newarray (java.lang.Class)[1];

        $r11 = <javax.xml.datatype.DatatypeConfigurationException: java.lang.Class class$java$lang$Throwable>;

        if $r11 != null goto label3;

        $r16 = staticinvoke <javax.xml.datatype.DatatypeConfigurationException: java.lang.Class class$(java.lang.String)>("java.lang.Throwable");

        <javax.xml.datatype.DatatypeConfigurationException: java.lang.Class class$java$lang$Throwable> = $r16;

        goto label4;

     label3:
        $r16 = <javax.xml.datatype.DatatypeConfigurationException: java.lang.Class class$java$lang$Throwable>;

     label4:
        $r10[0] = $r16;

        $r12 = virtualinvoke $r9.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("initCause", $r10);

        $r13 = newarray (java.lang.Object)[1];

        $r14 = r1.<javax.xml.datatype.DatatypeConfigurationException: java.lang.Throwable causeOnJDK13OrBelow>;

        $r13[0] = $r14;

        virtualinvoke $r12.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r13);

     label5:
        r1.<javax.xml.datatype.DatatypeConfigurationException: boolean isJDK14OrAbove> = 1;

     label6:
        goto label8;

     label7:
        $r15 := @caughtexception;

     label8:
        return;

        catch java.lang.Exception from label1 to label6 with label7;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    public static void <clinit>()
    {
        <javax.xml.datatype.DatatypeConfigurationException: long serialVersionUID> = -1699373159027047238L;

        return;
    }
}
