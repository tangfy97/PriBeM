public class groovyjarjarantlr.ANTLRLexer extends groovyjarjarantlr.CharScanner implements groovyjarjarantlr.ANTLRTokenTypes, groovyjarjarantlr.TokenStream
{
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_0;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_1;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_2;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_3;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_4;
    public static final groovyjarjarantlr.collections.impl.BitSet _tokenSet_5;

    public static int escapeCharValue(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1, $z2;
        int $i2, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i18, $i19, $i20, $i22, $i25, $i26, $i28, $i29, $i30, $i31, $i33, $i36, $i37, $i39, $i40, $i43, $i44, $i45, $i47, $i48, $i49, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63;
        char $c0, $c1, $c3, $c8, $c13, $c17, $c21, $c23, $c24, $c27, $c32, $c34, $c35, $c38, $c41, $c42, $c46, $c50;

        r0 := @parameter0: java.lang.String;

        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i53 = (int) $c0;

        if $i53 == 92 goto label01;

        return 0;

     label01:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i54 = (int) $c1;

        lookupswitch($i54)
        {
            case 34: goto label07;
            case 39: goto label08;
            case 48: goto label12;
            case 49: goto label12;
            case 50: goto label12;
            case 51: goto label12;
            case 52: goto label15;
            case 53: goto label15;
            case 54: goto label15;
            case 55: goto label15;
            case 92: goto label09;
            case 98: goto label02;
            case 102: goto label06;
            case 110: goto label05;
            case 114: goto label03;
            case 116: goto label04;
            case 117: goto label10;
            default: goto label17;
        };

     label02:
        return 8;

     label03:
        return 13;

     label04:
        return 9;

     label05:
        return 10;

     label06:
        return 12;

     label07:
        return 34;

     label08:
        return 39;

     label09:
        return 92;

     label10:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i2 == 8 goto label11;

        return 0;

     label11:
        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(3);

        $i4 = staticinvoke <java.lang.Character: int digit(char,int)>($c3, 16);

        $i5 = $i4 * 16;

        $i6 = $i5 * 16;

        $i7 = $i6 * 16;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(4);

        $i9 = staticinvoke <java.lang.Character: int digit(char,int)>($c8, 16);

        $i10 = $i9 * 16;

        $i11 = $i10 * 16;

        $i12 = $i7 + $i11;

        $c13 = virtualinvoke r0.<java.lang.String: char charAt(int)>(5);

        $i14 = staticinvoke <java.lang.Character: int digit(char,int)>($c13, 16);

        $i15 = $i14 * 16;

        $i16 = $i12 + $i15;

        $c17 = virtualinvoke r0.<java.lang.String: char charAt(int)>(6);

        $i18 = staticinvoke <java.lang.Character: int digit(char,int)>($c17, 16);

        $i19 = $i16 + $i18;

        return $i19;

     label12:
        $i30 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i30 <= 5 goto label13;

        $c41 = virtualinvoke r0.<java.lang.String: char charAt(int)>(4);

        $z2 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c41);

        if $z2 == 0 goto label13;

        $c42 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i55 = (int) $c42;

        $i43 = $i55 - 48;

        $i44 = $i43 * 8;

        $i45 = $i44 * 8;

        $c46 = virtualinvoke r0.<java.lang.String: char charAt(int)>(3);

        $i56 = (int) $c46;

        $i47 = $i56 - 48;

        $i48 = $i47 * 8;

        $i49 = $i45 + $i48;

        $c50 = virtualinvoke r0.<java.lang.String: char charAt(int)>(4);

        $i57 = (int) $c50;

        $i51 = $i57 - 48;

        $i52 = $i49 + $i51;

        return $i52;

     label13:
        $i31 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i31 <= 4 goto label14;

        $c34 = virtualinvoke r0.<java.lang.String: char charAt(int)>(3);

        $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c34);

        if $z1 == 0 goto label14;

        $c35 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i58 = (int) $c35;

        $i36 = $i58 - 48;

        $i37 = $i36 * 8;

        $c38 = virtualinvoke r0.<java.lang.String: char charAt(int)>(3);

        $i59 = (int) $c38;

        $i39 = $i59 - 48;

        $i40 = $i37 + $i39;

        return $i40;

     label14:
        $c32 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i60 = (int) $c32;

        $i33 = $i60 - 48;

        return $i33;

     label15:
        $i20 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i20 <= 4 goto label16;

        $c23 = virtualinvoke r0.<java.lang.String: char charAt(int)>(3);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c23);

        if $z0 == 0 goto label16;

        $c24 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i61 = (int) $c24;

        $i25 = $i61 - 48;

        $i26 = $i25 * 8;

        $c27 = virtualinvoke r0.<java.lang.String: char charAt(int)>(3);

        $i62 = (int) $c27;

        $i28 = $i62 - 48;

        $i29 = $i26 + $i28;

        return $i29;

     label16:
        $c21 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i63 = (int) $c21;

        $i22 = $i63 - 48;

        return $i22;

     label17:
        return 0;
    }

    public static int tokenTypeForCharLiteral(java.lang.String)
    {
        int $i0, $i2, $i3;
        char $c1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 3 goto label1;

        $i2 = staticinvoke <groovyjarjarantlr.ANTLRLexer: int escapeCharValue(java.lang.String)>(r0);

        return $i2;

     label1:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i3 = (int) $c1;

        return $i3;
    }

    public void <init>(java.io.InputStream)
    {
        groovyjarjarantlr.ANTLRLexer r0;
        groovyjarjarantlr.ByteBuffer $r1;
        java.io.InputStream r2;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        r2 := @parameter0: java.io.InputStream;

        $r1 = new groovyjarjarantlr.ByteBuffer;

        specialinvoke $r1.<groovyjarjarantlr.ByteBuffer: void <init>(java.io.InputStream)>(r2);

        specialinvoke r0.<groovyjarjarantlr.ANTLRLexer: void <init>(groovyjarjarantlr.InputBuffer)>($r1);

        return;
    }

    public void <init>(java.io.Reader)
    {
        groovyjarjarantlr.CharBuffer $r1;
        groovyjarjarantlr.ANTLRLexer r0;
        java.io.Reader r2;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        r2 := @parameter0: java.io.Reader;

        $r1 = new groovyjarjarantlr.CharBuffer;

        specialinvoke $r1.<groovyjarjarantlr.CharBuffer: void <init>(java.io.Reader)>(r2);

        specialinvoke r0.<groovyjarjarantlr.ANTLRLexer: void <init>(groovyjarjarantlr.InputBuffer)>($r1);

        return;
    }

    public void <init>(groovyjarjarantlr.InputBuffer)
    {
        groovyjarjarantlr.LexerSharedInputState $r1;
        groovyjarjarantlr.ANTLRLexer r0;
        groovyjarjarantlr.InputBuffer r2;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        r2 := @parameter0: groovyjarjarantlr.InputBuffer;

        $r1 = new groovyjarjarantlr.LexerSharedInputState;

        specialinvoke $r1.<groovyjarjarantlr.LexerSharedInputState: void <init>(groovyjarjarantlr.InputBuffer)>(r2);

        specialinvoke r0.<groovyjarjarantlr.ANTLRLexer: void <init>(groovyjarjarantlr.LexerSharedInputState)>($r1);

        return;
    }

    public void <init>(groovyjarjarantlr.LexerSharedInputState)
    {
        groovyjarjarantlr.ANTLRHashString $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r48, $r51;
        java.lang.Integer $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r47, $r50, $r53;
        groovyjarjarantlr.LexerSharedInputState r1;
        java.util.Hashtable $r2, $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37, $r40, $r43, $r46, $r49, $r52;
        groovyjarjarantlr.ANTLRLexer r0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        r1 := @parameter0: groovyjarjarantlr.LexerSharedInputState;

        specialinvoke r0.<groovyjarjarantlr.CharScanner: void <init>(groovyjarjarantlr.LexerSharedInputState)>(r1);

        r0.<groovyjarjarantlr.ANTLRLexer: boolean caseSensitiveLiterals> = 1;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void setCaseSensitive(boolean)>(1);

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<groovyjarjarantlr.ANTLRLexer: java.util.Hashtable literals> = $r2;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: java.util.Hashtable literals>;

        $r3 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r3.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("public", r0);

        $r5 = new java.lang.Integer;

        specialinvoke $r5.<java.lang.Integer: void <init>(int)>(31);

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $r7 = r0.<groovyjarjarantlr.ANTLRLexer: java.util.Hashtable literals>;

        $r6 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r6.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("class", r0);

        $r8 = new java.lang.Integer;

        specialinvoke $r8.<java.lang.Integer: void <init>(int)>(10);

        virtualinvoke $r7.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r8);

        $r10 = r0.<groovyjarjarantlr.ANTLRLexer: java.util.Hashtable literals>;

        $r9 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r9.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("header", r0);

        $r11 = new java.lang.Integer;

        specialinvoke $r11.<java.lang.Integer: void <init>(int)>(5);

        virtualinvoke $r10.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r11);

        $r13 = r0.<groovyjarjarantlr.ANTLRLexer: java.util.Hashtable literals>;

        $r12 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r12.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("throws", r0);

        $r14 = new java.lang.Integer;

        specialinvoke $r14.<java.lang.Integer: void <init>(int)>(37);

        virtualinvoke $r13.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r14);

        $r16 = r0.<groovyjarjarantlr.ANTLRLexer: java.util.Hashtable literals>;

        $r15 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r15.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("lexclass", r0);

        $r17 = new java.lang.Integer;

        specialinvoke $r17.<java.lang.Integer: void <init>(int)>(9);

        virtualinvoke $r16.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r17);

        $r19 = r0.<groovyjarjarantlr.ANTLRLexer: java.util.Hashtable literals>;

        $r18 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r18.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("catch", r0);

        $r20 = new java.lang.Integer;

        specialinvoke $r20.<java.lang.Integer: void <init>(int)>(40);

        virtualinvoke $r19.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r20);

        $r22 = r0.<groovyjarjarantlr.ANTLRLexer: java.util.Hashtable literals>;

        $r21 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r21.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("private", r0);

        $r23 = new java.lang.Integer;

        specialinvoke $r23.<java.lang.Integer: void <init>(int)>(32);

        virtualinvoke $r22.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r23);

        $r25 = r0.<groovyjarjarantlr.ANTLRLexer: java.util.Hashtable literals>;

        $r24 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r24.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("options", r0);

        $r26 = new java.lang.Integer;

        specialinvoke $r26.<java.lang.Integer: void <init>(int)>(51);

        virtualinvoke $r25.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r26);

        $r28 = r0.<groovyjarjarantlr.ANTLRLexer: java.util.Hashtable literals>;

        $r27 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r27.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("extends", r0);

        $r29 = new java.lang.Integer;

        specialinvoke $r29.<java.lang.Integer: void <init>(int)>(11);

        virtualinvoke $r28.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r29);

        $r31 = r0.<groovyjarjarantlr.ANTLRLexer: java.util.Hashtable literals>;

        $r30 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r30.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("protected", r0);

        $r32 = new java.lang.Integer;

        specialinvoke $r32.<java.lang.Integer: void <init>(int)>(30);

        virtualinvoke $r31.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, $r32);

        $r34 = r0.<groovyjarjarantlr.ANTLRLexer: java.util.Hashtable literals>;

        $r33 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r33.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("TreeParser", r0);

        $r35 = new java.lang.Integer;

        specialinvoke $r35.<java.lang.Integer: void <init>(int)>(13);

        virtualinvoke $r34.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r33, $r35);

        $r37 = r0.<groovyjarjarantlr.ANTLRLexer: java.util.Hashtable literals>;

        $r36 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r36.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("Parser", r0);

        $r38 = new java.lang.Integer;

        specialinvoke $r38.<java.lang.Integer: void <init>(int)>(29);

        virtualinvoke $r37.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r36, $r38);

        $r40 = r0.<groovyjarjarantlr.ANTLRLexer: java.util.Hashtable literals>;

        $r39 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r39.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("Lexer", r0);

        $r41 = new java.lang.Integer;

        specialinvoke $r41.<java.lang.Integer: void <init>(int)>(12);

        virtualinvoke $r40.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r39, $r41);

        $r43 = r0.<groovyjarjarantlr.ANTLRLexer: java.util.Hashtable literals>;

        $r42 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r42.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("returns", r0);

        $r44 = new java.lang.Integer;

        specialinvoke $r44.<java.lang.Integer: void <init>(int)>(35);

        virtualinvoke $r43.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r42, $r44);

        $r46 = r0.<groovyjarjarantlr.ANTLRLexer: java.util.Hashtable literals>;

        $r45 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r45.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("charVocabulary", r0);

        $r47 = new java.lang.Integer;

        specialinvoke $r47.<java.lang.Integer: void <init>(int)>(18);

        virtualinvoke $r46.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r45, $r47);

        $r49 = r0.<groovyjarjarantlr.ANTLRLexer: java.util.Hashtable literals>;

        $r48 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r48.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("tokens", r0);

        $r50 = new java.lang.Integer;

        specialinvoke $r50.<java.lang.Integer: void <init>(int)>(4);

        virtualinvoke $r49.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r48, $r50);

        $r52 = r0.<groovyjarjarantlr.ANTLRLexer: java.util.Hashtable literals>;

        $r51 = new groovyjarjarantlr.ANTLRHashString;

        specialinvoke $r51.<groovyjarjarantlr.ANTLRHashString: void <init>(java.lang.String,groovyjarjarantlr.CharScanner)>("exception", r0);

        $r53 = new java.lang.Integer;

        specialinvoke $r53.<java.lang.Integer: void <init>(int)>(39);

        virtualinvoke $r52.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r51, $r53);

        return;
    }

    public groovyjarjarantlr.Token nextToken() throws groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.TokenStreamIOException $r18;
        groovyjarjarantlr.Token $r1, $r2, $r3, $r6, $r15;
        boolean $z0;
        groovyjarjarantlr.CharStreamException $r7;
        groovyjarjarantlr.RecognitionException $r13;
        groovyjarjarantlr.CharStreamIOException $r11;
        groovyjarjarantlr.TokenStreamRecognitionException $r17;
        int $i1, $i8, $i9, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i21;
        java.lang.String $r5, $r9;
        char $c0, $c2, $c3, $c4, $c5, $c6, $c7, $c10, $c11;
        java.io.IOException $r12;
        groovyjarjarantlr.NoViableAltForCharException $r16;
        groovyjarjarantlr.ANTLRLexer r0;
        groovyjarjarantlr.TokenStreamException $r19;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

     label01:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void resetText()>();

     label02:
        $c0 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i12 = (int) $c0;

        tableswitch($i12)
        {
            case 9: goto label03;
            case 10: goto label03;
            case 11: goto label28;
            case 12: goto label28;
            case 13: goto label03;
            case 14: goto label28;
            case 15: goto label28;
            case 16: goto label28;
            case 17: goto label28;
            case 18: goto label28;
            case 19: goto label28;
            case 20: goto label28;
            case 21: goto label28;
            case 22: goto label28;
            case 23: goto label28;
            case 24: goto label28;
            case 25: goto label28;
            case 26: goto label28;
            case 27: goto label28;
            case 28: goto label28;
            case 29: goto label28;
            case 30: goto label28;
            case 31: goto label28;
            case 32: goto label03;
            case 33: goto label17;
            case 34: goto label22;
            case 35: goto label09;
            case 36: goto label28;
            case 37: goto label28;
            case 38: goto label28;
            case 39: goto label21;
            case 40: goto label10;
            case 41: goto label11;
            case 42: goto label13;
            case 43: goto label14;
            case 44: goto label07;
            case 45: goto label28;
            case 46: goto label28;
            case 47: goto label04;
            case 48: goto label23;
            case 49: goto label23;
            case 50: goto label23;
            case 51: goto label23;
            case 52: goto label23;
            case 53: goto label23;
            case 54: goto label23;
            case 55: goto label23;
            case 56: goto label23;
            case 57: goto label23;
            case 58: goto label12;
            case 59: goto label15;
            case 60: goto label05;
            case 61: goto label28;
            case 62: goto label06;
            case 63: goto label08;
            case 64: goto label28;
            case 65: goto label26;
            case 66: goto label26;
            case 67: goto label26;
            case 68: goto label26;
            case 69: goto label26;
            case 70: goto label26;
            case 71: goto label26;
            case 72: goto label26;
            case 73: goto label26;
            case 74: goto label26;
            case 75: goto label26;
            case 76: goto label26;
            case 77: goto label26;
            case 78: goto label26;
            case 79: goto label26;
            case 80: goto label26;
            case 81: goto label26;
            case 82: goto label26;
            case 83: goto label26;
            case 84: goto label26;
            case 85: goto label26;
            case 86: goto label26;
            case 87: goto label26;
            case 88: goto label26;
            case 89: goto label26;
            case 90: goto label26;
            case 91: goto label24;
            case 92: goto label28;
            case 93: goto label28;
            case 94: goto label16;
            case 95: goto label28;
            case 96: goto label28;
            case 97: goto label27;
            case 98: goto label27;
            case 99: goto label27;
            case 100: goto label27;
            case 101: goto label27;
            case 102: goto label27;
            case 103: goto label27;
            case 104: goto label27;
            case 105: goto label27;
            case 106: goto label27;
            case 107: goto label27;
            case 108: goto label27;
            case 109: goto label27;
            case 110: goto label27;
            case 111: goto label27;
            case 112: goto label27;
            case 113: goto label27;
            case 114: goto label27;
            case 115: goto label27;
            case 116: goto label27;
            case 117: goto label27;
            case 118: goto label27;
            case 119: goto label27;
            case 120: goto label27;
            case 121: goto label27;
            case 122: goto label27;
            case 123: goto label25;
            case 124: goto label18;
            case 125: goto label20;
            case 126: goto label19;
            default: goto label28;
        };

     label03:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mWS(boolean)>(1);

        goto label34;

     label04:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mCOMMENT(boolean)>(1);

        goto label34;

     label05:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mOPEN_ELEMENT_OPTION(boolean)>(1);

        goto label34;

     label06:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mCLOSE_ELEMENT_OPTION(boolean)>(1);

        goto label34;

     label07:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mCOMMA(boolean)>(1);

        goto label34;

     label08:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mQUESTION(boolean)>(1);

        goto label34;

     label09:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mTREE_BEGIN(boolean)>(1);

        goto label34;

     label10:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mLPAREN(boolean)>(1);

        goto label34;

     label11:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mRPAREN(boolean)>(1);

        goto label34;

     label12:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mCOLON(boolean)>(1);

        goto label34;

     label13:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mSTAR(boolean)>(1);

        goto label34;

     label14:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mPLUS(boolean)>(1);

        goto label34;

     label15:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mSEMI(boolean)>(1);

        goto label34;

     label16:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mCARET(boolean)>(1);

        goto label34;

     label17:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mBANG(boolean)>(1);

        goto label34;

     label18:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mOR(boolean)>(1);

        goto label34;

     label19:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mNOT_OP(boolean)>(1);

        goto label34;

     label20:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mRCURLY(boolean)>(1);

        goto label34;

     label21:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mCHAR_LITERAL(boolean)>(1);

        goto label34;

     label22:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mSTRING_LITERAL(boolean)>(1);

        goto label34;

     label23:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mINT(boolean)>(1);

        goto label34;

     label24:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mARG_ACTION(boolean)>(1);

        goto label34;

     label25:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mACTION(boolean)>(1);

        goto label34;

     label26:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mTOKEN_REF(boolean)>(1);

        goto label34;

     label27:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mRULE_REF(boolean)>(1);

        goto label34;

     label28:
        $c2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i13 = (int) $c2;

        if $i13 != 61 goto label29;

        $c11 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i14 = (int) $c11;

        if $i14 != 62 goto label29;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mIMPLIES(boolean)>(1);

        goto label34;

     label29:
        $c3 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i15 = (int) $c3;

        if $i15 != 46 goto label30;

        $c10 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i16 = (int) $c10;

        if $i16 != 46 goto label30;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mRANGE(boolean)>(1);

        goto label34;

     label30:
        $c4 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i17 = (int) $c4;

        if $i17 != 61 goto label31;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mASSIGN(boolean)>(1);

        goto label34;

     label31:
        $c5 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i18 = (int) $c5;

        if $i18 != 46 goto label32;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mWILDCARD(boolean)>(1);

        goto label34;

     label32:
        $c6 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i19 = (int) $c6;

        $i21 = (int) 65535;

        if $i19 != $i21 goto label33;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void uponEOF()>();

        $r6 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(1);

        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = $r6;

        goto label34;

     label33:
        $r16 = new groovyjarjarantlr.NoViableAltForCharException;

        $c7 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $r5 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: java.lang.String getFilename()>();

        $i8 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getLine()>();

        $i9 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getColumn()>();

        specialinvoke $r16.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c7, $r5, $i8, $i9);

        throw $r16;

     label34:
        $r15 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken>;

        if $r15 != null goto label36;

     label35:
        goto label01;

     label36:
        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken>;

        $i1 = virtualinvoke $r1.<groovyjarjarantlr.Token: int getType()>();

        $r2 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken>;

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setType(int)>($i1);

        $r3 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken>;

     label37:
        return $r3;

     label38:
        $r13 := @caughtexception;

        $r17 = new groovyjarjarantlr.TokenStreamRecognitionException;

        specialinvoke $r17.<groovyjarjarantlr.TokenStreamRecognitionException: void <init>(groovyjarjarantlr.RecognitionException)>($r13);

        throw $r17;

     label39:
        $r7 := @caughtexception;

        $z0 = $r7 instanceof groovyjarjarantlr.CharStreamIOException;

        if $z0 == 0 goto label40;

        $r18 = new groovyjarjarantlr.TokenStreamIOException;

        $r11 = (groovyjarjarantlr.CharStreamIOException) $r7;

        $r12 = $r11.<groovyjarjarantlr.CharStreamIOException: java.io.IOException io>;

        specialinvoke $r18.<groovyjarjarantlr.TokenStreamIOException: void <init>(java.io.IOException)>($r12);

        throw $r18;

     label40:
        $r19 = new groovyjarjarantlr.TokenStreamException;

        $r9 = virtualinvoke $r7.<groovyjarjarantlr.CharStreamException: java.lang.String getMessage()>();

        specialinvoke $r19.<groovyjarjarantlr.TokenStreamException: void <init>(java.lang.String)>($r9);

        throw $r19;

        catch groovyjarjarantlr.RecognitionException from label02 to label35 with label38;
        catch groovyjarjarantlr.RecognitionException from label36 to label37 with label38;
        catch groovyjarjarantlr.CharStreamException from label02 to label35 with label39;
        catch groovyjarjarantlr.CharStreamException from label36 to label37 with label39;
        catch groovyjarjarantlr.CharStreamException from label38 to label39 with label39;
    }

    public final void mWS(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i2, $i3, $i7, $i8, $i10, $i11, $i12, $i13, $i15, $i17, $i19;
        java.lang.String $r8, $r11;
        groovyjarjarantlr.Token $r2, r9;
        boolean z0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        char $c1, $c4, $c5, $c6, $c9;
        groovyjarjarantlr.NoViableAltForCharException $r10;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r9 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $c1 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i10 = (int) $c1;

        lookupswitch($i10)
        {
            case 9: goto label2;
            case 10: goto label3;
            case 32: goto label1;
            default: goto label4;
        };

     label1:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(32);

        goto label7;

     label2:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(9);

        goto label7;

     label3:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(10);

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void newline()>();

        goto label7;

     label4:
        $c4 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i11 = (int) $c4;

        if $i11 != 13 goto label5;

        $c9 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i12 = (int) $c9;

        if $i12 != 10 goto label5;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(13);

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(10);

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void newline()>();

        goto label7;

     label5:
        $c5 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i13 = (int) $c5;

        if $i13 != 13 goto label6;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(13);

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void newline()>();

        goto label7;

     label6:
        $r10 = new groovyjarjarantlr.NoViableAltForCharException;

        $c6 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $r8 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: java.lang.String getFilename()>();

        $i7 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getLine()>();

        $i8 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getColumn()>();

        specialinvoke $r10.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c6, $r8, $i7, $i8);

        throw $r10;

     label7:
        if z0 == 0 goto label8;

        if null != null goto label8;

        $i15 = (int) -1;

        $i17 = (int) -1;

        if $i15 == $i17 goto label8;

        $i19 = (int) -1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>($i19);

        r9 = $r2;

        $r11 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r11.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i3);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r11);

     label8:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r9;

        return;
    }

    public final void mCOMMENT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i4, $i5, $i7, $i8, i10, $i11, $i12, $i13, $i14, $i16, $i18;
        java.lang.String $r3, $r12;
        groovyjarjarantlr.Token $r4, r9, r10;
        boolean z0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r6, $r8;
        char $c1, $c2, $c3, $c6, $c9;
        groovyjarjarantlr.NoViableAltForCharException $r11;
        char[] $r7;
        groovyjarjarantlr.ANTLRLexer r0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r9 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        i10 = 53;

        $c1 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i11 = (int) $c1;

        if $i11 != 47 goto label1;

        $c9 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i12 = (int) $c9;

        if $i12 != 47 goto label1;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mSL_COMMENT(boolean)>(0);

        goto label3;

     label1:
        $c2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i13 = (int) $c2;

        if $i13 != 47 goto label2;

        $c6 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i14 = (int) $c6;

        if $i14 != 42 goto label2;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mML_COMMENT(boolean)>(1);

        r10 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken>;

        i10 = virtualinvoke r10.<groovyjarjarantlr.Token: int getType()>();

        goto label3;

     label2:
        $r11 = new groovyjarjarantlr.NoViableAltForCharException;

        $c3 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $r3 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: java.lang.String getFilename()>();

        $i4 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getLine()>();

        $i5 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getColumn()>();

        specialinvoke $r11.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c3, $r3, $i4, $i5);

        throw $r11;

     label3:
        if i10 == 8 goto label4;

        $i16 = (int) -1;

        i10 = $i16;

     label4:
        if z0 == 0 goto label5;

        if null != null goto label5;

        $i18 = (int) -1;

        if i10 == $i18 goto label5;

        $r4 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(i10);

        r9 = $r4;

        $r12 = new java.lang.String;

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r7 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r8 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i7 = virtualinvoke $r8.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i8 = $i7 - $i0;

        specialinvoke $r12.<java.lang.String: void <init>(char[],int,int)>($r7, $i0, $i8);

        virtualinvoke $r4.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r12);

     label5:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r9;

        return;
    }

    protected final void mSL_COMMENT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i17;
        java.lang.String $r4, $r13;
        groovyjarjarantlr.Token $r5, r11;
        boolean $z0, z1;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r7, $r9;
        char $c1, $c2, $c3, $c4, $c5, $c10;
        groovyjarjarantlr.collections.impl.BitSet $r2, $r10;
        groovyjarjarantlr.NoViableAltForCharException $r12;
        char[] $r8;
        groovyjarjarantlr.ANTLRLexer r0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z1 := @parameter0: boolean;

        r11 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(java.lang.String)>("//");

     label1:
        $r2 = <groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_0>;

        $c1 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i11 = (int) $c1;

        $z0 = virtualinvoke $r2.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i11);

        if $z0 == 0 goto label2;

        $r10 = <groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_0>;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(groovyjarjarantlr.collections.impl.BitSet)>($r10);

        goto label1;

     label2:
        $c2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i12 = (int) $c2;

        if $i12 != 13 goto label3;

        $c10 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i13 = (int) $c10;

        if $i13 != 10 goto label3;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(13);

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(10);

        goto label6;

     label3:
        $c3 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i14 = (int) $c3;

        if $i14 != 13 goto label4;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(13);

        goto label6;

     label4:
        $c4 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i15 = (int) $c4;

        if $i15 != 10 goto label5;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(10);

        goto label6;

     label5:
        $r12 = new groovyjarjarantlr.NoViableAltForCharException;

        $c5 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $r4 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: java.lang.String getFilename()>();

        $i6 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getLine()>();

        $i7 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getColumn()>();

        specialinvoke $r12.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c5, $r4, $i6, $i7);

        throw $r12;

     label6:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void newline()>();

        if z1 == 0 goto label7;

        if null != null goto label7;

        $i17 = (int) -1;

        if 54 == $i17 goto label7;

        $r5 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(54);

        r11 = $r5;

        $r13 = new java.lang.String;

        $r7 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r8 = virtualinvoke $r7.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r9 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i8 = virtualinvoke $r9.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i9 = $i8 - $i0;

        specialinvoke $r13.<java.lang.String: void <init>(char[],int,int)>($r8, $i0, $i9);

        virtualinvoke $r5.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r13);

     label7:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r11;

        return;
    }

    protected final void mML_COMMENT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        byte b18, b26, b27;
        groovyjarjarantlr.Token $r2, r8;
        boolean z0, $z1;
        groovyjarjarantlr.collections.impl.BitSet $r7, $r11;
        int $i0, $i7, $i8, $i21, $i22, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i48;
        java.lang.String $r10, $r13;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        char $c1, $c2, $c3, $c4, $c5, $c6, $c9, $c10, $c11, $c12, $c13, $c14, $c15, $c16, $c17, $c19, $c20, $c23, $c24, $c25;
        groovyjarjarantlr.NoViableAltForCharException $r12;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r8 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        b18 = 55;

        b27 = 55;

        b26 = 55;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(java.lang.String)>("/*");

        $c1 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i28 = (int) $c1;

        if $i28 != 42 goto label1;

        $c15 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i29 = (int) $c15;

        if $i29 < 3 goto label1;

        $c16 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i30 = (int) $c16;

        if $i30 > 255 goto label1;

        $c17 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i31 = (int) $c17;

        if $i31 == 47 goto label1;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(42);

        b18 = 8;

        b27 = 8;

        b26 = 8;

        goto label3;

     label1:
        $c19 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i32 = (int) $c19;

        if $i32 < 3 goto label2;

        $c2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i33 = (int) $c2;

        if $i33 > 255 goto label2;

        $c3 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i34 = (int) $c3;

        if $i34 < 3 goto label2;

        $c4 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i35 = (int) $c4;

        if $i35 > 255 goto label2;

        goto label3;

     label2:
        $r12 = new groovyjarjarantlr.NoViableAltForCharException;

        $c20 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $r10 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: java.lang.String getFilename()>();

        $i21 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getLine()>();

        $i22 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getColumn()>();

        specialinvoke $r12.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c20, $r10, $i21, $i22);

        throw $r12;

     label3:
        $c23 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i36 = (int) $c23;

        if $i36 != 42 goto label4;

        $c14 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i37 = (int) $c14;

        if $i37 != 47 goto label4;

        goto label8;

     label4:
        $c5 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i38 = (int) $c5;

        if $i38 != 13 goto label5;

        $c13 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i39 = (int) $c13;

        if $i39 != 10 goto label5;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(13);

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(10);

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void newline()>();

        goto label3;

     label5:
        $c6 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i40 = (int) $c6;

        if $i40 != 13 goto label6;

        $c11 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i41 = (int) $c11;

        if $i41 < 3 goto label6;

        $c12 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i42 = (int) $c12;

        if $i42 > 255 goto label6;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(13);

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void newline()>();

        goto label3;

     label6:
        $r11 = <groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_0>;

        $c24 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i43 = (int) $c24;

        $z1 = virtualinvoke $r11.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i43);

        if $z1 == 0 goto label7;

        $c9 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i44 = (int) $c9;

        if $i44 < 3 goto label7;

        $c10 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i45 = (int) $c10;

        if $i45 > 255 goto label7;

        $r7 = <groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_0>;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(groovyjarjarantlr.collections.impl.BitSet)>($r7);

        goto label3;

     label7:
        $c25 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i46 = (int) $c25;

        if $i46 != 10 goto label8;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(10);

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void newline()>();

        goto label3;

     label8:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(java.lang.String)>("*/");

        if z0 == 0 goto label9;

        if null != null goto label9;

        $i48 = (int) -1;

        if b27 == $i48 goto label9;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(b26);

        r8 = $r2;

        $r13 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i7 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i8 = $i7 - $i0;

        specialinvoke $r13.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i8);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r13);

     label9:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r8;

        return;
    }

    public final void mOPEN_ELEMENT_OPTION(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(60);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 25 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(25);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mCLOSE_ELEMENT_OPTION(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(62);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 26 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(26);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mCOMMA(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(44);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 38 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(38);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mQUESTION(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(63);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 45 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(45);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mTREE_BEGIN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(java.lang.String)>("#(");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 44 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(44);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mLPAREN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(40);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 27 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(27);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mRPAREN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(41);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 28 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(28);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mCOLON(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(58);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 36 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(36);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mSTAR(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(42);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 46 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(46);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mPLUS(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(43);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 47 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(47);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mASSIGN(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(61);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 15 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(15);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mIMPLIES(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(java.lang.String)>("=>");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 48 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(48);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mSEMI(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(59);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 16 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(16);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mCARET(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(94);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 49 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(49);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mBANG(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(33);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 33 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(33);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mOR(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(124);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 21 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(21);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mWILDCARD(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(46);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 50 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(50);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mRANGE(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(java.lang.String)>("..");

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 22 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(22);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mNOT_OP(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(126);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 42 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(42);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mRCURLY(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(125);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 17 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(17);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mCHAR_LITERAL(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i4, $i5, $i6, $i7, $i8, $i9, $i11;
        java.lang.String $r4, $r12;
        groovyjarjarantlr.Token $r5, r10;
        boolean $z0, z1;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r7, $r9;
        char $c1, $c2, $c3;
        groovyjarjarantlr.collections.impl.BitSet $r2;
        groovyjarjarantlr.NoViableAltForCharException $r11;
        char[] $r8;
        groovyjarjarantlr.ANTLRLexer r0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z1 := @parameter0: boolean;

        r10 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(39);

        $c1 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i8 = (int) $c1;

        if $i8 != 92 goto label1;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mESC(boolean)>(0);

        goto label3;

     label1:
        $r2 = <groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_1>;

        $c2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i9 = (int) $c2;

        $z0 = virtualinvoke $r2.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i9);

        if $z0 == 0 goto label2;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void matchNot(char)>(39);

        goto label3;

     label2:
        $r11 = new groovyjarjarantlr.NoViableAltForCharException;

        $c3 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $r4 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: java.lang.String getFilename()>();

        $i4 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getLine()>();

        $i5 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getColumn()>();

        specialinvoke $r11.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c3, $r4, $i4, $i5);

        throw $r11;

     label3:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(39);

        if z1 == 0 goto label4;

        if null != null goto label4;

        $i11 = (int) -1;

        if 19 == $i11 goto label4;

        $r5 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(19);

        r10 = $r5;

        $r12 = new java.lang.String;

        $r7 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r8 = virtualinvoke $r7.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r9 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i6 = virtualinvoke $r9.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i7 = $i6 - $i0;

        specialinvoke $r12.<java.lang.String: void <init>(char[],int,int)>($r8, $i0, $i7);

        virtualinvoke $r5.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r12);

     label4:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r10;

        return;
    }

    protected final void mESC(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        java.lang.String $r8, $r10, $r12, $r14, $r20;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        char[] $r5;
        groovyjarjarantlr.Token $r2, r15;
        boolean z0;
        int $i0, $i2, $i3, $i6, $i7, $i14, $i15, $i22, $i23, $i29, $i30, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i54;
        char $c1, $c4, $c5, $c8, $c9, $c10, $c11, $c12, $c13, $c16, $c17, $c18, $c19, $c20, $c21, $c24, $c25, $c26, $c27, $c28, $c31, $c32, $c33;
        groovyjarjarantlr.NoViableAltForCharException $r16, $r17, $r18, $r19;
        groovyjarjarantlr.ANTLRLexer r0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r15 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(92);

        $c1 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i34 = (int) $c1;

        lookupswitch($i34)
        {
            case 34: goto label08;
            case 39: goto label09;
            case 48: goto label11;
            case 49: goto label11;
            case 50: goto label11;
            case 51: goto label11;
            case 52: goto label16;
            case 53: goto label16;
            case 54: goto label16;
            case 55: goto label16;
            case 92: goto label10;
            case 97: goto label07;
            case 98: goto label04;
            case 102: goto label05;
            case 110: goto label01;
            case 114: goto label02;
            case 116: goto label03;
            case 117: goto label19;
            case 119: goto label06;
            default: goto label20;
        };

     label01:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(110);

        goto label21;

     label02:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(114);

        goto label21;

     label03:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(116);

        goto label21;

     label04:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(98);

        goto label21;

     label05:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(102);

        goto label21;

     label06:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(119);

        goto label21;

     label07:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(97);

        goto label21;

     label08:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(34);

        goto label21;

     label09:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(39);

        goto label21;

     label10:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(92);

        goto label21;

     label11:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void matchRange(char,char)>(48, 51);

        $c12 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i35 = (int) $c12;

        if $i35 < 48 goto label14;

        $c17 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i36 = (int) $c17;

        if $i36 > 55 goto label14;

        $c18 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i37 = (int) $c18;

        if $i37 < 3 goto label14;

        $c19 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i38 = (int) $c19;

        if $i38 > 255 goto label14;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void matchRange(char,char)>(48, 55);

        $c20 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i39 = (int) $c20;

        if $i39 < 48 goto label12;

        $c25 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i40 = (int) $c25;

        if $i40 > 55 goto label12;

        $c26 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i41 = (int) $c26;

        if $i41 < 3 goto label12;

        $c27 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i42 = (int) $c27;

        if $i42 > 255 goto label12;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void matchRange(char,char)>(48, 55);

        goto label21;

     label12:
        $c31 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i43 = (int) $c31;

        if $i43 < 3 goto label13;

        $c24 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i44 = (int) $c24;

        if $i44 > 255 goto label13;

        goto label21;

     label13:
        $r16 = new groovyjarjarantlr.NoViableAltForCharException;

        $c21 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $r12 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: java.lang.String getFilename()>();

        $i22 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getLine()>();

        $i23 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getColumn()>();

        specialinvoke $r16.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c21, $r12, $i22, $i23);

        throw $r16;

     label14:
        $c32 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i45 = (int) $c32;

        if $i45 < 3 goto label15;

        $c16 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i46 = (int) $c16;

        if $i46 > 255 goto label15;

        goto label21;

     label15:
        $r17 = new groovyjarjarantlr.NoViableAltForCharException;

        $c13 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $r10 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: java.lang.String getFilename()>();

        $i14 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getLine()>();

        $i15 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getColumn()>();

        specialinvoke $r17.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c13, $r10, $i14, $i15);

        throw $r17;

     label16:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void matchRange(char,char)>(52, 55);

        $c4 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i47 = (int) $c4;

        if $i47 < 48 goto label17;

        $c9 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i48 = (int) $c9;

        if $i48 > 55 goto label17;

        $c10 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i49 = (int) $c10;

        if $i49 < 3 goto label17;

        $c11 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i50 = (int) $c11;

        if $i50 > 255 goto label17;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void matchRange(char,char)>(48, 55);

        goto label21;

     label17:
        $c33 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i51 = (int) $c33;

        if $i51 < 3 goto label18;

        $c8 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i52 = (int) $c8;

        if $i52 > 255 goto label18;

        goto label21;

     label18:
        $r18 = new groovyjarjarantlr.NoViableAltForCharException;

        $c5 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $r8 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: java.lang.String getFilename()>();

        $i6 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getLine()>();

        $i7 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getColumn()>();

        specialinvoke $r18.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c5, $r8, $i6, $i7);

        throw $r18;

     label19:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(117);

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mXDIGIT(boolean)>(0);

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mXDIGIT(boolean)>(0);

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mXDIGIT(boolean)>(0);

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mXDIGIT(boolean)>(0);

        goto label21;

     label20:
        $r19 = new groovyjarjarantlr.NoViableAltForCharException;

        $c28 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $r14 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: java.lang.String getFilename()>();

        $i29 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getLine()>();

        $i30 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getColumn()>();

        specialinvoke $r19.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c28, $r14, $i29, $i30);

        throw $r19;

     label21:
        if z0 == 0 goto label22;

        if null != null goto label22;

        $i54 = (int) -1;

        if 56 == $i54 goto label22;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(56);

        r15 = $r2;

        $r20 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r20.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i3);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r20);

     label22:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r15;

        return;
    }

    public final void mSTRING_LITERAL(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i2, $i3, $i5, $i6, $i8;
        java.lang.String $r9;
        groovyjarjarantlr.Token $r3, r8;
        boolean $z0, z1;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r5, $r7;
        char $c1, $c4;
        groovyjarjarantlr.collections.impl.BitSet $r2;
        char[] $r6;
        groovyjarjarantlr.ANTLRLexer r0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z1 := @parameter0: boolean;

        r8 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(34);

     label1:
        $c4 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i5 = (int) $c4;

        if $i5 != 92 goto label2;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mESC(boolean)>(0);

        goto label1;

     label2:
        $r2 = <groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_2>;

        $c1 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i6 = (int) $c1;

        $z0 = virtualinvoke $r2.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i6);

        if $z0 == 0 goto label3;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void matchNot(char)>(34);

        goto label1;

     label3:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(34);

        if z1 == 0 goto label4;

        if null != null goto label4;

        $i8 = (int) -1;

        if 6 == $i8 goto label4;

        $r3 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(6);

        r8 = $r3;

        $r9 = new java.lang.String;

        $r5 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r6 = virtualinvoke $r5.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r7 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r7.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>($r6, $i0, $i3);

        virtualinvoke $r3.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r9);

     label4:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r8;

        return;
    }

    protected final void mXDIGIT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i2, $i3, $i5, $i6, $i7, $i9;
        java.lang.String $r8, $r11;
        groovyjarjarantlr.Token $r2, r9;
        boolean z0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        char $c1, $c4;
        groovyjarjarantlr.NoViableAltForCharException $r10;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r9 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $c1 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i7 = (int) $c1;

        tableswitch($i7)
        {
            case 48: goto label1;
            case 49: goto label1;
            case 50: goto label1;
            case 51: goto label1;
            case 52: goto label1;
            case 53: goto label1;
            case 54: goto label1;
            case 55: goto label1;
            case 56: goto label1;
            case 57: goto label1;
            case 58: goto label4;
            case 59: goto label4;
            case 60: goto label4;
            case 61: goto label4;
            case 62: goto label4;
            case 63: goto label4;
            case 64: goto label4;
            case 65: goto label3;
            case 66: goto label3;
            case 67: goto label3;
            case 68: goto label3;
            case 69: goto label3;
            case 70: goto label3;
            case 71: goto label4;
            case 72: goto label4;
            case 73: goto label4;
            case 74: goto label4;
            case 75: goto label4;
            case 76: goto label4;
            case 77: goto label4;
            case 78: goto label4;
            case 79: goto label4;
            case 80: goto label4;
            case 81: goto label4;
            case 82: goto label4;
            case 83: goto label4;
            case 84: goto label4;
            case 85: goto label4;
            case 86: goto label4;
            case 87: goto label4;
            case 88: goto label4;
            case 89: goto label4;
            case 90: goto label4;
            case 91: goto label4;
            case 92: goto label4;
            case 93: goto label4;
            case 94: goto label4;
            case 95: goto label4;
            case 96: goto label4;
            case 97: goto label2;
            case 98: goto label2;
            case 99: goto label2;
            case 100: goto label2;
            case 101: goto label2;
            case 102: goto label2;
            default: goto label4;
        };

     label1:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void matchRange(char,char)>(48, 57);

        goto label5;

     label2:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void matchRange(char,char)>(97, 102);

        goto label5;

     label3:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void matchRange(char,char)>(65, 70);

        goto label5;

     label4:
        $r10 = new groovyjarjarantlr.NoViableAltForCharException;

        $c4 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $r8 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: java.lang.String getFilename()>();

        $i5 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getLine()>();

        $i6 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getColumn()>();

        specialinvoke $r10.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c4, $r8, $i5, $i6);

        throw $r10;

     label5:
        if z0 == 0 goto label6;

        if null != null goto label6;

        $i9 = (int) -1;

        if 58 == $i9 goto label6;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(58);

        r9 = $r2;

        $r11 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r11.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i3);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r11);

     label6:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r9;

        return;
    }

    protected final void mDIGIT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void matchRange(char,char)>(48, 57);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 57 == $i4 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(57);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label1:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mINT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i3, $i4, $i5, $i6, i8, $i9, $i10, $i12;
        java.lang.String $r3, $r11;
        groovyjarjarantlr.Token $r4, r9;
        boolean z0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r6, $r8;
        char $c1, $c2, $c7;
        groovyjarjarantlr.NoViableAltForCharException $r10;
        char[] $r7;
        groovyjarjarantlr.ANTLRLexer r0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r9 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        i8 = 0;

     label1:
        $c1 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i9 = (int) $c1;

        if $i9 < 48 goto label2;

        $c7 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i10 = (int) $c7;

        if $i10 > 57 goto label2;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void matchRange(char,char)>(48, 57);

        goto label4;

     label2:
        if i8 < 1 goto label3;

        goto label5;

     label3:
        $r10 = new groovyjarjarantlr.NoViableAltForCharException;

        $c2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $r3 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: java.lang.String getFilename()>();

        $i3 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getLine()>();

        $i4 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getColumn()>();

        specialinvoke $r10.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c2, $r3, $i3, $i4);

        throw $r10;

     label4:
        i8 = i8 + 1;

        goto label1;

     label5:
        if z0 == 0 goto label6;

        if null != null goto label6;

        $i12 = (int) -1;

        if 20 == $i12 goto label6;

        $r4 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(20);

        r9 = $r4;

        $r11 = new java.lang.String;

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r7 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r8 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i5 = virtualinvoke $r8.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i6 = $i5 - $i0;

        specialinvoke $r11.<java.lang.String: void <init>(char[],int,int)>($r7, $i0, $i6);

        virtualinvoke $r4.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r11);

     label6:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r9;

        return;
    }

    public final void mARG_ACTION(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r6, $r8;
        int $i0, $i1, $i2, $i4;
        char[] $r7;
        groovyjarjarantlr.ANTLRLexer r0;
        java.lang.String $r2, $r3, $r10;
        groovyjarjarantlr.Token $r4, r9;
        boolean z0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r9 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mNESTED_ARG_ACTION(boolean)>(0);

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: java.lang.String getText()>();

        $r3 = staticinvoke <groovyjarjarantlr.StringUtils: java.lang.String stripFrontBack(java.lang.String,java.lang.String,java.lang.String)>($r2, "[", "]");

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void setText(java.lang.String)>($r3);

        if z0 == 0 goto label1;

        if null != null goto label1;

        $i4 = (int) -1;

        if 34 == $i4 goto label1;

        $r4 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(34);

        r9 = $r4;

        $r10 = new java.lang.String;

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r7 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r8 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r8.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r10.<java.lang.String: void <init>(char[],int,int)>($r7, $i0, $i2);

        virtualinvoke $r4.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r10);

     label1:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r9;

        return;
    }

    protected final void mNESTED_ARG_ACTION(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i3, $i4, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18;
        java.lang.String $r9;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0, $z1;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        char $c1, $c2, $c5, $c6, $c7, $c8, $c9;
        groovyjarjarantlr.collections.impl.BitSet $r8;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(91);

     label01:
        $c8 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i10 = (int) $c8;

        lookupswitch($i10)
        {
            case 10: goto label03;
            case 34: goto label05;
            case 39: goto label04;
            case 91: goto label02;
            default: goto label06;
        };

     label02:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mNESTED_ARG_ACTION(boolean)>(0);

        goto label01;

     label03:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(10);

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void newline()>();

        goto label01;

     label04:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mCHAR_LITERAL(boolean)>(0);

        goto label01;

     label05:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mSTRING_LITERAL(boolean)>(0);

        goto label01;

     label06:
        $c1 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i11 = (int) $c1;

        if $i11 != 13 goto label07;

        $c7 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i12 = (int) $c7;

        if $i12 != 10 goto label07;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(13);

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(10);

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void newline()>();

        goto label01;

     label07:
        $c2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i13 = (int) $c2;

        if $i13 != 13 goto label08;

        $c5 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i14 = (int) $c5;

        if $i14 < 3 goto label08;

        $c6 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i15 = (int) $c6;

        if $i15 > 255 goto label08;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(13);

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void newline()>();

        goto label01;

     label08:
        $r8 = <groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_3>;

        $c9 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i16 = (int) $c9;

        $z1 = virtualinvoke $r8.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i16);

        if $z1 == 0 goto label09;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void matchNot(char)>(93);

        goto label01;

     label09:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(93);

        if z0 == 0 goto label10;

        if null != null goto label10;

        $i18 = (int) -1;

        if 59 == $i18 goto label10;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(59);

        r7 = $r2;

        $r9 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i3 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i4 = $i3 - $i0;

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i4);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r9);

     label10:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mACTION(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        byte b8, b9, b10, b11, b12;
        groovyjarjarantlr.Token $r9, r16;
        boolean z0;
        groovyjarjarantlr.CommonToken $r18;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i13, $i15;
        java.lang.String $r2, $r3, $r14, $r15, $r17, $r19;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r6, $r8, $r11, $r13;
        char $c3;
        char[] $r7, $r12;
        groovyjarjarantlr.ANTLRLexer r0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        b8 = 7;

        b12 = 7;

        b11 = 7;

        b10 = 7;

        b9 = 7;

        $i1 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getLine()>();

        $i2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getColumn()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mNESTED_ACTION(boolean)>(0);

        $c3 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i13 = (int) $c3;

        if $i13 != 63 goto label1;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(63);

        b8 = 43;

        b12 = 43;

        b11 = 43;

        b10 = 43;

        b9 = 43;

     label1:
        if b9 != 7 goto label2;

        $r14 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: java.lang.String getText()>();

        $r15 = staticinvoke <groovyjarjarantlr.StringUtils: java.lang.String stripFrontBack(java.lang.String,java.lang.String,java.lang.String)>($r14, "{", "}");

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void setText(java.lang.String)>($r15);

        goto label3;

     label2:
        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: java.lang.String getText()>();

        $r3 = staticinvoke <groovyjarjarantlr.StringUtils: java.lang.String stripFrontBack(java.lang.String,java.lang.String,java.lang.String)>($r2, "{", "}?");

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void setText(java.lang.String)>($r3);

     label3:
        $r18 = new groovyjarjarantlr.CommonToken;

        $r17 = new java.lang.String;

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r7 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r8 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i4 = virtualinvoke $r8.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i5 = $i4 - $i0;

        specialinvoke $r17.<java.lang.String: void <init>(char[],int,int)>($r7, $i0, $i5);

        specialinvoke $r18.<groovyjarjarantlr.CommonToken: void <init>(int,java.lang.String)>(b10, $r17);

        virtualinvoke $r18.<groovyjarjarantlr.CommonToken: void setLine(int)>($i1);

        virtualinvoke $r18.<groovyjarjarantlr.CommonToken: void setColumn(int)>($i2);

        r16 = $r18;

        if z0 == 0 goto label4;

        if $r18 != null goto label4;

        $i15 = (int) -1;

        if b11 == $i15 goto label4;

        $r9 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(b12);

        r16 = $r9;

        $r19 = new java.lang.String;

        $r11 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r12 = virtualinvoke $r11.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r13 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i6 = virtualinvoke $r13.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i7 = $i6 - $i0;

        specialinvoke $r19.<java.lang.String: void <init>(char[],int,int)>($r12, $i0, $i7);

        virtualinvoke $r9.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r19);

     label4:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r16;

        return;
    }

    protected final void mNESTED_ACTION(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        java.lang.String $r9, $r12;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        char[] $r5;
        groovyjarjarantlr.Token $r2, r10;
        boolean z0, $z1;
        groovyjarjarantlr.collections.impl.BitSet $r7;
        int $i0, $i5, $i6, $i21, $i22, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i59;
        char $c1, $c2, $c3, $c4, $c7, $c8, $c9, $c10, $c11, $c12, $c13, $c14, $c15, $c16, $c17, $c18, $c19, $c20, $c23, $c24, $c25, $c26, $c27, $c28, $c29, $c30, $c31;
        groovyjarjarantlr.NoViableAltForCharException $r11;
        groovyjarjarantlr.ANTLRLexer r0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r10 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(123);

     label01:
        $c27 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i32 = (int) $c27;

        if $i32 != 125 goto label02;

        goto label13;

     label02:
        $c1 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i33 = (int) $c1;

        if $i33 == 10 goto label03;

        $c26 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i34 = (int) $c26;

        if $i34 != 13 goto label07;

     label03:
        $c2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i35 = (int) $c2;

        if $i35 < 3 goto label07;

        $c17 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i36 = (int) $c17;

        if $i36 > 255 goto label07;

        $c18 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i37 = (int) $c18;

        if $i37 != 13 goto label04;

        $c25 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i38 = (int) $c25;

        if $i38 != 10 goto label04;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(13);

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(10);

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void newline()>();

        goto label01;

     label04:
        $c19 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i39 = (int) $c19;

        if $i39 != 13 goto label05;

        $c23 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i40 = (int) $c23;

        if $i40 < 3 goto label05;

        $c24 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i41 = (int) $c24;

        if $i41 > 255 goto label05;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(13);

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void newline()>();

        goto label01;

     label05:
        $c28 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i42 = (int) $c28;

        if $i42 != 10 goto label06;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(10);

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void newline()>();

        goto label01;

     label06:
        $r11 = new groovyjarjarantlr.NoViableAltForCharException;

        $c20 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $r9 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: java.lang.String getFilename()>();

        $i21 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getLine()>();

        $i22 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int getColumn()>();

        specialinvoke $r11.<groovyjarjarantlr.NoViableAltForCharException: void <init>(char,java.lang.String,int,int)>($c20, $r9, $i21, $i22);

        throw $r11;

     label07:
        $c29 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i43 = (int) $c29;

        if $i43 != 123 goto label08;

        $c15 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i44 = (int) $c15;

        if $i44 < 3 goto label08;

        $c16 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i45 = (int) $c16;

        if $i45 > 255 goto label08;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mNESTED_ACTION(boolean)>(0);

        goto label01;

     label08:
        $c30 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i46 = (int) $c30;

        if $i46 != 39 goto label09;

        $r7 = <groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_4>;

        $c14 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i47 = (int) $c14;

        $z1 = virtualinvoke $r7.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i47);

        if $z1 == 0 goto label09;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mCHAR_LITERAL(boolean)>(0);

        goto label01;

     label09:
        $c3 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i48 = (int) $c3;

        if $i48 != 47 goto label11;

        $c12 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i49 = (int) $c12;

        if $i49 == 42 goto label10;

        $c13 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i50 = (int) $c13;

        if $i50 != 47 goto label11;

     label10:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mCOMMENT(boolean)>(0);

        goto label01;

     label11:
        $c4 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i51 = (int) $c4;

        if $i51 != 34 goto label12;

        $c10 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i52 = (int) $c10;

        if $i52 < 3 goto label12;

        $c11 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i53 = (int) $c11;

        if $i53 > 255 goto label12;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mSTRING_LITERAL(boolean)>(0);

        goto label01;

     label12:
        $c31 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i54 = (int) $c31;

        if $i54 < 3 goto label13;

        $c7 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i55 = (int) $c7;

        if $i55 > 255 goto label13;

        $c8 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i56 = (int) $c8;

        if $i56 < 3 goto label13;

        $c9 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(2);

        $i57 = (int) $c9;

        if $i57 > 255 goto label13;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void matchNot(char)>(65535);

        goto label01;

     label13:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(125);

        if z0 == 0 goto label14;

        if null != null goto label14;

        $i59 = (int) -1;

        if 60 == $i59 goto label14;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(60);

        r10 = $r2;

        $r12 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i5 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i6 = $i5 - $i0;

        specialinvoke $r12.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i6);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r12);

     label14:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r10;

        return;
    }

    public final void mTOKEN_REF(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i1, $i2, $i3, $i5, $i7;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        char $c4;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void matchRange(char,char)>(65, 90);

     label1:
        $c4 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i5 = (int) $c4;

        tableswitch($i5)
        {
            case 48: goto label5;
            case 49: goto label5;
            case 50: goto label5;
            case 51: goto label5;
            case 52: goto label5;
            case 53: goto label5;
            case 54: goto label5;
            case 55: goto label5;
            case 56: goto label5;
            case 57: goto label5;
            case 58: goto label6;
            case 59: goto label6;
            case 60: goto label6;
            case 61: goto label6;
            case 62: goto label6;
            case 63: goto label6;
            case 64: goto label6;
            case 65: goto label3;
            case 66: goto label3;
            case 67: goto label3;
            case 68: goto label3;
            case 69: goto label3;
            case 70: goto label3;
            case 71: goto label3;
            case 72: goto label3;
            case 73: goto label3;
            case 74: goto label3;
            case 75: goto label3;
            case 76: goto label3;
            case 77: goto label3;
            case 78: goto label3;
            case 79: goto label3;
            case 80: goto label3;
            case 81: goto label3;
            case 82: goto label3;
            case 83: goto label3;
            case 84: goto label3;
            case 85: goto label3;
            case 86: goto label3;
            case 87: goto label3;
            case 88: goto label3;
            case 89: goto label3;
            case 90: goto label3;
            case 91: goto label6;
            case 92: goto label6;
            case 93: goto label6;
            case 94: goto label6;
            case 95: goto label4;
            case 96: goto label6;
            case 97: goto label2;
            case 98: goto label2;
            case 99: goto label2;
            case 100: goto label2;
            case 101: goto label2;
            case 102: goto label2;
            case 103: goto label2;
            case 104: goto label2;
            case 105: goto label2;
            case 106: goto label2;
            case 107: goto label2;
            case 108: goto label2;
            case 109: goto label2;
            case 110: goto label2;
            case 111: goto label2;
            case 112: goto label2;
            case 113: goto label2;
            case 114: goto label2;
            case 115: goto label2;
            case 116: goto label2;
            case 117: goto label2;
            case 118: goto label2;
            case 119: goto label2;
            case 120: goto label2;
            case 121: goto label2;
            case 122: goto label2;
            default: goto label6;
        };

     label2:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void matchRange(char,char)>(97, 122);

        goto label1;

     label3:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void matchRange(char,char)>(65, 90);

        goto label1;

     label4:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(95);

        goto label1;

     label5:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void matchRange(char,char)>(48, 57);

        goto label1;

     label6:
        goto label7;

     label7:
        $i1 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int testLiteralsTable(int)>(24);

        if z0 == 0 goto label8;

        if null != null goto label8;

        $i7 = (int) -1;

        if $i1 == $i7 goto label8;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>($i1);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i3);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label8:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    public final void mRULE_REF(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i1, $i2, $i3, i6, $i7, $i8, $i10;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        char $c4, $c5;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i1 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int mINTERNAL_RULE_REF(boolean)>(0);

        i6 = $i1;

        if $i1 != 51 goto label1;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mWS_LOOP(boolean)>(0);

        $c5 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i7 = (int) $c5;

        if $i7 != 123 goto label2;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(123);

        i6 = 14;

        goto label2;

     label1:
        if $i1 != 4 goto label2;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mWS_LOOP(boolean)>(0);

        $c4 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i8 = (int) $c4;

        if $i8 != 123 goto label2;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(123);

        i6 = 23;

     label2:
        if z0 == 0 goto label3;

        if null != null goto label3;

        $i10 = (int) -1;

        if i6 == $i10 goto label3;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(i6);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i3);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label3:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    protected final int mINTERNAL_RULE_REF(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i1, $i2, $i3, $i5, $i7;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        char $c4;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void matchRange(char,char)>(97, 122);

     label1:
        $c4 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i5 = (int) $c4;

        tableswitch($i5)
        {
            case 48: goto label5;
            case 49: goto label5;
            case 50: goto label5;
            case 51: goto label5;
            case 52: goto label5;
            case 53: goto label5;
            case 54: goto label5;
            case 55: goto label5;
            case 56: goto label5;
            case 57: goto label5;
            case 58: goto label6;
            case 59: goto label6;
            case 60: goto label6;
            case 61: goto label6;
            case 62: goto label6;
            case 63: goto label6;
            case 64: goto label6;
            case 65: goto label3;
            case 66: goto label3;
            case 67: goto label3;
            case 68: goto label3;
            case 69: goto label3;
            case 70: goto label3;
            case 71: goto label3;
            case 72: goto label3;
            case 73: goto label3;
            case 74: goto label3;
            case 75: goto label3;
            case 76: goto label3;
            case 77: goto label3;
            case 78: goto label3;
            case 79: goto label3;
            case 80: goto label3;
            case 81: goto label3;
            case 82: goto label3;
            case 83: goto label3;
            case 84: goto label3;
            case 85: goto label3;
            case 86: goto label3;
            case 87: goto label3;
            case 88: goto label3;
            case 89: goto label3;
            case 90: goto label3;
            case 91: goto label6;
            case 92: goto label6;
            case 93: goto label6;
            case 94: goto label6;
            case 95: goto label4;
            case 96: goto label6;
            case 97: goto label2;
            case 98: goto label2;
            case 99: goto label2;
            case 100: goto label2;
            case 101: goto label2;
            case 102: goto label2;
            case 103: goto label2;
            case 104: goto label2;
            case 105: goto label2;
            case 106: goto label2;
            case 107: goto label2;
            case 108: goto label2;
            case 109: goto label2;
            case 110: goto label2;
            case 111: goto label2;
            case 112: goto label2;
            case 113: goto label2;
            case 114: goto label2;
            case 115: goto label2;
            case 116: goto label2;
            case 117: goto label2;
            case 118: goto label2;
            case 119: goto label2;
            case 120: goto label2;
            case 121: goto label2;
            case 122: goto label2;
            default: goto label6;
        };

     label2:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void matchRange(char,char)>(97, 122);

        goto label1;

     label3:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void matchRange(char,char)>(65, 90);

        goto label1;

     label4:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void match(char)>(95);

        goto label1;

     label5:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void matchRange(char,char)>(48, 57);

        goto label1;

     label6:
        goto label7;

     label7:
        $i1 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: int testLiteralsTable(int)>(41);

        if z0 == 0 goto label8;

        if null != null goto label8;

        $i7 = (int) -1;

        if 62 == $i7 goto label8;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(62);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i3);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label8:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return $i1;
    }

    protected final void mWS_LOOP(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r4, $r6;
        char $c3;
        int $i0, $i1, $i2, $i4, $i6;
        char[] $r5;
        groovyjarjarantlr.ANTLRLexer r0;
        java.lang.String $r8;
        groovyjarjarantlr.Token $r2, r7;
        boolean z0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z0 := @parameter0: boolean;

        r7 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

     label1:
        $c3 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i4 = (int) $c3;

        lookupswitch($i4)
        {
            case 9: goto label2;
            case 10: goto label2;
            case 13: goto label2;
            case 32: goto label2;
            case 47: goto label3;
            default: goto label4;
        };

     label2:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mWS(boolean)>(0);

        goto label1;

     label3:
        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mCOMMENT(boolean)>(0);

        goto label1;

     label4:
        goto label5;

     label5:
        if z0 == 0 goto label6;

        if null != null goto label6;

        $i6 = (int) -1;

        if 61 == $i6 goto label6;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(61);

        r7 = $r2;

        $r8 = new java.lang.String;

        $r4 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r6 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i1 = virtualinvoke $r6.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i2 = $i1 - $i0;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r5, $i0, $i2);

        virtualinvoke $r2.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r8);

     label6:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r7;

        return;
    }

    protected final void mWS_OPT(boolean) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.CharStreamException, groovyjarjarantlr.TokenStreamException
    {
        int $i0, $i2, $i3, $i4, $i6;
        java.lang.String $r9;
        groovyjarjarantlr.Token $r3, r8;
        boolean $z0, z1;
        groovyjarjarantlr.ANTLRStringBuffer $r1, $r5, $r7;
        char $c1;
        groovyjarjarantlr.collections.impl.BitSet $r2;
        char[] $r6;
        groovyjarjarantlr.ANTLRLexer r0;

        r0 := @this: groovyjarjarantlr.ANTLRLexer;

        z1 := @parameter0: boolean;

        r8 = null;

        $r1 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i0 = virtualinvoke $r1.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $r2 = <groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_5>;

        $c1 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: char LA(int)>(1);

        $i4 = (int) $c1;

        $z0 = virtualinvoke $r2.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i4);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: void mWS(boolean)>(0);

     label1:
        if z1 == 0 goto label2;

        if null != null goto label2;

        $i6 = (int) -1;

        if 63 == $i6 goto label2;

        $r3 = virtualinvoke r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token makeToken(int)>(63);

        r8 = $r3;

        $r9 = new java.lang.String;

        $r5 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $r6 = virtualinvoke $r5.<groovyjarjarantlr.ANTLRStringBuffer: char[] getBuffer()>();

        $r7 = r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.ANTLRStringBuffer text>;

        $i2 = virtualinvoke $r7.<groovyjarjarantlr.ANTLRStringBuffer: int length()>();

        $i3 = $i2 - $i0;

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>($r6, $i0, $i3);

        virtualinvoke $r3.<groovyjarjarantlr.Token: void setText(java.lang.String)>($r9);

     label2:
        r0.<groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.Token _returnToken> = r8;

        return;
    }

    private static final long[] mk_tokenSet_0()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[8];

        r0[0] = -9224L;

        i0 = 1;

     label1:
        if i0 > 3 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static final long[] mk_tokenSet_1()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[8];

        r0[0] = -549755813896L;

        r0[1] = -268435457L;

        i0 = 2;

     label1:
        if i0 > 3 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static final long[] mk_tokenSet_2()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[8];

        r0[0] = -17179869192L;

        r0[1] = -268435457L;

        i0 = 2;

     label1:
        if i0 > 3 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static final long[] mk_tokenSet_3()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[8];

        r0[0] = -566935692296L;

        r0[1] = -671088641L;

        i0 = 2;

     label1:
        if i0 > 3 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static final long[] mk_tokenSet_4()
    {
        int i0;
        long[] r0;

        r0 = newarray (long)[8];

        r0[0] = -549755813896L;

        i0 = 1;

     label1:
        if i0 > 3 goto label2;

        r0[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static final long[] mk_tokenSet_5()
    {
        long[] $r0;

        $r0 = newarray (long)[5];

        $r0[0] = 4294977024L;

        $r0[1] = 0L;

        $r0[2] = 0L;

        $r0[3] = 0L;

        $r0[4] = 0L;

        return $r0;
    }

    static void <clinit>()
    {
        groovyjarjarantlr.collections.impl.BitSet $r0, $r2, $r4, $r6, $r8, $r10;
        long[] $r1, $r3, $r5, $r7, $r9, $r11;

        $r0 = new groovyjarjarantlr.collections.impl.BitSet;

        $r1 = staticinvoke <groovyjarjarantlr.ANTLRLexer: long[] mk_tokenSet_0()>();

        specialinvoke $r0.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r1);

        <groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_0> = $r0;

        $r2 = new groovyjarjarantlr.collections.impl.BitSet;

        $r3 = staticinvoke <groovyjarjarantlr.ANTLRLexer: long[] mk_tokenSet_1()>();

        specialinvoke $r2.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r3);

        <groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_1> = $r2;

        $r4 = new groovyjarjarantlr.collections.impl.BitSet;

        $r5 = staticinvoke <groovyjarjarantlr.ANTLRLexer: long[] mk_tokenSet_2()>();

        specialinvoke $r4.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r5);

        <groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_2> = $r4;

        $r6 = new groovyjarjarantlr.collections.impl.BitSet;

        $r7 = staticinvoke <groovyjarjarantlr.ANTLRLexer: long[] mk_tokenSet_3()>();

        specialinvoke $r6.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r7);

        <groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_3> = $r6;

        $r8 = new groovyjarjarantlr.collections.impl.BitSet;

        $r9 = staticinvoke <groovyjarjarantlr.ANTLRLexer: long[] mk_tokenSet_4()>();

        specialinvoke $r8.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r9);

        <groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_4> = $r8;

        $r10 = new groovyjarjarantlr.collections.impl.BitSet;

        $r11 = staticinvoke <groovyjarjarantlr.ANTLRLexer: long[] mk_tokenSet_5()>();

        specialinvoke $r10.<groovyjarjarantlr.collections.impl.BitSet: void <init>(long[])>($r11);

        <groovyjarjarantlr.ANTLRLexer: groovyjarjarantlr.collections.impl.BitSet _tokenSet_5> = $r10;

        return;
    }
}
