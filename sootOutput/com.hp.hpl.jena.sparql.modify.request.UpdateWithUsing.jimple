public abstract class com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing extends com.hp.hpl.jena.update.Update
{
    private com.hp.hpl.jena.graph.Node withIRI;
    private java.util.List using;
    private java.util.List usingNamed;
    private java.util.List usingView;
    private java.util.List usingNamedView;

    public void <init>()
    {
        java.util.List $r3, $r4, $r5, $r6;
        com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing;

        specialinvoke r0.<com.hp.hpl.jena.update.Update: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: com.hp.hpl.jena.graph.Node withIRI> = null;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: java.util.List using> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: java.util.List usingNamed> = $r2;

        $r3 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: java.util.List using>;

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r3);

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: java.util.List usingView> = $r4;

        $r5 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: java.util.List usingNamed>;

        $r6 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r5);

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: java.util.List usingNamedView> = $r6;

        return;
    }

    public void addUsing(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing r0;
        java.util.List $r2;
        com.hp.hpl.jena.graph.Node r1;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: java.util.List using>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addUsingNamed(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing r0;
        java.util.List $r2;
        com.hp.hpl.jena.graph.Node r1;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: java.util.List usingNamed>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.util.List getUsing()
    {
        com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing r0;
        java.util.List $r1;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing;

        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: java.util.List usingView>;

        return $r1;
    }

    public java.util.List getUsingNamed()
    {
        com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing r0;
        java.util.List $r1;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing;

        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: java.util.List usingNamedView>;

        return $r1;
    }

    public com.hp.hpl.jena.graph.Node getWithIRI()
    {
        com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing r0;
        com.hp.hpl.jena.graph.Node $r1;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing;

        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: com.hp.hpl.jena.graph.Node withIRI>;

        return $r1;
    }

    public void setWithIRI(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing r0;
        com.hp.hpl.jena.graph.Node r1;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: com.hp.hpl.jena.graph.Node withIRI> = r1;

        return;
    }

    protected boolean equalIso(com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing, com.hp.hpl.jena.sparql.util.NodeIsomorphismMap)
    {
        com.hp.hpl.jena.graph.Node $r1, $r2, $r3, $r8, $r9, $r10, $r11, $r12;
        boolean $z0, $z1, $z2;
        java.util.List $r6, $r7, $r13, $r14;
        com.hp.hpl.jena.sparql.util.NodeIsomorphismMap r5;
        com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing r0, r4;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing;

        r4 := @parameter0: com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing;

        r5 := @parameter1: com.hp.hpl.jena.sparql.util.NodeIsomorphismMap;

        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: com.hp.hpl.jena.graph.Node withIRI>;

        if $r1 != null goto label1;

        $r12 = r4.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: com.hp.hpl.jena.graph.Node withIRI>;

        if $r12 == null goto label1;

        return 0;

     label1:
        $r2 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: com.hp.hpl.jena.graph.Node withIRI>;

        if $r2 == null goto label2;

        $r11 = r4.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: com.hp.hpl.jena.graph.Node withIRI>;

        if $r11 != null goto label2;

        return 0;

     label2:
        $r3 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: com.hp.hpl.jena.graph.Node withIRI>;

        if $r3 == null goto label3;

        $r8 = r4.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: com.hp.hpl.jena.graph.Node withIRI>;

        if $r8 == null goto label3;

        $r10 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: com.hp.hpl.jena.graph.Node withIRI>;

        $r9 = r4.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: com.hp.hpl.jena.graph.Node withIRI>;

        $z1 = staticinvoke <com.hp.hpl.jena.sparql.util.Iso: boolean nodeIso(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.util.NodeIsomorphismMap)>($r10, $r9, r5);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r13 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: java.util.List using>;

        $r14 = r4.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: java.util.List using>;

        $z2 = staticinvoke <com.hp.hpl.jena.sparql.util.Iso: boolean isomorphicNodes(java.util.List,java.util.List,com.hp.hpl.jena.sparql.util.NodeIsomorphismMap)>($r13, $r14, r5);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        $r7 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: java.util.List usingNamed>;

        $r6 = r4.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: java.util.List usingNamed>;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.util.Iso: boolean isomorphicNodes(java.util.List,java.util.List,com.hp.hpl.jena.sparql.util.NodeIsomorphismMap)>($r7, $r6, r5);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }
}
