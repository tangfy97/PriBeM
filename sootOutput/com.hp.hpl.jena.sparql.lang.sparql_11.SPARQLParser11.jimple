public class com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 extends com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11Base implements com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11Constants
{
    boolean allowAggregatesInExpressions;
    public com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager token_source;
    com.hp.hpl.jena.sparql.lang.sparql_11.JavaCharStream jj_input_stream;
    public com.hp.hpl.jena.sparql.lang.sparql_11.Token token;
    public com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_nt;
    private int jj_ntk;
    private int jj_gen;
    private final int[] jj_la1;
    private static int[] jj_la1_0;
    private static int[] jj_la1_1;
    private static int[] jj_la1_2;
    private static int[] jj_la1_3;
    private static int[] jj_la1_4;
    private static int[] jj_la1_5;
    private static int[] jj_la1_6;
    private java.util.List jj_expentries;
    private int[] jj_expentry;
    private int jj_kind;

    public final void QueryUnit() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void startQuery()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void Query()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(0);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void finishQuery()>();

        return;
    }

    public final void Query() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r1;
        int $i0, $i1, $i2, $i4, $i6;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r3;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void Prologue()>();

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        tableswitch($i2)
        {
            case 21: goto label3;
            case 22: goto label7;
            case 23: goto label7;
            case 24: goto label5;
            case 25: goto label4;
            case 26: goto label6;
            default: goto label7;
        };

     label3:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void SelectQuery()>();

        goto label8;

     label4:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void ConstructQuery()>();

        goto label8;

     label5:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void DescribeQuery()>();

        goto label8;

     label6:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void AskQuery()>();

        goto label8;

     label7:
        $r1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r1[0] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r3 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r3;

     label8:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void ValuesClause()>();

        return;
    }

    public final void UpdateUnit() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void startUpdateRequest()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void Update()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(0);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void finishUpdateRequest()>();

        return;
    }

    public final void Prologue() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r1, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i11;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r4;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

     label01:
        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i7 = (int) -1;

        if $i3 != $i7 goto label02;

        $i4 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label03;

     label02:
        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label03:
        lookupswitch($i4)
        {
            case 19: goto label04;
            case 20: goto label04;
            default: goto label05;
        };

     label04:
        goto label06;

     label05:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r3[1] = $i2;

        goto label12;

     label06:
        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i9 = (int) -1;

        if $i0 != $i9 goto label07;

        $i5 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label08;

     label07:
        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label08:
        lookupswitch($i5)
        {
            case 19: goto label09;
            case 20: goto label10;
            default: goto label11;
        };

     label09:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void BaseDecl()>();

        goto label01;

     label10:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void PrefixDecl()>();

        goto label01;

     label11:
        $r1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r1[2] = $i1;

        $i11 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i11);

        $r4 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r4.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r4;

     label12:
        return;
    }

    public final void BaseDecl() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        java.lang.String $r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.core.Prologue $r2;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(19);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String IRIREF()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.core.Prologue getPrologue()>();

        virtualinvoke $r2.<com.hp.hpl.jena.sparql.core.Prologue: void setBaseURI(java.lang.String)>($r1);

        return;
    }

    public final void PrefixDecl() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.core.Prologue $r5;
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int $i0, $i1;
        java.lang.String $r2, $r3, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(20);

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(10);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String IRIREF()>();

        $r3 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: java.lang.String image>;

        $i1 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        $i0 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String fixupPrefix(java.lang.String,int,int)>($r3, $i1, $i0);

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.core.Prologue getPrologue()>();

        virtualinvoke $r5.<com.hp.hpl.jena.sparql.core.Prologue: void setPrefix(java.lang.String,java.lang.String)>($r4, $r2);

        return;
    }

    public final void SelectQuery() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        int[] $r1;
        int $i0, $i1, $i2, $i4;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void SelectClause()>();

     label1:
        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label2;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label3;

     label2:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label3:
        lookupswitch($i2)
        {
            case 36: goto label4;
            default: goto label5;
        };

     label4:
        goto label6;

     label5:
        $r1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r1[3] = $i1;

        goto label7;

     label6:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void DatasetClause()>();

        goto label1;

     label7:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void WhereClause()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void SolutionModifier()>();

        return;
    }

    public final void SubSelect() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void SelectClause()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void WhereClause()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void SolutionModifier()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void ValuesClause()>();

        return;
    }

    public final void SelectClause() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.expr.Expr $r4;
        int[] $r8, $r11, $r13, $r16, $r18;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r19, $r20, $r21;
        com.hp.hpl.jena.query.Query $r1, $r2, $r3, $r6, $r7, $r10, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i18, $i20, $i22, $i24, $i26, $i28, $i30;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.core.Var $r5, $r9;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(21);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r1.<com.hp.hpl.jena.query.Query: void setQuerySelectType()>();

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i16 = (int) -1;

        if $i0 != $i16 goto label01;

        $i9 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label02;

     label01:
        $i9 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label02:
        lookupswitch($i9)
        {
            case 22: goto label03;
            case 23: goto label03;
            default: goto label09;
        };

     label03:
        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i18 = (int) -1;

        if $i1 != $i18 goto label04;

        $i10 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label05;

     label04:
        $i10 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label05:
        lookupswitch($i10)
        {
            case 22: goto label06;
            case 23: goto label07;
            default: goto label08;
        };

     label06:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(22);

        $r15 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r15.<com.hp.hpl.jena.query.Query: void setDistinct(boolean)>(1);

        goto label10;

     label07:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(23);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r2.<com.hp.hpl.jena.query.Query: void setReduced(boolean)>(1);

        goto label10;

     label08:
        $r16 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i7 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r16[4] = $i7;

        $i20 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i20);

        $r19 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r19.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r19;

     label09:
        $r18 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i8 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r18[5] = $i8;

     label10:
        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: boolean allowAggregatesInExpressions> = 1;

        $i11 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i22 = (int) -1;

        if $i11 != $i22 goto label11;

        $i12 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label12;

     label11:
        $i12 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label12:
        lookupswitch($i12)
        {
            case 13: goto label13;
            case 14: goto label13;
            case 156: goto label13;
            case 180: goto label24;
            default: goto label25;
        };

     label13:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i24 = (int) -1;

        if $i2 != $i24 goto label14;

        $i13 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label15;

     label14:
        $i13 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label15:
        lookupswitch($i13)
        {
            case 13: goto label16;
            case 14: goto label16;
            case 156: goto label17;
            default: goto label18;
        };

     label16:
        $r9 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.core.Var Var()>();

        $r10 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r10.<com.hp.hpl.jena.query.Query: void addResultVar(com.hp.hpl.jena.graph.Node)>($r9);

        goto label19;

     label17:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(47);

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.core.Var Var()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r6.<com.hp.hpl.jena.query.Query: void addResultVar(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.expr.Expr)>($r5, $r4);

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r7.<com.hp.hpl.jena.query.Query: void setQueryResultStar(boolean)>(0);

        goto label19;

     label18:
        $r11 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r11[6] = $i5;

        $i26 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i26);

        $r20 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r20.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r20;

     label19:
        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i28 = (int) -1;

        if $i3 != $i28 goto label20;

        $i14 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label21;

     label20:
        $i14 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label21:
        lookupswitch($i14)
        {
            case 13: goto label22;
            case 14: goto label22;
            case 156: goto label22;
            default: goto label23;
        };

     label22:
        goto label13;

     label23:
        $r8 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r8[7] = $i4;

        goto label26;

     label24:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(180);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r3.<com.hp.hpl.jena.query.Query: void setQueryResultStar(boolean)>(1);

        goto label26;

     label25:
        $r13 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r13[8] = $i6;

        $i30 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i30);

        $r21 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r21.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r21;

     label26:
        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: boolean allowAggregatesInExpressions> = 0;

        return;
    }

    public final void ConstructQuery() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.syntax.Template $r3, $r18;
        com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP $r17;
        int[] $r5, $r6, $r14, $r15;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r21;
        com.hp.hpl.jena.sparql.syntax.ElementPathBlock $r19;
        com.hp.hpl.jena.sparql.syntax.ElementGroup $r20;
        com.hp.hpl.jena.query.Query $r2, $r4, $r9, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i15, $i17, $i19, $i21;
        com.hp.hpl.jena.sparql.core.BasicPattern $r8, $r11;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r1;

        r1 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r17 = new com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP;

        specialinvoke $r17.<com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP: void <init>()>();

        specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(25);

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r2.<com.hp.hpl.jena.query.Query: void setQueryConstructType()>();

        $i0 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i13 = (int) -1;

        if $i0 != $i13 goto label01;

        $i8 = specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label02;

     label01:
        $i8 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label02:
        lookupswitch($i8)
        {
            case 36: goto label11;
            case 37: goto label11;
            case 159: goto label03;
            default: goto label23;
        };

     label03:
        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.syntax.Template ConstructTemplate()>();

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r4.<com.hp.hpl.jena.query.Query: void setConstructTemplate(com.hp.hpl.jena.sparql.syntax.Template)>($r3);

     label04:
        $i1 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i15 = (int) -1;

        if $i1 != $i15 goto label05;

        $i9 = specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label06;

     label05:
        $i9 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label06:
        lookupswitch($i9)
        {
            case 36: goto label07;
            default: goto label08;
        };

     label07:
        goto label09;

     label08:
        $r5 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i2 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r5[9] = $i2;

        goto label10;

     label09:
        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void DatasetClause()>();

        goto label04;

     label10:
        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void WhereClause()>();

        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void SolutionModifier()>();

        goto label24;

     label11:
        $i3 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i17 = (int) -1;

        if $i3 != $i17 goto label12;

        $i10 = specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label13;

     label12:
        $i10 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label13:
        lookupswitch($i10)
        {
            case 36: goto label14;
            default: goto label15;
        };

     label14:
        goto label16;

     label15:
        $r6 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i4 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r6[10] = $i4;

        goto label17;

     label16:
        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void DatasetClause()>();

        goto label11;

     label17:
        specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(37);

        specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(159);

        $i5 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i19 = (int) -1;

        if $i5 != $i19 goto label18;

        $i11 = specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label19;

     label18:
        $i11 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label19:
        lookupswitch($i11)
        {
            case 9: goto label20;
            case 10: goto label20;
            case 11: goto label20;
            case 12: goto label20;
            case 13: goto label20;
            case 14: goto label20;
            case 115: goto label20;
            case 116: goto label20;
            case 139: goto label20;
            case 140: goto label20;
            case 141: goto label20;
            case 142: goto label20;
            case 143: goto label20;
            case 144: goto label20;
            case 145: goto label20;
            case 146: goto label20;
            case 147: goto label20;
            case 152: goto label20;
            case 153: goto label20;
            case 154: goto label20;
            case 155: goto label20;
            case 156: goto label20;
            case 158: goto label20;
            case 161: goto label20;
            case 163: goto label20;
            default: goto label21;
        };

     label20:
        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void TriplesTemplate(com.hp.hpl.jena.sparql.syntax.TripleCollector)>($r17);

        goto label22;

     label21:
        $r14 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i6 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r14[11] = $i6;

     label22:
        specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(160);

        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void SolutionModifier()>();

        $r18 = new com.hp.hpl.jena.sparql.syntax.Template;

        $r8 = virtualinvoke $r17.<com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP: com.hp.hpl.jena.sparql.core.BasicPattern getBGP()>();

        specialinvoke $r18.<com.hp.hpl.jena.sparql.syntax.Template: void <init>(com.hp.hpl.jena.sparql.core.BasicPattern)>($r8);

        $r9 = virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r9.<com.hp.hpl.jena.query.Query: void setConstructTemplate(com.hp.hpl.jena.sparql.syntax.Template)>($r18);

        $r19 = new com.hp.hpl.jena.sparql.syntax.ElementPathBlock;

        $r11 = virtualinvoke $r17.<com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP: com.hp.hpl.jena.sparql.core.BasicPattern getBGP()>();

        specialinvoke $r19.<com.hp.hpl.jena.sparql.syntax.ElementPathBlock: void <init>(com.hp.hpl.jena.sparql.core.BasicPattern)>($r11);

        $r20 = new com.hp.hpl.jena.sparql.syntax.ElementGroup;

        specialinvoke $r20.<com.hp.hpl.jena.sparql.syntax.ElementGroup: void <init>()>();

        virtualinvoke $r20.<com.hp.hpl.jena.sparql.syntax.ElementGroup: void addElement(com.hp.hpl.jena.sparql.syntax.Element)>($r19);

        $r13 = virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r13.<com.hp.hpl.jena.query.Query: void setQueryPattern(com.hp.hpl.jena.sparql.syntax.Element)>($r20);

        goto label24;

     label23:
        $r15 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i7 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r15[12] = $i7;

        $i21 = (int) -1;

        specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i21);

        $r21 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r21.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r21;

     label24:
        return;
    }

    public final void DescribeQuery() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.query.Query $r1, $r2, $r6, $r8;
        com.hp.hpl.jena.graph.Node $r5;
        int[] $r3, $r4, $r7, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i15, $i17, $i19, $i21;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r11;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(24);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r1.<com.hp.hpl.jena.query.Query: void setQueryDescribeType()>();

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i13 = (int) -1;

        if $i0 != $i13 goto label01;

        $i7 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label02;

     label01:
        $i7 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label02:
        lookupswitch($i7)
        {
            case 9: goto label03;
            case 10: goto label03;
            case 11: goto label03;
            case 13: goto label03;
            case 14: goto label03;
            case 180: goto label09;
            default: goto label10;
        };

     label03:
        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node VarOrIri()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r6.<com.hp.hpl.jena.query.Query: void addDescribeNode(com.hp.hpl.jena.graph.Node)>($r5);

        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i15 = (int) -1;

        if $i4 != $i15 goto label04;

        $i8 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label05;

     label04:
        $i8 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label05:
        tableswitch($i8)
        {
            case 9: goto label06;
            case 10: goto label06;
            case 11: goto label06;
            case 12: goto label07;
            case 13: goto label06;
            case 14: goto label06;
            default: goto label07;
        };

     label06:
        goto label03;

     label07:
        $r7 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r7[13] = $i5;

        goto label08;

     label08:
        $r8 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r8.<com.hp.hpl.jena.query.Query: void setQueryResultStar(boolean)>(0);

        goto label11;

     label09:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(180);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r2.<com.hp.hpl.jena.query.Query: void setQueryResultStar(boolean)>(1);

        goto label11;

     label10:
        $r9 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r9[14] = $i6;

        $i17 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i17);

        $r11 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r11.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r11;

     label11:
        $i9 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i19 = (int) -1;

        if $i9 != $i19 goto label12;

        $i10 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label13;

     label12:
        $i10 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label13:
        lookupswitch($i10)
        {
            case 36: goto label14;
            default: goto label15;
        };

     label14:
        goto label16;

     label15:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r3[15] = $i1;

        goto label17;

     label16:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void DatasetClause()>();

        goto label11;

     label17:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i21 = (int) -1;

        if $i2 != $i21 goto label18;

        $i11 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label19;

     label18:
        $i11 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label19:
        lookupswitch($i11)
        {
            case 37: goto label20;
            case 159: goto label20;
            default: goto label21;
        };

     label20:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void WhereClause()>();

        goto label22;

     label21:
        $r4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r4[16] = $i3;

     label22:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void SolutionModifier()>();

        return;
    }

    public final void AskQuery() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.query.Query $r1;
        int[] $r2;
        int $i0, $i1, $i2, $i4;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(26);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r1.<com.hp.hpl.jena.query.Query: void setQueryAskType()>();

     label1:
        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label2;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label3;

     label2:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label3:
        lookupswitch($i2)
        {
            case 36: goto label4;
            default: goto label5;
        };

     label4:
        goto label6;

     label5:
        $r2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r2[17] = $i1;

        goto label7;

     label6:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void DatasetClause()>();

        goto label1;

     label7:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void WhereClause()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void SolutionModifier()>();

        return;
    }

    public final void DatasetClause() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r1;
        int $i0, $i1, $i2, $i4, $i6;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r3;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(36);

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label3;
            case 35: goto label4;
            default: goto label5;
        };

     label3:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void DefaultGraphClause()>();

        goto label6;

     label4:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void NamedGraphClause()>();

        goto label6;

     label5:
        $r1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r1[18] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r3 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r3;

     label6:
        return;
    }

    public final void DefaultGraphClause() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.query.Query $r2;
        java.lang.String $r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String SourceSelector()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r2.<com.hp.hpl.jena.query.Query: void addGraphURI(java.lang.String)>($r1);

        return;
    }

    public final void NamedGraphClause() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.query.Query $r2;
        java.lang.String $r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(35);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String SourceSelector()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r2.<com.hp.hpl.jena.query.Query: void addNamedGraphURI(java.lang.String)>($r1);

        return;
    }

    public final java.lang.String SourceSelector() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        java.lang.String $r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String iri()>();

        return $r1;
    }

    public final void WhereClause() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.query.Query $r2;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r3;
        int $i0, $i1, $i2, $i4;
        com.hp.hpl.jena.sparql.syntax.Element $r1;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 37: goto label3;
            default: goto label4;
        };

     label3:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(37);

        goto label5;

     label4:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r3[19] = $i1;

     label5:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void startWherePattern()>();

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.syntax.Element GroupGraphPattern()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r2.<com.hp.hpl.jena.query.Query: void setQueryPattern(com.hp.hpl.jena.sparql.syntax.Element)>($r1);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void finishWherePattern()>();

        return;
    }

    public final void SolutionModifier() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        int[] $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i15, $i17, $i19;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i13 = (int) -1;

        if $i0 != $i13 goto label01;

        $i8 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label02;

     label01:
        $i8 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label02:
        lookupswitch($i8)
        {
            case 48: goto label03;
            default: goto label04;
        };

     label03:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void GroupClause()>();

        goto label05;

     label04:
        $r4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i7 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r4[20] = $i7;

     label05:
        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i15 = (int) -1;

        if $i1 != $i15 goto label06;

        $i9 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label07;

     label06:
        $i9 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label07:
        lookupswitch($i9)
        {
            case 49: goto label08;
            default: goto label09;
        };

     label08:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void HavingClause()>();

        goto label10;

     label09:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r3[21] = $i6;

     label10:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i17 = (int) -1;

        if $i2 != $i17 goto label11;

        $i10 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label12;

     label11:
        $i10 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label12:
        lookupswitch($i10)
        {
            case 29: goto label13;
            default: goto label14;
        };

     label13:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void OrderClause()>();

        goto label15;

     label14:
        $r2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r2[22] = $i5;

     label15:
        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i19 = (int) -1;

        if $i3 != $i19 goto label16;

        $i11 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label17;

     label16:
        $i11 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label17:
        lookupswitch($i11)
        {
            case 27: goto label18;
            case 28: goto label18;
            default: goto label19;
        };

     label18:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void LimitOffsetClauses()>();

        goto label20;

     label19:
        $r1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r1[23] = $i4;

     label20:
        return;
    }

    public final void GroupClause() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        int[] $r1;
        int $i0, $i1, $i2, $i4;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(48);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(30);

     label1:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void GroupCondition()>();

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label2;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label3;

     label2:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label3:
        tableswitch($i2)
        {
            case 9: goto label4;
            case 10: goto label4;
            case 11: goto label4;
            case 12: goto label5;
            case 13: goto label4;
            case 14: goto label4;
            case 15: goto label5;
            case 16: goto label5;
            case 17: goto label5;
            case 18: goto label5;
            case 19: goto label5;
            case 20: goto label5;
            case 21: goto label5;
            case 22: goto label5;
            case 23: goto label5;
            case 24: goto label5;
            case 25: goto label5;
            case 26: goto label5;
            case 27: goto label5;
            case 28: goto label5;
            case 29: goto label5;
            case 30: goto label5;
            case 31: goto label5;
            case 32: goto label5;
            case 33: goto label5;
            case 34: goto label5;
            case 35: goto label5;
            case 36: goto label5;
            case 37: goto label5;
            case 38: goto label5;
            case 39: goto label5;
            case 40: goto label5;
            case 41: goto label5;
            case 42: goto label5;
            case 43: goto label5;
            case 44: goto label5;
            case 45: goto label4;
            case 46: goto label4;
            case 47: goto label5;
            case 48: goto label5;
            case 49: goto label5;
            case 50: goto label5;
            case 51: goto label5;
            case 52: goto label4;
            case 53: goto label4;
            case 54: goto label4;
            case 55: goto label4;
            case 56: goto label4;
            case 57: goto label5;
            case 58: goto label4;
            case 59: goto label4;
            case 60: goto label5;
            case 61: goto label4;
            case 62: goto label4;
            case 63: goto label5;
            case 64: goto label4;
            case 65: goto label4;
            case 66: goto label4;
            case 67: goto label4;
            case 68: goto label4;
            case 69: goto label4;
            case 70: goto label4;
            case 71: goto label4;
            case 72: goto label4;
            case 73: goto label4;
            case 74: goto label4;
            case 75: goto label4;
            case 76: goto label4;
            case 77: goto label4;
            case 78: goto label4;
            case 79: goto label4;
            case 80: goto label4;
            case 81: goto label4;
            case 82: goto label4;
            case 83: goto label4;
            case 84: goto label4;
            case 85: goto label4;
            case 86: goto label4;
            case 87: goto label4;
            case 88: goto label4;
            case 89: goto label4;
            case 90: goto label4;
            case 91: goto label4;
            case 92: goto label4;
            case 93: goto label4;
            case 94: goto label4;
            case 95: goto label4;
            case 96: goto label4;
            case 97: goto label4;
            case 98: goto label4;
            case 99: goto label4;
            case 100: goto label4;
            case 101: goto label4;
            case 102: goto label4;
            case 103: goto label4;
            case 104: goto label4;
            case 105: goto label4;
            case 106: goto label4;
            case 107: goto label4;
            case 108: goto label4;
            case 109: goto label4;
            case 110: goto label4;
            case 111: goto label5;
            case 112: goto label4;
            case 113: goto label4;
            case 114: goto label4;
            case 115: goto label5;
            case 116: goto label5;
            case 117: goto label5;
            case 118: goto label5;
            case 119: goto label5;
            case 120: goto label5;
            case 121: goto label5;
            case 122: goto label5;
            case 123: goto label5;
            case 124: goto label5;
            case 125: goto label5;
            case 126: goto label5;
            case 127: goto label5;
            case 128: goto label5;
            case 129: goto label5;
            case 130: goto label5;
            case 131: goto label5;
            case 132: goto label5;
            case 133: goto label5;
            case 134: goto label5;
            case 135: goto label5;
            case 136: goto label5;
            case 137: goto label5;
            case 138: goto label5;
            case 139: goto label5;
            case 140: goto label5;
            case 141: goto label5;
            case 142: goto label5;
            case 143: goto label5;
            case 144: goto label5;
            case 145: goto label5;
            case 146: goto label5;
            case 147: goto label5;
            case 148: goto label5;
            case 149: goto label5;
            case 150: goto label5;
            case 151: goto label5;
            case 152: goto label5;
            case 153: goto label5;
            case 154: goto label5;
            case 155: goto label5;
            case 156: goto label4;
            default: goto label5;
        };

     label4:
        goto label1;

     label5:
        $r1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r1[24] = $i1;

        goto label6;

     label6:
        return;
    }

    public final void GroupCondition() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.query.Query $r2, $r5, $r7, $r9;
        com.hp.hpl.jena.sparql.expr.Expr $r1, $r4, $r8;
        int[] $r3, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i11;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r13;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.core.Var $r6, r12;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r12 = null;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i7 = (int) -1;

        if $i0 != $i7 goto label01;

        $i4 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label02;

     label01:
        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label02:
        tableswitch($i4)
        {
            case 9: goto label04;
            case 10: goto label04;
            case 11: goto label04;
            case 12: goto label12;
            case 13: goto label11;
            case 14: goto label11;
            case 15: goto label12;
            case 16: goto label12;
            case 17: goto label12;
            case 18: goto label12;
            case 19: goto label12;
            case 20: goto label12;
            case 21: goto label12;
            case 22: goto label12;
            case 23: goto label12;
            case 24: goto label12;
            case 25: goto label12;
            case 26: goto label12;
            case 27: goto label12;
            case 28: goto label12;
            case 29: goto label12;
            case 30: goto label12;
            case 31: goto label12;
            case 32: goto label12;
            case 33: goto label12;
            case 34: goto label12;
            case 35: goto label12;
            case 36: goto label12;
            case 37: goto label12;
            case 38: goto label12;
            case 39: goto label12;
            case 40: goto label12;
            case 41: goto label12;
            case 42: goto label12;
            case 43: goto label12;
            case 44: goto label12;
            case 45: goto label03;
            case 46: goto label03;
            case 47: goto label12;
            case 48: goto label12;
            case 49: goto label12;
            case 50: goto label12;
            case 51: goto label12;
            case 52: goto label03;
            case 53: goto label03;
            case 54: goto label03;
            case 55: goto label03;
            case 56: goto label03;
            case 57: goto label12;
            case 58: goto label03;
            case 59: goto label03;
            case 60: goto label12;
            case 61: goto label03;
            case 62: goto label03;
            case 63: goto label12;
            case 64: goto label03;
            case 65: goto label03;
            case 66: goto label03;
            case 67: goto label03;
            case 68: goto label03;
            case 69: goto label03;
            case 70: goto label03;
            case 71: goto label03;
            case 72: goto label03;
            case 73: goto label03;
            case 74: goto label03;
            case 75: goto label03;
            case 76: goto label03;
            case 77: goto label03;
            case 78: goto label03;
            case 79: goto label03;
            case 80: goto label03;
            case 81: goto label03;
            case 82: goto label03;
            case 83: goto label03;
            case 84: goto label03;
            case 85: goto label03;
            case 86: goto label03;
            case 87: goto label03;
            case 88: goto label03;
            case 89: goto label03;
            case 90: goto label03;
            case 91: goto label03;
            case 92: goto label03;
            case 93: goto label03;
            case 94: goto label03;
            case 95: goto label03;
            case 96: goto label03;
            case 97: goto label03;
            case 98: goto label03;
            case 99: goto label03;
            case 100: goto label03;
            case 101: goto label03;
            case 102: goto label03;
            case 103: goto label03;
            case 104: goto label03;
            case 105: goto label03;
            case 106: goto label03;
            case 107: goto label03;
            case 108: goto label03;
            case 109: goto label03;
            case 110: goto label03;
            case 111: goto label12;
            case 112: goto label03;
            case 113: goto label03;
            case 114: goto label03;
            case 115: goto label12;
            case 116: goto label12;
            case 117: goto label12;
            case 118: goto label12;
            case 119: goto label12;
            case 120: goto label12;
            case 121: goto label12;
            case 122: goto label12;
            case 123: goto label12;
            case 124: goto label12;
            case 125: goto label12;
            case 126: goto label12;
            case 127: goto label12;
            case 128: goto label12;
            case 129: goto label12;
            case 130: goto label12;
            case 131: goto label12;
            case 132: goto label12;
            case 133: goto label12;
            case 134: goto label12;
            case 135: goto label12;
            case 136: goto label12;
            case 137: goto label12;
            case 138: goto label12;
            case 139: goto label12;
            case 140: goto label12;
            case 141: goto label12;
            case 142: goto label12;
            case 143: goto label12;
            case 144: goto label12;
            case 145: goto label12;
            case 146: goto label12;
            case 147: goto label12;
            case 148: goto label12;
            case 149: goto label12;
            case 150: goto label12;
            case 151: goto label12;
            case 152: goto label12;
            case 153: goto label12;
            case 154: goto label12;
            case 155: goto label12;
            case 156: goto label05;
            default: goto label12;
        };

     label03:
        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr BuiltInCall()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r5.<com.hp.hpl.jena.query.Query: void addGroupBy(com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.sparql.expr.Expr)>(null, $r4);

        goto label13;

     label04:
        $r8 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr FunctionCall()>();

        $r9 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r9.<com.hp.hpl.jena.query.Query: void addGroupBy(com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.sparql.expr.Expr)>(null, $r8);

        goto label13;

     label05:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i9 = (int) -1;

        if $i1 != $i9 goto label06;

        $i5 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label07;

     label06:
        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label07:
        lookupswitch($i5)
        {
            case 47: goto label08;
            default: goto label09;
        };

     label08:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(47);

        r12 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.core.Var Var()>();

        goto label10;

     label09:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r3[25] = $i2;

     label10:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r2.<com.hp.hpl.jena.query.Query: void addGroupBy(com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.sparql.expr.Expr)>(r12, $r1);

        goto label13;

     label11:
        $r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.core.Var Var()>();

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r7.<com.hp.hpl.jena.query.Query: void addGroupBy(com.hp.hpl.jena.graph.Node)>($r6);

        goto label13;

     label12:
        $r10 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r10[26] = $i3;

        $i11 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i11);

        $r13 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r13.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r13;

     label13:
        return;
    }

    public final void HavingClause() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        int[] $r1;
        int $i0, $i1, $i2, $i4;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: boolean allowAggregatesInExpressions> = 1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(49);

     label1:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void HavingCondition()>();

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label2;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label3;

     label2:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label3:
        tableswitch($i2)
        {
            case 9: goto label4;
            case 10: goto label4;
            case 11: goto label4;
            case 12: goto label5;
            case 13: goto label5;
            case 14: goto label5;
            case 15: goto label5;
            case 16: goto label5;
            case 17: goto label5;
            case 18: goto label5;
            case 19: goto label5;
            case 20: goto label5;
            case 21: goto label5;
            case 22: goto label5;
            case 23: goto label5;
            case 24: goto label5;
            case 25: goto label5;
            case 26: goto label5;
            case 27: goto label5;
            case 28: goto label5;
            case 29: goto label5;
            case 30: goto label5;
            case 31: goto label5;
            case 32: goto label5;
            case 33: goto label5;
            case 34: goto label5;
            case 35: goto label5;
            case 36: goto label5;
            case 37: goto label5;
            case 38: goto label5;
            case 39: goto label5;
            case 40: goto label5;
            case 41: goto label5;
            case 42: goto label5;
            case 43: goto label5;
            case 44: goto label5;
            case 45: goto label4;
            case 46: goto label4;
            case 47: goto label5;
            case 48: goto label5;
            case 49: goto label5;
            case 50: goto label5;
            case 51: goto label5;
            case 52: goto label4;
            case 53: goto label4;
            case 54: goto label4;
            case 55: goto label4;
            case 56: goto label4;
            case 57: goto label5;
            case 58: goto label4;
            case 59: goto label4;
            case 60: goto label5;
            case 61: goto label4;
            case 62: goto label4;
            case 63: goto label5;
            case 64: goto label4;
            case 65: goto label4;
            case 66: goto label4;
            case 67: goto label4;
            case 68: goto label4;
            case 69: goto label4;
            case 70: goto label4;
            case 71: goto label4;
            case 72: goto label4;
            case 73: goto label4;
            case 74: goto label4;
            case 75: goto label4;
            case 76: goto label4;
            case 77: goto label4;
            case 78: goto label4;
            case 79: goto label4;
            case 80: goto label4;
            case 81: goto label4;
            case 82: goto label4;
            case 83: goto label4;
            case 84: goto label4;
            case 85: goto label4;
            case 86: goto label4;
            case 87: goto label4;
            case 88: goto label4;
            case 89: goto label4;
            case 90: goto label4;
            case 91: goto label4;
            case 92: goto label4;
            case 93: goto label4;
            case 94: goto label4;
            case 95: goto label4;
            case 96: goto label4;
            case 97: goto label4;
            case 98: goto label4;
            case 99: goto label4;
            case 100: goto label4;
            case 101: goto label4;
            case 102: goto label4;
            case 103: goto label4;
            case 104: goto label4;
            case 105: goto label4;
            case 106: goto label4;
            case 107: goto label4;
            case 108: goto label4;
            case 109: goto label4;
            case 110: goto label4;
            case 111: goto label5;
            case 112: goto label4;
            case 113: goto label4;
            case 114: goto label4;
            case 115: goto label5;
            case 116: goto label5;
            case 117: goto label5;
            case 118: goto label5;
            case 119: goto label5;
            case 120: goto label5;
            case 121: goto label5;
            case 122: goto label5;
            case 123: goto label5;
            case 124: goto label5;
            case 125: goto label5;
            case 126: goto label5;
            case 127: goto label5;
            case 128: goto label5;
            case 129: goto label5;
            case 130: goto label5;
            case 131: goto label5;
            case 132: goto label5;
            case 133: goto label5;
            case 134: goto label5;
            case 135: goto label5;
            case 136: goto label5;
            case 137: goto label5;
            case 138: goto label5;
            case 139: goto label5;
            case 140: goto label5;
            case 141: goto label5;
            case 142: goto label5;
            case 143: goto label5;
            case 144: goto label5;
            case 145: goto label5;
            case 146: goto label5;
            case 147: goto label5;
            case 148: goto label5;
            case 149: goto label5;
            case 150: goto label5;
            case 151: goto label5;
            case 152: goto label5;
            case 153: goto label5;
            case 154: goto label5;
            case 155: goto label5;
            case 156: goto label4;
            default: goto label5;
        };

     label4:
        goto label1;

     label5:
        $r1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r1[27] = $i1;

        goto label6;

     label6:
        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: boolean allowAggregatesInExpressions> = 0;

        return;
    }

    public final void HavingCondition() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.query.Query $r2;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.expr.Expr $r1;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Constraint()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r2.<com.hp.hpl.jena.query.Query: void addHavingCondition(com.hp.hpl.jena.sparql.expr.Expr)>($r1);

        return;
    }

    public final void OrderClause() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        int[] $r1;
        int $i0, $i1, $i2, $i4;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: boolean allowAggregatesInExpressions> = 1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(29);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(30);

     label1:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void OrderCondition()>();

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label2;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label3;

     label2:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label3:
        tableswitch($i2)
        {
            case 9: goto label4;
            case 10: goto label4;
            case 11: goto label4;
            case 12: goto label5;
            case 13: goto label4;
            case 14: goto label4;
            case 15: goto label5;
            case 16: goto label5;
            case 17: goto label5;
            case 18: goto label5;
            case 19: goto label5;
            case 20: goto label5;
            case 21: goto label5;
            case 22: goto label5;
            case 23: goto label5;
            case 24: goto label5;
            case 25: goto label5;
            case 26: goto label5;
            case 27: goto label5;
            case 28: goto label5;
            case 29: goto label5;
            case 30: goto label5;
            case 31: goto label5;
            case 32: goto label5;
            case 33: goto label4;
            case 34: goto label4;
            case 35: goto label5;
            case 36: goto label5;
            case 37: goto label5;
            case 38: goto label5;
            case 39: goto label5;
            case 40: goto label5;
            case 41: goto label5;
            case 42: goto label5;
            case 43: goto label5;
            case 44: goto label5;
            case 45: goto label4;
            case 46: goto label4;
            case 47: goto label5;
            case 48: goto label5;
            case 49: goto label5;
            case 50: goto label5;
            case 51: goto label5;
            case 52: goto label4;
            case 53: goto label4;
            case 54: goto label4;
            case 55: goto label4;
            case 56: goto label4;
            case 57: goto label5;
            case 58: goto label4;
            case 59: goto label4;
            case 60: goto label5;
            case 61: goto label4;
            case 62: goto label4;
            case 63: goto label5;
            case 64: goto label4;
            case 65: goto label4;
            case 66: goto label4;
            case 67: goto label4;
            case 68: goto label4;
            case 69: goto label4;
            case 70: goto label4;
            case 71: goto label4;
            case 72: goto label4;
            case 73: goto label4;
            case 74: goto label4;
            case 75: goto label4;
            case 76: goto label4;
            case 77: goto label4;
            case 78: goto label4;
            case 79: goto label4;
            case 80: goto label4;
            case 81: goto label4;
            case 82: goto label4;
            case 83: goto label4;
            case 84: goto label4;
            case 85: goto label4;
            case 86: goto label4;
            case 87: goto label4;
            case 88: goto label4;
            case 89: goto label4;
            case 90: goto label4;
            case 91: goto label4;
            case 92: goto label4;
            case 93: goto label4;
            case 94: goto label4;
            case 95: goto label4;
            case 96: goto label4;
            case 97: goto label4;
            case 98: goto label4;
            case 99: goto label4;
            case 100: goto label4;
            case 101: goto label4;
            case 102: goto label4;
            case 103: goto label4;
            case 104: goto label4;
            case 105: goto label4;
            case 106: goto label4;
            case 107: goto label4;
            case 108: goto label4;
            case 109: goto label4;
            case 110: goto label4;
            case 111: goto label5;
            case 112: goto label4;
            case 113: goto label4;
            case 114: goto label4;
            case 115: goto label5;
            case 116: goto label5;
            case 117: goto label5;
            case 118: goto label5;
            case 119: goto label5;
            case 120: goto label5;
            case 121: goto label5;
            case 122: goto label5;
            case 123: goto label5;
            case 124: goto label5;
            case 125: goto label5;
            case 126: goto label5;
            case 127: goto label5;
            case 128: goto label5;
            case 129: goto label5;
            case 130: goto label5;
            case 131: goto label5;
            case 132: goto label5;
            case 133: goto label5;
            case 134: goto label5;
            case 135: goto label5;
            case 136: goto label5;
            case 137: goto label5;
            case 138: goto label5;
            case 139: goto label5;
            case 140: goto label5;
            case 141: goto label5;
            case 142: goto label5;
            case 143: goto label5;
            case 144: goto label5;
            case 145: goto label5;
            case 146: goto label5;
            case 147: goto label5;
            case 148: goto label5;
            case 149: goto label5;
            case 150: goto label5;
            case 151: goto label5;
            case 152: goto label5;
            case 153: goto label5;
            case 154: goto label5;
            case 155: goto label5;
            case 156: goto label4;
            default: goto label5;
        };

     label4:
        goto label1;

     label5:
        $r1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r1[28] = $i1;

        goto label6;

     label6:
        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: boolean allowAggregatesInExpressions> = 0;

        return;
    }

    public final void OrderCondition() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.query.Query $r1, $r2;
        com.hp.hpl.jena.sparql.expr.Expr r9;
        byte b6, b10, b11;
        int[] $r3, $r5, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i13, $i15, $i17, $i19, $i21, $i23;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r11, $r12, $r13;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.core.Var r10;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r9 = null;

        r10 = null;

        b6 = -2;

        b11 = -2;

        b10 = -2;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i13 = (int) -1;

        if $i0 != $i13 goto label01;

        $i7 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label02;

     label01:
        $i7 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label02:
        tableswitch($i7)
        {
            case 9: goto label10;
            case 10: goto label10;
            case 11: goto label10;
            case 12: goto label16;
            case 13: goto label10;
            case 14: goto label10;
            case 15: goto label16;
            case 16: goto label16;
            case 17: goto label16;
            case 18: goto label16;
            case 19: goto label16;
            case 20: goto label16;
            case 21: goto label16;
            case 22: goto label16;
            case 23: goto label16;
            case 24: goto label16;
            case 25: goto label16;
            case 26: goto label16;
            case 27: goto label16;
            case 28: goto label16;
            case 29: goto label16;
            case 30: goto label16;
            case 31: goto label16;
            case 32: goto label16;
            case 33: goto label03;
            case 34: goto label03;
            case 35: goto label16;
            case 36: goto label16;
            case 37: goto label16;
            case 38: goto label16;
            case 39: goto label16;
            case 40: goto label16;
            case 41: goto label16;
            case 42: goto label16;
            case 43: goto label16;
            case 44: goto label16;
            case 45: goto label10;
            case 46: goto label10;
            case 47: goto label16;
            case 48: goto label16;
            case 49: goto label16;
            case 50: goto label16;
            case 51: goto label16;
            case 52: goto label10;
            case 53: goto label10;
            case 54: goto label10;
            case 55: goto label10;
            case 56: goto label10;
            case 57: goto label16;
            case 58: goto label10;
            case 59: goto label10;
            case 60: goto label16;
            case 61: goto label10;
            case 62: goto label10;
            case 63: goto label16;
            case 64: goto label10;
            case 65: goto label10;
            case 66: goto label10;
            case 67: goto label10;
            case 68: goto label10;
            case 69: goto label10;
            case 70: goto label10;
            case 71: goto label10;
            case 72: goto label10;
            case 73: goto label10;
            case 74: goto label10;
            case 75: goto label10;
            case 76: goto label10;
            case 77: goto label10;
            case 78: goto label10;
            case 79: goto label10;
            case 80: goto label10;
            case 81: goto label10;
            case 82: goto label10;
            case 83: goto label10;
            case 84: goto label10;
            case 85: goto label10;
            case 86: goto label10;
            case 87: goto label10;
            case 88: goto label10;
            case 89: goto label10;
            case 90: goto label10;
            case 91: goto label10;
            case 92: goto label10;
            case 93: goto label10;
            case 94: goto label10;
            case 95: goto label10;
            case 96: goto label10;
            case 97: goto label10;
            case 98: goto label10;
            case 99: goto label10;
            case 100: goto label10;
            case 101: goto label10;
            case 102: goto label10;
            case 103: goto label10;
            case 104: goto label10;
            case 105: goto label10;
            case 106: goto label10;
            case 107: goto label10;
            case 108: goto label10;
            case 109: goto label10;
            case 110: goto label10;
            case 111: goto label16;
            case 112: goto label10;
            case 113: goto label10;
            case 114: goto label10;
            case 115: goto label16;
            case 116: goto label16;
            case 117: goto label16;
            case 118: goto label16;
            case 119: goto label16;
            case 120: goto label16;
            case 121: goto label16;
            case 122: goto label16;
            case 123: goto label16;
            case 124: goto label16;
            case 125: goto label16;
            case 126: goto label16;
            case 127: goto label16;
            case 128: goto label16;
            case 129: goto label16;
            case 130: goto label16;
            case 131: goto label16;
            case 132: goto label16;
            case 133: goto label16;
            case 134: goto label16;
            case 135: goto label16;
            case 136: goto label16;
            case 137: goto label16;
            case 138: goto label16;
            case 139: goto label16;
            case 140: goto label16;
            case 141: goto label16;
            case 142: goto label16;
            case 143: goto label16;
            case 144: goto label16;
            case 145: goto label16;
            case 146: goto label16;
            case 147: goto label16;
            case 148: goto label16;
            case 149: goto label16;
            case 150: goto label16;
            case 151: goto label16;
            case 152: goto label16;
            case 153: goto label16;
            case 154: goto label16;
            case 155: goto label16;
            case 156: goto label10;
            default: goto label16;
        };

     label03:
        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i15 = (int) -1;

        if $i1 != $i15 goto label04;

        $i8 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label05;

     label04:
        $i8 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label05:
        lookupswitch($i8)
        {
            case 33: goto label06;
            case 34: goto label07;
            default: goto label08;
        };

     label06:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(33);

        b6 = 1;

        b11 = 1;

        b10 = 1;

        goto label09;

     label07:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(34);

        b6 = -1;

        b11 = -1;

        b10 = -1;

        goto label09;

     label08:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r3[29] = $i2;

        $i17 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i17);

        $r11 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r11.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r11;

     label09:
        r9 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr BrackettedExpression()>();

        goto label17;

     label10:
        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i19 = (int) -1;

        if $i3 != $i19 goto label11;

        $i9 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label12;

     label11:
        $i9 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label12:
        tableswitch($i9)
        {
            case 9: goto label13;
            case 10: goto label13;
            case 11: goto label13;
            case 12: goto label15;
            case 13: goto label14;
            case 14: goto label14;
            case 15: goto label15;
            case 16: goto label15;
            case 17: goto label15;
            case 18: goto label15;
            case 19: goto label15;
            case 20: goto label15;
            case 21: goto label15;
            case 22: goto label15;
            case 23: goto label15;
            case 24: goto label15;
            case 25: goto label15;
            case 26: goto label15;
            case 27: goto label15;
            case 28: goto label15;
            case 29: goto label15;
            case 30: goto label15;
            case 31: goto label15;
            case 32: goto label15;
            case 33: goto label15;
            case 34: goto label15;
            case 35: goto label15;
            case 36: goto label15;
            case 37: goto label15;
            case 38: goto label15;
            case 39: goto label15;
            case 40: goto label15;
            case 41: goto label15;
            case 42: goto label15;
            case 43: goto label15;
            case 44: goto label15;
            case 45: goto label13;
            case 46: goto label13;
            case 47: goto label15;
            case 48: goto label15;
            case 49: goto label15;
            case 50: goto label15;
            case 51: goto label15;
            case 52: goto label13;
            case 53: goto label13;
            case 54: goto label13;
            case 55: goto label13;
            case 56: goto label13;
            case 57: goto label15;
            case 58: goto label13;
            case 59: goto label13;
            case 60: goto label15;
            case 61: goto label13;
            case 62: goto label13;
            case 63: goto label15;
            case 64: goto label13;
            case 65: goto label13;
            case 66: goto label13;
            case 67: goto label13;
            case 68: goto label13;
            case 69: goto label13;
            case 70: goto label13;
            case 71: goto label13;
            case 72: goto label13;
            case 73: goto label13;
            case 74: goto label13;
            case 75: goto label13;
            case 76: goto label13;
            case 77: goto label13;
            case 78: goto label13;
            case 79: goto label13;
            case 80: goto label13;
            case 81: goto label13;
            case 82: goto label13;
            case 83: goto label13;
            case 84: goto label13;
            case 85: goto label13;
            case 86: goto label13;
            case 87: goto label13;
            case 88: goto label13;
            case 89: goto label13;
            case 90: goto label13;
            case 91: goto label13;
            case 92: goto label13;
            case 93: goto label13;
            case 94: goto label13;
            case 95: goto label13;
            case 96: goto label13;
            case 97: goto label13;
            case 98: goto label13;
            case 99: goto label13;
            case 100: goto label13;
            case 101: goto label13;
            case 102: goto label13;
            case 103: goto label13;
            case 104: goto label13;
            case 105: goto label13;
            case 106: goto label13;
            case 107: goto label13;
            case 108: goto label13;
            case 109: goto label13;
            case 110: goto label13;
            case 111: goto label15;
            case 112: goto label13;
            case 113: goto label13;
            case 114: goto label13;
            case 115: goto label15;
            case 116: goto label15;
            case 117: goto label15;
            case 118: goto label15;
            case 119: goto label15;
            case 120: goto label15;
            case 121: goto label15;
            case 122: goto label15;
            case 123: goto label15;
            case 124: goto label15;
            case 125: goto label15;
            case 126: goto label15;
            case 127: goto label15;
            case 128: goto label15;
            case 129: goto label15;
            case 130: goto label15;
            case 131: goto label15;
            case 132: goto label15;
            case 133: goto label15;
            case 134: goto label15;
            case 135: goto label15;
            case 136: goto label15;
            case 137: goto label15;
            case 138: goto label15;
            case 139: goto label15;
            case 140: goto label15;
            case 141: goto label15;
            case 142: goto label15;
            case 143: goto label15;
            case 144: goto label15;
            case 145: goto label15;
            case 146: goto label15;
            case 147: goto label15;
            case 148: goto label15;
            case 149: goto label15;
            case 150: goto label15;
            case 151: goto label15;
            case 152: goto label15;
            case 153: goto label15;
            case 154: goto label15;
            case 155: goto label15;
            case 156: goto label13;
            default: goto label15;
        };

     label13:
        r9 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Constraint()>();

        goto label17;

     label14:
        r10 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.core.Var Var()>();

        goto label17;

     label15:
        $r5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r5[30] = $i4;

        $i21 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i21);

        $r12 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r12.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r12;

     label16:
        $r7 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r7[31] = $i5;

        $i23 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i23);

        $r13 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r13.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r13;

     label17:
        if r10 != null goto label18;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r2.<com.hp.hpl.jena.query.Query: void addOrderBy(com.hp.hpl.jena.sparql.expr.Expr,int)>(r9, b10);

        goto label19;

     label18:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        virtualinvoke $r1.<com.hp.hpl.jena.query.Query: void addOrderBy(com.hp.hpl.jena.graph.Node,int)>(r10, b11);

     label19:
        return;
    }

    public final void LimitOffsetClauses() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        int[] $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i12, $i14, $i16;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r5;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i10 = (int) -1;

        if $i0 != $i10 goto label01;

        $i6 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label02;

     label01:
        $i6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label02:
        lookupswitch($i6)
        {
            case 27: goto label03;
            case 28: goto label08;
            default: goto label13;
        };

     label03:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void LimitClause()>();

        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i12 = (int) -1;

        if $i3 != $i12 goto label04;

        $i7 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label05;

     label04:
        $i7 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label05:
        lookupswitch($i7)
        {
            case 28: goto label06;
            default: goto label07;
        };

     label06:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void OffsetClause()>();

        goto label14;

     label07:
        $r2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r2[32] = $i4;

        goto label14;

     label08:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void OffsetClause()>();

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i14 = (int) -1;

        if $i1 != $i14 goto label09;

        $i8 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label10;

     label09:
        $i8 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label10:
        lookupswitch($i8)
        {
            case 27: goto label11;
            default: goto label12;
        };

     label11:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void LimitClause()>();

        goto label14;

     label12:
        $r1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r1[33] = $i2;

        goto label14;

     label13:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r3[34] = $i5;

        $i16 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i16);

        $r5 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r5.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r5;

     label14:
        return;
    }

    public final void LimitClause() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.query.Query $r2;
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r1;
        long $l0;
        java.lang.String $r3;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(27);

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(139);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        $r3 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: java.lang.String image>;

        $l0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: long integerValue(java.lang.String)>($r3);

        virtualinvoke $r2.<com.hp.hpl.jena.query.Query: void setLimit(long)>($l0);

        return;
    }

    public final void OffsetClause() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.query.Query $r2;
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r1;
        long $l0;
        java.lang.String $r3;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(28);

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(139);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        $r3 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: java.lang.String image>;

        $l0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: long integerValue(java.lang.String)>($r3);

        virtualinvoke $r2.<com.hp.hpl.jena.query.Query: void setOffset(long)>($l0);

        return;
    }

    public final void ValuesClause() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i8 = (int) -1;

        if $i0 != $i8 goto label1;

        $i6 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i6)
        {
            case 31: goto label3;
            default: goto label4;
        };

     label3:
        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(31);

        $i2 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        $i1 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void startValuesClause(int,int)>($i2, $i1);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void DataBlock()>();

        $i4 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        $i3 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void finishValuesClause(int,int)>($i4, $i3);

        goto label5;

     label4:
        $r2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r2[35] = $i5;

     label5:
        return;
    }

    public final void Update() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void Prologue()>();

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i7 = (int) -1;

        if $i0 != $i7 goto label1;

        $i4 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        tableswitch($i4)
        {
            case 118: goto label3;
            case 119: goto label3;
            case 120: goto label3;
            case 121: goto label3;
            case 122: goto label3;
            case 123: goto label3;
            case 124: goto label3;
            case 125: goto label3;
            case 126: goto label3;
            case 127: goto label3;
            case 128: goto label3;
            case 129: goto label8;
            case 130: goto label8;
            case 131: goto label3;
            case 132: goto label8;
            case 133: goto label8;
            case 134: goto label8;
            case 135: goto label8;
            case 136: goto label3;
            default: goto label8;
        };

     label3:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void Update1()>();

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i9 = (int) -1;

        if $i1 != $i9 goto label4;

        $i5 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label5;

     label4:
        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label5:
        lookupswitch($i5)
        {
            case 164: goto label6;
            default: goto label7;
        };

     label6:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(164);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void Update()>();

        goto label9;

     label7:
        $r1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r1[36] = $i2;

        goto label9;

     label8:
        $r2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r2[37] = $i3;

     label9:
        return;
    }

    public final void Update1() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r1;
        int $i0, $i1, $i2, $i4, $i6;
        com.hp.hpl.jena.update.Update r3;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r4;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r3 = null;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void startUpdateOperation()>();

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label01;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label02;

     label01:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label02:
        tableswitch($i2)
        {
            case 118: goto label11;
            case 119: goto label11;
            case 120: goto label12;
            case 121: goto label13;
            case 122: goto label10;
            case 123: goto label03;
            case 124: goto label04;
            case 125: goto label09;
            case 126: goto label06;
            case 127: goto label07;
            case 128: goto label08;
            case 129: goto label14;
            case 130: goto label14;
            case 131: goto label05;
            case 132: goto label14;
            case 133: goto label14;
            case 134: goto label14;
            case 135: goto label14;
            case 136: goto label11;
            default: goto label14;
        };

     label03:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.update.Update Load()>();

        goto label15;

     label04:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.update.Update Clear()>();

        goto label15;

     label05:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.update.Update Drop()>();

        goto label15;

     label06:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.update.Update Add()>();

        goto label15;

     label07:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.update.Update Move()>();

        goto label15;

     label08:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.update.Update Copy()>();

        goto label15;

     label09:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.update.Update Create()>();

        goto label15;

     label10:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.update.Update DeleteWhere()>();

        goto label15;

     label11:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.update.Update Modify()>();

        goto label15;

     label12:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void InsertData()>();

        goto label15;

     label13:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void DeleteData()>();

        goto label15;

     label14:
        $r1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r1[38] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r4 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r4.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r4;

     label15:
        if null == r3 goto label16;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void emitUpdate(com.hp.hpl.jena.update.Update)>(r3);

     label16:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void finishUpdateOperation()>();

        return;
    }

    public final com.hp.hpl.jena.update.Update Load() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node r5;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.modify.request.UpdateLoad $r6;
        int[] $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9;
        java.lang.String $r1;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r5 = null;

        z0 = 0;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(123);

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i7 = (int) -1;

        if $i0 != $i7 goto label01;

        $i4 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label02;

     label01:
        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label02:
        lookupswitch($i4)
        {
            case 130: goto label03;
            default: goto label04;
        };

     label03:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(130);

        z0 = 1;

        goto label05;

     label04:
        $r4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r4[39] = $i3;

     label05:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String iri()>();

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i9 = (int) -1;

        if $i1 != $i9 goto label06;

        $i5 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label07;

     label06:
        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label07:
        lookupswitch($i5)
        {
            case 132: goto label08;
            default: goto label09;
        };

     label08:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(132);

        r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node GraphRef()>();

        goto label10;

     label09:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r3[40] = $i2;

     label10:
        $r6 = new com.hp.hpl.jena.sparql.modify.request.UpdateLoad;

        specialinvoke $r6.<com.hp.hpl.jena.sparql.modify.request.UpdateLoad: void <init>(java.lang.String,com.hp.hpl.jena.graph.Node,boolean)>($r1, r5, z0);

        return $r6;
    }

    public final com.hp.hpl.jena.update.Update Clear() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r3;
        com.hp.hpl.jena.sparql.modify.request.UpdateClear $r4;
        int $i0, $i1, $i2, $i4;
        com.hp.hpl.jena.sparql.modify.request.Target $r1;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        z0 = 0;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(124);

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 130: goto label3;
            default: goto label4;
        };

     label3:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(130);

        z0 = 1;

        goto label5;

     label4:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r3[41] = $i1;

     label5:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.modify.request.Target GraphRefAll()>();

        $r4 = new com.hp.hpl.jena.sparql.modify.request.UpdateClear;

        specialinvoke $r4.<com.hp.hpl.jena.sparql.modify.request.UpdateClear: void <init>(com.hp.hpl.jena.sparql.modify.request.Target,boolean)>($r1, z0);

        return $r4;
    }

    public final com.hp.hpl.jena.update.Update Drop() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.modify.request.UpdateDrop $r4;
        int[] $r3;
        int $i0, $i1, $i2, $i4;
        com.hp.hpl.jena.sparql.modify.request.Target $r1;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        z0 = 0;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(131);

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 130: goto label3;
            default: goto label4;
        };

     label3:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(130);

        z0 = 1;

        goto label5;

     label4:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r3[42] = $i1;

     label5:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.modify.request.Target GraphRefAll()>();

        $r4 = new com.hp.hpl.jena.sparql.modify.request.UpdateDrop;

        specialinvoke $r4.<com.hp.hpl.jena.sparql.modify.request.UpdateDrop: void <init>(com.hp.hpl.jena.sparql.modify.request.Target,boolean)>($r1, z0);

        return $r4;
    }

    public final com.hp.hpl.jena.update.Update Create() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node $r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r3;
        com.hp.hpl.jena.sparql.modify.request.UpdateCreate $r4;
        int $i0, $i1, $i2, $i4;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        z0 = 0;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(125);

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 130: goto label3;
            default: goto label4;
        };

     label3:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(130);

        z0 = 1;

        goto label5;

     label4:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r3[43] = $i1;

     label5:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node GraphRef()>();

        $r4 = new com.hp.hpl.jena.sparql.modify.request.UpdateCreate;

        specialinvoke $r4.<com.hp.hpl.jena.sparql.modify.request.UpdateCreate: void <init>(com.hp.hpl.jena.graph.Node,boolean)>($r1, z0);

        return $r4;
    }

    public final com.hp.hpl.jena.update.Update Add() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r4;
        com.hp.hpl.jena.sparql.modify.request.UpdateAdd $r5;
        int $i0, $i1, $i2, $i4;
        com.hp.hpl.jena.sparql.modify.request.Target $r1, $r2;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        z0 = 0;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(126);

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 130: goto label3;
            default: goto label4;
        };

     label3:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(130);

        z0 = 1;

        goto label5;

     label4:
        $r4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r4[44] = $i1;

     label5:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.modify.request.Target GraphOrDefault()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(133);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.modify.request.Target GraphOrDefault()>();

        $r5 = new com.hp.hpl.jena.sparql.modify.request.UpdateAdd;

        specialinvoke $r5.<com.hp.hpl.jena.sparql.modify.request.UpdateAdd: void <init>(com.hp.hpl.jena.sparql.modify.request.Target,com.hp.hpl.jena.sparql.modify.request.Target,boolean)>($r1, $r2, z0);

        return $r5;
    }

    public final com.hp.hpl.jena.update.Update Move() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.modify.request.UpdateMove $r5;
        int[] $r4;
        int $i0, $i1, $i2, $i4;
        com.hp.hpl.jena.sparql.modify.request.Target $r1, $r2;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        z0 = 0;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(127);

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 130: goto label3;
            default: goto label4;
        };

     label3:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(130);

        z0 = 1;

        goto label5;

     label4:
        $r4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r4[45] = $i1;

     label5:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.modify.request.Target GraphOrDefault()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(133);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.modify.request.Target GraphOrDefault()>();

        $r5 = new com.hp.hpl.jena.sparql.modify.request.UpdateMove;

        specialinvoke $r5.<com.hp.hpl.jena.sparql.modify.request.UpdateMove: void <init>(com.hp.hpl.jena.sparql.modify.request.Target,com.hp.hpl.jena.sparql.modify.request.Target,boolean)>($r1, $r2, z0);

        return $r5;
    }

    public final com.hp.hpl.jena.update.Update Copy() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r4;
        int $i0, $i1, $i2, $i4;
        com.hp.hpl.jena.sparql.modify.request.UpdateCopy $r5;
        com.hp.hpl.jena.sparql.modify.request.Target $r1, $r2;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        z0 = 0;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(128);

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 130: goto label3;
            default: goto label4;
        };

     label3:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(130);

        z0 = 1;

        goto label5;

     label4:
        $r4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r4[46] = $i1;

     label5:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.modify.request.Target GraphOrDefault()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(133);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.modify.request.Target GraphOrDefault()>();

        $r5 = new com.hp.hpl.jena.sparql.modify.request.UpdateCopy;

        specialinvoke $r5.<com.hp.hpl.jena.sparql.modify.request.UpdateCopy: void <init>(com.hp.hpl.jena.sparql.modify.request.Target,com.hp.hpl.jena.sparql.modify.request.Target,boolean)>($r1, $r2, z0);

        return $r5;
    }

    public final void InsertData() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r2;
        int i0, i1;
        com.hp.hpl.jena.sparql.modify.request.QuadDataAccSink $r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.modify.request.QuadDataAccSink createInsertDataSink()>();

        $r2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(120);

        i0 = $r2.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        i1 = $r2.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void startDataInsert(com.hp.hpl.jena.sparql.modify.request.QuadDataAccSink,int,int)>($r1, i0, i1);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void QuadData(com.hp.hpl.jena.sparql.modify.request.QuadDataAccSink)>($r1);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void finishDataInsert(com.hp.hpl.jena.sparql.modify.request.QuadDataAccSink,int,int)>($r1, i0, i1);

        virtualinvoke $r1.<com.hp.hpl.jena.sparql.modify.request.QuadDataAccSink: void close()>();

        return;
    }

    public final void DeleteData() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r2;
        int i0, i1;
        com.hp.hpl.jena.sparql.modify.request.QuadDataAccSink $r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.modify.request.QuadDataAccSink createDeleteDataSink()>();

        $r2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(121);

        i0 = $r2.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        i1 = $r2.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void startDataDelete(com.hp.hpl.jena.sparql.modify.request.QuadDataAccSink,int,int)>($r1, i0, i1);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void QuadData(com.hp.hpl.jena.sparql.modify.request.QuadDataAccSink)>($r1);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void finishDataDelete(com.hp.hpl.jena.sparql.modify.request.QuadDataAccSink,int,int)>($r1, i0, i1);

        virtualinvoke $r1.<com.hp.hpl.jena.sparql.modify.request.QuadDataAccSink: void close()>();

        return;
    }

    public final com.hp.hpl.jena.update.Update DeleteWhere() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.modify.request.QuadAcc $r0;
        com.hp.hpl.jena.sparql.modify.request.UpdateDeleteWhere $r3;
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r2;
        int i0, i1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r1;

        r1 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r0 = new com.hp.hpl.jena.sparql.modify.request.QuadAcc;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.modify.request.QuadAcc: void <init>()>();

        $r2 = specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(122);

        i0 = $r2.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        i1 = $r2.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void startDeleteTemplate(com.hp.hpl.jena.sparql.modify.request.QuadAcc,int,int)>($r0, i0, i1);

        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void QuadPattern(com.hp.hpl.jena.sparql.modify.request.QuadAcc)>($r0);

        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void finishDeleteTemplate(com.hp.hpl.jena.sparql.modify.request.QuadAcc,int,int)>($r0, i0, i1);

        $r3 = new com.hp.hpl.jena.sparql.modify.request.UpdateDeleteWhere;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.modify.request.UpdateDeleteWhere: void <init>(com.hp.hpl.jena.sparql.modify.request.QuadAcc)>($r0);

        return $r3;
    }

    public final com.hp.hpl.jena.update.Update Modify() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node $r3;
        int[] $r4, $r6, $r7, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i15, $i17, $i19, $i21;
        java.lang.String $r2;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r11;
        com.hp.hpl.jena.sparql.modify.request.UpdateModify $r10;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r1;
        com.hp.hpl.jena.sparql.syntax.Element $r5;

        r1 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r10 = new com.hp.hpl.jena.sparql.modify.request.UpdateModify;

        specialinvoke $r10.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: void <init>()>();

        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void startModifyUpdate()>();

        $i0 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i13 = (int) -1;

        if $i0 != $i13 goto label01;

        $i7 = specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label02;

     label01:
        $i7 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label02:
        lookupswitch($i7)
        {
            case 136: goto label03;
            default: goto label04;
        };

     label03:
        specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(136);

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String iri()>();

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createNode(java.lang.String)>($r2);

        virtualinvoke $r10.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: void setWithIRI(com.hp.hpl.jena.graph.Node)>($r3);

        goto label05;

     label04:
        $r9 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i6 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r9[47] = $i6;

     label05:
        $i1 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i15 = (int) -1;

        if $i1 != $i15 goto label06;

        $i8 = specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label07;

     label06:
        $i8 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label07:
        lookupswitch($i8)
        {
            case 118: goto label13;
            case 119: goto label08;
            default: goto label14;
        };

     label08:
        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void DeleteClause(com.hp.hpl.jena.sparql.modify.request.UpdateModify)>($r10);

        $i2 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i17 = (int) -1;

        if $i2 != $i17 goto label09;

        $i9 = specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label10;

     label09:
        $i9 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label10:
        lookupswitch($i9)
        {
            case 118: goto label11;
            default: goto label12;
        };

     label11:
        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void InsertClause(com.hp.hpl.jena.sparql.modify.request.UpdateModify)>($r10);

        goto label15;

     label12:
        $r6 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i4 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r6[48] = $i4;

        goto label15;

     label13:
        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void InsertClause(com.hp.hpl.jena.sparql.modify.request.UpdateModify)>($r10);

        goto label15;

     label14:
        $r7 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i5 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r7[49] = $i5;

        $i19 = (int) -1;

        specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i19);

        $r11 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r11.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r11;

     label15:
        $i10 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i21 = (int) -1;

        if $i10 != $i21 goto label16;

        $i11 = specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label17;

     label16:
        $i11 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label17:
        lookupswitch($i11)
        {
            case 137: goto label18;
            default: goto label19;
        };

     label18:
        goto label20;

     label19:
        $r4 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i3 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r4[50] = $i3;

        goto label21;

     label20:
        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void UsingClause(com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing)>($r10);

        goto label15;

     label21:
        specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(37);

        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void startWherePattern()>();

        $r5 = virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.syntax.Element GroupGraphPattern()>();

        virtualinvoke $r10.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: void setElement(com.hp.hpl.jena.sparql.syntax.Element)>($r5);

        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void finishWherePattern()>();

        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void finishModifyUpdate()>();

        return $r10;
    }

    public final void DeleteClause(com.hp.hpl.jena.sparql.modify.request.UpdateModify) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.modify.request.QuadAcc $r1;
        com.hp.hpl.jena.sparql.modify.request.UpdateModify r0;
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r3;
        int i0, i1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r2;

        r2 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r0 := @parameter0: com.hp.hpl.jena.sparql.modify.request.UpdateModify;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: com.hp.hpl.jena.sparql.modify.request.QuadAcc getDeleteAcc()>();

        $r3 = specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(119);

        i0 = $r3.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        i1 = $r3.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

        virtualinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void startDeleteTemplate(com.hp.hpl.jena.sparql.modify.request.QuadAcc,int,int)>($r1, i0, i1);

        virtualinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void QuadPattern(com.hp.hpl.jena.sparql.modify.request.QuadAcc)>($r1);

        virtualinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void finishDeleteTemplate(com.hp.hpl.jena.sparql.modify.request.QuadAcc,int,int)>($r1, i0, i1);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: void setHasDeleteClause(boolean)>(1);

        return;
    }

    public final void InsertClause(com.hp.hpl.jena.sparql.modify.request.UpdateModify) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.modify.request.QuadAcc $r1;
        com.hp.hpl.jena.sparql.modify.request.UpdateModify r0;
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r3;
        int i0, i1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r2;

        r2 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r0 := @parameter0: com.hp.hpl.jena.sparql.modify.request.UpdateModify;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: com.hp.hpl.jena.sparql.modify.request.QuadAcc getInsertAcc()>();

        $r3 = specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(118);

        i0 = $r3.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        i1 = $r3.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

        virtualinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void startInsertTemplate(com.hp.hpl.jena.sparql.modify.request.QuadAcc,int,int)>($r1, i0, i1);

        virtualinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void QuadPattern(com.hp.hpl.jena.sparql.modify.request.QuadAcc)>($r1);

        virtualinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void finishInsertTemplate(com.hp.hpl.jena.sparql.modify.request.QuadAcc,int,int)>($r1, i0, i1);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateModify: void setHasInsertClause(boolean)>(1);

        return;
    }

    public final void UsingClause(com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node $r2, $r5;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r6;
        int $i0, $i1, $i2, $i4, $i6;
        com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing r3;
        java.lang.String $r1, $r4;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r8;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r3 := @parameter0: com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(137);

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label3;
            case 35: goto label4;
            default: goto label5;
        };

     label3:
        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String iri()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createNode(java.lang.String)>($r4);

        virtualinvoke r3.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: void addUsing(com.hp.hpl.jena.graph.Node)>($r5);

        goto label6;

     label4:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(35);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String iri()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createNode(java.lang.String)>($r1);

        virtualinvoke r3.<com.hp.hpl.jena.sparql.modify.request.UpdateWithUsing: void addUsingNamed(com.hp.hpl.jena.graph.Node)>($r2);

        goto label6;

     label5:
        $r6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r6[51] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r8 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r8.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r8;

     label6:
        return;
    }

    public final com.hp.hpl.jena.sparql.modify.request.Target GraphOrDefault() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node $r3;
        int[] $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i11;
        java.lang.String $r2;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r8;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.modify.request.Target $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i7 = (int) -1;

        if $i0 != $i7 goto label01;

        $i4 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label02;

     label01:
        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label02:
        lookupswitch($i4)
        {
            case 9: goto label04;
            case 10: goto label04;
            case 11: goto label04;
            case 39: goto label04;
            case 134: goto label03;
            default: goto label10;
        };

     label03:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(134);

        $r1 = <com.hp.hpl.jena.sparql.modify.request.Target: com.hp.hpl.jena.sparql.modify.request.Target DEFAULT>;

        return $r1;

     label04:
        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i9 = (int) -1;

        if $i1 != $i9 goto label05;

        $i5 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label06;

     label05:
        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label06:
        lookupswitch($i5)
        {
            case 39: goto label07;
            default: goto label08;
        };

     label07:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(39);

        goto label09;

     label08:
        $r5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r5[52] = $i2;

     label09:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String iri()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createNode(java.lang.String)>($r2);

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.modify.request.Target: com.hp.hpl.jena.sparql.modify.request.Target create(com.hp.hpl.jena.graph.Node)>($r3);

        return $r4;

     label10:
        $r6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r6[53] = $i3;

        $i11 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i11);

        $r8 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r8.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r8;
    }

    public final com.hp.hpl.jena.graph.Node GraphRef() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        java.lang.String $r1;
        com.hp.hpl.jena.graph.Node $r2;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(39);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String iri()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createNode(java.lang.String)>($r1);

        return $r2;
    }

    public final com.hp.hpl.jena.sparql.modify.request.Target GraphRefAll() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node $r3;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r6;
        int $i0, $i1, $i2, $i4, $i6;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r8;
        com.hp.hpl.jena.sparql.modify.request.Target $r1, $r2, $r4, $r5;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 35: goto label5;
            case 39: goto label3;
            case 134: goto label4;
            case 135: goto label6;
            default: goto label7;
        };

     label3:
        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node GraphRef()>();

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.modify.request.Target: com.hp.hpl.jena.sparql.modify.request.Target create(com.hp.hpl.jena.graph.Node)>($r3);

        return $r4;

     label4:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(134);

        $r2 = <com.hp.hpl.jena.sparql.modify.request.Target: com.hp.hpl.jena.sparql.modify.request.Target DEFAULT>;

        return $r2;

     label5:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(35);

        $r5 = <com.hp.hpl.jena.sparql.modify.request.Target: com.hp.hpl.jena.sparql.modify.request.Target NAMED>;

        return $r5;

     label6:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(135);

        $r1 = <com.hp.hpl.jena.sparql.modify.request.Target: com.hp.hpl.jena.sparql.modify.request.Target ALL>;

        return $r1;

     label7:
        $r6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r6[54] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r8 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r8.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r8;
    }

    public final void QuadPattern(com.hp.hpl.jena.sparql.modify.request.QuadAcc) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.modify.request.QuadAcc r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r1 := @parameter0: com.hp.hpl.jena.sparql.modify.request.QuadAcc;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(159);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void Quads(com.hp.hpl.jena.sparql.modify.request.QuadAccSink)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(160);

        return;
    }

    public final void QuadData(com.hp.hpl.jena.sparql.modify.request.QuadDataAccSink) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.modify.request.QuadDataAccSink r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r1 := @parameter0: com.hp.hpl.jena.sparql.modify.request.QuadDataAccSink;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(159);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void Quads(com.hp.hpl.jena.sparql.modify.request.QuadAccSink)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(160);

        return;
    }

    public final void Quads(com.hp.hpl.jena.sparql.modify.request.QuadAccSink) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        int[] $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i15, $i17, $i19;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.modify.request.QuadAccSink r1;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r1 := @parameter0: com.hp.hpl.jena.sparql.modify.request.QuadAccSink;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i13 = (int) -1;

        if $i0 != $i13 goto label01;

        $i7 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label02;

     label01:
        $i7 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label02:
        lookupswitch($i7)
        {
            case 9: goto label03;
            case 10: goto label03;
            case 11: goto label03;
            case 12: goto label03;
            case 13: goto label03;
            case 14: goto label03;
            case 115: goto label03;
            case 116: goto label03;
            case 139: goto label03;
            case 140: goto label03;
            case 141: goto label03;
            case 142: goto label03;
            case 143: goto label03;
            case 144: goto label03;
            case 145: goto label03;
            case 146: goto label03;
            case 147: goto label03;
            case 152: goto label03;
            case 153: goto label03;
            case 154: goto label03;
            case 155: goto label03;
            case 156: goto label03;
            case 158: goto label03;
            case 161: goto label03;
            case 163: goto label03;
            default: goto label04;
        };

     label03:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void TriplesTemplate(com.hp.hpl.jena.sparql.syntax.TripleCollector)>(r1);

        goto label05;

     label04:
        $r5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r5[55] = $i6;

     label05:
        $i8 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i15 = (int) -1;

        if $i8 != $i15 goto label06;

        $i9 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label07;

     label06:
        $i9 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label07:
        lookupswitch($i9)
        {
            case 39: goto label08;
            default: goto label09;
        };

     label08:
        goto label10;

     label09:
        $r4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r4[56] = $i5;

        goto label20;

     label10:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void QuadsNotTriples(com.hp.hpl.jena.sparql.modify.request.QuadAccSink)>(r1);

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i17 = (int) -1;

        if $i1 != $i17 goto label11;

        $i10 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label12;

     label11:
        $i10 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label12:
        lookupswitch($i10)
        {
            case 166: goto label13;
            default: goto label14;
        };

     label13:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(166);

        goto label15;

     label14:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r3[57] = $i4;

     label15:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i19 = (int) -1;

        if $i2 != $i19 goto label16;

        $i11 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label17;

     label16:
        $i11 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label17:
        lookupswitch($i11)
        {
            case 9: goto label18;
            case 10: goto label18;
            case 11: goto label18;
            case 12: goto label18;
            case 13: goto label18;
            case 14: goto label18;
            case 115: goto label18;
            case 116: goto label18;
            case 139: goto label18;
            case 140: goto label18;
            case 141: goto label18;
            case 142: goto label18;
            case 143: goto label18;
            case 144: goto label18;
            case 145: goto label18;
            case 146: goto label18;
            case 147: goto label18;
            case 152: goto label18;
            case 153: goto label18;
            case 154: goto label18;
            case 155: goto label18;
            case 156: goto label18;
            case 158: goto label18;
            case 161: goto label18;
            case 163: goto label18;
            default: goto label19;
        };

     label18:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void TriplesTemplate(com.hp.hpl.jena.sparql.syntax.TripleCollector)>(r1);

        goto label05;

     label19:
        $r2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r2[58] = $i3;

        goto label05;

     label20:
        return;
    }

    public final void QuadsNotTriples(com.hp.hpl.jena.sparql.modify.request.QuadAccSink) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node $r1, $r3;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r2;
        com.hp.hpl.jena.sparql.modify.request.QuadAccSink r0;
        int[] $r4;
        int $i0, $i1, $i2, $i4;

        r2 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r0 := @parameter0: com.hp.hpl.jena.sparql.modify.request.QuadAccSink;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.modify.request.QuadAccSink: com.hp.hpl.jena.graph.Node getGraph()>();

        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(39);

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node VarOrIri()>();

        virtualinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void setAccGraph(com.hp.hpl.jena.sparql.modify.request.QuadAccSink,com.hp.hpl.jena.graph.Node)>(r0, $r3);

        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(159);

        $i0 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label3;
            case 12: goto label3;
            case 13: goto label3;
            case 14: goto label3;
            case 115: goto label3;
            case 116: goto label3;
            case 139: goto label3;
            case 140: goto label3;
            case 141: goto label3;
            case 142: goto label3;
            case 143: goto label3;
            case 144: goto label3;
            case 145: goto label3;
            case 146: goto label3;
            case 147: goto label3;
            case 152: goto label3;
            case 153: goto label3;
            case 154: goto label3;
            case 155: goto label3;
            case 156: goto label3;
            case 158: goto label3;
            case 161: goto label3;
            case 163: goto label3;
            default: goto label4;
        };

     label3:
        virtualinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void TriplesTemplate(com.hp.hpl.jena.sparql.syntax.TripleCollector)>(r0);

        goto label5;

     label4:
        $r4 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r4[59] = $i1;

     label5:
        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(160);

        virtualinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void setAccGraph(com.hp.hpl.jena.sparql.modify.request.QuadAccSink,com.hp.hpl.jena.graph.Node)>(r0, $r1);

        return;
    }

    public final void TriplesTemplate(com.hp.hpl.jena.sparql.syntax.TripleCollector) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r2, $r3;
        com.hp.hpl.jena.sparql.syntax.TripleCollector r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.TripleCollector;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void TriplesSameSubject(com.hp.hpl.jena.sparql.syntax.TripleCollector)>(r1);

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i7 = (int) -1;

        if $i0 != $i7 goto label1;

        $i4 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i4)
        {
            case 166: goto label3;
            default: goto label8;
        };

     label3:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(166);

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i9 = (int) -1;

        if $i1 != $i9 goto label4;

        $i5 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label5;

     label4:
        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label5:
        lookupswitch($i5)
        {
            case 9: goto label6;
            case 10: goto label6;
            case 11: goto label6;
            case 12: goto label6;
            case 13: goto label6;
            case 14: goto label6;
            case 115: goto label6;
            case 116: goto label6;
            case 139: goto label6;
            case 140: goto label6;
            case 141: goto label6;
            case 142: goto label6;
            case 143: goto label6;
            case 144: goto label6;
            case 145: goto label6;
            case 146: goto label6;
            case 147: goto label6;
            case 152: goto label6;
            case 153: goto label6;
            case 154: goto label6;
            case 155: goto label6;
            case 156: goto label6;
            case 158: goto label6;
            case 161: goto label6;
            case 163: goto label6;
            default: goto label7;
        };

     label6:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void TriplesTemplate(com.hp.hpl.jena.sparql.syntax.TripleCollector)>(r1);

        goto label9;

     label7:
        $r2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r2[60] = $i2;

        goto label9;

     label8:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r3[61] = $i3;

     label9:
        return;
    }

    public final com.hp.hpl.jena.sparql.syntax.Element GroupGraphPattern() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.query.Query $r2;
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.syntax.ElementSubQuery $r6;
        int[] $r4;
        int i0, i1, $i2, $i3, $i4, $i6;
        com.hp.hpl.jena.sparql.syntax.Element r5;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(159);

        i0 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        i1 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i6 = (int) -1;

        if $i2 != $i6 goto label1;

        $i4 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i4)
        {
            case 21: goto label3;
            default: goto label4;
        };

     label3:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void startSubSelect(int,int)>(i0, i1);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void SubSelect()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query endSubSelect(int,int)>(i0, i1);

        $r6 = new com.hp.hpl.jena.sparql.syntax.ElementSubQuery;

        specialinvoke $r6.<com.hp.hpl.jena.sparql.syntax.ElementSubQuery: void <init>(com.hp.hpl.jena.query.Query)>($r2);

        r5 = $r6;

        goto label5;

     label4:
        $r4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r4[62] = $i3;

        r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.syntax.Element GroupGraphPatternSub()>();

     label5:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(160);

        return r5;
    }

    public final com.hp.hpl.jena.sparql.syntax.Element GroupGraphPatternSub() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        int[] $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i15, $i17, $i19;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r1;
        com.hp.hpl.jena.sparql.syntax.ElementGroup $r9;
        com.hp.hpl.jena.sparql.syntax.Element $r2, $r3, $r4;

        r1 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r9 = new com.hp.hpl.jena.sparql.syntax.ElementGroup;

        specialinvoke $r9.<com.hp.hpl.jena.sparql.syntax.ElementGroup: void <init>()>();

        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void startGroup(com.hp.hpl.jena.sparql.syntax.ElementGroup)>($r9);

        $i0 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i13 = (int) -1;

        if $i0 != $i13 goto label01;

        $i7 = specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label02;

     label01:
        $i7 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label02:
        lookupswitch($i7)
        {
            case 9: goto label03;
            case 10: goto label03;
            case 11: goto label03;
            case 12: goto label03;
            case 13: goto label03;
            case 14: goto label03;
            case 115: goto label03;
            case 116: goto label03;
            case 139: goto label03;
            case 140: goto label03;
            case 141: goto label03;
            case 142: goto label03;
            case 143: goto label03;
            case 144: goto label03;
            case 145: goto label03;
            case 146: goto label03;
            case 147: goto label03;
            case 152: goto label03;
            case 153: goto label03;
            case 154: goto label03;
            case 155: goto label03;
            case 156: goto label03;
            case 158: goto label03;
            case 161: goto label03;
            case 163: goto label03;
            default: goto label04;
        };

     label03:
        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void startTriplesBlock()>();

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.syntax.Element TriplesBlock(com.hp.hpl.jena.sparql.syntax.ElementPathBlock)>(null);

        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void endTriplesBlock()>();

        virtualinvoke $r9.<com.hp.hpl.jena.sparql.syntax.ElementGroup: void addElement(com.hp.hpl.jena.sparql.syntax.Element)>($r2);

        goto label05;

     label04:
        $r8 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i6 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r8[63] = $i6;

     label05:
        $i8 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i15 = (int) -1;

        if $i8 != $i15 goto label06;

        $i9 = specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label07;

     label06:
        $i9 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label07:
        lookupswitch($i9)
        {
            case 31: goto label08;
            case 39: goto label08;
            case 40: goto label08;
            case 42: goto label08;
            case 43: goto label08;
            case 44: goto label08;
            case 60: goto label08;
            case 159: goto label08;
            default: goto label09;
        };

     label08:
        goto label10;

     label09:
        $r7 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i5 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r7[64] = $i5;

        goto label20;

     label10:
        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.syntax.Element GraphPatternNotTriples()>();

        virtualinvoke $r9.<com.hp.hpl.jena.sparql.syntax.ElementGroup: void addElement(com.hp.hpl.jena.sparql.syntax.Element)>($r3);

        $i1 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i17 = (int) -1;

        if $i1 != $i17 goto label11;

        $i10 = specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label12;

     label11:
        $i10 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label12:
        lookupswitch($i10)
        {
            case 166: goto label13;
            default: goto label14;
        };

     label13:
        specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(166);

        goto label15;

     label14:
        $r6 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i4 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r6[65] = $i4;

     label15:
        $i2 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i19 = (int) -1;

        if $i2 != $i19 goto label16;

        $i11 = specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label17;

     label16:
        $i11 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label17:
        lookupswitch($i11)
        {
            case 9: goto label18;
            case 10: goto label18;
            case 11: goto label18;
            case 12: goto label18;
            case 13: goto label18;
            case 14: goto label18;
            case 115: goto label18;
            case 116: goto label18;
            case 139: goto label18;
            case 140: goto label18;
            case 141: goto label18;
            case 142: goto label18;
            case 143: goto label18;
            case 144: goto label18;
            case 145: goto label18;
            case 146: goto label18;
            case 147: goto label18;
            case 152: goto label18;
            case 153: goto label18;
            case 154: goto label18;
            case 155: goto label18;
            case 156: goto label18;
            case 158: goto label18;
            case 161: goto label18;
            case 163: goto label18;
            default: goto label19;
        };

     label18:
        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void startTriplesBlock()>();

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.syntax.Element TriplesBlock(com.hp.hpl.jena.sparql.syntax.ElementPathBlock)>(null);

        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void endTriplesBlock()>();

        virtualinvoke $r9.<com.hp.hpl.jena.sparql.syntax.ElementGroup: void addElement(com.hp.hpl.jena.sparql.syntax.Element)>($r4);

        goto label05;

     label19:
        $r5 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i3 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r5[66] = $i3;

        goto label05;

     label20:
        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void endGroup(com.hp.hpl.jena.sparql.syntax.ElementGroup)>($r9);

        return $r9;
    }

    public final com.hp.hpl.jena.sparql.syntax.Element TriplesBlock(com.hp.hpl.jena.sparql.syntax.ElementPathBlock) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.syntax.ElementPathBlock r4, $r5;
        int[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r4 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementPathBlock;

        if r4 != null goto label01;

        $r5 = new com.hp.hpl.jena.sparql.syntax.ElementPathBlock;

        specialinvoke $r5.<com.hp.hpl.jena.sparql.syntax.ElementPathBlock: void <init>()>();

        r4 = $r5;

     label01:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void TriplesSameSubjectPath(com.hp.hpl.jena.sparql.syntax.TripleCollector)>(r4);

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i7 = (int) -1;

        if $i0 != $i7 goto label02;

        $i4 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label03;

     label02:
        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label03:
        lookupswitch($i4)
        {
            case 166: goto label04;
            default: goto label09;
        };

     label04:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(166);

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i9 = (int) -1;

        if $i1 != $i9 goto label05;

        $i5 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label06;

     label05:
        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label06:
        lookupswitch($i5)
        {
            case 9: goto label07;
            case 10: goto label07;
            case 11: goto label07;
            case 12: goto label07;
            case 13: goto label07;
            case 14: goto label07;
            case 115: goto label07;
            case 116: goto label07;
            case 139: goto label07;
            case 140: goto label07;
            case 141: goto label07;
            case 142: goto label07;
            case 143: goto label07;
            case 144: goto label07;
            case 145: goto label07;
            case 146: goto label07;
            case 147: goto label07;
            case 152: goto label07;
            case 153: goto label07;
            case 154: goto label07;
            case 155: goto label07;
            case 156: goto label07;
            case 158: goto label07;
            case 161: goto label07;
            case 163: goto label07;
            default: goto label08;
        };

     label07:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.syntax.Element TriplesBlock(com.hp.hpl.jena.sparql.syntax.ElementPathBlock)>(r4);

        goto label10;

     label08:
        $r1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r1[67] = $i2;

        goto label10;

     label09:
        $r2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r2[68] = $i3;

     label10:
        return r4;
    }

    public final com.hp.hpl.jena.sparql.syntax.Element GraphPatternNotTriples() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r1;
        int $i0, $i1, $i2, $i4, $i6;
        com.hp.hpl.jena.sparql.syntax.Element r3;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r4;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label01;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label02;

     label01:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label02:
        lookupswitch($i2)
        {
            case 31: goto label10;
            case 39: goto label06;
            case 40: goto label04;
            case 42: goto label05;
            case 43: goto label09;
            case 44: goto label07;
            case 60: goto label08;
            case 159: goto label03;
            default: goto label11;
        };

     label03:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.syntax.Element GroupOrUnionGraphPattern()>();

        goto label12;

     label04:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.syntax.Element OptionalGraphPattern()>();

        goto label12;

     label05:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.syntax.Element MinusGraphPattern()>();

        goto label12;

     label06:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.syntax.Element GraphGraphPattern()>();

        goto label12;

     label07:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.syntax.Element ServiceGraphPattern()>();

        goto label12;

     label08:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.syntax.Element Filter()>();

        goto label12;

     label09:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.syntax.Element Bind()>();

        goto label12;

     label10:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.syntax.Element InlineData()>();

        goto label12;

     label11:
        $r1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r1[69] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r4 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r4.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r4;

     label12:
        return r3;
    }

    public final com.hp.hpl.jena.sparql.syntax.Element OptionalGraphPattern() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.syntax.ElementOptional $r2;
        com.hp.hpl.jena.sparql.syntax.Element $r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(40);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.syntax.Element GroupGraphPattern()>();

        $r2 = new com.hp.hpl.jena.sparql.syntax.ElementOptional;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.syntax.ElementOptional: void <init>(com.hp.hpl.jena.sparql.syntax.Element)>($r1);

        return $r2;
    }

    public final com.hp.hpl.jena.sparql.syntax.Element GraphGraphPattern() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.syntax.ElementNamedGraph $r3;
        com.hp.hpl.jena.sparql.syntax.Element $r2;
        com.hp.hpl.jena.graph.Node $r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(39);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node VarOrIri()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.syntax.Element GroupGraphPattern()>();

        $r3 = new com.hp.hpl.jena.sparql.syntax.ElementNamedGraph;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.syntax.ElementNamedGraph: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.syntax.Element)>($r1, $r2);

        return $r3;
    }

    public final com.hp.hpl.jena.sparql.syntax.Element ServiceGraphPattern() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node $r1;
        com.hp.hpl.jena.sparql.syntax.ElementService $r5;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r4;
        int $i0, $i1, $i2, $i4;
        com.hp.hpl.jena.sparql.syntax.Element $r2;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        z0 = 0;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(44);

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 130: goto label3;
            default: goto label4;
        };

     label3:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(130);

        z0 = 1;

        goto label5;

     label4:
        $r4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r4[70] = $i1;

     label5:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node VarOrIri()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.syntax.Element GroupGraphPattern()>();

        $r5 = new com.hp.hpl.jena.sparql.syntax.ElementService;

        specialinvoke $r5.<com.hp.hpl.jena.sparql.syntax.ElementService: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.syntax.Element,boolean)>($r1, $r2, z0);

        return $r5;
    }

    public final com.hp.hpl.jena.sparql.syntax.Element Bind() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.expr.Expr $r1;
        com.hp.hpl.jena.sparql.syntax.ElementBind $r3;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.core.Var $r2;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(43);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(47);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.core.Var Var()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r3 = new com.hp.hpl.jena.sparql.syntax.ElementBind;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.syntax.ElementBind: void <init>(com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.sparql.expr.Expr)>($r2, $r1);

        return $r3;
    }

    public final com.hp.hpl.jena.sparql.syntax.Element InlineData() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        java.util.List $r3, $r4;
        com.hp.hpl.jena.sparql.syntax.ElementData $r2;
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r1;
        int i0, i1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(31);

        i0 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        i1 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

        $r2 = new com.hp.hpl.jena.sparql.syntax.ElementData;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.syntax.ElementData: void <init>()>();

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.syntax.ElementData: java.util.List getVars()>();

        $r4 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.syntax.ElementData: java.util.List getRows()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void startInlineData(java.util.List,java.util.List,int,int)>($r3, $r4, i0, i1);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void DataBlock()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void finishInlineData(int,int)>(i0, i1);

        return $r2;
    }

    public final void DataBlock() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r1;
        int $i0, $i1, $i2, $i4, $i6;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r3;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 13: goto label3;
            case 14: goto label3;
            case 156: goto label4;
            case 158: goto label4;
            default: goto label5;
        };

     label3:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void InlineDataOneVar()>();

        goto label6;

     label4:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void InlineDataFull()>();

        goto label6;

     label5:
        $r1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r1[71] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r3 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r3;

     label6:
        return;
    }

    public final void InlineDataOneVar() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node $r2;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.core.Var $r1;
        int[] $r3;
        int $i0, $i1, $i2, $i4, $i6, $i8, $i10, $i12, $i14, $i16;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.core.Var Var()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void emitDataBlockVariable(com.hp.hpl.jena.sparql.core.Var)>($r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(159);

     label1:
        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label2;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label3;

     label2:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label3:
        lookupswitch($i2)
        {
            case 9: goto label4;
            case 10: goto label4;
            case 11: goto label4;
            case 32: goto label4;
            case 115: goto label4;
            case 116: goto label4;
            case 139: goto label4;
            case 140: goto label4;
            case 141: goto label4;
            case 142: goto label4;
            case 143: goto label4;
            case 144: goto label4;
            case 145: goto label4;
            case 146: goto label4;
            case 147: goto label4;
            case 152: goto label4;
            case 153: goto label4;
            case 154: goto label4;
            case 155: goto label4;
            default: goto label5;
        };

     label4:
        goto label6;

     label5:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r3[72] = $i1;

        goto label7;

     label6:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node DataBlockValue()>();

        $i6 = (int) -1;

        $i8 = (int) -1;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void startDataBlockValueRow(int,int)>($i6, $i8);

        $i10 = (int) -1;

        $i12 = (int) -1;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void emitDataBlockValue(com.hp.hpl.jena.graph.Node,int,int)>($r2, $i10, $i12);

        $i14 = (int) -1;

        $i16 = (int) -1;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void finishDataBlockValueRow(int,int)>($i14, $i16);

        goto label1;

     label7:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(160);

        return;
    }

    public final void InlineDataFull() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node $r3;
        int[] $r4, $r6, $r8, $r10, $r11;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r13, $r14;
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r1, $r2, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, $i16, i17, i18, i19, i20, $i22, $i24, $i26, $i28, $i30, $i32, $i34;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.core.Var $r9;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i22 = (int) -1;

        if $i0 != $i22 goto label01;

        $i9 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label02;

     label01:
        $i9 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label02:
        lookupswitch($i9)
        {
            case 156: goto label04;
            case 158: goto label03;
            default: goto label12;
        };

     label03:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(158);

        goto label13;

     label04:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

     label05:
        $i6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i24 = (int) -1;

        if $i6 != $i24 goto label06;

        $i10 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label07;

     label06:
        $i10 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label07:
        lookupswitch($i10)
        {
            case 13: goto label08;
            case 14: goto label08;
            default: goto label09;
        };

     label08:
        goto label10;

     label09:
        $r10 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i7 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r10[73] = $i7;

        goto label11;

     label10:
        $r9 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.core.Var Var()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void emitDataBlockVariable(com.hp.hpl.jena.sparql.core.Var)>($r9);

        goto label05;

     label11:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        goto label13;

     label12:
        $r11 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i8 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r11[74] = $i8;

        $i26 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i26);

        $r13 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r13.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r13;

     label13:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(159);

     label14:
        $i11 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i28 = (int) -1;

        if $i11 != $i28 goto label15;

        $i12 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label16;

     label15:
        $i12 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label16:
        lookupswitch($i12)
        {
            case 156: goto label17;
            case 158: goto label17;
            default: goto label18;
        };

     label17:
        goto label19;

     label18:
        $r8 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r8[75] = $i5;

        goto label32;

     label19:
        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i30 = (int) -1;

        if $i1 != $i30 goto label20;

        $i13 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label21;

     label20:
        $i13 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label21:
        lookupswitch($i13)
        {
            case 156: goto label22;
            case 158: goto label30;
            default: goto label31;
        };

     label22:
        $r2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        i14 = $r2.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        i15 = $r2.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void startDataBlockValueRow(int,int)>(i14, i15);

     label23:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i32 = (int) -1;

        if $i2 != $i32 goto label24;

        $i16 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label25;

     label24:
        $i16 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label25:
        lookupswitch($i16)
        {
            case 9: goto label26;
            case 10: goto label26;
            case 11: goto label26;
            case 32: goto label26;
            case 115: goto label26;
            case 116: goto label26;
            case 139: goto label26;
            case 140: goto label26;
            case 141: goto label26;
            case 142: goto label26;
            case 143: goto label26;
            case 144: goto label26;
            case 145: goto label26;
            case 146: goto label26;
            case 147: goto label26;
            case 152: goto label26;
            case 153: goto label26;
            case 154: goto label26;
            case 155: goto label26;
            default: goto label27;
        };

     label26:
        goto label28;

     label27:
        $r4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r4[76] = $i3;

        goto label29;

     label28:
        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node DataBlockValue()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void emitDataBlockValue(com.hp.hpl.jena.graph.Node,int,int)>($r3, i14, i15);

        goto label23;

     label29:
        $r5 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        i17 = $r5.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        i18 = $r5.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void finishDataBlockValueRow(int,int)>(i17, i18);

        goto label14;

     label30:
        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(158);

        i19 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        i20 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void startDataBlockValueRow(int,int)>(i19, i20);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void finishDataBlockValueRow(int,int)>(i19, i20);

        goto label14;

     label31:
        $r6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r6[77] = $i4;

        $i34 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i34);

        $r14 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r14.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r14;

     label32:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(160);

        return;
    }

    public final com.hp.hpl.jena.graph.Node DataBlockValue() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node $r1, $r2, $r3, $r5;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r6;
        int $i0, $i1, $i2, $i4, $i6;
        java.lang.String $r4;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r8;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label3;
            case 32: goto label7;
            case 115: goto label6;
            case 116: goto label6;
            case 139: goto label5;
            case 140: goto label5;
            case 141: goto label5;
            case 142: goto label5;
            case 143: goto label5;
            case 144: goto label5;
            case 145: goto label5;
            case 146: goto label5;
            case 147: goto label5;
            case 152: goto label4;
            case 153: goto label4;
            case 154: goto label4;
            case 155: goto label4;
            default: goto label8;
        };

     label3:
        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String iri()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createNode(java.lang.String)>($r4);

        return $r5;

     label4:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node RDFLiteral()>();

        return $r1;

     label5:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node NumericLiteral()>();

        return $r2;

     label6:
        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node BooleanLiteral()>();

        return $r3;

     label7:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(32);

        return null;

     label8:
        $r6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r6[78] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r8 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r8.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r8;
    }

    public final com.hp.hpl.jena.sparql.syntax.Element MinusGraphPattern() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.syntax.Element $r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.syntax.ElementMinus $r2;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(42);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.syntax.Element GroupGraphPattern()>();

        $r2 = new com.hp.hpl.jena.sparql.syntax.ElementMinus;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.syntax.ElementMinus: void <init>(com.hp.hpl.jena.sparql.syntax.Element)>($r1);

        return $r2;
    }

    public final com.hp.hpl.jena.sparql.syntax.Element GroupOrUnionGraphPattern() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.syntax.ElementUnion r4, $r7;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r3;
        int $i0, $i1, $i2, $i4;
        com.hp.hpl.jena.sparql.syntax.Element $r1, r5, $r6;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r4 = null;

        r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.syntax.Element GroupGraphPattern()>();

     label01:
        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label02;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label03;

     label02:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label03:
        lookupswitch($i2)
        {
            case 41: goto label04;
            default: goto label05;
        };

     label04:
        goto label06;

     label05:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r3[79] = $i1;

        goto label08;

     label06:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(41);

        if r4 != null goto label07;

        $r7 = new com.hp.hpl.jena.sparql.syntax.ElementUnion;

        specialinvoke $r7.<com.hp.hpl.jena.sparql.syntax.ElementUnion: void <init>()>();

        r4 = $r7;

        virtualinvoke $r7.<com.hp.hpl.jena.sparql.syntax.ElementUnion: void addElement(com.hp.hpl.jena.sparql.syntax.Element)>(r5);

     label07:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.syntax.Element GroupGraphPattern()>();

        r5 = $r1;

        virtualinvoke r4.<com.hp.hpl.jena.sparql.syntax.ElementUnion: void addElement(com.hp.hpl.jena.sparql.syntax.Element)>($r1);

        goto label01;

     label08:
        if r4 != null goto label09;

        $r6 = r5;

        goto label10;

     label09:
        $r6 = r4;

     label10:
        return $r6;
    }

    public final com.hp.hpl.jena.sparql.syntax.Element Filter() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.syntax.ElementFilter $r2;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.expr.Expr $r1;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(60);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Constraint()>();

        $r2 = new com.hp.hpl.jena.sparql.syntax.ElementFilter;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.syntax.ElementFilter: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r1);

        return $r2;
    }

    public final com.hp.hpl.jena.sparql.expr.Expr Constraint() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.expr.Expr r3;
        int[] $r1;
        int $i0, $i1, $i2, $i4, $i6;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r4;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        tableswitch($i2)
        {
            case 9: goto label5;
            case 10: goto label5;
            case 11: goto label5;
            case 12: goto label6;
            case 13: goto label6;
            case 14: goto label6;
            case 15: goto label6;
            case 16: goto label6;
            case 17: goto label6;
            case 18: goto label6;
            case 19: goto label6;
            case 20: goto label6;
            case 21: goto label6;
            case 22: goto label6;
            case 23: goto label6;
            case 24: goto label6;
            case 25: goto label6;
            case 26: goto label6;
            case 27: goto label6;
            case 28: goto label6;
            case 29: goto label6;
            case 30: goto label6;
            case 31: goto label6;
            case 32: goto label6;
            case 33: goto label6;
            case 34: goto label6;
            case 35: goto label6;
            case 36: goto label6;
            case 37: goto label6;
            case 38: goto label6;
            case 39: goto label6;
            case 40: goto label6;
            case 41: goto label6;
            case 42: goto label6;
            case 43: goto label6;
            case 44: goto label6;
            case 45: goto label4;
            case 46: goto label4;
            case 47: goto label6;
            case 48: goto label6;
            case 49: goto label6;
            case 50: goto label6;
            case 51: goto label6;
            case 52: goto label4;
            case 53: goto label4;
            case 54: goto label4;
            case 55: goto label4;
            case 56: goto label4;
            case 57: goto label6;
            case 58: goto label4;
            case 59: goto label4;
            case 60: goto label6;
            case 61: goto label4;
            case 62: goto label4;
            case 63: goto label6;
            case 64: goto label4;
            case 65: goto label4;
            case 66: goto label4;
            case 67: goto label4;
            case 68: goto label4;
            case 69: goto label4;
            case 70: goto label4;
            case 71: goto label4;
            case 72: goto label4;
            case 73: goto label4;
            case 74: goto label4;
            case 75: goto label4;
            case 76: goto label4;
            case 77: goto label4;
            case 78: goto label4;
            case 79: goto label4;
            case 80: goto label4;
            case 81: goto label4;
            case 82: goto label4;
            case 83: goto label4;
            case 84: goto label4;
            case 85: goto label4;
            case 86: goto label4;
            case 87: goto label4;
            case 88: goto label4;
            case 89: goto label4;
            case 90: goto label4;
            case 91: goto label4;
            case 92: goto label4;
            case 93: goto label4;
            case 94: goto label4;
            case 95: goto label4;
            case 96: goto label4;
            case 97: goto label4;
            case 98: goto label4;
            case 99: goto label4;
            case 100: goto label4;
            case 101: goto label4;
            case 102: goto label4;
            case 103: goto label4;
            case 104: goto label4;
            case 105: goto label4;
            case 106: goto label4;
            case 107: goto label4;
            case 108: goto label4;
            case 109: goto label4;
            case 110: goto label4;
            case 111: goto label6;
            case 112: goto label4;
            case 113: goto label4;
            case 114: goto label4;
            case 115: goto label6;
            case 116: goto label6;
            case 117: goto label6;
            case 118: goto label6;
            case 119: goto label6;
            case 120: goto label6;
            case 121: goto label6;
            case 122: goto label6;
            case 123: goto label6;
            case 124: goto label6;
            case 125: goto label6;
            case 126: goto label6;
            case 127: goto label6;
            case 128: goto label6;
            case 129: goto label6;
            case 130: goto label6;
            case 131: goto label6;
            case 132: goto label6;
            case 133: goto label6;
            case 134: goto label6;
            case 135: goto label6;
            case 136: goto label6;
            case 137: goto label6;
            case 138: goto label6;
            case 139: goto label6;
            case 140: goto label6;
            case 141: goto label6;
            case 142: goto label6;
            case 143: goto label6;
            case 144: goto label6;
            case 145: goto label6;
            case 146: goto label6;
            case 147: goto label6;
            case 148: goto label6;
            case 149: goto label6;
            case 150: goto label6;
            case 151: goto label6;
            case 152: goto label6;
            case 153: goto label6;
            case 154: goto label6;
            case 155: goto label6;
            case 156: goto label3;
            default: goto label6;
        };

     label3:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr BrackettedExpression()>();

        goto label7;

     label4:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr BuiltInCall()>();

        goto label7;

     label5:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr FunctionCall()>();

        goto label7;

     label6:
        $r1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r1[80] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r4 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r4.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r4;

     label7:
        return r3;
    }

    public final com.hp.hpl.jena.sparql.expr.Expr FunctionCall() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.expr.E_Function $r3;
        com.hp.hpl.jena.sparql.expr.ExprList $r2;
        java.lang.String $r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String iri()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.ExprList ArgList()>();

        $r3 = new com.hp.hpl.jena.sparql.expr.E_Function;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.expr.E_Function: void <init>(java.lang.String,com.hp.hpl.jena.sparql.expr.ExprList)>($r1, $r2);

        return $r3;
    }

    public final com.hp.hpl.jena.sparql.expr.ExprList ArgList() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r2;
        com.hp.hpl.jena.sparql.expr.Expr $r3, $r8;
        int[] $r4, $r5, $r6;
        com.hp.hpl.jena.sparql.expr.ExprList $r9;
        int $i0, $i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i14, $i16, $i18;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r10;
        boolean $z0;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r1;

        r1 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r9 = new com.hp.hpl.jena.sparql.expr.ExprList;

        specialinvoke $r9.<com.hp.hpl.jena.sparql.expr.ExprList: void <init>()>();

        $i0 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i12 = (int) -1;

        if $i0 != $i12 goto label01;

        $i7 = specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label02;

     label01:
        $i7 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label02:
        lookupswitch($i7)
        {
            case 156: goto label04;
            case 158: goto label03;
            default: goto label17;
        };

     label03:
        specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(158);

        goto label18;

     label04:
        specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $i1 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i14 = (int) -1;

        if $i1 != $i14 goto label05;

        $i8 = specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label06;

     label05:
        $i8 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label06:
        lookupswitch($i8)
        {
            case 22: goto label07;
            default: goto label08;
        };

     label07:
        $r2 = specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(22);

        i2 = $r2.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        i3 = $r2.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

        $z0 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: boolean allowAggregatesInExpressions>;

        if $z0 != 0 goto label09;

        staticinvoke <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void throwParseException(java.lang.String,int,int)>("Aggregate expression not legal at this point", i2, i3);

        goto label09;

     label08:
        $r5 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i5 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r5[81] = $i5;

     label09:
        $r8 = virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        virtualinvoke $r9.<com.hp.hpl.jena.sparql.expr.ExprList: void add(com.hp.hpl.jena.sparql.expr.Expr)>($r8);

     label10:
        $i9 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i16 = (int) -1;

        if $i9 != $i16 goto label11;

        $i10 = specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label12;

     label11:
        $i10 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label12:
        lookupswitch($i10)
        {
            case 165: goto label13;
            default: goto label14;
        };

     label13:
        goto label15;

     label14:
        $r4 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i4 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r4[82] = $i4;

        goto label16;

     label15:
        specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(165);

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        virtualinvoke $r9.<com.hp.hpl.jena.sparql.expr.ExprList: void add(com.hp.hpl.jena.sparql.expr.Expr)>($r3);

        goto label10;

     label16:
        specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        goto label18;

     label17:
        $r6 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i6 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r6[83] = $i6;

        $i18 = (int) -1;

        specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i18);

        $r10 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r10.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r10;

     label18:
        return $r9;
    }

    public final com.hp.hpl.jena.sparql.expr.ExprList ExpressionList() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.expr.Expr $r2, $r3;
        int[] $r4, $r5;
        com.hp.hpl.jena.sparql.expr.ExprList $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i11;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r8;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r1;

        r1 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r7 = new com.hp.hpl.jena.sparql.expr.ExprList;

        specialinvoke $r7.<com.hp.hpl.jena.sparql.expr.ExprList: void <init>()>();

        $i0 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i7 = (int) -1;

        if $i0 != $i7 goto label01;

        $i4 = specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label02;

     label01:
        $i4 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label02:
        lookupswitch($i4)
        {
            case 156: goto label04;
            case 158: goto label03;
            default: goto label12;
        };

     label03:
        specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(158);

        goto label13;

     label04:
        specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        virtualinvoke $r7.<com.hp.hpl.jena.sparql.expr.ExprList: void add(com.hp.hpl.jena.sparql.expr.Expr)>($r2);

     label05:
        $i1 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i9 = (int) -1;

        if $i1 != $i9 goto label06;

        $i5 = specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label07;

     label06:
        $i5 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label07:
        lookupswitch($i5)
        {
            case 165: goto label08;
            default: goto label09;
        };

     label08:
        goto label10;

     label09:
        $r4 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i2 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r4[84] = $i2;

        goto label11;

     label10:
        specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(165);

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        virtualinvoke $r7.<com.hp.hpl.jena.sparql.expr.ExprList: void add(com.hp.hpl.jena.sparql.expr.Expr)>($r3);

        goto label05;

     label11:
        specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        goto label13;

     label12:
        $r5 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i3 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r5[85] = $i3;

        $i11 = (int) -1;

        specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i11);

        $r8 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r8.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r8;

     label13:
        return $r7;
    }

    public final com.hp.hpl.jena.sparql.syntax.Template ConstructTemplate() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.core.BasicPattern $r2;
        com.hp.hpl.jena.sparql.syntax.Template $r6;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r3;
        com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP $r5;
        int[] $r4;
        int $i0, $i1, $i2, $i4;

        r3 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r5 = new com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP;

        specialinvoke $r5.<com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP: void <init>()>();

        $r6 = new com.hp.hpl.jena.sparql.syntax.Template;

        $r2 = virtualinvoke $r5.<com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP: com.hp.hpl.jena.sparql.core.BasicPattern getBGP()>();

        specialinvoke $r6.<com.hp.hpl.jena.sparql.syntax.Template: void <init>(com.hp.hpl.jena.sparql.core.BasicPattern)>($r2);

        virtualinvoke r3.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void setInConstructTemplate(boolean)>(1);

        specialinvoke r3.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(159);

        $i0 = r3.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r3.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r3.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label3;
            case 12: goto label3;
            case 13: goto label3;
            case 14: goto label3;
            case 115: goto label3;
            case 116: goto label3;
            case 139: goto label3;
            case 140: goto label3;
            case 141: goto label3;
            case 142: goto label3;
            case 143: goto label3;
            case 144: goto label3;
            case 145: goto label3;
            case 146: goto label3;
            case 147: goto label3;
            case 152: goto label3;
            case 153: goto label3;
            case 154: goto label3;
            case 155: goto label3;
            case 156: goto label3;
            case 158: goto label3;
            case 161: goto label3;
            case 163: goto label3;
            default: goto label4;
        };

     label3:
        virtualinvoke r3.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void ConstructTriples(com.hp.hpl.jena.sparql.syntax.TripleCollector)>($r5);

        goto label5;

     label4:
        $r4 = r3.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r3.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r4[86] = $i1;

     label5:
        specialinvoke r3.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(160);

        virtualinvoke r3.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void setInConstructTemplate(boolean)>(0);

        return $r6;
    }

    public final void ConstructTriples(com.hp.hpl.jena.sparql.syntax.TripleCollector) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r2, $r3;
        com.hp.hpl.jena.sparql.syntax.TripleCollector r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.TripleCollector;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void TriplesSameSubject(com.hp.hpl.jena.sparql.syntax.TripleCollector)>(r1);

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i7 = (int) -1;

        if $i0 != $i7 goto label1;

        $i4 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i4)
        {
            case 166: goto label3;
            default: goto label8;
        };

     label3:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(166);

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i9 = (int) -1;

        if $i1 != $i9 goto label4;

        $i5 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label5;

     label4:
        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label5:
        lookupswitch($i5)
        {
            case 9: goto label6;
            case 10: goto label6;
            case 11: goto label6;
            case 12: goto label6;
            case 13: goto label6;
            case 14: goto label6;
            case 115: goto label6;
            case 116: goto label6;
            case 139: goto label6;
            case 140: goto label6;
            case 141: goto label6;
            case 142: goto label6;
            case 143: goto label6;
            case 144: goto label6;
            case 145: goto label6;
            case 146: goto label6;
            case 147: goto label6;
            case 152: goto label6;
            case 153: goto label6;
            case 154: goto label6;
            case 155: goto label6;
            case 156: goto label6;
            case 158: goto label6;
            case 161: goto label6;
            case 163: goto label6;
            default: goto label7;
        };

     label6:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void ConstructTriples(com.hp.hpl.jena.sparql.syntax.TripleCollector)>(r1);

        goto label9;

     label7:
        $r2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r2[87] = $i2;

        goto label9;

     label8:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r3[88] = $i3;

     label9:
        return;
    }

    public final void TriplesSameSubject(com.hp.hpl.jena.sparql.syntax.TripleCollector) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node $r2, $r4;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.syntax.ElementPathBlock $r7;
        int[] $r5;
        com.hp.hpl.jena.sparql.syntax.TripleCollector r3;
        int $i0, $i1, $i2, $i4, $i6;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r8;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r3 := @parameter0: com.hp.hpl.jena.sparql.syntax.TripleCollector;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label3;
            case 12: goto label3;
            case 13: goto label3;
            case 14: goto label3;
            case 115: goto label3;
            case 116: goto label3;
            case 139: goto label3;
            case 140: goto label3;
            case 141: goto label3;
            case 142: goto label3;
            case 143: goto label3;
            case 144: goto label3;
            case 145: goto label3;
            case 146: goto label3;
            case 147: goto label3;
            case 152: goto label3;
            case 153: goto label3;
            case 154: goto label3;
            case 155: goto label3;
            case 156: goto label4;
            case 158: goto label3;
            case 161: goto label4;
            case 163: goto label3;
            default: goto label5;
        };

     label3:
        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node VarOrTerm()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void PropertyListNotEmpty(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.syntax.TripleCollector)>($r4, r3);

        goto label6;

     label4:
        $r7 = new com.hp.hpl.jena.sparql.syntax.ElementPathBlock;

        specialinvoke $r7.<com.hp.hpl.jena.sparql.syntax.ElementPathBlock: void <init>()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node TriplesNode(com.hp.hpl.jena.sparql.syntax.TripleCollectorMark)>($r7);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void PropertyList(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.syntax.TripleCollector)>($r2, $r7);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void insert(com.hp.hpl.jena.sparql.syntax.TripleCollector,com.hp.hpl.jena.sparql.syntax.ElementPathBlock)>(r3, $r7);

        goto label6;

     label5:
        $r5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r5[89] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r8 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r8.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r8;

     label6:
        return;
    }

    public final void PropertyList(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.syntax.TripleCollector) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r3;
        com.hp.hpl.jena.sparql.syntax.TripleCollector r2;
        int $i0, $i1, $i2, $i4;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.sparql.syntax.TripleCollector;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        tableswitch($i2)
        {
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label3;
            case 12: goto label4;
            case 13: goto label3;
            case 14: goto label3;
            case 15: goto label4;
            case 16: goto label4;
            case 17: goto label4;
            case 18: goto label3;
            default: goto label4;
        };

     label3:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void PropertyListNotEmpty(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.syntax.TripleCollector)>(r1, r2);

        goto label5;

     label4:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r3[90] = $i1;

     label5:
        return;
    }

    public final void PropertyListNotEmpty(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.syntax.TripleCollector) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node $r1, r2, $r4;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r5, $r6;
        com.hp.hpl.jena.sparql.syntax.TripleCollector r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.sparql.syntax.TripleCollector;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node Verb()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void ObjectList(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.sparql.syntax.TripleCollector)>(r2, $r1, null, r3);

     label01:
        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i7 = (int) -1;

        if $i3 != $i7 goto label02;

        $i4 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label03;

     label02:
        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label03:
        lookupswitch($i4)
        {
            case 164: goto label04;
            default: goto label05;
        };

     label04:
        goto label06;

     label05:
        $r6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r6[91] = $i2;

        goto label11;

     label06:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(164);

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i9 = (int) -1;

        if $i0 != $i9 goto label07;

        $i5 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label08;

     label07:
        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label08:
        tableswitch($i5)
        {
            case 9: goto label09;
            case 10: goto label09;
            case 11: goto label09;
            case 12: goto label10;
            case 13: goto label09;
            case 14: goto label09;
            case 15: goto label10;
            case 16: goto label10;
            case 17: goto label10;
            case 18: goto label09;
            default: goto label10;
        };

     label09:
        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node Verb()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void ObjectList(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.sparql.syntax.TripleCollector)>(r2, $r4, null, r3);

        goto label01;

     label10:
        $r5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r5[92] = $i1;

        goto label01;

     label11:
        return;
    }

    public final com.hp.hpl.jena.graph.Node Verb() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node r3;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r1;
        int $i0, $i1, $i2, $i4, $i6;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r4;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        tableswitch($i2)
        {
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label3;
            case 12: goto label5;
            case 13: goto label3;
            case 14: goto label3;
            case 15: goto label5;
            case 16: goto label5;
            case 17: goto label5;
            case 18: goto label4;
            default: goto label5;
        };

     label3:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node VarOrIri()>();

        goto label6;

     label4:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(18);

        r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node nRDFtype>;

        goto label6;

     label5:
        $r1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r1[93] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r4 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r4.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r4;

     label6:
        return r3;
    }

    public final void ObjectList(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.path.Path, com.hp.hpl.jena.sparql.syntax.TripleCollector) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node r1, r2;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.path.Path r3;
        int[] $r5;
        com.hp.hpl.jena.sparql.syntax.TripleCollector r4;
        int $i0, $i1, $i2, $i4;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: com.hp.hpl.jena.sparql.path.Path;

        r4 := @parameter3: com.hp.hpl.jena.sparql.syntax.TripleCollector;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void Object(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.sparql.syntax.TripleCollector)>(r1, r2, r3, r4);

     label1:
        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label2;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label3;

     label2:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label3:
        lookupswitch($i2)
        {
            case 165: goto label4;
            default: goto label5;
        };

     label4:
        goto label6;

     label5:
        $r5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r5[94] = $i1;

        goto label7;

     label6:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(165);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void Object(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.sparql.syntax.TripleCollector)>(r1, r2, r3, r4);

        goto label1;

     label7:
        return;
    }

    public final void Object(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.path.Path, com.hp.hpl.jena.sparql.syntax.TripleCollector) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node $r2, r3, r4;
        com.hp.hpl.jena.sparql.syntax.ElementPathBlock $r0;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r1;
        com.hp.hpl.jena.sparql.path.Path r5;
        com.hp.hpl.jena.sparql.syntax.TripleCollector r6;
        int $i0;

        r1 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r3 := @parameter0: com.hp.hpl.jena.graph.Node;

        r4 := @parameter1: com.hp.hpl.jena.graph.Node;

        r5 := @parameter2: com.hp.hpl.jena.sparql.path.Path;

        r6 := @parameter3: com.hp.hpl.jena.sparql.syntax.TripleCollector;

        $r0 = new com.hp.hpl.jena.sparql.syntax.ElementPathBlock;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.syntax.ElementPathBlock: void <init>()>();

        $i0 = virtualinvoke $r0.<com.hp.hpl.jena.sparql.syntax.ElementPathBlock: int mark()>();

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node GraphNode(com.hp.hpl.jena.sparql.syntax.TripleCollectorMark)>($r0);

        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void insert(com.hp.hpl.jena.sparql.syntax.TripleCollectorMark,int,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node)>($r0, $i0, r3, r4, r5, $r2);

        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void insert(com.hp.hpl.jena.sparql.syntax.TripleCollector,com.hp.hpl.jena.sparql.syntax.ElementPathBlock)>(r6, $r0);

        return;
    }

    public final void TriplesSameSubjectPath(com.hp.hpl.jena.sparql.syntax.TripleCollector) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node $r2, $r4;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.syntax.ElementPathBlock $r7;
        int[] $r5;
        com.hp.hpl.jena.sparql.syntax.TripleCollector r3;
        int $i0, $i1, $i2, $i4, $i6;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r8;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r3 := @parameter0: com.hp.hpl.jena.sparql.syntax.TripleCollector;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label3;
            case 12: goto label3;
            case 13: goto label3;
            case 14: goto label3;
            case 115: goto label3;
            case 116: goto label3;
            case 139: goto label3;
            case 140: goto label3;
            case 141: goto label3;
            case 142: goto label3;
            case 143: goto label3;
            case 144: goto label3;
            case 145: goto label3;
            case 146: goto label3;
            case 147: goto label3;
            case 152: goto label3;
            case 153: goto label3;
            case 154: goto label3;
            case 155: goto label3;
            case 156: goto label4;
            case 158: goto label3;
            case 161: goto label4;
            case 163: goto label3;
            default: goto label5;
        };

     label3:
        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node VarOrTerm()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void PropertyListPathNotEmpty(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.syntax.TripleCollector)>($r4, r3);

        goto label6;

     label4:
        $r7 = new com.hp.hpl.jena.sparql.syntax.ElementPathBlock;

        specialinvoke $r7.<com.hp.hpl.jena.sparql.syntax.ElementPathBlock: void <init>()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node TriplesNodePath(com.hp.hpl.jena.sparql.syntax.TripleCollectorMark)>($r7);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void PropertyListPath(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.syntax.TripleCollector)>($r2, $r7);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void insert(com.hp.hpl.jena.sparql.syntax.TripleCollector,com.hp.hpl.jena.sparql.syntax.ElementPathBlock)>(r3, $r7);

        goto label6;

     label5:
        $r5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r5[95] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r8 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r8.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r8;

     label6:
        return;
    }

    public final void PropertyListPath(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.syntax.TripleCollector) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r3;
        com.hp.hpl.jena.sparql.syntax.TripleCollector r2;
        int $i0, $i1, $i2, $i4;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.sparql.syntax.TripleCollector;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label3;
            case 13: goto label3;
            case 14: goto label3;
            case 18: goto label3;
            case 156: goto label3;
            case 173: goto label3;
            case 185: goto label3;
            default: goto label4;
        };

     label3:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void PropertyListPathNotEmpty(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.syntax.TripleCollector)>(r1, r2);

        goto label5;

     label4:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r3[96] = $i1;

     label5:
        return;
    }

    public final void PropertyListPathNotEmpty(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.syntax.TripleCollector) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node r1, r10, r12;
        com.hp.hpl.jena.sparql.path.Path r9, r11;
        int[] $r3, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i15, $i17, $i19, $i21, $i23;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r13, $r14;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.syntax.TripleCollector r2;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.sparql.syntax.TripleCollector;

        r9 = null;

        r10 = null;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i13 = (int) -1;

        if $i0 != $i13 goto label01;

        $i7 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label02;

     label01:
        $i7 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label02:
        lookupswitch($i7)
        {
            case 9: goto label03;
            case 10: goto label03;
            case 11: goto label03;
            case 13: goto label04;
            case 14: goto label04;
            case 18: goto label03;
            case 156: goto label03;
            case 173: goto label03;
            case 185: goto label03;
            default: goto label05;
        };

     label03:
        r9 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.path.Path VerbPath()>();

        goto label06;

     label04:
        r10 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node VerbSimple()>();

        goto label06;

     label05:
        $r7 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r7[97] = $i6;

        $i15 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i15);

        $r13 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r13.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r13;

     label06:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void ObjectListPath(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.sparql.syntax.TripleCollector)>(r1, r10, r9, r2);

     label07:
        $i8 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i17 = (int) -1;

        if $i8 != $i17 goto label08;

        $i9 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label09;

     label08:
        $i9 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label09:
        lookupswitch($i9)
        {
            case 164: goto label10;
            default: goto label11;
        };

     label10:
        goto label12;

     label11:
        $r6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r6[98] = $i5;

        goto label23;

     label12:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(164);

        r11 = null;

        r12 = null;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i19 = (int) -1;

        if $i1 != $i19 goto label13;

        $i10 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label14;

     label13:
        $i10 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label14:
        lookupswitch($i10)
        {
            case 9: goto label15;
            case 10: goto label15;
            case 11: goto label15;
            case 13: goto label15;
            case 14: goto label15;
            case 18: goto label15;
            case 156: goto label15;
            case 173: goto label15;
            case 185: goto label15;
            default: goto label22;
        };

     label15:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i21 = (int) -1;

        if $i2 != $i21 goto label16;

        $i11 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label17;

     label16:
        $i11 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label17:
        lookupswitch($i11)
        {
            case 9: goto label18;
            case 10: goto label18;
            case 11: goto label18;
            case 13: goto label19;
            case 14: goto label19;
            case 18: goto label18;
            case 156: goto label18;
            case 173: goto label18;
            case 185: goto label18;
            default: goto label20;
        };

     label18:
        r11 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.path.Path VerbPath()>();

        goto label21;

     label19:
        r12 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node VerbSimple()>();

        goto label21;

     label20:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r3[99] = $i3;

        $i23 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i23);

        $r14 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r14.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r14;

     label21:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void ObjectListPath(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.sparql.syntax.TripleCollector)>(r1, r12, r11, r2);

        goto label07;

     label22:
        $r5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r5[100] = $i4;

        goto label07;

     label23:
        return;
    }

    public final com.hp.hpl.jena.sparql.path.Path VerbPath() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.path.Path $r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.path.Path Path()>();

        return $r1;
    }

    public final com.hp.hpl.jena.graph.Node VerbSimple() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.core.Var $r1;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.core.Var Var()>();

        return $r1;
    }

    public final void ObjectListPath(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.path.Path, com.hp.hpl.jena.sparql.syntax.TripleCollector) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node r1, r2;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.path.Path r3;
        int[] $r5;
        com.hp.hpl.jena.sparql.syntax.TripleCollector r4;
        int $i0, $i1, $i2, $i4;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: com.hp.hpl.jena.sparql.path.Path;

        r4 := @parameter3: com.hp.hpl.jena.sparql.syntax.TripleCollector;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void ObjectPath(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.sparql.syntax.TripleCollector)>(r1, r2, r3, r4);

     label1:
        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label2;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label3;

     label2:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label3:
        lookupswitch($i2)
        {
            case 165: goto label4;
            default: goto label5;
        };

     label4:
        goto label6;

     label5:
        $r5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r5[101] = $i1;

        goto label7;

     label6:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(165);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void ObjectPath(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.sparql.syntax.TripleCollector)>(r1, r2, r3, r4);

        goto label1;

     label7:
        return;
    }

    public final void ObjectPath(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.path.Path, com.hp.hpl.jena.sparql.syntax.TripleCollector) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node $r2, r3, r4;
        com.hp.hpl.jena.sparql.syntax.ElementPathBlock $r0;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r1;
        com.hp.hpl.jena.sparql.path.Path r5;
        com.hp.hpl.jena.sparql.syntax.TripleCollector r6;
        int $i0;

        r1 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r3 := @parameter0: com.hp.hpl.jena.graph.Node;

        r4 := @parameter1: com.hp.hpl.jena.graph.Node;

        r5 := @parameter2: com.hp.hpl.jena.sparql.path.Path;

        r6 := @parameter3: com.hp.hpl.jena.sparql.syntax.TripleCollector;

        $r0 = new com.hp.hpl.jena.sparql.syntax.ElementPathBlock;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.syntax.ElementPathBlock: void <init>()>();

        $i0 = virtualinvoke $r0.<com.hp.hpl.jena.sparql.syntax.ElementPathBlock: int mark()>();

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node GraphNodePath(com.hp.hpl.jena.sparql.syntax.TripleCollectorMark)>($r0);

        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void insert(com.hp.hpl.jena.sparql.syntax.TripleCollectorMark,int,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node)>($r0, $i0, r3, r4, r5, $r2);

        virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void insert(com.hp.hpl.jena.sparql.syntax.TripleCollector,com.hp.hpl.jena.sparql.syntax.ElementPathBlock)>(r6, $r0);

        return;
    }

    public final com.hp.hpl.jena.sparql.path.Path Path() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.path.Path $r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.path.Path PathAlternative()>();

        return $r1;
    }

    public final com.hp.hpl.jena.sparql.path.Path PathAlternative() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.path.Path $r1, r3;
        int[] $r2;
        int $i0, $i1, $i2, $i4;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.path.Path PathSequence()>();

     label1:
        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label2;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label3;

     label2:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label3:
        lookupswitch($i2)
        {
            case 184: goto label4;
            default: goto label5;
        };

     label4:
        goto label6;

     label5:
        $r2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r2[102] = $i1;

        goto label7;

     label6:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(184);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.path.Path PathSequence()>();

        r3 = staticinvoke <com.hp.hpl.jena.sparql.path.PathFactory: com.hp.hpl.jena.sparql.path.Path pathAlt(com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.sparql.path.Path)>(r3, $r1);

        goto label1;

     label7:
        return r3;
    }

    public final com.hp.hpl.jena.sparql.path.Path PathSequence() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.path.Path $r1, r3;
        int[] $r2;
        int $i0, $i1, $i2, $i4;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.path.Path PathEltOrInverse()>();

     label1:
        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label2;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label3;

     label2:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label3:
        lookupswitch($i2)
        {
            case 181: goto label4;
            default: goto label5;
        };

     label4:
        goto label6;

     label5:
        $r2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r2[103] = $i1;

        goto label7;

     label6:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(181);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.path.Path PathEltOrInverse()>();

        r3 = staticinvoke <com.hp.hpl.jena.sparql.path.PathFactory: com.hp.hpl.jena.sparql.path.Path pathSeq(com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.sparql.path.Path)>(r3, $r1);

        goto label1;

     label7:
        return r3;
    }

    public final com.hp.hpl.jena.sparql.path.Path PathElt() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.path.Path $r1, r3;
        int[] $r2;
        int $i0, $i1, $i2, $i4;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.path.Path PathPrimary()>();

        r3 = $r1;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 178: goto label3;
            case 180: goto label3;
            case 188: goto label3;
            default: goto label4;
        };

     label3:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.path.Path PathMod(com.hp.hpl.jena.sparql.path.Path)>($r1);

        goto label5;

     label4:
        $r2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r2[104] = $i1;

     label5:
        return r3;
    }

    public final com.hp.hpl.jena.sparql.path.Path PathEltOrInverse() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.path.Path $r1, r4;
        int[] $r2;
        int $i0, $i1, $i2, $i4, $i6;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r5;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label3;
            case 18: goto label3;
            case 156: goto label3;
            case 173: goto label3;
            case 185: goto label4;
            default: goto label5;
        };

     label3:
        r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.path.Path PathElt()>();

        goto label6;

     label4:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(185);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.path.Path PathElt()>();

        r4 = staticinvoke <com.hp.hpl.jena.sparql.path.PathFactory: com.hp.hpl.jena.sparql.path.Path pathInverse(com.hp.hpl.jena.sparql.path.Path)>($r1);

        goto label6;

     label5:
        $r2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r2[105] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r5 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r5.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r5;

     label6:
        return r4;
    }

    public final com.hp.hpl.jena.sparql.path.Path PathMod(com.hp.hpl.jena.sparql.path.Path) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.path.Path r1, $r2, $r3, $r4;
        int[] $r5;
        int $i0, $i1, $i2, $i4, $i6;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r7;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.Path;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 178: goto label5;
            case 180: goto label4;
            case 188: goto label3;
            default: goto label6;
        };

     label3:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(188);

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.path.PathFactory: com.hp.hpl.jena.sparql.path.Path pathZeroOrOne(com.hp.hpl.jena.sparql.path.Path)>(r1);

        return $r2;

     label4:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(180);

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.path.PathFactory: com.hp.hpl.jena.sparql.path.Path pathZeroOrMore1(com.hp.hpl.jena.sparql.path.Path)>(r1);

        return $r3;

     label5:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(178);

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.path.PathFactory: com.hp.hpl.jena.sparql.path.Path pathOneOrMore1(com.hp.hpl.jena.sparql.path.Path)>(r1);

        return $r4;

     label6:
        $r5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r5[106] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r7 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r7.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r7;
    }

    public final com.hp.hpl.jena.sparql.path.Path PathPrimary() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node $r1, $r3;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.path.Path r6;
        int[] $r4;
        int $i0, $i1, $i2, $i4, $i6;
        java.lang.String $r2;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r7;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label3;
            case 18: goto label4;
            case 156: goto label6;
            case 173: goto label5;
            default: goto label7;
        };

     label3:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String iri()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createNode(java.lang.String)>($r2);

        r6 = staticinvoke <com.hp.hpl.jena.sparql.path.PathFactory: com.hp.hpl.jena.sparql.path.Path pathLink(com.hp.hpl.jena.graph.Node)>($r3);

        goto label8;

     label4:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(18);

        $r1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node nRDFtype>;

        r6 = staticinvoke <com.hp.hpl.jena.sparql.path.PathFactory: com.hp.hpl.jena.sparql.path.Path pathLink(com.hp.hpl.jena.graph.Node)>($r1);

        goto label8;

     label5:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(173);

        r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.path.Path PathNegatedPropertySet()>();

        goto label8;

     label6:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.path.Path Path()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        goto label8;

     label7:
        $r4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r4[107] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r7 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r7.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r7;

     label8:
        return r6;
    }

    public final com.hp.hpl.jena.sparql.path.Path PathNegatedPropertySet() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.path.P_Path0 $r2, $r3, $r6;
        com.hp.hpl.jena.sparql.path.P_NegPropSet $r9;
        int[] $r4, $r5, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i12, $i14, $i16;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r10;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r1;

        r1 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r9 = new com.hp.hpl.jena.sparql.path.P_NegPropSet;

        specialinvoke $r9.<com.hp.hpl.jena.sparql.path.P_NegPropSet: void <init>()>();

        $i0 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i10 = (int) -1;

        if $i0 != $i10 goto label01;

        $i6 = specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label02;

     label01:
        $i6 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label02:
        lookupswitch($i6)
        {
            case 9: goto label03;
            case 10: goto label03;
            case 11: goto label03;
            case 18: goto label03;
            case 156: goto label04;
            case 185: goto label03;
            default: goto label16;
        };

     label03:
        $r6 = virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.path.P_Path0 PathOneInPropertySet()>();

        virtualinvoke $r9.<com.hp.hpl.jena.sparql.path.P_NegPropSet: void add(com.hp.hpl.jena.sparql.path.P_Path0)>($r6);

        goto label17;

     label04:
        specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $i1 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i12 = (int) -1;

        if $i1 != $i12 goto label05;

        $i7 = specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label06;

     label05:
        $i7 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label06:
        lookupswitch($i7)
        {
            case 9: goto label07;
            case 10: goto label07;
            case 11: goto label07;
            case 18: goto label07;
            case 185: goto label07;
            default: goto label14;
        };

     label07:
        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.path.P_Path0 PathOneInPropertySet()>();

        virtualinvoke $r9.<com.hp.hpl.jena.sparql.path.P_NegPropSet: void add(com.hp.hpl.jena.sparql.path.P_Path0)>($r2);

     label08:
        $i2 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i14 = (int) -1;

        if $i2 != $i14 goto label09;

        $i8 = specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label10;

     label09:
        $i8 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label10:
        lookupswitch($i8)
        {
            case 184: goto label11;
            default: goto label12;
        };

     label11:
        goto label13;

     label12:
        $r4 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i3 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r4[108] = $i3;

        goto label15;

     label13:
        specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(184);

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.path.P_Path0 PathOneInPropertySet()>();

        virtualinvoke $r9.<com.hp.hpl.jena.sparql.path.P_NegPropSet: void add(com.hp.hpl.jena.sparql.path.P_Path0)>($r3);

        goto label08;

     label14:
        $r5 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i4 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r5[109] = $i4;

     label15:
        specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        goto label17;

     label16:
        $r7 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i5 = r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r7[110] = $i5;

        $i16 = (int) -1;

        specialinvoke r1.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i16);

        $r10 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r10.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r10;

     label17:
        return $r9;
    }

    public final com.hp.hpl.jena.sparql.path.P_Path0 PathOneInPropertySet() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node $r2, $r4, $r9, $r11;
        int[] $r6, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i11, $i13;
        java.lang.String $r3, $r10;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r19, $r20;
        com.hp.hpl.jena.sparql.path.P_Link $r15, $r16;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.path.P_ReverseLink $r17, $r18;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i7 = (int) -1;

        if $i0 != $i7 goto label01;

        $i4 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label02;

     label01:
        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label02:
        lookupswitch($i4)
        {
            case 9: goto label03;
            case 10: goto label03;
            case 11: goto label03;
            case 18: goto label04;
            case 185: goto label05;
            default: goto label11;
        };

     label03:
        $r10 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String iri()>();

        $r11 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createNode(java.lang.String)>($r10);

        $r15 = new com.hp.hpl.jena.sparql.path.P_Link;

        specialinvoke $r15.<com.hp.hpl.jena.sparql.path.P_Link: void <init>(com.hp.hpl.jena.graph.Node)>($r11);

        return $r15;

     label04:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(18);

        $r16 = new com.hp.hpl.jena.sparql.path.P_Link;

        $r9 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node nRDFtype>;

        specialinvoke $r16.<com.hp.hpl.jena.sparql.path.P_Link: void <init>(com.hp.hpl.jena.graph.Node)>($r9);

        return $r16;

     label05:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(185);

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i9 = (int) -1;

        if $i1 != $i9 goto label06;

        $i5 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label07;

     label06:
        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label07:
        tableswitch($i5)
        {
            case 9: goto label08;
            case 10: goto label08;
            case 11: goto label08;
            case 12: goto label10;
            case 13: goto label10;
            case 14: goto label10;
            case 15: goto label10;
            case 16: goto label10;
            case 17: goto label10;
            case 18: goto label09;
            default: goto label10;
        };

     label08:
        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String iri()>();

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createNode(java.lang.String)>($r3);

        $r17 = new com.hp.hpl.jena.sparql.path.P_ReverseLink;

        specialinvoke $r17.<com.hp.hpl.jena.sparql.path.P_ReverseLink: void <init>(com.hp.hpl.jena.graph.Node)>($r4);

        return $r17;

     label09:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(18);

        $r18 = new com.hp.hpl.jena.sparql.path.P_ReverseLink;

        $r2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node nRDFtype>;

        specialinvoke $r18.<com.hp.hpl.jena.sparql.path.P_ReverseLink: void <init>(com.hp.hpl.jena.graph.Node)>($r2);

        return $r18;

     label10:
        $r6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r6[111] = $i2;

        $i11 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i11);

        $r19 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r19.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r19;

     label11:
        $r13 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r13[112] = $i3;

        $i13 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i13);

        $r20 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r20.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r20;
    }

    public final long Integer() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r1;
        long $l0;
        java.lang.String $r2;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(139);

        $r2 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: java.lang.String image>;

        $l0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: long integerValue(java.lang.String)>($r2);

        return $l0;
    }

    public final com.hp.hpl.jena.graph.Node TriplesNode(com.hp.hpl.jena.sparql.syntax.TripleCollectorMark) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.syntax.TripleCollectorMark r1;
        com.hp.hpl.jena.graph.Node $r2, $r3;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r4;
        int $i0, $i1, $i2, $i4, $i6;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r6;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.TripleCollectorMark;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 156: goto label3;
            case 161: goto label4;
            default: goto label5;
        };

     label3:
        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node Collection(com.hp.hpl.jena.sparql.syntax.TripleCollectorMark)>(r1);

        return $r3;

     label4:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node BlankNodePropertyList(com.hp.hpl.jena.sparql.syntax.TripleCollector)>(r1);

        return $r2;

     label5:
        $r4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r4[113] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r6 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r6.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r6;
    }

    public final com.hp.hpl.jena.graph.Node BlankNodePropertyList(com.hp.hpl.jena.sparql.syntax.TripleCollector) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.syntax.TripleCollector r3;
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r1;
        int $i0, $i1;
        com.hp.hpl.jena.graph.Node $r2;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r3 := @parameter0: com.hp.hpl.jena.sparql.syntax.TripleCollector;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(161);

        $i1 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        $i0 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createBNode(int,int)>($i1, $i0);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void PropertyListNotEmpty(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.syntax.TripleCollector)>($r2, r3);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(162);

        return $r2;
    }

    public final com.hp.hpl.jena.graph.Node TriplesNodePath(com.hp.hpl.jena.sparql.syntax.TripleCollectorMark) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.syntax.TripleCollectorMark r1;
        com.hp.hpl.jena.graph.Node $r2, $r3;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r4;
        int $i0, $i1, $i2, $i4, $i6;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r6;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.TripleCollectorMark;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 156: goto label3;
            case 161: goto label4;
            default: goto label5;
        };

     label3:
        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node CollectionPath(com.hp.hpl.jena.sparql.syntax.TripleCollectorMark)>(r1);

        return $r3;

     label4:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node BlankNodePropertyListPath(com.hp.hpl.jena.sparql.syntax.TripleCollector)>(r1);

        return $r2;

     label5:
        $r4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r4[114] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r6 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r6.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r6;
    }

    public final com.hp.hpl.jena.graph.Node BlankNodePropertyListPath(com.hp.hpl.jena.sparql.syntax.TripleCollector) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.syntax.TripleCollector r3;
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r1;
        int $i0, $i1;
        com.hp.hpl.jena.graph.Node $r2;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r3 := @parameter0: com.hp.hpl.jena.sparql.syntax.TripleCollector;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(161);

        $i1 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        $i0 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createBNode(int,int)>($i1, $i0);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void PropertyListPathNotEmpty(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.syntax.TripleCollector)>($r2, r3);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(162);

        return $r2;
    }

    public final com.hp.hpl.jena.graph.Node Collection(com.hp.hpl.jena.sparql.syntax.TripleCollectorMark) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r1;
        com.hp.hpl.jena.graph.Node $r2, $r3, $r5, $r6, $r8, $r9, $r10, r11, r12;
        int[] $r7;
        int i0, i1, $i2, $i3, $i4, $i5, $i7;
        com.hp.hpl.jena.sparql.syntax.TripleCollectorMark r4;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r4 := @parameter0: com.hp.hpl.jena.sparql.syntax.TripleCollectorMark;

        r11 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node nRDFnil>;

        r12 = null;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        i0 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        i1 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

     label01:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createListNode(int,int)>(i0, i1);

        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node nRDFnil>;

        if r11 != $r3 goto label02;

        r11 = $r2;

     label02:
        if r12 == null goto label03;

        $r10 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node nRDFrest>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void insert(com.hp.hpl.jena.sparql.syntax.TripleCollector,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r4, r12, $r10, $r2);

     label03:
        $i2 = interfaceinvoke r4.<com.hp.hpl.jena.sparql.syntax.TripleCollectorMark: int mark()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node GraphNode(com.hp.hpl.jena.sparql.syntax.TripleCollectorMark)>(r4);

        $r6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node nRDFfirst>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void insert(com.hp.hpl.jena.sparql.syntax.TripleCollectorMark,int,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r4, $i2, $r2, $r6, $r5);

        r12 = $r2;

        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i7 = (int) -1;

        if $i3 != $i7 goto label04;

        $i5 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label05;

     label04:
        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label05:
        lookupswitch($i5)
        {
            case 9: goto label06;
            case 10: goto label06;
            case 11: goto label06;
            case 12: goto label06;
            case 13: goto label06;
            case 14: goto label06;
            case 115: goto label06;
            case 116: goto label06;
            case 139: goto label06;
            case 140: goto label06;
            case 141: goto label06;
            case 142: goto label06;
            case 143: goto label06;
            case 144: goto label06;
            case 145: goto label06;
            case 146: goto label06;
            case 147: goto label06;
            case 152: goto label06;
            case 153: goto label06;
            case 154: goto label06;
            case 155: goto label06;
            case 156: goto label06;
            case 158: goto label06;
            case 161: goto label06;
            case 163: goto label06;
            default: goto label07;
        };

     label06:
        goto label08;

     label07:
        $r7 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r7[115] = $i4;

        goto label09;

     label08:
        goto label01;

     label09:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        if $r2 == null goto label10;

        $r9 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node nRDFrest>;

        $r8 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node nRDFnil>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void insert(com.hp.hpl.jena.sparql.syntax.TripleCollector,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r4, $r2, $r9, $r8);

     label10:
        return r11;
    }

    public final com.hp.hpl.jena.graph.Node CollectionPath(com.hp.hpl.jena.sparql.syntax.TripleCollectorMark) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r1;
        com.hp.hpl.jena.graph.Node $r2, $r3, $r5, $r6, $r8, $r9, $r10, r11, r12;
        int[] $r7;
        int i0, i1, $i2, $i3, $i4, $i5, $i7;
        com.hp.hpl.jena.sparql.syntax.TripleCollectorMark r4;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r4 := @parameter0: com.hp.hpl.jena.sparql.syntax.TripleCollectorMark;

        r11 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node nRDFnil>;

        r12 = null;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        i0 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        i1 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

     label01:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createListNode(int,int)>(i0, i1);

        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node nRDFnil>;

        if r11 != $r3 goto label02;

        r11 = $r2;

     label02:
        if r12 == null goto label03;

        $r10 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node nRDFrest>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void insert(com.hp.hpl.jena.sparql.syntax.TripleCollector,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r4, r12, $r10, $r2);

     label03:
        $i2 = interfaceinvoke r4.<com.hp.hpl.jena.sparql.syntax.TripleCollectorMark: int mark()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node GraphNodePath(com.hp.hpl.jena.sparql.syntax.TripleCollectorMark)>(r4);

        $r6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node nRDFfirst>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void insert(com.hp.hpl.jena.sparql.syntax.TripleCollectorMark,int,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r4, $i2, $r2, $r6, $r5);

        r12 = $r2;

        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i7 = (int) -1;

        if $i3 != $i7 goto label04;

        $i5 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label05;

     label04:
        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label05:
        lookupswitch($i5)
        {
            case 9: goto label06;
            case 10: goto label06;
            case 11: goto label06;
            case 12: goto label06;
            case 13: goto label06;
            case 14: goto label06;
            case 115: goto label06;
            case 116: goto label06;
            case 139: goto label06;
            case 140: goto label06;
            case 141: goto label06;
            case 142: goto label06;
            case 143: goto label06;
            case 144: goto label06;
            case 145: goto label06;
            case 146: goto label06;
            case 147: goto label06;
            case 152: goto label06;
            case 153: goto label06;
            case 154: goto label06;
            case 155: goto label06;
            case 156: goto label06;
            case 158: goto label06;
            case 161: goto label06;
            case 163: goto label06;
            default: goto label07;
        };

     label06:
        goto label08;

     label07:
        $r7 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r7[116] = $i4;

        goto label09;

     label08:
        goto label01;

     label09:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        if $r2 == null goto label10;

        $r9 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node nRDFrest>;

        $r8 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node nRDFnil>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void insert(com.hp.hpl.jena.sparql.syntax.TripleCollector,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r4, $r2, $r9, $r8);

     label10:
        return r11;
    }

    public final com.hp.hpl.jena.graph.Node GraphNode(com.hp.hpl.jena.sparql.syntax.TripleCollectorMark) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.syntax.TripleCollectorMark r1;
        com.hp.hpl.jena.graph.Node $r2, $r3;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r4;
        int $i0, $i1, $i2, $i4, $i6;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r6;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.TripleCollectorMark;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label3;
            case 12: goto label3;
            case 13: goto label3;
            case 14: goto label3;
            case 115: goto label3;
            case 116: goto label3;
            case 139: goto label3;
            case 140: goto label3;
            case 141: goto label3;
            case 142: goto label3;
            case 143: goto label3;
            case 144: goto label3;
            case 145: goto label3;
            case 146: goto label3;
            case 147: goto label3;
            case 152: goto label3;
            case 153: goto label3;
            case 154: goto label3;
            case 155: goto label3;
            case 156: goto label4;
            case 158: goto label3;
            case 161: goto label4;
            case 163: goto label3;
            default: goto label5;
        };

     label3:
        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node VarOrTerm()>();

        return $r3;

     label4:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node TriplesNode(com.hp.hpl.jena.sparql.syntax.TripleCollectorMark)>(r1);

        return $r2;

     label5:
        $r4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r4[117] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r6 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r6.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r6;
    }

    public final com.hp.hpl.jena.graph.Node GraphNodePath(com.hp.hpl.jena.sparql.syntax.TripleCollectorMark) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.syntax.TripleCollectorMark r1;
        com.hp.hpl.jena.graph.Node $r2, $r3;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r4;
        int $i0, $i1, $i2, $i4, $i6;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r6;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r1 := @parameter0: com.hp.hpl.jena.sparql.syntax.TripleCollectorMark;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label3;
            case 12: goto label3;
            case 13: goto label3;
            case 14: goto label3;
            case 115: goto label3;
            case 116: goto label3;
            case 139: goto label3;
            case 140: goto label3;
            case 141: goto label3;
            case 142: goto label3;
            case 143: goto label3;
            case 144: goto label3;
            case 145: goto label3;
            case 146: goto label3;
            case 147: goto label3;
            case 152: goto label3;
            case 153: goto label3;
            case 154: goto label3;
            case 155: goto label3;
            case 156: goto label4;
            case 158: goto label3;
            case 161: goto label4;
            case 163: goto label3;
            default: goto label5;
        };

     label3:
        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node VarOrTerm()>();

        return $r3;

     label4:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node TriplesNodePath(com.hp.hpl.jena.sparql.syntax.TripleCollectorMark)>(r1);

        return $r2;

     label5:
        $r4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r4[118] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r6 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r6.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r6;
    }

    public final com.hp.hpl.jena.graph.Node VarOrTerm() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node r3;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r1;
        int $i0, $i1, $i2, $i4, $i6;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r4;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 9: goto label4;
            case 10: goto label4;
            case 11: goto label4;
            case 12: goto label4;
            case 13: goto label3;
            case 14: goto label3;
            case 115: goto label4;
            case 116: goto label4;
            case 139: goto label4;
            case 140: goto label4;
            case 141: goto label4;
            case 142: goto label4;
            case 143: goto label4;
            case 144: goto label4;
            case 145: goto label4;
            case 146: goto label4;
            case 147: goto label4;
            case 152: goto label4;
            case 153: goto label4;
            case 154: goto label4;
            case 155: goto label4;
            case 158: goto label4;
            case 163: goto label4;
            default: goto label5;
        };

     label3:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.core.Var Var()>();

        goto label6;

     label4:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node GraphTerm()>();

        goto label6;

     label5:
        $r1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r1[119] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r4 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r4.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r4;

     label6:
        return r3;
    }

    public final com.hp.hpl.jena.graph.Node VarOrIri() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node r4;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r2;
        int $i0, $i1, $i2, $i4, $i6;
        java.lang.String $r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r5;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        tableswitch($i2)
        {
            case 9: goto label4;
            case 10: goto label4;
            case 11: goto label4;
            case 12: goto label5;
            case 13: goto label3;
            case 14: goto label3;
            default: goto label5;
        };

     label3:
        r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.core.Var Var()>();

        goto label6;

     label4:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String iri()>();

        r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createNode(java.lang.String)>($r1);

        goto label6;

     label5:
        $r2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r2[120] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r5 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r5.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r5;

     label6:
        return r4;
    }

    public final com.hp.hpl.jena.sparql.core.Var Var() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.Token r5;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.core.Var $r2;
        int[] $r3;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i8;
        java.lang.String $r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r6;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i6 = (int) -1;

        if $i0 != $i6 goto label1;

        $i4 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i4)
        {
            case 13: goto label3;
            case 14: goto label4;
            default: goto label5;
        };

     label3:
        r5 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(13);

        goto label6;

     label4:
        r5 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(14);

        goto label6;

     label5:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r3[121] = $i3;

        $i8 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i8);

        $r6 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r6.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r6;

     label6:
        $r1 = r5.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: java.lang.String image>;

        $i2 = r5.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        $i1 = r5.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.core.Var createVariable(java.lang.String,int,int)>($r1, $i2, $i1);

        return $r2;
    }

    public final com.hp.hpl.jena.graph.Node GraphTerm() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node $r1, $r2, $r3, $r4, $r5, $r7;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r8;
        int $i0, $i1, $i2, $i4, $i6;
        java.lang.String $r6;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r10;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label3;
            case 12: goto label7;
            case 115: goto label6;
            case 116: goto label6;
            case 139: goto label5;
            case 140: goto label5;
            case 141: goto label5;
            case 142: goto label5;
            case 143: goto label5;
            case 144: goto label5;
            case 145: goto label5;
            case 146: goto label5;
            case 147: goto label5;
            case 152: goto label4;
            case 153: goto label4;
            case 154: goto label4;
            case 155: goto label4;
            case 158: goto label8;
            case 163: goto label7;
            default: goto label9;
        };

     label3:
        $r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String iri()>();

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createNode(java.lang.String)>($r6);

        return $r7;

     label4:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node RDFLiteral()>();

        return $r2;

     label5:
        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node NumericLiteral()>();

        return $r3;

     label6:
        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node BooleanLiteral()>();

        return $r4;

     label7:
        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node BlankNode()>();

        return $r5;

     label8:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(158);

        $r1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node nRDFnil>;

        return $r1;

     label9:
        $r8 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r8[122] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r10 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r10.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r10;
    }

    public final com.hp.hpl.jena.sparql.expr.Expr Expression() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.expr.Expr $r1;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr ConditionalOrExpression()>();

        return $r1;
    }

    public final com.hp.hpl.jena.sparql.expr.Expr ConditionalOrExpression() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.expr.E_LogicalOr $r5;
        com.hp.hpl.jena.sparql.expr.Expr $r1, r4;
        int[] $r3;
        int $i0, $i1, $i2, $i4;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr ConditionalAndExpression()>();

     label1:
        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label2;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label3;

     label2:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label3:
        lookupswitch($i2)
        {
            case 176: goto label4;
            default: goto label5;
        };

     label4:
        goto label6;

     label5:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r3[123] = $i1;

        goto label7;

     label6:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(176);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr ConditionalAndExpression()>();

        $r5 = new com.hp.hpl.jena.sparql.expr.E_LogicalOr;

        specialinvoke $r5.<com.hp.hpl.jena.sparql.expr.E_LogicalOr: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>(r4, $r1);

        r4 = $r5;

        goto label1;

     label7:
        return r4;
    }

    public final com.hp.hpl.jena.sparql.expr.Expr ConditionalAndExpression() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.expr.E_LogicalAnd $r5;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.expr.Expr $r1, r4;
        int[] $r3;
        int $i0, $i1, $i2, $i4;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr ValueLogical()>();

     label1:
        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label2;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label3;

     label2:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label3:
        lookupswitch($i2)
        {
            case 177: goto label4;
            default: goto label5;
        };

     label4:
        goto label6;

     label5:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r3[124] = $i1;

        goto label7;

     label6:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(177);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr ValueLogical()>();

        $r5 = new com.hp.hpl.jena.sparql.expr.E_LogicalAnd;

        specialinvoke $r5.<com.hp.hpl.jena.sparql.expr.E_LogicalAnd: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>(r4, $r1);

        r4 = $r5;

        goto label1;

     label7:
        return r4;
    }

    public final com.hp.hpl.jena.sparql.expr.Expr ValueLogical() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.expr.Expr $r1;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr RelationalExpression()>();

        return $r1;
    }

    public final com.hp.hpl.jena.sparql.expr.Expr RelationalExpression() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.expr.E_GreaterThanOrEqual $r27;
        com.hp.hpl.jena.sparql.expr.E_NotOneOf $r29;
        com.hp.hpl.jena.sparql.expr.E_NotEquals $r23;
        com.hp.hpl.jena.sparql.expr.Expr $r1, $r2, $r4, $r6, $r8, $r10, $r12, r21;
        com.hp.hpl.jena.sparql.expr.E_GreaterThan $r25;
        com.hp.hpl.jena.sparql.expr.ExprList $r14, $r16;
        int[] $r18, $r20;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i11;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r30;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.expr.E_OneOf $r28;
        com.hp.hpl.jena.sparql.expr.E_Equals $r22;
        com.hp.hpl.jena.sparql.expr.E_LessThan $r24;
        com.hp.hpl.jena.sparql.expr.E_LessThanOrEqual $r26;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr NumericExpression()>();

        r21 = $r1;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i7 = (int) -1;

        if $i0 != $i7 goto label01;

        $i4 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label02;

     label01:
        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label02:
        lookupswitch($i4)
        {
            case 46: goto label03;
            case 63: goto label03;
            case 167: goto label03;
            case 168: goto label03;
            case 169: goto label03;
            case 170: goto label03;
            case 171: goto label03;
            case 172: goto label03;
            default: goto label15;
        };

     label03:
        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i9 = (int) -1;

        if $i1 != $i9 goto label04;

        $i5 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label05;

     label04:
        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label05:
        lookupswitch($i5)
        {
            case 46: goto label13;
            case 63: goto label12;
            case 167: goto label06;
            case 168: goto label07;
            case 169: goto label09;
            case 170: goto label08;
            case 171: goto label10;
            case 172: goto label11;
            default: goto label14;
        };

     label06:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(167);

        $r12 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr NumericExpression()>();

        $r22 = new com.hp.hpl.jena.sparql.expr.E_Equals;

        specialinvoke $r22.<com.hp.hpl.jena.sparql.expr.E_Equals: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>($r1, $r12);

        r21 = $r22;

        goto label16;

     label07:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(168);

        $r10 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr NumericExpression()>();

        $r23 = new com.hp.hpl.jena.sparql.expr.E_NotEquals;

        specialinvoke $r23.<com.hp.hpl.jena.sparql.expr.E_NotEquals: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>($r1, $r10);

        r21 = $r23;

        goto label16;

     label08:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(170);

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr NumericExpression()>();

        $r24 = new com.hp.hpl.jena.sparql.expr.E_LessThan;

        specialinvoke $r24.<com.hp.hpl.jena.sparql.expr.E_LessThan: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>($r1, $r6);

        r21 = $r24;

        goto label16;

     label09:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(169);

        $r8 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr NumericExpression()>();

        $r25 = new com.hp.hpl.jena.sparql.expr.E_GreaterThan;

        specialinvoke $r25.<com.hp.hpl.jena.sparql.expr.E_GreaterThan: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>($r1, $r8);

        r21 = $r25;

        goto label16;

     label10:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(171);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr NumericExpression()>();

        $r26 = new com.hp.hpl.jena.sparql.expr.E_LessThanOrEqual;

        specialinvoke $r26.<com.hp.hpl.jena.sparql.expr.E_LessThanOrEqual: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>($r1, $r4);

        r21 = $r26;

        goto label16;

     label11:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(172);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr NumericExpression()>();

        $r27 = new com.hp.hpl.jena.sparql.expr.E_GreaterThanOrEqual;

        specialinvoke $r27.<com.hp.hpl.jena.sparql.expr.E_GreaterThanOrEqual: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>($r1, $r2);

        r21 = $r27;

        goto label16;

     label12:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(63);

        $r14 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.ExprList ExpressionList()>();

        $r28 = new com.hp.hpl.jena.sparql.expr.E_OneOf;

        specialinvoke $r28.<com.hp.hpl.jena.sparql.expr.E_OneOf: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.ExprList)>($r1, $r14);

        r21 = $r28;

        goto label16;

     label13:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(46);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(63);

        $r16 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.ExprList ExpressionList()>();

        $r29 = new com.hp.hpl.jena.sparql.expr.E_NotOneOf;

        specialinvoke $r29.<com.hp.hpl.jena.sparql.expr.E_NotOneOf: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.ExprList)>($r1, $r16);

        r21 = $r29;

        goto label16;

     label14:
        $r18 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r18[125] = $i2;

        $i11 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i11);

        $r30 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r30.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r30;

     label15:
        $r20 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r20[126] = $i3;

     label16:
        return r21;
    }

    public final com.hp.hpl.jena.sparql.expr.Expr NumericExpression() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.expr.Expr $r1;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr AdditiveExpression()>();

        return $r1;
    }

    public final com.hp.hpl.jena.sparql.expr.Expr AdditiveExpression() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.expr.E_Add $r25, $r31;
        com.hp.hpl.jena.graph.Node $r5, $r6, $r16, $r17;
        com.hp.hpl.jena.sparql.expr.E_Divide $r29;
        com.hp.hpl.jena.sparql.expr.Expr $r1, $r3, $r7, $r9, r23, r24;
        int[] $r11, $r13, $r18, $r20, $r22;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r27, $r30, $r33;
        boolean z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i18, $i20, $i22, $i24, $i26, $i28, $i30;
        com.hp.hpl.jena.sparql.expr.E_Subtract $r26, $r32;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.expr.E_Multiply $r28;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r23 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr MultiplicativeExpression()>();

     label01:
        $i8 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i16 = (int) -1;

        if $i8 != $i16 goto label02;

        $i9 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label03;

     label02:
        $i9 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label03:
        lookupswitch($i9)
        {
            case 142: goto label04;
            case 143: goto label04;
            case 144: goto label04;
            case 145: goto label04;
            case 146: goto label04;
            case 147: goto label04;
            case 178: goto label04;
            case 179: goto label04;
            default: goto label05;
        };

     label04:
        goto label06;

     label05:
        $r22 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i7 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r22[127] = $i7;

        goto label31;

     label06:
        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i18 = (int) -1;

        if $i0 != $i18 goto label07;

        $i10 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label08;

     label07:
        $i10 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label08:
        lookupswitch($i10)
        {
            case 142: goto label11;
            case 143: goto label11;
            case 144: goto label11;
            case 145: goto label11;
            case 146: goto label11;
            case 147: goto label11;
            case 178: goto label09;
            case 179: goto label10;
            default: goto label30;
        };

     label09:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(178);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr MultiplicativeExpression()>();

        $r25 = new com.hp.hpl.jena.sparql.expr.E_Add;

        specialinvoke $r25.<com.hp.hpl.jena.sparql.expr.E_Add: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>(r23, $r3);

        r23 = $r25;

        goto label01;

     label10:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(179);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr MultiplicativeExpression()>();

        $r26 = new com.hp.hpl.jena.sparql.expr.E_Subtract;

        specialinvoke $r26.<com.hp.hpl.jena.sparql.expr.E_Subtract: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>(r23, $r1);

        r23 = $r26;

        goto label01;

     label11:
        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i20 = (int) -1;

        if $i1 != $i20 goto label12;

        $i11 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label13;

     label12:
        $i11 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label13:
        tableswitch($i11)
        {
            case 142: goto label14;
            case 143: goto label14;
            case 144: goto label14;
            case 145: goto label15;
            case 146: goto label15;
            case 147: goto label15;
            default: goto label16;
        };

     label14:
        $r16 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node NumericLiteralPositive()>();

        $r17 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node stripSign(com.hp.hpl.jena.graph.Node)>($r16);

        r24 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr asExpr(com.hp.hpl.jena.graph.Node)>($r17);

        z0 = 1;

        goto label17;

     label15:
        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node NumericLiteralNegative()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node stripSign(com.hp.hpl.jena.graph.Node)>($r5);

        r24 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr asExpr(com.hp.hpl.jena.graph.Node)>($r6);

        z0 = 0;

        goto label17;

     label16:
        $r18 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r18[128] = $i5;

        $i22 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i22);

        $r27 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r27.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r27;

     label17:
        $i12 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i24 = (int) -1;

        if $i12 != $i24 goto label18;

        $i13 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label19;

     label18:
        $i13 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label19:
        lookupswitch($i13)
        {
            case 180: goto label20;
            case 181: goto label20;
            default: goto label21;
        };

     label20:
        goto label22;

     label21:
        $r13 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r13[129] = $i4;

        goto label28;

     label22:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i26 = (int) -1;

        if $i2 != $i26 goto label23;

        $i14 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label24;

     label23:
        $i14 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label24:
        lookupswitch($i14)
        {
            case 180: goto label25;
            case 181: goto label26;
            default: goto label27;
        };

     label25:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(180);

        $r9 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr UnaryExpression()>();

        $r28 = new com.hp.hpl.jena.sparql.expr.E_Multiply;

        specialinvoke $r28.<com.hp.hpl.jena.sparql.expr.E_Multiply: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>(r24, $r9);

        r24 = $r28;

        goto label17;

     label26:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(181);

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr UnaryExpression()>();

        $r29 = new com.hp.hpl.jena.sparql.expr.E_Divide;

        specialinvoke $r29.<com.hp.hpl.jena.sparql.expr.E_Divide: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>(r24, $r7);

        r24 = $r29;

        goto label17;

     label27:
        $r11 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r11[130] = $i3;

        $i28 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i28);

        $r30 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r30.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r30;

     label28:
        if z0 == 0 goto label29;

        $r31 = new com.hp.hpl.jena.sparql.expr.E_Add;

        specialinvoke $r31.<com.hp.hpl.jena.sparql.expr.E_Add: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>(r23, r24);

        r23 = $r31;

        goto label01;

     label29:
        $r32 = new com.hp.hpl.jena.sparql.expr.E_Subtract;

        specialinvoke $r32.<com.hp.hpl.jena.sparql.expr.E_Subtract: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>(r23, r24);

        r23 = $r32;

        goto label01;

     label30:
        $r20 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r20[131] = $i6;

        $i30 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i30);

        $r33 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r33.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r33;

     label31:
        return r23;
    }

    public final com.hp.hpl.jena.sparql.expr.Expr MultiplicativeExpression() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.expr.E_Divide $r10;
        com.hp.hpl.jena.sparql.expr.Expr $r1, $r3, r8;
        int[] $r5, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i11;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r11;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.expr.E_Multiply $r9;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r8 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr UnaryExpression()>();

     label01:
        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i7 = (int) -1;

        if $i3 != $i7 goto label02;

        $i4 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label03;

     label02:
        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label03:
        lookupswitch($i4)
        {
            case 180: goto label04;
            case 181: goto label04;
            default: goto label05;
        };

     label04:
        goto label06;

     label05:
        $r7 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r7[132] = $i2;

        goto label12;

     label06:
        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i9 = (int) -1;

        if $i0 != $i9 goto label07;

        $i5 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label08;

     label07:
        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label08:
        lookupswitch($i5)
        {
            case 180: goto label09;
            case 181: goto label10;
            default: goto label11;
        };

     label09:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(180);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr UnaryExpression()>();

        $r9 = new com.hp.hpl.jena.sparql.expr.E_Multiply;

        specialinvoke $r9.<com.hp.hpl.jena.sparql.expr.E_Multiply: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>(r8, $r3);

        r8 = $r9;

        goto label01;

     label10:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(181);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr UnaryExpression()>();

        $r10 = new com.hp.hpl.jena.sparql.expr.E_Divide;

        specialinvoke $r10.<com.hp.hpl.jena.sparql.expr.E_Divide: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>(r8, $r1);

        r8 = $r10;

        goto label01;

     label11:
        $r5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r5[133] = $i1;

        $i11 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i11);

        $r11 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r11.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r11;

     label12:
        return r8;
    }

    public final com.hp.hpl.jena.sparql.expr.Expr UnaryExpression() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.expr.E_UnaryPlus $r11;
        com.hp.hpl.jena.sparql.expr.E_LogicalNot $r10;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.expr.E_UnaryMinus $r12;
        com.hp.hpl.jena.sparql.expr.Expr $r1, $r3, $r5, $r7;
        int[] $r8;
        int $i0, $i1, $i2, $i4, $i6;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r13;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        tableswitch($i2)
        {
            case 9: goto label6;
            case 10: goto label6;
            case 11: goto label6;
            case 12: goto label7;
            case 13: goto label6;
            case 14: goto label6;
            case 15: goto label7;
            case 16: goto label7;
            case 17: goto label7;
            case 18: goto label7;
            case 19: goto label7;
            case 20: goto label7;
            case 21: goto label7;
            case 22: goto label7;
            case 23: goto label7;
            case 24: goto label7;
            case 25: goto label7;
            case 26: goto label7;
            case 27: goto label7;
            case 28: goto label7;
            case 29: goto label7;
            case 30: goto label7;
            case 31: goto label7;
            case 32: goto label7;
            case 33: goto label7;
            case 34: goto label7;
            case 35: goto label7;
            case 36: goto label7;
            case 37: goto label7;
            case 38: goto label7;
            case 39: goto label7;
            case 40: goto label7;
            case 41: goto label7;
            case 42: goto label7;
            case 43: goto label7;
            case 44: goto label7;
            case 45: goto label6;
            case 46: goto label6;
            case 47: goto label7;
            case 48: goto label7;
            case 49: goto label7;
            case 50: goto label7;
            case 51: goto label7;
            case 52: goto label6;
            case 53: goto label6;
            case 54: goto label6;
            case 55: goto label6;
            case 56: goto label6;
            case 57: goto label7;
            case 58: goto label6;
            case 59: goto label6;
            case 60: goto label7;
            case 61: goto label6;
            case 62: goto label6;
            case 63: goto label7;
            case 64: goto label6;
            case 65: goto label6;
            case 66: goto label6;
            case 67: goto label6;
            case 68: goto label6;
            case 69: goto label6;
            case 70: goto label6;
            case 71: goto label6;
            case 72: goto label6;
            case 73: goto label6;
            case 74: goto label6;
            case 75: goto label6;
            case 76: goto label6;
            case 77: goto label6;
            case 78: goto label6;
            case 79: goto label6;
            case 80: goto label6;
            case 81: goto label6;
            case 82: goto label6;
            case 83: goto label6;
            case 84: goto label6;
            case 85: goto label6;
            case 86: goto label6;
            case 87: goto label6;
            case 88: goto label6;
            case 89: goto label6;
            case 90: goto label6;
            case 91: goto label6;
            case 92: goto label6;
            case 93: goto label6;
            case 94: goto label6;
            case 95: goto label6;
            case 96: goto label6;
            case 97: goto label6;
            case 98: goto label6;
            case 99: goto label6;
            case 100: goto label6;
            case 101: goto label6;
            case 102: goto label6;
            case 103: goto label6;
            case 104: goto label6;
            case 105: goto label6;
            case 106: goto label6;
            case 107: goto label6;
            case 108: goto label6;
            case 109: goto label6;
            case 110: goto label6;
            case 111: goto label7;
            case 112: goto label6;
            case 113: goto label6;
            case 114: goto label6;
            case 115: goto label6;
            case 116: goto label6;
            case 117: goto label7;
            case 118: goto label7;
            case 119: goto label7;
            case 120: goto label7;
            case 121: goto label7;
            case 122: goto label7;
            case 123: goto label7;
            case 124: goto label7;
            case 125: goto label7;
            case 126: goto label7;
            case 127: goto label7;
            case 128: goto label7;
            case 129: goto label7;
            case 130: goto label7;
            case 131: goto label7;
            case 132: goto label7;
            case 133: goto label7;
            case 134: goto label7;
            case 135: goto label7;
            case 136: goto label7;
            case 137: goto label7;
            case 138: goto label7;
            case 139: goto label6;
            case 140: goto label6;
            case 141: goto label6;
            case 142: goto label6;
            case 143: goto label6;
            case 144: goto label6;
            case 145: goto label6;
            case 146: goto label6;
            case 147: goto label6;
            case 148: goto label7;
            case 149: goto label7;
            case 150: goto label7;
            case 151: goto label7;
            case 152: goto label6;
            case 153: goto label6;
            case 154: goto label6;
            case 155: goto label6;
            case 156: goto label6;
            case 157: goto label7;
            case 158: goto label7;
            case 159: goto label7;
            case 160: goto label7;
            case 161: goto label7;
            case 162: goto label7;
            case 163: goto label7;
            case 164: goto label7;
            case 165: goto label7;
            case 166: goto label7;
            case 167: goto label7;
            case 168: goto label7;
            case 169: goto label7;
            case 170: goto label7;
            case 171: goto label7;
            case 172: goto label7;
            case 173: goto label3;
            case 174: goto label7;
            case 175: goto label7;
            case 176: goto label7;
            case 177: goto label7;
            case 178: goto label4;
            case 179: goto label5;
            default: goto label7;
        };

     label3:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(173);

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr PrimaryExpression()>();

        $r10 = new com.hp.hpl.jena.sparql.expr.E_LogicalNot;

        specialinvoke $r10.<com.hp.hpl.jena.sparql.expr.E_LogicalNot: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r5);

        return $r10;

     label4:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(178);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr PrimaryExpression()>();

        $r11 = new com.hp.hpl.jena.sparql.expr.E_UnaryPlus;

        specialinvoke $r11.<com.hp.hpl.jena.sparql.expr.E_UnaryPlus: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r3);

        return $r11;

     label5:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(179);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr PrimaryExpression()>();

        $r12 = new com.hp.hpl.jena.sparql.expr.E_UnaryMinus;

        specialinvoke $r12.<com.hp.hpl.jena.sparql.expr.E_UnaryMinus: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r1);

        return $r12;

     label6:
        $r7 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr PrimaryExpression()>();

        return $r7;

     label7:
        $r8 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r8[134] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r13 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r13.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r13;
    }

    public final com.hp.hpl.jena.sparql.expr.Expr PrimaryExpression() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node $r2, $r4, $r6;
        com.hp.hpl.jena.sparql.expr.Expr $r1, $r3, $r5, $r7, $r8, $r10, $r11;
        int[] $r12;
        int $i0, $i1, $i2, $i4, $i6;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r14;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.core.Var $r9;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label01;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label02;

     label01:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label02:
        tableswitch($i2)
        {
            case 9: goto label05;
            case 10: goto label05;
            case 11: goto label05;
            case 12: goto label10;
            case 13: goto label09;
            case 14: goto label09;
            case 15: goto label10;
            case 16: goto label10;
            case 17: goto label10;
            case 18: goto label10;
            case 19: goto label10;
            case 20: goto label10;
            case 21: goto label10;
            case 22: goto label10;
            case 23: goto label10;
            case 24: goto label10;
            case 25: goto label10;
            case 26: goto label10;
            case 27: goto label10;
            case 28: goto label10;
            case 29: goto label10;
            case 30: goto label10;
            case 31: goto label10;
            case 32: goto label10;
            case 33: goto label10;
            case 34: goto label10;
            case 35: goto label10;
            case 36: goto label10;
            case 37: goto label10;
            case 38: goto label10;
            case 39: goto label10;
            case 40: goto label10;
            case 41: goto label10;
            case 42: goto label10;
            case 43: goto label10;
            case 44: goto label10;
            case 45: goto label04;
            case 46: goto label04;
            case 47: goto label10;
            case 48: goto label10;
            case 49: goto label10;
            case 50: goto label10;
            case 51: goto label10;
            case 52: goto label04;
            case 53: goto label04;
            case 54: goto label04;
            case 55: goto label04;
            case 56: goto label04;
            case 57: goto label10;
            case 58: goto label04;
            case 59: goto label04;
            case 60: goto label10;
            case 61: goto label04;
            case 62: goto label04;
            case 63: goto label10;
            case 64: goto label04;
            case 65: goto label04;
            case 66: goto label04;
            case 67: goto label04;
            case 68: goto label04;
            case 69: goto label04;
            case 70: goto label04;
            case 71: goto label04;
            case 72: goto label04;
            case 73: goto label04;
            case 74: goto label04;
            case 75: goto label04;
            case 76: goto label04;
            case 77: goto label04;
            case 78: goto label04;
            case 79: goto label04;
            case 80: goto label04;
            case 81: goto label04;
            case 82: goto label04;
            case 83: goto label04;
            case 84: goto label04;
            case 85: goto label04;
            case 86: goto label04;
            case 87: goto label04;
            case 88: goto label04;
            case 89: goto label04;
            case 90: goto label04;
            case 91: goto label04;
            case 92: goto label04;
            case 93: goto label04;
            case 94: goto label04;
            case 95: goto label04;
            case 96: goto label04;
            case 97: goto label04;
            case 98: goto label04;
            case 99: goto label04;
            case 100: goto label04;
            case 101: goto label04;
            case 102: goto label04;
            case 103: goto label04;
            case 104: goto label04;
            case 105: goto label04;
            case 106: goto label04;
            case 107: goto label04;
            case 108: goto label04;
            case 109: goto label04;
            case 110: goto label04;
            case 111: goto label10;
            case 112: goto label04;
            case 113: goto label04;
            case 114: goto label04;
            case 115: goto label08;
            case 116: goto label08;
            case 117: goto label10;
            case 118: goto label10;
            case 119: goto label10;
            case 120: goto label10;
            case 121: goto label10;
            case 122: goto label10;
            case 123: goto label10;
            case 124: goto label10;
            case 125: goto label10;
            case 126: goto label10;
            case 127: goto label10;
            case 128: goto label10;
            case 129: goto label10;
            case 130: goto label10;
            case 131: goto label10;
            case 132: goto label10;
            case 133: goto label10;
            case 134: goto label10;
            case 135: goto label10;
            case 136: goto label10;
            case 137: goto label10;
            case 138: goto label10;
            case 139: goto label07;
            case 140: goto label07;
            case 141: goto label07;
            case 142: goto label07;
            case 143: goto label07;
            case 144: goto label07;
            case 145: goto label07;
            case 146: goto label07;
            case 147: goto label07;
            case 148: goto label10;
            case 149: goto label10;
            case 150: goto label10;
            case 151: goto label10;
            case 152: goto label06;
            case 153: goto label06;
            case 154: goto label06;
            case 155: goto label06;
            case 156: goto label03;
            default: goto label10;
        };

     label03:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr BrackettedExpression()>();

        return $r1;

     label04:
        $r8 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr BuiltInCall()>();

        return $r8;

     label05:
        $r11 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr iriOrFunction()>();

        return $r11;

     label06:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node RDFLiteral()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr asExpr(com.hp.hpl.jena.graph.Node)>($r2);

        return $r3;

     label07:
        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node NumericLiteral()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr asExpr(com.hp.hpl.jena.graph.Node)>($r4);

        return $r5;

     label08:
        $r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node BooleanLiteral()>();

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr asExpr(com.hp.hpl.jena.graph.Node)>($r6);

        return $r7;

     label09:
        $r9 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.core.Var Var()>();

        $r10 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr asExpr(com.hp.hpl.jena.graph.Node)>($r9);

        return $r10;

     label10:
        $r12 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r12[135] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r14 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r14.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r14;
    }

    public final com.hp.hpl.jena.sparql.expr.Expr BrackettedExpression() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.expr.Expr $r1;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        return $r1;
    }

    public final com.hp.hpl.jena.sparql.expr.Expr BuiltInCall() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.expr.E_IsURI $r166;
        com.hp.hpl.jena.sparql.expr.E_SHA384 $r158;
        com.hp.hpl.jena.sparql.expr.E_SHA1 $r156;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r128, $r170;
        com.hp.hpl.jena.sparql.expr.E_Bound $r123;
        com.hp.hpl.jena.sparql.expr.E_DateTimeTimezone $r150;
        com.hp.hpl.jena.sparql.expr.E_StrLength $r135;
        com.hp.hpl.jena.sparql.expr.E_Conditional $r161;
        com.hp.hpl.jena.sparql.expr.E_LangMatches $r120;
        com.hp.hpl.jena.sparql.expr.E_IRI $r124;
        com.hp.hpl.jena.sparql.expr.E_DateTimeMonth $r145;
        com.hp.hpl.jena.sparql.expr.E_NumFloor $r132;
        com.hp.hpl.jena.sparql.expr.E_StrDatatype $r163;
        com.hp.hpl.jena.sparql.expr.E_Coalesce $r160;
        com.hp.hpl.jena.sparql.expr.E_DateTimeMinutes $r148;
        com.hp.hpl.jena.sparql.expr.E_IsLiteral $r168;
        com.hp.hpl.jena.sparql.expr.E_SHA256 $r157;
        com.hp.hpl.jena.sparql.expr.E_Str $r118;
        com.hp.hpl.jena.sparql.expr.E_StrBefore $r142;
        com.hp.hpl.jena.sparql.expr.Expr $r1, $r3, $r5, $r7, $r9, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r31, $r33, $r34, $r36, $r37, $r39, $r40, $r42, $r43, $r45, $r47, $r49, $r51, $r52, $r54, $r57, $r59, $r61, $r63, $r66, $r67, $r69, $r70, $r72, $r74, $r76, $r78, $r80, $r81, $r83, $r85, $r87, $r88, $r90, $r91, $r93, $r95, $r97, $r100, $r104, $r105, $r106, $r113, $r114, $r115;
        int[] $r102, $r116;
        com.hp.hpl.jena.sparql.expr.E_Datatype $r121;
        com.hp.hpl.jena.sparql.expr.E_DateTimeDay $r146;
        com.hp.hpl.jena.sparql.expr.E_IsNumeric $r169;
        com.hp.hpl.jena.sparql.expr.E_SHA512 $r159;
        com.hp.hpl.jena.sparql.expr.E_StrAfter $r143;
        com.hp.hpl.jena.sparql.expr.E_Random $r129;
        com.hp.hpl.jena.sparql.expr.E_NumCeiling $r131;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i11, $i13;
        com.hp.hpl.jena.sparql.expr.E_Now $r152;
        com.hp.hpl.jena.sparql.expr.E_DateTimeHours $r147;
        com.hp.hpl.jena.sparql.expr.E_StrLang $r162;
        com.hp.hpl.jena.sparql.expr.E_StrLowerCase $r137;
        com.hp.hpl.jena.sparql.expr.E_MD5 $r155;
        com.hp.hpl.jena.sparql.expr.E_StrUpperCase $r136;
        com.hp.hpl.jena.sparql.expr.E_StrEncodeForURI $r138;
        com.hp.hpl.jena.sparql.expr.E_IsIRI $r165;
        com.hp.hpl.jena.sparql.expr.E_SameTerm $r164;
        com.hp.hpl.jena.sparql.expr.E_URI $r125;
        com.hp.hpl.jena.sparql.expr.E_IsBlank $r167;
        com.hp.hpl.jena.sparql.expr.E_StrUUID $r154;
        com.hp.hpl.jena.sparql.expr.ExprVar $r122;
        com.hp.hpl.jena.sparql.expr.E_NumRound $r133;
        com.hp.hpl.jena.sparql.expr.E_StrConcat $r134;
        com.hp.hpl.jena.sparql.expr.E_DateTimeYear $r144;
        com.hp.hpl.jena.sparql.expr.E_DateTimeTZ $r151;
        com.hp.hpl.jena.sparql.expr.E_StrStartsWith $r140;
        com.hp.hpl.jena.sparql.expr.E_NumAbs $r130;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.expr.E_Lang $r119;
        com.hp.hpl.jena.sparql.expr.ExprList $r55, $r108;
        com.hp.hpl.jena.sparql.expr.E_StrEndsWith $r141;
        com.hp.hpl.jena.sparql.expr.E_StrContains $r139;
        com.hp.hpl.jena.sparql.expr.E_UUID $r153;
        com.hp.hpl.jena.sparql.expr.E_DateTimeSeconds $r149;
        com.hp.hpl.jena.sparql.expr.E_BNode $r126, $r127;
        com.hp.hpl.jena.sparql.core.Var $r110;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i7 = (int) -1;

        if $i0 != $i7 goto label01;

        $i4 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label02;

     label01:
        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label02:
        tableswitch($i4)
        {
            case 45: goto label61;
            case 46: goto label62;
            case 47: goto label63;
            case 48: goto label63;
            case 49: goto label63;
            case 50: goto label63;
            case 51: goto label63;
            case 52: goto label03;
            case 53: goto label03;
            case 54: goto label03;
            case 55: goto label03;
            case 56: goto label03;
            case 57: goto label63;
            case 58: goto label03;
            case 59: goto label03;
            case 60: goto label63;
            case 61: goto label08;
            case 62: goto label50;
            case 63: goto label63;
            case 64: goto label51;
            case 65: goto label11;
            case 66: goto label09;
            case 67: goto label10;
            case 68: goto label04;
            case 69: goto label52;
            case 70: goto label53;
            case 71: goto label07;
            case 72: goto label05;
            case 73: goto label06;
            case 74: goto label56;
            case 75: goto label55;
            case 76: goto label57;
            case 77: goto label58;
            case 78: goto label59;
            case 79: goto label60;
            case 80: goto label54;
            case 81: goto label17;
            case 82: goto label18;
            case 83: goto label19;
            case 84: goto label20;
            case 85: goto label21;
            case 86: goto label22;
            case 87: goto label23;
            case 88: goto label24;
            case 89: goto label25;
            case 90: goto label26;
            case 91: goto label27;
            case 92: goto label28;
            case 93: goto label29;
            case 94: goto label30;
            case 95: goto label31;
            case 96: goto label32;
            case 97: goto label33;
            case 98: goto label34;
            case 99: goto label35;
            case 100: goto label36;
            case 101: goto label37;
            case 102: goto label38;
            case 103: goto label39;
            case 104: goto label40;
            case 105: goto label41;
            case 106: goto label42;
            case 107: goto label43;
            case 108: goto label44;
            case 109: goto label45;
            case 110: goto label46;
            case 111: goto label63;
            case 112: goto label47;
            case 113: goto label48;
            case 114: goto label49;
            default: goto label63;
        };

     label03:
        $r113 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Aggregate()>();

        return $r113;

     label04:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(68);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r93 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r118 = new com.hp.hpl.jena.sparql.expr.E_Str;

        specialinvoke $r118.<com.hp.hpl.jena.sparql.expr.E_Str: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r93);

        return $r118;

     label05:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(72);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r83 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r119 = new com.hp.hpl.jena.sparql.expr.E_Lang;

        specialinvoke $r119.<com.hp.hpl.jena.sparql.expr.E_Lang: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r83);

        return $r119;

     label06:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(73);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r80 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(165);

        $r81 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r120 = new com.hp.hpl.jena.sparql.expr.E_LangMatches;

        specialinvoke $r120.<com.hp.hpl.jena.sparql.expr.E_LangMatches: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>($r80, $r81);

        return $r120;

     label07:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(71);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r85 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r121 = new com.hp.hpl.jena.sparql.expr.E_Datatype;

        specialinvoke $r121.<com.hp.hpl.jena.sparql.expr.E_Datatype: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r85);

        return $r121;

     label08:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(61);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r110 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.core.Var Var()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r123 = new com.hp.hpl.jena.sparql.expr.E_Bound;

        $r122 = new com.hp.hpl.jena.sparql.expr.ExprVar;

        specialinvoke $r122.<com.hp.hpl.jena.sparql.expr.ExprVar: void <init>(com.hp.hpl.jena.graph.Node)>($r110);

        specialinvoke $r123.<com.hp.hpl.jena.sparql.expr.E_Bound: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r122);

        return $r123;

     label09:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(66);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r97 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r124 = new com.hp.hpl.jena.sparql.expr.E_IRI;

        specialinvoke $r124.<com.hp.hpl.jena.sparql.expr.E_IRI: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r97);

        return $r124;

     label10:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(67);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r95 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r125 = new com.hp.hpl.jena.sparql.expr.E_URI;

        specialinvoke $r125.<com.hp.hpl.jena.sparql.expr.E_URI: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r95);

        return $r125;

     label11:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(65);

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i9 = (int) -1;

        if $i1 != $i9 goto label12;

        $i5 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label13;

     label12:
        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label13:
        lookupswitch($i5)
        {
            case 156: goto label14;
            case 158: goto label15;
            default: goto label16;
        };

     label14:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r100 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r126 = new com.hp.hpl.jena.sparql.expr.E_BNode;

        specialinvoke $r126.<com.hp.hpl.jena.sparql.expr.E_BNode: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r100);

        return $r126;

     label15:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(158);

        $r127 = new com.hp.hpl.jena.sparql.expr.E_BNode;

        specialinvoke $r127.<com.hp.hpl.jena.sparql.expr.E_BNode: void <init>()>();

        return $r127;

     label16:
        $r102 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r102[136] = $i2;

        $i11 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i11);

        $r128 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r128.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r128;

     label17:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(81);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(158);

        $r129 = new com.hp.hpl.jena.sparql.expr.E_Random;

        specialinvoke $r129.<com.hp.hpl.jena.sparql.expr.E_Random: void <init>()>();

        return $r129;

     label18:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(82);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r63 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r130 = new com.hp.hpl.jena.sparql.expr.E_NumAbs;

        specialinvoke $r130.<com.hp.hpl.jena.sparql.expr.E_NumAbs: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r63);

        return $r130;

     label19:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(83);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r61 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r131 = new com.hp.hpl.jena.sparql.expr.E_NumCeiling;

        specialinvoke $r131.<com.hp.hpl.jena.sparql.expr.E_NumCeiling: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r61);

        return $r131;

     label20:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(84);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r59 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r132 = new com.hp.hpl.jena.sparql.expr.E_NumFloor;

        specialinvoke $r132.<com.hp.hpl.jena.sparql.expr.E_NumFloor: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r59);

        return $r132;

     label21:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(85);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r57 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r133 = new com.hp.hpl.jena.sparql.expr.E_NumRound;

        specialinvoke $r133.<com.hp.hpl.jena.sparql.expr.E_NumRound: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r57);

        return $r133;

     label22:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(86);

        $r55 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.ExprList ExpressionList()>();

        $r134 = new com.hp.hpl.jena.sparql.expr.E_StrConcat;

        specialinvoke $r134.<com.hp.hpl.jena.sparql.expr.E_StrConcat: void <init>(com.hp.hpl.jena.sparql.expr.ExprList)>($r55);

        return $r134;

     label23:
        $r54 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr SubstringExpression()>();

        return $r54;

     label24:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(88);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r52 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r135 = new com.hp.hpl.jena.sparql.expr.E_StrLength;

        specialinvoke $r135.<com.hp.hpl.jena.sparql.expr.E_StrLength: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r52);

        return $r135;

     label25:
        $r51 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr StrReplaceExpression()>();

        return $r51;

     label26:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(90);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r49 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r136 = new com.hp.hpl.jena.sparql.expr.E_StrUpperCase;

        specialinvoke $r136.<com.hp.hpl.jena.sparql.expr.E_StrUpperCase: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r49);

        return $r136;

     label27:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(91);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r47 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r137 = new com.hp.hpl.jena.sparql.expr.E_StrLowerCase;

        specialinvoke $r137.<com.hp.hpl.jena.sparql.expr.E_StrLowerCase: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r47);

        return $r137;

     label28:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(92);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r45 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r138 = new com.hp.hpl.jena.sparql.expr.E_StrEncodeForURI;

        specialinvoke $r138.<com.hp.hpl.jena.sparql.expr.E_StrEncodeForURI: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r45);

        return $r138;

     label29:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(93);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r42 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(165);

        $r43 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r139 = new com.hp.hpl.jena.sparql.expr.E_StrContains;

        specialinvoke $r139.<com.hp.hpl.jena.sparql.expr.E_StrContains: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>($r42, $r43);

        return $r139;

     label30:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(94);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r39 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(165);

        $r40 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r140 = new com.hp.hpl.jena.sparql.expr.E_StrStartsWith;

        specialinvoke $r140.<com.hp.hpl.jena.sparql.expr.E_StrStartsWith: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>($r39, $r40);

        return $r140;

     label31:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(95);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r36 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(165);

        $r37 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r141 = new com.hp.hpl.jena.sparql.expr.E_StrEndsWith;

        specialinvoke $r141.<com.hp.hpl.jena.sparql.expr.E_StrEndsWith: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>($r36, $r37);

        return $r141;

     label32:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(96);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r33 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(165);

        $r34 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r142 = new com.hp.hpl.jena.sparql.expr.E_StrBefore;

        specialinvoke $r142.<com.hp.hpl.jena.sparql.expr.E_StrBefore: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>($r33, $r34);

        return $r142;

     label33:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(97);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r30 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(165);

        $r31 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r143 = new com.hp.hpl.jena.sparql.expr.E_StrAfter;

        specialinvoke $r143.<com.hp.hpl.jena.sparql.expr.E_StrAfter: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>($r30, $r31);

        return $r143;

     label34:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(98);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r28 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r144 = new com.hp.hpl.jena.sparql.expr.E_DateTimeYear;

        specialinvoke $r144.<com.hp.hpl.jena.sparql.expr.E_DateTimeYear: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r28);

        return $r144;

     label35:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(99);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r26 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r145 = new com.hp.hpl.jena.sparql.expr.E_DateTimeMonth;

        specialinvoke $r145.<com.hp.hpl.jena.sparql.expr.E_DateTimeMonth: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r26);

        return $r145;

     label36:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(100);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r24 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r146 = new com.hp.hpl.jena.sparql.expr.E_DateTimeDay;

        specialinvoke $r146.<com.hp.hpl.jena.sparql.expr.E_DateTimeDay: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r24);

        return $r146;

     label37:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(101);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r22 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r147 = new com.hp.hpl.jena.sparql.expr.E_DateTimeHours;

        specialinvoke $r147.<com.hp.hpl.jena.sparql.expr.E_DateTimeHours: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r22);

        return $r147;

     label38:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(102);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r20 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r148 = new com.hp.hpl.jena.sparql.expr.E_DateTimeMinutes;

        specialinvoke $r148.<com.hp.hpl.jena.sparql.expr.E_DateTimeMinutes: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r20);

        return $r148;

     label39:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(103);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r18 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r149 = new com.hp.hpl.jena.sparql.expr.E_DateTimeSeconds;

        specialinvoke $r149.<com.hp.hpl.jena.sparql.expr.E_DateTimeSeconds: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r18);

        return $r149;

     label40:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(104);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r16 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r150 = new com.hp.hpl.jena.sparql.expr.E_DateTimeTimezone;

        specialinvoke $r150.<com.hp.hpl.jena.sparql.expr.E_DateTimeTimezone: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r16);

        return $r150;

     label41:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(105);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r14 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r151 = new com.hp.hpl.jena.sparql.expr.E_DateTimeTZ;

        specialinvoke $r151.<com.hp.hpl.jena.sparql.expr.E_DateTimeTZ: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r14);

        return $r151;

     label42:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(106);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(158);

        $r152 = new com.hp.hpl.jena.sparql.expr.E_Now;

        specialinvoke $r152.<com.hp.hpl.jena.sparql.expr.E_Now: void <init>()>();

        return $r152;

     label43:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(107);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(158);

        $r153 = new com.hp.hpl.jena.sparql.expr.E_UUID;

        specialinvoke $r153.<com.hp.hpl.jena.sparql.expr.E_UUID: void <init>()>();

        return $r153;

     label44:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(108);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(158);

        $r154 = new com.hp.hpl.jena.sparql.expr.E_StrUUID;

        specialinvoke $r154.<com.hp.hpl.jena.sparql.expr.E_StrUUID: void <init>()>();

        return $r154;

     label45:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(109);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r9 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r155 = new com.hp.hpl.jena.sparql.expr.E_MD5;

        specialinvoke $r155.<com.hp.hpl.jena.sparql.expr.E_MD5: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r9);

        return $r155;

     label46:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(110);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r156 = new com.hp.hpl.jena.sparql.expr.E_SHA1;

        specialinvoke $r156.<com.hp.hpl.jena.sparql.expr.E_SHA1: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r7);

        return $r156;

     label47:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(112);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r157 = new com.hp.hpl.jena.sparql.expr.E_SHA256;

        specialinvoke $r157.<com.hp.hpl.jena.sparql.expr.E_SHA256: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r5);

        return $r157;

     label48:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(113);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r158 = new com.hp.hpl.jena.sparql.expr.E_SHA384;

        specialinvoke $r158.<com.hp.hpl.jena.sparql.expr.E_SHA384: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r3);

        return $r158;

     label49:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(114);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r159 = new com.hp.hpl.jena.sparql.expr.E_SHA512;

        specialinvoke $r159.<com.hp.hpl.jena.sparql.expr.E_SHA512: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r1);

        return $r159;

     label50:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(62);

        $r108 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.ExprList ExpressionList()>();

        $r160 = new com.hp.hpl.jena.sparql.expr.E_Coalesce;

        specialinvoke $r160.<com.hp.hpl.jena.sparql.expr.E_Coalesce: void <init>(com.hp.hpl.jena.sparql.expr.ExprList)>($r108);

        return $r160;

     label51:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(64);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r104 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(165);

        $r105 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(165);

        $r106 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r161 = new com.hp.hpl.jena.sparql.expr.E_Conditional;

        specialinvoke $r161.<com.hp.hpl.jena.sparql.expr.E_Conditional: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>($r104, $r105, $r106);

        return $r161;

     label52:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(69);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r90 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(165);

        $r91 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r162 = new com.hp.hpl.jena.sparql.expr.E_StrLang;

        specialinvoke $r162.<com.hp.hpl.jena.sparql.expr.E_StrLang: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>($r90, $r91);

        return $r162;

     label53:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(70);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r87 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(165);

        $r88 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r163 = new com.hp.hpl.jena.sparql.expr.E_StrDatatype;

        specialinvoke $r163.<com.hp.hpl.jena.sparql.expr.E_StrDatatype: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>($r87, $r88);

        return $r163;

     label54:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(80);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r66 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(165);

        $r67 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r164 = new com.hp.hpl.jena.sparql.expr.E_SameTerm;

        specialinvoke $r164.<com.hp.hpl.jena.sparql.expr.E_SameTerm: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>($r66, $r67);

        return $r164;

     label55:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(75);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r76 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r165 = new com.hp.hpl.jena.sparql.expr.E_IsIRI;

        specialinvoke $r165.<com.hp.hpl.jena.sparql.expr.E_IsIRI: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r76);

        return $r165;

     label56:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(74);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r78 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r166 = new com.hp.hpl.jena.sparql.expr.E_IsURI;

        specialinvoke $r166.<com.hp.hpl.jena.sparql.expr.E_IsURI: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r78);

        return $r166;

     label57:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(76);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r74 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r167 = new com.hp.hpl.jena.sparql.expr.E_IsBlank;

        specialinvoke $r167.<com.hp.hpl.jena.sparql.expr.E_IsBlank: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r74);

        return $r167;

     label58:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(77);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r72 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r168 = new com.hp.hpl.jena.sparql.expr.E_IsLiteral;

        specialinvoke $r168.<com.hp.hpl.jena.sparql.expr.E_IsLiteral: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r72);

        return $r168;

     label59:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(78);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r70 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r169 = new com.hp.hpl.jena.sparql.expr.E_IsNumeric;

        specialinvoke $r169.<com.hp.hpl.jena.sparql.expr.E_IsNumeric: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>($r70);

        return $r169;

     label60:
        $r69 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr RegexExpression()>();

        return $r69;

     label61:
        $r115 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr ExistsFunc()>();

        return $r115;

     label62:
        $r114 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr NotExistsFunc()>();

        return $r114;

     label63:
        $r116 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r116[137] = $i3;

        $i13 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i13);

        $r170 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r170.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r170;
    }

    public final com.hp.hpl.jena.sparql.expr.Expr RegexExpression() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.expr.Expr $r1, $r2, r5;
        int[] $r4;
        com.hp.hpl.jena.sparql.expr.E_Regex $r6;
        int $i0, $i1, $i2, $i4;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r5 = null;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(79);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(165);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 165: goto label3;
            default: goto label4;
        };

     label3:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(165);

        r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        goto label5;

     label4:
        $r4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r4[138] = $i1;

     label5:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r6 = new com.hp.hpl.jena.sparql.expr.E_Regex;

        specialinvoke $r6.<com.hp.hpl.jena.sparql.expr.E_Regex: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>($r1, $r2, r5);

        return $r6;
    }

    public final com.hp.hpl.jena.sparql.expr.Expr SubstringExpression() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.expr.Expr $r1, $r2, r5;
        com.hp.hpl.jena.sparql.expr.E_StrSubstring $r6;
        int[] $r4;
        int $i0, $i1, $i2, $i4;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r5 = null;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(87);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(165);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 165: goto label3;
            default: goto label4;
        };

     label3:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(165);

        r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        goto label5;

     label4:
        $r4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r4[139] = $i1;

     label5:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r6 = new com.hp.hpl.jena.sparql.expr.E_StrSubstring;

        specialinvoke $r6.<com.hp.hpl.jena.sparql.expr.E_StrSubstring: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>($r1, $r2, r5);

        return $r6;
    }

    public final com.hp.hpl.jena.sparql.expr.Expr StrReplaceExpression() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.expr.E_StrReplace $r7;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.expr.Expr $r1, $r2, $r3, r6;
        int[] $r5;
        int $i0, $i1, $i2, $i4;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r6 = null;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(89);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(165);

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(165);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 165: goto label3;
            default: goto label4;
        };

     label3:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(165);

        r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        goto label5;

     label4:
        $r5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r5[140] = $i1;

     label5:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        $r7 = new com.hp.hpl.jena.sparql.expr.E_StrReplace;

        specialinvoke $r7.<com.hp.hpl.jena.sparql.expr.E_StrReplace: void <init>(com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr,com.hp.hpl.jena.sparql.expr.Expr)>($r1, $r2, $r3, r6);

        return $r7;
    }

    public final com.hp.hpl.jena.sparql.expr.Expr ExistsFunc() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.syntax.Element $r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.expr.Expr $r2;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(45);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.syntax.Element GroupGraphPattern()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr createExprExists(com.hp.hpl.jena.sparql.syntax.Element)>($r1);

        return $r2;
    }

    public final com.hp.hpl.jena.sparql.expr.Expr NotExistsFunc() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.syntax.Element $r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.expr.Expr $r2;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(46);

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(45);

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.syntax.Element GroupGraphPattern()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr createExprNotExists(com.hp.hpl.jena.sparql.syntax.Element)>($r1);

        return $r2;
    }

    public final com.hp.hpl.jena.sparql.expr.Expr Aggregate() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r29, $r30;
        java.lang.String r24;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r2;
        com.hp.hpl.jena.sparql.expr.Expr $r3, $r5, $r8, $r10, $r12, $r14, $r16, r25;
        int[] $r6, $r7, $r9, $r11, $r13, $r15, $r17, $r18, $r20, $r21;
        com.hp.hpl.jena.sparql.expr.ExprList $r27, $r28;
        boolean z0, $z1, z2, z3, z4, z5, z6, z7, z8, z9;
        com.hp.hpl.jena.query.Query $r4;
        com.hp.hpl.jena.sparql.lang.sparql_11.Token r26;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i33, $i35, $i37, $i39, $i41, $i43, $i45, $i47, $i49, $i51, $i53, $i55;
        com.hp.hpl.jena.sparql.expr.aggregate.Aggregator r23;

        r2 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r23 = null;

        r24 = null;

        z0 = 0;

        z9 = 0;

        z8 = 0;

        z7 = 0;

        z6 = 0;

        z5 = 0;

        z4 = 0;

        z3 = 0;

        z2 = 0;

        r25 = null;

        $r27 = new com.hp.hpl.jena.sparql.expr.ExprList;

        specialinvoke $r27.<com.hp.hpl.jena.sparql.expr.ExprList: void <init>()>();

        $r28 = new com.hp.hpl.jena.sparql.expr.ExprList;

        specialinvoke $r28.<com.hp.hpl.jena.sparql.expr.ExprList: void <init>()>();

        $i0 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i33 = (int) -1;

        if $i0 != $i33 goto label01;

        $i22 = specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label02;

     label01:
        $i22 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label02:
        tableswitch($i22)
        {
            case 52: goto label03;
            case 53: goto label22;
            case 54: goto label28;
            case 55: goto label16;
            case 56: goto label34;
            case 57: goto label57;
            case 58: goto label40;
            case 59: goto label46;
            default: goto label57;
        };

     label03:
        r26 = specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(52);

        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $i17 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i35 = (int) -1;

        if $i17 != $i35 goto label04;

        $i23 = specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label05;

     label04:
        $i23 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label05:
        lookupswitch($i23)
        {
            case 22: goto label06;
            default: goto label07;
        };

     label06:
        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(22);

        z0 = 1;

        z7 = 1;

        z2 = 1;

        goto label08;

     label07:
        $r20 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i20 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r20[141] = $i20;

     label08:
        $i18 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i37 = (int) -1;

        if $i18 != $i37 goto label09;

        $i24 = specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label10;

     label09:
        $i24 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label10:
        tableswitch($i24)
        {
            case 9: goto label12;
            case 10: goto label12;
            case 11: goto label12;
            case 12: goto label13;
            case 13: goto label12;
            case 14: goto label12;
            case 15: goto label13;
            case 16: goto label13;
            case 17: goto label13;
            case 18: goto label13;
            case 19: goto label13;
            case 20: goto label13;
            case 21: goto label13;
            case 22: goto label13;
            case 23: goto label13;
            case 24: goto label13;
            case 25: goto label13;
            case 26: goto label13;
            case 27: goto label13;
            case 28: goto label13;
            case 29: goto label13;
            case 30: goto label13;
            case 31: goto label13;
            case 32: goto label13;
            case 33: goto label13;
            case 34: goto label13;
            case 35: goto label13;
            case 36: goto label13;
            case 37: goto label13;
            case 38: goto label13;
            case 39: goto label13;
            case 40: goto label13;
            case 41: goto label13;
            case 42: goto label13;
            case 43: goto label13;
            case 44: goto label13;
            case 45: goto label12;
            case 46: goto label12;
            case 47: goto label13;
            case 48: goto label13;
            case 49: goto label13;
            case 50: goto label13;
            case 51: goto label13;
            case 52: goto label12;
            case 53: goto label12;
            case 54: goto label12;
            case 55: goto label12;
            case 56: goto label12;
            case 57: goto label13;
            case 58: goto label12;
            case 59: goto label12;
            case 60: goto label13;
            case 61: goto label12;
            case 62: goto label12;
            case 63: goto label13;
            case 64: goto label12;
            case 65: goto label12;
            case 66: goto label12;
            case 67: goto label12;
            case 68: goto label12;
            case 69: goto label12;
            case 70: goto label12;
            case 71: goto label12;
            case 72: goto label12;
            case 73: goto label12;
            case 74: goto label12;
            case 75: goto label12;
            case 76: goto label12;
            case 77: goto label12;
            case 78: goto label12;
            case 79: goto label12;
            case 80: goto label12;
            case 81: goto label12;
            case 82: goto label12;
            case 83: goto label12;
            case 84: goto label12;
            case 85: goto label12;
            case 86: goto label12;
            case 87: goto label12;
            case 88: goto label12;
            case 89: goto label12;
            case 90: goto label12;
            case 91: goto label12;
            case 92: goto label12;
            case 93: goto label12;
            case 94: goto label12;
            case 95: goto label12;
            case 96: goto label12;
            case 97: goto label12;
            case 98: goto label12;
            case 99: goto label12;
            case 100: goto label12;
            case 101: goto label12;
            case 102: goto label12;
            case 103: goto label12;
            case 104: goto label12;
            case 105: goto label12;
            case 106: goto label12;
            case 107: goto label12;
            case 108: goto label12;
            case 109: goto label12;
            case 110: goto label12;
            case 111: goto label13;
            case 112: goto label12;
            case 113: goto label12;
            case 114: goto label12;
            case 115: goto label12;
            case 116: goto label12;
            case 117: goto label13;
            case 118: goto label13;
            case 119: goto label13;
            case 120: goto label13;
            case 121: goto label13;
            case 122: goto label13;
            case 123: goto label13;
            case 124: goto label13;
            case 125: goto label13;
            case 126: goto label13;
            case 127: goto label13;
            case 128: goto label13;
            case 129: goto label13;
            case 130: goto label13;
            case 131: goto label13;
            case 132: goto label13;
            case 133: goto label13;
            case 134: goto label13;
            case 135: goto label13;
            case 136: goto label13;
            case 137: goto label13;
            case 138: goto label13;
            case 139: goto label12;
            case 140: goto label12;
            case 141: goto label12;
            case 142: goto label12;
            case 143: goto label12;
            case 144: goto label12;
            case 145: goto label12;
            case 146: goto label12;
            case 147: goto label12;
            case 148: goto label13;
            case 149: goto label13;
            case 150: goto label13;
            case 151: goto label13;
            case 152: goto label12;
            case 153: goto label12;
            case 154: goto label12;
            case 155: goto label12;
            case 156: goto label12;
            case 157: goto label13;
            case 158: goto label13;
            case 159: goto label13;
            case 160: goto label13;
            case 161: goto label13;
            case 162: goto label13;
            case 163: goto label13;
            case 164: goto label13;
            case 165: goto label13;
            case 166: goto label13;
            case 167: goto label13;
            case 168: goto label13;
            case 169: goto label13;
            case 170: goto label13;
            case 171: goto label13;
            case 172: goto label13;
            case 173: goto label12;
            case 174: goto label13;
            case 175: goto label13;
            case 176: goto label13;
            case 177: goto label13;
            case 178: goto label12;
            case 179: goto label12;
            case 180: goto label11;
            default: goto label13;
        };

     label11:
        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(180);

        goto label14;

     label12:
        r25 = virtualinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        goto label14;

     label13:
        $r18 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i19 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r18[142] = $i19;

        $i39 = (int) -1;

        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i39);

        $r29 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r29.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r29;

     label14:
        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        if r25 != null goto label15;

        r23 = staticinvoke <com.hp.hpl.jena.sparql.expr.aggregate.AggregatorFactory: com.hp.hpl.jena.sparql.expr.aggregate.Aggregator createCount(boolean)>(z2);

     label15:
        if r25 == null goto label58;

        r23 = staticinvoke <com.hp.hpl.jena.sparql.expr.aggregate.AggregatorFactory: com.hp.hpl.jena.sparql.expr.aggregate.Aggregator createCountExpr(boolean,com.hp.hpl.jena.sparql.expr.Expr)>(z7, r25);

        goto label58;

     label16:
        r26 = specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(55);

        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $i11 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i41 = (int) -1;

        if $i11 != $i41 goto label17;

        $i25 = specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label18;

     label17:
        $i25 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label18:
        lookupswitch($i25)
        {
            case 22: goto label19;
            default: goto label20;
        };

     label19:
        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(22);

        z0 = 1;

        z4 = 1;

        goto label21;

     label20:
        $r13 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i12 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r13[143] = $i12;

     label21:
        $r12 = virtualinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        r23 = staticinvoke <com.hp.hpl.jena.sparql.expr.aggregate.AggregatorFactory: com.hp.hpl.jena.sparql.expr.aggregate.Aggregator createSum(boolean,com.hp.hpl.jena.sparql.expr.Expr)>(z4, $r12);

        goto label58;

     label22:
        r26 = specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(53);

        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $i15 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i43 = (int) -1;

        if $i15 != $i43 goto label23;

        $i26 = specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label24;

     label23:
        $i26 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label24:
        lookupswitch($i26)
        {
            case 22: goto label25;
            default: goto label26;
        };

     label25:
        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(22);

        z0 = 1;

        z8 = 1;

        goto label27;

     label26:
        $r17 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i16 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r17[144] = $i16;

     label27:
        $r16 = virtualinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        r23 = staticinvoke <com.hp.hpl.jena.sparql.expr.aggregate.AggregatorFactory: com.hp.hpl.jena.sparql.expr.aggregate.Aggregator createMin(boolean,com.hp.hpl.jena.sparql.expr.Expr)>(z8, $r16);

        goto label58;

     label28:
        r26 = specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(54);

        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $i13 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i45 = (int) -1;

        if $i13 != $i45 goto label29;

        $i27 = specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label30;

     label29:
        $i27 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label30:
        lookupswitch($i27)
        {
            case 22: goto label31;
            default: goto label32;
        };

     label31:
        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(22);

        z0 = 1;

        z9 = 1;

        goto label33;

     label32:
        $r15 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i14 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r15[145] = $i14;

     label33:
        $r14 = virtualinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        r23 = staticinvoke <com.hp.hpl.jena.sparql.expr.aggregate.AggregatorFactory: com.hp.hpl.jena.sparql.expr.aggregate.Aggregator createMax(boolean,com.hp.hpl.jena.sparql.expr.Expr)>(z9, $r14);

        goto label58;

     label34:
        r26 = specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(56);

        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $i9 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i47 = (int) -1;

        if $i9 != $i47 goto label35;

        $i28 = specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label36;

     label35:
        $i28 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label36:
        lookupswitch($i28)
        {
            case 22: goto label37;
            default: goto label38;
        };

     label37:
        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(22);

        z0 = 1;

        z5 = 1;

        goto label39;

     label38:
        $r11 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i10 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r11[146] = $i10;

     label39:
        $r10 = virtualinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        r23 = staticinvoke <com.hp.hpl.jena.sparql.expr.aggregate.AggregatorFactory: com.hp.hpl.jena.sparql.expr.aggregate.Aggregator createAvg(boolean,com.hp.hpl.jena.sparql.expr.Expr)>(z5, $r10);

        goto label58;

     label40:
        r26 = specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(58);

        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $i7 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i49 = (int) -1;

        if $i7 != $i49 goto label41;

        $i29 = specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label42;

     label41:
        $i29 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label42:
        lookupswitch($i29)
        {
            case 22: goto label43;
            default: goto label44;
        };

     label43:
        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(22);

        z0 = 1;

        z3 = 1;

        goto label45;

     label44:
        $r9 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i8 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r9[147] = $i8;

     label45:
        $r8 = virtualinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        r23 = staticinvoke <com.hp.hpl.jena.sparql.expr.aggregate.AggregatorFactory: com.hp.hpl.jena.sparql.expr.aggregate.Aggregator createSample(boolean,com.hp.hpl.jena.sparql.expr.Expr)>(z3, $r8);

        goto label58;

     label46:
        r26 = specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(59);

        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(156);

        $i1 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i51 = (int) -1;

        if $i1 != $i51 goto label47;

        $i30 = specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label48;

     label47:
        $i30 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label48:
        lookupswitch($i30)
        {
            case 22: goto label49;
            default: goto label50;
        };

     label49:
        r26 = specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(22);

        z0 = 1;

        z6 = 1;

        goto label51;

     label50:
        $r7 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i6 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r7[148] = $i6;

     label51:
        $r3 = virtualinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        virtualinvoke $r27.<com.hp.hpl.jena.sparql.expr.ExprList: void add(com.hp.hpl.jena.sparql.expr.Expr)>($r3);

        $i2 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i53 = (int) -1;

        if $i2 != $i53 goto label52;

        $i31 = specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label53;

     label52:
        $i31 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label53:
        lookupswitch($i31)
        {
            case 164: goto label54;
            default: goto label55;
        };

     label54:
        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(164);

        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(50);

        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(167);

        r24 = virtualinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String String()>();

        goto label56;

     label55:
        $r6 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i5 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r6[149] = $i5;

     label56:
        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(157);

        r23 = staticinvoke <com.hp.hpl.jena.sparql.expr.aggregate.AggregatorFactory: com.hp.hpl.jena.sparql.expr.aggregate.Aggregator createGroupConcat(boolean,com.hp.hpl.jena.sparql.expr.Expr,java.lang.String,com.hp.hpl.jena.sparql.expr.ExprList)>(z6, $r3, r24, $r28);

        goto label58;

     label57:
        $r21 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i21 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r21[150] = $i21;

        $i55 = (int) -1;

        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i55);

        $r30 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r30.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r30;

     label58:
        $z1 = r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: boolean allowAggregatesInExpressions>;

        if $z1 != 0 goto label59;

        $i4 = r26.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        $i3 = r26.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

        staticinvoke <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void throwParseException(java.lang.String,int,int)>("Aggregate expression not legal at this point", $i4, $i3);

     label59:
        $r4 = virtualinvoke r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.query.Query getQuery()>();

        $r5 = virtualinvoke $r4.<com.hp.hpl.jena.query.Query: com.hp.hpl.jena.sparql.expr.Expr allocAggregate(com.hp.hpl.jena.sparql.expr.aggregate.Aggregator)>(r23);

        return $r5;
    }

    public final com.hp.hpl.jena.sparql.expr.Expr iriOrFunction() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node $r3;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        com.hp.hpl.jena.sparql.expr.Expr $r4;
        com.hp.hpl.jena.sparql.expr.E_Function $r7;
        int[] $r5;
        com.hp.hpl.jena.sparql.expr.ExprList r6;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r1;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r6 = null;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String iri()>();

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 156: goto label3;
            case 158: goto label3;
            default: goto label4;
        };

     label3:
        r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.ExprList ArgList()>();

        goto label5;

     label4:
        $r5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r5[151] = $i1;

     label5:
        if r6 != null goto label6;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createNode(java.lang.String)>($r1);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr asExpr(com.hp.hpl.jena.graph.Node)>($r3);

        return $r4;

     label6:
        $r7 = new com.hp.hpl.jena.sparql.expr.E_Function;

        specialinvoke $r7.<com.hp.hpl.jena.sparql.expr.E_Function: void <init>(java.lang.String,com.hp.hpl.jena.sparql.expr.ExprList)>($r1, r6);

        return $r7;
    }

    public final com.hp.hpl.jena.graph.Node RDFLiteral() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r2;
        com.hp.hpl.jena.graph.Node $r9;
        int[] $r4, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i11;
        java.lang.String $r1, $r3, r7, r8;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r10;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String String()>();

        r7 = null;

        r8 = null;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i7 = (int) -1;

        if $i0 != $i7 goto label01;

        $i4 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label02;

     label01:
        $i4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label02:
        lookupswitch($i4)
        {
            case 15: goto label03;
            case 182: goto label03;
            default: goto label09;
        };

     label03:
        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i9 = (int) -1;

        if $i1 != $i9 goto label04;

        $i5 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label05;

     label04:
        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label05:
        lookupswitch($i5)
        {
            case 15: goto label06;
            case 182: goto label07;
            default: goto label08;
        };

     label06:
        $r2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(15);

        $r3 = $r2.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: java.lang.String image>;

        r7 = staticinvoke <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String stripChars(java.lang.String,int)>($r3, 1);

        goto label10;

     label07:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(182);

        r8 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String iri()>();

        goto label10;

     label08:
        $r4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r4[152] = $i2;

        $i11 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i11);

        $r10 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r10.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r10;

     label09:
        $r6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r6[153] = $i3;

     label10:
        $r9 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String,java.lang.String,java.lang.String)>($r1, r7, r8);

        return $r9;
    }

    public final com.hp.hpl.jena.graph.Node NumericLiteral() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node r3;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r1;
        int $i0, $i1, $i2, $i4, $i6;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r4;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        tableswitch($i2)
        {
            case 139: goto label3;
            case 140: goto label3;
            case 141: goto label3;
            case 142: goto label4;
            case 143: goto label4;
            case 144: goto label4;
            case 145: goto label5;
            case 146: goto label5;
            case 147: goto label5;
            default: goto label6;
        };

     label3:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node NumericLiteralUnsigned()>();

        goto label7;

     label4:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node NumericLiteralPositive()>();

        goto label7;

     label5:
        r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node NumericLiteralNegative()>();

        goto label7;

     label6:
        $r1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r1[154] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r4 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r4.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r4;

     label7:
        return r3;
    }

    public final com.hp.hpl.jena.graph.Node NumericLiteralUnsigned() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r1, $r4, $r7;
        com.hp.hpl.jena.graph.Node $r3, $r6, $r9;
        int[] $r10;
        int $i0, $i1, $i2, $i4, $i6;
        java.lang.String $r2, $r5, $r8;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r12;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        tableswitch($i2)
        {
            case 139: goto label3;
            case 140: goto label4;
            case 141: goto label5;
            default: goto label6;
        };

     label3:
        $r7 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(139);

        $r8 = $r7.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: java.lang.String image>;

        $r9 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createLiteralInteger(java.lang.String)>($r8);

        return $r9;

     label4:
        $r4 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(140);

        $r5 = $r4.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: java.lang.String image>;

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createLiteralDecimal(java.lang.String)>($r5);

        return $r6;

     label5:
        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(141);

        $r2 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: java.lang.String image>;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createLiteralDouble(java.lang.String)>($r2);

        return $r3;

     label6:
        $r10 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r10[155] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r12 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r12.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r12;
    }

    public final com.hp.hpl.jena.graph.Node NumericLiteralPositive() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r1, $r4, $r7;
        com.hp.hpl.jena.graph.Node $r3, $r6, $r9;
        int[] $r10;
        int $i0, $i1, $i2, $i4, $i6;
        java.lang.String $r2, $r5, $r8;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r12;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        tableswitch($i2)
        {
            case 142: goto label3;
            case 143: goto label4;
            case 144: goto label5;
            default: goto label6;
        };

     label3:
        $r7 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(142);

        $r8 = $r7.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: java.lang.String image>;

        $r9 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createLiteralInteger(java.lang.String)>($r8);

        return $r9;

     label4:
        $r4 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(143);

        $r5 = $r4.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: java.lang.String image>;

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createLiteralDecimal(java.lang.String)>($r5);

        return $r6;

     label5:
        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(144);

        $r2 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: java.lang.String image>;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createLiteralDouble(java.lang.String)>($r2);

        return $r3;

     label6:
        $r10 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r10[156] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r12 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r12.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r12;
    }

    public final com.hp.hpl.jena.graph.Node NumericLiteralNegative() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r1, $r4, $r7;
        com.hp.hpl.jena.graph.Node $r3, $r6, $r9;
        int[] $r10;
        int $i0, $i1, $i2, $i4, $i6;
        java.lang.String $r2, $r5, $r8;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r12;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        tableswitch($i2)
        {
            case 145: goto label3;
            case 146: goto label4;
            case 147: goto label5;
            default: goto label6;
        };

     label3:
        $r7 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(145);

        $r8 = $r7.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: java.lang.String image>;

        $r9 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createLiteralInteger(java.lang.String)>($r8);

        return $r9;

     label4:
        $r4 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(146);

        $r5 = $r4.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: java.lang.String image>;

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createLiteralDecimal(java.lang.String)>($r5);

        return $r6;

     label5:
        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(147);

        $r2 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: java.lang.String image>;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createLiteralDouble(java.lang.String)>($r2);

        return $r3;

     label6:
        $r10 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r10[157] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r12 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r12.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r12;
    }

    public final com.hp.hpl.jena.graph.Node BooleanLiteral() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.graph.Node $r1, $r2;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r3;
        int $i0, $i1, $i2, $i4, $i6;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r5;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i2)
        {
            case 115: goto label3;
            case 116: goto label4;
            default: goto label5;
        };

     label3:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(115);

        $r2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node XSD_TRUE>;

        return $r2;

     label4:
        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(116);

        $r1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node XSD_FALSE>;

        return $r1;

     label5:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r3[158] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r5 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r5.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r5;
    }

    public final java.lang.String String() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r1, $r3, $r5, $r7, r11;
        int[] $r9;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i8;
        java.lang.String $r2, $r4, $r6, $r8, r12, $r13;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r14;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i6 = (int) -1;

        if $i0 != $i6 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        tableswitch($i2)
        {
            case 152: goto label3;
            case 153: goto label4;
            case 154: goto label5;
            case 155: goto label6;
            default: goto label7;
        };

     label3:
        $r7 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(152);

        r11 = $r7;

        $r8 = $r7.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: java.lang.String image>;

        r12 = staticinvoke <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String stripQuotes(java.lang.String)>($r8);

        goto label8;

     label4:
        $r5 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(153);

        r11 = $r5;

        $r6 = $r5.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: java.lang.String image>;

        r12 = staticinvoke <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String stripQuotes(java.lang.String)>($r6);

        goto label8;

     label5:
        $r3 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(154);

        r11 = $r3;

        $r4 = $r3.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: java.lang.String image>;

        r12 = staticinvoke <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String stripQuotes3(java.lang.String)>($r4);

        goto label8;

     label6:
        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(155);

        r11 = $r1;

        $r2 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: java.lang.String image>;

        r12 = staticinvoke <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String stripQuotes3(java.lang.String)>($r2);

        goto label8;

     label7:
        $r9 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r9[159] = $i1;

        $i8 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i8);

        $r14 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r14.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r14;

     label8:
        $i3 = r11.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        $i4 = r11.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

        $r13 = staticinvoke <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String unescapeStr(java.lang.String,int,int)>(r12, $i3, $i4);

        return $r13;
    }

    public final java.lang.String iri() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r3;
        int $i0, $i1, $i2, $i4, $i6;
        java.lang.String $r1, $r2;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r5;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        tableswitch($i2)
        {
            case 9: goto label3;
            case 10: goto label4;
            case 11: goto label4;
            default: goto label5;
        };

     label3:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String IRIREF()>();

        return $r2;

     label4:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String PrefixedName()>();

        return $r1;

     label5:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r3[160] = $i1;

        $i6 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i6);

        $r5 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r5.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r5;
    }

    public final java.lang.String PrefixedName() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r1, $r4;
        int[] $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i10;
        java.lang.String $r2, $r3, $r5, $r6;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r9;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i8 = (int) -1;

        if $i0 != $i8 goto label1;

        $i6 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i6)
        {
            case 10: goto label4;
            case 11: goto label3;
            default: goto label5;
        };

     label3:
        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(11);

        $r2 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: java.lang.String image>;

        $i2 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        $i1 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String resolvePName(java.lang.String,int,int)>($r2, $i2, $i1);

        return $r3;

     label4:
        $r4 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(10);

        $r5 = $r4.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: java.lang.String image>;

        $i4 = $r4.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        $i3 = $r4.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String resolvePName(java.lang.String,int,int)>($r5, $i4, $i3);

        return $r6;

     label5:
        $r7 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r7[161] = $i5;

        $i10 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i10);

        $r9 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r9.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r9;
    }

    public final com.hp.hpl.jena.graph.Node BlankNode() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r1, $r3;
        com.hp.hpl.jena.graph.Node $r2, $r5;
        int[] $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i10;
        java.lang.String $r4;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r8;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

        $i8 = (int) -1;

        if $i0 != $i8 goto label1;

        $i6 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk()>();

        goto label2;

     label1:
        $i6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk>;

     label2:
        lookupswitch($i6)
        {
            case 12: goto label3;
            case 163: goto label4;
            default: goto label5;
        };

     label3:
        $r3 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(12);

        $r4 = $r3.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: java.lang.String image>;

        $i4 = $r3.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        $i3 = $r3.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createBNode(java.lang.String,int,int)>($r4, $i4, $i3);

        return $r5;

     label4:
        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(163);

        $i2 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        $i1 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.graph.Node createBNode(int,int)>($i2, $i1);

        return $r2;

     label5:
        $r6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $r6[162] = $i5;

        $i10 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>($i10);

        $r8 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        specialinvoke $r8.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>()>();

        throw $r8;
    }

    public final java.lang.String IRIREF() throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r1;
        int $i0, $i1;
        java.lang.String $r2, $r3;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int)>(9);

        $r2 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: java.lang.String image>;

        $i1 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginLine>;

        $i0 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int beginColumn>;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String resolveQuotedIRI(java.lang.String,int,int)>($r2, $i1, $i0);

        return $r3;
    }

    private static void jj_la1_init_0()
    {
        int $i1, $i3;
        int[] $r0;

        $r0 = newarray (int)[163];

        $r0[0] = 119537664;

        $r0[1] = 1572864;

        $r0[2] = 1572864;

        $r0[3] = 0;

        $r0[4] = 12582912;

        $r0[5] = 12582912;

        $r0[6] = 24576;

        $r0[7] = 24576;

        $r0[8] = 24576;

        $r0[9] = 0;

        $r0[10] = 0;

        $r0[11] = 32256;

        $r0[12] = 0;

        $r0[13] = 28160;

        $r0[14] = 28160;

        $r0[15] = 0;

        $r0[16] = 0;

        $r0[17] = 0;

        $r0[18] = 3584;

        $r0[19] = 0;

        $r0[20] = 0;

        $r0[21] = 0;

        $r0[22] = 536870912;

        $r0[23] = 402653184;

        $r0[24] = 28160;

        $r0[25] = 0;

        $r0[26] = 28160;

        $r0[27] = 3584;

        $r0[28] = 28160;

        $r0[29] = 0;

        $r0[30] = 28160;

        $r0[31] = 28160;

        $r0[32] = 268435456;

        $r0[33] = 134217728;

        $r0[34] = 402653184;

        $r0[35] = -2147483648;

        $r0[36] = 0;

        $r0[37] = 0;

        $r0[38] = 0;

        $r0[39] = 0;

        $r0[40] = 0;

        $r0[41] = 0;

        $r0[42] = 0;

        $r0[43] = 0;

        $r0[44] = 0;

        $r0[45] = 0;

        $r0[46] = 0;

        $r0[47] = 0;

        $r0[48] = 0;

        $r0[49] = 0;

        $r0[50] = 0;

        $r0[51] = 3584;

        $r0[52] = 0;

        $r0[53] = 3584;

        $r0[54] = 0;

        $r0[55] = 32256;

        $r0[56] = 0;

        $r0[57] = 0;

        $r0[58] = 32256;

        $r0[59] = 32256;

        $r0[60] = 32256;

        $r0[61] = 0;

        $r0[62] = 2097152;

        $r0[63] = 32256;

        $r0[64] = -2147483648;

        $r0[65] = 0;

        $r0[66] = 32256;

        $r0[67] = 32256;

        $r0[68] = 0;

        $r0[69] = -2147483648;

        $r0[70] = 0;

        $r0[71] = 24576;

        $r0[72] = 3584;

        $r0[73] = 24576;

        $r0[74] = 0;

        $r0[75] = 0;

        $r0[76] = 3584;

        $r0[77] = 0;

        $r0[78] = 3584;

        $r0[79] = 0;

        $r0[80] = 3584;

        $r0[81] = 4194304;

        $r0[82] = 0;

        $r0[83] = 0;

        $r0[84] = 0;

        $r0[85] = 0;

        $r0[86] = 32256;

        $r0[87] = 32256;

        $r0[88] = 0;

        $r0[89] = 32256;

        $r0[90] = 290304;

        $r0[91] = 0;

        $r0[92] = 290304;

        $r0[93] = 290304;

        $r0[94] = 0;

        $r0[95] = 32256;

        $r0[96] = 290304;

        $r0[97] = 290304;

        $r0[98] = 0;

        $r0[99] = 290304;

        $r0[100] = 290304;

        $r0[101] = 0;

        $r0[102] = 0;

        $r0[103] = 0;

        $r0[104] = 0;

        $r0[105] = 265728;

        $r0[106] = 0;

        $r0[107] = 265728;

        $r0[108] = 0;

        $r0[109] = 265728;

        $r0[110] = 265728;

        $r0[111] = 265728;

        $r0[112] = 265728;

        $r0[113] = 0;

        $r0[114] = 0;

        $r0[115] = 32256;

        $r0[116] = 32256;

        $r0[117] = 32256;

        $r0[118] = 32256;

        $r0[119] = 32256;

        $r0[120] = 28160;

        $r0[121] = 24576;

        $r0[122] = 7680;

        $r0[123] = 0;

        $r0[124] = 0;

        $r0[125] = 0;

        $r0[126] = 0;

        $r0[127] = 0;

        $r0[128] = 0;

        $r0[129] = 0;

        $r0[130] = 0;

        $r0[131] = 0;

        $r0[132] = 0;

        $r0[133] = 0;

        $r0[134] = 28160;

        $r0[135] = 28160;

        $r0[136] = 0;

        $r0[137] = 0;

        $r0[138] = 0;

        $r0[139] = 0;

        $r0[140] = 0;

        $r0[141] = 4194304;

        $r0[142] = 28160;

        $r0[143] = 4194304;

        $r0[144] = 4194304;

        $r0[145] = 4194304;

        $r0[146] = 4194304;

        $r0[147] = 4194304;

        $r0[148] = 4194304;

        $r0[149] = 0;

        $r0[150] = 0;

        $r0[151] = 0;

        $i1 = (int) 32768;

        $r0[152] = $i1;

        $i3 = (int) 32768;

        $r0[153] = $i3;

        $r0[154] = 0;

        $r0[155] = 0;

        $r0[156] = 0;

        $r0[157] = 0;

        $r0[158] = 0;

        $r0[159] = 0;

        $r0[160] = 3584;

        $r0[161] = 3072;

        $r0[162] = 4096;

        <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1_0> = $r0;

        return;
    }

    private static void jj_la1_init_1()
    {
        int $i1;
        int[] $r0;

        $r0 = newarray (int)[163];

        $r0[0] = 0;

        $r0[1] = 0;

        $r0[2] = 0;

        $r0[3] = 16;

        $r0[4] = 0;

        $r0[5] = 0;

        $r0[6] = 0;

        $r0[7] = 0;

        $r0[8] = 0;

        $r0[9] = 16;

        $r0[10] = 16;

        $r0[11] = 0;

        $r0[12] = 48;

        $r0[13] = 0;

        $r0[14] = 0;

        $r0[15] = 16;

        $r0[16] = 32;

        $r0[17] = 16;

        $r0[18] = 8;

        $r0[19] = 32;

        $r0[20] = 65536;

        $r0[21] = 131072;

        $r0[22] = 0;

        $r0[23] = 0;

        $r0[24] = 1844469760;

        $i1 = (int) 32768;

        $r0[25] = $i1;

        $r0[26] = 1844469760;

        $r0[27] = 1844469760;

        $r0[28] = 1844469766;

        $r0[29] = 6;

        $r0[30] = 1844469760;

        $r0[31] = 1844469766;

        $r0[32] = 0;

        $r0[33] = 0;

        $r0[34] = 0;

        $r0[35] = 0;

        $r0[36] = 0;

        $r0[37] = 0;

        $r0[38] = 0;

        $r0[39] = 0;

        $r0[40] = 0;

        $r0[41] = 0;

        $r0[42] = 0;

        $r0[43] = 0;

        $r0[44] = 0;

        $r0[45] = 0;

        $r0[46] = 0;

        $r0[47] = 0;

        $r0[48] = 0;

        $r0[49] = 0;

        $r0[50] = 0;

        $r0[51] = 8;

        $r0[52] = 128;

        $r0[53] = 128;

        $r0[54] = 136;

        $r0[55] = 0;

        $r0[56] = 128;

        $r0[57] = 0;

        $r0[58] = 0;

        $r0[59] = 0;

        $r0[60] = 0;

        $r0[61] = 0;

        $r0[62] = 0;

        $r0[63] = 0;

        $r0[64] = 268443008;

        $r0[65] = 0;

        $r0[66] = 0;

        $r0[67] = 0;

        $r0[68] = 0;

        $r0[69] = 268443008;

        $r0[70] = 0;

        $r0[71] = 0;

        $r0[72] = 1;

        $r0[73] = 0;

        $r0[74] = 0;

        $r0[75] = 0;

        $r0[76] = 1;

        $r0[77] = 0;

        $r0[78] = 1;

        $r0[79] = 512;

        $r0[80] = 1844469760;

        $r0[81] = 0;

        $r0[82] = 0;

        $r0[83] = 0;

        $r0[84] = 0;

        $r0[85] = 0;

        $r0[86] = 0;

        $r0[87] = 0;

        $r0[88] = 0;

        $r0[89] = 0;

        $r0[90] = 0;

        $r0[91] = 0;

        $r0[92] = 0;

        $r0[93] = 0;

        $r0[94] = 0;

        $r0[95] = 0;

        $r0[96] = 0;

        $r0[97] = 0;

        $r0[98] = 0;

        $r0[99] = 0;

        $r0[100] = 0;

        $r0[101] = 0;

        $r0[102] = 0;

        $r0[103] = 0;

        $r0[104] = 0;

        $r0[105] = 0;

        $r0[106] = 0;

        $r0[107] = 0;

        $r0[108] = 0;

        $r0[109] = 0;

        $r0[110] = 0;

        $r0[111] = 0;

        $r0[112] = 0;

        $r0[113] = 0;

        $r0[114] = 0;

        $r0[115] = 0;

        $r0[116] = 0;

        $r0[117] = 0;

        $r0[118] = 0;

        $r0[119] = 0;

        $r0[120] = 0;

        $r0[121] = 0;

        $r0[122] = 0;

        $r0[123] = 0;

        $r0[124] = 0;

        $r0[125] = -2147467264;

        $r0[126] = -2147467264;

        $r0[127] = 0;

        $r0[128] = 0;

        $r0[129] = 0;

        $r0[130] = 0;

        $r0[131] = 0;

        $r0[132] = 0;

        $r0[133] = 0;

        $r0[134] = 1844469760;

        $r0[135] = 1844469760;

        $r0[136] = 0;

        $r0[137] = 1844469760;

        $r0[138] = 0;

        $r0[139] = 0;

        $r0[140] = 0;

        $r0[141] = 0;

        $r0[142] = 1844469760;

        $r0[143] = 0;

        $r0[144] = 0;

        $r0[145] = 0;

        $r0[146] = 0;

        $r0[147] = 0;

        $r0[148] = 0;

        $r0[149] = 0;

        $r0[150] = 233832448;

        $r0[151] = 0;

        $r0[152] = 0;

        $r0[153] = 0;

        $r0[154] = 0;

        $r0[155] = 0;

        $r0[156] = 0;

        $r0[157] = 0;

        $r0[158] = 0;

        $r0[159] = 0;

        $r0[160] = 0;

        $r0[161] = 0;

        $r0[162] = 0;

        <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1_1> = $r0;

        return;
    }

    private static void jj_la1_init_2()
    {
        int[] $r0;
        int $i1, $i3, $i5, $i7, $i9, $i11, $i13, $i15, $i17, $i19, $i21;

        $r0 = newarray (int)[163];

        $r0[0] = 0;

        $r0[1] = 0;

        $r0[2] = 0;

        $r0[3] = 0;

        $r0[4] = 0;

        $r0[5] = 0;

        $r0[6] = 0;

        $r0[7] = 0;

        $r0[8] = 0;

        $r0[9] = 0;

        $r0[10] = 0;

        $r0[11] = 0;

        $r0[12] = 0;

        $r0[13] = 0;

        $r0[14] = 0;

        $r0[15] = 0;

        $r0[16] = 0;

        $r0[17] = 0;

        $r0[18] = 0;

        $r0[19] = 0;

        $r0[20] = 0;

        $r0[21] = 0;

        $r0[22] = 0;

        $r0[23] = 0;

        $i1 = (int) -1;

        $r0[24] = $i1;

        $r0[25] = 0;

        $i3 = (int) -1;

        $r0[26] = $i3;

        $i5 = (int) -1;

        $r0[27] = $i5;

        $i7 = (int) -1;

        $r0[28] = $i7;

        $r0[29] = 0;

        $i9 = (int) -1;

        $r0[30] = $i9;

        $i11 = (int) -1;

        $r0[31] = $i11;

        $r0[32] = 0;

        $r0[33] = 0;

        $r0[34] = 0;

        $r0[35] = 0;

        $r0[36] = 0;

        $r0[37] = 0;

        $r0[38] = 0;

        $r0[39] = 0;

        $r0[40] = 0;

        $r0[41] = 0;

        $r0[42] = 0;

        $r0[43] = 0;

        $r0[44] = 0;

        $r0[45] = 0;

        $r0[46] = 0;

        $r0[47] = 0;

        $r0[48] = 0;

        $r0[49] = 0;

        $r0[50] = 0;

        $r0[51] = 0;

        $r0[52] = 0;

        $r0[53] = 0;

        $r0[54] = 0;

        $r0[55] = 0;

        $r0[56] = 0;

        $r0[57] = 0;

        $r0[58] = 0;

        $r0[59] = 0;

        $r0[60] = 0;

        $r0[61] = 0;

        $r0[62] = 0;

        $r0[63] = 0;

        $r0[64] = 0;

        $r0[65] = 0;

        $r0[66] = 0;

        $r0[67] = 0;

        $r0[68] = 0;

        $r0[69] = 0;

        $r0[70] = 0;

        $r0[71] = 0;

        $r0[72] = 0;

        $r0[73] = 0;

        $r0[74] = 0;

        $r0[75] = 0;

        $r0[76] = 0;

        $r0[77] = 0;

        $r0[78] = 0;

        $r0[79] = 0;

        $i13 = (int) -1;

        $r0[80] = $i13;

        $r0[81] = 0;

        $r0[82] = 0;

        $r0[83] = 0;

        $r0[84] = 0;

        $r0[85] = 0;

        $r0[86] = 0;

        $r0[87] = 0;

        $r0[88] = 0;

        $r0[89] = 0;

        $r0[90] = 0;

        $r0[91] = 0;

        $r0[92] = 0;

        $r0[93] = 0;

        $r0[94] = 0;

        $r0[95] = 0;

        $r0[96] = 0;

        $r0[97] = 0;

        $r0[98] = 0;

        $r0[99] = 0;

        $r0[100] = 0;

        $r0[101] = 0;

        $r0[102] = 0;

        $r0[103] = 0;

        $r0[104] = 0;

        $r0[105] = 0;

        $r0[106] = 0;

        $r0[107] = 0;

        $r0[108] = 0;

        $r0[109] = 0;

        $r0[110] = 0;

        $r0[111] = 0;

        $r0[112] = 0;

        $r0[113] = 0;

        $r0[114] = 0;

        $r0[115] = 0;

        $r0[116] = 0;

        $r0[117] = 0;

        $r0[118] = 0;

        $r0[119] = 0;

        $r0[120] = 0;

        $r0[121] = 0;

        $r0[122] = 0;

        $r0[123] = 0;

        $r0[124] = 0;

        $r0[125] = 0;

        $r0[126] = 0;

        $r0[127] = 0;

        $r0[128] = 0;

        $r0[129] = 0;

        $r0[130] = 0;

        $r0[131] = 0;

        $r0[132] = 0;

        $r0[133] = 0;

        $i15 = (int) -1;

        $r0[134] = $i15;

        $i17 = (int) -1;

        $r0[135] = $i17;

        $r0[136] = 0;

        $i19 = (int) -1;

        $r0[137] = $i19;

        $r0[138] = 0;

        $r0[139] = 0;

        $r0[140] = 0;

        $r0[141] = 0;

        $i21 = (int) -1;

        $r0[142] = $i21;

        $r0[143] = 0;

        $r0[144] = 0;

        $r0[145] = 0;

        $r0[146] = 0;

        $r0[147] = 0;

        $r0[148] = 0;

        $r0[149] = 0;

        $r0[150] = 0;

        $r0[151] = 0;

        $r0[152] = 0;

        $r0[153] = 0;

        $r0[154] = 0;

        $r0[155] = 0;

        $r0[156] = 0;

        $r0[157] = 0;

        $r0[158] = 0;

        $r0[159] = 0;

        $r0[160] = 0;

        $r0[161] = 0;

        $r0[162] = 0;

        <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1_2> = $r0;

        return;
    }

    private static void jj_la1_init_3()
    {
        int[] $r0;

        $r0 = newarray (int)[163];

        $r0[0] = 0;

        $r0[1] = 0;

        $r0[2] = 0;

        $r0[3] = 0;

        $r0[4] = 0;

        $r0[5] = 0;

        $r0[6] = 0;

        $r0[7] = 0;

        $r0[8] = 0;

        $r0[9] = 0;

        $r0[10] = 0;

        $r0[11] = 1572864;

        $r0[12] = 0;

        $r0[13] = 0;

        $r0[14] = 0;

        $r0[15] = 0;

        $r0[16] = 0;

        $r0[17] = 0;

        $r0[18] = 0;

        $r0[19] = 0;

        $r0[20] = 0;

        $r0[21] = 0;

        $r0[22] = 0;

        $r0[23] = 0;

        $r0[24] = 491519;

        $r0[25] = 0;

        $r0[26] = 491519;

        $r0[27] = 491519;

        $r0[28] = 491519;

        $r0[29] = 0;

        $r0[30] = 491519;

        $r0[31] = 491519;

        $r0[32] = 0;

        $r0[33] = 0;

        $r0[34] = 0;

        $r0[35] = 0;

        $r0[36] = 0;

        $r0[37] = -4194304;

        $r0[38] = -4194304;

        $r0[39] = 0;

        $r0[40] = 0;

        $r0[41] = 0;

        $r0[42] = 0;

        $r0[43] = 0;

        $r0[44] = 0;

        $r0[45] = 0;

        $r0[46] = 0;

        $r0[47] = 0;

        $r0[48] = 4194304;

        $r0[49] = 12582912;

        $r0[50] = 0;

        $r0[51] = 0;

        $r0[52] = 0;

        $r0[53] = 0;

        $r0[54] = 0;

        $r0[55] = 1572864;

        $r0[56] = 0;

        $r0[57] = 0;

        $r0[58] = 1572864;

        $r0[59] = 1572864;

        $r0[60] = 1572864;

        $r0[61] = 0;

        $r0[62] = 0;

        $r0[63] = 1572864;

        $r0[64] = 0;

        $r0[65] = 0;

        $r0[66] = 1572864;

        $r0[67] = 1572864;

        $r0[68] = 0;

        $r0[69] = 0;

        $r0[70] = 0;

        $r0[71] = 0;

        $r0[72] = 1572864;

        $r0[73] = 0;

        $r0[74] = 0;

        $r0[75] = 0;

        $r0[76] = 1572864;

        $r0[77] = 0;

        $r0[78] = 1572864;

        $r0[79] = 0;

        $r0[80] = 491519;

        $r0[81] = 0;

        $r0[82] = 0;

        $r0[83] = 0;

        $r0[84] = 0;

        $r0[85] = 0;

        $r0[86] = 1572864;

        $r0[87] = 1572864;

        $r0[88] = 0;

        $r0[89] = 1572864;

        $r0[90] = 0;

        $r0[91] = 0;

        $r0[92] = 0;

        $r0[93] = 0;

        $r0[94] = 0;

        $r0[95] = 1572864;

        $r0[96] = 0;

        $r0[97] = 0;

        $r0[98] = 0;

        $r0[99] = 0;

        $r0[100] = 0;

        $r0[101] = 0;

        $r0[102] = 0;

        $r0[103] = 0;

        $r0[104] = 0;

        $r0[105] = 0;

        $r0[106] = 0;

        $r0[107] = 0;

        $r0[108] = 0;

        $r0[109] = 0;

        $r0[110] = 0;

        $r0[111] = 0;

        $r0[112] = 0;

        $r0[113] = 0;

        $r0[114] = 0;

        $r0[115] = 1572864;

        $r0[116] = 1572864;

        $r0[117] = 1572864;

        $r0[118] = 1572864;

        $r0[119] = 1572864;

        $r0[120] = 0;

        $r0[121] = 0;

        $r0[122] = 1572864;

        $r0[123] = 0;

        $r0[124] = 0;

        $r0[125] = 0;

        $r0[126] = 0;

        $r0[127] = 0;

        $r0[128] = 0;

        $r0[129] = 0;

        $r0[130] = 0;

        $r0[131] = 0;

        $r0[132] = 0;

        $r0[133] = 0;

        $r0[134] = 2064383;

        $r0[135] = 2064383;

        $r0[136] = 0;

        $r0[137] = 491519;

        $r0[138] = 0;

        $r0[139] = 0;

        $r0[140] = 0;

        $r0[141] = 0;

        $r0[142] = 2064383;

        $r0[143] = 0;

        $r0[144] = 0;

        $r0[145] = 0;

        $r0[146] = 0;

        $r0[147] = 0;

        $r0[148] = 0;

        $r0[149] = 0;

        $r0[150] = 0;

        $r0[151] = 0;

        $r0[152] = 0;

        $r0[153] = 0;

        $r0[154] = 0;

        $r0[155] = 0;

        $r0[156] = 0;

        $r0[157] = 0;

        $r0[158] = 1572864;

        $r0[159] = 0;

        $r0[160] = 0;

        $r0[161] = 0;

        $r0[162] = 0;

        <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1_3> = $r0;

        return;
    }

    private static void jj_la1_init_4()
    {
        int[] $r0;

        $r0 = newarray (int)[163];

        $r0[0] = 0;

        $r0[1] = 0;

        $r0[2] = 0;

        $r0[3] = 0;

        $r0[4] = 0;

        $r0[5] = 0;

        $r0[6] = 268435456;

        $r0[7] = 268435456;

        $r0[8] = 268435456;

        $r0[9] = 0;

        $r0[10] = 0;

        $r0[11] = 1594882048;

        $r0[12] = -2147483648;

        $r0[13] = 0;

        $r0[14] = 0;

        $r0[15] = 0;

        $r0[16] = -2147483648;

        $r0[17] = 0;

        $r0[18] = 0;

        $r0[19] = 0;

        $r0[20] = 0;

        $r0[21] = 0;

        $r0[22] = 0;

        $r0[23] = 0;

        $r0[24] = 268435456;

        $r0[25] = 0;

        $r0[26] = 268435456;

        $r0[27] = 268435456;

        $r0[28] = 268435456;

        $r0[29] = 0;

        $r0[30] = 268435456;

        $r0[31] = 268435456;

        $r0[32] = 0;

        $r0[33] = 0;

        $r0[34] = 0;

        $r0[35] = 0;

        $r0[36] = 0;

        $r0[37] = 265;

        $r0[38] = 265;

        $r0[39] = 4;

        $r0[40] = 16;

        $r0[41] = 4;

        $r0[42] = 4;

        $r0[43] = 4;

        $r0[44] = 4;

        $r0[45] = 4;

        $r0[46] = 4;

        $r0[47] = 256;

        $r0[48] = 0;

        $r0[49] = 0;

        $r0[50] = 512;

        $r0[51] = 0;

        $r0[52] = 0;

        $r0[53] = 64;

        $r0[54] = 192;

        $r0[55] = 1594882048;

        $r0[56] = 0;

        $r0[57] = 0;

        $r0[58] = 1594882048;

        $r0[59] = 1594882048;

        $r0[60] = 1594882048;

        $r0[61] = 0;

        $r0[62] = 0;

        $r0[63] = 1594882048;

        $r0[64] = -2147483648;

        $r0[65] = 0;

        $r0[66] = 1594882048;

        $r0[67] = 1594882048;

        $r0[68] = 0;

        $r0[69] = -2147483648;

        $r0[70] = 4;

        $r0[71] = 1342177280;

        $r0[72] = 252704768;

        $r0[73] = 0;

        $r0[74] = 1342177280;

        $r0[75] = 1342177280;

        $r0[76] = 252704768;

        $r0[77] = 1342177280;

        $r0[78] = 252704768;

        $r0[79] = 0;

        $r0[80] = 268435456;

        $r0[81] = 0;

        $r0[82] = 0;

        $r0[83] = 1342177280;

        $r0[84] = 0;

        $r0[85] = 1342177280;

        $r0[86] = 1594882048;

        $r0[87] = 1594882048;

        $r0[88] = 0;

        $r0[89] = 1594882048;

        $r0[90] = 0;

        $r0[91] = 0;

        $r0[92] = 0;

        $r0[93] = 0;

        $r0[94] = 0;

        $r0[95] = 1594882048;

        $r0[96] = 268435456;

        $r0[97] = 268435456;

        $r0[98] = 0;

        $r0[99] = 268435456;

        $r0[100] = 268435456;

        $r0[101] = 0;

        $r0[102] = 0;

        $r0[103] = 0;

        $r0[104] = 0;

        $r0[105] = 268435456;

        $r0[106] = 0;

        $r0[107] = 268435456;

        $r0[108] = 0;

        $r0[109] = 0;

        $r0[110] = 268435456;

        $r0[111] = 0;

        $r0[112] = 0;

        $r0[113] = 268435456;

        $r0[114] = 268435456;

        $r0[115] = 1594882048;

        $r0[116] = 1594882048;

        $r0[117] = 1594882048;

        $r0[118] = 1594882048;

        $r0[119] = 1326446592;

        $r0[120] = 0;

        $r0[121] = 0;

        $r0[122] = 1326446592;

        $r0[123] = 0;

        $r0[124] = 0;

        $r0[125] = 0;

        $r0[126] = 0;

        $r0[127] = 1032192;

        $r0[128] = 1032192;

        $r0[129] = 0;

        $r0[130] = 0;

        $r0[131] = 1032192;

        $r0[132] = 0;

        $r0[133] = 0;

        $r0[134] = 521140224;

        $r0[135] = 521140224;

        $r0[136] = 1342177280;

        $r0[137] = 0;

        $r0[138] = 0;

        $r0[139] = 0;

        $r0[140] = 0;

        $r0[141] = 0;

        $r0[142] = 521140224;

        $r0[143] = 0;

        $r0[144] = 0;

        $r0[145] = 0;

        $r0[146] = 0;

        $r0[147] = 0;

        $r0[148] = 0;

        $r0[149] = 0;

        $r0[150] = 0;

        $r0[151] = 1342177280;

        $r0[152] = 0;

        $r0[153] = 0;

        $r0[154] = 1046528;

        $r0[155] = 14336;

        $r0[156] = 114688;

        $r0[157] = 917504;

        $r0[158] = 0;

        $r0[159] = 251658240;

        $r0[160] = 0;

        $r0[161] = 0;

        $r0[162] = 0;

        <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1_4> = $r0;

        return;
    }

    private static void jj_la1_init_5()
    {
        int[] $r0;

        $r0 = newarray (int)[163];

        $r0[0] = 0;

        $r0[1] = 0;

        $r0[2] = 0;

        $r0[3] = 0;

        $r0[4] = 0;

        $r0[5] = 0;

        $r0[6] = 0;

        $r0[7] = 0;

        $r0[8] = 1048576;

        $r0[9] = 0;

        $r0[10] = 0;

        $r0[11] = 10;

        $r0[12] = 0;

        $r0[13] = 0;

        $r0[14] = 1048576;

        $r0[15] = 0;

        $r0[16] = 0;

        $r0[17] = 0;

        $r0[18] = 0;

        $r0[19] = 0;

        $r0[20] = 0;

        $r0[21] = 0;

        $r0[22] = 0;

        $r0[23] = 0;

        $r0[24] = 0;

        $r0[25] = 0;

        $r0[26] = 0;

        $r0[27] = 0;

        $r0[28] = 0;

        $r0[29] = 0;

        $r0[30] = 0;

        $r0[31] = 0;

        $r0[32] = 0;

        $r0[33] = 0;

        $r0[34] = 0;

        $r0[35] = 0;

        $r0[36] = 16;

        $r0[37] = 0;

        $r0[38] = 0;

        $r0[39] = 0;

        $r0[40] = 0;

        $r0[41] = 0;

        $r0[42] = 0;

        $r0[43] = 0;

        $r0[44] = 0;

        $r0[45] = 0;

        $r0[46] = 0;

        $r0[47] = 0;

        $r0[48] = 0;

        $r0[49] = 0;

        $r0[50] = 0;

        $r0[51] = 0;

        $r0[52] = 0;

        $r0[53] = 0;

        $r0[54] = 0;

        $r0[55] = 10;

        $r0[56] = 0;

        $r0[57] = 64;

        $r0[58] = 10;

        $r0[59] = 10;

        $r0[60] = 10;

        $r0[61] = 64;

        $r0[62] = 0;

        $r0[63] = 10;

        $r0[64] = 0;

        $r0[65] = 64;

        $r0[66] = 10;

        $r0[67] = 10;

        $r0[68] = 64;

        $r0[69] = 0;

        $r0[70] = 0;

        $r0[71] = 0;

        $r0[72] = 0;

        $r0[73] = 0;

        $r0[74] = 0;

        $r0[75] = 0;

        $r0[76] = 0;

        $r0[77] = 0;

        $r0[78] = 0;

        $r0[79] = 0;

        $r0[80] = 0;

        $r0[81] = 0;

        $r0[82] = 32;

        $r0[83] = 0;

        $r0[84] = 32;

        $r0[85] = 0;

        $r0[86] = 10;

        $r0[87] = 10;

        $r0[88] = 64;

        $r0[89] = 10;

        $r0[90] = 0;

        $r0[91] = 16;

        $r0[92] = 0;

        $r0[93] = 0;

        $r0[94] = 32;

        $r0[95] = 10;

        $r0[96] = 33562624;

        $r0[97] = 33562624;

        $r0[98] = 16;

        $r0[99] = 33562624;

        $r0[100] = 33562624;

        $r0[101] = 32;

        $r0[102] = 16777216;

        $r0[103] = 2097152;

        $r0[104] = 269746176;

        $r0[105] = 33562624;

        $r0[106] = 269746176;

        $r0[107] = 8192;

        $r0[108] = 16777216;

        $r0[109] = 33554432;

        $r0[110] = 33554432;

        $r0[111] = 0;

        $r0[112] = 33554432;

        $r0[113] = 2;

        $r0[114] = 2;

        $r0[115] = 10;

        $r0[116] = 10;

        $r0[117] = 10;

        $r0[118] = 10;

        $r0[119] = 8;

        $r0[120] = 0;

        $r0[121] = 0;

        $r0[122] = 8;

        $r0[123] = 65536;

        $r0[124] = 131072;

        $r0[125] = 8064;

        $r0[126] = 8064;

        $r0[127] = 786432;

        $r0[128] = 0;

        $r0[129] = 3145728;

        $r0[130] = 3145728;

        $r0[131] = 786432;

        $r0[132] = 3145728;

        $r0[133] = 3145728;

        $r0[134] = 794624;

        $r0[135] = 0;

        $r0[136] = 0;

        $r0[137] = 0;

        $r0[138] = 32;

        $r0[139] = 32;

        $r0[140] = 32;

        $r0[141] = 0;

        $r0[142] = 1843200;

        $r0[143] = 0;

        $r0[144] = 0;

        $r0[145] = 0;

        $r0[146] = 0;

        $r0[147] = 0;

        $r0[148] = 0;

        $r0[149] = 16;

        $r0[150] = 0;

        $r0[151] = 0;

        $r0[152] = 4194304;

        $r0[153] = 4194304;

        $r0[154] = 0;

        $r0[155] = 0;

        $r0[156] = 0;

        $r0[157] = 0;

        $r0[158] = 0;

        $r0[159] = 0;

        $r0[160] = 0;

        $r0[161] = 0;

        $r0[162] = 8;

        <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1_5> = $r0;

        return;
    }

    private static void jj_la1_init_6()
    {
        int[] $r0;

        $r0 = newarray (int)[163];

        $r0[0] = 0;

        $r0[1] = 0;

        $r0[2] = 0;

        $r0[3] = 0;

        $r0[4] = 0;

        $r0[5] = 0;

        $r0[6] = 0;

        $r0[7] = 0;

        $r0[8] = 0;

        $r0[9] = 0;

        $r0[10] = 0;

        $r0[11] = 0;

        $r0[12] = 0;

        $r0[13] = 0;

        $r0[14] = 0;

        $r0[15] = 0;

        $r0[16] = 0;

        $r0[17] = 0;

        $r0[18] = 0;

        $r0[19] = 0;

        $r0[20] = 0;

        $r0[21] = 0;

        $r0[22] = 0;

        $r0[23] = 0;

        $r0[24] = 0;

        $r0[25] = 0;

        $r0[26] = 0;

        $r0[27] = 0;

        $r0[28] = 0;

        $r0[29] = 0;

        $r0[30] = 0;

        $r0[31] = 0;

        $r0[32] = 0;

        $r0[33] = 0;

        $r0[34] = 0;

        $r0[35] = 0;

        $r0[36] = 0;

        $r0[37] = 0;

        $r0[38] = 0;

        $r0[39] = 0;

        $r0[40] = 0;

        $r0[41] = 0;

        $r0[42] = 0;

        $r0[43] = 0;

        $r0[44] = 0;

        $r0[45] = 0;

        $r0[46] = 0;

        $r0[47] = 0;

        $r0[48] = 0;

        $r0[49] = 0;

        $r0[50] = 0;

        $r0[51] = 0;

        $r0[52] = 0;

        $r0[53] = 0;

        $r0[54] = 0;

        $r0[55] = 0;

        $r0[56] = 0;

        $r0[57] = 0;

        $r0[58] = 0;

        $r0[59] = 0;

        $r0[60] = 0;

        $r0[61] = 0;

        $r0[62] = 0;

        $r0[63] = 0;

        $r0[64] = 0;

        $r0[65] = 0;

        $r0[66] = 0;

        $r0[67] = 0;

        $r0[68] = 0;

        $r0[69] = 0;

        $r0[70] = 0;

        $r0[71] = 0;

        $r0[72] = 0;

        $r0[73] = 0;

        $r0[74] = 0;

        $r0[75] = 0;

        $r0[76] = 0;

        $r0[77] = 0;

        $r0[78] = 0;

        $r0[79] = 0;

        $r0[80] = 0;

        $r0[81] = 0;

        $r0[82] = 0;

        $r0[83] = 0;

        $r0[84] = 0;

        $r0[85] = 0;

        $r0[86] = 0;

        $r0[87] = 0;

        $r0[88] = 0;

        $r0[89] = 0;

        $r0[90] = 0;

        $r0[91] = 0;

        $r0[92] = 0;

        $r0[93] = 0;

        $r0[94] = 0;

        $r0[95] = 0;

        $r0[96] = 0;

        $r0[97] = 0;

        $r0[98] = 0;

        $r0[99] = 0;

        $r0[100] = 0;

        $r0[101] = 0;

        $r0[102] = 0;

        $r0[103] = 0;

        $r0[104] = 0;

        $r0[105] = 0;

        $r0[106] = 0;

        $r0[107] = 0;

        $r0[108] = 0;

        $r0[109] = 0;

        $r0[110] = 0;

        $r0[111] = 0;

        $r0[112] = 0;

        $r0[113] = 0;

        $r0[114] = 0;

        $r0[115] = 0;

        $r0[116] = 0;

        $r0[117] = 0;

        $r0[118] = 0;

        $r0[119] = 0;

        $r0[120] = 0;

        $r0[121] = 0;

        $r0[122] = 0;

        $r0[123] = 0;

        $r0[124] = 0;

        $r0[125] = 0;

        $r0[126] = 0;

        $r0[127] = 0;

        $r0[128] = 0;

        $r0[129] = 0;

        $r0[130] = 0;

        $r0[131] = 0;

        $r0[132] = 0;

        $r0[133] = 0;

        $r0[134] = 0;

        $r0[135] = 0;

        $r0[136] = 0;

        $r0[137] = 0;

        $r0[138] = 0;

        $r0[139] = 0;

        $r0[140] = 0;

        $r0[141] = 0;

        $r0[142] = 0;

        $r0[143] = 0;

        $r0[144] = 0;

        $r0[145] = 0;

        $r0[146] = 0;

        $r0[147] = 0;

        $r0[148] = 0;

        $r0[149] = 0;

        $r0[150] = 0;

        $r0[151] = 0;

        $r0[152] = 0;

        $r0[153] = 0;

        $r0[154] = 0;

        $r0[155] = 0;

        $r0[156] = 0;

        $r0[157] = 0;

        $r0[158] = 0;

        $r0[159] = 0;

        $r0[160] = 0;

        $r0[161] = 0;

        $r0[162] = 0;

        <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1_6> = $r0;

        return;
    }

    public void <init>(java.io.InputStream)
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        java.io.InputStream r1;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void <init>(java.io.InputStream,java.lang.String)>(r1, null);

        return;
    }

    public void <init>(java.io.InputStream, java.lang.String)
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.JavaCharStream $r7, $r13;
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r16;
        java.util.ArrayList $r12;
        int[] $r1, $r9;
        int i0, $i2, $i4, $i6;
        java.lang.String r5;
        java.lang.RuntimeException $r14;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager $r15;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        java.io.UnsupportedEncodingException $r10;
        java.io.InputStream r4;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r4 := @parameter0: java.io.InputStream;

        r5 := @parameter1: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11Base: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: boolean allowAggregatesInExpressions> = 0;

        $r1 = newarray (int)[163];

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1> = $r1;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.util.List jj_expentries> = $r12;

        $i2 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_kind> = $i2;

     label1:
        $r13 = new com.hp.hpl.jena.sparql.lang.sparql_11.JavaCharStream;

        specialinvoke $r13.<com.hp.hpl.jena.sparql.lang.sparql_11.JavaCharStream: void <init>(java.io.InputStream,java.lang.String,int,int)>(r4, r5, 1, 1);

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.JavaCharStream jj_input_stream> = $r13;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r10);

        throw $r14;

     label4:
        $r15 = new com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager;

        $r7 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.JavaCharStream jj_input_stream>;

        specialinvoke $r15.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager: void <init>(com.hp.hpl.jena.sparql.lang.sparql_11.JavaCharStream)>($r7);

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager token_source> = $r15;

        $r16 = new com.hp.hpl.jena.sparql.lang.sparql_11.Token;

        specialinvoke $r16.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token token> = $r16;

        $i4 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk> = $i4;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen> = 0;

        i0 = 0;

     label5:
        if i0 >= 163 goto label6;

        $r9 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i6 = (int) -1;

        $r9[i0] = $i6;

        i0 = i0 + 1;

        goto label5;

     label6:
        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public void ReInit(java.io.InputStream)
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        java.io.InputStream r1;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r1 := @parameter0: java.io.InputStream;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void ReInit(java.io.InputStream,java.lang.String)>(r1, null);

        return;
    }

    public void ReInit(java.io.InputStream, java.lang.String)
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.JavaCharStream $r3, $r4;
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r11;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager $r5;
        java.lang.RuntimeException $r10;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r7;
        int i0, $i2, $i4;
        java.lang.String r2;
        java.io.UnsupportedEncodingException $r8;
        java.io.InputStream r1;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

     label1:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.JavaCharStream jj_input_stream>;

        virtualinvoke $r3.<com.hp.hpl.jena.sparql.lang.sparql_11.JavaCharStream: void ReInit(java.io.InputStream,java.lang.String,int,int)>(r1, r2, 1, 1);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r8);

        throw $r10;

     label4:
        $r5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager token_source>;

        $r4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.JavaCharStream jj_input_stream>;

        virtualinvoke $r5.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager: void ReInit(com.hp.hpl.jena.sparql.lang.sparql_11.JavaCharStream)>($r4);

        $r11 = new com.hp.hpl.jena.sparql.lang.sparql_11.Token;

        specialinvoke $r11.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token token> = $r11;

        $i2 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk> = $i2;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen> = 0;

        i0 = 0;

     label5:
        if i0 >= 163 goto label6;

        $r7 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i4 = (int) -1;

        $r7[i0] = $i4;

        i0 = i0 + 1;

        goto label5;

     label6:
        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public void <init>(java.io.Reader)
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.JavaCharStream $r6, $r10;
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r12;
        java.io.Reader r4;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager $r11;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        java.util.ArrayList $r9;
        int[] $r1, $r8;
        int i0, $i2, $i4, $i6;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r4 := @parameter0: java.io.Reader;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11Base: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: boolean allowAggregatesInExpressions> = 0;

        $r1 = newarray (int)[163];

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1> = $r1;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.util.List jj_expentries> = $r9;

        $i2 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_kind> = $i2;

        $r10 = new com.hp.hpl.jena.sparql.lang.sparql_11.JavaCharStream;

        specialinvoke $r10.<com.hp.hpl.jena.sparql.lang.sparql_11.JavaCharStream: void <init>(java.io.Reader,int,int)>(r4, 1, 1);

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.JavaCharStream jj_input_stream> = $r10;

        $r11 = new com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager;

        $r6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.JavaCharStream jj_input_stream>;

        specialinvoke $r11.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager: void <init>(com.hp.hpl.jena.sparql.lang.sparql_11.JavaCharStream)>($r6);

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager token_source> = $r11;

        $r12 = new com.hp.hpl.jena.sparql.lang.sparql_11.Token;

        specialinvoke $r12.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token token> = $r12;

        $i4 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk> = $i4;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen> = 0;

        i0 = 0;

     label1:
        if i0 >= 163 goto label2;

        $r8 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i6 = (int) -1;

        $r8[i0] = $i6;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void ReInit(java.io.Reader)
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.JavaCharStream $r2, $r3;
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r7;
        java.io.Reader r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager $r4;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int[] $r6;
        int i0, $i2, $i4;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r1 := @parameter0: java.io.Reader;

        $r2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.JavaCharStream jj_input_stream>;

        virtualinvoke $r2.<com.hp.hpl.jena.sparql.lang.sparql_11.JavaCharStream: void ReInit(java.io.Reader,int,int)>(r1, 1, 1);

        $r4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager token_source>;

        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.JavaCharStream jj_input_stream>;

        virtualinvoke $r4.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager: void ReInit(com.hp.hpl.jena.sparql.lang.sparql_11.JavaCharStream)>($r3);

        $r7 = new com.hp.hpl.jena.sparql.lang.sparql_11.Token;

        specialinvoke $r7.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token token> = $r7;

        $i2 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk> = $i2;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen> = 0;

        i0 = 0;

     label1:
        if i0 >= 163 goto label2;

        $r6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i4 = (int) -1;

        $r6[i0] = $i4;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void <init>(com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager)
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r7;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager r3;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        java.util.ArrayList $r6;
        int[] $r1, $r5;
        int i0, $i2, $i4, $i6;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r3 := @parameter0: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11Base: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: boolean allowAggregatesInExpressions> = 0;

        $r1 = newarray (int)[163];

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1> = $r1;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.util.List jj_expentries> = $r6;

        $i2 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_kind> = $i2;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager token_source> = r3;

        $r7 = new com.hp.hpl.jena.sparql.lang.sparql_11.Token;

        specialinvoke $r7.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token token> = $r7;

        $i4 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk> = $i4;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen> = 0;

        i0 = 0;

     label1:
        if i0 >= 163 goto label2;

        $r5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i6 = (int) -1;

        $r5[i0] = $i6;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void ReInit(com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager)
    {
        int[] $r3;
        int i0, $i2, $i4;
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r4;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager r1;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        r1 := @parameter0: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager token_source> = r1;

        $r4 = new com.hp.hpl.jena.sparql.lang.sparql_11.Token;

        specialinvoke $r4.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token token> = $r4;

        $i2 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk> = $i2;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen> = 0;

        i0 = 0;

     label1:
        if i0 >= 163 goto label2;

        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i4 = (int) -1;

        $r3[i0] = $i4;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    private com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_consume_token(int) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r1, $r2, $r4, $r5, $r6, $r8, $r9, $r10;
        int i0, $i1, $i2, $i3, $i5;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r7;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager $r3;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        i0 := @parameter0: int;

        $r1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token token>;

        $r2 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: com.hp.hpl.jena.sparql.lang.sparql_11.Token next>;

        if $r2 == null goto label1;

        $r9 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token token>;

        $r10 = $r9.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: com.hp.hpl.jena.sparql.lang.sparql_11.Token next>;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token token> = $r10;

        goto label2;

     label1:
        $r4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token token>;

        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager token_source>;

        $r5 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager: com.hp.hpl.jena.sparql.lang.sparql_11.Token getNextToken()>();

        $r4.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: com.hp.hpl.jena.sparql.lang.sparql_11.Token next> = $r5;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token token> = $r5;

     label2:
        $i5 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk> = $i5;

        $r6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token token>;

        $i1 = $r6.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int kind>;

        if $i1 != i0 goto label3;

        $i2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $i3 = $i2 + 1;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen> = $i3;

        $r8 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token token>;

        return $r8;

     label3:
        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token token> = $r1;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_kind> = i0;

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.ParseException generateParseException()>();

        throw $r7;
    }

    public final com.hp.hpl.jena.sparql.lang.sparql_11.Token getNextToken()
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r1, $r2, $r4, $r5, $r6, $r7, $r8;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager $r3;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int $i0, $i1, $i3;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token token>;

        $r2 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: com.hp.hpl.jena.sparql.lang.sparql_11.Token next>;

        if $r2 == null goto label1;

        $r7 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token token>;

        $r8 = $r7.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: com.hp.hpl.jena.sparql.lang.sparql_11.Token next>;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token token> = $r8;

        goto label2;

     label1:
        $r4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token token>;

        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager token_source>;

        $r5 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager: com.hp.hpl.jena.sparql.lang.sparql_11.Token getNextToken()>();

        $r4.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: com.hp.hpl.jena.sparql.lang.sparql_11.Token next> = $r5;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token token> = $r5;

     label2:
        $i3 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk> = $i3;

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        $i1 = $i0 + 1;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen> = $i1;

        $r6 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token token>;

        return $r6;
    }

    public final com.hp.hpl.jena.sparql.lang.sparql_11.Token getToken(int)
    {
        int i0, i1;
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r1, $r3, r4;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager $r2;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        i0 := @parameter0: int;

        r4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token token>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r1 = r4.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: com.hp.hpl.jena.sparql.lang.sparql_11.Token next>;

        if $r1 == null goto label2;

        r4 = r4.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: com.hp.hpl.jena.sparql.lang.sparql_11.Token next>;

        goto label3;

     label2:
        $r2 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager token_source>;

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager: com.hp.hpl.jena.sparql.lang.sparql_11.Token getNextToken()>();

        r4.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: com.hp.hpl.jena.sparql.lang.sparql_11.Token next> = $r3;

        r4 = $r3;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return r4;
    }

    private int jj_ntk()
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r1, $r2, $r3, $r5, $r6;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager $r4;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        int $i0, $i1;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token token>;

        $r2 = $r1.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: com.hp.hpl.jena.sparql.lang.sparql_11.Token next>;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_nt> = $r2;

        if $r2 != null goto label1;

        $r5 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token token>;

        $r4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager token_source>;

        $r6 = virtualinvoke $r4.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11TokenManager: com.hp.hpl.jena.sparql.lang.sparql_11.Token getNextToken()>();

        $r5.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: com.hp.hpl.jena.sparql.lang.sparql_11.Token next> = $r6;

        $i1 = $r6.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int kind>;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk> = $i1;

        return $i1;

     label1:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token jj_nt>;

        $i0 = $r3.<com.hp.hpl.jena.sparql.lang.sparql_11.Token: int kind>;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_ntk> = $i0;

        return $i0;
    }

    public com.hp.hpl.jena.sparql.lang.sparql_11.ParseException generateParseException()
    {
        int[][] r23;
        int[] $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        com.hp.hpl.jena.sparql.lang.sparql_11.ParseException $r24;
        boolean $z0;
        java.util.List $r1, $r3, $r4, $r8, $r14;
        com.hp.hpl.jena.sparql.lang.sparql_11.Token $r7;
        java.lang.String[] $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, i33, i34, i35, i36, $i38;
        boolean[] r2;
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;
        java.lang.Object $r9;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r1 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.util.List jj_expentries>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        r2 = newarray (boolean)[200];

        $i0 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_kind>;

        if $i0 < 0 goto label01;

        $i32 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_kind>;

        r2[$i32] = 1;

        $i38 = (int) -1;

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_kind> = $i38;

     label01:
        i33 = 0;

     label02:
        if i33 >= 163 goto label12;

        $r15 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1>;

        $i4 = $r15[i33];

        $i3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int jj_gen>;

        if $i4 != $i3 goto label11;

        i34 = 0;

     label03:
        if i34 >= 32 goto label11;

        $r16 = <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1_0>;

        $i6 = $r16[i33];

        $i5 = 1 << i34;

        $i7 = $i6 & $i5;

        if $i7 == 0 goto label04;

        r2[i34] = 1;

     label04:
        $r17 = <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1_1>;

        $i9 = $r17[i33];

        $i8 = 1 << i34;

        $i10 = $i9 & $i8;

        if $i10 == 0 goto label05;

        $i31 = 32 + i34;

        r2[$i31] = 1;

     label05:
        $r18 = <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1_2>;

        $i12 = $r18[i33];

        $i11 = 1 << i34;

        $i13 = $i12 & $i11;

        if $i13 == 0 goto label06;

        $i30 = 64 + i34;

        r2[$i30] = 1;

     label06:
        $r19 = <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1_3>;

        $i15 = $r19[i33];

        $i14 = 1 << i34;

        $i16 = $i15 & $i14;

        if $i16 == 0 goto label07;

        $i29 = 96 + i34;

        r2[$i29] = 1;

     label07:
        $r20 = <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1_4>;

        $i18 = $r20[i33];

        $i17 = 1 << i34;

        $i19 = $i18 & $i17;

        if $i19 == 0 goto label08;

        $i28 = 128 + i34;

        r2[$i28] = 1;

     label08:
        $r21 = <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1_5>;

        $i21 = $r21[i33];

        $i20 = 1 << i34;

        $i22 = $i21 & $i20;

        if $i22 == 0 goto label09;

        $i27 = 160 + i34;

        r2[$i27] = 1;

     label09:
        $r22 = <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_la1_6>;

        $i24 = $r22[i33];

        $i23 = 1 << i34;

        $i25 = $i24 & $i23;

        if $i25 == 0 goto label10;

        $i26 = 192 + i34;

        r2[$i26] = 1;

     label10:
        i34 = i34 + 1;

        goto label03;

     label11:
        i33 = i33 + 1;

        goto label02;

     label12:
        i35 = 0;

     label13:
        if i35 >= 200 goto label15;

        $z0 = r2[i35];

        if $z0 == 0 goto label14;

        $r11 = newarray (int)[1];

        r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_expentry> = $r11;

        $r12 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_expentry>;

        $r12[0] = i35;

        $r14 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.util.List jj_expentries>;

        $r13 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: int[] jj_expentry>;

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r13);

     label14:
        i35 = i35 + 1;

        goto label13;

     label15:
        $r3 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.util.List jj_expentries>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        r23 = newarray (int[])[$i1];

        i36 = 0;

     label16:
        $r4 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.util.List jj_expentries>;

        $i2 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i36 >= $i2 goto label17;

        $r8 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.util.List jj_expentries>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i36);

        $r10 = (int[]) $r9;

        r23[i36] = $r10;

        i36 = i36 + 1;

        goto label16;

     label17:
        $r24 = new com.hp.hpl.jena.sparql.lang.sparql_11.ParseException;

        $r7 = r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.lang.sparql_11.Token token>;

        $r6 = <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: java.lang.String[] tokenImage>;

        specialinvoke $r24.<com.hp.hpl.jena.sparql.lang.sparql_11.ParseException: void <init>(com.hp.hpl.jena.sparql.lang.sparql_11.Token,int[][],java.lang.String[])>($r7, r23, $r6);

        return $r24;
    }

    public final void enable_tracing()
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        return;
    }

    public final void disable_tracing()
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        return;
    }

    static void <clinit>()
    {
        staticinvoke <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void jj_la1_init_0()>();

        staticinvoke <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void jj_la1_init_1()>();

        staticinvoke <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void jj_la1_init_2()>();

        staticinvoke <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void jj_la1_init_3()>();

        staticinvoke <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void jj_la1_init_4()>();

        staticinvoke <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void jj_la1_init_5()>();

        staticinvoke <com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void jj_la1_init_6()>();

        return;
    }
}
