public class org.eclipse.jdt.internal.compiler.ast.ArrayInitializer extends org.eclipse.jdt.internal.compiler.ast.Expression
{
    public org.eclipse.jdt.internal.compiler.ast.Expression[] expressions;
    public org.eclipse.jdt.internal.compiler.lookup.ArrayBinding binding;

    public void <init>()
    {
        org.eclipse.jdt.internal.compiler.ast.ArrayInitializer r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ArrayInitializer;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Expression: void <init>()>();

        return;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r4;
        org.eclipse.jdt.internal.compiler.ast.ArrayInitializer r0;
        org.eclipse.jdt.internal.compiler.ast.Expression[] $r1, $r2, $r3;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r7, r8;
        org.eclipse.jdt.internal.compiler.ast.Expression $r6;
        org.eclipse.jdt.internal.compiler.flow.FlowContext r5;
        int i0, i1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ArrayInitializer;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r8 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.ast.Expression[] expressions>;

        if $r1 == null goto label3;

        i1 = 0;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.ast.Expression[] expressions>;

        i0 = lengthof $r2;

        goto label2;

     label1:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.ast.Expression[] expressions>;

        $r6 = $r3[i1];

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r4, r5, r8);

        r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalInits()>();

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

     label3:
        return r8;
    }

    public void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, boolean)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression[] $r2, $r3, $r5, $r9;
        org.eclipse.jdt.internal.compiler.ast.Expression $r10;
        byte $b6, $b7, $b9;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r8;
        boolean z0, $z1, $z2, $z3;
        org.eclipse.jdt.internal.compiler.lookup.ArrayBinding $r4, $r6, $r7;
        org.eclipse.jdt.internal.compiler.impl.Constant $r11, $r12, $r14, $r15, $r16;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r13;
        long $l8;
        int i0, i1, $i2, $i3, $i4, i5, $i10, $i11, i12, $i14;
        double $d0;
        org.eclipse.jdt.internal.compiler.ast.ArrayInitializer r1;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.ArrayInitializer;

        r13 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        z0 := @parameter2: boolean;

        i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.ast.Expression[] expressions>;

        if $r2 != null goto label01;

        $i10 = 0;

        goto label02;

     label01:
        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.ast.Expression[] expressions>;

        $i10 = lengthof $r3;

     label02:
        i1 = $i10;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateInlinedValue(int)>($i10);

        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.lookup.ArrayBinding binding>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void newArray(org.eclipse.jdt.internal.compiler.lookup.ArrayBinding)>($r4);

        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.ast.Expression[] expressions>;

        if $r5 == null goto label14;

        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.lookup.ArrayBinding binding>;

        $i4 = $r6.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: int dimensions>;

        if $i4 <= 1 goto label03;

        $i14 = (int) -1;

        $i11 = $i14;

        goto label04;

     label03:
        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.lookup.ArrayBinding binding>;

        $r8 = $r7.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType>;

        $i11 = $r8.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

     label04:
        i5 = $i11;

        i12 = 0;

        goto label13;

     label05:
        $r9 = r1.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.ast.Expression[] expressions>;

        $r10 = $r9[i12];

        $r12 = $r10.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r11 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r12 == $r11 goto label11;

        tableswitch(i5)
        {
            case 2: goto label06;
            case 3: goto label06;
            case 4: goto label06;
            case 5: goto label09;
            case 6: goto label10;
            case 7: goto label06;
            case 8: goto label07;
            case 9: goto label07;
            case 10: goto label06;
            default: goto label10;
        };

     label06:
        $r16 = $r10.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $l8 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.impl.Constant: long longValue()>();

        $b9 = $l8 cmp 0L;

        if $b9 == 0 goto label12;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateInlinedValue(int)>(i12);

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r13, r0, 1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void arrayAtPut(int,boolean)>(i5, 0);

        goto label12;

     label07:
        $r14 = $r10.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $d0 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.impl.Constant: double doubleValue()>();

        $b6 = $d0 cmpl -0.0;

        if $b6 == 0 goto label08;

        $b7 = $d0 cmpl 0.0;

        if $b7 == 0 goto label12;

     label08:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateInlinedValue(int)>(i12);

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r13, r0, 1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void arrayAtPut(int,boolean)>(i5, 0);

        goto label12;

     label09:
        $r15 = $r10.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $z2 = virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        if $z2 == 0 goto label12;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateInlinedValue(int)>(i12);

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r13, r0, 1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void arrayAtPut(int,boolean)>(i5, 0);

        goto label12;

     label10:
        $z3 = $r10 instanceof org.eclipse.jdt.internal.compiler.ast.NullLiteral;

        if $z3 != 0 goto label12;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateInlinedValue(int)>(i12);

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r13, r0, 1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void arrayAtPut(int,boolean)>(i5, 0);

        goto label12;

     label11:
        $z1 = $r10 instanceof org.eclipse.jdt.internal.compiler.ast.NullLiteral;

        if $z1 != 0 goto label12;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateInlinedValue(int)>(i12);

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r13, r0, 1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void arrayAtPut(int,boolean)>(i5, 0);

     label12:
        i12 = i12 + 1;

     label13:
        if i12 < i1 goto label05;

     label14:
        if z0 == 0 goto label15;

        $i3 = r1.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: int implicitConversion>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i3);

        goto label16;

     label15:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void pop()>();

     label16:
        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: int sourceStart>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i2);

        return;
    }

    public java.lang.StringBuffer printExpression(int, java.lang.StringBuffer)
    {
        org.eclipse.jdt.internal.compiler.ast.ArrayInitializer r1;
        org.eclipse.jdt.internal.compiler.ast.Expression[] $r2, $r4, $r6;
        org.eclipse.jdt.internal.compiler.ast.Expression $r5;
        java.lang.StringBuffer r0, $r3;
        int i0, $i1, i2, i3, $i4, $i6;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.ArrayInitializer;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.StringBuffer;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(123);

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.ast.Expression[] expressions>;

        if $r2 == null goto label5;

        i2 = 20;

        i3 = 0;

        goto label4;

     label1:
        if i3 <= 0 goto label2;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.ast.Expression[] expressions>;

        $r5 = $r4[i3];

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.ast.Expression: java.lang.StringBuffer printExpression(int,java.lang.StringBuffer)>(0, r0);

        $i6 = (int) -1;

        i2 = i2 + $i6;

        if i2 != 0 goto label3;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $i1 = i0 + 1;

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: java.lang.StringBuffer printIndent(int,java.lang.StringBuffer)>($i1, r0);

        i2 = 20;

     label3:
        i3 = i3 + 1;

     label4:
        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.ast.Expression[] expressions>;

        $i4 = lengthof $r6;

        if i3 < $i4 goto label1;

     label5:
        $r3 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        return $r3;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveTypeExpecting(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope $r21;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r9, $r25, $r31;
        org.eclipse.jdt.internal.compiler.ast.Expression[] $r3, $r4, $r5, $r6, $r13, $r16, $r17, $r27, r34;
        byte $b4;
        org.eclipse.jdt.internal.compiler.ast.Expression r28, r33, r35;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r2, $r10, $r15, $r20, $r24, $r29, r30, r32;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        org.eclipse.jdt.internal.compiler.lookup.ArrayBinding $r8, $r14, $r22, $r23, $r26;
        org.eclipse.jdt.internal.compiler.impl.Constant $r1;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r18;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r7;
        long $l3;
        int $i0, $i1, $i2, $i5, $i6, i7, i8, i9, i10, $i11;
        org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment $r19;
        org.eclipse.jdt.internal.compiler.ast.ArrayInitializer r0, $r11, $r12;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.ArrayInitializer;

        r7 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r1 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        r0.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r1;

        $z0 = r2 instanceof org.eclipse.jdt.internal.compiler.lookup.ArrayBinding;

        if $z0 == 0 goto label15;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: int bits>;

        $i2 = $i1 & 1;

        if $i2 != 0 goto label01;

        $r24 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        $z11 = virtualinvoke $r24.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isReifiable()>();

        if $z11 != 0 goto label01;

        $r25 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r25.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void illegalGenericArray(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r24, r0);

     label01:
        $r26 = (org.eclipse.jdt.internal.compiler.lookup.ArrayBinding) r2;

        r0.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.lookup.ArrayBinding binding> = $r26;

        r0.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = $r26;

        $r27 = r0.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.ast.Expression[] expressions>;

        if $r27 != null goto label02;

        $r23 = r0.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.lookup.ArrayBinding binding>;

        return $r23;

     label02:
        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.lookup.ArrayBinding binding>;

        $r15 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding elementsType()>();

        i7 = 0;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.ast.Expression[] expressions>;

        i8 = lengthof $r16;

        goto label14;

     label03:
        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.ast.Expression[] expressions>;

        r28 = $r17[i7];

        virtualinvoke r28.<org.eclipse.jdt.internal.compiler.ast.Expression: void setExpectedType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r15);

        $z2 = r28 instanceof org.eclipse.jdt.internal.compiler.ast.ArrayInitializer;

        if $z2 == 0 goto label04;

        $r29 = virtualinvoke r28.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveTypeExpecting(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r7, $r15);

        goto label05;

     label04:
        $r29 = virtualinvoke r28.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r7);

     label05:
        r30 = $r29;

        if $r29 != null goto label06;

        goto label13;

     label06:
        if $r15 == $r29 goto label07;

        $r21 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope compilationUnitScope()>();

        virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope: void recordTypeConversion(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r15, $r29);

     label07:
        $z3 = virtualinvoke r28.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean isConstantValueOfTypeAssignableToType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r30, $r15);

        if $z3 != 0 goto label09;

        $z4 = virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z4 == 0 goto label08;

        $i6 = $r15.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        $i5 = r30.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        $z10 = staticinvoke <org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: boolean isWidening(int,int)>($i6, $i5);

        if $z10 != 0 goto label09;

     label08:
        $z5 = virtualinvoke r30.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r15);

        if $z5 == 0 goto label10;

     label09:
        virtualinvoke r28.<org.eclipse.jdt.internal.compiler.ast.Expression: void computeConversion(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r7, $r15, r30);

        goto label13;

     label10:
        $z6 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: boolean isBoxingCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r30, $r15);

        if $z6 != 0 goto label11;

        $z7 = virtualinvoke r30.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z7 == 0 goto label12;

        $r18 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $l3 = $r18.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long sourceLevel>;

        $b4 = $l3 cmp 3211264L;

        $i11 = (int) $b4;

        if $i11 < 0 goto label12;

        $z8 = virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z8 != 0 goto label12;

        $r19 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment()>();

        $r20 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.TypeBinding computeBoxingType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r15);

        $z9 = virtualinvoke r28.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean isConstantValueOfTypeAssignableToType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r30, $r20);

        if $z9 == 0 goto label12;

     label11:
        virtualinvoke r28.<org.eclipse.jdt.internal.compiler.ast.Expression: void computeConversion(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r7, $r15, r30);

        goto label13;

     label12:
        $r31 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r31.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void typeMismatchError(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r30, $r15, r28, null);

     label13:
        i7 = i7 + 1;

     label14:
        if i7 < i8 goto label03;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.lookup.ArrayBinding binding>;

        return $r22;

     label15:
        r32 = null;

        i9 = 1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.ast.Expression[] expressions>;

        if $r3 != null goto label16;

        r32 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding getJavaLangObject()>();

        goto label25;

     label16:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.ast.Expression[] expressions>;

        r33 = $r4[0];

        goto label19;

     label17:
        i9 = i9 + 1;

        $r11 = (org.eclipse.jdt.internal.compiler.ast.ArrayInitializer) r33;

        r34 = $r11.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.ast.Expression[] expressions>;

        if r34 != null goto label18;

        r32 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding getJavaLangObject()>();

        r33 = null;

        goto label20;

     label18:
        $r12 = (org.eclipse.jdt.internal.compiler.ast.ArrayInitializer) r33;

        $r13 = $r12.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.ast.Expression[] expressions>;

        r33 = $r13[0];

     label19:
        if r33 == null goto label20;

        $z1 = r33 instanceof org.eclipse.jdt.internal.compiler.ast.ArrayInitializer;

        if $z1 != 0 goto label17;

     label20:
        if r33 == null goto label21;

        r32 = virtualinvoke r33.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r7);

     label21:
        i10 = 1;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.ast.Expression[] expressions>;

        $i0 = lengthof $r5;

        goto label24;

     label22:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.ast.Expression[] expressions>;

        r35 = $r6[i10];

        if r35 == null goto label23;

        virtualinvoke r35.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r7);

     label23:
        i10 = i10 + 1;

     label24:
        if i10 < $i0 goto label22;

     label25:
        if r32 == null goto label26;

        $r8 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.ArrayBinding createArrayType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,int)>(r32, i9);

        r0.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = $r8;

        if r2 == null goto label26;

        $r9 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void typeMismatchError(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r10, r2, r0, null);

     label26:
        return null;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.ArrayInitializer r1;
        org.eclipse.jdt.internal.compiler.ast.Expression[] $r3, $r4, $r5;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.Expression $r6;
        int i0, i1;
        boolean $z0;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.ArrayInitializer;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.ArrayInitializer,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        if $z0 == 0 goto label3;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.ast.Expression[] expressions>;

        if $r3 == null goto label3;

        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.ast.Expression[] expressions>;

        i0 = lengthof $r4;

        i1 = 0;

        goto label2;

     label1:
        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.ast.Expression[] expressions>;

        $r6 = $r5[i1];

        virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.ast.Expression: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

     label3:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.ArrayInitializer,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        return;
    }
}
