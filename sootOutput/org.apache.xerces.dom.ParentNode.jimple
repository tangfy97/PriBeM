public abstract class org.apache.xerces.dom.ParentNode extends org.apache.xerces.dom.ChildNode
{
    static final long serialVersionUID;
    protected org.apache.xerces.dom.CoreDocumentImpl ownerDocument;
    protected org.apache.xerces.dom.ChildNode firstChild;
    protected transient org.apache.xerces.dom.NodeListCache fNodeListCache;

    protected void <init>(org.apache.xerces.dom.CoreDocumentImpl)
    {
        org.apache.xerces.dom.ParentNode r0;
        org.apache.xerces.dom.CoreDocumentImpl r1;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        r1 := @parameter0: org.apache.xerces.dom.CoreDocumentImpl;

        specialinvoke r0.<org.apache.xerces.dom.ChildNode: void <init>(org.apache.xerces.dom.CoreDocumentImpl)>(r1);

        r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild> = null;

        r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache> = null;

        r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.CoreDocumentImpl ownerDocument> = r1;

        return;
    }

    public void <init>()
    {
        org.apache.xerces.dom.ParentNode r0;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        specialinvoke r0.<org.apache.xerces.dom.ChildNode: void <init>()>();

        r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild> = null;

        r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache> = null;

        return;
    }

    public org.w3c.dom.Node cloneNode(boolean)
    {
        org.apache.xerces.dom.CoreDocumentImpl $r2;
        org.apache.xerces.dom.ParentNode r0, $r4;
        org.w3c.dom.Node $r1, $r3;
        org.apache.xerces.dom.ChildNode r5;
        boolean $z0, z1;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: boolean needsSyncChildren()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: void synchronizeChildren()>();

     label1:
        $r1 = specialinvoke r0.<org.apache.xerces.dom.ChildNode: org.w3c.dom.Node cloneNode(boolean)>(z1);

        $r4 = (org.apache.xerces.dom.ParentNode) $r1;

        $r2 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.CoreDocumentImpl ownerDocument>;

        $r4.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.CoreDocumentImpl ownerDocument> = $r2;

        $r4.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild> = null;

        $r4.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache> = null;

        if z1 == 0 goto label4;

        r5 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        goto label3;

     label2:
        $r3 = virtualinvoke r5.<org.apache.xerces.dom.ChildNode: org.w3c.dom.Node cloneNode(boolean)>(1);

        virtualinvoke $r4.<org.apache.xerces.dom.ParentNode: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r3);

        r5 = r5.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode nextSibling>;

     label3:
        if r5 != null goto label2;

     label4:
        return $r4;
    }

    public org.w3c.dom.Document getOwnerDocument()
    {
        org.apache.xerces.dom.ParentNode r0;
        org.apache.xerces.dom.CoreDocumentImpl $r1;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        $r1 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.CoreDocumentImpl ownerDocument>;

        return $r1;
    }

    org.apache.xerces.dom.CoreDocumentImpl ownerDocument()
    {
        org.apache.xerces.dom.ParentNode r0;
        org.apache.xerces.dom.CoreDocumentImpl $r1;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        $r1 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.CoreDocumentImpl ownerDocument>;

        return $r1;
    }

    protected void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)
    {
        org.apache.xerces.dom.CoreDocumentImpl r1;
        org.apache.xerces.dom.ParentNode r0;
        org.apache.xerces.dom.ChildNode r2;
        boolean $z0;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        r1 := @parameter0: org.apache.xerces.dom.CoreDocumentImpl;

        $z0 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: boolean needsSyncChildren()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: void synchronizeChildren()>();

     label1:
        specialinvoke r0.<org.apache.xerces.dom.ChildNode: void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)>(r1);

        r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.CoreDocumentImpl ownerDocument> = r1;

        r2 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        goto label3;

     label2:
        virtualinvoke r2.<org.apache.xerces.dom.ChildNode: void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)>(r1);

        r2 = r2.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode nextSibling>;

     label3:
        if r2 != null goto label2;

        return;
    }

    public boolean hasChildNodes()
    {
        org.apache.xerces.dom.ParentNode r0;
        org.apache.xerces.dom.ChildNode $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        $z0 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: boolean needsSyncChildren()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: void synchronizeChildren()>();

     label1:
        $r1 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        if $r1 == null goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public org.w3c.dom.NodeList getChildNodes()
    {
        org.apache.xerces.dom.ParentNode r0;
        boolean $z0;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        $z0 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: boolean needsSyncChildren()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: void synchronizeChildren()>();

     label1:
        return r0;
    }

    public org.w3c.dom.Node getFirstChild()
    {
        org.apache.xerces.dom.ParentNode r0;
        org.apache.xerces.dom.ChildNode $r1;
        boolean $z0;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        $z0 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: boolean needsSyncChildren()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: void synchronizeChildren()>();

     label1:
        $r1 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        return $r1;
    }

    public org.w3c.dom.Node getLastChild()
    {
        org.apache.xerces.dom.ParentNode r0;
        org.apache.xerces.dom.ChildNode $r1;
        boolean $z0;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        $z0 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: boolean needsSyncChildren()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: void synchronizeChildren()>();

     label1:
        $r1 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode lastChild()>();

        return $r1;
    }

    final org.apache.xerces.dom.ChildNode lastChild()
    {
        org.apache.xerces.dom.ParentNode r0;
        org.apache.xerces.dom.ChildNode $r1, $r2, $r3;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        $r1 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        $r3 = $r2.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode previousSibling>;

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    final void lastChild(org.apache.xerces.dom.ChildNode)
    {
        org.apache.xerces.dom.ParentNode r0;
        org.apache.xerces.dom.ChildNode $r1, r2, $r3;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        r2 := @parameter0: org.apache.xerces.dom.ChildNode;

        $r1 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        $r3.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode previousSibling> = r2;

     label1:
        return;
    }

    public org.w3c.dom.Node insertBefore(org.w3c.dom.Node, org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.w3c.dom.Node r1, r2, $r3;
        org.apache.xerces.dom.ParentNode r0;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: org.w3c.dom.Node;

        $r3 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)>(r1, r2, 0);

        return $r3;
    }

    org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node, org.w3c.dom.Node, boolean) throws org.w3c.dom.DOMException
    {
        org.w3c.dom.Document $r22;
        short $s0;
        java.lang.String $r27, $r30, $r32, $r35, $r37, $r42;
        org.apache.xerces.dom.ChildNode $r5, $r6, $r10, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r25, r46, r47;
        org.apache.xerces.dom.NodeListCache $r7, $r8, $r9, $r11, $r12, $r13, $r48;
        boolean z0, $z1, z2, $z3, $z4, $z5, $z6, z7, $z8;
        org.w3c.dom.Node r2, $r28, $r38, $r39, r43, r44;
        org.w3c.dom.DOMException $r50, $r51, $r52, $r53, $r54, $r55;
        int $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i11;
        org.apache.xerces.dom.NodeImpl $r4, r45;
        org.apache.xerces.dom.CoreDocumentImpl $r1, $r3, $r23, $r24, $r33, $r40, $r49;
        org.apache.xerces.dom.ParentNode r0;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        r2 := @parameter0: org.w3c.dom.Node;

        r43 := @parameter1: org.w3c.dom.Node;

        z2 := @parameter2: boolean;

        $r1 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.CoreDocumentImpl ownerDocument>;

        z0 = $r1.<org.apache.xerces.dom.CoreDocumentImpl: boolean errorChecking>;

        $s0 = interfaceinvoke r2.<org.w3c.dom.Node: short getNodeType()>();

        $i5 = (int) $s0;

        if $i5 != 11 goto label06;

        if z0 == 0 goto label05;

        r44 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label03;

     label01:
        $r40 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.CoreDocumentImpl ownerDocument>;

        $z5 = virtualinvoke $r40.<org.apache.xerces.dom.CoreDocumentImpl: boolean isKidOK(org.w3c.dom.Node,org.w3c.dom.Node)>(r0, r44);

        if $z5 != 0 goto label02;

        $r50 = new org.w3c.dom.DOMException;

        $r42 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "HIERARCHY_REQUEST_ERR", null);

        specialinvoke $r50.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(3, $r42);

        throw $r50;

     label02:
        r44 = interfaceinvoke r44.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label03:
        if r44 != null goto label01;

        goto label05;

     label04:
        $r39 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)>($r39, r43);

     label05:
        $z6 = interfaceinvoke r2.<org.w3c.dom.Node: boolean hasChildNodes()>();

        if $z6 != 0 goto label04;

        return r2;

     label06:
        if r2 != r43 goto label07;

        $r38 = interfaceinvoke r43.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>(r2);

        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)>(r2, $r38);

        return r2;

     label07:
        $z1 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: boolean needsSyncChildren()>();

        if $z1 == 0 goto label08;

        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: void synchronizeChildren()>();

     label08:
        if z0 == 0 goto label18;

        $z3 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: boolean isReadOnly()>();

        if $z3 == 0 goto label09;

        $r51 = new org.w3c.dom.DOMException;

        $r37 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "NO_MODIFICATION_ALLOWED_ERR", null);

        specialinvoke $r51.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, $r37);

        throw $r51;

     label09:
        $r22 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        $r23 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.CoreDocumentImpl ownerDocument>;

        if $r22 == $r23 goto label10;

        $r33 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.CoreDocumentImpl ownerDocument>;

        if r2 == $r33 goto label10;

        $r52 = new org.w3c.dom.DOMException;

        $r35 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "WRONG_DOCUMENT_ERR", null);

        specialinvoke $r52.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(4, $r35);

        throw $r52;

     label10:
        $r24 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.CoreDocumentImpl ownerDocument>;

        $z4 = virtualinvoke $r24.<org.apache.xerces.dom.CoreDocumentImpl: boolean isKidOK(org.w3c.dom.Node,org.w3c.dom.Node)>(r0, r2);

        if $z4 != 0 goto label11;

        $r53 = new org.w3c.dom.DOMException;

        $r32 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "HIERARCHY_REQUEST_ERR", null);

        specialinvoke $r53.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(3, $r32);

        throw $r53;

     label11:
        if r43 == null goto label12;

        $r28 = interfaceinvoke r43.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        if $r28 == r0 goto label12;

        $r54 = new org.w3c.dom.DOMException;

        $r30 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "NOT_FOUND_ERR", null);

        specialinvoke $r54.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(8, $r30);

        throw $r54;

     label12:
        z7 = 1;

        r45 = r0;

        goto label16;

     label13:
        if r2 == r45 goto label14;

        $z8 = 1;

        goto label15;

     label14:
        $z8 = 0;

     label15:
        z7 = $z8;

        r45 = virtualinvoke r45.<org.apache.xerces.dom.NodeImpl: org.apache.xerces.dom.NodeImpl parentNode()>();

     label16:
        if z7 == 0 goto label17;

        if r45 != null goto label13;

     label17:
        if z7 != 0 goto label18;

        $r55 = new org.w3c.dom.DOMException;

        $r27 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "HIERARCHY_REQUEST_ERR", null);

        specialinvoke $r55.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(3, $r27);

        throw $r55;

     label18:
        $r3 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.CoreDocumentImpl ownerDocument>;

        virtualinvoke $r3.<org.apache.xerces.dom.CoreDocumentImpl: void insertingNode(org.apache.xerces.dom.NodeImpl,boolean)>(r0, z2);

        $r25 = (org.apache.xerces.dom.ChildNode) r2;

        $r4 = virtualinvoke $r25.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.NodeImpl parentNode()>();

        if $r4 == null goto label19;

        interfaceinvoke $r4.<org.w3c.dom.Node: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>($r25);

     label19:
        $r21 = (org.apache.xerces.dom.ChildNode) r43;

        $r25.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.NodeImpl ownerNode> = r0;

        virtualinvoke $r25.<org.apache.xerces.dom.ChildNode: void isOwned(boolean)>(1);

        $r5 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        if $r5 != null goto label20;

        r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild> = $r25;

        virtualinvoke $r25.<org.apache.xerces.dom.ChildNode: void isFirstChild(boolean)>(1);

        $r25.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode previousSibling> = $r25;

        goto label23;

     label20:
        if $r21 != null goto label21;

        $r19 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        r46 = $r19.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode previousSibling>;

        r46.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode nextSibling> = $r25;

        $r25.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode previousSibling> = r46;

        $r20 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        $r20.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode previousSibling> = $r25;

        goto label23;

     label21:
        $r6 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        if r43 != $r6 goto label22;

        $r14 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        virtualinvoke $r14.<org.apache.xerces.dom.ChildNode: void isFirstChild(boolean)>(0);

        $r15 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        $r25.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode nextSibling> = $r15;

        $r16 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        $r17 = $r16.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode previousSibling>;

        $r25.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode previousSibling> = $r17;

        $r18 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        $r18.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode previousSibling> = $r25;

        r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild> = $r25;

        virtualinvoke $r25.<org.apache.xerces.dom.ChildNode: void isFirstChild(boolean)>(1);

        goto label23;

     label22:
        r47 = $r21.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode previousSibling>;

        $r25.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode nextSibling> = $r21;

        r47.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode nextSibling> = $r25;

        $r21.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode previousSibling> = $r25;

        $r25.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode previousSibling> = r47;

     label23:
        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: void changed()>();

        $r48 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        if $r48 == null goto label26;

        $r7 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        $i1 = $r7.<org.apache.xerces.dom.NodeListCache: int fLength>;

        $i7 = (int) -1;

        if $i1 == $i7 goto label24;

        $r13 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        $i3 = $r13.<org.apache.xerces.dom.NodeListCache: int fLength>;

        $i4 = $i3 + 1;

        $r13.<org.apache.xerces.dom.NodeListCache: int fLength> = $i4;

     label24:
        $r8 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        $i2 = $r8.<org.apache.xerces.dom.NodeListCache: int fChildIndex>;

        $i9 = (int) -1;

        if $i2 == $i9 goto label26;

        $r9 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        $r10 = $r9.<org.apache.xerces.dom.NodeListCache: org.apache.xerces.dom.ChildNode fChild>;

        if $r10 != $r21 goto label25;

        $r12 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        $r12.<org.apache.xerces.dom.NodeListCache: org.apache.xerces.dom.ChildNode fChild> = $r25;

        goto label26;

     label25:
        $r11 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        $i11 = (int) -1;

        $r11.<org.apache.xerces.dom.NodeListCache: int fChildIndex> = $i11;

     label26:
        $r49 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.CoreDocumentImpl ownerDocument>;

        virtualinvoke $r49.<org.apache.xerces.dom.CoreDocumentImpl: void insertedNode(org.apache.xerces.dom.NodeImpl,org.apache.xerces.dom.NodeImpl,boolean)>(r0, $r25, z2);

        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: void checkNormalizationAfterInsert(org.apache.xerces.dom.ChildNode)>($r25);

        return r2;
    }

    public org.w3c.dom.Node removeChild(org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.xerces.dom.ParentNode r0;
        org.w3c.dom.Node r1, $r2;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        r1 := @parameter0: org.w3c.dom.Node;

        $r2 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: org.w3c.dom.Node internalRemoveChild(org.w3c.dom.Node,boolean)>(r1, 0);

        return $r2;
    }

    org.w3c.dom.Node internalRemoveChild(org.w3c.dom.Node, boolean) throws org.w3c.dom.DOMException
    {
        boolean $z0, z1, $z2;
        org.w3c.dom.Node r2, $r19;
        org.w3c.dom.DOMException $r29, $r30;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i11;
        java.lang.String $r21, $r23;
        org.apache.xerces.dom.CoreDocumentImpl $r1;
        org.apache.xerces.dom.ParentNode r0;
        org.apache.xerces.dom.ChildNode r3, $r4, $r5, $r6, $r7, $r8, $r9, $r13, $r17, $r24, $r26, r27, $r28;
        org.apache.xerces.dom.NodeListCache $r10, $r11, $r12, $r14, $r15, $r16, $r18, $r25;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        r2 := @parameter0: org.w3c.dom.Node;

        z1 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.CoreDocumentImpl ownerDocument()>();

        $z0 = $r1.<org.apache.xerces.dom.CoreDocumentImpl: boolean errorChecking>;

        if $z0 == 0 goto label2;

        $z2 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: boolean isReadOnly()>();

        if $z2 == 0 goto label1;

        $r29 = new org.w3c.dom.DOMException;

        $r23 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "NO_MODIFICATION_ALLOWED_ERR", null);

        specialinvoke $r29.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, $r23);

        throw $r29;

     label1:
        if r2 == null goto label2;

        $r19 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        if $r19 == r0 goto label2;

        $r30 = new org.w3c.dom.DOMException;

        $r21 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "NOT_FOUND_ERR", null);

        specialinvoke $r30.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(8, $r21);

        throw $r30;

     label2:
        $r24 = (org.apache.xerces.dom.ChildNode) r2;

        virtualinvoke $r1.<org.apache.xerces.dom.CoreDocumentImpl: void removingNode(org.apache.xerces.dom.NodeImpl,org.apache.xerces.dom.NodeImpl,boolean)>(r0, $r24, z1);

        $r25 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        if $r25 == null goto label5;

        $r10 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        $i0 = $r10.<org.apache.xerces.dom.NodeListCache: int fLength>;

        $i7 = (int) -1;

        if $i0 == $i7 goto label3;

        $r18 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        $i4 = $r18.<org.apache.xerces.dom.NodeListCache: int fLength>;

        $i5 = $i4 - 1;

        $r18.<org.apache.xerces.dom.NodeListCache: int fLength> = $i5;

     label3:
        $r11 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        $i1 = $r11.<org.apache.xerces.dom.NodeListCache: int fChildIndex>;

        $i9 = (int) -1;

        if $i1 == $i9 goto label5;

        $r12 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        $r13 = $r12.<org.apache.xerces.dom.NodeListCache: org.apache.xerces.dom.ChildNode fChild>;

        if $r13 != $r24 goto label4;

        $r15 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        $i2 = $r15.<org.apache.xerces.dom.NodeListCache: int fChildIndex>;

        $i3 = $i2 - 1;

        $r15.<org.apache.xerces.dom.NodeListCache: int fChildIndex> = $i3;

        $r16 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        $r17 = virtualinvoke $r24.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode previousSibling()>();

        $r16.<org.apache.xerces.dom.NodeListCache: org.apache.xerces.dom.ChildNode fChild> = $r17;

        goto label5;

     label4:
        $r14 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        $i11 = (int) -1;

        $r14.<org.apache.xerces.dom.NodeListCache: int fChildIndex> = $i11;

     label5:
        $r26 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        if $r24 != $r26 goto label6;

        virtualinvoke $r24.<org.apache.xerces.dom.ChildNode: void isFirstChild(boolean)>(0);

        $r5 = $r24.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode nextSibling>;

        r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild> = $r5;

        $r6 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        if $r6 == null goto label8;

        $r7 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        virtualinvoke $r7.<org.apache.xerces.dom.ChildNode: void isFirstChild(boolean)>(1);

        $r9 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        $r8 = $r24.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode previousSibling>;

        $r9.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode previousSibling> = $r8;

        goto label8;

     label6:
        r27 = $r24.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode previousSibling>;

        r3 = $r24.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode nextSibling>;

        r27.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode nextSibling> = r3;

        if r3 != null goto label7;

        $r4 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        $r4.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode previousSibling> = r27;

        goto label8;

     label7:
        r3.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode previousSibling> = r27;

     label8:
        $r28 = virtualinvoke $r24.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode previousSibling()>();

        $r24.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.NodeImpl ownerNode> = $r1;

        virtualinvoke $r24.<org.apache.xerces.dom.ChildNode: void isOwned(boolean)>(0);

        $r24.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode nextSibling> = null;

        $r24.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode previousSibling> = null;

        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: void changed()>();

        virtualinvoke $r1.<org.apache.xerces.dom.CoreDocumentImpl: void removedNode(org.apache.xerces.dom.NodeImpl,boolean)>(r0, z1);

        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: void checkNormalizationAfterRemove(org.apache.xerces.dom.ChildNode)>($r28);

        return $r24;
    }

    public org.w3c.dom.Node replaceChild(org.w3c.dom.Node, org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.xerces.dom.CoreDocumentImpl $r1, $r4;
        org.w3c.dom.Node r2, r3;
        org.apache.xerces.dom.ParentNode r0;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        r2 := @parameter0: org.w3c.dom.Node;

        r3 := @parameter1: org.w3c.dom.Node;

        $r1 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.CoreDocumentImpl ownerDocument>;

        virtualinvoke $r1.<org.apache.xerces.dom.CoreDocumentImpl: void replacingNode(org.apache.xerces.dom.NodeImpl)>(r0);

        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)>(r2, r3, 1);

        if r2 == r3 goto label1;

        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: org.w3c.dom.Node internalRemoveChild(org.w3c.dom.Node,boolean)>(r3, 1);

     label1:
        $r4 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.CoreDocumentImpl ownerDocument>;

        virtualinvoke $r4.<org.apache.xerces.dom.CoreDocumentImpl: void replacedNode(org.apache.xerces.dom.NodeImpl)>(r0);

        return r3;
    }

    public java.lang.String getTextContent() throws org.w3c.dom.DOMException
    {
        org.apache.xerces.dom.NodeImpl $r5;
        org.apache.xerces.dom.ParentNode r0;
        java.lang.StringBuffer $r3;
        org.w3c.dom.Node $r1, $r2;
        java.lang.String $r4, $r6;
        boolean $z0;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        $r1 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: org.w3c.dom.Node getFirstChild()>();

        if $r1 == null goto label4;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        if $r2 != null goto label3;

        $z0 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: boolean hasTextContent(org.w3c.dom.Node)>($r1);

        if $z0 == 0 goto label1;

        $r5 = (org.apache.xerces.dom.NodeImpl) $r1;

        $r6 = virtualinvoke $r5.<org.apache.xerces.dom.NodeImpl: java.lang.String getTextContent()>();

        goto label2;

     label1:
        $r6 = "";

     label2:
        return $r6;

     label3:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: void getTextContent(java.lang.StringBuffer)>($r3);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;

     label4:
        return "";
    }

    void getTextContent(java.lang.StringBuffer) throws org.w3c.dom.DOMException
    {
        org.apache.xerces.dom.NodeImpl $r2;
        java.lang.StringBuffer r1;
        org.w3c.dom.Node r3;
        org.apache.xerces.dom.ParentNode r0;
        boolean $z0;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        r1 := @parameter0: java.lang.StringBuffer;

        r3 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: org.w3c.dom.Node getFirstChild()>();

        goto label3;

     label1:
        $z0 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: boolean hasTextContent(org.w3c.dom.Node)>(r3);

        if $z0 == 0 goto label2;

        $r2 = (org.apache.xerces.dom.NodeImpl) r3;

        virtualinvoke $r2.<org.apache.xerces.dom.NodeImpl: void getTextContent(java.lang.StringBuffer)>(r1);

     label2:
        r3 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label3:
        if r3 != null goto label1;

        return;
    }

    final boolean hasTextContent(org.w3c.dom.Node)
    {
        org.apache.xerces.dom.ParentNode r2;
        short $s0, $s1, $s2;
        org.apache.xerces.dom.TextImpl $r1;
        org.w3c.dom.Node r0;
        int $i3, $i4, $i5;
        boolean $z0, $z1;

        r2 := @this: org.apache.xerces.dom.ParentNode;

        r0 := @parameter0: org.w3c.dom.Node;

        $s0 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        $i3 = (int) $s0;

        if $i3 == 8 goto label2;

        $s1 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        $i4 = (int) $s1;

        if $i4 == 7 goto label2;

        $s2 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        $i5 = (int) $s2;

        if $i5 != 3 goto label1;

        $r1 = (org.apache.xerces.dom.TextImpl) r0;

        $z0 = virtualinvoke $r1.<org.apache.xerces.dom.TextImpl: boolean isIgnorableWhitespace()>();

        if $z0 != 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public void setTextContent(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.w3c.dom.Text $r4;
        org.w3c.dom.Node $r1;
        org.apache.xerces.dom.CoreDocumentImpl $r3;
        org.apache.xerces.dom.ParentNode r0;
        int $i0;
        java.lang.String r2;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        r2 := @parameter0: java.lang.String;

        goto label2;

     label1:
        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>($r1);

     label2:
        $r1 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: org.w3c.dom.Node getFirstChild()>();

        if $r1 != null goto label1;

        if r2 == null goto label3;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 == 0 goto label3;

        $r3 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.CoreDocumentImpl ownerDocument()>();

        $r4 = virtualinvoke $r3.<org.apache.xerces.dom.CoreDocumentImpl: org.w3c.dom.Text createTextNode(java.lang.String)>(r2);

        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r4);

     label3:
        return;
    }

    private int nodeListGetLength()
    {
        int $i0, $i1, $i2, i3, $i5, $i7;
        boolean $z0;
        org.apache.xerces.dom.CoreDocumentImpl $r13;
        org.apache.xerces.dom.ParentNode r0;
        org.apache.xerces.dom.ChildNode $r7, $r10, $r11, $r12, r15;
        org.apache.xerces.dom.NodeListCache $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r14;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        $r1 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        if $r1 != null goto label4;

        $z0 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: boolean needsSyncChildren()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: void synchronizeChildren()>();

     label1:
        $r10 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        if $r10 != null goto label2;

        return 0;

     label2:
        $r11 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        $r12 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode lastChild()>();

        if $r11 != $r12 goto label3;

        return 1;

     label3:
        $r13 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.CoreDocumentImpl ownerDocument>;

        $r14 = virtualinvoke $r13.<org.apache.xerces.dom.CoreDocumentImpl: org.apache.xerces.dom.NodeListCache getNodeListCache(org.apache.xerces.dom.ParentNode)>(r0);

        r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache> = $r14;

     label4:
        $r2 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        $i0 = $r2.<org.apache.xerces.dom.NodeListCache: int fLength>;

        $i5 = (int) -1;

        if $i0 != $i5 goto label8;

        $r4 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        $i2 = $r4.<org.apache.xerces.dom.NodeListCache: int fChildIndex>;

        $i7 = (int) -1;

        if $i2 == $i7 goto label5;

        $r6 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        $r7 = $r6.<org.apache.xerces.dom.NodeListCache: org.apache.xerces.dom.ChildNode fChild>;

        if $r7 == null goto label5;

        $r8 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        i3 = $r8.<org.apache.xerces.dom.NodeListCache: int fChildIndex>;

        $r9 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        r15 = $r9.<org.apache.xerces.dom.NodeListCache: org.apache.xerces.dom.ChildNode fChild>;

        goto label7;

     label5:
        r15 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        i3 = 0;

        goto label7;

     label6:
        i3 = i3 + 1;

        r15 = r15.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode nextSibling>;

     label7:
        if r15 != null goto label6;

        $r5 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        $r5.<org.apache.xerces.dom.NodeListCache: int fLength> = i3;

     label8:
        $r3 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        $i1 = $r3.<org.apache.xerces.dom.NodeListCache: int fLength>;

        return $i1;
    }

    public int getLength()
    {
        org.apache.xerces.dom.ParentNode r0;
        int $i0;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        $i0 = specialinvoke r0.<org.apache.xerces.dom.ParentNode: int nodeListGetLength()>();

        return $i0;
    }

    private org.w3c.dom.Node nodeListItem(int)
    {
        int i0, $i1, i2, $i4, $i6, $i8;
        boolean $z0, z1;
        org.apache.xerces.dom.CoreDocumentImpl $r10, $r14;
        org.apache.xerces.dom.ParentNode r0;
        org.apache.xerces.dom.ChildNode $r6, $r11, $r12, $r13, $r16, $r17, r18;
        org.apache.xerces.dom.NodeListCache $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r15;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        if $r1 != null goto label05;

        $z0 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: boolean needsSyncChildren()>();

        if $z0 == 0 goto label01;

        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: void synchronizeChildren()>();

     label01:
        $r12 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        $r13 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode lastChild()>();

        if $r12 != $r13 goto label04;

        if i0 != 0 goto label02;

        $r17 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        goto label03;

     label02:
        $r17 = null;

     label03:
        return $r17;

     label04:
        $r14 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.CoreDocumentImpl ownerDocument>;

        $r15 = virtualinvoke $r14.<org.apache.xerces.dom.CoreDocumentImpl: org.apache.xerces.dom.NodeListCache getNodeListCache(org.apache.xerces.dom.ParentNode)>(r0);

        r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache> = $r15;

     label05:
        $r2 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        $i1 = $r2.<org.apache.xerces.dom.NodeListCache: int fChildIndex>;

        i2 = $i1;

        $r3 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        $r16 = $r3.<org.apache.xerces.dom.NodeListCache: org.apache.xerces.dom.ChildNode fChild>;

        r18 = $r16;

        z1 = 1;

        $i4 = (int) -1;

        if $i1 == $i4 goto label11;

        if $r16 == null goto label11;

        z1 = 0;

        if $i1 >= i0 goto label08;

        goto label07;

     label06:
        i2 = i2 + 1;

        r18 = r18.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode nextSibling>;

     label07:
        if i2 >= i0 goto label15;

        if r18 != null goto label06;

        goto label15;

     label08:
        if $i1 <= i0 goto label15;

        goto label10;

     label09:
        $i6 = (int) -1;

        i2 = i2 + $i6;

        r18 = virtualinvoke r18.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode previousSibling()>();

     label10:
        if i2 <= i0 goto label15;

        if r18 != null goto label09;

        goto label15;

     label11:
        if i0 >= 0 goto label12;

        return null;

     label12:
        r18 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        i2 = 0;

        goto label14;

     label13:
        r18 = r18.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode nextSibling>;

        i2 = i2 + 1;

     label14:
        if i2 >= i0 goto label15;

        if r18 != null goto label13;

     label15:
        if z1 != 0 goto label17;

        $r6 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        if r18 == $r6 goto label16;

        $r11 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode lastChild()>();

        if r18 != $r11 goto label17;

     label16:
        $r7 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        $i8 = (int) -1;

        $r7.<org.apache.xerces.dom.NodeListCache: int fChildIndex> = $i8;

        $r8 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        $r8.<org.apache.xerces.dom.NodeListCache: org.apache.xerces.dom.ChildNode fChild> = null;

        $r10 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.CoreDocumentImpl ownerDocument>;

        $r9 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        virtualinvoke $r10.<org.apache.xerces.dom.CoreDocumentImpl: void freeNodeListCache(org.apache.xerces.dom.NodeListCache)>($r9);

        goto label18;

     label17:
        $r4 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        $r4.<org.apache.xerces.dom.NodeListCache: int fChildIndex> = i2;

        $r5 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.NodeListCache fNodeListCache>;

        $r5.<org.apache.xerces.dom.NodeListCache: org.apache.xerces.dom.ChildNode fChild> = r18;

     label18:
        return r18;
    }

    public org.w3c.dom.Node item(int)
    {
        org.apache.xerces.dom.ParentNode r0;
        int i0;
        org.w3c.dom.Node $r1;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.xerces.dom.ParentNode: org.w3c.dom.Node nodeListItem(int)>(i0);

        return $r1;
    }

    protected final org.w3c.dom.NodeList getChildNodesUnoptimized()
    {
        org.apache.xerces.dom.ParentNode r0;
        org.apache.xerces.dom.ParentNode$1 $r1;
        boolean $z0;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        $z0 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: boolean needsSyncChildren()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: void synchronizeChildren()>();

     label1:
        $r1 = new org.apache.xerces.dom.ParentNode$1;

        specialinvoke $r1.<org.apache.xerces.dom.ParentNode$1: void <init>(org.apache.xerces.dom.ParentNode)>(r0);

        return $r1;
    }

    public void normalize()
    {
        org.apache.xerces.dom.ParentNode r0;
        org.apache.xerces.dom.ChildNode r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        $z0 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: boolean isNormalized()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: boolean needsSyncChildren()>();

        if $z1 == 0 goto label2;

        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: void synchronizeChildren()>();

     label2:
        r1 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        goto label4;

     label3:
        virtualinvoke r1.<org.apache.xerces.dom.ChildNode: void normalize()>();

        r1 = r1.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode nextSibling>;

     label4:
        if r1 != null goto label3;

        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: void isNormalized(boolean)>(1);

        return;
    }

    public boolean isEqualNode(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r1, r2, r3;
        org.apache.xerces.dom.ParentNode r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        r1 := @parameter0: org.w3c.dom.Node;

        $z0 = specialinvoke r0.<org.apache.xerces.dom.ChildNode: boolean isEqualNode(org.w3c.dom.Node)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: org.w3c.dom.Node getFirstChild()>();

        r3 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label4;

     label2:
        $z1 = interfaceinvoke r2.<org.w3c.dom.Node: boolean isEqualNode(org.w3c.dom.Node)>(r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        r2 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        r3 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label4:
        if r2 == null goto label5;

        if r3 != null goto label2;

     label5:
        if r2 == r3 goto label6;

        return 0;

     label6:
        return 1;
    }

    public void setReadOnly(boolean, boolean)
    {
        short $s0;
        org.apache.xerces.dom.ParentNode r0;
        org.apache.xerces.dom.ChildNode r1;
        int $i1;
        boolean z0, z1, $z2;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        specialinvoke r0.<org.apache.xerces.dom.ChildNode: void setReadOnly(boolean,boolean)>(z0, z1);

        if z1 == 0 goto label5;

        $z2 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: boolean needsSyncChildren()>();

        if $z2 == 0 goto label1;

        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: void synchronizeChildren()>();

     label1:
        r1 = r0.<org.apache.xerces.dom.ParentNode: org.apache.xerces.dom.ChildNode firstChild>;

        goto label4;

     label2:
        $s0 = virtualinvoke r1.<org.apache.xerces.dom.ChildNode: short getNodeType()>();

        $i1 = (int) $s0;

        if $i1 == 5 goto label3;

        virtualinvoke r1.<org.apache.xerces.dom.ChildNode: void setReadOnly(boolean,boolean)>(z0, 1);

     label3:
        r1 = r1.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode nextSibling>;

     label4:
        if r1 != null goto label2;

     label5:
        return;
    }

    protected void synchronizeChildren()
    {
        org.apache.xerces.dom.ParentNode r0;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: void needsSyncChildren(boolean)>(0);

        return;
    }

    void checkNormalizationAfterInsert(org.apache.xerces.dom.ChildNode)
    {
        org.apache.xerces.dom.ParentNode r1;
        short $s0, $s1, $s2;
        org.apache.xerces.dom.ChildNode r0, $r2, r3;
        int $i3, $i4, $i5;
        boolean $z0;

        r1 := @this: org.apache.xerces.dom.ParentNode;

        r0 := @parameter0: org.apache.xerces.dom.ChildNode;

        $s0 = virtualinvoke r0.<org.apache.xerces.dom.ChildNode: short getNodeType()>();

        $i3 = (int) $s0;

        if $i3 != 3 goto label3;

        $r2 = virtualinvoke r0.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode previousSibling()>();

        r3 = r0.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode nextSibling>;

        if $r2 == null goto label1;

        $s2 = virtualinvoke $r2.<org.apache.xerces.dom.ChildNode: short getNodeType()>();

        $i4 = (int) $s2;

        if $i4 == 3 goto label2;

     label1:
        if r3 == null goto label4;

        $s1 = virtualinvoke r3.<org.apache.xerces.dom.ChildNode: short getNodeType()>();

        $i5 = (int) $s1;

        if $i5 != 3 goto label4;

     label2:
        virtualinvoke r1.<org.apache.xerces.dom.ParentNode: void isNormalized(boolean)>(0);

        goto label4;

     label3:
        $z0 = virtualinvoke r0.<org.apache.xerces.dom.ChildNode: boolean isNormalized()>();

        if $z0 != 0 goto label4;

        virtualinvoke r1.<org.apache.xerces.dom.ParentNode: void isNormalized(boolean)>(0);

     label4:
        return;
    }

    void checkNormalizationAfterRemove(org.apache.xerces.dom.ChildNode)
    {
        short $s0, $s1;
        org.apache.xerces.dom.ChildNode r0, r1;
        org.apache.xerces.dom.ParentNode r2;
        int $i2, $i3;

        r2 := @this: org.apache.xerces.dom.ParentNode;

        r0 := @parameter0: org.apache.xerces.dom.ChildNode;

        if r0 == null goto label1;

        $s0 = virtualinvoke r0.<org.apache.xerces.dom.ChildNode: short getNodeType()>();

        $i2 = (int) $s0;

        if $i2 != 3 goto label1;

        r1 = r0.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode nextSibling>;

        if r1 == null goto label1;

        $s1 = virtualinvoke r1.<org.apache.xerces.dom.ChildNode: short getNodeType()>();

        $i3 = (int) $s1;

        if $i3 != 3 goto label1;

        virtualinvoke r2.<org.apache.xerces.dom.ParentNode: void isNormalized(boolean)>(0);

     label1:
        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.xerces.dom.ParentNode r0;
        java.io.ObjectOutputStream r1;
        boolean $z0;

        r0 := @this: org.apache.xerces.dom.ParentNode;

        r1 := @parameter0: java.io.ObjectOutputStream;

        $z0 = virtualinvoke r0.<org.apache.xerces.dom.ParentNode: boolean needsSyncChildren()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.xerces.dom.ParentNode: void synchronizeChildren()>();

     label1:
        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException, java.io.IOException
    {
        java.io.ObjectInputStream r0;
        org.apache.xerces.dom.ParentNode r1;

        r1 := @this: org.apache.xerces.dom.ParentNode;

        r0 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

        virtualinvoke r1.<org.apache.xerces.dom.ParentNode: void needsSyncChildren(boolean)>(0);

        return;
    }

    static int access$000(org.apache.xerces.dom.ParentNode)
    {
        org.apache.xerces.dom.ParentNode r0;
        int $i0;

        r0 := @parameter0: org.apache.xerces.dom.ParentNode;

        $i0 = specialinvoke r0.<org.apache.xerces.dom.ParentNode: int nodeListGetLength()>();

        return $i0;
    }

    static org.w3c.dom.Node access$100(org.apache.xerces.dom.ParentNode, int)
    {
        org.apache.xerces.dom.ParentNode r0;
        int i0;
        org.w3c.dom.Node $r1;

        r0 := @parameter0: org.apache.xerces.dom.ParentNode;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<org.apache.xerces.dom.ParentNode: org.w3c.dom.Node nodeListItem(int)>(i0);

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.xerces.dom.ParentNode: long serialVersionUID> = 2815829867152120872L;

        return;
    }
}
