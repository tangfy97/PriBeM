public class org.apache.http.impl.cookie.BasicClientCookie extends java.lang.Object implements org.apache.http.cookie.SetCookie, org.apache.http.cookie.ClientCookie, java.lang.Cloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.lang.String name;
    private java.util.Map attribs;
    private java.lang.String value;
    private java.lang.String cookieComment;
    private java.lang.String cookieDomain;
    private java.util.Date cookieExpiryDate;
    private java.lang.String cookiePath;
    private boolean isSecure;
    private int cookieVersion;

    public void <init>(java.lang.String, java.lang.String)
    {
        org.apache.http.impl.cookie.BasicClientCookie r0;
        java.util.HashMap $r2;
        java.lang.String r1, r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.apache.http.impl.cookie.BasicClientCookie;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Name may not be null");

        throw $r4;

     label1:
        r0.<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String name> = r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.http.impl.cookie.BasicClientCookie: java.util.Map attribs> = $r2;

        r0.<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String value> = r3;

        return;
    }

    public java.lang.String getName()
    {
        org.apache.http.impl.cookie.BasicClientCookie r0;
        java.lang.String $r1;

        r0 := @this: org.apache.http.impl.cookie.BasicClientCookie;

        $r1 = r0.<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getValue()
    {
        org.apache.http.impl.cookie.BasicClientCookie r0;
        java.lang.String $r1;

        r0 := @this: org.apache.http.impl.cookie.BasicClientCookie;

        $r1 = r0.<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String value>;

        return $r1;
    }

    public void setValue(java.lang.String)
    {
        org.apache.http.impl.cookie.BasicClientCookie r0;
        java.lang.String r1;

        r0 := @this: org.apache.http.impl.cookie.BasicClientCookie;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String value> = r1;

        return;
    }

    public java.lang.String getComment()
    {
        org.apache.http.impl.cookie.BasicClientCookie r0;
        java.lang.String $r1;

        r0 := @this: org.apache.http.impl.cookie.BasicClientCookie;

        $r1 = r0.<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String cookieComment>;

        return $r1;
    }

    public void setComment(java.lang.String)
    {
        org.apache.http.impl.cookie.BasicClientCookie r0;
        java.lang.String r1;

        r0 := @this: org.apache.http.impl.cookie.BasicClientCookie;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String cookieComment> = r1;

        return;
    }

    public java.lang.String getCommentURL()
    {
        org.apache.http.impl.cookie.BasicClientCookie r0;

        r0 := @this: org.apache.http.impl.cookie.BasicClientCookie;

        return null;
    }

    public java.util.Date getExpiryDate()
    {
        org.apache.http.impl.cookie.BasicClientCookie r0;
        java.util.Date $r1;

        r0 := @this: org.apache.http.impl.cookie.BasicClientCookie;

        $r1 = r0.<org.apache.http.impl.cookie.BasicClientCookie: java.util.Date cookieExpiryDate>;

        return $r1;
    }

    public void setExpiryDate(java.util.Date)
    {
        org.apache.http.impl.cookie.BasicClientCookie r0;
        java.util.Date r1;

        r0 := @this: org.apache.http.impl.cookie.BasicClientCookie;

        r1 := @parameter0: java.util.Date;

        r0.<org.apache.http.impl.cookie.BasicClientCookie: java.util.Date cookieExpiryDate> = r1;

        return;
    }

    public boolean isPersistent()
    {
        org.apache.http.impl.cookie.BasicClientCookie r0;
        java.util.Date $r1;
        boolean $z0;

        r0 := @this: org.apache.http.impl.cookie.BasicClientCookie;

        $r1 = r0.<org.apache.http.impl.cookie.BasicClientCookie: java.util.Date cookieExpiryDate>;

        if null == $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getDomain()
    {
        org.apache.http.impl.cookie.BasicClientCookie r0;
        java.lang.String $r1;

        r0 := @this: org.apache.http.impl.cookie.BasicClientCookie;

        $r1 = r0.<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String cookieDomain>;

        return $r1;
    }

    public void setDomain(java.lang.String)
    {
        org.apache.http.impl.cookie.BasicClientCookie r1;
        java.util.Locale $r2;
        java.lang.String r0, $r3;

        r1 := @this: org.apache.http.impl.cookie.BasicClientCookie;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        r1.<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String cookieDomain> = $r3;

        goto label2;

     label1:
        r1.<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String cookieDomain> = null;

     label2:
        return;
    }

    public java.lang.String getPath()
    {
        org.apache.http.impl.cookie.BasicClientCookie r0;
        java.lang.String $r1;

        r0 := @this: org.apache.http.impl.cookie.BasicClientCookie;

        $r1 = r0.<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String cookiePath>;

        return $r1;
    }

    public void setPath(java.lang.String)
    {
        org.apache.http.impl.cookie.BasicClientCookie r0;
        java.lang.String r1;

        r0 := @this: org.apache.http.impl.cookie.BasicClientCookie;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String cookiePath> = r1;

        return;
    }

    public boolean isSecure()
    {
        org.apache.http.impl.cookie.BasicClientCookie r0;
        boolean $z0;

        r0 := @this: org.apache.http.impl.cookie.BasicClientCookie;

        $z0 = r0.<org.apache.http.impl.cookie.BasicClientCookie: boolean isSecure>;

        return $z0;
    }

    public void setSecure(boolean)
    {
        org.apache.http.impl.cookie.BasicClientCookie r0;
        boolean z0;

        r0 := @this: org.apache.http.impl.cookie.BasicClientCookie;

        z0 := @parameter0: boolean;

        r0.<org.apache.http.impl.cookie.BasicClientCookie: boolean isSecure> = z0;

        return;
    }

    public int[] getPorts()
    {
        org.apache.http.impl.cookie.BasicClientCookie r0;

        r0 := @this: org.apache.http.impl.cookie.BasicClientCookie;

        return null;
    }

    public int getVersion()
    {
        int $i0;
        org.apache.http.impl.cookie.BasicClientCookie r0;

        r0 := @this: org.apache.http.impl.cookie.BasicClientCookie;

        $i0 = r0.<org.apache.http.impl.cookie.BasicClientCookie: int cookieVersion>;

        return $i0;
    }

    public void setVersion(int)
    {
        int i0;
        org.apache.http.impl.cookie.BasicClientCookie r0;

        r0 := @this: org.apache.http.impl.cookie.BasicClientCookie;

        i0 := @parameter0: int;

        r0.<org.apache.http.impl.cookie.BasicClientCookie: int cookieVersion> = i0;

        return;
    }

    public boolean isExpired(java.util.Date)
    {
        org.apache.http.impl.cookie.BasicClientCookie r1;
        java.util.Date r0, $r2, $r3;
        long $l0, $l1;
        java.lang.IllegalArgumentException $r5;
        byte $b2;
        int $i3;
        boolean $z0;

        r1 := @this: org.apache.http.impl.cookie.BasicClientCookie;

        r0 := @parameter0: java.util.Date;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Date may not be null");

        throw $r5;

     label1:
        $r2 = r1.<org.apache.http.impl.cookie.BasicClientCookie: java.util.Date cookieExpiryDate>;

        if $r2 == null goto label2;

        $r3 = r1.<org.apache.http.impl.cookie.BasicClientCookie: java.util.Date cookieExpiryDate>;

        $l0 = virtualinvoke $r3.<java.util.Date: long getTime()>();

        $l1 = virtualinvoke r0.<java.util.Date: long getTime()>();

        $b2 = $l0 cmp $l1;

        $i3 = (int) $b2;

        if $i3 > 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public void setAttribute(java.lang.String, java.lang.String)
    {
        org.apache.http.impl.cookie.BasicClientCookie r0;
        java.util.Map $r3;
        java.lang.String r1, r2;

        r0 := @this: org.apache.http.impl.cookie.BasicClientCookie;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.http.impl.cookie.BasicClientCookie: java.util.Map attribs>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public java.lang.String getAttribute(java.lang.String)
    {
        org.apache.http.impl.cookie.BasicClientCookie r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1, $r4;

        r0 := @this: org.apache.http.impl.cookie.BasicClientCookie;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.http.impl.cookie.BasicClientCookie: java.util.Map attribs>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public boolean containsAttribute(java.lang.String)
    {
        org.apache.http.impl.cookie.BasicClientCookie r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.http.impl.cookie.BasicClientCookie;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.http.impl.cookie.BasicClientCookie: java.util.Map attribs>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.http.impl.cookie.BasicClientCookie r0, r2;
        java.util.Map $r4;
        java.lang.Object $r1;
        java.util.HashMap $r3;

        r0 := @this: org.apache.http.impl.cookie.BasicClientCookie;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (org.apache.http.impl.cookie.BasicClientCookie) $r1;

        $r3 = new java.util.HashMap;

        $r4 = r0.<org.apache.http.impl.cookie.BasicClientCookie: java.util.Map attribs>;

        specialinvoke $r3.<java.util.HashMap: void <init>(java.util.Map)>($r4);

        r2.<org.apache.http.impl.cookie.BasicClientCookie: java.util.Map attribs> = $r3;

        return r2;
    }

    public java.lang.String toString()
    {
        org.apache.http.impl.cookie.BasicClientCookie r1;
        java.util.Date $r7;
        int $i0;
        java.lang.StringBuilder $r0;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r8;

        r1 := @this: org.apache.http.impl.cookie.BasicClientCookie;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[version: ");

        $i0 = r1.<org.apache.http.impl.cookie.BasicClientCookie: int cookieVersion>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[name: ");

        $r3 = r1.<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String name>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[value: ");

        $r4 = r1.<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String value>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[domain: ");

        $r5 = r1.<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String cookieDomain>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[path: ");

        $r6 = r1.<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String cookiePath>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[expiry: ");

        $r7 = r1.<org.apache.http.impl.cookie.BasicClientCookie: java.util.Date cookieExpiryDate>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static void <clinit>()
    {
        <org.apache.http.impl.cookie.BasicClientCookie: long serialVersionUID> = -3869795591041535538L;

        return;
    }
}
