public class com.mycila.inject.internal.cglib.transform.ClassTransformerChain extends com.mycila.inject.internal.cglib.transform.AbstractClassTransformer
{
    private com.mycila.inject.internal.cglib.transform.ClassTransformer[] chain;

    public void <init>(com.mycila.inject.internal.cglib.transform.ClassTransformer[])
    {
        com.mycila.inject.internal.cglib.transform.ClassTransformer[] r1, $r3, $r4;
        com.mycila.inject.internal.cglib.transform.ClassTransformerChain r0;
        java.lang.Object $r2;

        r0 := @this: com.mycila.inject.internal.cglib.transform.ClassTransformerChain;

        r1 := @parameter0: com.mycila.inject.internal.cglib.transform.ClassTransformer[];

        specialinvoke r0.<com.mycila.inject.internal.cglib.transform.AbstractClassTransformer: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (com.mycila.inject.internal.cglib.transform.ClassTransformer[]) $r2;

        $r4 = (com.mycila.inject.internal.cglib.transform.ClassTransformer[]) $r3;

        r0.<com.mycila.inject.internal.cglib.transform.ClassTransformerChain: com.mycila.inject.internal.cglib.transform.ClassTransformer[] chain> = $r4;

        return;
    }

    public void setTarget(com.mycila.inject.internal.asm.ClassVisitor)
    {
        com.mycila.inject.internal.cglib.transform.ClassTransformer[] $r1, $r4, $r5, $r7;
        com.mycila.inject.internal.cglib.transform.ClassTransformerChain r0;
        int $i0, i1, $i3;
        com.mycila.inject.internal.asm.ClassVisitor r3, r8;
        com.mycila.inject.internal.cglib.transform.ClassTransformer $r2, $r6;

        r0 := @this: com.mycila.inject.internal.cglib.transform.ClassTransformerChain;

        r3 := @parameter0: com.mycila.inject.internal.asm.ClassVisitor;

        $r1 = r0.<com.mycila.inject.internal.cglib.transform.ClassTransformerChain: com.mycila.inject.internal.cglib.transform.ClassTransformer[] chain>;

        $r2 = $r1[0];

        specialinvoke r0.<com.mycila.inject.internal.cglib.transform.AbstractClassTransformer: void setTarget(com.mycila.inject.internal.asm.ClassVisitor)>($r2);

        r8 = r3;

        $r4 = r0.<com.mycila.inject.internal.cglib.transform.ClassTransformerChain: com.mycila.inject.internal.cglib.transform.ClassTransformer[] chain>;

        $i0 = lengthof $r4;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r5 = r0.<com.mycila.inject.internal.cglib.transform.ClassTransformerChain: com.mycila.inject.internal.cglib.transform.ClassTransformer[] chain>;

        $r6 = $r5[i1];

        interfaceinvoke $r6.<com.mycila.inject.internal.cglib.transform.ClassTransformer: void setTarget(com.mycila.inject.internal.asm.ClassVisitor)>(r8);

        $r7 = r0.<com.mycila.inject.internal.cglib.transform.ClassTransformerChain: com.mycila.inject.internal.cglib.transform.ClassTransformer[] chain>;

        r8 = $r7[i1];

        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label1;

     label2:
        return;
    }

    public com.mycila.inject.internal.asm.MethodVisitor visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        java.lang.String[] r4;
        com.mycila.inject.internal.cglib.transform.ClassTransformerChain r0;
        com.mycila.inject.internal.asm.MethodVisitor $r6;
        int i0;
        java.lang.String r1, r2, r3;
        com.mycila.inject.internal.asm.ClassVisitor $r5;

        r0 := @this: com.mycila.inject.internal.cglib.transform.ClassTransformerChain;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        $r5 = r0.<com.mycila.inject.internal.cglib.transform.ClassTransformerChain: com.mycila.inject.internal.asm.ClassVisitor cv>;

        $r6 = interfaceinvoke $r5.<com.mycila.inject.internal.asm.ClassVisitor: com.mycila.inject.internal.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(i0, r1, r2, r3, r4);

        return $r6;
    }

    public java.lang.String toString()
    {
        com.mycila.inject.internal.cglib.transform.ClassTransformer[] $r2, $r4;
        com.mycila.inject.internal.cglib.transform.ClassTransformerChain r1;
        java.lang.StringBuffer $r0;
        int $i0, i1;
        java.lang.String $r3, $r6;
        com.mycila.inject.internal.cglib.transform.ClassTransformer $r5;

        r1 := @this: com.mycila.inject.internal.cglib.transform.ClassTransformerChain;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ClassTransformerChain{");

        i1 = 0;

     label1:
        $r2 = r1.<com.mycila.inject.internal.cglib.transform.ClassTransformerChain: com.mycila.inject.internal.cglib.transform.ClassTransformer[] chain>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label3;

        if i1 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        $r4 = r1.<com.mycila.inject.internal.cglib.transform.ClassTransformerChain: com.mycila.inject.internal.cglib.transform.ClassTransformer[] chain>;

        $r5 = $r4[i1];

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }
}
