public class ucar.nc2.iosp.gempak.GempakSurfaceIOSP extends ucar.nc2.iosp.gempak.GempakStationFileIOSP
{

    public void <init>()
    {
        ucar.nc2.iosp.gempak.GempakSurfaceIOSP r0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSurfaceIOSP;

        specialinvoke r0.<ucar.nc2.iosp.gempak.GempakStationFileIOSP: void <init>()>();

        return;
    }

    protected ucar.nc2.iosp.gempak.AbstractGempakStationFileReader makeStationReader()
    {
        ucar.nc2.iosp.gempak.GempakSurfaceFileReader $r0;
        ucar.nc2.iosp.gempak.GempakSurfaceIOSP r1;

        r1 := @this: ucar.nc2.iosp.gempak.GempakSurfaceIOSP;

        $r0 = new ucar.nc2.iosp.gempak.GempakSurfaceFileReader;

        specialinvoke $r0.<ucar.nc2.iosp.gempak.GempakSurfaceFileReader: void <init>()>();

        return $r0;
    }

    public boolean isValidFile(ucar.unidata.io.RandomAccessFile) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile r1;
        ucar.nc2.iosp.gempak.AbstractGempakStationFileReader $r2, $r4;
        ucar.nc2.iosp.gempak.GempakSurfaceIOSP r0;
        java.lang.String $r3, $r5;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSurfaceIOSP;

        r1 := @parameter0: ucar.unidata.io.RandomAccessFile;

        $z0 = specialinvoke r0.<ucar.nc2.iosp.gempak.GempakStationFileIOSP: boolean isValidFile(ucar.unidata.io.RandomAccessFile)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r3 = virtualinvoke $r2.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: java.lang.String getFileSubType()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("standard");

        if $z1 != 0 goto label2;

        $r4 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r5 = virtualinvoke $r4.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: java.lang.String getFileSubType()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("ship");

        if $z2 == 0 goto label3;

     label2:
        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    public java.lang.String getFileTypeId()
    {
        ucar.nc2.iosp.gempak.GempakSurfaceIOSP r0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSurfaceIOSP;

        return "GempakSurface";
    }

    public java.lang.String getFileTypeDescription()
    {
        ucar.nc2.iosp.gempak.GempakSurfaceIOSP r0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSurfaceIOSP;

        return "GEMPAK Surface Obs Data";
    }

    public java.lang.String getCFFeatureType()
    {
        ucar.nc2.iosp.gempak.AbstractGempakStationFileReader $r1;
        ucar.nc2.iosp.gempak.GempakSurfaceIOSP r0;
        ucar.nc2.constants.CF$FeatureType $r3, $r5;
        java.lang.String $r2, $r4, $r6;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSurfaceIOSP;

        $r1 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r2 = virtualinvoke $r1.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: java.lang.String getFileSubType()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ship");

        if $z0 == 0 goto label1;

        $r5 = <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType point>;

        $r6 = virtualinvoke $r5.<ucar.nc2.constants.CF$FeatureType: java.lang.String toString()>();

        return $r6;

     label1:
        $r3 = <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType timeSeries>;

        $r4 = virtualinvoke $r3.<ucar.nc2.constants.CF$FeatureType: java.lang.String toString()>();

        return $r4;
    }

    public ucar.ma2.Array readData(ucar.nc2.Variable, ucar.ma2.Section) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.ma2.Section r7;
        ucar.ma2.Array r8;
        ucar.nc2.iosp.gempak.AbstractGempakStationFileReader $r1, $r2, $r4;
        ucar.nc2.iosp.gempak.GempakSurfaceIOSP r0;
        ucar.nc2.Variable r6;
        java.lang.String $r3, $r5;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSurfaceIOSP;

        r6 := @parameter0: ucar.nc2.Variable;

        r7 := @parameter1: ucar.ma2.Section;

        $r1 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        if $r1 != null goto label1;

        return null;

     label1:
        r8 = null;

        $r2 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r3 = virtualinvoke $r2.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: java.lang.String getFileSubType()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("ship");

        if $z0 == 0 goto label2;

        r8 = specialinvoke r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.ma2.Array readShipData(ucar.nc2.Variable,ucar.ma2.Section)>(r6, r7);

        goto label3;

     label2:
        $r4 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r5 = virtualinvoke $r4.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: java.lang.String getFileSubType()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("standard");

        if $z1 == 0 goto label3;

        r8 = specialinvoke r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.ma2.Array readStandardData(ucar.nc2.Variable,ucar.ma2.Section)>(r6, r7);

     label3:
        return r8;
    }

    private ucar.ma2.Array readStandardData(ucar.nc2.Variable, ucar.ma2.Section) throws java.io.IOException
    {
        byte[] r13;
        ucar.ma2.StructureMembers$Member $r23, r34, r37;
        ucar.ma2.StructureMembers $r5;
        ucar.nc2.Attribute $r29;
        ucar.ma2.Section r10;
        float[] r35, r38;
        ucar.nc2.Structure r4;
        ucar.nc2.iosp.gempak.GempakParameter r21;
        java.lang.String $r22;
        java.lang.Number $r30;
        java.nio.ByteBuffer $r14;
        ucar.ma2.ArrayStructureBB $r15, r33;
        int[] $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        ucar.ma2.Range $r11, $r12;
        ucar.ma2.DataType $r26, $r27, $r32;
        java.util.List $r3, $r6, $r8;
        ucar.nc2.iosp.gempak.GempakSurfaceIOSP r1;
        float $f0, $f1, $f2;
        ucar.nc2.iosp.gempak.AbstractGempakStationFileReader $r2, $r17;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, i19, i20, i21;
        ucar.nc2.Variable r0, r36;
        java.util.Iterator $r7, $r9, $r19, $r24;
        ucar.nc2.iosp.gempak.GempakFileReader$RData $r18;
        java.lang.Object $r20, $r25, $r28, $r31;

        r1 := @this: ucar.nc2.iosp.gempak.GempakSurfaceIOSP;

        r0 := @parameter0: ucar.nc2.Variable;

        r10 := @parameter1: ucar.ma2.Section;

        r33 = null;

        $z0 = r0 instanceof ucar.nc2.Structure;

        if $z0 == 0 goto label19;

        $r2 = r1.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r3 = virtualinvoke $r2.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: java.util.List getParameters(java.lang.String)>("SFDT");

        r4 = (ucar.nc2.Structure) r0;

        $r5 = virtualinvoke r4.<ucar.nc2.Structure: ucar.ma2.StructureMembers makeStructureMembers()>();

        $r6 = virtualinvoke $r5.<ucar.ma2.StructureMembers: java.util.List getMembers()>();

        i15 = 0;

        i16 = 0;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label02;

        $r31 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r34 = (ucar.ma2.StructureMembers$Member) $r31;

        $i12 = i15;

        i15 = i15 + 1;

        $i13 = 4 * $i12;

        virtualinvoke r34.<ucar.ma2.StructureMembers$Member: void setDataParam(int)>($i13);

        $r32 = virtualinvoke r34.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $i14 = virtualinvoke $r32.<ucar.ma2.DataType: int getSize()>();

        i16 = i16 + $i14;

        goto label01;

     label02:
        virtualinvoke $r5.<ucar.ma2.StructureMembers: void setStructureSize(int)>(i16);

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        r35 = newarray (float)[$i0];

        i17 = 0;

        $r8 = virtualinvoke r4.<ucar.nc2.Structure: java.util.List getVariables()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label06;

        $r28 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r36 = (ucar.nc2.Variable) $r28;

        $r29 = virtualinvoke r36.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("missing_value");

        $i11 = i17;

        i17 = i17 + 1;

        if $r29 != null goto label04;

        $f2 = -9999.0F;

        goto label05;

     label04:
        $r30 = virtualinvoke $r29.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $f2 = virtualinvoke $r30.<java.lang.Number: float floatValue()>();

     label05:
        r35[$i11] = $f2;

        goto label03;

     label06:
        $r11 = virtualinvoke r10.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(0);

        $r12 = virtualinvoke r10.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(1);

        $i1 = virtualinvoke $r11.<ucar.ma2.Range: int length()>();

        $i2 = virtualinvoke $r12.<ucar.ma2.Range: int length()>();

        i3 = $i1 * $i2;

        $i4 = i16 * i3;

        r13 = newarray (byte)[$i4];

        $r14 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r13);

        $r15 = new ucar.ma2.ArrayStructureBB;

        $r16 = newarray (int)[1];

        $r16[0] = i3;

        specialinvoke $r15.<ucar.ma2.ArrayStructureBB: void <init>(ucar.ma2.StructureMembers,int[],java.nio.ByteBuffer,int)>($r5, $r16, $r14, 0);

        r33 = $r15;

        i18 = virtualinvoke $r11.<ucar.ma2.Range: int first()>();

     label07:
        $i5 = virtualinvoke $r11.<ucar.ma2.Range: int last()>();

        if i18 > $i5 goto label19;

        i19 = virtualinvoke $r12.<ucar.ma2.Range: int first()>();

     label08:
        $i6 = virtualinvoke $r12.<ucar.ma2.Range: int last()>();

        if i19 > $i6 goto label18;

        $r17 = r1.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $i9 = i19 + 1;

        $i8 = i18 + 1;

        $r18 = virtualinvoke $r17.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: ucar.nc2.iosp.gempak.GempakFileReader$RData DM_RDTR(int,int,java.lang.String)>($i9, $i8, "SFDT");

        if $r18 != null goto label13;

        i20 = 0;

        $r24 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z4 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label12;

        $r25 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        r37 = (ucar.ma2.StructureMembers$Member) $r25;

        $r26 = virtualinvoke r37.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r27 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        $z5 = virtualinvoke $r26.<ucar.ma2.DataType: boolean equals(java.lang.Object)>($r27);

        if $z5 == 0 goto label10;

        $f1 = r35[i20];

        virtualinvoke $r14.<java.nio.ByteBuffer: java.nio.ByteBuffer putFloat(float)>($f1);

        goto label11;

     label10:
        virtualinvoke $r14.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(1);

     label11:
        i20 = i20 + 1;

        goto label09;

     label12:
        goto label17;

     label13:
        r38 = $r18.<ucar.nc2.iosp.gempak.GempakFileReader$RData: float[] data>;

        i21 = 0;

        $r19 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z3 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label16;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r21 = (ucar.nc2.iosp.gempak.GempakParameter) $r20;

        $r22 = virtualinvoke r21.<ucar.nc2.iosp.gempak.GempakParameter: java.lang.String getName()>();

        $r23 = virtualinvoke $r5.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r22);

        if $r23 == null goto label15;

        $f0 = r38[i21];

        virtualinvoke $r14.<java.nio.ByteBuffer: java.nio.ByteBuffer putFloat(float)>($f0);

     label15:
        i21 = i21 + 1;

        goto label14;

     label16:
        virtualinvoke $r14.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(0);

     label17:
        $i10 = virtualinvoke $r12.<ucar.ma2.Range: int stride()>();

        i19 = i19 + $i10;

        goto label08;

     label18:
        $i7 = virtualinvoke $r11.<ucar.ma2.Range: int stride()>();

        i18 = i18 + $i7;

        goto label07;

     label19:
        return r33;
    }

    private ucar.ma2.Array readShipData(ucar.nc2.Variable, ucar.ma2.Section) throws java.io.IOException
    {
        byte[] $r37, r55;
        ucar.ma2.StructureMembers$Member $r22, $r29, $r33, $r36, $r47, r54, $r57;
        ucar.ma2.StructureMembers $r5;
        ucar.ma2.Section r10;
        long $l3;
        float[] r62;
        ucar.nc2.Structure r4;
        ucar.nc2.iosp.gempak.GempakParameter r27, r56, r61;
        java.lang.String $r28, $r32, $r38, $r39, $r40, $r41, $r42, $r43, $r46, $r49, $r50, $r51, $r52, r58, r59;
        ucar.nc2.iosp.gempak.GempakStation r20;
        java.util.Date r60;
        java.nio.ByteBuffer $r12;
        ucar.ma2.ArrayStructureBB $r13, r53;
        int[] $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, z21, $z22, $z23, $z24;
        ucar.ma2.Range $r11;
        java.util.List $r3, $r6, $r8, $r16, $r18;
        ucar.nc2.iosp.gempak.GempakSurfaceIOSP r1;
        float $f0, $f1, $f2, $f3;
        ucar.nc2.iosp.gempak.AbstractGempakStationFileReader $r2, $r7, $r15, $r17, $r23;
        int $i0, $i1, $i2, $i4, $i5, $i6, i7, i8, $i9, i10, $i11;
        ucar.nc2.Variable r0;
        double $d0, $d1, $d2, $d3, $d4;
        java.util.Iterator $r9, $r21, $r25, $r30, $r44;
        ucar.nc2.iosp.gempak.GempakFileReader$RData $r24;
        java.lang.Object $r19, $r26, $r31, $r34, $r35, $r45, $r48;

        r1 := @this: ucar.nc2.iosp.gempak.GempakSurfaceIOSP;

        r0 := @parameter0: ucar.nc2.Variable;

        r10 := @parameter1: ucar.ma2.Section;

        r53 = null;

        $z0 = r0 instanceof ucar.nc2.Structure;

        if $z0 == 0 goto label38;

        $r2 = r1.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r3 = virtualinvoke $r2.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: java.util.List getParameters(java.lang.String)>("SFDT");

        r4 = (ucar.nc2.Structure) r0;

        $r5 = virtualinvoke r4.<ucar.nc2.Structure: ucar.ma2.StructureMembers makeStructureMembers()>();

        $r6 = virtualinvoke $r5.<ucar.ma2.StructureMembers: java.util.List getMembers()>();

        i7 = 0;

        $r7 = r1.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r8 = virtualinvoke $r7.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: java.util.List getStationKeyNames()>();

        $r9 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r48 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r54 = (ucar.ma2.StructureMembers$Member) $r48;

        $r49 = virtualinvoke r54.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        $z17 = interfaceinvoke $r8.<java.util.List: boolean contains(java.lang.Object)>($r49);

        if $z17 == 0 goto label02;

        $r52 = virtualinvoke r54.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        $i6 = virtualinvoke r1.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: int getStnVarSize(java.lang.String)>($r52);

        virtualinvoke r54.<ucar.ma2.StructureMembers$Member: void setDataParam(int)>(i7);

        i7 = i7 + $i6;

        goto label05;

     label02:
        $r50 = virtualinvoke r54.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        $z18 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>("time");

        if $z18 == 0 goto label03;

        virtualinvoke r54.<ucar.ma2.StructureMembers$Member: void setDataParam(int)>(i7);

        i7 = i7 + 8;

        goto label05;

     label03:
        $r51 = virtualinvoke r54.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        $z19 = virtualinvoke $r51.<java.lang.String: boolean equals(java.lang.Object)>("_isMissing");

        if $z19 == 0 goto label04;

        virtualinvoke r54.<ucar.ma2.StructureMembers$Member: void setDataParam(int)>(i7);

        i7 = i7 + 1;

        goto label05;

     label04:
        virtualinvoke r54.<ucar.ma2.StructureMembers$Member: void setDataParam(int)>(i7);

        i7 = i7 + 4;

     label05:
        goto label01;

     label06:
        virtualinvoke $r5.<ucar.ma2.StructureMembers: void setStructureSize(int)>(i7);

        $r11 = virtualinvoke r10.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(0);

        $i0 = virtualinvoke $r11.<ucar.ma2.Range: int length()>();

        $i1 = i7 * $i0;

        r55 = newarray (byte)[$i1];

        $r12 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r55);

        $r13 = new ucar.ma2.ArrayStructureBB;

        $r14 = newarray (int)[1];

        $r14[0] = $i0;

        specialinvoke $r13.<ucar.ma2.ArrayStructureBB: void <init>(ucar.ma2.StructureMembers,int[],java.nio.ByteBuffer,int)>($r5, $r14, $r12, 0);

        r53 = $r13;

        $r15 = r1.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r16 = virtualinvoke $r15.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: java.util.List getStations()>();

        $r17 = r1.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r18 = virtualinvoke $r17.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: java.util.List getDates()>();

        $z2 = virtualinvoke r4.<ucar.nc2.Structure: boolean isSubset()>();

        if $z2 != 0 goto label07;

        $z24 = 1;

        $z23 = 1;

        goto label08;

     label07:
        $z24 = 0;

        $z23 = 0;

     label08:
        z21 = $z24;

        if $z23 != 0 goto label11;

        $r44 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z16 = interfaceinvoke $r44.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label11;

        $r45 = interfaceinvoke $r44.<java.util.Iterator: java.lang.Object next()>();

        r56 = (ucar.nc2.iosp.gempak.GempakParameter) $r45;

        $r46 = virtualinvoke r56.<ucar.nc2.iosp.gempak.GempakParameter: java.lang.String getName()>();

        $r47 = virtualinvoke $r5.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r46);

        if $r47 == null goto label10;

        z21 = 1;

        goto label11;

     label10:
        goto label09;

     label11:
        $r57 = virtualinvoke $r5.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>("time");

        if $r57 == null goto label12;

        goto label12;

     label12:
        i8 = virtualinvoke $r11.<ucar.ma2.Range: int first()>();

     label13:
        $i9 = virtualinvoke $r11.<ucar.ma2.Range: int last()>();

        if i8 > $i9 goto label38;

        $r19 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i8);

        r20 = (ucar.nc2.iosp.gempak.GempakStation) $r19;

        $r21 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z22 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z22 == 0 goto label28;

        $r35 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r58 = (java.lang.String) $r35;

        $r36 = virtualinvoke $r5.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r58);

        if $r36 != null goto label15;

        goto label14;

     label15:
        r59 = null;

        $z5 = virtualinvoke r58.<java.lang.String: boolean equals(java.lang.Object)>("STID");

        if $z5 == 0 goto label16;

        $r43 = virtualinvoke r20.<ucar.nc2.iosp.gempak.GempakStation: java.lang.String getName()>();

        r59 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String padRight(java.lang.String,int)>($r43, 8);

        goto label26;

     label16:
        $z6 = virtualinvoke r58.<java.lang.String: boolean equals(java.lang.Object)>("STNM");

        if $z6 == 0 goto label17;

        $i5 = virtualinvoke r20.<ucar.nc2.iosp.gempak.GempakStation: int getSTNM()>();

        virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i5);

        goto label26;

     label17:
        $z7 = virtualinvoke r58.<java.lang.String: boolean equals(java.lang.Object)>("SLAT");

        if $z7 == 0 goto label18;

        $d4 = virtualinvoke r20.<ucar.nc2.iosp.gempak.GempakStation: double getLatitude()>();

        $f3 = (float) $d4;

        virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.ByteBuffer putFloat(float)>($f3);

        goto label26;

     label18:
        $z8 = virtualinvoke r58.<java.lang.String: boolean equals(java.lang.Object)>("SLON");

        if $z8 == 0 goto label19;

        $d3 = virtualinvoke r20.<ucar.nc2.iosp.gempak.GempakStation: double getLongitude()>();

        $f2 = (float) $d3;

        virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.ByteBuffer putFloat(float)>($f2);

        goto label26;

     label19:
        $z9 = virtualinvoke r58.<java.lang.String: boolean equals(java.lang.Object)>("SELV");

        if $z9 == 0 goto label20;

        $d2 = virtualinvoke r20.<ucar.nc2.iosp.gempak.GempakStation: double getAltitude()>();

        $f1 = (float) $d2;

        virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.ByteBuffer putFloat(float)>($f1);

        goto label26;

     label20:
        $z10 = virtualinvoke r58.<java.lang.String: boolean equals(java.lang.Object)>("STAT");

        if $z10 == 0 goto label21;

        $r42 = virtualinvoke r20.<ucar.nc2.iosp.gempak.GempakStation: java.lang.String getSTAT()>();

        r59 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String padRight(java.lang.String,int)>($r42, 2);

        goto label26;

     label21:
        $z11 = virtualinvoke r58.<java.lang.String: boolean equals(java.lang.Object)>("COUN");

        if $z11 == 0 goto label22;

        $r41 = virtualinvoke r20.<ucar.nc2.iosp.gempak.GempakStation: java.lang.String getCOUN()>();

        r59 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String padRight(java.lang.String,int)>($r41, 2);

        goto label26;

     label22:
        $z12 = virtualinvoke r58.<java.lang.String: boolean equals(java.lang.Object)>("STD2");

        if $z12 == 0 goto label23;

        $r40 = virtualinvoke r20.<ucar.nc2.iosp.gempak.GempakStation: java.lang.String getSTD2()>();

        r59 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String padRight(java.lang.String,int)>($r40, 4);

        goto label26;

     label23:
        $z13 = virtualinvoke r58.<java.lang.String: boolean equals(java.lang.Object)>("SPRI");

        if $z13 == 0 goto label24;

        $i4 = virtualinvoke r20.<ucar.nc2.iosp.gempak.GempakStation: int getSPRI()>();

        virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i4);

        goto label26;

     label24:
        $z14 = virtualinvoke r58.<java.lang.String: boolean equals(java.lang.Object)>("SWFO");

        if $z14 == 0 goto label25;

        $r39 = virtualinvoke r20.<ucar.nc2.iosp.gempak.GempakStation: java.lang.String getSWFO()>();

        r59 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String padRight(java.lang.String,int)>($r39, 4);

        goto label26;

     label25:
        $z15 = virtualinvoke r58.<java.lang.String: boolean equals(java.lang.Object)>("WFO2");

        if $z15 == 0 goto label26;

        $r38 = virtualinvoke r20.<ucar.nc2.iosp.gempak.GempakStation: java.lang.String getWFO2()>();

        r59 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String padRight(java.lang.String,int)>($r38, 4);

     label26:
        if r59 == null goto label27;

        $r37 = virtualinvoke r59.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r37);

     label27:
        goto label14;

     label28:
        $r22 = virtualinvoke $r5.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>("time");

        if $r22 == null goto label29;

        $r34 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>(i8);

        r60 = (java.util.Date) $r34;

        $l3 = virtualinvoke r60.<java.util.Date: long getTime()>();

        $d0 = (double) $l3;

        $d1 = $d0 / 1000.0;

        virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.ByteBuffer putDouble(double)>($d1);

     label29:
        if z21 == 0 goto label37;

        $i2 = virtualinvoke r20.<ucar.nc2.iosp.gempak.GempakStation: int getIndex()>();

        $r23 = r1.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r24 = virtualinvoke $r23.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: ucar.nc2.iosp.gempak.GempakFileReader$RData DM_RDTR(int,int,java.lang.String)>(1, $i2, "SFDT");

        if $r24 != null goto label33;

        $r30 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label30:
        $z4 = interfaceinvoke $r30.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label32;

        $r31 = interfaceinvoke $r30.<java.util.Iterator: java.lang.Object next()>();

        r61 = (ucar.nc2.iosp.gempak.GempakParameter) $r31;

        $r32 = virtualinvoke r61.<ucar.nc2.iosp.gempak.GempakParameter: java.lang.String getName()>();

        $r33 = virtualinvoke $r5.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r32);

        if $r33 == null goto label31;

        virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.ByteBuffer putFloat(float)>(-9999.0F);

     label31:
        goto label30;

     label32:
        virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(1);

        goto label37;

     label33:
        r62 = $r24.<ucar.nc2.iosp.gempak.GempakFileReader$RData: float[] data>;

        i10 = 0;

        $r25 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label34:
        $z3 = interfaceinvoke $r25.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label36;

        $r26 = interfaceinvoke $r25.<java.util.Iterator: java.lang.Object next()>();

        r27 = (ucar.nc2.iosp.gempak.GempakParameter) $r26;

        $r28 = virtualinvoke r27.<ucar.nc2.iosp.gempak.GempakParameter: java.lang.String getName()>();

        $r29 = virtualinvoke $r5.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r28);

        if $r29 == null goto label35;

        $f0 = r62[i10];

        virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.ByteBuffer putFloat(float)>($f0);

     label35:
        i10 = i10 + 1;

        goto label34;

     label36:
        virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(0);

     label37:
        $i11 = virtualinvoke $r11.<ucar.ma2.Range: int stride()>();

        i8 = i8 + $i11;

        goto label13;

     label38:
        return r53;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.io.PrintStream $r6;
        ucar.unidata.io.RandomAccessFile $r1;
        java.lang.String[] r2;
        ucar.nc2.iosp.gempak.GempakSurfaceIOSP$MakeNetcdfFile $r4;
        ucar.nc2.iosp.gempak.GempakSurfaceIOSP $r0;
        int $i0;
        java.lang.String $r3, $r5, $r7;

        r2 := @parameter0: java.lang.String[];

        $r0 = new ucar.nc2.iosp.gempak.GempakSurfaceIOSP;

        specialinvoke $r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: void <init>()>();

        $r1 = new ucar.unidata.io.RandomAccessFile;

        $r3 = r2[0];

        specialinvoke $r1.<ucar.unidata.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String,int)>($r3, "r", 2048);

        $r4 = new ucar.nc2.iosp.gempak.GempakSurfaceIOSP$MakeNetcdfFile;

        $r5 = r2[0];

        specialinvoke $r4.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP$MakeNetcdfFile: void <init>(ucar.nc2.iosp.IOServiceProvider,ucar.unidata.io.RandomAccessFile,java.lang.String,ucar.nc2.util.CancelTask)>($r0, $r1, $r5, null);

        $i0 = lengthof r2;

        if $i0 <= 1 goto label1;

        $r7 = r2[1];

        staticinvoke <ucar.nc2.FileWriter: ucar.nc2.NetcdfFile writeToFile(ucar.nc2.NetcdfFile,java.lang.String)>($r4, $r7);

        goto label2;

     label1:
        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.Object)>($r4);

     label2:
        return;
    }

    protected void fillNCFile() throws java.io.IOException
    {
        ucar.nc2.iosp.gempak.AbstractGempakStationFileReader $r1;
        ucar.nc2.iosp.gempak.GempakSurfaceIOSP r0;
        java.lang.String $r2;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSurfaceIOSP;

        $r1 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r2 = virtualinvoke $r1.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: java.lang.String getFileSubType()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("standard");

        if $z0 == 0 goto label1;

        specialinvoke r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: void buildStandardFile()>();

        goto label3;

     label1:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ship");

        if $z1 == 0 goto label2;

        specialinvoke r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: void buildShipFile()>();

        goto label3;

     label2:
        specialinvoke r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: void buildClimateFile()>();

     label3:
        return;
    }

    private void buildStandardFile()
    {
        java.util.Date r43;
        boolean $z0, $z1;
        ucar.ma2.DataType $r23;
        java.util.List $r2, $r16, $r19;
        ucar.nc2.Attribute $r25, $r26, $r32, $r34;
        ucar.ma2.ArrayDouble$D1 $r27, $r39;
        ucar.nc2.iosp.gempak.GempakSurfaceIOSP r0;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        ucar.nc2.NetcdfFile $r9, $r11, $r13, $r15, $r21, $r24, $r29, $r33, $r36, $r41;
        long $l3;
        ucar.nc2.Structure $r31;
        java.util.ArrayList $r30;
        ucar.nc2.iosp.gempak.AbstractGempakStationFileReader $r1, $r18;
        int $i0, $i1, $i2, i4;
        ucar.nc2.Variable $r22, r42;
        java.lang.String $r7, $r37;
        double $d0, $d1;
        java.util.Iterator $r17, $r28;
        ucar.nc2.Dimension $r8, $r10, $r12, $r14, $r20;
        ucar.nc2.constants.CF$FeatureType $r35;
        java.lang.Object $r38, $r40;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSurfaceIOSP;

        $r1 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r2 = virtualinvoke $r1.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: java.util.List getStations()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GEMPAKSIOSP: now have ");

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stations");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <visad.util.Trace: void msg(java.lang.String)>($r7);

        $r8 = new ucar.nc2.Dimension;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        specialinvoke $r8.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean)>("station", $i1, 1);

        $r9 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r9.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r8);

        $r11 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.NetcdfFile ncfile>;

        $r10 = <ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.Dimension DIM_LEN8>;

        virtualinvoke $r11.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r10);

        $r13 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.NetcdfFile ncfile>;

        $r12 = <ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.Dimension DIM_LEN4>;

        virtualinvoke $r13.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r12);

        $r15 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.NetcdfFile ncfile>;

        $r14 = <ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.Dimension DIM_LEN2>;

        virtualinvoke $r15.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r14);

        $r16 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: java.util.List makeStationVars(java.util.List,ucar.nc2.Dimension)>($r2, $r8);

        $r17 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r40 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r42 = (ucar.nc2.Variable) $r40;

        $r41 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r41.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, r42);

        goto label1;

     label2:
        $r18 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r19 = virtualinvoke $r18.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: java.util.List getDates()>();

        $i2 = interfaceinvoke $r19.<java.util.List: int size()>();

        $r20 = new ucar.nc2.Dimension;

        specialinvoke $r20.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean)>("time", $i2, 1);

        $r21 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r21.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r20);

        $r22 = new ucar.nc2.Variable;

        $r24 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.NetcdfFile ncfile>;

        $r23 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        specialinvoke $r22.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String)>($r24, null, null, "time", $r23, "time");

        $r25 = new ucar.nc2.Attribute;

        specialinvoke $r25.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "seconds since 1970-01-01 00:00:00");

        virtualinvoke $r22.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r25);

        $r26 = new ucar.nc2.Attribute;

        specialinvoke $r26.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "time");

        virtualinvoke $r22.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r26);

        $r27 = new ucar.ma2.ArrayDouble$D1;

        specialinvoke $r27.<ucar.ma2.ArrayDouble$D1: void <init>(int)>($i2);

        i4 = 0;

        $r28 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r28.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r38 = interfaceinvoke $r28.<java.util.Iterator: java.lang.Object next()>();

        r43 = (java.util.Date) $r38;

        $r39 = (ucar.ma2.ArrayDouble$D1) $r27;

        $l3 = virtualinvoke r43.<java.util.Date: long getTime()>();

        $d0 = (double) $l3;

        $d1 = $d0 / 1000.0;

        virtualinvoke $r39.<ucar.ma2.ArrayDouble$D1: void set(int,double)>(i4, $d1);

        i4 = i4 + 1;

        goto label3;

     label4:
        virtualinvoke $r22.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r27, 0);

        $r29 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r29.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r22);

        $r30 = new java.util.ArrayList;

        specialinvoke $r30.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r30.<java.util.List: boolean add(java.lang.Object)>($r8);

        interfaceinvoke $r30.<java.util.List: boolean add(java.lang.Object)>($r20);

        $r31 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.Structure makeStructure(java.lang.String,java.util.List,boolean)>("SFDT", $r30, 1);

        if $r31 != null goto label5;

        return;

     label5:
        $r32 = new ucar.nc2.Attribute;

        specialinvoke $r32.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("coordinates", "time SLAT SLON SELV");

        virtualinvoke $r31.<ucar.nc2.Structure: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r32);

        $r33 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r33.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r31);

        $r36 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.NetcdfFile ncfile>;

        $r34 = new ucar.nc2.Attribute;

        $r35 = <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType timeSeries>;

        $r37 = virtualinvoke $r35.<ucar.nc2.constants.CF$FeatureType: java.lang.String toString()>();

        specialinvoke $r34.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("CF:featureType", $r37);

        virtualinvoke $r36.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r34);

        return;
    }

    private void buildShipFile()
    {
        boolean $z0, $z1, $z2, $z3, z4;
        ucar.ma2.DataType $r12;
        java.util.List $r2, $r22, $r24;
        ucar.nc2.Attribute $r14, $r15, $r30, $r32;
        ucar.nc2.iosp.gempak.GempakSurfaceIOSP r0;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r36, $r37, $r38;
        ucar.nc2.NetcdfFile $r9, $r13, $r17, $r19, $r21, $r26, $r31, $r34;
        ucar.nc2.Structure $r25;
        java.util.ArrayList $r10;
        ucar.nc2.iosp.gempak.GempakParameter r44;
        ucar.nc2.iosp.gempak.AbstractGempakStationFileReader $r1, $r23;
        int $i0;
        ucar.nc2.Variable $r11, $r29, $r40, r43;
        java.lang.String $r7, $r35, $r42, r45;
        java.util.Iterator $r27, $r28;
        ucar.nc2.Dimension $r8, $r16, $r18, $r20;
        ucar.nc2.constants.CF$FeatureType $r33;
        java.lang.Object $r39, $r41;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSurfaceIOSP;

        $r1 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r2 = virtualinvoke $r1.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: java.util.List getStations()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GEMPAKSIOSP: now have ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stations");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <visad.util.Trace: void msg(java.lang.String)>($r7);

        $r8 = new ucar.nc2.Dimension;

        if $i0 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        specialinvoke $r8.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean,boolean,boolean)>("record", $i0, 1, $z3, 0);

        $r9 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r9.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r8);

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>(1);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r11 = new ucar.nc2.Variable;

        $r13 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.NetcdfFile ncfile>;

        $r12 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        specialinvoke $r11.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String)>($r13, null, null, "time", $r12, null);

        $r14 = new ucar.nc2.Attribute;

        specialinvoke $r14.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "seconds since 1970-01-01 00:00:00");

        virtualinvoke $r11.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r14);

        $r15 = new ucar.nc2.Attribute;

        specialinvoke $r15.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "time");

        virtualinvoke $r11.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r15);

        $r17 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.NetcdfFile ncfile>;

        $r16 = <ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.Dimension DIM_LEN8>;

        virtualinvoke $r17.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r16);

        $r19 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.NetcdfFile ncfile>;

        $r18 = <ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.Dimension DIM_LEN4>;

        virtualinvoke $r19.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r18);

        $r21 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.NetcdfFile ncfile>;

        $r20 = <ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.Dimension DIM_LEN2>;

        virtualinvoke $r21.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r20);

        $r22 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: java.util.List makeStationVars(java.util.List,ucar.nc2.Dimension)>($r2, null);

        $r23 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r24 = virtualinvoke $r23.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: java.util.List getParameters(java.lang.String)>("SFDT");

        if $r24 != null goto label3;

        return;

     label3:
        $r25 = new ucar.nc2.Structure;

        $r26 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.NetcdfFile ncfile>;

        specialinvoke $r25.<ucar.nc2.Structure: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>($r26, null, null, "Obs");

        virtualinvoke $r25.<ucar.nc2.Structure: void setDimensions(java.util.List)>($r10);

        z4 = 0;

        $r27 = interfaceinvoke $r22.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r41 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        r43 = (ucar.nc2.Variable) $r41;

        $r42 = virtualinvoke r43.<ucar.nc2.Variable: java.lang.String getName()>();

        $z2 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>("SELV");

        if $z2 == 0 goto label5;

        z4 = 1;

     label5:
        virtualinvoke $r25.<ucar.nc2.Structure: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>(r43);

        goto label4;

     label6:
        virtualinvoke $r25.<ucar.nc2.Structure: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r11);

        $r28 = interfaceinvoke $r24.<java.util.List: java.util.Iterator iterator()>();

     label7:
        $z1 = interfaceinvoke $r28.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r39 = interfaceinvoke $r28.<java.util.Iterator: java.lang.Object next()>();

        r44 = (ucar.nc2.iosp.gempak.GempakParameter) $r39;

        $r40 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.Variable makeParamVariable(ucar.nc2.iosp.gempak.GempakParameter,java.util.List)>(r44, null);

        virtualinvoke $r25.<ucar.nc2.Structure: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r40);

        goto label7;

     label8:
        $r29 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.Variable makeMissingVariable()>();

        virtualinvoke $r25.<ucar.nc2.Structure: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r29);

        r45 = "Obs.time Obs.SLAT Obs.SLON";

        if z4 == 0 goto label9;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Obs.time Obs.SLAT Obs.SLON");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Obs.SELV");

        r45 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

     label9:
        $r30 = new ucar.nc2.Attribute;

        specialinvoke $r30.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("coordinates", r45);

        virtualinvoke $r25.<ucar.nc2.Structure: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r30);

        $r31 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r31.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r25);

        $r34 = r0.<ucar.nc2.iosp.gempak.GempakSurfaceIOSP: ucar.nc2.NetcdfFile ncfile>;

        $r32 = new ucar.nc2.Attribute;

        $r33 = <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType point>;

        $r35 = virtualinvoke $r33.<ucar.nc2.constants.CF$FeatureType: java.lang.String toString()>();

        specialinvoke $r32.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("CF:featureType", $r35);

        virtualinvoke $r34.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r32);

        return;
    }

    private void buildClimateFile()
    {
        ucar.nc2.iosp.gempak.GempakSurfaceIOSP r0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSurfaceIOSP;

        return;
    }
}
