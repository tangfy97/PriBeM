public class org.waveprotocol.wave.model.waveref.WaverefEncoder extends java.lang.Object
{
    private final org.waveprotocol.wave.model.waveref.WaverefEncoder$PercentEncoderDecoder encoderDecoder;

    public void <init>(org.waveprotocol.wave.model.waveref.WaverefEncoder$PercentEncoderDecoder)
    {
        org.waveprotocol.wave.model.waveref.WaverefEncoder r0;
        org.waveprotocol.wave.model.waveref.WaverefEncoder$PercentEncoderDecoder r1;

        r0 := @this: org.waveprotocol.wave.model.waveref.WaverefEncoder;

        r1 := @parameter0: org.waveprotocol.wave.model.waveref.WaverefEncoder$PercentEncoderDecoder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.waveref.WaverefEncoder: org.waveprotocol.wave.model.waveref.WaverefEncoder$PercentEncoderDecoder encoderDecoder> = r1;

        return;
    }

    public java.lang.String encodeToUriPathSegment(org.waveprotocol.wave.model.waveref.WaveRef)
    {
        org.waveprotocol.wave.model.waveref.WaverefEncoder r0;
        org.waveprotocol.wave.model.waveref.WaveRef r1;
        java.lang.String $r3;
        org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType $r2;

        r0 := @this: org.waveprotocol.wave.model.waveref.WaverefEncoder;

        r1 := @parameter0: org.waveprotocol.wave.model.waveref.WaveRef;

        $r2 = <org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType: org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType PATH>;

        $r3 = specialinvoke r0.<org.waveprotocol.wave.model.waveref.WaverefEncoder: java.lang.String encode(org.waveprotocol.wave.model.waveref.WaveRef,org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType)>(r1, $r2);

        return $r3;
    }

    public java.lang.String encodeToUriQueryString(org.waveprotocol.wave.model.waveref.WaveRef)
    {
        org.waveprotocol.wave.model.waveref.WaverefEncoder r0;
        org.waveprotocol.wave.model.waveref.WaveRef r1;
        java.lang.String $r3;
        org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType $r2;

        r0 := @this: org.waveprotocol.wave.model.waveref.WaverefEncoder;

        r1 := @parameter0: org.waveprotocol.wave.model.waveref.WaveRef;

        $r2 = <org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType: org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType QUERY>;

        $r3 = specialinvoke r0.<org.waveprotocol.wave.model.waveref.WaverefEncoder: java.lang.String encode(org.waveprotocol.wave.model.waveref.WaveRef,org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType)>(r1, $r2);

        return $r3;
    }

    public java.lang.String encodeToUriPathSegment(java.lang.String)
    {
        org.waveprotocol.wave.model.waveref.WaverefEncoder r0;
        java.lang.String r1, $r3;
        org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType $r2;

        r0 := @this: org.waveprotocol.wave.model.waveref.WaverefEncoder;

        r1 := @parameter0: java.lang.String;

        $r2 = <org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType: org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType PATH>;

        $r3 = specialinvoke r0.<org.waveprotocol.wave.model.waveref.WaverefEncoder: java.lang.String encode(java.lang.String,org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType)>(r1, $r2);

        return $r3;
    }

    public java.lang.String encodeToUriQueryString(java.lang.String)
    {
        org.waveprotocol.wave.model.waveref.WaverefEncoder r0;
        java.lang.String r1, $r3;
        org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType $r2;

        r0 := @this: org.waveprotocol.wave.model.waveref.WaverefEncoder;

        r1 := @parameter0: java.lang.String;

        $r2 = <org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType: org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType QUERY>;

        $r3 = specialinvoke r0.<org.waveprotocol.wave.model.waveref.WaverefEncoder: java.lang.String encode(java.lang.String,org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType)>(r1, $r2);

        return $r3;
    }

    private java.lang.String encode(org.waveprotocol.wave.model.waveref.WaveRef, org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType)
    {
        org.waveprotocol.wave.model.waveref.WaveRef r2;
        org.waveprotocol.wave.model.id.WaveletId $r15, $r20, $r24;
        org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType r5;
        java.lang.String $r4, $r6, $r9, $r10, $r11, $r13, $r14, $r16, $r18, $r21, $r22, $r25, $r26;
        boolean $z0, $z1, $z2;
        org.waveprotocol.wave.model.id.WaveId $r3, $r8, $r17;
        org.waveprotocol.wave.model.waveref.WaverefEncoder r1;
        java.lang.StringBuilder $r0, $r7, $r12, $r19, $r23;

        r1 := @this: org.waveprotocol.wave.model.waveref.WaverefEncoder;

        r2 := @parameter0: org.waveprotocol.wave.model.waveref.WaveRef;

        r5 := @parameter1: org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType;

        $r0 = new java.lang.StringBuilder;

        $r3 = virtualinvoke r2.<org.waveprotocol.wave.model.waveref.WaveRef: org.waveprotocol.wave.model.id.WaveId getWaveId()>();

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.model.id.WaveId: java.lang.String getDomain()>();

        $r6 = specialinvoke r1.<org.waveprotocol.wave.model.waveref.WaverefEncoder: java.lang.String encode(java.lang.String,org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType)>($r4, r5);

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r8 = virtualinvoke r2.<org.waveprotocol.wave.model.waveref.WaveRef: org.waveprotocol.wave.model.id.WaveId getWaveId()>();

        $r9 = virtualinvoke $r8.<org.waveprotocol.wave.model.id.WaveId: java.lang.String getId()>();

        $r10 = specialinvoke r1.<org.waveprotocol.wave.model.waveref.WaverefEncoder: java.lang.String encode(java.lang.String,org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType)>($r9, r5);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $z0 = virtualinvoke r2.<org.waveprotocol.wave.model.waveref.WaveRef: boolean hasWaveletId()>();

        if $z0 == 0 goto label3;

        $r15 = virtualinvoke r2.<org.waveprotocol.wave.model.waveref.WaveRef: org.waveprotocol.wave.model.id.WaveletId getWaveletId()>();

        $r16 = virtualinvoke $r15.<org.waveprotocol.wave.model.id.WaveletId: java.lang.String getDomain()>();

        $r17 = virtualinvoke r2.<org.waveprotocol.wave.model.waveref.WaveRef: org.waveprotocol.wave.model.id.WaveId getWaveId()>();

        $r18 = virtualinvoke $r17.<org.waveprotocol.wave.model.id.WaveId: java.lang.String getDomain()>();

        $z1 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z1 == 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/~");

        goto label2;

     label1:
        $r19 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r20 = virtualinvoke r2.<org.waveprotocol.wave.model.waveref.WaveRef: org.waveprotocol.wave.model.id.WaveletId getWaveletId()>();

        $r21 = virtualinvoke $r20.<org.waveprotocol.wave.model.id.WaveletId: java.lang.String getDomain()>();

        $r22 = specialinvoke r1.<org.waveprotocol.wave.model.waveref.WaverefEncoder: java.lang.String encode(java.lang.String,org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType)>($r21, r5);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

     label2:
        $r23 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r24 = virtualinvoke r2.<org.waveprotocol.wave.model.waveref.WaveRef: org.waveprotocol.wave.model.id.WaveletId getWaveletId()>();

        $r25 = virtualinvoke $r24.<org.waveprotocol.wave.model.id.WaveletId: java.lang.String getId()>();

        $r26 = specialinvoke r1.<org.waveprotocol.wave.model.waveref.WaverefEncoder: java.lang.String encode(java.lang.String,org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType)>($r25, r5);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

     label3:
        $z2 = virtualinvoke r2.<org.waveprotocol.wave.model.waveref.WaveRef: boolean hasDocumentId()>();

        if $z2 == 0 goto label4;

        $r12 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r13 = virtualinvoke r2.<org.waveprotocol.wave.model.waveref.WaveRef: java.lang.String getDocumentId()>();

        $r14 = specialinvoke r1.<org.waveprotocol.wave.model.waveref.WaverefEncoder: java.lang.String encode(java.lang.String,org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType)>($r13, r5);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

     label4:
        $r11 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    private java.lang.String encode(java.lang.String, org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType)
    {
        org.waveprotocol.wave.model.waveref.WaverefEncoder r2;
        org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType r0, $r1;
        org.waveprotocol.wave.model.waveref.WaverefEncoder$PercentEncoderDecoder $r4, $r6;
        java.lang.String r3, $r5, $r7;

        r2 := @this: org.waveprotocol.wave.model.waveref.WaverefEncoder;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType;

        $r1 = <org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType: org.waveprotocol.wave.model.waveref.WaverefEncoder$EscaperType PATH>;

        if r0 != $r1 goto label1;

        $r6 = r2.<org.waveprotocol.wave.model.waveref.WaverefEncoder: org.waveprotocol.wave.model.waveref.WaverefEncoder$PercentEncoderDecoder encoderDecoder>;

        $r7 = interfaceinvoke $r6.<org.waveprotocol.wave.model.waveref.WaverefEncoder$PercentEncoderDecoder: java.lang.String pathEncode(java.lang.String)>(r3);

        return $r7;

     label1:
        $r4 = r2.<org.waveprotocol.wave.model.waveref.WaverefEncoder: org.waveprotocol.wave.model.waveref.WaverefEncoder$PercentEncoderDecoder encoderDecoder>;

        $r5 = interfaceinvoke $r4.<org.waveprotocol.wave.model.waveref.WaverefEncoder$PercentEncoderDecoder: java.lang.String queryEncode(java.lang.String)>(r3);

        return $r5;
    }

    public org.waveprotocol.wave.model.waveref.WaveRef decodeWaveRefFromPath(java.lang.String) throws org.waveprotocol.wave.model.waveref.InvalidWaveRefException
    {
        org.waveprotocol.wave.model.waveref.WaveRef $r21, $r22, $r23;
        boolean $z0;
        org.waveprotocol.wave.model.id.WaveId $r12;
        org.waveprotocol.wave.model.waveref.InvalidWaveRefException $r2, $r4, $r14, $r25, $r27;
        java.lang.StringBuilder $r28, $r29, $r31;
        java.lang.String[] $r1;
        org.waveprotocol.wave.model.id.WaveletId $r20;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String r0, $r3, $r5, $r7, $r8, $r9, $r10, $r11, $r13, $r15, $r16, $r17, $r18, $r19, $r30, $r32, r33, r34;
        org.waveprotocol.wave.model.waveref.WaverefEncoder r6;
        java.lang.IllegalArgumentException $r24, $r26;

        r6 := @this: org.waveprotocol.wave.model.waveref.WaverefEncoder;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        $i0 = lengthof $r1;

        if $i0 < 2 goto label01;

        $i1 = lengthof $r1;

        if $i1 != 3 goto label02;

     label01:
        $r2 = new org.waveprotocol.wave.model.waveref.InvalidWaveRefException;

        specialinvoke $r2.<org.waveprotocol.wave.model.waveref.InvalidWaveRefException: void <init>(java.lang.String,java.lang.String)>(r0, "Invalid number of tokens in path given to decodeWaveRefFromPath");

        throw $r2;

     label02:
        $r3 = $r1[0];

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i2 == 0 goto label03;

        $r5 = $r1[1];

        $i3 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i3 != 0 goto label04;

     label03:
        $r4 = new org.waveprotocol.wave.model.waveref.InvalidWaveRefException;

        specialinvoke $r4.<org.waveprotocol.wave.model.waveref.InvalidWaveRefException: void <init>(java.lang.String,java.lang.String)>(r0, "The wave domain and thewave Id must not be empty.");

        throw $r4;

     label04:
        $r7 = $r1[0];

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase()>();

        $r9 = virtualinvoke r6.<org.waveprotocol.wave.model.waveref.WaverefEncoder: java.lang.String decode(java.lang.String)>($r8);

        $r10 = $r1[1];

        $r11 = virtualinvoke r6.<org.waveprotocol.wave.model.waveref.WaverefEncoder: java.lang.String decode(java.lang.String)>($r10);

     label05:
        $r12 = staticinvoke <org.waveprotocol.wave.model.id.WaveId: org.waveprotocol.wave.model.id.WaveId of(java.lang.String,java.lang.String)>($r9, $r11);

     label06:
        goto label08;

     label07:
        $r26 := @caughtexception;

        $r27 = new org.waveprotocol.wave.model.waveref.InvalidWaveRefException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid WaveID:");

        $r30 = virtualinvoke $r26.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<org.waveprotocol.wave.model.waveref.InvalidWaveRefException: void <init>(java.lang.String,java.lang.String)>(r0, $r32);

        throw $r27;

     label08:
        $i4 = lengthof $r1;

        if $i4 != 2 goto label09;

        $r23 = staticinvoke <org.waveprotocol.wave.model.waveref.WaveRef: org.waveprotocol.wave.model.waveref.WaveRef of(org.waveprotocol.wave.model.id.WaveId)>($r12);

        return $r23;

     label09:
        $r13 = $r1[2];

        $i5 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i5 == 0 goto label10;

        $r15 = $r1[3];

        $i6 = virtualinvoke $r15.<java.lang.String: int length()>();

        if $i6 != 0 goto label11;

     label10:
        $r14 = new org.waveprotocol.wave.model.waveref.InvalidWaveRefException;

        specialinvoke $r14.<org.waveprotocol.wave.model.waveref.InvalidWaveRefException: void <init>(java.lang.String,java.lang.String)>(r0, "The wavelet domain and thewavelet Id must not be empty.");

        throw $r14;

     label11:
        $r16 = $r1[2];

        $r17 = virtualinvoke r6.<org.waveprotocol.wave.model.waveref.WaverefEncoder: java.lang.String decode(java.lang.String)>($r16);

        r33 = $r17;

        $z0 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("~");

        if $z0 == 0 goto label12;

        r33 = $r9;

     label12:
        $r18 = $r1[3];

        $r19 = virtualinvoke r6.<org.waveprotocol.wave.model.waveref.WaverefEncoder: java.lang.String decode(java.lang.String)>($r18);

     label13:
        $r20 = staticinvoke <org.waveprotocol.wave.model.id.WaveletId: org.waveprotocol.wave.model.id.WaveletId of(java.lang.String,java.lang.String)>(r33, $r19);

     label14:
        goto label16;

     label15:
        $r24 := @caughtexception;

        $r25 = new org.waveprotocol.wave.model.waveref.InvalidWaveRefException;

        specialinvoke $r25.<org.waveprotocol.wave.model.waveref.InvalidWaveRefException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>(r0, "Invalid WaveletID", $r24);

        throw $r25;

     label16:
        $i7 = lengthof $r1;

        if $i7 != 4 goto label17;

        $r22 = staticinvoke <org.waveprotocol.wave.model.waveref.WaveRef: org.waveprotocol.wave.model.waveref.WaveRef of(org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId)>($r12, $r20);

        return $r22;

     label17:
        r34 = $r1[4];

        $r21 = staticinvoke <org.waveprotocol.wave.model.waveref.WaveRef: org.waveprotocol.wave.model.waveref.WaveRef of(org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId,java.lang.String)>($r12, $r20, r34);

        return $r21;

        catch java.lang.IllegalArgumentException from label05 to label06 with label07;
        catch java.lang.IllegalArgumentException from label13 to label14 with label15;
    }

    java.lang.String decode(java.lang.String) throws org.waveprotocol.wave.model.waveref.InvalidWaveRefException
    {
        org.waveprotocol.wave.model.waveref.WaverefEncoder r0;
        org.waveprotocol.wave.model.waveref.InvalidWaveRefException $r5;
        java.lang.String r1, $r3;
        java.lang.IllegalArgumentException $r4;
        org.waveprotocol.wave.model.waveref.WaverefEncoder$PercentEncoderDecoder $r2;

        r0 := @this: org.waveprotocol.wave.model.waveref.WaverefEncoder;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<org.waveprotocol.wave.model.waveref.WaverefEncoder: org.waveprotocol.wave.model.waveref.WaverefEncoder$PercentEncoderDecoder encoderDecoder>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.waveref.WaverefEncoder$PercentEncoderDecoder: java.lang.String decode(java.lang.String)>(r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.waveprotocol.wave.model.waveref.InvalidWaveRefException;

        specialinvoke $r5.<org.waveprotocol.wave.model.waveref.InvalidWaveRefException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>(r1, "Failed to decode", $r4);

        throw $r5;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }
}
