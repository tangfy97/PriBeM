public class com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleSyntaxException extends com.hp.hpl.jena.reasoner.ReasonerException
{

    public void <init>(java.lang.String, com.hp.hpl.jena.reasoner.rulesys.Rule)
    {
        com.hp.hpl.jena.reasoner.rulesys.Rule r3;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleSyntaxException r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r8;
        java.lang.String $r4, r7, $r9;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleSyntaxException;

        r7 := @parameter0: java.lang.String;

        r3 := @parameter1: com.hp.hpl.jena.reasoner.rulesys.Rule;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Syntax error in backward rule: ");

        $r4 = virtualinvoke r3.<com.hp.hpl.jena.reasoner.rulesys.Rule: java.lang.String toShortString()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.hp.hpl.jena.reasoner.ReasonerException: void <init>(java.lang.String)>($r9);

        return;
    }

    public void <init>(java.lang.String, com.hp.hpl.jena.reasoner.rulesys.Rule, java.lang.Throwable)
    {
        java.lang.Throwable r10;
        com.hp.hpl.jena.reasoner.rulesys.Rule r3;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleSyntaxException r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r8;
        java.lang.String $r4, r7, $r9;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleSyntaxException;

        r7 := @parameter0: java.lang.String;

        r3 := @parameter1: com.hp.hpl.jena.reasoner.rulesys.Rule;

        r10 := @parameter2: java.lang.Throwable;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Syntax error in backward rule: ");

        $r4 = virtualinvoke r3.<com.hp.hpl.jena.reasoner.rulesys.Rule: java.lang.String toShortString()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.hp.hpl.jena.reasoner.ReasonerException: void <init>(java.lang.String,java.lang.Throwable)>($r9, r10);

        return;
    }
}
