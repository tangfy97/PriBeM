public final class org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter extends org.apache.lucene.codecs.StoredFieldsWriter
{
    static final int MAX_DOCUMENTS_PER_CHUNK;
    static final int STRING;
    static final int BYTE_ARR;
    static final int NUMERIC_INT;
    static final int NUMERIC_FLOAT;
    static final int NUMERIC_LONG;
    static final int NUMERIC_DOUBLE;
    static final int TYPE_BITS;
    static final int TYPE_MASK;
    static final java.lang.String CODEC_SFX_IDX;
    static final java.lang.String CODEC_SFX_DAT;
    static final int VERSION_START;
    static final int VERSION_CURRENT;
    private final org.apache.lucene.store.Directory directory;
    private final java.lang.String segment;
    private final java.lang.String segmentSuffix;
    private org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter indexWriter;
    private org.apache.lucene.store.IndexOutput fieldsStream;
    private final org.apache.lucene.codecs.compressing.CompressionMode compressionMode;
    private final org.apache.lucene.codecs.compressing.Compressor compressor;
    private final int chunkSize;
    private final org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput bufferedDocs;
    private int[] numStoredFields;
    private int[] endOffsets;
    private int docBase;
    private int numBufferedDocs;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.store.Directory, org.apache.lucene.index.SegmentInfo, java.lang.String, org.apache.lucene.store.IOContext, java.lang.String, org.apache.lucene.codecs.compressing.CompressionMode, int) throws java.io.IOException
    {
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter r0;
        byte $b4, $b8;
        int[] $r8, $r9;
        org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput $r7;
        org.apache.lucene.store.Directory r1;
        java.io.Closeable[] $r29, $r35;
        org.apache.lucene.codecs.compressing.CompressionMode r5;
        org.apache.lucene.store.IOContext r12;
        boolean $z0, $z1, $z2;
        org.apache.lucene.index.SegmentInfo r2;
        java.lang.StringBuilder $r17, $r19, $r20, $r22, $r23, $r24;
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter $r27;
        java.lang.Throwable $r34;
        long $l2, $l3, $l6, $l7;
        java.lang.AssertionError $r30, $r32, $r33;
        int i0, $i1, $i5;
        java.lang.String $r3, r4, $r10, $r11, $r14, $r15, r18, $r21, $r25;
        org.apache.lucene.store.IndexOutput $r13, $r16, $r26, $r28, $r31, r36;
        org.apache.lucene.codecs.compressing.Compressor $r6;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter;

        r1 := @parameter0: org.apache.lucene.store.Directory;

        r2 := @parameter1: org.apache.lucene.index.SegmentInfo;

        r4 := @parameter2: java.lang.String;

        r12 := @parameter3: org.apache.lucene.store.IOContext;

        r18 := @parameter4: java.lang.String;

        r5 := @parameter5: org.apache.lucene.codecs.compressing.CompressionMode;

        i0 := @parameter6: int;

        specialinvoke r0.<org.apache.lucene.codecs.StoredFieldsWriter: void <init>()>();

        $z0 = <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r33 = new java.lang.AssertionError;

        specialinvoke $r33.<java.lang.AssertionError: void <init>()>();

        throw $r33;

     label1:
        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.store.Directory directory> = r1;

        $r3 = r2.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: java.lang.String segment> = $r3;

        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: java.lang.String segmentSuffix> = r4;

        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.CompressionMode compressionMode> = r5;

        $r6 = virtualinvoke r5.<org.apache.lucene.codecs.compressing.CompressionMode: org.apache.lucene.codecs.compressing.Compressor newCompressor()>();

        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.Compressor compressor> = $r6;

        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int chunkSize> = i0;

        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int docBase> = 0;

        $r7 = new org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput;

        specialinvoke $r7.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: void <init>(int)>(i0);

        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput bufferedDocs> = $r7;

        $r8 = newarray (int)[16];

        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int[] numStoredFields> = $r8;

        $r9 = newarray (int)[16];

        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int[] endOffsets> = $r9;

        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int numBufferedDocs> = 0;

        $r10 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: java.lang.String segment>;

        $r11 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r10, r4, "fdx");

        $r13 = virtualinvoke r1.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexOutput createOutput(java.lang.String,org.apache.lucene.store.IOContext)>($r11, r12);

        r36 = $r13;

     label2:
        $r14 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: java.lang.String segment>;

        $r15 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r14, r4, "fdt");

        $r16 = virtualinvoke r1.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexOutput createOutput(java.lang.String,org.apache.lucene.store.IOContext)>($r15, r12);

        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream> = $r16;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.lucene.codecs.CodecUtil: void writeHeader(org.apache.lucene.store.DataOutput,java.lang.String,int)>($r13, $r21, 0);

        $r26 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: void writeHeader(org.apache.lucene.store.DataOutput,java.lang.String,int)>($r26, $r25, 0);

        $z1 = <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $i5 = staticinvoke <org.apache.lucene.codecs.CodecUtil: int headerLength(java.lang.String)>($r25);

        $l6 = (long) $i5;

        $r31 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        $l7 = virtualinvoke $r31.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        $b8 = $l6 cmp $l7;

        if $b8 == 0 goto label3;

        $r32 = new java.lang.AssertionError;

        specialinvoke $r32.<java.lang.AssertionError: void <init>()>();

        throw $r32;

     label3:
        $z2 = <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: boolean $assertionsDisabled>;

        if $z2 != 0 goto label4;

        $i1 = staticinvoke <org.apache.lucene.codecs.CodecUtil: int headerLength(java.lang.String)>($r21);

        $l2 = (long) $i1;

        $l3 = virtualinvoke $r13.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        $b4 = $l2 cmp $l3;

        if $b4 == 0 goto label4;

        $r30 = new java.lang.AssertionError;

        specialinvoke $r30.<java.lang.AssertionError: void <init>()>();

        throw $r30;

     label4:
        $r27 = new org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter;

        specialinvoke $r27.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter: void <init>(org.apache.lucene.store.IndexOutput)>($r13);

        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter indexWriter> = $r27;

        r36 = null;

        $r28 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        virtualinvoke $r28.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>(1);

     label5:
        if 1 != 0 goto label9;

        $r29 = newarray (java.io.Closeable)[1];

        $r29[0] = null;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r29);

        virtualinvoke r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: void abort()>();

        goto label9;

     label6:
        $r34 := @caughtexception;

     label7:
        if 0 != 0 goto label8;

        $r35 = newarray (java.io.Closeable)[1];

        $r35[0] = r36;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r35);

        virtualinvoke r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: void abort()>();

     label8:
        throw $r34;

     label9:
        return;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void close() throws java.io.IOException
    {
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter $r3;
        java.lang.Throwable $r4;
        java.io.Closeable[] $r0;
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter r1;
        org.apache.lucene.store.IndexOutput $r2;

        r1 := @this: org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter;

     label1:
        $r0 = newarray (java.io.Closeable)[2];

        $r2 = r1.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        $r0[0] = $r2;

        $r3 = r1.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter indexWriter>;

        $r0[1] = $r3;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r0);

     label2:
        r1.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream> = null;

        r1.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter indexWriter> = null;

        goto label5;

     label3:
        $r4 := @caughtexception;

     label4:
        r1.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream> = null;

        r1.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter indexWriter> = null;

        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void startDocument(int) throws java.io.IOException
    {
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter r0;
        int[] $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter;

        i2 := @parameter0: int;

        $i1 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int numBufferedDocs>;

        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int[] numStoredFields>;

        $i0 = lengthof $r1;

        if $i1 != $i0 goto label1;

        $i6 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int numBufferedDocs>;

        $i7 = $i6 + 1;

        $i8 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>($i7, 4);

        $r3 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int[] numStoredFields>;

        $r4 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r3, $i8);

        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int[] numStoredFields> = $r4;

        $r5 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int[] endOffsets>;

        $r6 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r5, $i8);

        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int[] endOffsets> = $r6;

     label1:
        $r2 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int[] numStoredFields>;

        $i3 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int numBufferedDocs>;

        $r2[$i3] = i2;

        $i4 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int numBufferedDocs>;

        $i5 = $i4 + 1;

        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int numBufferedDocs> = $i5;

        return;
    }

    public void finishDocument() throws java.io.IOException
    {
        int[] $r2;
        org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput $r1;
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter r0;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter;

        $r2 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int[] endOffsets>;

        $i0 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int numBufferedDocs>;

        $i2 = $i0 - 1;

        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput bufferedDocs>;

        $i1 = $r1.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: int length>;

        $r2[$i2] = $i1;

        $z0 = specialinvoke r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: boolean triggerFlush()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: void flush()>();

     label1:
        return;
    }

    private static void saveInts(int[], int, org.apache.lucene.store.DataOutput) throws java.io.IOException
    {
        org.apache.lucene.store.DataOutput r0;
        long $l3, $l5, l11;
        java.lang.AssertionError $r4;
        int[] r3;
        int i0, $i1, $i2, $i4, $i6, $i7, $i8, $i9, i10, i12, i13;
        boolean $z0, z1;
        org.apache.lucene.util.packed.PackedInts$Format $r1;
        org.apache.lucene.util.packed.PackedInts$Writer $r2;

        r3 := @parameter0: int[];

        i0 := @parameter1: int;

        r0 := @parameter2: org.apache.lucene.store.DataOutput;

        $z0 = <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        if i0 > 0 goto label01;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label01:
        if i0 != 1 goto label02;

        $i9 = r3[0];

        virtualinvoke r0.<org.apache.lucene.store.DataOutput: void writeVInt(int)>($i9);

        goto label11;

     label02:
        z1 = 1;

        i10 = 1;

     label03:
        if i10 >= i0 goto label05;

        $i8 = r3[i10];

        $i7 = r3[0];

        if $i8 == $i7 goto label04;

        z1 = 0;

        goto label05;

     label04:
        i10 = i10 + 1;

        goto label03;

     label05:
        if z1 == 0 goto label06;

        virtualinvoke r0.<org.apache.lucene.store.DataOutput: void writeVInt(int)>(0);

        $i6 = r3[0];

        virtualinvoke r0.<org.apache.lucene.store.DataOutput: void writeVInt(int)>($i6);

        goto label11;

     label06:
        l11 = 0L;

        i12 = 0;

     label07:
        if i12 >= i0 goto label08;

        $i4 = r3[i12];

        $l5 = (long) $i4;

        l11 = l11 | $l5;

        i12 = i12 + 1;

        goto label07;

     label08:
        $i1 = staticinvoke <org.apache.lucene.util.packed.PackedInts: int bitsRequired(long)>(l11);

        virtualinvoke r0.<org.apache.lucene.store.DataOutput: void writeVInt(int)>($i1);

        $r1 = <org.apache.lucene.util.packed.PackedInts$Format: org.apache.lucene.util.packed.PackedInts$Format PACKED>;

        $r2 = staticinvoke <org.apache.lucene.util.packed.PackedInts: org.apache.lucene.util.packed.PackedInts$Writer getWriterNoHeader(org.apache.lucene.store.DataOutput,org.apache.lucene.util.packed.PackedInts$Format,int,int,int)>(r0, $r1, i0, $i1, 1);

        i13 = 0;

     label09:
        if i13 >= i0 goto label10;

        $i2 = r3[i13];

        $l3 = (long) $i2;

        virtualinvoke $r2.<org.apache.lucene.util.packed.PackedInts$Writer: void add(long)>($l3);

        i13 = i13 + 1;

        goto label09;

     label10:
        virtualinvoke $r2.<org.apache.lucene.util.packed.PackedInts$Writer: void finish()>();

     label11:
        return;
    }

    private void writeHeader(int, int, int[], int[]) throws java.io.IOException
    {
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter r0;
        int[] r3, r5;
        int i0, i1;
        org.apache.lucene.store.IndexOutput $r1, $r2, $r4, $r6;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r3 := @parameter2: int[];

        r5 := @parameter3: int[];

        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        virtualinvoke $r1.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>(i0);

        $r2 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        virtualinvoke $r2.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>(i1);

        $r4 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: void saveInts(int[],int,org.apache.lucene.store.DataOutput)>(r3, i1, $r4);

        $r6 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: void saveInts(int[],int,org.apache.lucene.store.DataOutput)>(r5, i1, $r6);

        return;
    }

    private boolean triggerFlush()
    {
        org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput $r1;
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter r0;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter;

        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput bufferedDocs>;

        $i1 = $r1.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: int length>;

        $i0 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int chunkSize>;

        if $i1 >= $i0 goto label1;

        $i2 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int numBufferedDocs>;

        if $i2 < 128 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private void flush() throws java.io.IOException
    {
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter $r2;
        byte[] $r8;
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter r0;
        long $l1;
        java.lang.AssertionError $r14;
        int[] r3, $r4, $r11, $r12;
        org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput $r5, $r6, $r10;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i16;
        org.apache.lucene.store.IndexOutput $r1, $r7;
        boolean $z0;
        org.apache.lucene.codecs.compressing.Compressor $r9;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter;

        $r2 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter indexWriter>;

        $i0 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int numBufferedDocs>;

        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        $l1 = virtualinvoke $r1.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        virtualinvoke $r2.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter: void writeIndex(int,long)>($i0, $l1);

        r3 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int[] endOffsets>;

        $i2 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int numBufferedDocs>;

        i14 = $i2 - 1;

     label1:
        if i14 <= 0 goto label3;

        $r11 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int[] endOffsets>;

        $i11 = $r11[i14];

        $r12 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int[] endOffsets>;

        $i9 = i14 - 1;

        $i10 = $r12[$i9];

        $i12 = $i11 - $i10;

        r3[i14] = $i12;

        $z0 = <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i13 = r3[i14];

        if $i13 >= 0 goto label2;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label2:
        $i16 = (int) -1;

        i14 = i14 + $i16;

        goto label1;

     label3:
        $i4 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int docBase>;

        $i3 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int numBufferedDocs>;

        $r4 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int[] numStoredFields>;

        specialinvoke r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: void writeHeader(int,int,int[],int[])>($i4, $i3, $r4, r3);

        $r9 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.Compressor compressor>;

        $r5 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput bufferedDocs>;

        $r8 = $r5.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: byte[] bytes>;

        $r6 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput bufferedDocs>;

        $i5 = $r6.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: int length>;

        $r7 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        virtualinvoke $r9.<org.apache.lucene.codecs.compressing.Compressor: void compress(byte[],int,int,org.apache.lucene.store.DataOutput)>($r8, 0, $i5, $r7);

        $i7 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int docBase>;

        $i6 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int numBufferedDocs>;

        $i8 = $i7 + $i6;

        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int docBase> = $i8;

        r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int numBufferedDocs> = 0;

        $r10 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput bufferedDocs>;

        $r10.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: int length> = 0;

        return;
    }

    public void writeField(org.apache.lucene.index.FieldInfo, org.apache.lucene.index.IndexableField) throws java.io.IOException
    {
        byte[] $r13;
        org.apache.lucene.index.IndexableField r0;
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter r5;
        byte b6;
        org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput $r7, $r8, $r9, $r10, $r12, $r14, $r30, $r31;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        org.apache.lucene.util.BytesRef $r2, r29;
        float $f0;
        java.lang.StringBuilder $r16, $r17, $r19, $r20, $r23, $r24, $r26;
        long $l0, $l2, $l8, $l10, $l11, $l12;
        java.lang.AssertionError $r6;
        int $i1, $i3, $i4, $i5, $i7, $i9, $i13;
        java.lang.String $r3, $r11, $r18, $r21, $r27, r28;
        java.lang.Number $r1;
        double $d0;
        java.lang.IllegalArgumentException $r15, $r22;
        org.apache.lucene.index.FieldInfo r4;
        java.lang.Class $r25;

        r5 := @this: org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter;

        r4 := @parameter0: org.apache.lucene.index.FieldInfo;

        r0 := @parameter1: org.apache.lucene.index.IndexableField;

        $r1 = interfaceinvoke r0.<org.apache.lucene.index.IndexableField: java.lang.Number numericValue()>();

        if $r1 == null goto label07;

        $z6 = $r1 instanceof java.lang.Byte;

        if $z6 != 0 goto label01;

        $z7 = $r1 instanceof java.lang.Short;

        if $z7 != 0 goto label01;

        $z8 = $r1 instanceof java.lang.Integer;

        if $z8 == 0 goto label02;

     label01:
        b6 = 2;

        goto label06;

     label02:
        $z9 = $r1 instanceof java.lang.Long;

        if $z9 == 0 goto label03;

        b6 = 4;

        goto label06;

     label03:
        $z10 = $r1 instanceof java.lang.Float;

        if $z10 == 0 goto label04;

        b6 = 3;

        goto label06;

     label04:
        $z11 = $r1 instanceof java.lang.Double;

        if $z11 == 0 goto label05;

        b6 = 5;

        goto label06;

     label05:
        $r22 = new java.lang.IllegalArgumentException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot store numeric type ");

        $r25 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r27);

        throw $r22;

     label06:
        r28 = null;

        r29 = null;

        goto label09;

     label07:
        $r2 = interfaceinvoke r0.<org.apache.lucene.index.IndexableField: org.apache.lucene.util.BytesRef binaryValue()>();

        r29 = $r2;

        if $r2 == null goto label08;

        b6 = 1;

        r28 = null;

        goto label09;

     label08:
        b6 = 0;

        $r3 = interfaceinvoke r0.<org.apache.lucene.index.IndexableField: java.lang.String stringValue()>();

        r28 = $r3;

        if $r3 != null goto label09;

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("field ");

        $r18 = interfaceinvoke r0.<org.apache.lucene.index.IndexableField: java.lang.String name()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is stored but does not have binaryValue, stringValue nor numericValue");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r15;

     label09:
        $i7 = r4.<org.apache.lucene.index.FieldInfo: int number>;

        $l8 = (long) $i7;

        $i9 = <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int TYPE_BITS>;

        $l10 = $l8 << $i9;

        $l11 = (long) b6;

        $l12 = $l10 | $l11;

        $r30 = r5.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput bufferedDocs>;

        virtualinvoke $r30.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: void writeVLong(long)>($l12);

        if r29 == null goto label10;

        $r12 = r5.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput bufferedDocs>;

        $i3 = r29.<org.apache.lucene.util.BytesRef: int length>;

        virtualinvoke $r12.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: void writeVInt(int)>($i3);

        $r14 = r5.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput bufferedDocs>;

        $r13 = r29.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i5 = r29.<org.apache.lucene.util.BytesRef: int offset>;

        $i4 = r29.<org.apache.lucene.util.BytesRef: int length>;

        virtualinvoke $r14.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: void writeBytes(byte[],int,int)>($r13, $i5, $i4);

        goto label17;

     label10:
        if r28 == null goto label11;

        $r10 = r5.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput bufferedDocs>;

        $r11 = interfaceinvoke r0.<org.apache.lucene.index.IndexableField: java.lang.String stringValue()>();

        virtualinvoke $r10.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: void writeString(java.lang.String)>($r11);

        goto label17;

     label11:
        $z0 = $r1 instanceof java.lang.Byte;

        if $z0 != 0 goto label12;

        $z1 = $r1 instanceof java.lang.Short;

        if $z1 != 0 goto label12;

        $z2 = $r1 instanceof java.lang.Integer;

        if $z2 == 0 goto label13;

     label12:
        $r31 = r5.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput bufferedDocs>;

        $i13 = virtualinvoke $r1.<java.lang.Number: int intValue()>();

        virtualinvoke $r31.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: void writeInt(int)>($i13);

        goto label17;

     label13:
        $z3 = $r1 instanceof java.lang.Long;

        if $z3 == 0 goto label14;

        $r9 = r5.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput bufferedDocs>;

        $l2 = virtualinvoke $r1.<java.lang.Number: long longValue()>();

        virtualinvoke $r9.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: void writeLong(long)>($l2);

        goto label17;

     label14:
        $z4 = $r1 instanceof java.lang.Float;

        if $z4 == 0 goto label15;

        $r8 = r5.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput bufferedDocs>;

        $f0 = virtualinvoke $r1.<java.lang.Number: float floatValue()>();

        $i1 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        virtualinvoke $r8.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: void writeInt(int)>($i1);

        goto label17;

     label15:
        $z5 = $r1 instanceof java.lang.Double;

        if $z5 == 0 goto label16;

        $r7 = r5.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput bufferedDocs>;

        $d0 = virtualinvoke $r1.<java.lang.Number: double doubleValue()>();

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        virtualinvoke $r7.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: void writeLong(long)>($l0);

        goto label17;

     label16:
        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>("Cannot get here");

        throw $r6;

     label17:
        return;
    }

    public void abort()
    {
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter r1;
        java.lang.String[] $r2;
        org.apache.lucene.store.Directory $r5;
        java.io.Closeable[] $r0;
        java.lang.String $r3, $r4, $r6, $r7, $r8, $r9;

        r1 := @this: org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter;

        $r0 = newarray (java.io.Closeable)[1];

        $r0[0] = r1;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r0);

        $r5 = r1.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.store.Directory directory>;

        $r2 = newarray (java.lang.String)[2];

        $r4 = r1.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: java.lang.String segment>;

        $r3 = r1.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: java.lang.String segmentSuffix>;

        $r6 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r4, $r3, "fdt");

        $r2[0] = $r6;

        $r8 = r1.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: java.lang.String segment>;

        $r7 = r1.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: java.lang.String segmentSuffix>;

        $r9 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r8, $r7, "fdx");

        $r2[1] = $r9;

        staticinvoke <org.apache.lucene.util.IOUtils: void deleteFilesIgnoringExceptions(org.apache.lucene.store.Directory,java.lang.String[])>($r5, $r2);

        return;
    }

    public void finish(org.apache.lucene.index.FieldInfos, int) throws java.io.IOException
    {
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter $r1;
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter r0;
        java.lang.AssertionError $r3, $r12;
        org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput $r2, $r11;
        int $i0, i1, $i2, $i3, $i4, $i5;
        java.lang.String $r10;
        org.apache.lucene.index.FieldInfos r13;
        boolean $z0, $z1;
        java.lang.RuntimeException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter;

        r13 := @parameter0: org.apache.lucene.index.FieldInfos;

        i1 := @parameter1: int;

        $i0 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int numBufferedDocs>;

        if $i0 <= 0 goto label1;

        specialinvoke r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: void flush()>();

        goto label2;

     label1:
        $z0 = <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r11 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput bufferedDocs>;

        $i4 = $r11.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: int length>;

        if $i4 == 0 goto label2;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label2:
        $i5 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int docBase>;

        if $i5 == i1 goto label3;

        $r4 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrote ");

        $i3 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int docBase>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" docs, finish called with numDocs=");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r4;

     label3:
        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter indexWriter>;

        virtualinvoke $r1.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter: void finish(int)>(i1);

        $z1 = <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        $r2 = r0.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput bufferedDocs>;

        $i2 = $r2.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: int length>;

        if $i2 == 0 goto label4;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label4:
        return;
    }

    public int merge(org.apache.lucene.index.MergeState) throws java.io.IOException
    {
        byte[] $r16;
        org.apache.lucene.index.FieldInfos $r4, $r39;
        java.lang.StringBuilder $r20, $r21, $r22, $r24, $r25, $r27;
        org.apache.lucene.index.AtomicReader r6;
        long $l43;
        org.apache.lucene.util.Bits $r43;
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator $r9;
        org.apache.lucene.index.MergeState r0;
        int[] $r12, $r15, $r23, $r29, $r32, $r33, $r37, r44, $r45;
        org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput $r17;
        org.apache.lucene.codecs.StoredFieldsReader $r41;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, i64, i65, $i66, i67, i68, i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, i79;
        org.apache.lucene.index.MergeState$CheckAbort $r18, $r35, $r40;
        java.lang.Object $r5;
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter r3;
        org.apache.lucene.document.Document $r38;
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter $r31;
        org.apache.lucene.index.SegmentReader[] $r7;
        java.lang.AssertionError $r36;
        java.lang.String $r28;
        org.apache.lucene.index.CorruptIndexException $r19;
        org.apache.lucene.codecs.compressing.CompressionMode $r10, $r11;
        org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader r42;
        boolean $z0, $z1, $z2;
        org.apache.lucene.util.BytesRef $r13, $r14, $r26, $r46;
        java.util.List $r1;
        org.apache.lucene.index.SegmentReader r8;
        org.apache.lucene.store.IndexOutput $r30, $r34;
        double $d0;
        java.util.Iterator $r2;

        r3 := @this: org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter;

        r0 := @parameter0: org.apache.lucene.index.MergeState;

        i64 = 0;

        i65 = 0;

        $r1 = r0.<org.apache.lucene.index.MergeState: java.util.List readers>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label15;

        $r5 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.lucene.index.AtomicReader) $r5;

        $r7 = r0.<org.apache.lucene.index.MergeState: org.apache.lucene.index.SegmentReader[] matchingSegmentReaders>;

        $i0 = i65;

        i65 = i65 + 1;

        r8 = $r7[$i0];

        r42 = null;

        if r8 == null goto label02;

        $r41 = virtualinvoke r8.<org.apache.lucene.index.SegmentReader: org.apache.lucene.codecs.StoredFieldsReader getFieldsReader()>();

        if $r41 == null goto label02;

        $z2 = $r41 instanceof org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader;

        if $z2 == 0 goto label02;

        r42 = (org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader) $r41;

     label02:
        $i66 = virtualinvoke r6.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        $r43 = virtualinvoke r6.<org.apache.lucene.index.AtomicReader: org.apache.lucene.util.Bits getLiveDocs()>();

        if r42 != null goto label05;

        i67 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int nextLiveDoc(int,org.apache.lucene.util.Bits,int)>(0, $r43, $i66);

     label03:
        if i67 >= $i66 goto label04;

        $r38 = virtualinvoke r6.<org.apache.lucene.index.AtomicReader: org.apache.lucene.document.Document document(int)>(i67);

        $r39 = r0.<org.apache.lucene.index.MergeState: org.apache.lucene.index.FieldInfos fieldInfos>;

        virtualinvoke r3.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: void addDocument(java.lang.Iterable,org.apache.lucene.index.FieldInfos)>($r38, $r39);

        i64 = i64 + 1;

        $r40 = r0.<org.apache.lucene.index.MergeState: org.apache.lucene.index.MergeState$CheckAbort checkAbort>;

        virtualinvoke $r40.<org.apache.lucene.index.MergeState$CheckAbort: void work(double)>(300.0);

        $i63 = i67 + 1;

        i67 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int nextLiveDoc(int,org.apache.lucene.util.Bits,int)>($i63, $r43, $i66);

        goto label03;

     label04:
        goto label14;

     label05:
        $i1 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int nextLiveDoc(int,org.apache.lucene.util.Bits,int)>(0, $r43, $i66);

        i68 = $i1;

        if $i1 >= $i66 goto label14;

        $r9 = virtualinvoke r42.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader: org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator chunkIterator(int)>($i1);

        r44 = newarray (int)[0];

     label06:
        virtualinvoke $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: void next(int)>(i68);

        $i3 = lengthof r44;

        $i2 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        if $i3 >= $i2 goto label07;

        $i61 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        $i62 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>($i61, 4);

        r44 = newarray (int)[$i62];

     label07:
        i69 = 1;

     label08:
        $i70 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        if i69 >= $i70 goto label09;

        $i56 = i69 - 1;

        $i59 = r44[$i56];

        $r37 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int[] lengths>;

        $i57 = i69 - 1;

        $i58 = $r37[$i57];

        $i60 = $i59 + $i58;

        r44[i69] = $i60;

        i69 = i69 + 1;

        goto label08;

     label09:
        $r10 = r3.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.CompressionMode compressionMode>;

        $r11 = virtualinvoke r42.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader: org.apache.lucene.codecs.compressing.CompressionMode getCompressionMode()>();

        if $r10 != $r11 goto label11;

        $i21 = r3.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int numBufferedDocs>;

        if $i21 != 0 goto label11;

        $i22 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        $i23 = $i22 - 1;

        $i25 = r44[$i23];

        $i24 = r3.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int chunkSize>;

        if $i25 >= $i24 goto label11;

        $i26 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        $i27 = $i26 - 1;

        $i31 = r44[$i27];

        $r29 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int[] lengths>;

        $i28 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        $i29 = $i28 - 1;

        $i30 = $r29[$i29];

        $i33 = $i31 + $i30;

        $i32 = r3.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int chunkSize>;

        if $i33 < $i32 goto label11;

        $i37 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int docBase>;

        $i35 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int docBase>;

        $i34 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        $i36 = $i35 + $i34;

        $i38 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int nextDeletedDoc(int,org.apache.lucene.util.Bits,int)>($i37, $r43, $i36);

        $i40 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int docBase>;

        $i39 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        $i41 = $i40 + $i39;

        if $i38 != $i41 goto label11;

        $z1 = <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: boolean $assertionsDisabled>;

        if $z1 != 0 goto label10;

        $i55 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int docBase>;

        if i68 == $i55 goto label10;

        $r36 = new java.lang.AssertionError;

        specialinvoke $r36.<java.lang.AssertionError: void <init>()>();

        throw $r36;

     label10:
        $r31 = r3.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter indexWriter>;

        $i42 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        $r30 = r3.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        $l43 = virtualinvoke $r30.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        virtualinvoke $r31.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter: void writeIndex(int,long)>($i42, $l43);

        $i45 = r3.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int docBase>;

        $i44 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        $r33 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int[] numStoredFields>;

        $r32 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int[] lengths>;

        specialinvoke r3.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: void writeHeader(int,int,int[],int[])>($i45, $i44, $r33, $r32);

        $r34 = r3.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        virtualinvoke $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: void copyCompressedData(org.apache.lucene.store.DataOutput)>($r34);

        $i47 = r3.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int docBase>;

        $i46 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        $i48 = $i47 + $i46;

        r3.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int docBase> = $i48;

        $i50 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int docBase>;

        $i49 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        $i51 = $i50 + $i49;

        i68 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int nextLiveDoc(int,org.apache.lucene.util.Bits,int)>($i51, $r43, $i66);

        $i52 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        i64 = i64 + $i52;

        $r35 = r0.<org.apache.lucene.index.MergeState: org.apache.lucene.index.MergeState$CheckAbort checkAbort>;

        $i53 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        $i54 = 300 * $i53;

        $d0 = (double) $i54;

        virtualinvoke $r35.<org.apache.lucene.index.MergeState$CheckAbort: void work(double)>($d0);

        goto label13;

     label11:
        virtualinvoke $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: void decompress()>();

        $i71 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        $i72 = $i71 - 1;

        $i73 = r44[$i72];

        $r45 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int[] lengths>;

        $i74 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        $i75 = $i74 - 1;

        $i76 = $r45[$i75];

        $i77 = $i73 + $i76;

        $r46 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.util.BytesRef bytes>;

        $i78 = $r46.<org.apache.lucene.util.BytesRef: int length>;

        if $i77 == $i78 goto label12;

        $r19 = new org.apache.lucene.index.CorruptIndexException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Corrupted: expected chunk size=");

        $i14 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        $i15 = $i14 - 1;

        $i16 = r44[$i15];

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r23 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int[] lengths>;

        $i17 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        $i18 = $i17 - 1;

        $i19 = $r23[$i18];

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", got ");

        $r26 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.util.BytesRef bytes>;

        $i20 = $r26.<org.apache.lucene.util.BytesRef: int length>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r28);

        throw $r19;

     label12:
        $i5 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int docBase>;

        $i4 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int chunkDocs>;

        $i6 = $i5 + $i4;

        if i68 >= $i6 goto label13;

        $i7 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int docBase>;

        i79 = i68 - $i7;

        $r12 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int[] numStoredFields>;

        $i8 = $r12[i79];

        virtualinvoke r3.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: void startDocument(int)>($i8);

        $r17 = r3.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput bufferedDocs>;

        $r13 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.util.BytesRef bytes>;

        $r16 = $r13.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r14 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: org.apache.lucene.util.BytesRef bytes>;

        $i10 = $r14.<org.apache.lucene.util.BytesRef: int offset>;

        $i9 = r44[i79];

        $i12 = $i10 + $i9;

        $r15 = $r9.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$ChunkIterator: int[] lengths>;

        $i11 = $r15[i79];

        virtualinvoke $r17.<org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput: void writeBytes(byte[],int,int)>($r16, $i12, $i11);

        virtualinvoke r3.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: void finishDocument()>();

        i64 = i64 + 1;

        $r18 = r0.<org.apache.lucene.index.MergeState: org.apache.lucene.index.MergeState$CheckAbort checkAbort>;

        virtualinvoke $r18.<org.apache.lucene.index.MergeState$CheckAbort: void work(double)>(300.0);

        $i13 = i68 + 1;

        i68 = staticinvoke <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int nextLiveDoc(int,org.apache.lucene.util.Bits,int)>($i13, $r43, $i66);

        goto label12;

     label13:
        if i68 < $i66 goto label06;

     label14:
        goto label01;

     label15:
        $r4 = r0.<org.apache.lucene.index.MergeState: org.apache.lucene.index.FieldInfos fieldInfos>;

        virtualinvoke r3.<org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: void finish(org.apache.lucene.index.FieldInfos,int)>($r4, i64);

        return i64;
    }

    private static int nextLiveDoc(int, org.apache.lucene.util.Bits, int)
    {
        int i0, i1;
        org.apache.lucene.util.Bits r0;
        boolean $z0;

        i1 := @parameter0: int;

        r0 := @parameter1: org.apache.lucene.util.Bits;

        i0 := @parameter2: int;

        if r0 != null goto label1;

        return i1;

     label1:
        if i1 >= i0 goto label2;

        $z0 = interfaceinvoke r0.<org.apache.lucene.util.Bits: boolean get(int)>(i1);

        if $z0 != 0 goto label2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return i1;
    }

    private static int nextDeletedDoc(int, org.apache.lucene.util.Bits, int)
    {
        int i0, i1;
        org.apache.lucene.util.Bits r0;
        boolean $z0;

        i1 := @parameter0: int;

        r0 := @parameter1: org.apache.lucene.util.Bits;

        i0 := @parameter2: int;

        if r0 != null goto label1;

        return i0;

     label1:
        if i1 >= i0 goto label2;

        $z0 = interfaceinvoke r0.<org.apache.lucene.util.Bits: boolean get(int)>(i1);

        if $z0 == 0 goto label2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return i1;
    }

    static void <clinit>()
    {
        int $i0, $i1, $i3;
        java.lang.Class $r0;
        long $l2;
        boolean $z0, $z1;

        <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int VERSION_CURRENT> = 0;

        <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int VERSION_START> = 0;

        <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: java.lang.String CODEC_SFX_DAT> = "Data";

        <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: java.lang.String CODEC_SFX_IDX> = "Index";

        <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int NUMERIC_DOUBLE> = 5;

        <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int NUMERIC_LONG> = 4;

        <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int NUMERIC_FLOAT> = 3;

        <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int NUMERIC_INT> = 2;

        <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int BYTE_ARR> = 1;

        <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int STRING> = 0;

        <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int MAX_DOCUMENTS_PER_CHUNK> = 128;

        $r0 = class "Lorg/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: boolean $assertionsDisabled> = $z1;

        $i0 = staticinvoke <org.apache.lucene.util.packed.PackedInts: int bitsRequired(long)>(5L);

        <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int TYPE_BITS> = $i0;

        $i1 = <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int TYPE_BITS>;

        $l2 = staticinvoke <org.apache.lucene.util.packed.PackedInts: long maxValue(int)>($i1);

        $i3 = (int) $l2;

        <org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter: int TYPE_MASK> = $i3;

        return;
    }
}
