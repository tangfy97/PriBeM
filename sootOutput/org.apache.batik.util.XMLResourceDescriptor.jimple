public class org.apache.batik.util.XMLResourceDescriptor extends java.lang.Object
{
    public static final java.lang.String XML_PARSER_CLASS_NAME_KEY;
    public static final java.lang.String CSS_PARSER_CLASS_NAME_KEY;
    public static final java.lang.String RESOURCES;
    protected static java.util.Properties parserProps;
    protected static java.lang.String xmlParserClassName;
    protected static java.lang.String cssParserClassName;
    static java.lang.Class class$org$apache$batik$util$XMLResourceDescriptor;

    public void <init>()
    {
        org.apache.batik.util.XMLResourceDescriptor r0;

        r0 := @this: org.apache.batik.util.XMLResourceDescriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected static synchronized java.util.Properties getParserProps()
    {
        java.util.Properties $r0, $r1, $r4, $r5, $r6;
        java.util.MissingResourceException $r8;
        java.io.IOException $r7;
        java.lang.Class $r2, $r10;
        java.lang.String $r9;
        java.io.InputStream $r3;

        $r0 = <org.apache.batik.util.XMLResourceDescriptor: java.util.Properties parserProps>;

        if $r0 == null goto label1;

        $r6 = <org.apache.batik.util.XMLResourceDescriptor: java.util.Properties parserProps>;

        return $r6;

     label1:
        $r1 = new java.util.Properties;

        specialinvoke $r1.<java.util.Properties: void <init>()>();

        <org.apache.batik.util.XMLResourceDescriptor: java.util.Properties parserProps> = $r1;

     label2:
        $r2 = <org.apache.batik.util.XMLResourceDescriptor: java.lang.Class class$org$apache$batik$util$XMLResourceDescriptor>;

        if $r2 != null goto label3;

        $r10 = staticinvoke <org.apache.batik.util.XMLResourceDescriptor: java.lang.Class class$(java.lang.String)>("org.apache.batik.util.XMLResourceDescriptor");

        <org.apache.batik.util.XMLResourceDescriptor: java.lang.Class class$org$apache$batik$util$XMLResourceDescriptor> = $r10;

        goto label4;

     label3:
        $r10 = <org.apache.batik.util.XMLResourceDescriptor: java.lang.Class class$org$apache$batik$util$XMLResourceDescriptor>;

     label4:
        $r3 = virtualinvoke $r10.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("resources/XMLResourceDescriptor.properties");

        $r4 = <org.apache.batik.util.XMLResourceDescriptor: java.util.Properties parserProps>;

        virtualinvoke $r4.<java.util.Properties: void load(java.io.InputStream)>($r3);

     label5:
        goto label7;

     label6:
        $r7 := @caughtexception;

        $r8 = new java.util.MissingResourceException;

        $r9 = virtualinvoke $r7.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r8.<java.util.MissingResourceException: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r9, "resources/XMLResourceDescriptor.properties", null);

        throw $r8;

     label7:
        $r5 = <org.apache.batik.util.XMLResourceDescriptor: java.util.Properties parserProps>;

        return $r5;

        catch java.io.IOException from label2 to label5 with label6;
    }

    public static java.lang.String getXMLParserClassName()
    {
        java.util.Properties $r2;
        java.lang.String $r0, $r1, $r3;

        $r0 = <org.apache.batik.util.XMLResourceDescriptor: java.lang.String xmlParserClassName>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.apache.batik.util.XMLResourceDescriptor: java.util.Properties getParserProps()>();

        $r3 = virtualinvoke $r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("org.xml.sax.driver");

        <org.apache.batik.util.XMLResourceDescriptor: java.lang.String xmlParserClassName> = $r3;

     label1:
        $r1 = <org.apache.batik.util.XMLResourceDescriptor: java.lang.String xmlParserClassName>;

        return $r1;
    }

    public static void setXMLParserClassName(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        <org.apache.batik.util.XMLResourceDescriptor: java.lang.String xmlParserClassName> = r0;

        return;
    }

    public static java.lang.String getCSSParserClassName()
    {
        java.util.Properties $r2;
        java.lang.String $r0, $r1, $r3;

        $r0 = <org.apache.batik.util.XMLResourceDescriptor: java.lang.String cssParserClassName>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.apache.batik.util.XMLResourceDescriptor: java.util.Properties getParserProps()>();

        $r3 = virtualinvoke $r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("org.w3c.css.sac.driver");

        <org.apache.batik.util.XMLResourceDescriptor: java.lang.String cssParserClassName> = $r3;

     label1:
        $r1 = <org.apache.batik.util.XMLResourceDescriptor: java.lang.String cssParserClassName>;

        return $r1;
    }

    public static void setCSSParserClassName(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        <org.apache.batik.util.XMLResourceDescriptor: java.lang.String cssParserClassName> = r0;

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    static void <clinit>()
    {
        <org.apache.batik.util.XMLResourceDescriptor: java.lang.String RESOURCES> = "resources/XMLResourceDescriptor.properties";

        <org.apache.batik.util.XMLResourceDescriptor: java.lang.String CSS_PARSER_CLASS_NAME_KEY> = "org.w3c.css.sac.driver";

        <org.apache.batik.util.XMLResourceDescriptor: java.lang.String XML_PARSER_CLASS_NAME_KEY> = "org.xml.sax.driver";

        <org.apache.batik.util.XMLResourceDescriptor: java.util.Properties parserProps> = null;

        return;
    }
}
