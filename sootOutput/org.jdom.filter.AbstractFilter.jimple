public abstract class org.jdom.filter.AbstractFilter extends java.lang.Object implements org.jdom.filter.Filter
{
    private static final java.lang.String CVS_ID;

    public void <init>()
    {
        org.jdom.filter.AbstractFilter r0;

        r0 := @this: org.jdom.filter.AbstractFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.jdom.filter.Filter and(org.jdom.filter.Filter)
    {
        org.jdom.filter.Filter r2;
        org.jdom.filter.AbstractFilter r1;
        org.jdom.filter.AndFilter $r0;

        r1 := @this: org.jdom.filter.AbstractFilter;

        r2 := @parameter0: org.jdom.filter.Filter;

        $r0 = new org.jdom.filter.AndFilter;

        specialinvoke $r0.<org.jdom.filter.AndFilter: void <init>(org.jdom.filter.Filter,org.jdom.filter.Filter)>(r1, r2);

        return $r0;
    }

    public abstract boolean matches(java.lang.Object);

    public org.jdom.filter.Filter negate()
    {
        org.jdom.filter.AbstractFilter r1;
        org.jdom.filter.NegateFilter $r0;

        r1 := @this: org.jdom.filter.AbstractFilter;

        $r0 = new org.jdom.filter.NegateFilter;

        specialinvoke $r0.<org.jdom.filter.NegateFilter: void <init>(org.jdom.filter.Filter)>(r1);

        return $r0;
    }

    public org.jdom.filter.Filter or(org.jdom.filter.Filter)
    {
        org.jdom.filter.Filter r2;
        org.jdom.filter.AbstractFilter r1;
        org.jdom.filter.OrFilter $r0;

        r1 := @this: org.jdom.filter.AbstractFilter;

        r2 := @parameter0: org.jdom.filter.Filter;

        $r0 = new org.jdom.filter.OrFilter;

        specialinvoke $r0.<org.jdom.filter.OrFilter: void <init>(org.jdom.filter.Filter,org.jdom.filter.Filter)>(r1, r2);

        return $r0;
    }

    public static void <clinit>()
    {
        <org.jdom.filter.AbstractFilter: java.lang.String CVS_ID> = "@(#) $RCSfile: AbstractFilter.java,v $ $Revision: 1.5 $ $Date: 2004/02/27 11:32:58 $";

        return;
    }
}
