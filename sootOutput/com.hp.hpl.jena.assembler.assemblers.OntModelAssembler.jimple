public class com.hp.hpl.jena.assembler.assemblers.OntModelAssembler extends com.hp.hpl.jena.assembler.assemblers.InfModelAssembler implements com.hp.hpl.jena.assembler.Assembler
{
    private static final com.hp.hpl.jena.ontology.OntModelSpec defaultSpec;

    public void <init>()
    {
        com.hp.hpl.jena.assembler.assemblers.OntModelAssembler r0;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.OntModelAssembler;

        specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.InfModelAssembler: void <init>()>();

        return;
    }

    public com.hp.hpl.jena.rdf.model.Model openEmptyModel(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.assembler.Mode)
    {
        com.hp.hpl.jena.assembler.Assembler r3;
        com.hp.hpl.jena.assembler.Mode r4;
        com.hp.hpl.jena.rdf.model.Resource r1, $r2;
        com.hp.hpl.jena.ontology.OntModelSpec $r6;
        com.hp.hpl.jena.rdf.model.Model $r5;
        com.hp.hpl.jena.assembler.assemblers.OntModelAssembler r0;
        com.hp.hpl.jena.ontology.OntModel $r7;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.OntModelAssembler;

        r3 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        r4 := @parameter2: com.hp.hpl.jena.assembler.Mode;

        $r2 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Resource OntModel>;

        virtualinvoke r0.<com.hp.hpl.jena.assembler.assemblers.OntModelAssembler: void checkType(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Resource)>(r1, $r2);

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.assembler.assemblers.OntModelAssembler: com.hp.hpl.jena.rdf.model.Model getBase(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.assembler.Mode)>(r3, r1, r4);

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.assembler.assemblers.OntModelAssembler: com.hp.hpl.jena.ontology.OntModelSpec getOntModelSpec(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource)>(r3, r1);

        $r7 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.ontology.OntModel createOntologyModel(com.hp.hpl.jena.ontology.OntModelSpec,com.hp.hpl.jena.rdf.model.Model)>($r6, $r5);

        specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.OntModelAssembler: void addSubModels(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.assembler.Mode,com.hp.hpl.jena.ontology.OntModel)>(r3, r1, r4, $r7);

        return $r7;
    }

    private void addSubModels(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.assembler.Mode, com.hp.hpl.jena.ontology.OntModel)
    {
        com.hp.hpl.jena.assembler.Assembler r1;
        java.util.Iterator $r5;
        com.hp.hpl.jena.assembler.Mode r3;
        com.hp.hpl.jena.rdf.model.Resource r2;
        java.util.List $r4;
        com.hp.hpl.jena.rdf.model.Model $r8;
        java.lang.Object $r7;
        com.hp.hpl.jena.assembler.assemblers.OntModelAssembler r0;
        com.hp.hpl.jena.ontology.OntModel r6;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.OntModelAssembler;

        r1 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        r3 := @parameter2: com.hp.hpl.jena.assembler.Mode;

        r6 := @parameter3: com.hp.hpl.jena.ontology.OntModel;

        $r4 = specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.OntModelAssembler: java.util.List getSubModels(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.assembler.Mode)>(r1, r2, r3);

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (com.hp.hpl.jena.rdf.model.Model) $r7;

        interfaceinvoke r6.<com.hp.hpl.jena.ontology.OntModel: void addSubModel(com.hp.hpl.jena.rdf.model.Model)>($r8);

        goto label1;

     label2:
        return;
    }

    private java.util.List getSubModels(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.assembler.Mode)
    {
        com.hp.hpl.jena.assembler.Assembler r4;
        com.hp.hpl.jena.assembler.Mode r7;
        com.hp.hpl.jena.rdf.model.Statement $r5;
        com.hp.hpl.jena.rdf.model.Resource r1, $r6;
        java.util.ArrayList $r0;
        com.hp.hpl.jena.rdf.model.StmtIterator $r3;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.rdf.model.Model $r8;
        com.hp.hpl.jena.assembler.assemblers.OntModelAssembler r9;
        boolean $z0;

        r9 := @this: com.hp.hpl.jena.assembler.assemblers.OntModelAssembler;

        r4 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        r7 := @parameter2: com.hp.hpl.jena.assembler.Mode;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property subModel>;

        $r3 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.StmtIterator listProperties(com.hp.hpl.jena.rdf.model.Property)>($r2);

     label1:
        $z0 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $r6 = interfaceinvoke $r5.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Resource getResource()>();

        $r8 = interfaceinvoke r4.<com.hp.hpl.jena.assembler.Assembler: com.hp.hpl.jena.rdf.model.Model openModel(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.assembler.Mode)>($r6, r7);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        return $r0;
    }

    protected com.hp.hpl.jena.ontology.OntModelSpec getOntModelSpec(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.assembler.Assembler r3;
        com.hp.hpl.jena.rdf.model.Property $r1;
        java.lang.Object $r4;
        com.hp.hpl.jena.assembler.assemblers.OntModelAssembler r5;
        com.hp.hpl.jena.rdf.model.Resource r0, $r2;
        com.hp.hpl.jena.ontology.OntModelSpec $r6;

        r5 := @this: com.hp.hpl.jena.assembler.assemblers.OntModelAssembler;

        r3 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r0 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property ontModelSpec>;

        $r2 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.OntModelAssembler: com.hp.hpl.jena.rdf.model.Resource getUniqueResource(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, $r1);

        if $r2 != null goto label1;

        $r6 = <com.hp.hpl.jena.assembler.assemblers.OntModelAssembler: com.hp.hpl.jena.ontology.OntModelSpec defaultSpec>;

        goto label2;

     label1:
        $r4 = interfaceinvoke r3.<com.hp.hpl.jena.assembler.Assembler: java.lang.Object open(com.hp.hpl.jena.rdf.model.Resource)>($r2);

        $r6 = (com.hp.hpl.jena.ontology.OntModelSpec) $r4;

     label2:
        return $r6;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.ontology.OntModelSpec $r0;

        $r0 = <com.hp.hpl.jena.ontology.OntModelSpec: com.hp.hpl.jena.ontology.OntModelSpec OWL_MEM_RDFS_INF>;

        <com.hp.hpl.jena.assembler.assemblers.OntModelAssembler: com.hp.hpl.jena.ontology.OntModelSpec defaultSpec> = $r0;

        return;
    }
}
