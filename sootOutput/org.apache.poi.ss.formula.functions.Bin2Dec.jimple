public class org.apache.poi.ss.formula.functions.Bin2Dec extends org.apache.poi.ss.formula.functions.Fixed1ArgFunction implements org.apache.poi.ss.formula.functions.FreeRefFunction
{
    public static final org.apache.poi.ss.formula.functions.FreeRefFunction instance;

    public void <init>()
    {
        org.apache.poi.ss.formula.functions.Bin2Dec r0;

        r0 := @this: org.apache.poi.ss.formula.functions.Bin2Dec;

        specialinvoke r0.<org.apache.poi.ss.formula.functions.Fixed1ArgFunction: void <init>()>();

        return;
    }

    public org.apache.poi.ss.formula.eval.ValueEval evaluate(int, int, org.apache.poi.ss.formula.eval.ValueEval)
    {
        org.apache.poi.ss.formula.eval.ErrorEval $r9;
        org.apache.poi.ss.formula.functions.Bin2Dec r3;
        long $l3;
        int $i0, $i1, $i2, $i4, i5, i6, i7;
        java.lang.String $r1, $r2, $r6, r10, r11;
        double $d0;
        boolean z0;
        org.apache.poi.ss.formula.eval.ValueEval r0;
        org.apache.poi.ss.formula.eval.NumberEval $r8;
        java.lang.StringBuilder $r4, $r5, $r7;

        r3 := @this: org.apache.poi.ss.formula.functions.Bin2Dec;

        i5 := @parameter0: int;

        i6 := @parameter1: int;

        r0 := @parameter2: org.apache.poi.ss.formula.eval.ValueEval;

        $r1 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: java.lang.String coerceValueToString(org.apache.poi.ss.formula.eval.ValueEval)>(r0);

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 10 goto label1;

        $r9 = <org.apache.poi.ss.formula.eval.ErrorEval: org.apache.poi.ss.formula.eval.ErrorEval NUM_ERROR>;

        return $r9;

     label1:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 >= 10 goto label2;

        r10 = $r1;

        z0 = 1;

        goto label3;

     label2:
        r10 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

        z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("0");

     label3:
        if z0 == 0 goto label4;

        $i4 = specialinvoke r3.<org.apache.poi.ss.formula.functions.Bin2Dec: int getDecimalValue(java.lang.String)>(r10);

        r11 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i4);

        goto label5;

     label4:
        $r2 = staticinvoke <org.apache.poi.ss.formula.functions.Bin2Dec: java.lang.String toggleBits(java.lang.String)>(r10);

        $i2 = specialinvoke r3.<org.apache.poi.ss.formula.functions.Bin2Dec: int getDecimalValue(java.lang.String)>($r2);

        i7 = $i2 + 1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i7);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        $r8 = new org.apache.poi.ss.formula.eval.NumberEval;

        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r11);

        $d0 = (double) $l3;

        specialinvoke $r8.<org.apache.poi.ss.formula.eval.NumberEval: void <init>(double)>($d0);

        return $r8;
    }

    private int getDecimalValue(java.lang.String)
    {
        org.apache.poi.ss.formula.functions.Bin2Dec r2;
        int $i0, $i1, $i2, i3, i4, i5, i6, $i8;
        java.lang.String r0, $r1;
        double $d0, $d1, $d2, $d3;

        r2 := @this: org.apache.poi.ss.formula.functions.Bin2Dec;

        r0 := @parameter0: java.lang.String;

        i4 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i5 = $i0 - 1;

        i6 = 0;

     label1:
        if i6 >= $i0 goto label2;

        $i1 = i6 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i6, $i1);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        $d1 = (double) $i2;

        $d0 = (double) i5;

        $d2 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, $d0);

        $d3 = $d1 * $d2;

        i3 = (int) $d3;

        i4 = i4 + i3;

        $i8 = (int) -1;

        i5 = i5 + $i8;

        i6 = i6 + 1;

        goto label1;

     label2:
        return i4;
    }

    private static java.lang.String toggleBits(java.lang.String)
    {
        long $l0, $l2, $l3, l4;
        int $i1, $i5, $i6;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String r0, r4;

        r0 := @parameter0: java.lang.String;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(r0, 2);

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $l2 = 1L << $i1;

        $l3 = $l2 - 1L;

        l4 = $l0 ^ $l3;

        r4 = staticinvoke <java.lang.Long: java.lang.String toBinaryString(long)>(l4);

     label1:
        $i5 = virtualinvoke r4.<java.lang.String: int length()>();

        $i6 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i5 >= $i6 goto label2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label2:
        return r4;
    }

    public org.apache.poi.ss.formula.eval.ValueEval evaluate(org.apache.poi.ss.formula.eval.ValueEval[], org.apache.poi.ss.formula.OperationEvaluationContext)
    {
        org.apache.poi.ss.formula.eval.ErrorEval $r5;
        org.apache.poi.ss.formula.eval.ValueEval[] r0;
        org.apache.poi.ss.formula.functions.Bin2Dec r1;
        org.apache.poi.ss.formula.OperationEvaluationContext r2;
        org.apache.poi.ss.formula.eval.ValueEval $r3, $r4;
        int $i0, $i1, $i2;

        r1 := @this: org.apache.poi.ss.formula.functions.Bin2Dec;

        r0 := @parameter0: org.apache.poi.ss.formula.eval.ValueEval[];

        r2 := @parameter1: org.apache.poi.ss.formula.OperationEvaluationContext;

        $i0 = lengthof r0;

        if $i0 == 1 goto label1;

        $r5 = <org.apache.poi.ss.formula.eval.ErrorEval: org.apache.poi.ss.formula.eval.ErrorEval VALUE_INVALID>;

        return $r5;

     label1:
        $i1 = virtualinvoke r2.<org.apache.poi.ss.formula.OperationEvaluationContext: int getRowIndex()>();

        $i2 = virtualinvoke r2.<org.apache.poi.ss.formula.OperationEvaluationContext: int getColumnIndex()>();

        $r3 = r0[0];

        $r4 = virtualinvoke r1.<org.apache.poi.ss.formula.functions.Bin2Dec: org.apache.poi.ss.formula.eval.ValueEval evaluate(int,int,org.apache.poi.ss.formula.eval.ValueEval)>($i1, $i2, $r3);

        return $r4;
    }

    static void <clinit>()
    {
        org.apache.poi.ss.formula.functions.Bin2Dec $r0;

        $r0 = new org.apache.poi.ss.formula.functions.Bin2Dec;

        specialinvoke $r0.<org.apache.poi.ss.formula.functions.Bin2Dec: void <init>()>();

        <org.apache.poi.ss.formula.functions.Bin2Dec: org.apache.poi.ss.formula.functions.FreeRefFunction instance> = $r0;

        return;
    }
}
