public class org.apache.commons.compress.compressors.xz.XZUtils extends java.lang.Object
{
    private static final org.apache.commons.compress.compressors.FileNameUtil fileNameUtil;

    private void <init>()
    {
        org.apache.commons.compress.compressors.xz.XZUtils r0;

        r0 := @this: org.apache.commons.compress.compressors.xz.XZUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isXZCompressionAvailable()
    {
        java.lang.NoClassDefFoundError $r0;

     label1:
        staticinvoke <org.apache.commons.compress.compressors.xz.XZCompressorInputStream: boolean matches(byte[],int)>(null, 0);

     label2:
        return 1;

     label3:
        $r0 := @caughtexception;

        return 0;

        catch java.lang.NoClassDefFoundError from label1 to label2 with label3;
    }

    public static boolean isCompressedFilename(java.lang.String)
    {
        java.lang.String r0;
        org.apache.commons.compress.compressors.FileNameUtil $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.commons.compress.compressors.xz.XZUtils: org.apache.commons.compress.compressors.FileNameUtil fileNameUtil>;

        $z0 = virtualinvoke $r1.<org.apache.commons.compress.compressors.FileNameUtil: boolean isCompressedFilename(java.lang.String)>(r0);

        return $z0;
    }

    public static java.lang.String getUncompressedFilename(java.lang.String)
    {
        java.lang.String r0, $r2;
        org.apache.commons.compress.compressors.FileNameUtil $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.commons.compress.compressors.xz.XZUtils: org.apache.commons.compress.compressors.FileNameUtil fileNameUtil>;

        $r2 = virtualinvoke $r1.<org.apache.commons.compress.compressors.FileNameUtil: java.lang.String getUncompressedFilename(java.lang.String)>(r0);

        return $r2;
    }

    public static java.lang.String getCompressedFilename(java.lang.String)
    {
        java.lang.String r0, $r2;
        org.apache.commons.compress.compressors.FileNameUtil $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.commons.compress.compressors.xz.XZUtils: org.apache.commons.compress.compressors.FileNameUtil fileNameUtil>;

        $r2 = virtualinvoke $r1.<org.apache.commons.compress.compressors.FileNameUtil: java.lang.String getCompressedFilename(java.lang.String)>(r0);

        return $r2;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;
        org.apache.commons.compress.compressors.FileNameUtil $r1;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(".txz", ".tar");

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(".xz", "");

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("-xz", "");

        $r1 = new org.apache.commons.compress.compressors.FileNameUtil;

        specialinvoke $r1.<org.apache.commons.compress.compressors.FileNameUtil: void <init>(java.util.Map,java.lang.String)>($r0, ".xz");

        <org.apache.commons.compress.compressors.xz.XZUtils: org.apache.commons.compress.compressors.FileNameUtil fileNameUtil> = $r1;

        return;
    }
}
