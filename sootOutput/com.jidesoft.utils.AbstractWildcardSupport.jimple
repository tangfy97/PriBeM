public abstract class com.jidesoft.utils.AbstractWildcardSupport extends java.lang.Object implements com.jidesoft.utils.WildcardSupport, java.io.Serializable
{

    public void <init>()
    {
        com.jidesoft.utils.AbstractWildcardSupport r0;

        r0 := @this: com.jidesoft.utils.AbstractWildcardSupport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String convert(java.lang.String)
    {
        com.jidesoft.utils.AbstractWildcardSupport r0;
        java.lang.StringBuffer $r5;
        int i1, i3, $i6, $i7, $i8, $i9, $i10, i11, $i13, $i14, $i16, $i17, $i19, $i20, $i22, $i24, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i35;
        java.lang.String r1, $r2, $r3;
        char $c0, $c2, $c4, $c5;

        r0 := @this: com.jidesoft.utils.AbstractWildcardSupport;

        r1 := @parameter0: java.lang.String;

        $c0 = virtualinvoke r0.<com.jidesoft.utils.AbstractWildcardSupport: char getZeroOrMoreQuantifier()>();

        if $c0 != 0 goto label01;

        $i13 = (int) -1;

        $i7 = $i13;

        goto label02;

     label01:
        $i14 = (int) $c0;

        $i7 = virtualinvoke r1.<java.lang.String: int indexOf(int)>($i14);

     label02:
        i1 = $i7;

        $c2 = virtualinvoke r0.<com.jidesoft.utils.AbstractWildcardSupport: char getZeroOrOneQuantifier()>();

        if $c2 != 0 goto label03;

        $i16 = (int) -1;

        $i8 = $i16;

        goto label04;

     label03:
        $i17 = (int) $c2;

        $i8 = virtualinvoke r1.<java.lang.String: int indexOf(int)>($i17);

     label04:
        i3 = $i8;

        $c4 = virtualinvoke r0.<com.jidesoft.utils.AbstractWildcardSupport: char getOneOrMoreQuantifier()>();

        if $c4 != 0 goto label05;

        $i19 = (int) -1;

        $i9 = $i19;

        goto label06;

     label05:
        $i20 = (int) $c4;

        $i9 = virtualinvoke r1.<java.lang.String: int indexOf(int)>($i20);

     label06:
        $i22 = (int) -1;

        if i1 != $i22 goto label07;

        $i24 = (int) -1;

        if i3 != $i24 goto label07;

        $i26 = (int) -1;

        if $i9 != $i26 goto label07;

        return r1;

     label07:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $i10 = virtualinvoke r1.<java.lang.String: int length()>();

        i11 = 0;

     label08:
        if i11 >= $i10 goto label14;

        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i11);

        if $c2 == 0 goto label09;

        $i27 = (int) $c5;

        $i28 = (int) $c2;

        if $i27 != $i28 goto label09;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        goto label13;

     label09:
        if $c0 == 0 goto label10;

        $i29 = (int) $c5;

        $i30 = (int) $c0;

        if $i29 != $i30 goto label10;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".*");

        goto label13;

     label10:
        if $c4 == 0 goto label11;

        $i31 = (int) $c5;

        $i32 = (int) $c4;

        if $i31 != $i32 goto label11;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("..*");

        goto label13;

     label11:
        $r3 = "(){}[].^$\\";

        $i33 = (int) $c5;

        $i6 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>($i33);

        $i35 = (int) -1;

        if $i6 == $i35 goto label12;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5);

        goto label13;

     label12:
        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5);

     label13:
        i11 = i11 + 1;

        goto label08;

     label14:
        $r2 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }
}
