public final class com.google.inject.internal.ConstantBindingBuilderImpl extends com.google.inject.internal.AbstractBindingBuilder implements com.google.inject.binder.AnnotatedConstantBindingBuilder, com.google.inject.binder.ConstantBindingBuilder
{

    public void <init>(com.google.inject.Binder, java.util.List, java.lang.Object)
    {
        java.util.List r2;
        com.google.inject.Binder r1;
        com.google.inject.Key $r4;
        java.lang.Object r3;
        com.google.inject.internal.ConstantBindingBuilderImpl r0;

        r0 := @this: com.google.inject.internal.ConstantBindingBuilderImpl;

        r1 := @parameter0: com.google.inject.Binder;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.lang.Object;

        $r4 = <com.google.inject.internal.ConstantBindingBuilderImpl: com.google.inject.Key NULL_KEY>;

        specialinvoke r0.<com.google.inject.internal.AbstractBindingBuilder: void <init>(com.google.inject.Binder,java.util.List,java.lang.Object,com.google.inject.Key)>(r1, r2, r3, $r4);

        return;
    }

    public com.google.inject.binder.ConstantBindingBuilder annotatedWith(java.lang.Class)
    {
        java.lang.Class r1;
        com.google.inject.internal.ConstantBindingBuilderImpl r0;

        r0 := @this: com.google.inject.internal.ConstantBindingBuilderImpl;

        r1 := @parameter0: java.lang.Class;

        virtualinvoke r0.<com.google.inject.internal.ConstantBindingBuilderImpl: com.google.inject.internal.BindingImpl annotatedWithInternal(java.lang.Class)>(r1);

        return r0;
    }

    public com.google.inject.binder.ConstantBindingBuilder annotatedWith(java.lang.'annotation'.Annotation)
    {
        java.lang.'annotation'.Annotation r1;
        com.google.inject.internal.ConstantBindingBuilderImpl r0;

        r0 := @this: com.google.inject.internal.ConstantBindingBuilderImpl;

        r1 := @parameter0: java.lang.'annotation'.Annotation;

        virtualinvoke r0.<com.google.inject.internal.ConstantBindingBuilderImpl: com.google.inject.internal.BindingImpl annotatedWithInternal(java.lang.'annotation'.Annotation)>(r1);

        return r0;
    }

    public void 'to'(java.lang.String)
    {
        java.lang.String r1;
        com.google.inject.internal.ConstantBindingBuilderImpl r0;

        r0 := @this: com.google.inject.internal.ConstantBindingBuilderImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.google.inject.internal.ConstantBindingBuilderImpl: void toConstant(java.lang.Class,java.lang.Object)>(class "Ljava/lang/String;", r1);

        return;
    }

    public void 'to'(int)
    {
        int i0;
        com.google.inject.internal.ConstantBindingBuilderImpl r0;
        java.lang.Integer $r1;

        r0 := @this: com.google.inject.internal.ConstantBindingBuilderImpl;

        i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke r0.<com.google.inject.internal.ConstantBindingBuilderImpl: void toConstant(java.lang.Class,java.lang.Object)>(class "Ljava/lang/Integer;", $r1);

        return;
    }

    public void 'to'(long)
    {
        long l0;
        com.google.inject.internal.ConstantBindingBuilderImpl r0;
        java.lang.Long $r1;

        r0 := @this: com.google.inject.internal.ConstantBindingBuilderImpl;

        l0 := @parameter0: long;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        specialinvoke r0.<com.google.inject.internal.ConstantBindingBuilderImpl: void toConstant(java.lang.Class,java.lang.Object)>(class "Ljava/lang/Long;", $r1);

        return;
    }

    public void 'to'(boolean)
    {
        java.lang.Boolean $r1;
        com.google.inject.internal.ConstantBindingBuilderImpl r0;
        boolean z0;

        r0 := @this: com.google.inject.internal.ConstantBindingBuilderImpl;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        specialinvoke r0.<com.google.inject.internal.ConstantBindingBuilderImpl: void toConstant(java.lang.Class,java.lang.Object)>(class "Ljava/lang/Boolean;", $r1);

        return;
    }

    public void 'to'(double)
    {
        com.google.inject.internal.ConstantBindingBuilderImpl r0;
        java.lang.Double $r1;
        double d0;

        r0 := @this: com.google.inject.internal.ConstantBindingBuilderImpl;

        d0 := @parameter0: double;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        specialinvoke r0.<com.google.inject.internal.ConstantBindingBuilderImpl: void toConstant(java.lang.Class,java.lang.Object)>(class "Ljava/lang/Double;", $r1);

        return;
    }

    public void 'to'(float)
    {
        float f0;
        java.lang.Float $r1;
        com.google.inject.internal.ConstantBindingBuilderImpl r0;

        r0 := @this: com.google.inject.internal.ConstantBindingBuilderImpl;

        f0 := @parameter0: float;

        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        specialinvoke r0.<com.google.inject.internal.ConstantBindingBuilderImpl: void toConstant(java.lang.Class,java.lang.Object)>(class "Ljava/lang/Float;", $r1);

        return;
    }

    public void 'to'(short)
    {
        short s0;
        com.google.inject.internal.ConstantBindingBuilderImpl r0;
        java.lang.Short $r1;

        r0 := @this: com.google.inject.internal.ConstantBindingBuilderImpl;

        s0 := @parameter0: short;

        $r1 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s0);

        specialinvoke r0.<com.google.inject.internal.ConstantBindingBuilderImpl: void toConstant(java.lang.Class,java.lang.Object)>(class "Ljava/lang/Short;", $r1);

        return;
    }

    public void 'to'(char)
    {
        char c0;
        java.lang.Character $r1;
        com.google.inject.internal.ConstantBindingBuilderImpl r0;

        r0 := @this: com.google.inject.internal.ConstantBindingBuilderImpl;

        c0 := @parameter0: char;

        $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0);

        specialinvoke r0.<com.google.inject.internal.ConstantBindingBuilderImpl: void toConstant(java.lang.Class,java.lang.Object)>(class "Ljava/lang/Character;", $r1);

        return;
    }

    public void 'to'(byte)
    {
        byte b0;
        java.lang.Byte $r1;
        com.google.inject.internal.ConstantBindingBuilderImpl r0;

        r0 := @this: com.google.inject.internal.ConstantBindingBuilderImpl;

        b0 := @parameter0: byte;

        $r1 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(b0);

        specialinvoke r0.<com.google.inject.internal.ConstantBindingBuilderImpl: void toConstant(java.lang.Class,java.lang.Object)>(class "Ljava/lang/Byte;", $r1);

        return;
    }

    public void 'to'(java.lang.Class)
    {
        java.lang.Class r1;
        com.google.inject.internal.ConstantBindingBuilderImpl r0;

        r0 := @this: com.google.inject.internal.ConstantBindingBuilderImpl;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<com.google.inject.internal.ConstantBindingBuilderImpl: void toConstant(java.lang.Class,java.lang.Object)>(class "Ljava/lang/Class;", r1);

        return;
    }

    public void 'to'(java.lang.Enum)
    {
        java.lang.Class $r2;
        java.lang.Enum r1;
        com.google.inject.internal.ConstantBindingBuilderImpl r0;

        r0 := @this: com.google.inject.internal.ConstantBindingBuilderImpl;

        r1 := @parameter0: java.lang.Enum;

        $r2 = virtualinvoke r1.<java.lang.Enum: java.lang.Class getDeclaringClass()>();

        specialinvoke r0.<com.google.inject.internal.ConstantBindingBuilderImpl: void toConstant(java.lang.Class,java.lang.Object)>($r2, r1);

        return;
    }

    private void toConstant(java.lang.Class, java.lang.Object)
    {
        java.lang.Object[] $r12, $r18;
        com.google.inject.internal.Scoping $r10;
        com.google.inject.Key $r4, $r6, $r14, $r16, r20;
        com.google.inject.internal.InstanceBindingImpl $r8;
        com.google.inject.internal.util.$ImmutableSet $r11;
        com.google.inject.Binder $r13, $r19;
        boolean $z0;
        com.google.inject.internal.BindingImpl $r3;
        java.lang.'annotation'.Annotation $r5, $r17;
        java.lang.Class r0, $r7, $r15;
        java.lang.Object r1, $r9;
        com.google.inject.internal.ConstantBindingBuilderImpl r2;

        r2 := @this: com.google.inject.internal.ConstantBindingBuilderImpl;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r2.<com.google.inject.internal.ConstantBindingBuilderImpl: boolean keyTypeIsSet()>();

        if $z0 == 0 goto label1;

        $r19 = r2.<com.google.inject.internal.ConstantBindingBuilderImpl: com.google.inject.Binder binder>;

        $r18 = newarray (java.lang.Object)[0];

        interfaceinvoke $r19.<com.google.inject.Binder: void addError(java.lang.String,java.lang.Object[])>("Constant value is set more than once.", $r18);

        return;

     label1:
        $r3 = virtualinvoke r2.<com.google.inject.internal.ConstantBindingBuilderImpl: com.google.inject.internal.BindingImpl getBinding()>();

        $r4 = virtualinvoke $r3.<com.google.inject.internal.BindingImpl: com.google.inject.Key getKey()>();

        $r5 = virtualinvoke $r4.<com.google.inject.Key: java.lang.'annotation'.Annotation getAnnotation()>();

        if $r5 == null goto label2;

        $r16 = virtualinvoke $r3.<com.google.inject.internal.BindingImpl: com.google.inject.Key getKey()>();

        $r17 = virtualinvoke $r16.<com.google.inject.Key: java.lang.'annotation'.Annotation getAnnotation()>();

        r20 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class,java.lang.'annotation'.Annotation)>(r0, $r17);

        goto label4;

     label2:
        $r6 = virtualinvoke $r3.<com.google.inject.internal.BindingImpl: com.google.inject.Key getKey()>();

        $r7 = virtualinvoke $r6.<com.google.inject.Key: java.lang.Class getAnnotationType()>();

        if $r7 == null goto label3;

        $r14 = virtualinvoke $r3.<com.google.inject.internal.BindingImpl: com.google.inject.Key getKey()>();

        $r15 = virtualinvoke $r14.<com.google.inject.Key: java.lang.Class getAnnotationType()>();

        r20 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class,java.lang.Class)>(r0, $r15);

        goto label4;

     label3:
        r20 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class)>(r0);

     label4:
        if r1 != null goto label5;

        $r13 = r2.<com.google.inject.internal.ConstantBindingBuilderImpl: com.google.inject.Binder binder>;

        $r12 = newarray (java.lang.Object)[0];

        interfaceinvoke $r13.<com.google.inject.Binder: void addError(java.lang.String,java.lang.Object[])>("Binding to null instances is not allowed. Use toProvider(Providers.of(null)) if this is your intended behaviour.", $r12);

     label5:
        $r8 = new com.google.inject.internal.InstanceBindingImpl;

        $r9 = virtualinvoke $r3.<com.google.inject.internal.BindingImpl: java.lang.Object getSource()>();

        $r10 = virtualinvoke $r3.<com.google.inject.internal.BindingImpl: com.google.inject.internal.Scoping getScoping()>();

        $r11 = staticinvoke <com.google.inject.internal.util.$ImmutableSet: com.google.inject.internal.util.$ImmutableSet of()>();

        specialinvoke $r8.<com.google.inject.internal.InstanceBindingImpl: void <init>(java.lang.Object,com.google.inject.Key,com.google.inject.internal.Scoping,java.util.Set,java.lang.Object)>($r9, r20, $r10, $r11, r1);

        virtualinvoke r2.<com.google.inject.internal.ConstantBindingBuilderImpl: com.google.inject.internal.BindingImpl setBinding(com.google.inject.internal.BindingImpl)>($r8);

        return;
    }

    public java.lang.String toString()
    {
        com.google.inject.internal.ConstantBindingBuilderImpl r0;

        r0 := @this: com.google.inject.internal.ConstantBindingBuilderImpl;

        return "ConstantBindingBuilder";
    }
}
