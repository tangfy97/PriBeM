public abstract class org.waveprotocol.wave.model.operation.wave.InvertibleBlipOperation extends org.waveprotocol.wave.model.operation.wave.BlipOperation
{

    protected void <init>(org.waveprotocol.wave.model.operation.wave.WaveletOperationContext)
    {
        org.waveprotocol.wave.model.operation.wave.InvertibleBlipOperation r0;
        org.waveprotocol.wave.model.operation.wave.WaveletOperationContext r1;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.InvertibleBlipOperation;

        r1 := @parameter0: org.waveprotocol.wave.model.operation.wave.WaveletOperationContext;

        specialinvoke r0.<org.waveprotocol.wave.model.operation.wave.BlipOperation: void <init>(org.waveprotocol.wave.model.operation.wave.WaveletOperationContext)>(r1);

        return;
    }

    public final java.util.List applyAndReturnReverse(org.waveprotocol.wave.model.wave.data.BlipData) throws org.waveprotocol.wave.model.operation.OperationException
    {
        java.util.List $r4;
        org.waveprotocol.wave.model.wave.data.BlipData r1;
        org.waveprotocol.wave.model.operation.wave.InvertibleBlipOperation r0;
        org.waveprotocol.wave.model.operation.wave.BlipOperation $r3;
        org.waveprotocol.wave.model.operation.wave.WaveletOperationContext $r2;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.InvertibleBlipOperation;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.BlipData;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.model.operation.wave.InvertibleBlipOperation: org.waveprotocol.wave.model.operation.wave.WaveletOperationContext createReverseContext(org.waveprotocol.wave.model.wave.data.BlipData)>(r1);

        virtualinvoke r0.<org.waveprotocol.wave.model.operation.wave.InvertibleBlipOperation: void doUpdate(org.waveprotocol.wave.model.wave.data.BlipData)>(r1);

        virtualinvoke r0.<org.waveprotocol.wave.model.operation.wave.InvertibleBlipOperation: void doApply(org.waveprotocol.wave.model.wave.data.BlipData)>(r1);

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.model.operation.wave.InvertibleBlipOperation: org.waveprotocol.wave.model.operation.wave.BlipOperation invert(org.waveprotocol.wave.model.operation.wave.WaveletOperationContext)>($r2);

        $r4 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r3);

        return $r4;
    }

    protected abstract org.waveprotocol.wave.model.operation.wave.BlipOperation invert(org.waveprotocol.wave.model.operation.wave.WaveletOperationContext);

    public volatile java.util.List applyAndReturnReverse(java.lang.Object) throws org.waveprotocol.wave.model.operation.OperationException
    {
        java.util.List $r3;
        org.waveprotocol.wave.model.wave.data.BlipData $r2;
        org.waveprotocol.wave.model.operation.wave.InvertibleBlipOperation r0;
        java.lang.Object r1;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.InvertibleBlipOperation;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.wave.data.BlipData) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.model.operation.wave.InvertibleBlipOperation: java.util.List applyAndReturnReverse(org.waveprotocol.wave.model.wave.data.BlipData)>($r2);

        return $r3;
    }
}
