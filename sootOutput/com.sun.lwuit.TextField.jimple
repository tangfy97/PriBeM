public class com.sun.lwuit.TextField extends com.sun.lwuit.TextArea
{
    private static boolean replaceMenuDefault;
    private long cursorBlinkTime;
    private boolean drawCursor;
    private int cursorY;
    private int cursorX;
    private boolean pressedAndNotReleased;
    private long pressTime;
    private boolean useSoftkeys;
    private long releaseTime;
    private java.lang.String previousText;
    private int commitTimeout;
    private boolean pendingCommit;
    private int pressCount;
    private int lastKeyCode;
    private int pressedKeyCode;
    private static java.lang.String clearText;
    private static java.lang.String t9Text;
    private boolean longClick;
    private com.sun.lwuit.Command originalClearCommand;
    private static java.util.Hashtable inputModes;
    private static java.lang.String[] defaultInputModeOrder;
    private java.lang.String inputMode;
    private java.lang.String[] inputModeOrder;
    private static java.util.Vector firstUppercaseInputMode;
    private int blinkOnTime;
    private int blinkOffTime;
    private static boolean qwertyAutoDetect;
    private boolean qwertyInitialized;
    private static boolean qwertyDevice;
    private boolean qwerty;
    private boolean replaceMenu;
    private com.sun.lwuit.Command[] originalCommands;
    private com.sun.lwuit.util.EventDispatcher listeners;
    private boolean overwriteMode;
    private boolean enableInputScroll;
    private int keyFwd;
    private int keyBack;
    private boolean leftAndRightEditingTrigger;
    private static int defaultChangeInputModeKey;
    private static int defaultSymbolDialogKey;
    private com.sun.lwuit.Command selectCommand;
    private com.sun.lwuit.Command DELETE_COMMAND;
    private com.sun.lwuit.Command T9_COMMAND;
    private static final char[] DEFAULT_SYMBOL_TABLE;
    private static char[] symbolTable;
    private static final java.lang.String[] DEFAULT_KEY_CODES;

    public static void setClearText(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        <com.sun.lwuit.TextField: java.lang.String clearText> = r0;

        return;
    }

    public static void setT9Text(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        <com.sun.lwuit.TextField: java.lang.String t9Text> = r0;

        return;
    }

    public boolean isEnableInputScroll()
    {
        com.sun.lwuit.TextField r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextField;

        $z0 = r0.<com.sun.lwuit.TextField: boolean enableInputScroll>;

        return $z0;
    }

    public void setEnableInputScroll(boolean)
    {
        com.sun.lwuit.TextField r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.TextField;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.TextField: boolean enableInputScroll> = z0;

        return;
    }

    public void <init>()
    {
        long $l0;
        java.lang.String[] $r1, $r3;
        int $i2;
        com.sun.lwuit.TextField$CommandHandler $r10, $r11;
        java.lang.String $r2, $r6, $r8;
        com.sun.lwuit.TextField r0;
        com.sun.lwuit.util.EventDispatcher $r9;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.TextField;

        specialinvoke r0.<com.sun.lwuit.TextArea: void <init>(int,int)>(1, 20);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.sun.lwuit.TextField: long cursorBlinkTime> = $l0;

        r0.<com.sun.lwuit.TextField: boolean drawCursor> = 1;

        r0.<com.sun.lwuit.TextField: int cursorY> = 0;

        $i2 = (int) -1;

        r0.<com.sun.lwuit.TextField: int cursorX> = $i2;

        r0.<com.sun.lwuit.TextField: boolean useSoftkeys> = 1;

        r0.<com.sun.lwuit.TextField: int commitTimeout> = 1000;

        r0.<com.sun.lwuit.TextField: int pressCount> = 0;

        $r1 = <com.sun.lwuit.TextField: java.lang.String[] defaultInputModeOrder>;

        $r2 = $r1[0];

        r0.<com.sun.lwuit.TextField: java.lang.String inputMode> = $r2;

        $r3 = <com.sun.lwuit.TextField: java.lang.String[] defaultInputModeOrder>;

        r0.<com.sun.lwuit.TextField: java.lang.String[] inputModeOrder> = $r3;

        r0.<com.sun.lwuit.TextField: int blinkOnTime> = 800;

        r0.<com.sun.lwuit.TextField: int blinkOffTime> = 200;

        $z0 = <com.sun.lwuit.TextField: boolean qwertyDevice>;

        r0.<com.sun.lwuit.TextField: boolean qwerty> = $z0;

        $z1 = <com.sun.lwuit.TextField: boolean replaceMenuDefault>;

        r0.<com.sun.lwuit.TextField: boolean replaceMenu> = $z1;

        $r9 = new com.sun.lwuit.util.EventDispatcher;

        specialinvoke $r9.<com.sun.lwuit.util.EventDispatcher: void <init>()>();

        r0.<com.sun.lwuit.TextField: com.sun.lwuit.util.EventDispatcher listeners> = $r9;

        r0.<com.sun.lwuit.TextField: boolean enableInputScroll> = 1;

        r0.<com.sun.lwuit.TextField: int keyFwd> = 5;

        r0.<com.sun.lwuit.TextField: int keyBack> = 2;

        r0.<com.sun.lwuit.TextField: boolean leftAndRightEditingTrigger> = 1;

        $r10 = new com.sun.lwuit.TextField$CommandHandler;

        $r6 = <com.sun.lwuit.TextField: java.lang.String clearText>;

        specialinvoke $r10.<com.sun.lwuit.TextField$CommandHandler: void <init>(com.sun.lwuit.TextField,java.lang.String,int)>(r0, $r6, 1);

        r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command DELETE_COMMAND> = $r10;

        $r11 = new com.sun.lwuit.TextField$CommandHandler;

        $r8 = <com.sun.lwuit.TextField: java.lang.String t9Text>;

        specialinvoke $r11.<com.sun.lwuit.TextField$CommandHandler: void <init>(com.sun.lwuit.TextField,java.lang.String,int)>(r0, $r8, 2);

        r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command T9_COMMAND> = $r11;

        virtualinvoke r0.<com.sun.lwuit.TextField: void setUIID(java.lang.String)>("TextField");

        virtualinvoke r0.<com.sun.lwuit.TextField: void setSingleLineTextArea(boolean)>(1);

        return;
    }

    public void <init>(int)
    {
        long $l1;
        java.lang.String[] $r1, $r3;
        int i0, $i3;
        com.sun.lwuit.TextField$CommandHandler $r10, $r11;
        java.lang.String $r2, $r6, $r8;
        com.sun.lwuit.TextField r0;
        com.sun.lwuit.util.EventDispatcher $r9;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.TextField;

        i0 := @parameter0: int;

        specialinvoke r0.<com.sun.lwuit.TextArea: void <init>(int,int)>(1, i0);

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.sun.lwuit.TextField: long cursorBlinkTime> = $l1;

        r0.<com.sun.lwuit.TextField: boolean drawCursor> = 1;

        r0.<com.sun.lwuit.TextField: int cursorY> = 0;

        $i3 = (int) -1;

        r0.<com.sun.lwuit.TextField: int cursorX> = $i3;

        r0.<com.sun.lwuit.TextField: boolean useSoftkeys> = 1;

        r0.<com.sun.lwuit.TextField: int commitTimeout> = 1000;

        r0.<com.sun.lwuit.TextField: int pressCount> = 0;

        $r1 = <com.sun.lwuit.TextField: java.lang.String[] defaultInputModeOrder>;

        $r2 = $r1[0];

        r0.<com.sun.lwuit.TextField: java.lang.String inputMode> = $r2;

        $r3 = <com.sun.lwuit.TextField: java.lang.String[] defaultInputModeOrder>;

        r0.<com.sun.lwuit.TextField: java.lang.String[] inputModeOrder> = $r3;

        r0.<com.sun.lwuit.TextField: int blinkOnTime> = 800;

        r0.<com.sun.lwuit.TextField: int blinkOffTime> = 200;

        $z0 = <com.sun.lwuit.TextField: boolean qwertyDevice>;

        r0.<com.sun.lwuit.TextField: boolean qwerty> = $z0;

        $z1 = <com.sun.lwuit.TextField: boolean replaceMenuDefault>;

        r0.<com.sun.lwuit.TextField: boolean replaceMenu> = $z1;

        $r9 = new com.sun.lwuit.util.EventDispatcher;

        specialinvoke $r9.<com.sun.lwuit.util.EventDispatcher: void <init>()>();

        r0.<com.sun.lwuit.TextField: com.sun.lwuit.util.EventDispatcher listeners> = $r9;

        r0.<com.sun.lwuit.TextField: boolean enableInputScroll> = 1;

        r0.<com.sun.lwuit.TextField: int keyFwd> = 5;

        r0.<com.sun.lwuit.TextField: int keyBack> = 2;

        r0.<com.sun.lwuit.TextField: boolean leftAndRightEditingTrigger> = 1;

        $r10 = new com.sun.lwuit.TextField$CommandHandler;

        $r6 = <com.sun.lwuit.TextField: java.lang.String clearText>;

        specialinvoke $r10.<com.sun.lwuit.TextField$CommandHandler: void <init>(com.sun.lwuit.TextField,java.lang.String,int)>(r0, $r6, 1);

        r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command DELETE_COMMAND> = $r10;

        $r11 = new com.sun.lwuit.TextField$CommandHandler;

        $r8 = <com.sun.lwuit.TextField: java.lang.String t9Text>;

        specialinvoke $r11.<com.sun.lwuit.TextField$CommandHandler: void <init>(com.sun.lwuit.TextField,java.lang.String,int)>(r0, $r8, 2);

        r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command T9_COMMAND> = $r11;

        virtualinvoke r0.<com.sun.lwuit.TextField: void setUIID(java.lang.String)>("TextField");

        virtualinvoke r0.<com.sun.lwuit.TextField: void setSingleLineTextArea(boolean)>(1);

        return;
    }

    public void <init>(java.lang.String)
    {
        long $l0;
        java.lang.String[] $r2, $r4;
        int $i2;
        com.sun.lwuit.TextField$CommandHandler $r11, $r12;
        java.lang.String r1, $r3, $r7, $r9;
        com.sun.lwuit.TextField r0;
        com.sun.lwuit.util.EventDispatcher $r10;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.TextField;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.sun.lwuit.TextArea: void <init>(java.lang.String,int,int)>(r1, 1, 20);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.sun.lwuit.TextField: long cursorBlinkTime> = $l0;

        r0.<com.sun.lwuit.TextField: boolean drawCursor> = 1;

        r0.<com.sun.lwuit.TextField: int cursorY> = 0;

        $i2 = (int) -1;

        r0.<com.sun.lwuit.TextField: int cursorX> = $i2;

        r0.<com.sun.lwuit.TextField: boolean useSoftkeys> = 1;

        r0.<com.sun.lwuit.TextField: int commitTimeout> = 1000;

        r0.<com.sun.lwuit.TextField: int pressCount> = 0;

        $r2 = <com.sun.lwuit.TextField: java.lang.String[] defaultInputModeOrder>;

        $r3 = $r2[0];

        r0.<com.sun.lwuit.TextField: java.lang.String inputMode> = $r3;

        $r4 = <com.sun.lwuit.TextField: java.lang.String[] defaultInputModeOrder>;

        r0.<com.sun.lwuit.TextField: java.lang.String[] inputModeOrder> = $r4;

        r0.<com.sun.lwuit.TextField: int blinkOnTime> = 800;

        r0.<com.sun.lwuit.TextField: int blinkOffTime> = 200;

        $z0 = <com.sun.lwuit.TextField: boolean qwertyDevice>;

        r0.<com.sun.lwuit.TextField: boolean qwerty> = $z0;

        $z1 = <com.sun.lwuit.TextField: boolean replaceMenuDefault>;

        r0.<com.sun.lwuit.TextField: boolean replaceMenu> = $z1;

        $r10 = new com.sun.lwuit.util.EventDispatcher;

        specialinvoke $r10.<com.sun.lwuit.util.EventDispatcher: void <init>()>();

        r0.<com.sun.lwuit.TextField: com.sun.lwuit.util.EventDispatcher listeners> = $r10;

        r0.<com.sun.lwuit.TextField: boolean enableInputScroll> = 1;

        r0.<com.sun.lwuit.TextField: int keyFwd> = 5;

        r0.<com.sun.lwuit.TextField: int keyBack> = 2;

        r0.<com.sun.lwuit.TextField: boolean leftAndRightEditingTrigger> = 1;

        $r11 = new com.sun.lwuit.TextField$CommandHandler;

        $r7 = <com.sun.lwuit.TextField: java.lang.String clearText>;

        specialinvoke $r11.<com.sun.lwuit.TextField$CommandHandler: void <init>(com.sun.lwuit.TextField,java.lang.String,int)>(r0, $r7, 1);

        r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command DELETE_COMMAND> = $r11;

        $r12 = new com.sun.lwuit.TextField$CommandHandler;

        $r9 = <com.sun.lwuit.TextField: java.lang.String t9Text>;

        specialinvoke $r12.<com.sun.lwuit.TextField$CommandHandler: void <init>(com.sun.lwuit.TextField,java.lang.String,int)>(r0, $r9, 2);

        r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command T9_COMMAND> = $r12;

        virtualinvoke r0.<com.sun.lwuit.TextField: void setUIID(java.lang.String)>("TextField");

        virtualinvoke r0.<com.sun.lwuit.TextField: void setSingleLineTextArea(boolean)>(1);

        return;
    }

    public void deleteChar()
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        java.lang.String $r1, $r3, $r5, r7;
        com.sun.lwuit.TextField r0;
        boolean $z0;
        java.lang.StringBuilder $r2, $r4, $r6;

        r0 := @this: com.sun.lwuit.TextField;

        $r1 = virtualinvoke r0.<com.sun.lwuit.TextField: java.lang.String getText()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label5;

        $i1 = virtualinvoke r0.<com.sun.lwuit.TextField: int getCursorPosition()>();

        if $i1 <= 0 goto label5;

        if $i1 != 1 goto label1;

        r0.<com.sun.lwuit.TextField: int cursorX> = 0;

        i7 = 0;

        goto label2;

     label1:
        specialinvoke r0.<com.sun.lwuit.TextField: void decreaseCursor()>();

        i7 = virtualinvoke r0.<com.sun.lwuit.TextField: int getCursorPosition()>();

     label2:
        $z0 = r0.<com.sun.lwuit.TextField: boolean overwriteMode>;

        if $z0 != 0 goto label5;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i7 != $i2 goto label3;

        $i5 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i6 = $i5 - 1;

        r7 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i6);

        goto label4;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, i7);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $i3 = i7 + 1;

        $i4 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i3, $i4);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        specialinvoke r0.<com.sun.lwuit.TextArea: void setText(java.lang.String)>(r7);

        virtualinvoke r0.<com.sun.lwuit.TextField: void commitChange()>();

        specialinvoke r0.<com.sun.lwuit.TextField: void fireDataChanged(int,int)>(0, i7);

     label5:
        return;
    }

    public void <init>(java.lang.String, int)
    {
        long $l1;
        java.lang.String[] $r2, $r4;
        int i0, $i3;
        com.sun.lwuit.TextField$CommandHandler $r11, $r12;
        java.lang.String r1, $r3, $r7, $r9;
        com.sun.lwuit.TextField r0;
        com.sun.lwuit.util.EventDispatcher $r10;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.TextField;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.sun.lwuit.TextArea: void <init>(java.lang.String,int,int)>(r1, 1, i0);

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.sun.lwuit.TextField: long cursorBlinkTime> = $l1;

        r0.<com.sun.lwuit.TextField: boolean drawCursor> = 1;

        r0.<com.sun.lwuit.TextField: int cursorY> = 0;

        $i3 = (int) -1;

        r0.<com.sun.lwuit.TextField: int cursorX> = $i3;

        r0.<com.sun.lwuit.TextField: boolean useSoftkeys> = 1;

        r0.<com.sun.lwuit.TextField: int commitTimeout> = 1000;

        r0.<com.sun.lwuit.TextField: int pressCount> = 0;

        $r2 = <com.sun.lwuit.TextField: java.lang.String[] defaultInputModeOrder>;

        $r3 = $r2[0];

        r0.<com.sun.lwuit.TextField: java.lang.String inputMode> = $r3;

        $r4 = <com.sun.lwuit.TextField: java.lang.String[] defaultInputModeOrder>;

        r0.<com.sun.lwuit.TextField: java.lang.String[] inputModeOrder> = $r4;

        r0.<com.sun.lwuit.TextField: int blinkOnTime> = 800;

        r0.<com.sun.lwuit.TextField: int blinkOffTime> = 200;

        $z0 = <com.sun.lwuit.TextField: boolean qwertyDevice>;

        r0.<com.sun.lwuit.TextField: boolean qwerty> = $z0;

        $z1 = <com.sun.lwuit.TextField: boolean replaceMenuDefault>;

        r0.<com.sun.lwuit.TextField: boolean replaceMenu> = $z1;

        $r10 = new com.sun.lwuit.util.EventDispatcher;

        specialinvoke $r10.<com.sun.lwuit.util.EventDispatcher: void <init>()>();

        r0.<com.sun.lwuit.TextField: com.sun.lwuit.util.EventDispatcher listeners> = $r10;

        r0.<com.sun.lwuit.TextField: boolean enableInputScroll> = 1;

        r0.<com.sun.lwuit.TextField: int keyFwd> = 5;

        r0.<com.sun.lwuit.TextField: int keyBack> = 2;

        r0.<com.sun.lwuit.TextField: boolean leftAndRightEditingTrigger> = 1;

        $r11 = new com.sun.lwuit.TextField$CommandHandler;

        $r7 = <com.sun.lwuit.TextField: java.lang.String clearText>;

        specialinvoke $r11.<com.sun.lwuit.TextField$CommandHandler: void <init>(com.sun.lwuit.TextField,java.lang.String,int)>(r0, $r7, 1);

        r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command DELETE_COMMAND> = $r11;

        $r12 = new com.sun.lwuit.TextField$CommandHandler;

        $r9 = <com.sun.lwuit.TextField: java.lang.String t9Text>;

        specialinvoke $r12.<com.sun.lwuit.TextField$CommandHandler: void <init>(com.sun.lwuit.TextField,java.lang.String,int)>(r0, $r9, 2);

        r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command T9_COMMAND> = $r12;

        virtualinvoke r0.<com.sun.lwuit.TextField: void setSingleLineTextArea(boolean)>(1);

        return;
    }

    public static com.sun.lwuit.TextArea create(java.lang.String, int)
    {
        com.sun.lwuit.impl.LWUITImplementation $r1;
        int i0;
        java.lang.String r3;
        com.sun.lwuit.TextField $r2;
        com.sun.lwuit.TextArea $r4;
        com.sun.lwuit.Display $r0;
        boolean $z0;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $z0 = virtualinvoke $r1.<com.sun.lwuit.impl.LWUITImplementation: boolean isNativeInputSupported()>();

        if $z0 == 0 goto label1;

        $r4 = new com.sun.lwuit.TextArea;

        specialinvoke $r4.<com.sun.lwuit.TextArea: void <init>(java.lang.String,int,int)>(r3, 1, i0);

        return $r4;

     label1:
        $r2 = new com.sun.lwuit.TextField;

        specialinvoke $r2.<com.sun.lwuit.TextField: void <init>(java.lang.String,int)>(r3, i0);

        return $r2;
    }

    public static com.sun.lwuit.TextArea create()
    {
        com.sun.lwuit.TextArea $r0;

        $r0 = staticinvoke <com.sun.lwuit.TextField: com.sun.lwuit.TextArea create(int)>(20);

        return $r0;
    }

    public static com.sun.lwuit.TextArea create(int)
    {
        int i0;
        com.sun.lwuit.TextArea $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <com.sun.lwuit.TextField: com.sun.lwuit.TextArea create(java.lang.String,int)>("", i0);

        return $r0;
    }

    public static com.sun.lwuit.TextArea create(java.lang.String)
    {
        java.lang.String r0;
        com.sun.lwuit.TextArea $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.sun.lwuit.TextField: com.sun.lwuit.TextArea create(java.lang.String,int)>(r0, 20);

        return $r1;
    }

    protected void commitChange()
    {
        com.sun.lwuit.TextField r0;

        r0 := @this: com.sun.lwuit.TextField;

        r0.<com.sun.lwuit.TextField: boolean pendingCommit> = 0;

        r0.<com.sun.lwuit.TextField: java.lang.String previousText> = null;

        r0.<com.sun.lwuit.TextField: int pressCount> = 0;

        return;
    }

    public boolean isPendingCommit()
    {
        com.sun.lwuit.TextField r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextField;

        $z0 = r0.<com.sun.lwuit.TextField: boolean pendingCommit>;

        return $z0;
    }

    public void setCommitTimeout(int)
    {
        int i0;
        com.sun.lwuit.TextField r0;

        r0 := @this: com.sun.lwuit.TextField;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.TextField: int commitTimeout> = i0;

        return;
    }

    public int getCommitTimeout()
    {
        int $i0;
        com.sun.lwuit.TextField r0;

        r0 := @this: com.sun.lwuit.TextField;

        $i0 = r0.<com.sun.lwuit.TextField: int commitTimeout>;

        return $i0;
    }

    public void setInputMode(java.lang.String)
    {
        java.lang.String r1;
        com.sun.lwuit.TextField r0;

        r0 := @this: com.sun.lwuit.TextField;

        r1 := @parameter0: java.lang.String;

        r0.<com.sun.lwuit.TextField: java.lang.String inputMode> = r1;

        virtualinvoke r0.<com.sun.lwuit.TextField: void repaint()>();

        return;
    }

    public java.lang.String getInputMode()
    {
        java.lang.String $r1;
        com.sun.lwuit.TextField r0;

        r0 := @this: com.sun.lwuit.TextField;

        $r1 = r0.<com.sun.lwuit.TextField: java.lang.String inputMode>;

        return $r1;
    }

    protected boolean isChangeInputMode(int)
    {
        int i0, $i1;
        com.sun.lwuit.TextField r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextField;

        i0 := @parameter0: int;

        $i1 = <com.sun.lwuit.TextField: int defaultChangeInputModeKey>;

        if i0 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static void initInputModes()
    {
        java.lang.String[] $r4, $r7, $r17, $r21;
        java.lang.Integer $r11, $r16, $r20;
        java.util.Vector $r1;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        java.lang.String $r15, $r18, $r19, $r22;
        java.util.Hashtable $r0, $r2, $r3, $r5, $r6, $r8, $r9, $r10;
        java.lang.StringBuilder $r12, $r13, $r14;

        $r0 = <com.sun.lwuit.TextField: java.util.Hashtable inputModes>;

        if $r0 != null goto label7;

        $r1 = <com.sun.lwuit.TextField: java.util.Vector firstUppercaseInputMode>;

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>("Abc");

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        <com.sun.lwuit.TextField: java.util.Hashtable inputModes> = $r2;

        $r3 = new java.util.Hashtable;

        specialinvoke $r3.<java.util.Hashtable: void <init>()>();

        i5 = 0;

     label1:
        $r4 = <com.sun.lwuit.TextField: java.lang.String[] DEFAULT_KEY_CODES>;

        $i0 = lengthof $r4;

        if i5 >= $i0 goto label2;

        $r20 = new java.lang.Integer;

        $i4 = 48 + i5;

        specialinvoke $r20.<java.lang.Integer: void <init>(int)>($i4);

        $r21 = <com.sun.lwuit.TextField: java.lang.String[] DEFAULT_KEY_CODES>;

        $r22 = $r21[i5];

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r22);

        i5 = i5 + 1;

        goto label1;

     label2:
        $r5 = <com.sun.lwuit.TextField: java.util.Hashtable inputModes>;

        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("ABC", $r3);

        $r6 = new java.util.Hashtable;

        specialinvoke $r6.<java.util.Hashtable: void <init>()>();

        i6 = 0;

     label3:
        $r7 = <com.sun.lwuit.TextField: java.lang.String[] DEFAULT_KEY_CODES>;

        $i1 = lengthof $r7;

        if i6 >= $i1 goto label4;

        $r16 = new java.lang.Integer;

        $i3 = 48 + i6;

        specialinvoke $r16.<java.lang.Integer: void <init>(int)>($i3);

        $r17 = <com.sun.lwuit.TextField: java.lang.String[] DEFAULT_KEY_CODES>;

        $r18 = $r17[i6];

        $r19 = virtualinvoke $r18.<java.lang.String: java.lang.String toLowerCase()>();

        virtualinvoke $r6.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r19);

        i6 = i6 + 1;

        goto label3;

     label4:
        $r8 = <com.sun.lwuit.TextField: java.util.Hashtable inputModes>;

        virtualinvoke $r8.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("abc", $r6);

        $r9 = new java.util.Hashtable;

        specialinvoke $r9.<java.util.Hashtable: void <init>()>();

        i7 = 0;

     label5:
        if i7 >= 10 goto label6;

        $r11 = new java.lang.Integer;

        $i2 = 48 + i7;

        specialinvoke $r11.<java.lang.Integer: void <init>(int)>($i2);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r15);

        i7 = i7 + 1;

        goto label5;

     label6:
        $r10 = <com.sun.lwuit.TextField: java.util.Hashtable inputModes>;

        virtualinvoke $r10.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("123", $r9);

     label7:
        return;
    }

    public static void addInputMode(java.lang.String, java.util.Hashtable, boolean)
    {
        java.util.Vector $r3;
        java.lang.String r0;
        java.util.Hashtable r1, $r2;
        boolean z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Hashtable;

        z0 := @parameter2: boolean;

        staticinvoke <com.sun.lwuit.TextField: void initInputModes()>();

        $r2 = <com.sun.lwuit.TextField: java.util.Hashtable inputModes>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

        if z0 == 0 goto label1;

        $r3 = <com.sun.lwuit.TextField: java.util.Vector firstUppercaseInputMode>;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>(r0);

     label1:
        return;
    }

    public java.lang.String[] getInputModeOrder()
    {
        java.lang.String[] $r1;
        com.sun.lwuit.TextField r0;

        r0 := @this: com.sun.lwuit.TextField;

        $r1 = r0.<com.sun.lwuit.TextField: java.lang.String[] inputModeOrder>;

        return $r1;
    }

    public void setInputModeOrder(java.lang.String[])
    {
        java.lang.String[] r1;
        java.lang.String $r2;
        com.sun.lwuit.TextField r0;

        r0 := @this: com.sun.lwuit.TextField;

        r1 := @parameter0: java.lang.String[];

        r0.<com.sun.lwuit.TextField: java.lang.String[] inputModeOrder> = r1;

        $r2 = r1[0];

        r0.<com.sun.lwuit.TextField: java.lang.String inputMode> = $r2;

        return;
    }

    public static java.lang.String[] getDefaultInputModeOrder()
    {
        java.lang.String[] $r0;

        $r0 = <com.sun.lwuit.TextField: java.lang.String[] defaultInputModeOrder>;

        return $r0;
    }

    public static void setDefaultInputModeOrder(java.lang.String[])
    {
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        <com.sun.lwuit.TextField: java.lang.String[] defaultInputModeOrder> = r0;

        return;
    }

    private java.lang.String pickLowerOrUpper(java.lang.String)
    {
        int $i0, $i1, $i4, i5, $i7, $i9, $i10, $i11, $i13;
        java.lang.String $r1, r2, $r3, $r4, $r5;
        com.sun.lwuit.TextField r0;
        boolean $z0;
        char $c2, $c3;

        r0 := @this: com.sun.lwuit.TextField;

        r2 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<com.sun.lwuit.TextField: int getCursorPosition()>();

        i5 = $i0 - 1;

        $z0 = r0.<com.sun.lwuit.TextField: boolean pendingCommit>;

        if $z0 == 0 goto label1;

        $i7 = (int) -1;

        i5 = i5 + $i7;

     label1:
        $r1 = virtualinvoke r0.<com.sun.lwuit.TextField: java.lang.String getText()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i5 < $i1 goto label2;

        $i4 = virtualinvoke $r1.<java.lang.String: int length()>();

        i5 = $i4 - 1;

     label2:
        $i9 = (int) -1;

        if i5 <= $i9 goto label5;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i5);

        $i10 = (int) $c2;

        if $i10 != 46 goto label3;

        $r5 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>();

        return $r5;

     label3:
        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i5);

        $i11 = (int) $c3;

        if $i11 == 32 goto label4;

        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();

        return $r4;

     label4:
        $i13 = (int) -1;

        i5 = i5 + $i13;

        goto label2;

     label5:
        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>();

        return $r3;
    }

    protected java.lang.String getLongClickInputMode()
    {
        com.sun.lwuit.TextField r0;

        r0 := @this: com.sun.lwuit.TextField;

        return "123";
    }

    protected char getCharPerKeyCode(int, int, boolean)
    {
        java.lang.Integer $r6;
        java.util.Vector $r1;
        int i0, $i1, i3, i4;
        java.lang.String r2, $r8;
        com.sun.lwuit.TextField r0;
        java.util.Hashtable $r3, $r5;
        boolean z0, $z1;
        char $c2;
        java.lang.Object $r4, $r7;

        r0 := @this: com.sun.lwuit.TextField;

        i3 := @parameter0: int;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        staticinvoke <com.sun.lwuit.TextField: void initInputModes()>();

        r2 = r0.<com.sun.lwuit.TextField: java.lang.String inputMode>;

        if z0 == 0 goto label1;

        r2 = virtualinvoke r0.<com.sun.lwuit.TextField: java.lang.String getLongClickInputMode()>();

        goto label2;

     label1:
        $r1 = <com.sun.lwuit.TextField: java.util.Vector firstUppercaseInputMode>;

        $z1 = virtualinvoke $r1.<java.util.Vector: boolean contains(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

        r2 = specialinvoke r0.<com.sun.lwuit.TextField: java.lang.String pickLowerOrUpper(java.lang.String)>(r2);

     label2:
        $r3 = <com.sun.lwuit.TextField: java.util.Hashtable inputModes>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        $r5 = (java.util.Hashtable) $r4;

        $r6 = new java.lang.Integer;

        specialinvoke $r6.<java.lang.Integer: void <init>(int)>(i0);

        $r7 = virtualinvoke $r5.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = (java.lang.String) $r7;

        if $r8 == null goto label3;

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        i4 = i3 % $i1;

        $c2 = virtualinvoke $r8.<java.lang.String: char charAt(int)>(i4);

        return $c2;

     label3:
        return 0;
    }

    void onClick()
    {
        com.sun.lwuit.TextField r0;

        r0 := @this: com.sun.lwuit.TextField;

        return;
    }

    public void setCursorPosition(int)
    {
        java.lang.IllegalArgumentException $r8;
        int $i0, $i1, $i2, i3, $i5;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r1, $r6;
        com.sun.lwuit.TextField r0;

        r0 := @this: com.sun.lwuit.TextField;

        i3 := @parameter0: int;

        $i5 = (int) -1;

        if i3 >= $i5 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal cursor position: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r8;

     label1:
        $r1 = virtualinvoke r0.<com.sun.lwuit.TextField: java.lang.String getText()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i0);

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        specialinvoke r0.<com.sun.lwuit.TextField: void updateCursorLocation(int)>($i2);

        return;
    }

    private void increaseCursor()
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.String $r1;
        com.sun.lwuit.TextField r0;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.TextField;

        $i0 = r0.<com.sun.lwuit.TextField: int cursorX>;

        $i1 = $i0 + 1;

        r0.<com.sun.lwuit.TextField: int cursorX> = $i1;

        $r1 = specialinvoke r0.<com.sun.lwuit.TextField: java.lang.String getCurrentTextLine()>();

        $i2 = r0.<com.sun.lwuit.TextField: int cursorX>;

        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i2 > $i3 goto label1;

        $i10 = r0.<com.sun.lwuit.TextField: int cursorY>;

        $i11 = virtualinvoke r0.<com.sun.lwuit.TextField: int getLines()>();

        if $i10 < $i11 goto label4;

     label1:
        $z0 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isSingleLineTextArea()>();

        if $z0 == 0 goto label2;

        r0.<com.sun.lwuit.TextField: int cursorX> = 0;

        return;

     label2:
        $i4 = r0.<com.sun.lwuit.TextField: int cursorY>;

        $i5 = $i4 + 1;

        r0.<com.sun.lwuit.TextField: int cursorY> = $i5;

        $i6 = r0.<com.sun.lwuit.TextField: int cursorY>;

        $i7 = virtualinvoke r0.<com.sun.lwuit.TextField: int getLines()>();

        if $i6 <= $i7 goto label3;

        r0.<com.sun.lwuit.TextField: int cursorY> = 0;

        $z1 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isCursorPositionCycle()>();

        if $z1 != 0 goto label4;

        $i8 = virtualinvoke r0.<com.sun.lwuit.TextField: int getLines()>();

        r0.<com.sun.lwuit.TextField: int cursorY> = $i8;

        $i9 = virtualinvoke $r1.<java.lang.String: int length()>();

        r0.<com.sun.lwuit.TextField: int cursorX> = $i9;

        goto label4;

     label3:
        r0.<com.sun.lwuit.TextField: int cursorX> = 0;

     label4:
        specialinvoke r0.<com.sun.lwuit.TextField: void updateScroll()>();

        return;
    }

    private void decreaseCursor()
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.String $r1, $r2;
        com.sun.lwuit.TextField r0;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.TextField;

        $i0 = r0.<com.sun.lwuit.TextField: int cursorX>;

        $i1 = $i0 - 1;

        r0.<com.sun.lwuit.TextField: int cursorX> = $i1;

        $i2 = r0.<com.sun.lwuit.TextField: int cursorX>;

        if $i2 < 0 goto label1;

        $i11 = r0.<com.sun.lwuit.TextField: int cursorY>;

        $i12 = virtualinvoke r0.<com.sun.lwuit.TextField: int getLines()>();

        if $i11 < $i12 goto label4;

     label1:
        $z0 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isSingleLineTextArea()>();

        if $z0 == 0 goto label2;

        $r2 = specialinvoke r0.<com.sun.lwuit.TextField: java.lang.String getCurrentTextLine()>();

        $i10 = virtualinvoke $r2.<java.lang.String: int length()>();

        r0.<com.sun.lwuit.TextField: int cursorX> = $i10;

        return;

     label2:
        $i3 = r0.<com.sun.lwuit.TextField: int cursorY>;

        $i4 = $i3 - 1;

        r0.<com.sun.lwuit.TextField: int cursorY> = $i4;

        $i5 = r0.<com.sun.lwuit.TextField: int cursorY>;

        if $i5 >= 0 goto label3;

        $i8 = virtualinvoke r0.<com.sun.lwuit.TextField: int getLines()>();

        $i9 = $i8 - 1;

        r0.<com.sun.lwuit.TextField: int cursorY> = $i9;

        $z1 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isCursorPositionCycle()>();

        if $z1 != 0 goto label4;

        r0.<com.sun.lwuit.TextField: int cursorY> = 0;

        r0.<com.sun.lwuit.TextField: int cursorX> = 0;

        goto label4;

     label3:
        $i6 = r0.<com.sun.lwuit.TextField: int cursorY>;

        $r1 = virtualinvoke r0.<com.sun.lwuit.TextField: java.lang.String getTextAt(int)>($i6);

        $i7 = virtualinvoke $r1.<java.lang.String: int length()>();

        r0.<com.sun.lwuit.TextField: int cursorX> = $i7;

     label4:
        specialinvoke r0.<com.sun.lwuit.TextField: void updateScroll()>();

        return;
    }

    private void increaseCursorLine()
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r1;
        com.sun.lwuit.TextField r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextField;

        $i0 = r0.<com.sun.lwuit.TextField: int cursorY>;

        $i1 = $i0 + 1;

        r0.<com.sun.lwuit.TextField: int cursorY> = $i1;

        $i2 = r0.<com.sun.lwuit.TextField: int cursorY>;

        $i3 = virtualinvoke r0.<com.sun.lwuit.TextField: int getLines()>();

        if $i2 < $i3 goto label2;

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isCursorPositionCycle()>();

        if $z0 == 0 goto label1;

        r0.<com.sun.lwuit.TextField: int cursorY> = 0;

        goto label2;

     label1:
        $i5 = r0.<com.sun.lwuit.TextField: int cursorY>;

        $i6 = $i5 - 1;

        r0.<com.sun.lwuit.TextField: int cursorY> = $i6;

     label2:
        $i7 = r0.<com.sun.lwuit.TextField: int cursorY>;

        $r1 = virtualinvoke r0.<com.sun.lwuit.TextField: java.lang.String getTextAt(int)>($i7);

        $i8 = r0.<com.sun.lwuit.TextField: int cursorX>;

        $i9 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i8 <= $i9 goto label3;

        $i4 = virtualinvoke $r1.<java.lang.String: int length()>();

        r0.<com.sun.lwuit.TextField: int cursorX> = $i4;

     label3:
        specialinvoke r0.<com.sun.lwuit.TextField: void updateScroll()>();

        return;
    }

    private void decreaseCursorLine()
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.String $r1;
        com.sun.lwuit.TextField r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextField;

        $i0 = r0.<com.sun.lwuit.TextField: int cursorY>;

        $i1 = $i0 - 1;

        r0.<com.sun.lwuit.TextField: int cursorY> = $i1;

        $i2 = r0.<com.sun.lwuit.TextField: int cursorY>;

        if $i2 >= 0 goto label2;

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isCursorPositionCycle()>();

        if $z0 == 0 goto label1;

        $i6 = virtualinvoke r0.<com.sun.lwuit.TextField: int getLines()>();

        $i7 = $i6 - 1;

        r0.<com.sun.lwuit.TextField: int cursorY> = $i7;

        goto label2;

     label1:
        $i4 = r0.<com.sun.lwuit.TextField: int cursorY>;

        $i5 = $i4 + 1;

        r0.<com.sun.lwuit.TextField: int cursorY> = $i5;

     label2:
        $i8 = r0.<com.sun.lwuit.TextField: int cursorY>;

        $r1 = virtualinvoke r0.<com.sun.lwuit.TextField: java.lang.String getTextAt(int)>($i8);

        $i9 = r0.<com.sun.lwuit.TextField: int cursorX>;

        $i10 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i9 <= $i10 goto label3;

        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

        r0.<com.sun.lwuit.TextField: int cursorX> = $i3;

     label3:
        specialinvoke r0.<com.sun.lwuit.TextField: void updateScroll()>();

        return;
    }

    private void updateScroll()
    {
        com.sun.lwuit.geom.Rectangle $r3;
        com.sun.lwuit.plaf.Style $r1;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6;
        com.sun.lwuit.TextField r0;
        com.sun.lwuit.Font $r2;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.TextField;

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isSingleLineTextArea()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isScrollableY()>();

        if $z1 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.sun.lwuit.TextField: com.sun.lwuit.plaf.Style getStyle()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        $i0 = virtualinvoke r0.<com.sun.lwuit.TextField: int getRowsGap()>();

        $i1 = virtualinvoke $r2.<com.sun.lwuit.Font: int getHeight()>();

        i2 = $i1 + $i0;

        $r3 = new com.sun.lwuit.geom.Rectangle;

        $i3 = virtualinvoke r0.<com.sun.lwuit.TextField: int getScrollX()>();

        $i4 = virtualinvoke r0.<com.sun.lwuit.TextField: int getCursorY()>();

        $i5 = $i4 * i2;

        $i6 = virtualinvoke r0.<com.sun.lwuit.TextField: int getWidth()>();

        specialinvoke $r3.<com.sun.lwuit.geom.Rectangle: void <init>(int,int,int,int)>($i3, $i5, $i6, i2);

        virtualinvoke r0.<com.sun.lwuit.TextField: void scrollRectToVisible(com.sun.lwuit.geom.Rectangle,com.sun.lwuit.Component)>($r3, r0);

     label1:
        return;
    }

    private void updateCursorLocation(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, i17, i18, i19, $i20, $i21;
        java.lang.String $r1, $r2, r3;
        com.sun.lwuit.TextField r0;
        boolean $z0;
        char $c14, $c16;

        r0 := @this: com.sun.lwuit.TextField;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isSingleLineTextArea()>();

        if $z0 == 0 goto label1;

        r0.<com.sun.lwuit.TextField: int cursorX> = i0;

        return;

     label1:
        $r1 = virtualinvoke r0.<com.sun.lwuit.TextField: java.lang.String getText()>();

        r3 = "";

        i17 = 0;

        i18 = 0;

        i19 = 0;

     label2:
        if i18 > i0 goto label5;

        $i9 = virtualinvoke r0.<com.sun.lwuit.TextField: int getLines()>();

        if i19 >= $i9 goto label5;

        $r2 = virtualinvoke r0.<com.sun.lwuit.TextField: java.lang.String getTextAt(int)>(i19);

        r3 = $r2;

        $i10 = virtualinvoke $r2.<java.lang.String: int length()>();

        i17 = $i10;

        $i11 = i18 + $i10;

        $i12 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i11 >= $i12 goto label4;

        $i13 = i18 + $i10;

        $c14 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i13);

        $i20 = (int) $c14;

        if $i20 == 10 goto label3;

        $i15 = i18 + $i10;

        $c16 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i15);

        $i21 = (int) $c16;

        if $i21 != 32 goto label4;

     label3:
        i17 = $i10 + 1;

     label4:
        i18 = i18 + i17;

        i19 = i19 + 1;

        goto label2;

     label5:
        $i1 = i19 - 1;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        r0.<com.sun.lwuit.TextField: int cursorY> = $i2;

        $i3 = i18 - i0;

        $i4 = i17 - $i3;

        r0.<com.sun.lwuit.TextField: int cursorX> = $i4;

        $i5 = r0.<com.sun.lwuit.TextField: int cursorX>;

        if $i5 != i17 goto label6;

        $i6 = virtualinvoke r3.<java.lang.String: int length()>();

        if i17 <= $i6 goto label6;

        $i7 = r0.<com.sun.lwuit.TextField: int cursorX>;

        $i8 = $i7 - 1;

        r0.<com.sun.lwuit.TextField: int cursorX> = $i8;

     label6:
        return;
    }

    private java.lang.String getCurrentTextLine()
    {
        int $i0;
        java.lang.String $r1, $r2;
        com.sun.lwuit.TextField r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextField;

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isSingleLineTextArea()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.sun.lwuit.TextField: java.lang.String getText()>();

        return $r2;

     label1:
        $i0 = virtualinvoke r0.<com.sun.lwuit.TextField: int getCursorY()>();

        $r1 = virtualinvoke r0.<com.sun.lwuit.TextField: java.lang.String getTextAt(int)>($i0);

        return $r1;
    }

    private void moveCursor(int)
    {
        int i0, $i1, $i2;
        com.sun.lwuit.TextField r0;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.TextField;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean handlesInput()>();

        if $z0 == 0 goto label4;

        $i1 = r0.<com.sun.lwuit.TextField: int keyFwd>;

        if i0 != $i1 goto label1;

        specialinvoke r0.<com.sun.lwuit.TextField: void increaseCursor()>();

        virtualinvoke r0.<com.sun.lwuit.TextField: void repaint()>();

        goto label2;

     label1:
        $i2 = r0.<com.sun.lwuit.TextField: int keyBack>;

        if i0 != $i2 goto label2;

        specialinvoke r0.<com.sun.lwuit.TextField: void decreaseCursor()>();

        virtualinvoke r0.<com.sun.lwuit.TextField: void repaint()>();

     label2:
        $z1 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isSingleLineTextArea()>();

        if $z1 != 0 goto label4;

        if i0 != 1 goto label3;

        specialinvoke r0.<com.sun.lwuit.TextField: void decreaseCursorLine()>();

        virtualinvoke r0.<com.sun.lwuit.TextField: void repaint()>();

        goto label4;

     label3:
        if i0 != 6 goto label4;

        specialinvoke r0.<com.sun.lwuit.TextField: void increaseCursorLine()>();

        virtualinvoke r0.<com.sun.lwuit.TextField: void repaint()>();

     label4:
        return;
    }

    public int getCursorPosition()
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i12, $i13, i14, i15, $i17, $i18, $i19;
        java.lang.String $r1, $r2, $r3, $r4;
        com.sun.lwuit.TextField r0;
        boolean $z0;
        char $c10, $c11;

        r0 := @this: com.sun.lwuit.TextField;

        $r1 = virtualinvoke r0.<com.sun.lwuit.TextField: java.lang.String getText()>();

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        specialinvoke r0.<com.sun.lwuit.TextField: void updateCursorLocation(int)>(0);

        return 0;

     label2:
        $i1 = r0.<com.sun.lwuit.TextField: int cursorX>;

        $i17 = (int) -1;

        if $i1 != $i17 goto label3;

        $r4 = virtualinvoke r0.<com.sun.lwuit.TextField: java.lang.String getText()>();

        $i13 = virtualinvoke $r4.<java.lang.String: int length()>();

        specialinvoke r0.<com.sun.lwuit.TextField: void updateCursorLocation(int)>($i13);

     label3:
        $z0 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isSingleLineTextArea()>();

        if $z0 == 0 goto label4;

        $i12 = virtualinvoke r0.<com.sun.lwuit.TextField: int getCursorX()>();

        return $i12;

     label4:
        i14 = 0;

        i15 = 0;

     label5:
        $i2 = r0.<com.sun.lwuit.TextField: int cursorY>;

        if i15 >= $i2 goto label8;

        $i7 = virtualinvoke r0.<com.sun.lwuit.TextField: int getLines()>();

        if i15 >= $i7 goto label8;

        $r3 = virtualinvoke r0.<com.sun.lwuit.TextField: java.lang.String getTextAt(int)>(i15);

        $i8 = virtualinvoke $r3.<java.lang.String: int length()>();

        i14 = i14 + $i8;

        $i9 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i14 >= $i9 goto label7;

        $c10 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i14);

        $i18 = (int) $c10;

        if $i18 == 10 goto label6;

        $c11 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i14);

        $i19 = (int) $c11;

        if $i19 != 32 goto label7;

     label6:
        i14 = i14 + 1;

     label7:
        i15 = i15 + 1;

        goto label5;

     label8:
        $r2 = virtualinvoke r0.<com.sun.lwuit.TextField: java.lang.String getText()>();

        $i3 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i4 = r0.<com.sun.lwuit.TextField: int cursorX>;

        $i5 = i14 + $i4;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i5);

        return $i6;
    }

    public int getCursorY()
    {
        int $i0;
        com.sun.lwuit.TextField r0;

        r0 := @this: com.sun.lwuit.TextField;

        $i0 = r0.<com.sun.lwuit.TextField: int cursorY>;

        return $i0;
    }

    public int getCursorX()
    {
        int $i0;
        com.sun.lwuit.TextField r0;

        r0 := @this: com.sun.lwuit.TextField;

        $i0 = r0.<com.sun.lwuit.TextField: int cursorX>;

        return $i0;
    }

    public void setText(java.lang.String)
    {
        int $i0, $i1, i2, $i4;
        java.lang.String r1;
        com.sun.lwuit.TextField r0;

        r0 := @this: com.sun.lwuit.TextField;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.sun.lwuit.TextArea: void setText(java.lang.String)>(r1);

        $i4 = (int) -1;

        specialinvoke r0.<com.sun.lwuit.TextField: void fireDataChanged(int,int)>(2, $i4);

        $i0 = virtualinvoke r0.<com.sun.lwuit.TextField: int getCursorPosition()>();

        i2 = $i0;

        if $i0 >= 0 goto label1;

        i2 = virtualinvoke r1.<java.lang.String: int length()>();

        goto label2;

     label1:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= $i1 goto label2;

        i2 = virtualinvoke r1.<java.lang.String: int length()>();

     label2:
        virtualinvoke r0.<com.sun.lwuit.TextField: void setCursorPosition(int)>(i2);

        return;
    }

    public void clear()
    {
        com.sun.lwuit.TextField r0;

        r0 := @this: com.sun.lwuit.TextField;

        virtualinvoke r0.<com.sun.lwuit.TextField: void setText(java.lang.String)>("");

        virtualinvoke r0.<com.sun.lwuit.TextField: void commitChange()>();

        return;
    }

    private void longClick(int)
    {
        int i0, $i1;
        com.sun.lwuit.TextField r0;
        com.sun.lwuit.Display $r1;

        r0 := @this: com.sun.lwuit.TextField;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.TextField: boolean longClick> = 1;

        specialinvoke r0.<com.sun.lwuit.TextField: boolean keyReleaseOrLongClick(int,boolean)>(i0, 1);

        $r1 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $i1 = virtualinvoke $r1.<com.sun.lwuit.Display: int getGameAction(int)>(i0);

        specialinvoke r0.<com.sun.lwuit.TextField: void moveCursor(int)>($i1);

        return;
    }

    protected boolean isClearKey(int)
    {
        int i0, $i1, $i2;
        com.sun.lwuit.TextField r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextField;

        i0 := @parameter0: int;

        $i1 = <com.sun.lwuit.Form: int clearSK>;

        if i0 == $i1 goto label1;

        $i2 = <com.sun.lwuit.Form: int backspaceSK>;

        if i0 != $i2 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    protected void longKeyPress(int)
    {
        int i0;
        com.sun.lwuit.TextField r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextField;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isClearKey(int)>(i0);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.sun.lwuit.TextField: void setText(java.lang.String)>("");

     label1:
        return;
    }

    public boolean isQwertyInput()
    {
        int $i0;
        com.sun.lwuit.TextField r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.sun.lwuit.Display $r1;

        r0 := @this: com.sun.lwuit.TextField;

        $z0 = r0.<com.sun.lwuit.TextField: boolean qwertyInitialized>;

        if $z0 != 0 goto label5;

        r0.<com.sun.lwuit.TextField: boolean qwertyInitialized> = 1;

        $r1 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $i0 = virtualinvoke $r1.<com.sun.lwuit.Display: int getKeyboardType()>();

        if $i0 != 0 goto label1;

        $z3 = <com.sun.lwuit.TextField: boolean qwertyDevice>;

        r0.<com.sun.lwuit.TextField: boolean qwerty> = $z3;

        goto label5;

     label1:
        if $i0 == 2 goto label2;

        if $i0 != 3 goto label3;

     label2:
        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        r0.<com.sun.lwuit.TextField: boolean qwerty> = $z4;

        $z1 = <com.sun.lwuit.TextField: boolean qwertyDevice>;

        if $z1 != 0 goto label5;

        $z2 = r0.<com.sun.lwuit.TextField: boolean qwerty>;

        <com.sun.lwuit.TextField: boolean qwertyDevice> = $z2;

     label5:
        $z5 = r0.<com.sun.lwuit.TextField: boolean qwerty>;

        return $z5;
    }

    public void setQwertyInput(boolean)
    {
        com.sun.lwuit.TextField r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.TextField;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.TextField: boolean qwerty> = z0;

        return;
    }

    protected boolean isImmediateInputMode(java.lang.String)
    {
        java.lang.String r0, $r1;
        com.sun.lwuit.TextField r2;
        boolean $z0;

        r2 := @this: com.sun.lwuit.TextField;

        r0 := @parameter0: java.lang.String;

        $r1 = "123";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        return $z0;
    }

    private boolean keyReleaseOrLongClick(int, boolean)
    {
        java.lang.StringBuilder $r12, $r13, $r14, $r16, $r19, $r20, $r24, $r26, $r27, $r28, $r30, $r31, $r32, $r36, $r37, $r38;
        java.lang.String $r3, $r4, $r7, $r9, $r10, $r11, $r15, $r17, $r18, $r21, $r22, $r23, $r25, $r29, $r33, $r34, $r35, $r39, $r40, $r41;
        com.sun.lwuit.TextField r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.String[] $r1, $r2, $r5, $r6, $r8;
        int i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, i21, i22, i23;
        char $c3, $c19;

        r0 := @this: com.sun.lwuit.TextField;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i1 = r0.<com.sun.lwuit.TextField: int lastKeyCode>;

        if $i1 == i0 goto label01;

        $z7 = r0.<com.sun.lwuit.TextField: boolean pendingCommit>;

        if $z7 == 0 goto label01;

        virtualinvoke r0.<com.sun.lwuit.TextField: void commitChange()>();

     label01:
        r0.<com.sun.lwuit.TextField: int lastKeyCode> = i0;

        $z8 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isClearKey(int)>(i0);

        $i20 = virtualinvoke r0.<com.sun.lwuit.TextField: int getCursorPosition()>();

        i21 = $i20;

        $z9 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isQwertyInput()>();

        if $z9 == 0 goto label04;

        if $z8 != 0 goto label04;

        if i0 <= 0 goto label12;

        $r35 = r0.<com.sun.lwuit.TextField: java.lang.String previousText>;

        if $r35 != null goto label02;

        $r40 = virtualinvoke r0.<com.sun.lwuit.TextField: java.lang.String getText()>();

        r0.<com.sun.lwuit.TextField: java.lang.String previousText> = $r40;

     label02:
        if $i20 >= 0 goto label03;

        i21 = 0;

        virtualinvoke r0.<com.sun.lwuit.TextField: void setCursorPosition(int)>(0);

     label03:
        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c19 = (char) i0;

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c19);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.sun.lwuit.TextField: void insertChars(java.lang.String)>($r39);

        virtualinvoke r0.<com.sun.lwuit.TextField: void commitChange()>();

        specialinvoke r0.<com.sun.lwuit.TextField: void fireDataChanged(int,int)>(1, i21);

        return 1;

     label04:
        $i2 = r0.<com.sun.lwuit.TextField: int pressCount>;

        $c3 = virtualinvoke r0.<com.sun.lwuit.TextField: char getCharPerKeyCode(int,int,boolean)>($i2, i0, z0);

        if $c3 == 0 goto label12;

        $r10 = r0.<com.sun.lwuit.TextField: java.lang.String previousText>;

        if $r10 != null goto label05;

        $r34 = virtualinvoke r0.<com.sun.lwuit.TextField: java.lang.String getText()>();

        r0.<com.sun.lwuit.TextField: java.lang.String previousText> = $r34;

     label05:
        $z4 = r0.<com.sun.lwuit.TextField: boolean pendingCommit>;

        if $z4 != 0 goto label06;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.sun.lwuit.TextField: void insertChars(java.lang.String)>($r33);

        r0.<com.sun.lwuit.TextField: boolean pendingCommit> = 1;

        $i17 = r0.<com.sun.lwuit.TextField: int pressCount>;

        $i18 = $i17 + 1;

        r0.<com.sun.lwuit.TextField: int pressCount> = $i18;

        goto label08;

     label06:
        $z5 = r0.<com.sun.lwuit.TextField: boolean overwriteMode>;

        if $z5 == 0 goto label07;

        specialinvoke r0.<com.sun.lwuit.TextField: void decreaseCursor()>();

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.sun.lwuit.TextField: void insertChars(java.lang.String)>($r29);

        $i15 = r0.<com.sun.lwuit.TextField: int pressCount>;

        $i16 = $i15 + 1;

        r0.<com.sun.lwuit.TextField: int pressCount> = $i16;

        goto label08;

     label07:
        if $i20 <= 0 goto label08;

        $i7 = virtualinvoke r0.<com.sun.lwuit.TextField: int getMaxSize()>();

        if $i20 >= $i7 goto label08;

        $r11 = r0.<com.sun.lwuit.TextField: java.lang.String previousText>;

        $i8 = virtualinvoke $r11.<java.lang.String: int length()>();

        $i9 = virtualinvoke r0.<com.sun.lwuit.TextField: int getMaxSize()>();

        if $i8 >= $i9 goto label08;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $z6 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean validChar(java.lang.String)>($r15);

        if $z6 == 0 goto label08;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = r0.<com.sun.lwuit.TextField: java.lang.String previousText>;

        $i10 = $i20 - 1;

        $r18 = virtualinvoke $r17.<java.lang.String: java.lang.String substring(int,int)>(0, $i10);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r22 = r0.<com.sun.lwuit.TextField: java.lang.String previousText>;

        $i11 = $i20 - 1;

        $r21 = r0.<com.sun.lwuit.TextField: java.lang.String previousText>;

        $i12 = virtualinvoke $r21.<java.lang.String: int length()>();

        $r23 = virtualinvoke $r22.<java.lang.String: java.lang.String substring(int,int)>($i11, $i12);

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.sun.lwuit.TextField: boolean pendingCommit> = 1;

        $i13 = r0.<com.sun.lwuit.TextField: int pressCount>;

        $i14 = $i13 + 1;

        r0.<com.sun.lwuit.TextField: int pressCount> = $i14;

        specialinvoke r0.<com.sun.lwuit.TextArea: void setText(java.lang.String)>($r25);

     label08:
        $r41 = r0.<com.sun.lwuit.TextField: java.lang.String inputMode>;

        $z10 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isImmediateInputMode(java.lang.String)>($r41);

        if $z10 == 0 goto label09;

        virtualinvoke r0.<com.sun.lwuit.TextField: void commitChange()>();

        specialinvoke r0.<com.sun.lwuit.TextField: void fireDataChanged(int,int)>(1, $i20);

        goto label11;

     label09:
        $i6 = r0.<com.sun.lwuit.TextField: int pressCount>;

        if $i6 != 1 goto label10;

        specialinvoke r0.<com.sun.lwuit.TextField: void fireDataChanged(int,int)>(1, $i20);

        goto label11;

     label10:
        specialinvoke r0.<com.sun.lwuit.TextField: void fireDataChanged(int,int)>(2, $i20);

     label11:
        return 1;

     label12:
        $z1 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isChangeInputMode(int)>(i0);

        if $z1 == 0 goto label18;

        i22 = 0;

     label13:
        $r1 = r0.<com.sun.lwuit.TextField: java.lang.String[] inputModeOrder>;

        $i4 = lengthof $r1;

        if i22 >= $i4 goto label17;

        $r2 = r0.<com.sun.lwuit.TextField: java.lang.String[] inputModeOrder>;

        $r4 = $r2[i22];

        $r3 = r0.<com.sun.lwuit.TextField: java.lang.String inputMode>;

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z3 == 0 goto label16;

        i23 = i22 + 1;

        $r5 = r0.<com.sun.lwuit.TextField: java.lang.String[] inputModeOrder>;

        $i5 = lengthof $r5;

        if i23 >= $i5 goto label14;

        $r8 = r0.<com.sun.lwuit.TextField: java.lang.String[] inputModeOrder>;

        $r9 = $r8[i23];

        virtualinvoke r0.<com.sun.lwuit.TextField: void setInputMode(java.lang.String)>($r9);

        goto label15;

     label14:
        $r6 = r0.<com.sun.lwuit.TextField: java.lang.String[] inputModeOrder>;

        $r7 = $r6[0];

        virtualinvoke r0.<com.sun.lwuit.TextField: void setInputMode(java.lang.String)>($r7);

     label15:
        return 1;

     label16:
        i22 = i22 + 1;

        goto label13;

     label17:
        return 1;

     label18:
        if $z8 == 0 goto label21;

        if z0 == 0 goto label19;

        virtualinvoke r0.<com.sun.lwuit.TextField: void setText(java.lang.String)>("");

        virtualinvoke r0.<com.sun.lwuit.TextField: void commitChange()>();

        goto label20;

     label19:
        virtualinvoke r0.<com.sun.lwuit.TextField: void deleteChar()>();

     label20:
        return 1;

     label21:
        $z2 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isSymbolDialogKey(int)>(i0);

        if $z2 == 0 goto label22;

        virtualinvoke r0.<com.sun.lwuit.TextField: void showSymbolDialog()>();

        return 1;

     label22:
        return 0;
    }

    public void insertChars(java.lang.String)
    {
        boolean $z0, $z1;
        java.lang.StringBuilder $r3, $r5, $r6, $r8, $r10, $r12, $r13, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15;
        java.lang.String $r1, r2, $r4, $r7, $r9, $r11, $r14, $r16;
        com.sun.lwuit.TextField r0;

        r0 := @this: com.sun.lwuit.TextField;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<com.sun.lwuit.TextField: java.lang.String getText()>();

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean validChar(java.lang.String)>(r2);

        if $z0 != 0 goto label1;

        return;

     label1:
        $i0 = virtualinvoke r0.<com.sun.lwuit.TextField: int getCursorPosition()>();

        i14 = $i0 + 1;

        $z1 = r0.<com.sun.lwuit.TextField: boolean overwriteMode>;

        if $z1 == 0 goto label2;

        $i11 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i14 > $i11 goto label2;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $i12 = i14 - 1;

        $r11 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i12);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $i13 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r14 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i14, $i13);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.sun.lwuit.TextField: void setText(java.lang.String)>($r16);

        goto label4;

     label2:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        $i3 = $i1 + $i2;

        $i4 = virtualinvoke r0.<com.sun.lwuit.TextField: int getMaxSize()>();

        if $i3 <= $i4 goto label3;

        return;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $i5 = i14 - 1;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $i6 = i14 - 1;

        $i7 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r7 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i6, $i7);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.sun.lwuit.TextField: void setText(java.lang.String)>($r9);

     label4:
        $i8 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i8 <= 1 goto label5;

        $i9 = virtualinvoke r2.<java.lang.String: int length()>();

        $i10 = $i9 - 1;

        i15 = i14 + $i10;

        virtualinvoke r0.<com.sun.lwuit.TextField: void setCursorPosition(int)>(i15);

        return;

     label5:
        specialinvoke r0.<com.sun.lwuit.TextField: void increaseCursor()>();

        return;
    }

    protected boolean validChar(java.lang.String)
    {
        int $i0, $i1, $i2, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        java.lang.String r1;
        com.sun.lwuit.TextField r0;
        char $c3, $c4, $c5, $c6, $c7, $c8, $c9, $c10, $c11, $c12;

        r0 := @this: com.sun.lwuit.TextField;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<com.sun.lwuit.TextField: int getConstraint()>();

        if $i0 != 2 goto label2;

        $c11 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        $i13 = (int) $c11;

        if $i13 < 48 goto label1;

        $c12 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        $i14 = (int) $c12;

        if $i14 <= 57 goto label6;

     label1:
        return 0;

     label2:
        $i1 = virtualinvoke r0.<com.sun.lwuit.TextField: int getConstraint()>();

        if $i1 != 3 goto label4;

        $c8 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        $i15 = (int) $c8;

        if $i15 < 48 goto label3;

        $c10 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        $i16 = (int) $c10;

        if $i16 <= 57 goto label6;

     label3:
        $c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        $i17 = (int) $c9;

        if $i17 == 43 goto label6;

        return 0;

     label4:
        $i2 = virtualinvoke r0.<com.sun.lwuit.TextField: int getConstraint()>();

        if $i2 != 5 goto label6;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        $i18 = (int) $c3;

        if $i18 < 48 goto label5;

        $c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        $i19 = (int) $c7;

        if $i19 <= 57 goto label6;

     label5:
        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        $i20 = (int) $c4;

        if $i20 == 43 goto label6;

        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        $i21 = (int) $c5;

        if $i21 == 45 goto label6;

        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        $i22 = (int) $c6;

        if $i22 == 46 goto label6;

        return 0;

     label6:
        return 1;
    }

    protected void showSymbolDialog()
    {
        com.sun.lwuit.Command $r0, $r6;
        com.sun.lwuit.Container $r4;
        com.sun.lwuit.plaf.UIManager $r1;
        com.sun.lwuit.Command[] $r5;
        java.lang.String $r2, $r7;
        com.sun.lwuit.TextField r3;

        r3 := @this: com.sun.lwuit.TextField;

        $r0 = new com.sun.lwuit.Command;

        $r1 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.plaf.UIManager: java.lang.String localize(java.lang.String,java.lang.String)>("cancel", "Cancel");

        specialinvoke $r0.<com.sun.lwuit.Command: void <init>(java.lang.String)>($r2);

        $r4 = virtualinvoke r3.<com.sun.lwuit.TextField: com.sun.lwuit.Container createSymbolTable()>();

        $r5 = newarray (com.sun.lwuit.Command)[1];

        $r5[0] = $r0;

        $r6 = staticinvoke <com.sun.lwuit.Dialog: com.sun.lwuit.Command show(java.lang.String,com.sun.lwuit.Component,com.sun.lwuit.Command[])>(null, $r4, $r5);

        if $r6 == null goto label1;

        if $r6 == $r0 goto label1;

        $r7 = virtualinvoke $r6.<com.sun.lwuit.Command: java.lang.String getCommandName()>();

        virtualinvoke r3.<com.sun.lwuit.TextField: void insertChars(java.lang.String)>($r7);

     label1:
        return;
    }

    protected com.sun.lwuit.Container createSymbolTable()
    {
        com.sun.lwuit.layouts.GridLayout $r2;
        com.sun.lwuit.Command $r4;
        com.sun.lwuit.Button $r3;
        char $c3;
        com.sun.lwuit.Container $r1;
        int $i0, $i1, $i2, i4;
        char[] $r0;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;
        com.sun.lwuit.TextField r9;

        r9 := @this: com.sun.lwuit.TextField;

        $r0 = staticinvoke <com.sun.lwuit.TextField: char[] getSymbolTable()>();

        $r1 = new com.sun.lwuit.Container;

        $r2 = new com.sun.lwuit.layouts.GridLayout;

        $i0 = lengthof $r0;

        $i1 = $i0 / 5;

        specialinvoke $r2.<com.sun.lwuit.layouts.GridLayout: void <init>(int,int)>($i1, 5);

        specialinvoke $r1.<com.sun.lwuit.Container: void <init>(com.sun.lwuit.layouts.Layout)>($r2);

        i4 = 0;

     label1:
        $i2 = lengthof $r0;

        if i4 >= $i2 goto label2;

        $r3 = new com.sun.lwuit.Button;

        $r4 = new com.sun.lwuit.Command;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c3 = $r0[i4];

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<com.sun.lwuit.Command: void <init>(java.lang.String)>($r8);

        specialinvoke $r3.<com.sun.lwuit.Button: void <init>(com.sun.lwuit.Command)>($r4);

        virtualinvoke $r3.<com.sun.lwuit.Button: void setAlignment(int)>(4);

        virtualinvoke $r1.<com.sun.lwuit.Container: void addComponent(com.sun.lwuit.Component)>($r3);

        i4 = i4 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public void keyReleased(int)
    {
        int i1;
        long $l0;
        com.sun.lwuit.TextField r0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.sun.lwuit.TextField;

        i1 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isEditable()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r0.<com.sun.lwuit.TextField: boolean pressedAndNotReleased> = 0;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.sun.lwuit.TextField: long releaseTime> = $l0;

        $z1 = r0.<com.sun.lwuit.TextField: boolean longClick>;

        if $z1 != 0 goto label2;

        $z2 = specialinvoke r0.<com.sun.lwuit.TextField: boolean keyReleaseOrLongClick(int,boolean)>(i1, 0);

        if $z2 == 0 goto label2;

        return;

     label2:
        r0.<com.sun.lwuit.TextField: boolean longClick> = 0;

        specialinvoke r0.<com.sun.lwuit.TextArea: void keyReleased(int)>(i1);

        return;
    }

    protected int getLongClickDuration()
    {
        com.sun.lwuit.TextField r0;

        r0 := @this: com.sun.lwuit.TextField;

        return 800;
    }

    public static char[] getSymbolTable()
    {
        char[] $r0;

        $r0 = <com.sun.lwuit.TextField: char[] symbolTable>;

        return $r0;
    }

    public static void setSymbolTable(char[])
    {
        char[] r0;

        r0 := @parameter0: char[];

        <com.sun.lwuit.TextField: char[] symbolTable> = r0;

        return;
    }

    protected boolean isCursorPositionCycle()
    {
        com.sun.lwuit.TextField r0;

        r0 := @this: com.sun.lwuit.TextField;

        return 1;
    }

    protected boolean isSymbolDialogKey(int)
    {
        int i0, $i1;
        com.sun.lwuit.TextField r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextField;

        i0 := @parameter0: int;

        $i1 = <com.sun.lwuit.TextField: int defaultSymbolDialogKey>;

        if i0 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected void deinitialize()
    {
        com.sun.lwuit.Command $r3, $r4, $r5, $r6;
        com.sun.lwuit.Form $r1, $r2;
        com.sun.lwuit.TextField r0;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.TextField;

        $r1 = virtualinvoke r0.<com.sun.lwuit.TextField: com.sun.lwuit.Form getComponentForm()>();

        virtualinvoke $r1.<com.sun.lwuit.Form: void deregisterAnimated(com.sun.lwuit.animations.Animation)>(r0);

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean handlesInput()>();

        if $z0 == 0 goto label4;

        $z1 = r0.<com.sun.lwuit.TextField: boolean useSoftkeys>;

        if $z1 == 0 goto label1;

        $r6 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command DELETE_COMMAND>;

        $r5 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command T9_COMMAND>;

        $r4 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command originalClearCommand>;

        virtualinvoke r0.<com.sun.lwuit.TextField: void removeCommands(com.sun.lwuit.Command,com.sun.lwuit.Command,com.sun.lwuit.Command)>($r6, $r5, $r4);

        goto label3;

     label1:
        $r2 = virtualinvoke r0.<com.sun.lwuit.TextField: com.sun.lwuit.Form getComponentForm()>();

        if $r2 == null goto label2;

        $r3 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command originalClearCommand>;

        virtualinvoke $r2.<com.sun.lwuit.Form: void setClearCommand(com.sun.lwuit.Command)>($r3);

     label2:
        r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command originalClearCommand> = null;

     label3:
        r0.<com.sun.lwuit.TextField: boolean pressedAndNotReleased> = 0;

        virtualinvoke r0.<com.sun.lwuit.TextField: void setHandlesInput(boolean)>(0);

     label4:
        return;
    }

    public void setEditable(boolean)
    {
        com.sun.lwuit.Command $r2, $r3, $r4, $r5;
        com.sun.lwuit.Form $r1;
        com.sun.lwuit.TextField r0;
        boolean z0, $z1, $z2;

        r0 := @this: com.sun.lwuit.TextField;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.sun.lwuit.TextArea: void setEditable(boolean)>(z0);

        if z0 != 0 goto label3;

        $z1 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean handlesInput()>();

        if $z1 == 0 goto label3;

        virtualinvoke r0.<com.sun.lwuit.TextField: void setHandlesInput(boolean)>(0);

        $z2 = r0.<com.sun.lwuit.TextField: boolean useSoftkeys>;

        if $z2 == 0 goto label1;

        $r5 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command DELETE_COMMAND>;

        $r4 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command T9_COMMAND>;

        $r3 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command originalClearCommand>;

        virtualinvoke r0.<com.sun.lwuit.TextField: void removeCommands(com.sun.lwuit.Command,com.sun.lwuit.Command,com.sun.lwuit.Command)>($r5, $r4, $r3);

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<com.sun.lwuit.TextField: com.sun.lwuit.Form getComponentForm()>();

        $r2 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command originalClearCommand>;

        virtualinvoke $r1.<com.sun.lwuit.Form: void setClearCommand(com.sun.lwuit.Command)>($r2);

        r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command originalClearCommand> = null;

     label2:
        r0.<com.sun.lwuit.TextField: boolean pressedAndNotReleased> = 0;

     label3:
        return;
    }

    public void keyRepeated(int)
    {
        int i0;
        com.sun.lwuit.TextField r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextField;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isQwertyInput()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.sun.lwuit.TextArea: void keyRepeated(int)>(i0);

     label1:
        return;
    }

    public void keyPressed(int)
    {
        long $l1;
        int i0, $i2;
        com.sun.lwuit.TextField r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        com.sun.lwuit.Display $r1;
        com.sun.lwuit.Command $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        com.sun.lwuit.Form $r2, $r7;

        r0 := @this: com.sun.lwuit.TextField;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isEditable()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        r0.<com.sun.lwuit.TextField: boolean pressedAndNotReleased> = 1;

        r0.<com.sun.lwuit.TextField: int pressedKeyCode> = i0;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.sun.lwuit.TextField: long pressTime> = $l1;

        $z1 = <com.sun.lwuit.TextField: boolean qwertyAutoDetect>;

        if $z1 == 0 goto label04;

        $z8 = r0.<com.sun.lwuit.TextField: boolean qwerty>;

        if $z8 != 0 goto label04;

        if i0 < 97 goto label02;

        if i0 <= 122 goto label03;

     label02:
        if i0 < 65 goto label04;

        if i0 > 90 goto label04;

     label03:
        <com.sun.lwuit.TextField: boolean qwertyDevice> = 1;

        r0.<com.sun.lwuit.TextField: boolean qwerty> = 1;

     label04:
        $z9 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean handlesInput()>();

        if $z9 != 0 goto label07;

        $z6 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isEditingTrigger(int)>(i0);

        if $z6 == 0 goto label07;

        virtualinvoke r0.<com.sun.lwuit.TextField: void setHandlesInput(boolean)>(1);

        $z7 = r0.<com.sun.lwuit.TextField: boolean useSoftkeys>;

        if $z7 == 0 goto label05;

        $r10 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command T9_COMMAND>;

        virtualinvoke $r10.<com.sun.lwuit.Command: void setDisposesDialog(boolean)>(0);

        $r11 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command DELETE_COMMAND>;

        virtualinvoke $r11.<com.sun.lwuit.Command: void setDisposesDialog(boolean)>(0);

        $r13 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command DELETE_COMMAND>;

        $r12 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command T9_COMMAND>;

        $r14 = virtualinvoke r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command installCommands(com.sun.lwuit.Command,com.sun.lwuit.Command)>($r13, $r12);

        r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command originalClearCommand> = $r14;

        goto label06;

     label05:
        $r7 = virtualinvoke r0.<com.sun.lwuit.TextField: com.sun.lwuit.Form getComponentForm()>();

        if $r7 == null goto label06;

        $r8 = virtualinvoke $r7.<com.sun.lwuit.Form: com.sun.lwuit.Command getClearCommand()>();

        r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command originalClearCommand> = $r8;

        $r9 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command DELETE_COMMAND>;

        virtualinvoke $r7.<com.sun.lwuit.Form: void setClearCommand(com.sun.lwuit.Command)>($r9);

     label06:
        return;

     label07:
        $r1 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $i2 = virtualinvoke $r1.<com.sun.lwuit.Display: int getGameAction(int)>(i0);

        specialinvoke r0.<com.sun.lwuit.TextField: void moveCursor(int)>($i2);

        $z2 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean handlesInput()>();

        if $z2 == 0 goto label10;

        $z4 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isEditingEndTrigger(int)>(i0);

        if $z4 == 0 goto label10;

        virtualinvoke r0.<com.sun.lwuit.TextField: void setHandlesInput(boolean)>(0);

        $z5 = r0.<com.sun.lwuit.TextField: boolean useSoftkeys>;

        if $z5 == 0 goto label08;

        $r6 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command DELETE_COMMAND>;

        $r5 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command T9_COMMAND>;

        $r4 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command originalClearCommand>;

        virtualinvoke r0.<com.sun.lwuit.TextField: void removeCommands(com.sun.lwuit.Command,com.sun.lwuit.Command,com.sun.lwuit.Command)>($r6, $r5, $r4);

        goto label09;

     label08:
        $r2 = virtualinvoke r0.<com.sun.lwuit.TextField: com.sun.lwuit.Form getComponentForm()>();

        if $r2 == null goto label09;

        $r3 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command originalClearCommand>;

        virtualinvoke $r2.<com.sun.lwuit.Form: void setClearCommand(com.sun.lwuit.Command)>($r3);

        r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command originalClearCommand> = null;

     label09:
        virtualinvoke r0.<com.sun.lwuit.TextField: void fireActionEvent()>();

        return;

     label10:
        $z3 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean handlesInput()>();

        if $z3 == 0 goto label11;

        return;

     label11:
        specialinvoke r0.<com.sun.lwuit.TextArea: void keyPressed(int)>(i0);

        return;
    }

    protected com.sun.lwuit.Command installCommands(com.sun.lwuit.Command, com.sun.lwuit.Command)
    {
        com.sun.lwuit.Command[] $r5, $r6, $r7, $r13;
        int $i0, $i1, i2;
        java.lang.String $r10;
        com.sun.lwuit.TextField r0;
        boolean $z0, $z1, $z2;
        com.sun.lwuit.Display $r8;
        com.sun.lwuit.Command $r2, r3, r4, $r12, $r14, r15;
        com.sun.lwuit.Form $r1, $r9, $r11;

        r0 := @this: com.sun.lwuit.TextField;

        r3 := @parameter0: com.sun.lwuit.Command;

        r4 := @parameter1: com.sun.lwuit.Command;

        $r1 = virtualinvoke r0.<com.sun.lwuit.TextField: com.sun.lwuit.Form getComponentForm()>();

        if $r1 == null goto label5;

        $r2 = virtualinvoke $r1.<com.sun.lwuit.Form: com.sun.lwuit.Command getClearCommand()>();

        r15 = $r2;

        $z0 = $r2 instanceof com.sun.lwuit.TextField$CommandHandler;

        if $z0 == 0 goto label1;

        r15 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command originalClearCommand>;

     label1:
        $z1 = r0.<com.sun.lwuit.TextField: boolean replaceMenu>;

        if $z1 == 0 goto label4;

        $r5 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command[] originalCommands>;

        if $r5 != null goto label4;

        $i0 = virtualinvoke $r1.<com.sun.lwuit.Form: int getCommandCount()>();

        $r6 = newarray (com.sun.lwuit.Command)[$i0];

        r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command[] originalCommands> = $r6;

        i2 = 0;

     label2:
        $r7 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command[] originalCommands>;

        $i1 = lengthof $r7;

        if i2 >= $i1 goto label3;

        $r13 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command[] originalCommands>;

        $r14 = virtualinvoke $r1.<com.sun.lwuit.Form: com.sun.lwuit.Command getCommand(int)>(i2);

        $r13[i2] = $r14;

        i2 = i2 + 1;

        goto label2;

     label3:
        virtualinvoke $r1.<com.sun.lwuit.Form: void removeAllCommands()>();

        $r8 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $z2 = virtualinvoke $r8.<com.sun.lwuit.Display: boolean isThirdSoftButton()>();

        if $z2 == 0 goto label4;

        $r9 = virtualinvoke r0.<com.sun.lwuit.TextField: com.sun.lwuit.Form getComponentForm()>();

        $r10 = virtualinvoke r0.<com.sun.lwuit.TextField: java.lang.String getSelectCommandText()>();

        virtualinvoke $r9.<com.sun.lwuit.Form: void addSelectCommand(java.lang.String)>($r10);

        $r11 = virtualinvoke r0.<com.sun.lwuit.TextField: com.sun.lwuit.Form getComponentForm()>();

        $r12 = virtualinvoke $r11.<com.sun.lwuit.Form: com.sun.lwuit.Command getCommand(int)>(0);

        r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command selectCommand> = $r12;

     label4:
        virtualinvoke $r1.<com.sun.lwuit.Form: void addCommand(com.sun.lwuit.Command,int)>(r3, 0);

        virtualinvoke $r1.<com.sun.lwuit.Form: void addCommand(com.sun.lwuit.Command,int)>(r4, 0);

        virtualinvoke $r1.<com.sun.lwuit.Form: void setClearCommand(com.sun.lwuit.Command)>(r3);

        return r15;

     label5:
        return null;
    }

    protected boolean isSelectableInteraction()
    {
        com.sun.lwuit.TextField r0;

        r0 := @this: com.sun.lwuit.TextField;

        return 1;
    }

    protected void fireClicked()
    {
        com.sun.lwuit.TextField r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.sun.lwuit.Command $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        com.sun.lwuit.Form $r1, $r6;

        r0 := @this: com.sun.lwuit.TextField;

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean handlesInput()>();

        if $z0 != 0 goto label3;

        virtualinvoke r0.<com.sun.lwuit.TextField: void setHandlesInput(boolean)>(1);

        $z4 = r0.<com.sun.lwuit.TextField: boolean useSoftkeys>;

        if $z4 == 0 goto label1;

        $r9 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command T9_COMMAND>;

        virtualinvoke $r9.<com.sun.lwuit.Command: void setDisposesDialog(boolean)>(0);

        $r10 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command DELETE_COMMAND>;

        virtualinvoke $r10.<com.sun.lwuit.Command: void setDisposesDialog(boolean)>(0);

        $r12 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command DELETE_COMMAND>;

        $r11 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command T9_COMMAND>;

        $r13 = virtualinvoke r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command installCommands(com.sun.lwuit.Command,com.sun.lwuit.Command)>($r12, $r11);

        r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command originalClearCommand> = $r13;

        goto label2;

     label1:
        $r6 = virtualinvoke r0.<com.sun.lwuit.TextField: com.sun.lwuit.Form getComponentForm()>();

        $r7 = virtualinvoke $r6.<com.sun.lwuit.Form: com.sun.lwuit.Command getClearCommand()>();

        r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command originalClearCommand> = $r7;

        $r8 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command DELETE_COMMAND>;

        virtualinvoke $r6.<com.sun.lwuit.Form: void setClearCommand(com.sun.lwuit.Command)>($r8);

     label2:
        return;

     label3:
        $z1 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean handlesInput()>();

        if $z1 == 0 goto label6;

        virtualinvoke r0.<com.sun.lwuit.TextField: void setHandlesInput(boolean)>(0);

        $z3 = r0.<com.sun.lwuit.TextField: boolean useSoftkeys>;

        if $z3 == 0 goto label4;

        $r5 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command DELETE_COMMAND>;

        $r4 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command T9_COMMAND>;

        $r3 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command originalClearCommand>;

        virtualinvoke r0.<com.sun.lwuit.TextField: void removeCommands(com.sun.lwuit.Command,com.sun.lwuit.Command,com.sun.lwuit.Command)>($r5, $r4, $r3);

        goto label5;

     label4:
        $r1 = virtualinvoke r0.<com.sun.lwuit.TextField: com.sun.lwuit.Form getComponentForm()>();

        $r2 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command originalClearCommand>;

        virtualinvoke $r1.<com.sun.lwuit.Form: void setClearCommand(com.sun.lwuit.Command)>($r2);

        r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command originalClearCommand> = null;

     label5:
        virtualinvoke r0.<com.sun.lwuit.TextField: void fireActionEvent()>();

        return;

     label6:
        $z2 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean handlesInput()>();

        if $z2 == 0 goto label7;

        return;

     label7:
        return;
    }

    protected void removeCommands(com.sun.lwuit.Command, com.sun.lwuit.Command, com.sun.lwuit.Command)
    {
        com.sun.lwuit.Command[] $r6, $r7, $r8;
        int $i0, i1, $i3;
        com.sun.lwuit.TextField r0;
        boolean $z0;
        com.sun.lwuit.Command r2, r3, $r4, $r5, $r9, $r10, r11;
        com.sun.lwuit.Form $r1;

        r0 := @this: com.sun.lwuit.TextField;

        r2 := @parameter0: com.sun.lwuit.Command;

        r3 := @parameter1: com.sun.lwuit.Command;

        r11 := @parameter2: com.sun.lwuit.Command;

        $r1 = virtualinvoke r0.<com.sun.lwuit.TextField: com.sun.lwuit.Form getComponentForm()>();

        if $r1 == null goto label4;

        virtualinvoke $r1.<com.sun.lwuit.Form: void removeCommand(com.sun.lwuit.Command)>(r2);

        virtualinvoke $r1.<com.sun.lwuit.Form: void removeCommand(com.sun.lwuit.Command)>(r3);

        $r4 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command selectCommand>;

        if $r4 == null goto label1;

        $r10 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command selectCommand>;

        virtualinvoke $r1.<com.sun.lwuit.Form: void removeCommand(com.sun.lwuit.Command)>($r10);

     label1:
        $r5 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command originalClearCommand>;

        virtualinvoke $r1.<com.sun.lwuit.Form: void setClearCommand(com.sun.lwuit.Command)>($r5);

        $z0 = r0.<com.sun.lwuit.TextField: boolean replaceMenu>;

        if $z0 == 0 goto label4;

        $r6 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command[] originalCommands>;

        if $r6 == null goto label4;

        $r7 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command[] originalCommands>;

        $i0 = lengthof $r7;

        i1 = $i0 - 1;

     label2:
        if i1 < 0 goto label3;

        $r8 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command[] originalCommands>;

        $r9 = $r8[i1];

        virtualinvoke $r1.<com.sun.lwuit.Form: void addCommand(com.sun.lwuit.Command)>($r9);

        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label2;

     label3:
        r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command[] originalCommands> = null;

     label4:
        return;
    }

    void focusLostInternal()
    {
        com.sun.lwuit.Command $r2, $r3, $r4, $r5;
        com.sun.lwuit.Form $r6;
        long $l0;
        com.sun.lwuit.TextField r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.sun.lwuit.Display $r1, $r7;

        r0 := @this: com.sun.lwuit.TextField;

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean handlesInput()>();

        if $z0 != 0 goto label1;

        $z2 = r0.<com.sun.lwuit.TextField: boolean pressedAndNotReleased>;

        if $z2 != 0 goto label1;

        $z3 = r0.<com.sun.lwuit.TextField: boolean pendingCommit>;

        if $z3 == 0 goto label4;

     label1:
        virtualinvoke r0.<com.sun.lwuit.TextField: void setHandlesInput(boolean)>(0);

        $r6 = virtualinvoke r0.<com.sun.lwuit.TextField: com.sun.lwuit.Form getComponentForm()>();

        if $r6 == null goto label3;

        $z1 = r0.<com.sun.lwuit.TextField: boolean useSoftkeys>;

        if $z1 == 0 goto label2;

        $r5 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command DELETE_COMMAND>;

        $r4 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command T9_COMMAND>;

        $r3 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command originalClearCommand>;

        virtualinvoke r0.<com.sun.lwuit.TextField: void removeCommands(com.sun.lwuit.Command,com.sun.lwuit.Command,com.sun.lwuit.Command)>($r5, $r4, $r3);

        goto label3;

     label2:
        $r2 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.Command originalClearCommand>;

        virtualinvoke $r6.<com.sun.lwuit.Form: void setClearCommand(com.sun.lwuit.Command)>($r2);

     label3:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.sun.lwuit.TextField: long releaseTime> = $l0;

        virtualinvoke r0.<com.sun.lwuit.TextField: void commitChange()>();

        r0.<com.sun.lwuit.TextField: boolean pressedAndNotReleased> = 0;

        r0.<com.sun.lwuit.TextField: boolean longClick> = 0;

     label4:
        $r7 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $z4 = virtualinvoke $r7.<com.sun.lwuit.Display: boolean isVirtualKeyboardShowingSupported()>();

        if $z4 == 0 goto label5;

        $r1 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        virtualinvoke $r1.<com.sun.lwuit.Display: void setShowVirtualKeyboard(boolean)>(0);

     label5:
        return;
    }

    void focusGainedInternal()
    {
        long $l0;
        com.sun.lwuit.TextField r0;

        r0 := @this: com.sun.lwuit.TextField;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.sun.lwuit.TextField: long releaseTime> = $l0;

        r0.<com.sun.lwuit.TextField: boolean pressedAndNotReleased> = 0;

        r0.<com.sun.lwuit.TextField: boolean longClick> = 0;

        return;
    }

    protected boolean isEditingTrigger(int)
    {
        int i0, $i1;
        com.sun.lwuit.TextField r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        com.sun.lwuit.Display $r1;

        r0 := @this: com.sun.lwuit.TextField;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isEditable()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $i1 = virtualinvoke $r1.<com.sun.lwuit.Display: int getGameAction(int)>(i0);

        $z1 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isQwertyInput()>();

        if $z1 == 0 goto label5;

        if i0 > 0 goto label2;

        if $i1 == 8 goto label2;

        $z4 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isClearKey(int)>(i0);

        if $z4 != 0 goto label2;

        $z5 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isEnterKey(int)>(i0);

        if $z5 != 0 goto label2;

        $z6 = r0.<com.sun.lwuit.TextField: boolean leftAndRightEditingTrigger>;

        if $z6 == 0 goto label3;

        if $i1 == 2 goto label2;

        if $i1 != 5 goto label3;

     label2:
        $z7 = 1;

        goto label4;

     label3:
        $z7 = 0;

     label4:
        return $z7;

     label5:
        if i0 < 48 goto label6;

        if i0 <= 57 goto label7;

     label6:
        $z2 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isClearKey(int)>(i0);

        if $z2 != 0 goto label7;

        if $i1 == 8 goto label7;

        $z3 = r0.<com.sun.lwuit.TextField: boolean leftAndRightEditingTrigger>;

        if $z3 == 0 goto label8;

        if $i1 == 2 goto label7;

        if $i1 != 5 goto label8;

     label7:
        $z8 = 1;

        goto label9;

     label8:
        $z8 = 0;

     label9:
        return $z8;
    }

    protected boolean isEditingEndTrigger(int)
    {
        int i0, $i1;
        com.sun.lwuit.TextField r1;
        com.sun.lwuit.Display $r0;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6, $z7, $z8;

        r1 := @this: com.sun.lwuit.TextField;

        i0 := @parameter0: int;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $i1 = virtualinvoke $r0.<com.sun.lwuit.Display: int getGameAction(int)>(i0);

        $z0 = virtualinvoke r1.<com.sun.lwuit.TextField: boolean isQwertyInput()>();

        if $z0 == 0 goto label07;

        $z2 = virtualinvoke r1.<com.sun.lwuit.TextField: boolean isSingleLineTextArea()>();

        if $z2 == 0 goto label04;

        if i0 >= 0 goto label02;

        if $i1 == 8 goto label01;

        if $i1 == 1 goto label01;

        if $i1 == 6 goto label01;

        $z3 = virtualinvoke r1.<com.sun.lwuit.TextField: boolean isEnterKey(int)>(i0);

        if $z3 == 0 goto label02;

     label01:
        $z4 = 1;

        goto label03;

     label02:
        $z4 = 0;

     label03:
        z5 = $z4;

        goto label14;

     label04:
        if i0 >= 0 goto label05;

        if $i1 != 8 goto label05;

        $z6 = 1;

        goto label06;

     label05:
        $z6 = 0;

     label06:
        z5 = $z6;

        goto label14;

     label07:
        $z1 = virtualinvoke r1.<com.sun.lwuit.TextField: boolean isSingleLineTextArea()>();

        if $z1 == 0 goto label11;

        if $i1 == 8 goto label08;

        if $i1 == 1 goto label08;

        if $i1 != 6 goto label09;

     label08:
        $z7 = 1;

        goto label10;

     label09:
        $z7 = 0;

     label10:
        z5 = $z7;

        goto label14;

     label11:
        if $i1 != 8 goto label12;

        $z8 = 1;

        goto label13;

     label12:
        $z8 = 0;

     label13:
        z5 = $z8;

     label14:
        return z5;
    }

    public void paint(com.sun.lwuit.Graphics)
    {
        com.sun.lwuit.Graphics r2;
        com.sun.lwuit.plaf.UIManager $r0, $r4;
        com.sun.lwuit.plaf.LookAndFeel $r1, $r5;
        com.sun.lwuit.TextField r3;
        boolean $z0, $z1, $z2;

        r3 := @this: com.sun.lwuit.TextField;

        r2 := @parameter0: com.sun.lwuit.Graphics;

        $r0 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.LookAndFeel getLookAndFeel()>();

        virtualinvoke $r1.<com.sun.lwuit.plaf.LookAndFeel: void drawTextField(com.sun.lwuit.Graphics,com.sun.lwuit.TextArea)>(r2, r3);

        $z0 = r3.<com.sun.lwuit.TextField: boolean drawCursor>;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r3.<com.sun.lwuit.TextField: boolean hasFocus()>();

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r3.<com.sun.lwuit.TextField: boolean isEditable()>();

        if $z2 == 0 goto label1;

        $r4 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r5 = virtualinvoke $r4.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.LookAndFeel getLookAndFeel()>();

        virtualinvoke $r5.<com.sun.lwuit.plaf.LookAndFeel: void drawTextFieldCursor(com.sun.lwuit.Graphics,com.sun.lwuit.TextArea)>(r2, r3);

     label1:
        virtualinvoke r3.<com.sun.lwuit.TextField: void paintHint(com.sun.lwuit.Graphics)>(r2);

        return;
    }

    protected com.sun.lwuit.geom.Dimension calcPreferredSize()
    {
        com.sun.lwuit.plaf.UIManager $r1, $r4;
        com.sun.lwuit.geom.Dimension $r3, $r6;
        com.sun.lwuit.plaf.LookAndFeel $r2, $r5;
        com.sun.lwuit.TextField r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextField;

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isSingleLineTextArea()>();

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r5 = virtualinvoke $r4.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.LookAndFeel getLookAndFeel()>();

        $r6 = virtualinvoke $r5.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.geom.Dimension getTextFieldPreferredSize(com.sun.lwuit.TextArea)>(r0);

        return $r6;

     label1:
        $r1 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.LookAndFeel getLookAndFeel()>();

        $r3 = virtualinvoke $r2.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.geom.Dimension getTextAreaSize(com.sun.lwuit.TextArea,boolean)>(r0, 1);

        return $r3;
    }

    protected void initComponent()
    {
        byte $b0, $b1;
        com.sun.lwuit.Form $r1;
        com.sun.lwuit.TextField r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextField;

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isRTL()>();

        if $z0 == 0 goto label1;

        $b0 = 2;

        goto label2;

     label1:
        $b0 = 5;

     label2:
        r0.<com.sun.lwuit.TextField: int keyFwd> = $b0;

        if $z0 == 0 goto label3;

        $b1 = 5;

        goto label4;

     label3:
        $b1 = 2;

     label4:
        r0.<com.sun.lwuit.TextField: int keyBack> = $b1;

        $r1 = virtualinvoke r0.<com.sun.lwuit.TextField: com.sun.lwuit.Form getComponentForm()>();

        virtualinvoke $r1.<com.sun.lwuit.Form: void registerAnimated(com.sun.lwuit.animations.Animation)>(r0);

        return;
    }

    public void setCursorBlinkTimeOn(int)
    {
        int i0;
        com.sun.lwuit.TextField r0;

        r0 := @this: com.sun.lwuit.TextField;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.TextField: int blinkOnTime> = i0;

        return;
    }

    public void setCursorBlinkTimeOff(int)
    {
        int i0;
        com.sun.lwuit.TextField r0;

        r0 := @this: com.sun.lwuit.TextField;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.TextField: int blinkOffTime> = i0;

        return;
    }

    public int getCursorBlinkTimeOn()
    {
        int $i0;
        com.sun.lwuit.TextField r0;

        r0 := @this: com.sun.lwuit.TextField;

        $i0 = r0.<com.sun.lwuit.TextField: int blinkOnTime>;

        return $i0;
    }

    public int getCursorBlinkTimeOff()
    {
        int $i0;
        com.sun.lwuit.TextField r0;

        r0 := @this: com.sun.lwuit.TextField;

        $i0 = r0.<com.sun.lwuit.TextField: int blinkOffTime>;

        return $i0;
    }

    public boolean animate()
    {
        byte $b5, $b10, $b15, $b21;
        boolean $z0, $z1, $z2, $z3, $z4;
        long $l0, $l1, $l3, $l4, $l6, $l8, $l9, $l11, $l12, $l14, $l17, $l19, $l20;
        int $i2, $i7, $i13, $i16, $i18, $i22, $i23, $i24, $i25;
        com.sun.lwuit.TextField r0;

        r0 := @this: com.sun.lwuit.TextField;

        $z0 = specialinvoke r0.<com.sun.lwuit.TextArea: boolean animate()>();

        $z1 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean hasFocus()>();

        if $z1 == 0 goto label5;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $z2 = r0.<com.sun.lwuit.TextField: boolean drawCursor>;

        if $z2 == 0 goto label1;

        $l17 = r0.<com.sun.lwuit.TextField: long cursorBlinkTime>;

        $l20 = $l0 - $l17;

        $i18 = r0.<com.sun.lwuit.TextField: int blinkOnTime>;

        $l19 = (long) $i18;

        $b21 = $l20 cmp $l19;

        $i22 = (int) $b21;

        if $i22 <= 0 goto label2;

        r0.<com.sun.lwuit.TextField: long cursorBlinkTime> = $l0;

        r0.<com.sun.lwuit.TextField: boolean drawCursor> = 0;

        return 1;

     label1:
        $l1 = r0.<com.sun.lwuit.TextField: long cursorBlinkTime>;

        $l4 = $l0 - $l1;

        $i2 = r0.<com.sun.lwuit.TextField: int blinkOffTime>;

        $l3 = (long) $i2;

        $b5 = $l4 cmp $l3;

        $i23 = (int) $b5;

        if $i23 <= 0 goto label2;

        r0.<com.sun.lwuit.TextField: long cursorBlinkTime> = $l0;

        r0.<com.sun.lwuit.TextField: boolean drawCursor> = 1;

        return 1;

     label2:
        $z3 = r0.<com.sun.lwuit.TextField: boolean pressedAndNotReleased>;

        if $z3 == 0 goto label3;

        $l11 = r0.<com.sun.lwuit.TextField: long pressTime>;

        $l12 = $l0 - $l11;

        $i13 = virtualinvoke r0.<com.sun.lwuit.TextField: int getLongClickDuration()>();

        $l14 = (long) $i13;

        $b15 = $l12 cmp $l14;

        $i24 = (int) $b15;

        if $i24 < 0 goto label4;

        $i16 = r0.<com.sun.lwuit.TextField: int pressedKeyCode>;

        specialinvoke r0.<com.sun.lwuit.TextField: void longClick(int)>($i16);

        goto label4;

     label3:
        $z4 = r0.<com.sun.lwuit.TextField: boolean pendingCommit>;

        if $z4 == 0 goto label4;

        $l6 = r0.<com.sun.lwuit.TextField: long releaseTime>;

        $l9 = $l0 - $l6;

        $i7 = r0.<com.sun.lwuit.TextField: int commitTimeout>;

        $l8 = (long) $i7;

        $b10 = $l9 cmp $l8;

        $i25 = (int) $b10;

        if $i25 <= 0 goto label4;

        virtualinvoke r0.<com.sun.lwuit.TextField: void commitChange()>();

     label4:
        goto label6;

     label5:
        r0.<com.sun.lwuit.TextField: boolean drawCursor> = 0;

     label6:
        return $z0;
    }

    public void pointerReleased(int, int)
    {
        com.sun.lwuit.plaf.Style $r1, $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, i2, i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19, i20;
        java.lang.String $r3;
        com.sun.lwuit.TextField r0;
        com.sun.lwuit.Display $r6, $r7, $r8;
        com.sun.lwuit.Font $r2, $r5;

        r0 := @this: com.sun.lwuit.TextField;

        i17 := @parameter0: int;

        i3 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.sun.lwuit.TextField: com.sun.lwuit.plaf.Style getStyle()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        $i0 = virtualinvoke $r2.<com.sun.lwuit.Font: int getHeight()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.TextField: int getRowsGap()>();

        i2 = $i0 + $i1;

        $i4 = virtualinvoke r0.<com.sun.lwuit.TextField: int getAbsoluteY()>();

        $i5 = i3 - $i4;

        i6 = $i5 / i2;

        r0.<com.sun.lwuit.TextField: int cursorY> = i6;

        $i7 = r0.<com.sun.lwuit.TextField: int cursorY>;

        $i8 = virtualinvoke r0.<com.sun.lwuit.TextField: int getLines()>();

        $i9 = $i8 - 1;

        $i10 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i9);

        r0.<com.sun.lwuit.TextField: int cursorY> = $i10;

        $i11 = r0.<com.sun.lwuit.TextField: int cursorY>;

        $r3 = virtualinvoke r0.<com.sun.lwuit.TextField: java.lang.String getTextAt(int)>($i11);

        $i12 = virtualinvoke $r3.<java.lang.String: int length()>();

        i18 = 0;

        $r4 = virtualinvoke r0.<com.sun.lwuit.TextField: com.sun.lwuit.plaf.Style getStyle()>();

        $r5 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        $i13 = virtualinvoke r0.<com.sun.lwuit.TextField: int getAbsoluteX()>();

        i19 = i17 - $i13;

        i20 = 0;

     label1:
        if i20 >= $i12 goto label2;

        $i16 = virtualinvoke $r5.<com.sun.lwuit.Font: int substringWidth(java.lang.String,int,int)>($r3, 0, i20);

        if i19 <= $i16 goto label2;

        i18 = i20;

        i20 = i20 + 1;

        goto label1;

     label2:
        $i14 = $i12 - 1;

        if i18 != $i14 goto label3;

        $i15 = virtualinvoke $r5.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>($r3);

        if $i15 >= i19 goto label3;

        i18 = $i12;

     label3:
        r0.<com.sun.lwuit.TextField: int cursorX> = i18;

        $z3 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean isEditable()>();

        if $z3 != 0 goto label4;

        return;

     label4:
        $r6 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $z0 = virtualinvoke $r6.<com.sun.lwuit.Display: boolean isVirtualKeyboardShowingSupported()>();

        if $z0 == 0 goto label7;

        $r7 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r8 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $z2 = virtualinvoke $r8.<com.sun.lwuit.Display: boolean isVirtualKeyboardShowing()>();

        if $z2 != 0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        virtualinvoke $r7.<com.sun.lwuit.Display: void setShowVirtualKeyboard(boolean)>($z4);

        goto label9;

     label7:
        $z1 = virtualinvoke r0.<com.sun.lwuit.TextField: boolean handlesInput()>();

        if $z1 != 0 goto label8;

        virtualinvoke r0.<com.sun.lwuit.TextField: void fireClicked()>();

        goto label9;

     label8:
        virtualinvoke r0.<com.sun.lwuit.TextField: void repaint()>();

     label9:
        specialinvoke r0.<com.sun.lwuit.TextArea: void pointerReleased(int,int)>(i19, i3);

        return;
    }

    public boolean isUseSoftkeys()
    {
        com.sun.lwuit.TextField r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextField;

        $z0 = r0.<com.sun.lwuit.TextField: boolean useSoftkeys>;

        return $z0;
    }

    public void setUseSoftkeys(boolean)
    {
        com.sun.lwuit.TextField r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.TextField;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.TextField: boolean useSoftkeys> = z0;

        return;
    }

    public void addDataChangeListener(com.sun.lwuit.events.DataChangedListener)
    {
        com.sun.lwuit.TextField r0;
        com.sun.lwuit.events.DataChangedListener r1;
        com.sun.lwuit.util.EventDispatcher $r2;

        r0 := @this: com.sun.lwuit.TextField;

        r1 := @parameter0: com.sun.lwuit.events.DataChangedListener;

        $r2 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.util.EventDispatcher listeners>;

        virtualinvoke $r2.<com.sun.lwuit.util.EventDispatcher: void addListener(java.lang.Object)>(r1);

        return;
    }

    public void removeDataChangeListener(com.sun.lwuit.events.DataChangedListener)
    {
        com.sun.lwuit.TextField r0;
        com.sun.lwuit.events.DataChangedListener r1;
        com.sun.lwuit.util.EventDispatcher $r2;

        r0 := @this: com.sun.lwuit.TextField;

        r1 := @parameter0: com.sun.lwuit.events.DataChangedListener;

        $r2 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.util.EventDispatcher listeners>;

        virtualinvoke $r2.<com.sun.lwuit.util.EventDispatcher: void removeListener(java.lang.Object)>(r1);

        return;
    }

    private void fireDataChanged(int, int)
    {
        int i0, i1;
        com.sun.lwuit.TextField r0;
        com.sun.lwuit.util.EventDispatcher $r1, $r2;

        r0 := @this: com.sun.lwuit.TextField;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        $r1 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.util.EventDispatcher listeners>;

        if $r1 == null goto label1;

        $r2 = r0.<com.sun.lwuit.TextField: com.sun.lwuit.util.EventDispatcher listeners>;

        virtualinvoke $r2.<com.sun.lwuit.util.EventDispatcher: void fireDataChangeEvent(int,int)>(i0, i1);

     label1:
        return;
    }

    void onEditComplete(java.lang.String)
    {
        int $i0;
        java.lang.String r1;
        com.sun.lwuit.TextField r0;

        r0 := @this: com.sun.lwuit.TextField;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.sun.lwuit.TextArea: void onEditComplete(java.lang.String)>(r1);

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        virtualinvoke r0.<com.sun.lwuit.TextField: void setCursorPosition(int)>($i0);

        return;
    }

    public boolean isReplaceMenu()
    {
        com.sun.lwuit.TextField r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextField;

        $z0 = r0.<com.sun.lwuit.TextField: boolean replaceMenu>;

        return $z0;
    }

    public void setReplaceMenu(boolean)
    {
        com.sun.lwuit.TextField r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.TextField;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.TextField: boolean replaceMenu> = z0;

        return;
    }

    public static boolean isReplaceMenuDefault()
    {
        boolean $z0;

        $z0 = <com.sun.lwuit.TextField: boolean replaceMenuDefault>;

        return $z0;
    }

    public static void setReplaceMenuDefault(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <com.sun.lwuit.TextField: boolean replaceMenuDefault> = z0;

        return;
    }

    public static void setQwertyAutoDetect(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <com.sun.lwuit.TextField: boolean qwertyAutoDetect> = z0;

        return;
    }

    public static void setQwertyDevice(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <com.sun.lwuit.TextField: boolean qwertyDevice> = z0;

        return;
    }

    public static boolean isQwertyAutoDetect()
    {
        boolean $z0;

        $z0 = <com.sun.lwuit.TextField: boolean qwertyAutoDetect>;

        return $z0;
    }

    public static boolean isQwertyDevice()
    {
        boolean $z0;

        $z0 = <com.sun.lwuit.TextField: boolean qwertyDevice>;

        return $z0;
    }

    public static void setDefaultChangeInputModeKey(int)
    {
        int i0;

        i0 := @parameter0: int;

        <com.sun.lwuit.TextField: int defaultChangeInputModeKey> = i0;

        return;
    }

    public static int getDefaultChangeInputModeKey()
    {
        int $i0;

        $i0 = <com.sun.lwuit.TextField: int defaultChangeInputModeKey>;

        return $i0;
    }

    public static void setDefaultSymbolDialogKey(int)
    {
        int i0;

        i0 := @parameter0: int;

        <com.sun.lwuit.TextField: int defaultSymbolDialogKey> = i0;

        return;
    }

    public static int getDefaultSymbolDialogKey()
    {
        int $i0;

        $i0 = <com.sun.lwuit.TextField: int defaultSymbolDialogKey>;

        return $i0;
    }

    public void setOverwriteMode(boolean)
    {
        com.sun.lwuit.TextField r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.TextField;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.TextField: boolean overwriteMode> = z0;

        return;
    }

    public boolean isOverwriteMode()
    {
        com.sun.lwuit.TextField r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextField;

        $z0 = r0.<com.sun.lwuit.TextField: boolean overwriteMode>;

        return $z0;
    }

    public void setLeftAndRightEditingTrigger(boolean)
    {
        com.sun.lwuit.TextField r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.TextField;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.TextField: boolean leftAndRightEditingTrigger> = z0;

        return;
    }

    public boolean isLeftAndRightEditingTrigger()
    {
        com.sun.lwuit.TextField r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextField;

        $z0 = r0.<com.sun.lwuit.TextField: boolean leftAndRightEditingTrigger>;

        return $z0;
    }

    public void setAlignment(int)
    {
        int i0;
        com.sun.lwuit.TextField r0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.sun.lwuit.TextField;

        i0 := @parameter0: int;

        if i0 != 4 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("CENTER alignment is not supported in TextField.");

        throw $r1;

     label1:
        specialinvoke r0.<com.sun.lwuit.TextArea: void setAlignment(int)>(i0);

        return;
    }

    static long access$002(com.sun.lwuit.TextField, long)
    {
        long l0;
        com.sun.lwuit.TextField r0;

        r0 := @parameter0: com.sun.lwuit.TextField;

        l0 := @parameter1: long;

        r0.<com.sun.lwuit.TextField: long releaseTime> = l0;

        return l0;
    }

    static boolean access$102(com.sun.lwuit.TextField, boolean)
    {
        com.sun.lwuit.TextField r0;
        boolean z0;

        r0 := @parameter0: com.sun.lwuit.TextField;

        z0 := @parameter1: boolean;

        r0.<com.sun.lwuit.TextField: boolean pressedAndNotReleased> = z0;

        return z0;
    }

    static boolean access$202(com.sun.lwuit.TextField, boolean)
    {
        com.sun.lwuit.TextField r0;
        boolean z0;

        r0 := @parameter0: com.sun.lwuit.TextField;

        z0 := @parameter1: boolean;

        r0.<com.sun.lwuit.TextField: boolean longClick> = z0;

        return z0;
    }

    static void <clinit>()
    {
        java.util.Vector $r1;
        char[] $r2, $r3;
        java.lang.String[] $r0, $r4;

        <com.sun.lwuit.TextField: boolean replaceMenuDefault> = 1;

        <com.sun.lwuit.TextField: java.lang.String clearText> = "Clear";

        <com.sun.lwuit.TextField: java.lang.String t9Text> = "T9";

        $r0 = newarray (java.lang.String)[4];

        $r0[0] = "Abc";

        $r0[1] = "ABC";

        $r0[2] = "abc";

        $r0[3] = "123";

        <com.sun.lwuit.TextField: java.lang.String[] defaultInputModeOrder> = $r0;

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        <com.sun.lwuit.TextField: java.util.Vector firstUppercaseInputMode> = $r1;

        <com.sun.lwuit.TextField: boolean qwertyAutoDetect> = 1;

        <com.sun.lwuit.TextField: int defaultChangeInputModeKey> = 35;

        <com.sun.lwuit.TextField: int defaultSymbolDialogKey> = 42;

        $r2 = newarray (char)[25];

        $r2[0] = 46;

        $r2[1] = 44;

        $r2[2] = 63;

        $r2[3] = 33;

        $r2[4] = 36;

        $r2[5] = 64;

        $r2[6] = 39;

        $r2[7] = 45;

        $r2[8] = 95;

        $r2[9] = 41;

        $r2[10] = 40;

        $r2[11] = 58;

        $r2[12] = 59;

        $r2[13] = 38;

        $r2[14] = 47;

        $r2[15] = 126;

        $r2[16] = 92;

        $r2[17] = 37;

        $r2[18] = 42;

        $r2[19] = 35;

        $r2[20] = 43;

        $r2[21] = 62;

        $r2[22] = 61;

        $r2[23] = 60;

        $r2[24] = 34;

        <com.sun.lwuit.TextField: char[] DEFAULT_SYMBOL_TABLE> = $r2;

        $r3 = <com.sun.lwuit.TextField: char[] DEFAULT_SYMBOL_TABLE>;

        <com.sun.lwuit.TextField: char[] symbolTable> = $r3;

        $r4 = newarray (java.lang.String)[10];

        $r4[0] = " 0";

        $r4[1] = ".,?!\'\"1-()@/:_";

        $r4[2] = "ABC2";

        $r4[3] = "DEF3";

        $r4[4] = "GHI4";

        $r4[5] = "JKL5";

        $r4[6] = "MNO6";

        $r4[7] = "PQRS7";

        $r4[8] = "TUV8";

        $r4[9] = "WXYZ9";

        <com.sun.lwuit.TextField: java.lang.String[] DEFAULT_KEY_CODES> = $r4;

        return;
    }
}
