final class com.hp.hpl.jena.graph.compose.CompositionBase$6 extends com.hp.hpl.jena.util.iterator.Filter
{
    final com.hp.hpl.jena.graph.Graph val$g;

    void <init>(com.hp.hpl.jena.graph.Graph)
    {
        com.hp.hpl.jena.graph.compose.CompositionBase$6 r0;
        com.hp.hpl.jena.graph.Graph r1;

        r0 := @this: com.hp.hpl.jena.graph.compose.CompositionBase$6;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r0.<com.hp.hpl.jena.graph.compose.CompositionBase$6: com.hp.hpl.jena.graph.Graph val$g> = r1;

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.Filter: void <init>()>();

        return;
    }

    public boolean accept(com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.graph.compose.CompositionBase$6 r0;
        com.hp.hpl.jena.graph.Graph $r2;
        com.hp.hpl.jena.graph.Triple r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.compose.CompositionBase$6;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $r2 = r0.<com.hp.hpl.jena.graph.compose.CompositionBase$6: com.hp.hpl.jena.graph.Graph val$g>;

        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.graph.Graph: boolean contains(com.hp.hpl.jena.graph.Triple)>(r1);

        return $z0;
    }

    public volatile boolean accept(java.lang.Object)
    {
        com.hp.hpl.jena.graph.compose.CompositionBase$6 r0;
        java.lang.Object r1;
        com.hp.hpl.jena.graph.Triple $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.compose.CompositionBase$6;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.hp.hpl.jena.graph.Triple) r1;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.graph.compose.CompositionBase$6: boolean accept(com.hp.hpl.jena.graph.Triple)>($r2);

        return $z0;
    }
}
