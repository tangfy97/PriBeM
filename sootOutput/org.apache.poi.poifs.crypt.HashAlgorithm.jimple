public final enum class org.apache.poi.poifs.crypt.HashAlgorithm extends java.lang.Enum
{
    public static final enum org.apache.poi.poifs.crypt.HashAlgorithm none;
    public static final enum org.apache.poi.poifs.crypt.HashAlgorithm sha1;
    public static final enum org.apache.poi.poifs.crypt.HashAlgorithm sha256;
    public static final enum org.apache.poi.poifs.crypt.HashAlgorithm sha384;
    public static final enum org.apache.poi.poifs.crypt.HashAlgorithm sha512;
    public static final enum org.apache.poi.poifs.crypt.HashAlgorithm md5;
    public static final enum org.apache.poi.poifs.crypt.HashAlgorithm md2;
    public static final enum org.apache.poi.poifs.crypt.HashAlgorithm md4;
    public static final enum org.apache.poi.poifs.crypt.HashAlgorithm ripemd128;
    public static final enum org.apache.poi.poifs.crypt.HashAlgorithm ripemd160;
    public static final enum org.apache.poi.poifs.crypt.HashAlgorithm whirlpool;
    public final java.lang.String jceId;
    public final int ecmaId;
    public final java.lang.String ecmaString;
    public final int hashSize;
    public final java.lang.String jceHmacId;
    public final boolean needsBouncyCastle;
    private static final org.apache.poi.poifs.crypt.HashAlgorithm[] $VALUES;

    public static org.apache.poi.poifs.crypt.HashAlgorithm[] values()
    {
        java.lang.Object $r1;
        org.apache.poi.poifs.crypt.HashAlgorithm[] $r0, $r2;

        $r0 = <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.poi.poifs.crypt.HashAlgorithm[]) $r1;

        return $r2;
    }

    public static org.apache.poi.poifs.crypt.HashAlgorithm valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.apache.poi.poifs.crypt.HashAlgorithm $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/poi/poifs/crypt/HashAlgorithm;", r0);

        $r2 = (org.apache.poi.poifs.crypt.HashAlgorithm) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.String, int, java.lang.String, int, java.lang.String, boolean)
    {
        org.apache.poi.poifs.crypt.HashAlgorithm r0;
        int i0, i1, i2;
        java.lang.String r1, r2, r3, r4;
        boolean z0;

        r0 := @this: org.apache.poi.poifs.crypt.HashAlgorithm;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        r3 := @parameter4: java.lang.String;

        i2 := @parameter5: int;

        r4 := @parameter6: java.lang.String;

        z0 := @parameter7: boolean;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.apache.poi.poifs.crypt.HashAlgorithm: java.lang.String jceId> = r2;

        r0.<org.apache.poi.poifs.crypt.HashAlgorithm: int ecmaId> = i1;

        r0.<org.apache.poi.poifs.crypt.HashAlgorithm: java.lang.String ecmaString> = r3;

        r0.<org.apache.poi.poifs.crypt.HashAlgorithm: int hashSize> = i2;

        r0.<org.apache.poi.poifs.crypt.HashAlgorithm: java.lang.String jceHmacId> = r4;

        r0.<org.apache.poi.poifs.crypt.HashAlgorithm: boolean needsBouncyCastle> = z0;

        return;
    }

    public static org.apache.poi.poifs.crypt.HashAlgorithm fromEcmaId(int)
    {
        org.apache.poi.EncryptedDocumentException $r1;
        int i0, i1, $i2, i3;
        org.apache.poi.poifs.crypt.HashAlgorithm[] $r0;
        org.apache.poi.poifs.crypt.HashAlgorithm r2;

        i1 := @parameter0: int;

        $r0 = staticinvoke <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm[] values()>();

        i0 = lengthof $r0;

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        r2 = $r0[i3];

        $i2 = r2.<org.apache.poi.poifs.crypt.HashAlgorithm: int ecmaId>;

        if $i2 != i1 goto label2;

        return r2;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r1 = new org.apache.poi.EncryptedDocumentException;

        specialinvoke $r1.<org.apache.poi.EncryptedDocumentException: void <init>(java.lang.String)>("hash algorithm not found");

        throw $r1;
    }

    public static org.apache.poi.poifs.crypt.HashAlgorithm fromEcmaId(java.lang.String)
    {
        org.apache.poi.poifs.crypt.HashAlgorithm r2;
        org.apache.poi.EncryptedDocumentException $r1;
        int i0, i1;
        org.apache.poi.poifs.crypt.HashAlgorithm[] $r0;
        java.lang.String r3, $r4;
        boolean $z0;

        r3 := @parameter0: java.lang.String;

        $r0 = staticinvoke <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm[] values()>();

        i0 = lengthof $r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = $r0[i1];

        $r4 = r2.<org.apache.poi.poifs.crypt.HashAlgorithm: java.lang.String ecmaString>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label2;

        return r2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r1 = new org.apache.poi.EncryptedDocumentException;

        specialinvoke $r1.<org.apache.poi.EncryptedDocumentException: void <init>(java.lang.String)>("hash algorithm not found");

        throw $r1;
    }

    static void <clinit>()
    {
        int $i1, $i3, $i5, $i7, $i9, $i11, $i13, $i15, $i17, $i19;
        org.apache.poi.poifs.crypt.HashAlgorithm $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33;
        org.apache.poi.poifs.crypt.HashAlgorithm[] $r11;

        $r23 = new org.apache.poi.poifs.crypt.HashAlgorithm;

        specialinvoke $r23.<org.apache.poi.poifs.crypt.HashAlgorithm: void <init>(java.lang.String,int,java.lang.String,int,java.lang.String,int,java.lang.String,boolean)>("none", 0, "", 0, "", 0, "", 0);

        <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm none> = $r23;

        $r24 = new org.apache.poi.poifs.crypt.HashAlgorithm;

        $i1 = (int) 32772;

        specialinvoke $r24.<org.apache.poi.poifs.crypt.HashAlgorithm: void <init>(java.lang.String,int,java.lang.String,int,java.lang.String,int,java.lang.String,boolean)>("sha1", 1, "SHA-1", $i1, "SHA1", 20, "HmacSHA1", 0);

        <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm sha1> = $r24;

        $r25 = new org.apache.poi.poifs.crypt.HashAlgorithm;

        $i3 = (int) 32780;

        specialinvoke $r25.<org.apache.poi.poifs.crypt.HashAlgorithm: void <init>(java.lang.String,int,java.lang.String,int,java.lang.String,int,java.lang.String,boolean)>("sha256", 2, "SHA-256", $i3, "SHA256", 32, "HmacSHA256", 0);

        <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm sha256> = $r25;

        $r26 = new org.apache.poi.poifs.crypt.HashAlgorithm;

        $i5 = (int) 32781;

        specialinvoke $r26.<org.apache.poi.poifs.crypt.HashAlgorithm: void <init>(java.lang.String,int,java.lang.String,int,java.lang.String,int,java.lang.String,boolean)>("sha384", 3, "SHA-384", $i5, "SHA384", 48, "HmacSHA384", 0);

        <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm sha384> = $r26;

        $r27 = new org.apache.poi.poifs.crypt.HashAlgorithm;

        $i7 = (int) 32782;

        specialinvoke $r27.<org.apache.poi.poifs.crypt.HashAlgorithm: void <init>(java.lang.String,int,java.lang.String,int,java.lang.String,int,java.lang.String,boolean)>("sha512", 4, "SHA-512", $i7, "SHA512", 64, "HmacSHA512", 0);

        <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm sha512> = $r27;

        $r28 = new org.apache.poi.poifs.crypt.HashAlgorithm;

        $i9 = (int) -1;

        specialinvoke $r28.<org.apache.poi.poifs.crypt.HashAlgorithm: void <init>(java.lang.String,int,java.lang.String,int,java.lang.String,int,java.lang.String,boolean)>("md5", 5, "MD5", $i9, "MD5", 16, "HmacMD5", 0);

        <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm md5> = $r28;

        $r29 = new org.apache.poi.poifs.crypt.HashAlgorithm;

        $i11 = (int) -1;

        specialinvoke $r29.<org.apache.poi.poifs.crypt.HashAlgorithm: void <init>(java.lang.String,int,java.lang.String,int,java.lang.String,int,java.lang.String,boolean)>("md2", 6, "MD2", $i11, "MD2", 16, "Hmac-MD2", 1);

        <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm md2> = $r29;

        $r30 = new org.apache.poi.poifs.crypt.HashAlgorithm;

        $i13 = (int) -1;

        specialinvoke $r30.<org.apache.poi.poifs.crypt.HashAlgorithm: void <init>(java.lang.String,int,java.lang.String,int,java.lang.String,int,java.lang.String,boolean)>("md4", 7, "MD4", $i13, "MD4", 16, "Hmac-MD4", 1);

        <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm md4> = $r30;

        $r31 = new org.apache.poi.poifs.crypt.HashAlgorithm;

        $i15 = (int) -1;

        specialinvoke $r31.<org.apache.poi.poifs.crypt.HashAlgorithm: void <init>(java.lang.String,int,java.lang.String,int,java.lang.String,int,java.lang.String,boolean)>("ripemd128", 8, "RipeMD128", $i15, "RIPEMD-128", 16, "HMac-RipeMD128", 1);

        <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm ripemd128> = $r31;

        $r32 = new org.apache.poi.poifs.crypt.HashAlgorithm;

        $i17 = (int) -1;

        specialinvoke $r32.<org.apache.poi.poifs.crypt.HashAlgorithm: void <init>(java.lang.String,int,java.lang.String,int,java.lang.String,int,java.lang.String,boolean)>("ripemd160", 9, "RipeMD160", $i17, "RIPEMD-160", 20, "HMac-RipeMD160", 1);

        <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm ripemd160> = $r32;

        $r33 = new org.apache.poi.poifs.crypt.HashAlgorithm;

        $i19 = (int) -1;

        specialinvoke $r33.<org.apache.poi.poifs.crypt.HashAlgorithm: void <init>(java.lang.String,int,java.lang.String,int,java.lang.String,int,java.lang.String,boolean)>("whirlpool", 10, "Whirlpool", $i19, "WHIRLPOOL", 64, "HMac-Whirlpool", 1);

        <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm whirlpool> = $r33;

        $r11 = newarray (org.apache.poi.poifs.crypt.HashAlgorithm)[11];

        $r12 = <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm none>;

        $r11[0] = $r12;

        $r13 = <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm sha1>;

        $r11[1] = $r13;

        $r14 = <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm sha256>;

        $r11[2] = $r14;

        $r15 = <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm sha384>;

        $r11[3] = $r15;

        $r16 = <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm sha512>;

        $r11[4] = $r16;

        $r17 = <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm md5>;

        $r11[5] = $r17;

        $r18 = <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm md2>;

        $r11[6] = $r18;

        $r19 = <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm md4>;

        $r11[7] = $r19;

        $r20 = <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm ripemd128>;

        $r11[8] = $r20;

        $r21 = <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm ripemd160>;

        $r11[9] = $r21;

        $r22 = <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm whirlpool>;

        $r11[10] = $r22;

        <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm[] $VALUES> = $r11;

        return;
    }
}
