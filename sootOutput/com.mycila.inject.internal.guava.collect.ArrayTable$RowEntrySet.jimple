class com.mycila.inject.internal.guava.collect.ArrayTable$RowEntrySet extends java.util.AbstractSet
{
    final int rowIndex;
    final com.mycila.inject.internal.guava.collect.ArrayTable this$0;

    void <init>(com.mycila.inject.internal.guava.collect.ArrayTable, int)
    {
        int i0;
        com.mycila.inject.internal.guava.collect.ArrayTable r1;
        com.mycila.inject.internal.guava.collect.ArrayTable$RowEntrySet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ArrayTable$RowEntrySet;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.ArrayTable;

        i0 := @parameter1: int;

        r0.<com.mycila.inject.internal.guava.collect.ArrayTable$RowEntrySet: com.mycila.inject.internal.guava.collect.ArrayTable this$0> = r1;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        r0.<com.mycila.inject.internal.guava.collect.ArrayTable$RowEntrySet: int rowIndex> = i0;

        return;
    }

    public java.util.Iterator iterator()
    {
        int $i0;
        com.mycila.inject.internal.guava.collect.ArrayTable$RowEntrySet$1 $r0;
        com.mycila.inject.internal.guava.collect.ArrayTable$RowEntrySet r1;

        r1 := @this: com.mycila.inject.internal.guava.collect.ArrayTable$RowEntrySet;

        $r0 = new com.mycila.inject.internal.guava.collect.ArrayTable$RowEntrySet$1;

        $i0 = virtualinvoke r1.<com.mycila.inject.internal.guava.collect.ArrayTable$RowEntrySet: int size()>();

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.ArrayTable$RowEntrySet$1: void <init>(com.mycila.inject.internal.guava.collect.ArrayTable$RowEntrySet,int)>(r1, $i0);

        return $r0;
    }

    public int size()
    {
        com.mycila.inject.internal.guava.collect.ArrayTable $r1;
        com.mycila.inject.internal.guava.collect.ArrayTable$RowEntrySet r0;
        int $i0;
        com.mycila.inject.internal.guava.collect.ImmutableList $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.ArrayTable$RowEntrySet;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ArrayTable$RowEntrySet: com.mycila.inject.internal.guava.collect.ArrayTable this$0>;

        $r2 = staticinvoke <com.mycila.inject.internal.guava.collect.ArrayTable: com.mycila.inject.internal.guava.collect.ImmutableList access$100(com.mycila.inject.internal.guava.collect.ArrayTable)>($r1);

        $i0 = virtualinvoke $r2.<com.mycila.inject.internal.guava.collect.ImmutableList: int size()>();

        return $i0;
    }
}
