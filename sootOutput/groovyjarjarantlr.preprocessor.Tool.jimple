public class groovyjarjarantlr.preprocessor.Tool extends java.lang.Object
{
    protected groovyjarjarantlr.preprocessor.Hierarchy theHierarchy;
    protected java.lang.String grammarFileName;
    protected java.lang.String[] args;
    protected int nargs;
    protected groovyjarjarantlr.collections.impl.Vector grammars;
    protected groovyjarjarantlr.Tool antlrTool;

    public void <init>(groovyjarjarantlr.Tool, java.lang.String[])
    {
        java.lang.String[] r2;
        groovyjarjarantlr.Tool r1;
        groovyjarjarantlr.preprocessor.Tool r0;

        r0 := @this: groovyjarjarantlr.preprocessor.Tool;

        r1 := @parameter0: groovyjarjarantlr.Tool;

        r2 := @parameter1: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<groovyjarjarantlr.preprocessor.Tool: groovyjarjarantlr.Tool antlrTool> = r1;

        specialinvoke r0.<groovyjarjarantlr.preprocessor.Tool: void processArguments(java.lang.String[])>(r2);

        return;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r4, $r6;
        java.lang.String[] r2, $r3;
        groovyjarjarantlr.Tool $r0;
        groovyjarjarantlr.preprocessor.Tool $r1;
        java.lang.StringBuffer $r5, $r7, $r9;
        int $i0, i1;
        java.lang.String $r8, $r10;

        r2 := @parameter0: java.lang.String[];

        $r0 = new groovyjarjarantlr.Tool;

        specialinvoke $r0.<groovyjarjarantlr.Tool: void <init>()>();

        $r1 = new groovyjarjarantlr.preprocessor.Tool;

        specialinvoke $r1.<groovyjarjarantlr.preprocessor.Tool: void <init>(groovyjarjarantlr.Tool,java.lang.String[])>($r0, r2);

        virtualinvoke $r1.<groovyjarjarantlr.preprocessor.Tool: boolean preprocess()>();

        $r3 = virtualinvoke $r1.<groovyjarjarantlr.preprocessor.Tool: java.lang.String[] preprocessedArgList()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r3;

        if i1 >= $i0 goto label2;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r8 = $r3[i1];

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void print(java.lang.String)>($r10);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println()>();

        return;
    }

    public boolean preprocess()
    {
        java.util.Enumeration $r26;
        groovyjarjarantlr.preprocessor.Tool r0;
        groovyjarjarantlr.collections.impl.Vector $r2, $r25;
        boolean $z0, $z1, $z2;
        groovyjarjarantlr.preprocessor.GrammarFile $r8;
        java.io.FileNotFoundException $r36;
        java.lang.String[] $r12, $r21;
        groovyjarjarantlr.Tool $r14, $r24, $r29, $r32, $r38;
        java.lang.StringBuffer $r13, $r16, $r18, $r19, $r31, $r33, $r34, $r37, $r39, $r40, $r41;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1, $r4, $r6, $r9, $r10, $r11, $r15, $r17, $r20, $r22, $r35, $r42, r43;
        groovyjarjarantlr.preprocessor.Hierarchy $r3, $r5, $r7, $r23, $r28;
        java.io.IOException $r30;
        java.lang.Object $r27;

        r0 := @this: groovyjarjarantlr.preprocessor.Tool;

        $r1 = r0.<groovyjarjarantlr.preprocessor.Tool: java.lang.String grammarFileName>;

        if $r1 != null goto label01;

        $r29 = r0.<groovyjarjarantlr.preprocessor.Tool: groovyjarjarantlr.Tool antlrTool>;

        virtualinvoke $r29.<groovyjarjarantlr.Tool: void toolError(java.lang.String)>("no grammar file specified");

        return 0;

     label01:
        $r2 = r0.<groovyjarjarantlr.preprocessor.Tool: groovyjarjarantlr.collections.impl.Vector grammars>;

        if $r2 == null goto label06;

        $r23 = new groovyjarjarantlr.preprocessor.Hierarchy;

        $r24 = r0.<groovyjarjarantlr.preprocessor.Tool: groovyjarjarantlr.Tool antlrTool>;

        specialinvoke $r23.<groovyjarjarantlr.preprocessor.Hierarchy: void <init>(groovyjarjarantlr.Tool)>($r24);

        r0.<groovyjarjarantlr.preprocessor.Tool: groovyjarjarantlr.preprocessor.Hierarchy theHierarchy> = $r23;

        $r25 = r0.<groovyjarjarantlr.preprocessor.Tool: groovyjarjarantlr.collections.impl.Vector grammars>;

        $r26 = virtualinvoke $r25.<groovyjarjarantlr.collections.impl.Vector: java.util.Enumeration elements()>();

     label02:
        $z2 = interfaceinvoke $r26.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z2 == 0 goto label06;

        $r27 = interfaceinvoke $r26.<java.util.Enumeration: java.lang.Object nextElement()>();

        r43 = (java.lang.String) $r27;

     label03:
        $r28 = r0.<groovyjarjarantlr.preprocessor.Tool: groovyjarjarantlr.preprocessor.Hierarchy theHierarchy>;

        virtualinvoke $r28.<groovyjarjarantlr.preprocessor.Hierarchy: void readGrammarFile(java.lang.String)>(r43);

     label04:
        goto label02;

     label05:
        $r36 := @caughtexception;

        $r38 = r0.<groovyjarjarantlr.preprocessor.Tool: groovyjarjarantlr.Tool antlrTool>;

        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("file ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r43);

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" not found");

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r38.<groovyjarjarantlr.Tool: void toolError(java.lang.String)>($r42);

        return 0;

     label06:
        $r3 = r0.<groovyjarjarantlr.preprocessor.Tool: groovyjarjarantlr.preprocessor.Hierarchy theHierarchy>;

        $z0 = virtualinvoke $r3.<groovyjarjarantlr.preprocessor.Hierarchy: boolean verifyThatHierarchyIsComplete()>();

        if $z0 != 0 goto label07;

        return 0;

     label07:
        $r5 = r0.<groovyjarjarantlr.preprocessor.Tool: groovyjarjarantlr.preprocessor.Hierarchy theHierarchy>;

        $r4 = r0.<groovyjarjarantlr.preprocessor.Tool: java.lang.String grammarFileName>;

        virtualinvoke $r5.<groovyjarjarantlr.preprocessor.Hierarchy: void expandGrammarsInFile(java.lang.String)>($r4);

        $r7 = r0.<groovyjarjarantlr.preprocessor.Tool: groovyjarjarantlr.preprocessor.Hierarchy theHierarchy>;

        $r6 = r0.<groovyjarjarantlr.preprocessor.Tool: java.lang.String grammarFileName>;

        $r8 = virtualinvoke $r7.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.preprocessor.GrammarFile getFile(java.lang.String)>($r6);

        $r9 = r0.<groovyjarjarantlr.preprocessor.Tool: java.lang.String grammarFileName>;

        $r10 = virtualinvoke $r8.<groovyjarjarantlr.preprocessor.GrammarFile: java.lang.String nameForExpandedGrammarFile(java.lang.String)>($r9);

        $r11 = r0.<groovyjarjarantlr.preprocessor.Tool: java.lang.String grammarFileName>;

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z1 == 0 goto label08;

        $r21 = r0.<groovyjarjarantlr.preprocessor.Tool: java.lang.String[] args>;

        $i2 = r0.<groovyjarjarantlr.preprocessor.Tool: int nargs>;

        $i3 = $i2 + 1;

        r0.<groovyjarjarantlr.preprocessor.Tool: int nargs> = $i3;

        $r22 = r0.<groovyjarjarantlr.preprocessor.Tool: java.lang.String grammarFileName>;

        $r21[$i2] = $r22;

        goto label11;

     label08:
        virtualinvoke $r8.<groovyjarjarantlr.preprocessor.GrammarFile: void generateExpandedFile()>();

        $r12 = r0.<groovyjarjarantlr.preprocessor.Tool: java.lang.String[] args>;

        $i0 = r0.<groovyjarjarantlr.preprocessor.Tool: int nargs>;

        $i1 = $i0 + 1;

        r0.<groovyjarjarantlr.preprocessor.Tool: int nargs> = $i1;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = r0.<groovyjarjarantlr.preprocessor.Tool: groovyjarjarantlr.Tool antlrTool>;

        $r15 = virtualinvoke $r14.<groovyjarjarantlr.Tool: java.lang.String getOutputDirectory()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("file.separator");

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12[$i0] = $r20;

     label09:
        goto label11;

     label10:
        $r30 := @caughtexception;

        $r32 = r0.<groovyjarjarantlr.preprocessor.Tool: groovyjarjarantlr.Tool antlrTool>;

        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("cannot write expanded grammar file ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r32.<groovyjarjarantlr.Tool: void toolError(java.lang.String)>($r35);

        return 0;

     label11:
        return 1;

        catch java.io.FileNotFoundException from label03 to label04 with label05;
        catch java.io.IOException from label08 to label09 with label10;
    }

    public java.lang.String[] preprocessedArgList()
    {
        groovyjarjarantlr.preprocessor.Tool r0;
        int $i0, $i1;
        java.lang.String[] r1, $r2, $r3;

        r0 := @this: groovyjarjarantlr.preprocessor.Tool;

        $i0 = r0.<groovyjarjarantlr.preprocessor.Tool: int nargs>;

        r1 = newarray (java.lang.String)[$i0];

        $r2 = r0.<groovyjarjarantlr.preprocessor.Tool: java.lang.String[] args>;

        $i1 = r0.<groovyjarjarantlr.preprocessor.Tool: int nargs>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i1);

        r0.<groovyjarjarantlr.preprocessor.Tool: java.lang.String[] args> = r1;

        $r3 = r0.<groovyjarjarantlr.preprocessor.Tool: java.lang.String[] args>;

        return $r3;
    }

    private void processArguments(java.lang.String[])
    {
        groovyjarjarantlr.preprocessor.Tool r0;
        groovyjarjarantlr.collections.impl.Vector $r8, $r10, $r24, $r28;
        boolean $z0, $z1, $z2;
        java.lang.String[] r1, $r2, $r13, $r15, $r17;
        groovyjarjarantlr.Tool $r11, $r20, $r21, $r26, $r27;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, $i18, $i19;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r9, $r14, $r16, $r18, $r19, $r22, $r23, $r25;
        char $c3;

        r0 := @this: groovyjarjarantlr.preprocessor.Tool;

        r1 := @parameter0: java.lang.String[];

        r0.<groovyjarjarantlr.preprocessor.Tool: int nargs> = 0;

        $i0 = lengthof r1;

        $r2 = newarray (java.lang.String)[$i0];

        r0.<groovyjarjarantlr.preprocessor.Tool: java.lang.String[] args> = $r2;

        i16 = 0;

     label01:
        $i1 = lengthof r1;

        if i16 >= $i1 goto label10;

        $r3 = r1[i16];

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i2 != 0 goto label02;

        $r27 = r0.<groovyjarjarantlr.preprocessor.Tool: groovyjarjarantlr.Tool antlrTool>;

        virtualinvoke $r27.<groovyjarjarantlr.Tool: void warning(java.lang.String)>("Zero length argument ignoring...");

        goto label09;

     label02:
        $r4 = r1[i16];

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("-glib");

        if $z0 == 0 goto label04;

        $r22 = <java.io.File: java.lang.String separator>;

        $z2 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>("\\");

        if $z2 == 0 goto label03;

        $r25 = r1[i16];

        $i15 = virtualinvoke $r25.<java.lang.String: int indexOf(int)>(47);

        $i18 = (int) -1;

        if $i15 == $i18 goto label03;

        $r26 = r0.<groovyjarjarantlr.preprocessor.Tool: groovyjarjarantlr.Tool antlrTool>;

        virtualinvoke $r26.<groovyjarjarantlr.Tool: void warning(java.lang.String)>("-glib cannot deal with \'/\' on a PC: use \'\\\'; ignoring...");

        goto label09;

     label03:
        $i14 = i16 + 1;

        $r23 = r1[$i14];

        $r24 = staticinvoke <groovyjarjarantlr.Tool: groovyjarjarantlr.collections.impl.Vector parseSeparatedList(java.lang.String,char)>($r23, 59);

        r0.<groovyjarjarantlr.preprocessor.Tool: groovyjarjarantlr.collections.impl.Vector grammars> = $r24;

        i16 = i16 + 1;

        goto label09;

     label04:
        $r5 = r1[i16];

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("-o");

        if $z1 == 0 goto label06;

        $r15 = r0.<groovyjarjarantlr.preprocessor.Tool: java.lang.String[] args>;

        $i8 = r0.<groovyjarjarantlr.preprocessor.Tool: int nargs>;

        $i9 = $i8 + 1;

        r0.<groovyjarjarantlr.preprocessor.Tool: int nargs> = $i9;

        $r16 = r1[i16];

        $r15[$i8] = $r16;

        $i11 = i16 + 1;

        $i10 = lengthof r1;

        if $i11 < $i10 goto label05;

        $r21 = r0.<groovyjarjarantlr.preprocessor.Tool: groovyjarjarantlr.Tool antlrTool>;

        virtualinvoke $r21.<groovyjarjarantlr.Tool: void error(java.lang.String)>("missing output directory with -o option; ignoring");

        goto label09;

     label05:
        i16 = i16 + 1;

        $r17 = r0.<groovyjarjarantlr.preprocessor.Tool: java.lang.String[] args>;

        $i12 = r0.<groovyjarjarantlr.preprocessor.Tool: int nargs>;

        $i13 = $i12 + 1;

        r0.<groovyjarjarantlr.preprocessor.Tool: int nargs> = $i13;

        $r18 = r1[i16];

        $r17[$i12] = $r18;

        $r20 = r0.<groovyjarjarantlr.preprocessor.Tool: groovyjarjarantlr.Tool antlrTool>;

        $r19 = r1[i16];

        virtualinvoke $r20.<groovyjarjarantlr.Tool: void setOutputDirectory(java.lang.String)>($r19);

        goto label09;

     label06:
        $r6 = r1[i16];

        $c3 = virtualinvoke $r6.<java.lang.String: char charAt(int)>(0);

        $i19 = (int) $c3;

        if $i19 != 45 goto label07;

        $r13 = r0.<groovyjarjarantlr.preprocessor.Tool: java.lang.String[] args>;

        $i6 = r0.<groovyjarjarantlr.preprocessor.Tool: int nargs>;

        $i7 = $i6 + 1;

        r0.<groovyjarjarantlr.preprocessor.Tool: int nargs> = $i7;

        $r14 = r1[i16];

        $r13[$i6] = $r14;

        goto label09;

     label07:
        $r7 = r1[i16];

        r0.<groovyjarjarantlr.preprocessor.Tool: java.lang.String grammarFileName> = $r7;

        $r8 = r0.<groovyjarjarantlr.preprocessor.Tool: groovyjarjarantlr.collections.impl.Vector grammars>;

        if $r8 != null goto label08;

        $r28 = new groovyjarjarantlr.collections.impl.Vector;

        specialinvoke $r28.<groovyjarjarantlr.collections.impl.Vector: void <init>(int)>(10);

        r0.<groovyjarjarantlr.preprocessor.Tool: groovyjarjarantlr.collections.impl.Vector grammars> = $r28;

     label08:
        $r10 = r0.<groovyjarjarantlr.preprocessor.Tool: groovyjarjarantlr.collections.impl.Vector grammars>;

        $r9 = r0.<groovyjarjarantlr.preprocessor.Tool: java.lang.String grammarFileName>;

        virtualinvoke $r10.<groovyjarjarantlr.collections.impl.Vector: void appendElement(java.lang.Object)>($r9);

        $i5 = i16 + 1;

        $i4 = lengthof r1;

        if $i5 >= $i4 goto label09;

        $r11 = r0.<groovyjarjarantlr.preprocessor.Tool: groovyjarjarantlr.Tool antlrTool>;

        virtualinvoke $r11.<groovyjarjarantlr.Tool: void warning(java.lang.String)>("grammar file must be last; ignoring other arguments...");

        goto label10;

     label09:
        i16 = i16 + 1;

        goto label01;

     label10:
        return;
    }
}
