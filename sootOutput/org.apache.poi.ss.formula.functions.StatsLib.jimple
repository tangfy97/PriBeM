final class org.apache.poi.ss.formula.functions.StatsLib extends java.lang.Object
{

    private void <init>()
    {
        org.apache.poi.ss.formula.functions.StatsLib r0;

        r0 := @this: org.apache.poi.ss.formula.functions.StatsLib;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double avedev(double[])
    {
        double[] r0;
        int $i0, $i1, i2, i3, i4, i5;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6, d7, d8, d9;

        r0 := @parameter0: double[];

        d6 = 0.0;

        i2 = 0;

        i3 = lengthof r0;

     label1:
        if i2 >= i3 goto label2;

        $d5 = r0[i2];

        d6 = d6 + $d5;

        i2 = i2 + 1;

        goto label1;

     label2:
        $i0 = lengthof r0;

        $d0 = (double) $i0;

        d7 = d6 / $d0;

        d8 = 0.0;

        i4 = 0;

        i5 = lengthof r0;

     label3:
        if i4 >= i5 goto label4;

        $d2 = r0[i4];

        $d3 = $d2 - d7;

        $d4 = staticinvoke <java.lang.Math: double abs(double)>($d3);

        d8 = d8 + $d4;

        i4 = i4 + 1;

        goto label3;

     label4:
        $i1 = lengthof r0;

        $d1 = (double) $i1;

        d9 = d8 / $d1;

        return d9;
    }

    public static double stdev(double[])
    {
        double[] r0;
        int $i0, $i1, $i2;
        double $d0, $d1, $d2, d3;

        r0 := @parameter0: double[];

        d3 = #NaN;

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 <= 1 goto label1;

        $d0 = staticinvoke <org.apache.poi.ss.formula.functions.StatsLib: double devsq(double[])>(r0);

        $i1 = lengthof r0;

        $i2 = $i1 - 1;

        $d1 = (double) $i2;

        $d2 = $d0 / $d1;

        d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d2);

     label1:
        return d3;
    }

    public static double var(double[])
    {
        double[] r0;
        int $i0, $i1, $i2;
        double $d0, $d1, d2;

        r0 := @parameter0: double[];

        d2 = #NaN;

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 <= 1 goto label1;

        $d0 = staticinvoke <org.apache.poi.ss.formula.functions.StatsLib: double devsq(double[])>(r0);

        $i1 = lengthof r0;

        $i2 = $i1 - 1;

        $d1 = (double) $i2;

        d2 = $d0 / $d1;

     label1:
        return d2;
    }

    public static double varp(double[])
    {
        double[] r0;
        int $i0, $i1;
        double $d0, $d1, d2;

        r0 := @parameter0: double[];

        d2 = #NaN;

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 <= 1 goto label1;

        $d0 = staticinvoke <org.apache.poi.ss.formula.functions.StatsLib: double devsq(double[])>(r0);

        $i1 = lengthof r0;

        $d1 = (double) $i1;

        d2 = $d0 / $d1;

     label1:
        return d2;
    }

    public static double median(double[])
    {
        double[] r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6;
        double $d0, $d1, $d2, d3, $d4;

        r0 := @parameter0: double[];

        d3 = #NaN;

        if r0 == null goto label3;

        $i0 = lengthof r0;

        if $i0 < 1 goto label3;

        i1 = lengthof r0;

        staticinvoke <java.util.Arrays: void sort(double[])>(r0);

        $i2 = i1 % 2;

        if $i2 != 0 goto label1;

        $i4 = i1 / 2;

        $d1 = r0[$i4];

        $i5 = i1 / 2;

        $i6 = $i5 - 1;

        $d0 = r0[$i6];

        $d2 = $d1 + $d0;

        $d4 = $d2 / 2.0;

        goto label2;

     label1:
        $i3 = i1 / 2;

        $d4 = r0[$i3];

     label2:
        d3 = $d4;

     label3:
        return d3;
    }

    public static double devsq(double[])
    {
        double[] r0;
        int $i0, i1, i2, i3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, d7, d8, d9, d10, $d11;

        r0 := @parameter0: double[];

        d7 = #NaN;

        if r0 == null goto label7;

        $i0 = lengthof r0;

        if $i0 < 1 goto label7;

        d8 = 0.0;

        i1 = lengthof r0;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $d6 = r0[i2];

        d8 = d8 + $d6;

        i2 = i2 + 1;

        goto label1;

     label2:
        $d0 = (double) i1;

        d9 = d8 / $d0;

        d10 = 0.0;

        i3 = 0;

     label3:
        if i3 >= i1 goto label4;

        $d1 = r0[i3];

        $d4 = $d1 - d9;

        $d2 = r0[i3];

        $d3 = $d2 - d9;

        $d5 = $d4 * $d3;

        d10 = d10 + $d5;

        i3 = i3 + 1;

        goto label3;

     label4:
        if i1 != 1 goto label5;

        $d11 = 0.0;

        goto label6;

     label5:
        $d11 = d10;

     label6:
        d7 = $d11;

     label7:
        return d7;
    }

    public static double kthLargest(double[], int)
    {
        double[] r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        double d0;

        r0 := @parameter0: double[];

        i0 := @parameter1: int;

        d0 = #NaN;

        i1 = i0 - 1;

        if r0 == null goto label1;

        $i2 = lengthof r0;

        if $i2 <= i1 goto label1;

        if i1 < 0 goto label1;

        staticinvoke <java.util.Arrays: void sort(double[])>(r0);

        $i3 = lengthof r0;

        $i4 = $i3 - i1;

        $i5 = $i4 - 1;

        d0 = r0[$i5];

     label1:
        return d0;
    }

    public static double kthSmallest(double[], int)
    {
        int i0, i1, $i2;
        double[] r0;
        double d0;

        r0 := @parameter0: double[];

        i0 := @parameter1: int;

        d0 = #NaN;

        i1 = i0 - 1;

        if r0 == null goto label1;

        $i2 = lengthof r0;

        if $i2 <= i1 goto label1;

        if i1 < 0 goto label1;

        staticinvoke <java.util.Arrays: void sort(double[])>(r0);

        d0 = r0[i1];

     label1:
        return d0;
    }
}
