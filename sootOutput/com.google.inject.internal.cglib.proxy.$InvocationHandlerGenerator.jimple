class com.google.inject.internal.cglib.proxy.$InvocationHandlerGenerator extends java.lang.Object implements com.google.inject.internal.cglib.proxy.$CallbackGenerator
{
    public static final com.google.inject.internal.cglib.proxy.$InvocationHandlerGenerator INSTANCE;
    private static final com.google.inject.internal.asm.$Type INVOCATION_HANDLER;
    private static final com.google.inject.internal.asm.$Type UNDECLARED_THROWABLE_EXCEPTION;
    private static final com.google.inject.internal.asm.$Type METHOD;
    private static final com.google.inject.internal.cglib.core.$Signature INVOKE;

    void <init>()
    {
        com.google.inject.internal.cglib.proxy.$InvocationHandlerGenerator r0;

        r0 := @this: com.google.inject.internal.cglib.proxy.$InvocationHandlerGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void generate(com.google.inject.internal.cglib.core.$ClassEmitter, com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context, java.util.List)
    {
        com.google.inject.internal.cglib.core.$CodeEmitter $r9;
        com.google.inject.internal.asm.$Type[] $r16;
        com.google.inject.internal.cglib.core.$Block $r10;
        int $i0;
        com.google.inject.internal.asm.$Type $r8, $r13, $r15, $r17;
        java.lang.String $r7, $r11;
        com.google.inject.internal.cglib.proxy.$InvocationHandlerGenerator r18;
        com.google.inject.internal.cglib.core.$Signature $r5, $r12, $r14;
        boolean $z0;
        java.util.Iterator $r1;
        java.util.List r0;
        com.google.inject.internal.cglib.core.$ClassEmitter r6;
        java.lang.Object $r2;
        com.google.inject.internal.cglib.core.$MethodInfo r3;
        com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context r4;

        r18 := @this: com.google.inject.internal.cglib.proxy.$InvocationHandlerGenerator;

        r6 := @parameter0: com.google.inject.internal.cglib.core.$ClassEmitter;

        r4 := @parameter1: com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context;

        r0 := @parameter2: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.google.inject.internal.cglib.core.$MethodInfo) $r2;

        $r5 = interfaceinvoke r4.<com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context: com.google.inject.internal.cglib.core.$Signature getImplSignature(com.google.inject.internal.cglib.core.$MethodInfo)>(r3);

        $r7 = virtualinvoke $r5.<com.google.inject.internal.cglib.core.$Signature: java.lang.String getName()>();

        $r8 = <com.google.inject.internal.cglib.proxy.$InvocationHandlerGenerator: com.google.inject.internal.asm.$Type METHOD>;

        virtualinvoke r6.<com.google.inject.internal.cglib.core.$ClassEmitter: void declare_field(int,java.lang.String,com.google.inject.internal.asm.$Type,java.lang.Object)>(26, $r7, $r8, null);

        $r9 = interfaceinvoke r4.<com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context: com.google.inject.internal.cglib.core.$CodeEmitter beginMethod(com.google.inject.internal.cglib.core.$ClassEmitter,com.google.inject.internal.cglib.core.$MethodInfo)>(r6, r3);

        $r10 = virtualinvoke $r9.<com.google.inject.internal.cglib.core.$CodeEmitter: com.google.inject.internal.cglib.core.$Block begin_block()>();

        $i0 = interfaceinvoke r4.<com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context: int getIndex(com.google.inject.internal.cglib.core.$MethodInfo)>(r3);

        interfaceinvoke r4.<com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context: void emitCallback(com.google.inject.internal.cglib.core.$CodeEmitter,int)>($r9, $i0);

        virtualinvoke $r9.<com.google.inject.internal.cglib.core.$CodeEmitter: void load_this()>();

        $r11 = virtualinvoke $r5.<com.google.inject.internal.cglib.core.$Signature: java.lang.String getName()>();

        virtualinvoke $r9.<com.google.inject.internal.cglib.core.$CodeEmitter: void getfield(java.lang.String)>($r11);

        virtualinvoke $r9.<com.google.inject.internal.cglib.core.$CodeEmitter: void create_arg_array()>();

        $r13 = <com.google.inject.internal.cglib.proxy.$InvocationHandlerGenerator: com.google.inject.internal.asm.$Type INVOCATION_HANDLER>;

        $r12 = <com.google.inject.internal.cglib.proxy.$InvocationHandlerGenerator: com.google.inject.internal.cglib.core.$Signature INVOKE>;

        virtualinvoke $r9.<com.google.inject.internal.cglib.core.$CodeEmitter: void invoke_interface(com.google.inject.internal.asm.$Type,com.google.inject.internal.cglib.core.$Signature)>($r13, $r12);

        $r14 = virtualinvoke r3.<com.google.inject.internal.cglib.core.$MethodInfo: com.google.inject.internal.cglib.core.$Signature getSignature()>();

        $r15 = virtualinvoke $r14.<com.google.inject.internal.cglib.core.$Signature: com.google.inject.internal.asm.$Type getReturnType()>();

        virtualinvoke $r9.<com.google.inject.internal.cglib.core.$CodeEmitter: void unbox(com.google.inject.internal.asm.$Type)>($r15);

        virtualinvoke $r9.<com.google.inject.internal.cglib.core.$CodeEmitter: void return_value()>();

        virtualinvoke $r10.<com.google.inject.internal.cglib.core.$Block: void end()>();

        $r16 = virtualinvoke r3.<com.google.inject.internal.cglib.core.$MethodInfo: com.google.inject.internal.asm.$Type[] getExceptionTypes()>();

        $r17 = <com.google.inject.internal.cglib.proxy.$InvocationHandlerGenerator: com.google.inject.internal.asm.$Type UNDECLARED_THROWABLE_EXCEPTION>;

        staticinvoke <com.google.inject.internal.cglib.core.$EmitUtils: void wrap_undeclared_throwable(com.google.inject.internal.cglib.core.$CodeEmitter,com.google.inject.internal.cglib.core.$Block,com.google.inject.internal.asm.$Type[],com.google.inject.internal.asm.$Type)>($r9, $r10, $r16, $r17);

        virtualinvoke $r9.<com.google.inject.internal.cglib.core.$CodeEmitter: void end_method()>();

        goto label1;

     label2:
        return;
    }

    public void generateStatic(com.google.inject.internal.cglib.core.$CodeEmitter, com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context, java.util.List)
    {
        java.util.Iterator $r1;
        com.google.inject.internal.cglib.core.$CodeEmitter r4;
        java.util.List r0;
        java.lang.Object $r2;
        java.lang.String $r7;
        com.google.inject.internal.cglib.proxy.$InvocationHandlerGenerator r8;
        com.google.inject.internal.cglib.core.$MethodInfo r3;
        com.google.inject.internal.cglib.core.$Signature $r6;
        boolean $z0;
        com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context r5;

        r8 := @this: com.google.inject.internal.cglib.proxy.$InvocationHandlerGenerator;

        r4 := @parameter0: com.google.inject.internal.cglib.core.$CodeEmitter;

        r5 := @parameter1: com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context;

        r0 := @parameter2: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.google.inject.internal.cglib.core.$MethodInfo) $r2;

        staticinvoke <com.google.inject.internal.cglib.core.$EmitUtils: void load_method(com.google.inject.internal.cglib.core.$CodeEmitter,com.google.inject.internal.cglib.core.$MethodInfo)>(r4, r3);

        $r6 = interfaceinvoke r5.<com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context: com.google.inject.internal.cglib.core.$Signature getImplSignature(com.google.inject.internal.cglib.core.$MethodInfo)>(r3);

        $r7 = virtualinvoke $r6.<com.google.inject.internal.cglib.core.$Signature: java.lang.String getName()>();

        virtualinvoke r4.<com.google.inject.internal.cglib.core.$CodeEmitter: void putfield(java.lang.String)>($r7);

        goto label1;

     label2:
        return;
    }

    static void <clinit>()
    {
        com.google.inject.internal.asm.$Type $r1, $r2, $r3;
        com.google.inject.internal.cglib.proxy.$InvocationHandlerGenerator $r0;
        com.google.inject.internal.cglib.core.$Signature $r4;

        $r0 = new com.google.inject.internal.cglib.proxy.$InvocationHandlerGenerator;

        specialinvoke $r0.<com.google.inject.internal.cglib.proxy.$InvocationHandlerGenerator: void <init>()>();

        <com.google.inject.internal.cglib.proxy.$InvocationHandlerGenerator: com.google.inject.internal.cglib.proxy.$InvocationHandlerGenerator INSTANCE> = $r0;

        $r1 = staticinvoke <com.google.inject.internal.cglib.core.$TypeUtils: com.google.inject.internal.asm.$Type parseType(java.lang.String)>("com.google.inject.internal.cglib.proxy.$InvocationHandler");

        <com.google.inject.internal.cglib.proxy.$InvocationHandlerGenerator: com.google.inject.internal.asm.$Type INVOCATION_HANDLER> = $r1;

        $r2 = staticinvoke <com.google.inject.internal.cglib.core.$TypeUtils: com.google.inject.internal.asm.$Type parseType(java.lang.String)>("com.google.inject.internal.cglib.proxy.$UndeclaredThrowableException");

        <com.google.inject.internal.cglib.proxy.$InvocationHandlerGenerator: com.google.inject.internal.asm.$Type UNDECLARED_THROWABLE_EXCEPTION> = $r2;

        $r3 = staticinvoke <com.google.inject.internal.cglib.core.$TypeUtils: com.google.inject.internal.asm.$Type parseType(java.lang.String)>("java.lang.reflect.Method");

        <com.google.inject.internal.cglib.proxy.$InvocationHandlerGenerator: com.google.inject.internal.asm.$Type METHOD> = $r3;

        $r4 = staticinvoke <com.google.inject.internal.cglib.core.$TypeUtils: com.google.inject.internal.cglib.core.$Signature parseSignature(java.lang.String)>("Object invoke(Object, java.lang.reflect.Method, Object[])");

        <com.google.inject.internal.cglib.proxy.$InvocationHandlerGenerator: com.google.inject.internal.cglib.core.$Signature INVOKE> = $r4;

        return;
    }
}
