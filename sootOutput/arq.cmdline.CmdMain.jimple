public abstract class arq.cmdline.CmdMain extends arq.cmdline.CmdLineArgs
{

    public void <init>(java.lang.String[])
    {
        java.lang.String[] r1;
        arq.cmdline.CmdMain r0;

        r0 := @this: arq.cmdline.CmdMain;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<arq.cmdline.CmdLineArgs: void <init>(java.lang.String[])>(r1);

        return;
    }

    public void mainRun()
    {
        arq.cmdline.CmdMain r0;

        r0 := @this: arq.cmdline.CmdMain;

        virtualinvoke r0.<arq.cmdline.CmdMain: int mainRun(boolean,boolean)>(0, 1);

        return;
    }

    public void mainRun(boolean)
    {
        arq.cmdline.CmdMain r0;
        boolean z0;

        r0 := @this: arq.cmdline.CmdMain;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<arq.cmdline.CmdMain: int mainRun(boolean,boolean)>(z0, 1);

        return;
    }

    public void mainAndExit()
    {
        arq.cmdline.CmdMain r0;

        r0 := @this: arq.cmdline.CmdMain;

        virtualinvoke r0.<arq.cmdline.CmdMain: int mainRun(boolean,boolean)>(1, 1);

        return;
    }

    public int mainRun(boolean, boolean)
    {
        java.lang.Throwable $r3, $r14;
        com.hp.hpl.jena.shared.JenaException $r11;
        int $i0, $i1;
        java.lang.String $r2, $r5, $r7, $r10;
        boolean z0, z1;
        arq.cmd.TerminationException $r13;
        java.io.PrintStream $r4, $r6, $r9, $r12;
        java.lang.IllegalArgumentException $r8;
        arq.cmd.CmdException $r1;
        arq.cmdline.CmdMain r0;

        r0 := @this: arq.cmdline.CmdMain;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

     label01:
        virtualinvoke r0.<arq.cmdline.CmdMain: void mainMethod()>();

     label02:
        goto label12;

     label03:
        $r13 := @caughtexception;

        $i1 = virtualinvoke $r13.<arq.cmd.TerminationException: int getCode()>();

        staticinvoke <java.lang.System: void exit(int)>($i1);

        goto label12;

     label04:
        $r11 := @caughtexception;

        $r12 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r11.<com.hp.hpl.jena.shared.JenaException: void printStackTrace(java.io.PrintStream)>($r12);

        staticinvoke <com.hp.hpl.jena.sparql.util.Utils: java.lang.String className(java.lang.Object)>($r11);

        if z1 == 0 goto label05;

        staticinvoke <java.lang.System: void exit(int)>(2);

     label05:
        return 2;

     label06:
        $r8 := @caughtexception;

        $r9 = <java.lang.System: java.io.PrintStream err>;

        $r10 = virtualinvoke $r8.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r10);

        if z1 == 0 goto label07;

        staticinvoke <java.lang.System: void exit(int)>(1);

     label07:
        return 1;

     label08:
        $r1 := @caughtexception;

        $r2 = virtualinvoke $r1.<arq.cmd.CmdException: java.lang.String getMessage()>();

        if $r2 == null goto label09;

        $r5 = virtualinvoke $r1.<arq.cmd.CmdException: java.lang.String getMessage()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 <= 0 goto label09;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        $r7 = virtualinvoke $r1.<arq.cmd.CmdException: java.lang.String getMessage()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label09:
        $r14 = virtualinvoke $r1.<arq.cmd.CmdException: java.lang.Throwable getCause()>();

        if $r14 == null goto label10;

        $r3 = virtualinvoke $r1.<arq.cmd.CmdException: java.lang.Throwable getCause()>();

        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r4);

     label10:
        if z1 == 0 goto label11;

        staticinvoke <java.lang.System: void exit(int)>(1);

     label11:
        return 1;

     label12:
        if z0 == 0 goto label13;

        staticinvoke <java.lang.System: void exit(int)>(0);

     label13:
        return 0;

        catch arq.cmd.TerminationException from label01 to label02 with label03;
        catch com.hp.hpl.jena.shared.JenaException from label01 to label02 with label04;
        catch java.lang.IllegalArgumentException from label01 to label02 with label06;
        catch arq.cmd.CmdException from label01 to label02 with label08;
    }

    protected final void mainMethod()
    {
        arq.cmdline.CmdMain r0;

        r0 := @this: arq.cmdline.CmdMain;

        virtualinvoke r0.<arq.cmdline.CmdMain: void process()>();

        virtualinvoke r0.<arq.cmdline.CmdMain: void exec()>();

        return;
    }

    protected abstract void exec();

    protected abstract java.lang.String getCommandName();

    public void cmdError(java.lang.String)
    {
        java.lang.String r1;
        arq.cmdline.CmdMain r0;

        r0 := @this: arq.cmdline.CmdMain;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<arq.cmdline.CmdMain: void cmdError(java.lang.String,boolean)>(r1, 1);

        return;
    }

    public void cmdError(java.lang.String, boolean)
    {
        java.io.PrintStream $r1;
        java.lang.String r0;
        arq.cmdline.CmdMain r3;
        boolean z0;
        arq.cmd.TerminationException $r2;

        r3 := @this: arq.cmdline.CmdMain;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(r0);

        if z0 == 0 goto label1;

        $r2 = new arq.cmd.TerminationException;

        specialinvoke $r2.<arq.cmd.TerminationException: void <init>(int)>(5);

        throw $r2;

     label1:
        return;
    }

    static void <clinit>()
    {
        staticinvoke <org.apache.jena.atlas.logging.Log: void setCmdLogging()>();

        return;
    }
}
