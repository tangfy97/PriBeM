public abstract class com.ctc.wstx.sr.StreamScanner extends com.ctc.wstx.io.WstxInputData implements com.ctc.wstx.sr.InputProblemReporter, com.ctc.wstx.cfg.InputConfigFlags, com.ctc.wstx.cfg.ParsingErrorMsgs
{
    public static final boolean SAX_COMPAT_MODE;
    public static final char CHAR_CR_LF_OR_NULL;
    public static final int INT_CR_LF_OR_NULL;
    protected static final char CHAR_FIRST_PURE_TEXT;
    protected static final char CHAR_LOWEST_LEGAL_LOCALNAME_CHAR;
    private static final int VALID_CHAR_COUNT;
    private static final byte NAME_CHAR_INVALID_B;
    private static final byte NAME_CHAR_ALL_VALID_B;
    private static final byte NAME_CHAR_VALID_NONFIRST_B;
    private static final int NAME_CHAR_INVALID_I;
    private static final int NAME_CHAR_ALL_VALID_I;
    private static final int NAME_CHAR_VALID_NONFIRST_I;
    private static final byte[] sCharValidity;
    private static final int VALID_PUBID_CHAR_COUNT;
    private static final byte[] sPubidValidity;
    private static final byte PUBID_CHAR_INVALID_B;
    private static final byte PUBID_CHAR_VALID_B;
    protected final com.ctc.wstx.api.ReaderConfig mConfig;
    protected final boolean mCfgNsEnabled;
    protected boolean mCfgReplaceEntities;
    protected boolean mCfgNormalizeLFs;
    final com.ctc.wstx.util.SymbolTable mSymbols;
    protected java.lang.String mCurrName;
    protected com.ctc.wstx.io.WstxInputSource mInput;
    protected final com.ctc.wstx.io.WstxInputSource mRootInput;
    javax.xml.stream.XMLResolver mEntityResolver;
    protected int mCurrDepth;
    protected int mInputTopDepth;
    protected char[] mNameBuffer;
    protected long mTokenInputTotal;
    protected int mTokenInputRow;
    protected int mTokenInputCol;
    java.lang.String mDocInputEncoding;
    java.lang.String mDocXmlEncoding;
    protected int mDocXmlVersion;

    protected void <init>(com.ctc.wstx.io.WstxInputSource, com.ctc.wstx.api.ReaderConfig, javax.xml.stream.XMLResolver)
    {
        com.ctc.wstx.api.ReaderConfig r2;
        com.ctc.wstx.util.SymbolTable $r3;
        int $i0, $i1, $i2, $i3;
        com.ctc.wstx.sr.StreamScanner r0;
        javax.xml.stream.XMLResolver r4;
        com.ctc.wstx.io.WstxInputSource r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r1 := @parameter0: com.ctc.wstx.io.WstxInputSource;

        r2 := @parameter1: com.ctc.wstx.api.ReaderConfig;

        r4 := @parameter2: javax.xml.stream.XMLResolver;

        specialinvoke r0.<com.ctc.wstx.io.WstxInputData: void <init>()>();

        r0.<com.ctc.wstx.sr.StreamScanner: javax.xml.stream.XMLResolver mEntityResolver> = null;

        r0.<com.ctc.wstx.sr.StreamScanner: int mCurrDepth> = 0;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputTopDepth> = 0;

        r0.<com.ctc.wstx.sr.StreamScanner: char[] mNameBuffer> = null;

        r0.<com.ctc.wstx.sr.StreamScanner: long mTokenInputTotal> = 0L;

        r0.<com.ctc.wstx.sr.StreamScanner: int mTokenInputRow> = 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mTokenInputCol> = 0;

        r0.<com.ctc.wstx.sr.StreamScanner: java.lang.String mDocInputEncoding> = null;

        r0.<com.ctc.wstx.sr.StreamScanner: java.lang.String mDocXmlEncoding> = null;

        r0.<com.ctc.wstx.sr.StreamScanner: int mDocXmlVersion> = 0;

        r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputSource mInput> = r1;

        r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputSource mRootInput> = r1;

        r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.api.ReaderConfig mConfig> = r2;

        $r3 = virtualinvoke r2.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.util.SymbolTable getSymbols()>();

        r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.util.SymbolTable mSymbols> = $r3;

        $i0 = virtualinvoke r2.<com.ctc.wstx.api.ReaderConfig: int getConfigFlags()>();

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<com.ctc.wstx.sr.StreamScanner: boolean mCfgNsEnabled> = $z0;

        $i2 = $i0 & 4;

        if $i2 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        r0.<com.ctc.wstx.sr.StreamScanner: boolean mCfgReplaceEntities> = $z1;

        $i3 = $i0 & 8192;

        if $i3 == 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        r0.<com.ctc.wstx.sr.StreamScanner: boolean mCfgNormalizeLFs> = $z2;

        r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer> = null;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen> = 0;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = 0;

        r0.<com.ctc.wstx.sr.StreamScanner: javax.xml.stream.XMLResolver mEntityResolver> = r4;

        return;
    }

    protected com.ctc.wstx.io.WstxInputLocation getLastCharLocation()
    {
        long $l1, $l2, $l3, $l8;
        int $i0, $i4, $i5, $i6, $i7;
        com.ctc.wstx.io.WstxInputLocation $r2;
        com.ctc.wstx.sr.StreamScanner r0;
        com.ctc.wstx.io.WstxInputSource $r1;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputSource mInput>;

        $l2 = r0.<com.ctc.wstx.sr.StreamScanner: long mCurrInputProcessed>;

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $l1 = (long) $i0;

        $l3 = $l2 + $l1;

        $l8 = $l3 - 1L;

        $i7 = r0.<com.ctc.wstx.sr.StreamScanner: int mCurrInputRow>;

        $i5 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i4 = r0.<com.ctc.wstx.sr.StreamScanner: int mCurrInputRowStart>;

        $i6 = $i5 - $i4;

        $r2 = virtualinvoke $r1.<com.ctc.wstx.io.WstxInputSource: com.ctc.wstx.io.WstxInputLocation getLocation(long,int,int)>($l8, $i7, $i6);

        return $r2;
    }

    protected java.net.URL getSource()
    {
        com.ctc.wstx.sr.StreamScanner r0;
        com.ctc.wstx.io.WstxInputSource $r1;
        java.net.URL $r2;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputSource mInput>;

        $r2 = virtualinvoke $r1.<com.ctc.wstx.io.WstxInputSource: java.net.URL getSource()>();

        return $r2;
    }

    protected java.lang.String getSystemId()
    {
        java.lang.String $r2;
        com.ctc.wstx.sr.StreamScanner r0;
        com.ctc.wstx.io.WstxInputSource $r1;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputSource mInput>;

        $r2 = virtualinvoke $r1.<com.ctc.wstx.io.WstxInputSource: java.lang.String getSystemId()>();

        return $r2;
    }

    public abstract javax.xml.stream.Location getLocation();

    public org.codehaus.stax2.XMLStreamLocation2 getStartLocation()
    {
        int $i0, $i1, $i2;
        com.ctc.wstx.io.WstxInputLocation $r2;
        long $l3;
        com.ctc.wstx.sr.StreamScanner r0;
        com.ctc.wstx.io.WstxInputSource $r1;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputSource mInput>;

        $l3 = r0.<com.ctc.wstx.sr.StreamScanner: long mTokenInputTotal>;

        $i2 = r0.<com.ctc.wstx.sr.StreamScanner: int mTokenInputRow>;

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mTokenInputCol>;

        $i1 = $i0 + 1;

        $r2 = virtualinvoke $r1.<com.ctc.wstx.io.WstxInputSource: com.ctc.wstx.io.WstxInputLocation getLocation(long,int,int)>($l3, $i2, $i1);

        return $r2;
    }

    public org.codehaus.stax2.XMLStreamLocation2 getCurrentLocation()
    {
        long $l1, $l2, $l8;
        int $i0, $i3, $i4, $i5, $i6, $i7;
        com.ctc.wstx.io.WstxInputLocation $r2;
        com.ctc.wstx.sr.StreamScanner r0;
        com.ctc.wstx.io.WstxInputSource $r1;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputSource mInput>;

        $l2 = r0.<com.ctc.wstx.sr.StreamScanner: long mCurrInputProcessed>;

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $l1 = (long) $i0;

        $l8 = $l2 + $l1;

        $i7 = r0.<com.ctc.wstx.sr.StreamScanner: int mCurrInputRow>;

        $i4 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i3 = r0.<com.ctc.wstx.sr.StreamScanner: int mCurrInputRowStart>;

        $i5 = $i4 - $i3;

        $i6 = $i5 + 1;

        $r2 = virtualinvoke $r1.<com.ctc.wstx.io.WstxInputSource: com.ctc.wstx.io.WstxInputLocation getLocation(long,int,int)>($l8, $i7, $i6);

        return $r2;
    }

    public com.ctc.wstx.exc.WstxException throwWfcException(java.lang.String, boolean) throws com.ctc.wstx.exc.WstxException
    {
        com.ctc.wstx.exc.WstxException $r2;
        java.lang.String r1;
        com.ctc.wstx.sr.StreamScanner r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.exc.WstxException constructWfcException(java.lang.String)>(r1);

        if z0 != 0 goto label1;

        throw $r2;

     label1:
        return $r2;
    }

    public void throwParseError(java.lang.String) throws com.ctc.wstx.exc.WstxException
    {
        com.ctc.wstx.exc.WstxException $r2;
        java.lang.String r1;
        com.ctc.wstx.sr.StreamScanner r0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.exc.WstxException constructWfcException(java.lang.String)>(r1);

        throw $r2;
    }

    public void throwParseError(java.lang.String, java.lang.Object) throws com.ctc.wstx.exc.WstxException
    {
        java.lang.Object[] $r2;
        com.ctc.wstx.exc.WstxException $r5;
        java.lang.Object r3;
        java.lang.String r1, $r4;
        com.ctc.wstx.sr.StreamScanner r0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r3;

        $r4 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, $r2);

        $r5 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.exc.WstxException constructWfcException(java.lang.String)>($r4);

        throw $r5;
    }

    public void throwParseError(java.lang.String, java.lang.Object, java.lang.Object) throws com.ctc.wstx.exc.WstxException
    {
        java.lang.Object[] $r2;
        com.ctc.wstx.exc.WstxException $r6;
        java.lang.Object r3, r4;
        java.lang.String r1, $r5;
        com.ctc.wstx.sr.StreamScanner r0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = r3;

        $r2[1] = r4;

        $r5 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, $r2);

        $r6 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.exc.WstxException constructWfcException(java.lang.String)>($r5);

        throw $r6;
    }

    public void reportProblem(java.lang.String, java.lang.String)
    {
        java.lang.String r3, r4;
        com.ctc.wstx.sr.StreamScanner r0;
        com.ctc.wstx.api.ReaderConfig $r1;
        javax.xml.stream.XMLReporter $r2;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.api.ReaderConfig mConfig>;

        $r2 = virtualinvoke $r1.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLReporter getXMLReporter()>();

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void doReportProblem(javax.xml.stream.XMLReporter,java.lang.String,java.lang.String,javax.xml.stream.Location)>($r2, r3, r4, null);

        return;
    }

    public void reportProblem(java.lang.String, java.lang.String, java.lang.Object)
    {
        java.lang.Object[] $r5;
        com.ctc.wstx.api.ReaderConfig $r1;
        java.lang.Object r6;
        java.lang.String r3, r4, $r7;
        com.ctc.wstx.sr.StreamScanner r0;
        javax.xml.stream.XMLReporter $r2;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.Object;

        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.api.ReaderConfig mConfig>;

        $r2 = virtualinvoke $r1.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLReporter getXMLReporter()>();

        if $r2 == null goto label1;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r6;

        $r7 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>(r4, $r5);

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void doReportProblem(javax.xml.stream.XMLReporter,java.lang.String,java.lang.String,javax.xml.stream.Location)>($r2, r3, $r7, null);

     label1:
        return;
    }

    public void reportProblem(java.lang.String, java.lang.String, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r5;
        com.ctc.wstx.api.ReaderConfig $r1;
        java.lang.Object r6, r7;
        java.lang.String r3, r4, $r8;
        com.ctc.wstx.sr.StreamScanner r0;
        javax.xml.stream.XMLReporter $r2;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.Object;

        r7 := @parameter3: java.lang.Object;

        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.api.ReaderConfig mConfig>;

        $r2 = virtualinvoke $r1.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLReporter getXMLReporter()>();

        if $r2 == null goto label1;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r6;

        $r5[1] = r7;

        $r8 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>(r4, $r5);

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void doReportProblem(javax.xml.stream.XMLReporter,java.lang.String,java.lang.String,javax.xml.stream.Location)>($r2, r3, $r8, null);

     label1:
        return;
    }

    public void reportProblem(java.lang.String, java.lang.String, java.lang.Object, java.lang.Object, javax.xml.stream.Location)
    {
        java.lang.Object[] $r5;
        com.ctc.wstx.api.ReaderConfig $r1;
        javax.xml.stream.Location r9;
        java.lang.Object r6, r7;
        java.lang.String r3, r4, $r8;
        com.ctc.wstx.sr.StreamScanner r0;
        javax.xml.stream.XMLReporter $r2;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.Object;

        r7 := @parameter3: java.lang.Object;

        r9 := @parameter4: javax.xml.stream.Location;

        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.api.ReaderConfig mConfig>;

        $r2 = virtualinvoke $r1.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLReporter getXMLReporter()>();

        if $r2 == null goto label1;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r6;

        $r5[1] = r7;

        $r8 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>(r4, $r5);

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void doReportProblem(javax.xml.stream.XMLReporter,java.lang.String,java.lang.String,javax.xml.stream.Location)>($r2, r3, $r8, r9);

     label1:
        return;
    }

    protected void doReportProblem(javax.xml.stream.XMLReporter, java.lang.String, java.lang.String, javax.xml.stream.Location)
    {
        org.codehaus.stax2.validation.XMLValidationProblem $r2;
        javax.xml.stream.Location r5;
        java.lang.String r3, r4;
        com.ctc.wstx.sr.StreamScanner r0;
        javax.xml.stream.XMLReporter r1;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r1 := @parameter0: javax.xml.stream.XMLReporter;

        r4 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r5 := @parameter3: javax.xml.stream.Location;

        if r5 != null goto label1;

        r5 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputLocation getLastCharLocation()>();

     label1:
        $r2 = new org.codehaus.stax2.validation.XMLValidationProblem;

        specialinvoke $r2.<org.codehaus.stax2.validation.XMLValidationProblem: void <init>(javax.xml.stream.Location,java.lang.String,int)>(r5, r3, 2);

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void doReportProblem(javax.xml.stream.XMLReporter,org.codehaus.stax2.validation.XMLValidationProblem,java.lang.String)>(r1, $r2, r4);

        return;
    }

    protected void doReportProblem(javax.xml.stream.XMLReporter, org.codehaus.stax2.validation.XMLValidationProblem, java.lang.String)
    {
        org.codehaus.stax2.validation.XMLValidationProblem r1;
        java.io.PrintStream $r8;
        java.lang.StringBuffer $r7, $r9, $r10;
        javax.xml.stream.Location $r2, r12;
        javax.xml.stream.XMLStreamException $r6;
        java.lang.String $r3, r4, $r11;
        com.ctc.wstx.sr.StreamScanner r5;
        javax.xml.stream.XMLReporter r0;

        r5 := @this: com.ctc.wstx.sr.StreamScanner;

        r0 := @parameter0: javax.xml.stream.XMLReporter;

        r1 := @parameter1: org.codehaus.stax2.validation.XMLValidationProblem;

        r4 := @parameter2: java.lang.String;

        if r0 == null goto label4;

        $r2 = virtualinvoke r1.<org.codehaus.stax2.validation.XMLValidationProblem: javax.xml.stream.Location getLocation()>();

        r12 = $r2;

        if $r2 != null goto label1;

        r12 = virtualinvoke r5.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputLocation getLastCharLocation()>();

     label1:
        $r3 = virtualinvoke r1.<org.codehaus.stax2.validation.XMLValidationProblem: java.lang.String getMessage()>();

        interfaceinvoke r0.<javax.xml.stream.XMLReporter: void report(java.lang.String,java.lang.String,java.lang.Object,javax.xml.stream.Location)>($r3, r4, r1, r12);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r8 = <java.lang.System: java.io.PrintStream err>;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Internal error - problem reporting a problem: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11);

     label4:
        return;

        catch javax.xml.stream.XMLStreamException from label1 to label2 with label3;
    }

    public void reportValidationProblem(org.codehaus.stax2.validation.XMLValidationProblem) throws org.codehaus.stax2.validation.XMLValidationException
    {
        org.codehaus.stax2.validation.XMLValidationProblem r0;
        com.ctc.wstx.api.ReaderConfig $r2;
        javax.xml.stream.Location $r7;
        int $i0, $i1;
        com.ctc.wstx.exc.WstxValidationException $r4, $r8;
        java.lang.String $r5, $r6;
        com.ctc.wstx.sr.StreamScanner r1;
        javax.xml.stream.XMLReporter $r3;

        r1 := @this: com.ctc.wstx.sr.StreamScanner;

        r0 := @parameter0: org.codehaus.stax2.validation.XMLValidationProblem;

        $i0 = virtualinvoke r0.<org.codehaus.stax2.validation.XMLValidationProblem: int getSeverity()>();

        if $i0 <= 2 goto label1;

        $r8 = staticinvoke <com.ctc.wstx.exc.WstxValidationException: com.ctc.wstx.exc.WstxValidationException create(org.codehaus.stax2.validation.XMLValidationProblem)>(r0);

        throw $r8;

     label1:
        $r2 = r1.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.api.ReaderConfig mConfig>;

        $r3 = virtualinvoke $r2.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLReporter getXMLReporter()>();

        if $r3 == null goto label2;

        $r5 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String WT_VALIDATION>;

        $r6 = virtualinvoke r0.<org.codehaus.stax2.validation.XMLValidationProblem: java.lang.String getMessage()>();

        $r7 = virtualinvoke r0.<org.codehaus.stax2.validation.XMLValidationProblem: javax.xml.stream.Location getLocation()>();

        virtualinvoke r1.<com.ctc.wstx.sr.StreamScanner: void doReportProblem(javax.xml.stream.XMLReporter,java.lang.String,java.lang.String,javax.xml.stream.Location)>($r3, $r5, $r6, $r7);

        goto label3;

     label2:
        $i1 = virtualinvoke r0.<org.codehaus.stax2.validation.XMLValidationProblem: int getSeverity()>();

        if $i1 < 2 goto label3;

        $r4 = staticinvoke <com.ctc.wstx.exc.WstxValidationException: com.ctc.wstx.exc.WstxValidationException create(org.codehaus.stax2.validation.XMLValidationProblem)>(r0);

        throw $r4;

     label3:
        return;
    }

    public void reportValidationProblem(java.lang.String, javax.xml.stream.Location, int) throws org.codehaus.stax2.validation.XMLValidationException
    {
        org.codehaus.stax2.validation.XMLValidationProblem $r1;
        javax.xml.stream.Location r2;
        int i0;
        java.lang.String r3;
        com.ctc.wstx.sr.StreamScanner r0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r3 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.xml.stream.Location;

        i0 := @parameter2: int;

        $r1 = new org.codehaus.stax2.validation.XMLValidationProblem;

        specialinvoke $r1.<org.codehaus.stax2.validation.XMLValidationProblem: void <init>(javax.xml.stream.Location,java.lang.String,int)>(r2, r3, i0);

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void reportValidationProblem(org.codehaus.stax2.validation.XMLValidationProblem)>($r1);

        return;
    }

    public void reportValidationProblem(java.lang.String, int) throws org.codehaus.stax2.validation.XMLValidationException
    {
        org.codehaus.stax2.validation.XMLValidationProblem $r1;
        int i0;
        com.ctc.wstx.io.WstxInputLocation $r2;
        java.lang.String r3;
        com.ctc.wstx.sr.StreamScanner r0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = new org.codehaus.stax2.validation.XMLValidationProblem;

        $r2 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputLocation getLastCharLocation()>();

        specialinvoke $r1.<org.codehaus.stax2.validation.XMLValidationProblem: void <init>(javax.xml.stream.Location,java.lang.String,int)>($r2, r3, i0);

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void reportValidationProblem(org.codehaus.stax2.validation.XMLValidationProblem)>($r1);

        return;
    }

    public void reportValidationProblem(java.lang.String) throws org.codehaus.stax2.validation.XMLValidationException
    {
        org.codehaus.stax2.validation.XMLValidationProblem $r1;
        com.ctc.wstx.io.WstxInputLocation $r2;
        java.lang.String r3;
        com.ctc.wstx.sr.StreamScanner r0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r3 := @parameter0: java.lang.String;

        $r1 = new org.codehaus.stax2.validation.XMLValidationProblem;

        $r2 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputLocation getLastCharLocation()>();

        specialinvoke $r1.<org.codehaus.stax2.validation.XMLValidationProblem: void <init>(javax.xml.stream.Location,java.lang.String,int)>($r2, r3, 2);

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void reportValidationProblem(org.codehaus.stax2.validation.XMLValidationProblem)>($r1);

        return;
    }

    public void reportValidationProblem(javax.xml.stream.Location, java.lang.String) throws org.codehaus.stax2.validation.XMLValidationException
    {
        org.codehaus.stax2.validation.XMLValidationProblem $r1;
        javax.xml.stream.Location r4;
        com.ctc.wstx.io.WstxInputLocation $r2;
        java.lang.String r3;
        com.ctc.wstx.sr.StreamScanner r0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r4 := @parameter0: javax.xml.stream.Location;

        r3 := @parameter1: java.lang.String;

        $r1 = new org.codehaus.stax2.validation.XMLValidationProblem;

        $r2 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputLocation getLastCharLocation()>();

        specialinvoke $r1.<org.codehaus.stax2.validation.XMLValidationProblem: void <init>(javax.xml.stream.Location,java.lang.String)>($r2, r3);

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void reportValidationProblem(org.codehaus.stax2.validation.XMLValidationProblem)>($r1);

        return;
    }

    public void reportValidationProblem(java.lang.String, java.lang.Object) throws org.codehaus.stax2.validation.XMLValidationException
    {
        org.codehaus.stax2.validation.XMLValidationProblem $r5;
        java.lang.Object[] $r1;
        com.ctc.wstx.io.WstxInputLocation $r6;
        java.lang.Object r2;
        java.lang.String r0, $r3;
        com.ctc.wstx.sr.StreamScanner r4;

        r4 := @this: com.ctc.wstx.sr.StreamScanner;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r2;

        $r3 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>(r0, $r1);

        $r5 = new org.codehaus.stax2.validation.XMLValidationProblem;

        $r6 = virtualinvoke r4.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputLocation getLastCharLocation()>();

        specialinvoke $r5.<org.codehaus.stax2.validation.XMLValidationProblem: void <init>(javax.xml.stream.Location,java.lang.String)>($r6, $r3);

        virtualinvoke r4.<com.ctc.wstx.sr.StreamScanner: void reportValidationProblem(org.codehaus.stax2.validation.XMLValidationProblem)>($r5);

        return;
    }

    public void reportValidationProblem(java.lang.String, java.lang.Object, java.lang.Object) throws org.codehaus.stax2.validation.XMLValidationException
    {
        org.codehaus.stax2.validation.XMLValidationProblem $r6;
        java.lang.Object[] $r1;
        com.ctc.wstx.io.WstxInputLocation $r7;
        java.lang.Object r2, r3;
        java.lang.String r0, $r4;
        com.ctc.wstx.sr.StreamScanner r5;

        r5 := @this: com.ctc.wstx.sr.StreamScanner;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = r2;

        $r1[1] = r3;

        $r4 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>(r0, $r1);

        $r6 = new org.codehaus.stax2.validation.XMLValidationProblem;

        $r7 = virtualinvoke r5.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputLocation getLastCharLocation()>();

        specialinvoke $r6.<org.codehaus.stax2.validation.XMLValidationProblem: void <init>(javax.xml.stream.Location,java.lang.String)>($r7, $r4);

        virtualinvoke r5.<com.ctc.wstx.sr.StreamScanner: void reportValidationProblem(org.codehaus.stax2.validation.XMLValidationProblem)>($r6);

        return;
    }

    protected com.ctc.wstx.exc.WstxException constructWfcException(java.lang.String)
    {
        com.ctc.wstx.exc.WstxParsingException $r0;
        com.ctc.wstx.io.WstxInputLocation $r3;
        java.lang.String r1;
        com.ctc.wstx.sr.StreamScanner r2;

        r2 := @this: com.ctc.wstx.sr.StreamScanner;

        r1 := @parameter0: java.lang.String;

        $r0 = new com.ctc.wstx.exc.WstxParsingException;

        $r3 = virtualinvoke r2.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputLocation getLastCharLocation()>();

        specialinvoke $r0.<com.ctc.wstx.exc.WstxParsingException: void <init>(java.lang.String,javax.xml.stream.Location)>(r1, $r3);

        return $r0;
    }

    protected com.ctc.wstx.exc.WstxException constructFromIoe(java.io.IOException)
    {
        com.ctc.wstx.exc.WstxIOException $r0;
        java.io.IOException r1;
        com.ctc.wstx.sr.StreamScanner r2;

        r2 := @this: com.ctc.wstx.sr.StreamScanner;

        r1 := @parameter0: java.io.IOException;

        $r0 = new com.ctc.wstx.exc.WstxIOException;

        specialinvoke $r0.<com.ctc.wstx.exc.WstxIOException: void <init>(java.io.IOException)>(r1);

        return $r0;
    }

    protected com.ctc.wstx.exc.WstxException constructNullCharException()
    {
        com.ctc.wstx.io.WstxInputLocation $r2;
        com.ctc.wstx.exc.WstxUnexpectedCharException $r0;
        com.ctc.wstx.sr.StreamScanner r1;

        r1 := @this: com.ctc.wstx.sr.StreamScanner;

        $r0 = new com.ctc.wstx.exc.WstxUnexpectedCharException;

        $r2 = virtualinvoke r1.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputLocation getLastCharLocation()>();

        specialinvoke $r0.<com.ctc.wstx.exc.WstxUnexpectedCharException: void <init>(java.lang.String,javax.xml.stream.Location,char)>("Illegal character (NULL, unicode 0) encountered: not valid in any content", $r2, 0);

        return $r0;
    }

    protected void throwUnexpectedChar(int, java.lang.String) throws com.ctc.wstx.exc.WstxException
    {
        char c1;
        com.ctc.wstx.exc.WstxUnexpectedCharException $r7;
        java.lang.StringBuffer $r0, $r1, $r3, $r5;
        int i0;
        com.ctc.wstx.io.WstxInputLocation $r9;
        java.lang.String $r2, r4, $r6;
        com.ctc.wstx.sr.StreamScanner r8;

        r8 := @this: com.ctc.wstx.sr.StreamScanner;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.String;

        c1 = (char) i0;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected character ");

        $r2 = staticinvoke <com.ctc.wstx.sr.StreamScanner: java.lang.String getCharDesc(char)>(c1);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = new com.ctc.wstx.exc.WstxUnexpectedCharException;

        $r9 = virtualinvoke r8.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputLocation getLastCharLocation()>();

        specialinvoke $r7.<com.ctc.wstx.exc.WstxUnexpectedCharException: void <init>(java.lang.String,javax.xml.stream.Location,char)>($r6, $r9, c1);

        throw $r7;
    }

    protected void throwNullChar() throws com.ctc.wstx.exc.WstxException
    {
        com.ctc.wstx.exc.WstxException $r1;
        com.ctc.wstx.sr.StreamScanner r0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.exc.WstxException constructNullCharException()>();

        throw $r1;
    }

    protected void throwInvalidSpace(int) throws com.ctc.wstx.exc.WstxException
    {
        int i0;
        com.ctc.wstx.sr.StreamScanner r0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.exc.WstxException throwInvalidSpace(int,boolean)>(i0, 0);

        return;
    }

    protected com.ctc.wstx.exc.WstxException throwInvalidSpace(int, boolean) throws com.ctc.wstx.exc.WstxException
    {
        java.lang.StringBuffer $r0, $r1, $r3, $r4, $r9, $r10, $r11;
        int i0;
        com.ctc.wstx.exc.WstxException r12;
        com.ctc.wstx.io.WstxInputLocation $r8;
        java.lang.String $r2, $r5, r13;
        com.ctc.wstx.sr.StreamScanner r6;
        boolean $z0, z1;
        char c1;
        com.ctc.wstx.exc.WstxUnexpectedCharException $r7;

        r6 := @this: com.ctc.wstx.sr.StreamScanner;

        i0 := @parameter0: int;

        z1 := @parameter1: boolean;

        c1 = (char) i0;

        if c1 != 0 goto label1;

        r12 = virtualinvoke r6.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.exc.WstxException constructNullCharException()>();

        goto label3;

     label1:
        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal character (");

        $r2 = staticinvoke <com.ctc.wstx.sr.StreamScanner: java.lang.String getCharDesc(char)>(c1);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        r13 = $r5;

        $z0 = r6.<com.ctc.wstx.sr.StreamScanner: boolean mXml11>;

        if $z0 == 0 goto label2;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" [note: in XML 1.1, it could be included via entity expansion]");

        r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $r7 = new com.ctc.wstx.exc.WstxUnexpectedCharException;

        $r8 = virtualinvoke r6.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputLocation getLastCharLocation()>();

        specialinvoke $r7.<com.ctc.wstx.exc.WstxUnexpectedCharException: void <init>(java.lang.String,javax.xml.stream.Location,char)>(r13, $r8, c1);

        r12 = $r7;

     label3:
        if z1 != 0 goto label4;

        throw r12;

     label4:
        return r12;
    }

    protected void throwUnexpectedEOF(java.lang.String) throws com.ctc.wstx.exc.WstxException
    {
        java.lang.StringBuffer $r1, $r2, $r4;
        com.ctc.wstx.io.WstxInputLocation $r7;
        com.ctc.wstx.exc.WstxEOFException $r0;
        java.lang.String r3, $r5, $r8;
        com.ctc.wstx.sr.StreamScanner r6;

        r6 := @this: com.ctc.wstx.sr.StreamScanner;

        r3 := @parameter0: java.lang.String;

        $r0 = new com.ctc.wstx.exc.WstxEOFException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected EOF");

        if r3 != null goto label1;

        $r8 = "";

        goto label2;

     label1:
        $r8 = r3;

     label2:
        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = virtualinvoke r6.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputLocation getLastCharLocation()>();

        specialinvoke $r0.<com.ctc.wstx.exc.WstxEOFException: void <init>(java.lang.String,javax.xml.stream.Location)>($r5, $r7);

        throw $r0;
    }

    protected void throwUnexpectedEOB(java.lang.String) throws com.ctc.wstx.exc.WstxException
    {
        java.lang.StringBuffer $r1, $r2, $r4;
        com.ctc.wstx.io.WstxInputLocation $r7;
        com.ctc.wstx.exc.WstxEOFException $r0;
        java.lang.String r3, $r5, $r8;
        com.ctc.wstx.sr.StreamScanner r6;

        r6 := @this: com.ctc.wstx.sr.StreamScanner;

        r3 := @parameter0: java.lang.String;

        $r0 = new com.ctc.wstx.exc.WstxEOFException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected end of input block");

        if r3 != null goto label1;

        $r8 = "";

        goto label2;

     label1:
        $r8 = r3;

     label2:
        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = virtualinvoke r6.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputLocation getLastCharLocation()>();

        specialinvoke $r0.<com.ctc.wstx.exc.WstxEOFException: void <init>(java.lang.String,javax.xml.stream.Location)>($r5, $r7);

        throw $r0;
    }

    protected void throwFromIOE(java.io.IOException) throws com.ctc.wstx.exc.WstxException
    {
        com.ctc.wstx.exc.WstxIOException $r0;
        java.io.IOException r1;
        com.ctc.wstx.sr.StreamScanner r2;

        r2 := @this: com.ctc.wstx.sr.StreamScanner;

        r1 := @parameter0: java.io.IOException;

        $r0 = new com.ctc.wstx.exc.WstxIOException;

        specialinvoke $r0.<com.ctc.wstx.exc.WstxIOException: void <init>(java.io.IOException)>(r1);

        throw $r0;
    }

    protected void throwFromStrE(javax.xml.stream.XMLStreamException) throws com.ctc.wstx.exc.WstxException
    {
        com.ctc.wstx.compat.JdkImpl $r2;
        javax.xml.stream.XMLStreamException r0;
        com.ctc.wstx.exc.WstxException $r1, $r3;
        com.ctc.wstx.sr.StreamScanner r4;
        boolean $z0;

        r4 := @this: com.ctc.wstx.sr.StreamScanner;

        r0 := @parameter0: javax.xml.stream.XMLStreamException;

        $z0 = r0 instanceof com.ctc.wstx.exc.WstxException;

        if $z0 == 0 goto label1;

        $r3 = (com.ctc.wstx.exc.WstxException) r0;

        throw $r3;

     label1:
        $r1 = new com.ctc.wstx.exc.WstxException;

        specialinvoke $r1.<com.ctc.wstx.exc.WstxException: void <init>(java.lang.Throwable)>(r0);

        $r2 = staticinvoke <com.ctc.wstx.compat.JdkFeatures: com.ctc.wstx.compat.JdkImpl getInstance()>();

        virtualinvoke $r2.<com.ctc.wstx.compat.JdkImpl: boolean setInitCause(java.lang.Throwable,java.lang.Throwable)>($r1, r0);

        throw $r1;
    }

    protected void throwLazyError(java.lang.Exception)
    {
        javax.xml.stream.XMLStreamException $r1;
        com.ctc.wstx.sr.StreamScanner r2;
        java.lang.Exception r0;
        boolean $z0;

        r2 := @this: com.ctc.wstx.sr.StreamScanner;

        r0 := @parameter0: java.lang.Exception;

        $z0 = r0 instanceof javax.xml.stream.XMLStreamException;

        if $z0 == 0 goto label1;

        $r1 = (javax.xml.stream.XMLStreamException) r0;

        staticinvoke <com.ctc.wstx.exc.WstxLazyException: void throwLazily(javax.xml.stream.XMLStreamException)>($r1);

     label1:
        staticinvoke <com.ctc.wstx.util.ExceptionUtil: void throwRuntimeException(java.lang.Throwable)>(r0);

        return;
    }

    protected java.lang.String tokenTypeDesc(int)
    {
        int i0;
        java.lang.String $r0;
        com.ctc.wstx.sr.StreamScanner r1;

        r1 := @this: com.ctc.wstx.sr.StreamScanner;

        i0 := @parameter0: int;

        $r0 = staticinvoke <com.ctc.wstx.cfg.ErrorConsts: java.lang.String tokenTypeDesc(int)>(i0);

        return $r0;
    }

    public final com.ctc.wstx.io.WstxInputSource getCurrentInput()
    {
        com.ctc.wstx.sr.StreamScanner r0;
        com.ctc.wstx.io.WstxInputSource $r1;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputSource mInput>;

        return $r1;
    }

    protected final int inputInBuffer()
    {
        int $i0, $i1, $i2;
        com.ctc.wstx.sr.StreamScanner r0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        $i1 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    protected final int getNext() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        char $c4;
        int $i0, $i1, $i2, $i3, $i6, $i7;
        char[] $r1;
        com.ctc.wstx.sr.StreamScanner r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        $i1 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        if $i1 < $i0 goto label1;

        $z0 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean loadMore()>();

        if $z0 != 0 goto label1;

        $i6 = (int) -1;

        return $i6;

     label1:
        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i2 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i3 = $i2 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i3;

        $c4 = $r1[$i2];

        $i7 = (int) $c4;

        return $i7;
    }

    protected final int peekNext() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        char $c3;
        int $i0, $i1, $i2, $i5, $i6;
        char[] $r1;
        com.ctc.wstx.sr.StreamScanner r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        $i1 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        if $i1 < $i0 goto label1;

        $z0 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean loadMoreFromCurrent()>();

        if $z0 != 0 goto label1;

        $i5 = (int) -1;

        return $i5;

     label1:
        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i2 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $c3 = $r1[$i2];

        $i6 = (int) $c3;

        return $i6;
    }

    protected final char getNextChar(java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        char $c4;
        int $i0, $i1, $i2, $i3;
        char[] $r1;
        java.lang.String r2;
        com.ctc.wstx.sr.StreamScanner r0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r2 := @parameter0: java.lang.String;

        $i1 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean loadMore(java.lang.String)>(r2);

     label1:
        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i2 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i3 = $i2 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i3;

        $c4 = $r1[$i2];

        return $c4;
    }

    protected final char getNextCharFromCurrent(java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        char $c4;
        int $i0, $i1, $i2, $i3;
        char[] $r1;
        java.lang.String r2;
        com.ctc.wstx.sr.StreamScanner r0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r2 := @parameter0: java.lang.String;

        $i1 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean loadMoreFromCurrent(java.lang.String)>(r2);

     label1:
        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i2 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i3 = $i2 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i3;

        $c4 = $r1[$i2];

        return $c4;
    }

    protected final int getNextAfterWS() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19;
        com.ctc.wstx.sr.StreamScanner r0;
        boolean $z0, $z1;
        char c6;
        char[] $r1, $r2;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        $i1 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        if $i1 < $i0 goto label1;

        $z1 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean loadMore()>();

        if $z1 != 0 goto label1;

        $i10 = (int) -1;

        return $i10;

     label1:
        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i2 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i3 = $i2 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i3;

        c6 = $r1[$i2];

     label2:
        $i11 = (int) c6;

        if $i11 > 32 goto label7;

        $i12 = (int) c6;

        if $i12 == 10 goto label3;

        $i13 = (int) c6;

        if $i13 != 13 goto label4;

     label3:
        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean skipCRLF(char)>(c6);

        goto label5;

     label4:
        $i14 = (int) c6;

        if $i14 == 32 goto label5;

        $i15 = (int) c6;

        if $i15 == 9 goto label5;

        $i16 = (int) c6;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwInvalidSpace(int)>($i16);

     label5:
        $i7 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i8 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        if $i7 < $i8 goto label6;

        $z0 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean loadMore()>();

        if $z0 != 0 goto label6;

        $i18 = (int) -1;

        return $i18;

     label6:
        $r2 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i4 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i5 = $i4 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i5;

        c6 = $r2[$i4];

        goto label2;

     label7:
        $i19 = (int) c6;

        return $i19;
    }

    protected final char getNextCharAfterWS(java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.lang.String r3;
        com.ctc.wstx.sr.StreamScanner r0;
        char c6;
        char[] $r1, $r2;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r3 := @parameter0: java.lang.String;

        $i1 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean loadMore(java.lang.String)>(r3);

     label1:
        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i2 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i3 = $i2 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i3;

        c6 = $r1[$i2];

     label2:
        $i9 = (int) c6;

        if $i9 > 32 goto label7;

        $i10 = (int) c6;

        if $i10 == 10 goto label3;

        $i11 = (int) c6;

        if $i11 != 13 goto label4;

     label3:
        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean skipCRLF(char)>(c6);

        goto label5;

     label4:
        $i12 = (int) c6;

        if $i12 == 32 goto label5;

        $i13 = (int) c6;

        if $i13 == 9 goto label5;

        $i14 = (int) c6;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwInvalidSpace(int)>($i14);

     label5:
        $i7 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i8 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        if $i7 < $i8 goto label6;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean loadMore(java.lang.String)>(r3);

     label6:
        $r2 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i4 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i5 = $i4 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i5;

        c6 = $r2[$i4];

        goto label2;

     label7:
        return c6;
    }

    protected final char getNextInCurrAfterWS(java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        char $c0, $c1;
        java.lang.String r1;
        com.ctc.wstx.sr.StreamScanner r0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r1 := @parameter0: java.lang.String;

        $c0 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: char getNextCharFromCurrent(java.lang.String)>(r1);

        $c1 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: char getNextInCurrAfterWS(java.lang.String,char)>(r1, $c0);

        return $c1;
    }

    protected final char getNextInCurrAfterWS(java.lang.String, char) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        char c2;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        char[] $r1;
        java.lang.String r2;
        com.ctc.wstx.sr.StreamScanner r0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r2 := @parameter0: java.lang.String;

        c2 := @parameter1: char;

     label1:
        $i5 = (int) c2;

        if $i5 > 32 goto label6;

        $i6 = (int) c2;

        if $i6 == 10 goto label2;

        $i7 = (int) c2;

        if $i7 != 13 goto label3;

     label2:
        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean skipCRLF(char)>(c2);

        goto label4;

     label3:
        $i8 = (int) c2;

        if $i8 == 32 goto label4;

        $i9 = (int) c2;

        if $i9 == 9 goto label4;

        $i10 = (int) c2;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwInvalidSpace(int)>($i10);

     label4:
        $i3 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i4 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        if $i3 < $i4 goto label5;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean loadMoreFromCurrent(java.lang.String)>(r2);

     label5:
        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i1 = $i0 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i1;

        c2 = $r1[$i0];

        goto label1;

     label6:
        return c2;
    }

    protected final boolean skipCRLF(char) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        char c0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.ctc.wstx.sr.StreamScanner r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        c0 := @parameter0: char;

        $i7 = (int) c0;

        if $i7 != 13 goto label1;

        $i1 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: int peekNext()>();

        if $i1 != 10 goto label1;

        $i2 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i3 = $i2 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i3;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        $i4 = r0.<com.ctc.wstx.sr.StreamScanner: int mCurrInputRow>;

        $i5 = $i4 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mCurrInputRow> = $i5;

        $i6 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        r0.<com.ctc.wstx.sr.StreamScanner: int mCurrInputRowStart> = $i6;

        return z0;
    }

    protected final void markLF()
    {
        int $i0, $i1, $i2;
        com.ctc.wstx.sr.StreamScanner r0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mCurrInputRow>;

        $i1 = $i0 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mCurrInputRow> = $i1;

        $i2 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        r0.<com.ctc.wstx.sr.StreamScanner: int mCurrInputRowStart> = $i2;

        return;
    }

    protected final void markLF(int)
    {
        int $i0, $i1, i2;
        com.ctc.wstx.sr.StreamScanner r0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        i2 := @parameter0: int;

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mCurrInputRow>;

        $i1 = $i0 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mCurrInputRow> = $i1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mCurrInputRowStart> = i2;

        return;
    }

    protected final void pushback()
    {
        int $i0, $i1;
        com.ctc.wstx.sr.StreamScanner r0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i1 = $i0 - 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i1;

        return;
    }

    protected void initInputSource(com.ctc.wstx.io.WstxInputSource, boolean) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.api.ReaderConfig $r3;
        int $i0, $i1;
        com.ctc.wstx.sr.StreamScanner r0;
        com.ctc.wstx.io.WstxInputSource r1, $r2;
        boolean z0, $z1;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r1 := @parameter0: com.ctc.wstx.io.WstxInputSource;

        z0 := @parameter1: boolean;

        r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputSource mInput> = r1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = 0;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen> = 0;

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mCurrDepth>;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputTopDepth> = $i0;

        $r2 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputSource mInput>;

        $i1 = r0.<com.ctc.wstx.sr.StreamScanner: int mCurrDepth>;

        virtualinvoke $r2.<com.ctc.wstx.io.WstxInputSource: void initInputLocation(com.ctc.wstx.io.WstxInputData,int)>(r0, $i1);

        if z0 == 0 goto label1;

        $r3 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.api.ReaderConfig mConfig>;

        $z1 = virtualinvoke $r3.<com.ctc.wstx.api.ReaderConfig: boolean willNormalizeLFs()>();

        r0.<com.ctc.wstx.sr.StreamScanner: boolean mCfgNormalizeLFs> = $z1;

        goto label2;

     label1:
        r0.<com.ctc.wstx.sr.StreamScanner: boolean mCfgNormalizeLFs> = 0;

     label2:
        return;
    }

    protected boolean loadMore() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        long $l1, $l2, $l3;
        com.ctc.wstx.api.ReaderConfig $r3;
        int $i0, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        com.ctc.wstx.sr.StreamScanner r0;
        boolean $z0, $z1, $z2, $z3;
        com.ctc.wstx.io.WstxInputSource $r1, $r2, r4;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r4 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputSource mInput>;

     label1:
        $l2 = r0.<com.ctc.wstx.sr.StreamScanner: long mCurrInputProcessed>;

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        $l1 = (long) $i0;

        $l3 = $l2 + $l1;

        r0.<com.ctc.wstx.sr.StreamScanner: long mCurrInputProcessed> = $l3;

        $i5 = r0.<com.ctc.wstx.sr.StreamScanner: int mCurrInputRowStart>;

        $i4 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        $i6 = $i5 - $i4;

        r0.<com.ctc.wstx.sr.StreamScanner: int mCurrInputRowStart> = $i6;

        $i7 = virtualinvoke r4.<com.ctc.wstx.io.WstxInputSource: int readInto(com.ctc.wstx.io.WstxInputData)>(r0);

        if $i7 <= 0 goto label2;

        return 1;

     label2:
        virtualinvoke r4.<com.ctc.wstx.io.WstxInputSource: void close()>();

        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputSource mRootInput>;

        if r4 != $r1 goto label3;

        return 0;

     label3:
        $r2 = virtualinvoke r4.<com.ctc.wstx.io.WstxInputSource: com.ctc.wstx.io.WstxInputSource getParent()>();

        if $r2 != null goto label4;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwNullParent(com.ctc.wstx.io.WstxInputSource)>(r4);

     label4:
        $i8 = r0.<com.ctc.wstx.sr.StreamScanner: int mCurrDepth>;

        $i9 = virtualinvoke r4.<com.ctc.wstx.io.WstxInputSource: int getScopeId()>();

        if $i8 == $i9 goto label5;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void handleIncompleteEntityProblem(com.ctc.wstx.io.WstxInputSource)>(r4);

     label5:
        r4 = $r2;

        r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputSource mInput> = $r2;

        virtualinvoke $r2.<com.ctc.wstx.io.WstxInputSource: void restoreContext(com.ctc.wstx.io.WstxInputData)>(r0);

        $i10 = virtualinvoke $r2.<com.ctc.wstx.io.WstxInputSource: int getScopeId()>();

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputTopDepth> = $i10;

        $z0 = r0.<com.ctc.wstx.sr.StreamScanner: boolean mCfgNormalizeLFs>;

        $r3 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.api.ReaderConfig mConfig>;

        $z1 = virtualinvoke $r3.<com.ctc.wstx.api.ReaderConfig: boolean willNormalizeLFs()>();

        if $z0 == $z1 goto label8;

        $z2 = virtualinvoke $r2.<com.ctc.wstx.io.WstxInputSource: boolean fromInternalEntity()>();

        if $z2 != 0 goto label6;

        $z3 = 1;

        goto label7;

     label6:
        $z3 = 0;

     label7:
        r0.<com.ctc.wstx.sr.StreamScanner: boolean mCfgNormalizeLFs> = $z3;

     label8:
        $i11 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i12 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        if $i11 >= $i12 goto label1;

        return 1;
    }

    protected final boolean loadMore(java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        java.lang.String r1;
        com.ctc.wstx.sr.StreamScanner r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean loadMore()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwUnexpectedEOF(java.lang.String)>(r1);

     label1:
        return 1;
    }

    protected boolean loadMoreFromCurrent() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        long $l1, $l2, $l3;
        int $i0, $i4, $i5, $i6, $i7;
        com.ctc.wstx.sr.StreamScanner r0;
        com.ctc.wstx.io.WstxInputSource $r1;
        boolean $z0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        $l2 = r0.<com.ctc.wstx.sr.StreamScanner: long mCurrInputProcessed>;

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        $l1 = (long) $i0;

        $l3 = $l2 + $l1;

        r0.<com.ctc.wstx.sr.StreamScanner: long mCurrInputProcessed> = $l3;

        $i5 = r0.<com.ctc.wstx.sr.StreamScanner: int mCurrInputRowStart>;

        $i4 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        $i6 = $i5 - $i4;

        r0.<com.ctc.wstx.sr.StreamScanner: int mCurrInputRowStart> = $i6;

        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputSource mInput>;

        $i7 = virtualinvoke $r1.<com.ctc.wstx.io.WstxInputSource: int readInto(com.ctc.wstx.io.WstxInputData)>(r0);

        if $i7 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected final boolean loadMoreFromCurrent(java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        java.lang.String r1;
        com.ctc.wstx.sr.StreamScanner r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean loadMoreFromCurrent()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwUnexpectedEOB(java.lang.String)>(r1);

     label1:
        return 1;
    }

    protected boolean ensureInput(int) throws java.io.IOException
    {
        int $i0, $i1, i2, i3;
        com.ctc.wstx.sr.StreamScanner r0;
        com.ctc.wstx.io.WstxInputSource $r1;
        boolean $z0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        i3 := @parameter0: int;

        $i1 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        i2 = $i1 - $i0;

        if i2 < i3 goto label1;

        return 1;

     label1:
        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputSource mInput>;

        $z0 = virtualinvoke $r1.<com.ctc.wstx.io.WstxInputSource: boolean readMore(com.ctc.wstx.io.WstxInputData,int)>(r0, i3);

        return $z0;
    }

    protected void closeAllInput(boolean) throws javax.xml.stream.XMLStreamException
    {
        java.io.IOException $r3;
        com.ctc.wstx.sr.StreamScanner r0;
        com.ctc.wstx.io.WstxInputSource $r1, $r2, r4;
        boolean z0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        z0 := @parameter0: boolean;

        r4 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputSource mInput>;

     label1:
        if z0 == 0 goto label2;

        virtualinvoke r4.<com.ctc.wstx.io.WstxInputSource: void closeCompletely()>();

        goto label3;

     label2:
        virtualinvoke r4.<com.ctc.wstx.io.WstxInputSource: void close()>();

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwFromIOE(java.io.IOException)>($r3);

     label5:
        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputSource mRootInput>;

        if r4 != $r1 goto label6;

        goto label8;

     label6:
        $r2 = virtualinvoke r4.<com.ctc.wstx.io.WstxInputSource: com.ctc.wstx.io.WstxInputSource getParent()>();

        if $r2 != null goto label7;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwNullParent(com.ctc.wstx.io.WstxInputSource)>(r4);

     label7:
        r4 = $r2;

        r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputSource mInput> = $r2;

        goto label1;

     label8:
        return;

        catch java.io.IOException from label1 to label3 with label4;
    }

    protected void throwNullParent(com.ctc.wstx.io.WstxInputSource)
    {
        java.lang.Error $r0;
        java.lang.String $r1;
        com.ctc.wstx.sr.StreamScanner r2;
        com.ctc.wstx.io.WstxInputSource r3;

        r2 := @this: com.ctc.wstx.sr.StreamScanner;

        r3 := @parameter0: com.ctc.wstx.io.WstxInputSource;

        $r0 = new java.lang.Error;

        $r1 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_INTERNAL>;

        specialinvoke $r0.<java.lang.Error: void <init>(java.lang.String)>($r1);

        throw $r0;
    }

    protected char resolveSimpleEntity(boolean) throws javax.xml.stream.XMLStreamException
    {
        char[] r1;
        boolean z0;
        int $i12, i14, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26, i28, i30, i31, i33, i34, i35, i36, i37, i38, i39, i40, i41, i42, i43, i44, i45, i46, i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85;
        com.ctc.wstx.sr.StreamScanner r0;
        char $c0, $c1, $c2, $c3, $c4, $c5, $c6, $c7, $c8, $c9, $c10, $c11, $c13, $c15, c27, c29, c32;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        z0 := @parameter0: boolean;

        r1 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        i25 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        i26 = i25 + 1;

        c27 = r1[i25];

        $i48 = (int) c27;

        if $i48 != 35 goto label13;

        i28 = i26 + 1;

        c29 = r1[i26];

        i30 = 0;

        i14 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        $i49 = (int) c29;

        if $i49 != 120 goto label07;

     label01:
        if i28 >= i14 goto label11;

        $i19 = i28;

        i28 = i28 + 1;

        c29 = r1[$i19];

        $i50 = (int) c29;

        if $i50 != 59 goto label02;

        goto label11;

     label02:
        i30 = i30 << 4;

        $i51 = (int) c29;

        if $i51 > 57 goto label03;

        $i52 = (int) c29;

        if $i52 < 48 goto label03;

        $i53 = (int) c29;

        $i24 = $i53 - 48;

        i30 = i30 + $i24;

        goto label06;

     label03:
        $i54 = (int) c29;

        if $i54 < 97 goto label04;

        $i55 = (int) c29;

        if $i55 > 102 goto label04;

        $i56 = (int) c29;

        $i22 = $i56 - 97;

        $i23 = 10 + $i22;

        i30 = i30 + $i23;

        goto label06;

     label04:
        $i57 = (int) c29;

        if $i57 < 65 goto label05;

        $i58 = (int) c29;

        if $i58 > 70 goto label05;

        $i59 = (int) c29;

        $i20 = $i59 - 65;

        $i21 = 10 + $i20;

        i30 = i30 + $i21;

        goto label06;

     label05:
        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = i28;

        $i60 = (int) c29;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwUnexpectedChar(int,java.lang.String)>($i60, "; expected a hex digit (0-9a-fA-F).");

     label06:
        if i30 <= 1114111 goto label01;

        specialinvoke r0.<com.ctc.wstx.sr.StreamScanner: void reportUnicodeOverflow()>();

        goto label01;

     label07:
        $i61 = (int) c29;

        if $i61 == 59 goto label11;

        $i62 = (int) c29;

        if $i62 > 57 goto label08;

        $i63 = (int) c29;

        if $i63 < 48 goto label08;

        $i18 = i30 * 10;

        $i64 = (int) c29;

        $i17 = $i64 - 48;

        i30 = $i18 + $i17;

        if i30 <= 1114111 goto label09;

        specialinvoke r0.<com.ctc.wstx.sr.StreamScanner: void reportUnicodeOverflow()>();

        goto label09;

     label08:
        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = i28;

        $i65 = (int) c29;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwUnexpectedChar(int,java.lang.String)>($i65, "; expected a decimal number.");

     label09:
        if i28 < i14 goto label10;

        goto label11;

     label10:
        $i16 = i28;

        i28 = i28 + 1;

        c29 = r1[$i16];

        goto label07;

     label11:
        $i66 = (int) c29;

        if $i66 != 59 goto label12;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = i28;

        $c15 = specialinvoke r0.<com.ctc.wstx.sr.StreamScanner: char checkAndExpandChar(int)>(i30);

        return $c15;

     label12:
        goto label19;

     label13:
        if z0 == 0 goto label19;

        $i67 = (int) c27;

        if $i67 != 97 goto label16;

        i31 = i26 + 1;

        c32 = r1[i26];

        $i68 = (int) c32;

        if $i68 != 109 goto label14;

        i33 = i31 + 1;

        $c11 = r1[i31];

        $i69 = (int) $c11;

        if $i69 != 112 goto label19;

        $i12 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        if i33 >= $i12 goto label19;

        i34 = i33 + 1;

        $c13 = r1[i33];

        $i70 = (int) $c13;

        if $i70 != 59 goto label19;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = i34;

        return 38;

     label14:
        $i71 = (int) c32;

        if $i71 != 112 goto label19;

        i35 = i31 + 1;

        $c8 = r1[i31];

        $i72 = (int) $c8;

        if $i72 != 111 goto label19;

        i36 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        if i35 >= i36 goto label15;

        i37 = i35 + 1;

        $c9 = r1[i35];

        $i73 = (int) $c9;

        if $i73 != 115 goto label15;

        if i37 >= i36 goto label15;

        i38 = i37 + 1;

        $c10 = r1[i37];

        $i74 = (int) $c10;

        if $i74 != 59 goto label15;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = i38;

        return 39;

     label15:
        goto label19;

     label16:
        $i75 = (int) c27;

        if $i75 != 103 goto label17;

        i39 = i26 + 1;

        $c6 = r1[i26];

        $i76 = (int) $c6;

        if $i76 != 116 goto label19;

        i40 = i39 + 1;

        $c7 = r1[i39];

        $i77 = (int) $c7;

        if $i77 != 59 goto label19;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = i40;

        return 62;

     label17:
        $i78 = (int) c27;

        if $i78 != 108 goto label18;

        i41 = i26 + 1;

        $c4 = r1[i26];

        $i79 = (int) $c4;

        if $i79 != 116 goto label19;

        i42 = i41 + 1;

        $c5 = r1[i41];

        $i80 = (int) $c5;

        if $i80 != 59 goto label19;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = i42;

        return 60;

     label18:
        $i81 = (int) c27;

        if $i81 != 113 goto label19;

        i43 = i26 + 1;

        $c0 = r1[i26];

        $i82 = (int) $c0;

        if $i82 != 117 goto label19;

        i44 = i43 + 1;

        $c1 = r1[i43];

        $i83 = (int) $c1;

        if $i83 != 111 goto label19;

        i45 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        if i44 >= i45 goto label19;

        i46 = i44 + 1;

        $c2 = r1[i44];

        $i84 = (int) $c2;

        if $i84 != 116 goto label19;

        if i46 >= i45 goto label19;

        i47 = i46 + 1;

        $c3 = r1[i46];

        $i85 = (int) $c3;

        if $i85 != 59 goto label19;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = i47;

        return 34;

     label19:
        return 0;
    }

    protected char resolveCharOnlyEntity(boolean) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        char[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        boolean z0, $z1;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i8, $i9, $i11, $i12, $i14, $i15, $i16, $i17, $i19, $i20, $i22, $i23, $i24, $i25, $i27, $i28, $i30, $i31, $i32, $i33, $i35, $i36, $i38, $i39, $i41, $i42, $i44, $i45, $i46, $i47, $i49, $i50, $i52, $i53, $i54, $i55, $i57, $i58, $i59, i60, $i61, $i62, $i63, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84;
        com.ctc.wstx.sr.StreamScanner r0;
        char $c4, $c7, $c10, $c13, $c18, $c21, $c26, $c29, c34, $c37, $c40, $c43, $c48, $c51, $c56, $c64;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        z0 := @parameter0: boolean;

        $i1 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        i60 = $i1 - $i0;

        if i60 >= 6 goto label03;

        $i57 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i58 = $i57 - 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i58;

        $z1 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean ensureInput(int)>(6);

        if $z1 != 0 goto label01;

        $i59 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: int inputInBuffer()>();

        i60 = $i59;

        if $i59 >= 3 goto label02;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwUnexpectedEOF(java.lang.String)>(" in entity reference");

        goto label02;

     label01:
        i60 = 6;

     label02:
        $i61 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i62 = $i61 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i62;

     label03:
        $r15 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i63 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $c64 = $r15[$i63];

        $i65 = (int) $c64;

        if $i65 != 35 goto label04;

        $i54 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i55 = $i54 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i55;

        $c56 = specialinvoke r0.<com.ctc.wstx.sr.StreamScanner: char resolveCharEnt()>();

        return $c56;

     label04:
        if z0 == 0 goto label10;

        $i66 = (int) $c64;

        if $i66 != 97 goto label07;

        $r9 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i32 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i33 = $i32 + 1;

        c34 = $r9[$i33];

        $i67 = (int) c34;

        if $i67 != 109 goto label05;

        if i60 < 4 goto label06;

        $r13 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i46 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i47 = $i46 + 2;

        $c48 = $r13[$i47];

        $i68 = (int) $c48;

        if $i68 != 112 goto label06;

        $r14 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i49 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i50 = $i49 + 3;

        $c51 = $r14[$i50];

        $i69 = (int) $c51;

        if $i69 != 59 goto label06;

        $i52 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i53 = $i52 + 4;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i53;

        return 38;

     label05:
        $i70 = (int) c34;

        if $i70 != 112 goto label06;

        if i60 < 5 goto label06;

        $r10 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i35 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i36 = $i35 + 2;

        $c37 = $r10[$i36];

        $i71 = (int) $c37;

        if $i71 != 111 goto label06;

        $r11 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i38 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i39 = $i38 + 3;

        $c40 = $r11[$i39];

        $i72 = (int) $c40;

        if $i72 != 115 goto label06;

        $r12 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i41 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i42 = $i41 + 4;

        $c43 = $r12[$i42];

        $i73 = (int) $c43;

        if $i73 != 59 goto label06;

        $i44 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i45 = $i44 + 5;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i45;

        return 39;

     label06:
        goto label10;

     label07:
        $i74 = (int) $c64;

        if $i74 != 108 goto label08;

        if i60 < 3 goto label10;

        $r7 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i24 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i25 = $i24 + 1;

        $c26 = $r7[$i25];

        $i75 = (int) $c26;

        if $i75 != 116 goto label10;

        $r8 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i27 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i28 = $i27 + 2;

        $c29 = $r8[$i28];

        $i76 = (int) $c29;

        if $i76 != 59 goto label10;

        $i30 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i31 = $i30 + 3;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i31;

        return 60;

     label08:
        $i77 = (int) $c64;

        if $i77 != 103 goto label09;

        if i60 < 3 goto label10;

        $r5 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i16 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i17 = $i16 + 1;

        $c18 = $r5[$i17];

        $i78 = (int) $c18;

        if $i78 != 116 goto label10;

        $r6 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i19 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i20 = $i19 + 2;

        $c21 = $r6[$i20];

        $i79 = (int) $c21;

        if $i79 != 59 goto label10;

        $i22 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i23 = $i22 + 3;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i23;

        return 62;

     label09:
        $i80 = (int) $c64;

        if $i80 != 113 goto label10;

        if i60 < 5 goto label10;

        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i2 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i3 = $i2 + 1;

        $c4 = $r1[$i3];

        $i81 = (int) $c4;

        if $i81 != 117 goto label10;

        $r2 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i5 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i6 = $i5 + 2;

        $c7 = $r2[$i6];

        $i82 = (int) $c7;

        if $i82 != 111 goto label10;

        $r3 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i8 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i9 = $i8 + 3;

        $c10 = $r3[$i9];

        $i83 = (int) $c10;

        if $i83 != 116 goto label10;

        $r4 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i11 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i12 = $i11 + 4;

        $c13 = $r4[$i12];

        $i84 = (int) $c13;

        if $i84 != 59 goto label10;

        $i14 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i15 = $i14 + 5;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i15;

        return 34;

     label10:
        return 0;
    }

    protected com.ctc.wstx.ent.EntityDecl resolveNonCharEntity() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        java.lang.String $r16;
        char[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        com.ctc.wstx.ent.EntityDecl $r17;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i8, $i9, $i11, $i12, $i14, $i15, $i17, $i18, $i20, $i21, $i23, $i24, $i26, $i27, $i28, $i29, $i31, $i32, $i34, $i35, $i37, $i38, $i40, $i41, $i43, $i44, $i45, i46, $i47, $i48, $i49, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73;
        com.ctc.wstx.sr.StreamScanner r0;
        char $c4, $c7, $c10, $c13, $c16, $c19, $c22, $c25, $c30, $c33, $c36, $c39, $c42, $c50, c51;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        $i1 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        i46 = $i1 - $i0;

        if i46 >= 6 goto label03;

        $i43 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i44 = $i43 - 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i44;

        $z0 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean ensureInput(int)>(6);

        if $z0 != 0 goto label01;

        $i45 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: int inputInBuffer()>();

        i46 = $i45;

        if $i45 >= 3 goto label02;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwUnexpectedEOF(java.lang.String)>(" in entity reference");

        goto label02;

     label01:
        i46 = 6;

     label02:
        $i47 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i48 = $i47 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i48;

     label03:
        $r15 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i49 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $c50 = $r15[$i49];

        $i54 = (int) $c50;

        if $i54 != 35 goto label04;

        return null;

     label04:
        $i55 = (int) $c50;

        if $i55 != 97 goto label07;

        $r9 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i26 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i27 = $i26 + 1;

        c51 = $r9[$i27];

        $i56 = (int) c51;

        if $i56 != 109 goto label05;

        if i46 < 4 goto label06;

        $r13 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i37 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i38 = $i37 + 2;

        $c39 = $r13[$i38];

        $i57 = (int) $c39;

        if $i57 != 112 goto label06;

        $r14 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i40 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i41 = $i40 + 3;

        $c42 = $r14[$i41];

        $i58 = (int) $c42;

        if $i58 != 59 goto label06;

        return null;

     label05:
        $i59 = (int) c51;

        if $i59 != 112 goto label06;

        if i46 < 5 goto label06;

        $r10 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i28 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i29 = $i28 + 2;

        $c30 = $r10[$i29];

        $i60 = (int) $c30;

        if $i60 != 111 goto label06;

        $r11 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i31 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i32 = $i31 + 3;

        $c33 = $r11[$i32];

        $i61 = (int) $c33;

        if $i61 != 115 goto label06;

        $r12 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i34 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i35 = $i34 + 4;

        $c36 = $r12[$i35];

        $i62 = (int) $c36;

        if $i62 != 59 goto label06;

        return null;

     label06:
        goto label10;

     label07:
        $i63 = (int) $c50;

        if $i63 != 108 goto label08;

        if i46 < 3 goto label10;

        $r7 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i20 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i21 = $i20 + 1;

        $c22 = $r7[$i21];

        $i64 = (int) $c22;

        if $i64 != 116 goto label10;

        $r8 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i23 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i24 = $i23 + 2;

        $c25 = $r8[$i24];

        $i65 = (int) $c25;

        if $i65 != 59 goto label10;

        return null;

     label08:
        $i66 = (int) $c50;

        if $i66 != 103 goto label09;

        if i46 < 3 goto label10;

        $r5 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i14 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i15 = $i14 + 1;

        $c16 = $r5[$i15];

        $i67 = (int) $c16;

        if $i67 != 116 goto label10;

        $r6 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i17 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i18 = $i17 + 2;

        $c19 = $r6[$i18];

        $i68 = (int) $c19;

        if $i68 != 59 goto label10;

        return null;

     label09:
        $i69 = (int) $c50;

        if $i69 != 113 goto label10;

        if i46 < 5 goto label10;

        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i2 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i3 = $i2 + 1;

        $c4 = $r1[$i3];

        $i70 = (int) $c4;

        if $i70 != 117 goto label10;

        $r2 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i5 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i6 = $i5 + 2;

        $c7 = $r2[$i6];

        $i71 = (int) $c7;

        if $i71 != 111 goto label10;

        $r3 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i8 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i9 = $i8 + 3;

        $c10 = $r3[$i9];

        $i72 = (int) $c10;

        if $i72 != 116 goto label10;

        $r4 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i11 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i12 = $i11 + 4;

        $c13 = $r4[$i12];

        $i73 = (int) $c13;

        if $i73 != 59 goto label10;

        return null;

     label10:
        $i52 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i53 = $i52 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i53;

        $r16 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: java.lang.String parseEntityName(char)>($c50);

        r0.<com.ctc.wstx.sr.StreamScanner: java.lang.String mCurrName> = $r16;

        $r17 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.ent.EntityDecl findEntity(java.lang.String,java.lang.Object)>($r16, null);

        return $r17;
    }

    protected char fullyResolveEntity(boolean) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        int $i2, $i4, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.lang.String $r1;
        com.ctc.wstx.sr.StreamScanner r0;
        boolean z0, $z1, $z2, $z3;
        char $c0, $c1, $c3, $c5, $c6;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        z0 := @parameter0: boolean;

        $c0 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: char getNextCharFromCurrent(java.lang.String)>(" in entity reference");

        $i7 = (int) $c0;

        if $i7 != 35 goto label1;

        $c6 = specialinvoke r0.<com.ctc.wstx.sr.StreamScanner: char resolveCharEnt()>();

        return $c6;

     label1:
        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: java.lang.String parseEntityName(char)>($c0);

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $i8 = (int) $c1;

        if $i8 != 97 goto label3;

        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("amp");

        if $z2 == 0 goto label2;

        return 38;

     label2:
        $z3 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("apos");

        if $z3 == 0 goto label6;

        return 39;

     label3:
        $i9 = (int) $c1;

        if $i9 != 103 goto label4;

        $i4 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i4 != 2 goto label6;

        $c5 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(1);

        $i10 = (int) $c5;

        if $i10 != 116 goto label6;

        return 62;

     label4:
        $i11 = (int) $c1;

        if $i11 != 108 goto label5;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i2 != 2 goto label6;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(1);

        $i12 = (int) $c3;

        if $i12 != 116 goto label6;

        return 60;

     label5:
        $i13 = (int) $c1;

        if $i13 != 113 goto label6;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("quot");

        if $z1 == 0 goto label6;

        return 34;

     label6:
        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.ent.EntityDecl expandEntity(java.lang.String,boolean,java.lang.Object)>($r1, z0, null);

        return 0;
    }

    protected com.ctc.wstx.ent.EntityDecl expandEntity(java.lang.String, boolean, java.lang.Object) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        java.lang.Object r2;
        java.lang.String r1;
        com.ctc.wstx.sr.StreamScanner r0;
        com.ctc.wstx.ent.EntityDecl $r3;
        boolean z0, $z1;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.Object;

        r0.<com.ctc.wstx.sr.StreamScanner: java.lang.String mCurrName> = r1;

        $r3 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.ent.EntityDecl findEntity(java.lang.String,java.lang.Object)>(r1, r2);

        if $r3 != null goto label2;

        $z1 = r0.<com.ctc.wstx.sr.StreamScanner: boolean mCfgReplaceEntities>;

        if $z1 == 0 goto label1;

        specialinvoke r0.<com.ctc.wstx.sr.StreamScanner: void expandUnresolvedEntity(java.lang.String)>(r1);

     label1:
        return null;

     label2:
        specialinvoke r0.<com.ctc.wstx.sr.StreamScanner: void expandEntity(com.ctc.wstx.ent.EntityDecl,boolean)>($r3, z0);

        return $r3;
    }

    private void expandEntity(com.ctc.wstx.ent.EntityDecl, boolean) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.api.ReaderConfig $r4, $r35;
        com.ctc.wstx.ent.EntityDecl r0;
        boolean $z0, $z1, $z2, z3, $z4;
        java.io.FileNotFoundException $r22;
        com.ctc.wstx.io.WstxInputSource $r3, $r32, r33;
        java.lang.StringBuffer $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r23, $r24, $r27, $r28, $r30;
        int $i0;
        java.lang.String $r1, $r11, $r16, $r21, $r26, $r29, $r31;
        com.ctc.wstx.sr.StreamScanner r2;
        javax.xml.stream.XMLResolver $r34;
        java.lang.Class $r25;

        r2 := @this: com.ctc.wstx.sr.StreamScanner;

        r0 := @parameter0: com.ctc.wstx.ent.EntityDecl;

        z3 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<com.ctc.wstx.ent.EntityDecl: java.lang.String getName()>();

        $r3 = r2.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputSource mInput>;

        $z0 = virtualinvoke $r3.<com.ctc.wstx.io.WstxInputSource: boolean isOrIsExpandedFrom(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        specialinvoke r2.<com.ctc.wstx.sr.StreamScanner: void throwRecursionError(java.lang.String)>($r1);

     label1:
        $z1 = virtualinvoke r0.<com.ctc.wstx.ent.EntityDecl: boolean isParsed()>();

        if $z1 != 0 goto label2;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal reference to unparsed external entity \'");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'.");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<com.ctc.wstx.sr.StreamScanner: void throwParseError(java.lang.String)>($r21);

     label2:
        $z2 = virtualinvoke r0.<com.ctc.wstx.ent.EntityDecl: boolean isExternal()>();

        if $z2 == 0 goto label4;

        if z3 != 0 goto label3;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Encountered a reference to external parsed entity \'");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' when expanding attribute value: not legal as per XML 1.0/1.1 #3.1.");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<com.ctc.wstx.sr.StreamScanner: void throwParseError(java.lang.String)>($r16);

     label3:
        $r4 = r2.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.api.ReaderConfig mConfig>;

        $z4 = virtualinvoke $r4.<com.ctc.wstx.api.ReaderConfig: boolean hasConfigFlags(int)>(8);

        if $z4 != 0 goto label4;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Encountered a reference to external entity \'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\', but Reader has feature \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("javax.xml.stream.isSupportingExternalEntities");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' disabled.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<com.ctc.wstx.sr.StreamScanner: void throwParseError(java.lang.String)>($r11);

     label4:
        $r32 = r2.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputSource mInput>;

        virtualinvoke $r32.<com.ctc.wstx.io.WstxInputSource: void saveContext(com.ctc.wstx.io.WstxInputData)>(r2);

        r33 = null;

     label5:
        $r34 = r2.<com.ctc.wstx.sr.StreamScanner: javax.xml.stream.XMLResolver mEntityResolver>;

        $r35 = r2.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.api.ReaderConfig mConfig>;

        $i0 = r2.<com.ctc.wstx.sr.StreamScanner: int mDocXmlVersion>;

        r33 = virtualinvoke r0.<com.ctc.wstx.ent.EntityDecl: com.ctc.wstx.io.WstxInputSource expand(com.ctc.wstx.io.WstxInputSource,javax.xml.stream.XMLResolver,com.ctc.wstx.api.ReaderConfig,int)>($r32, $r34, $r35, $i0);

     label6:
        goto label8;

     label7:
        $r22 := @caughtexception;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(was ");

        $r25 = virtualinvoke $r22.<java.lang.Object: java.lang.Class getClass()>();

        $r26 = virtualinvoke $r25.<java.lang.Class: java.lang.String getName()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") ");

        $r29 = virtualinvoke $r22.<java.io.FileNotFoundException: java.lang.String getMessage()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<com.ctc.wstx.sr.StreamScanner: void throwParseError(java.lang.String)>($r31);

     label8:
        virtualinvoke r2.<com.ctc.wstx.sr.StreamScanner: void initInputSource(com.ctc.wstx.io.WstxInputSource,boolean)>(r33, $z2);

        return;

        catch java.io.FileNotFoundException from label5 to label6 with label7;
    }

    private void expandUnresolvedEntity(java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.api.ReaderConfig $r1, $r5;
        int $i0, i1;
        java.lang.String r3;
        com.ctc.wstx.sr.StreamScanner r0;
        javax.xml.stream.XMLResolver $r2;
        com.ctc.wstx.io.WstxInputSource $r4, $r6, $r7;
        boolean $z0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.api.ReaderConfig mConfig>;

        $r2 = virtualinvoke $r1.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLResolver getUndeclaredEntityResolver()>();

        if $r2 == null goto label3;

        $r4 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputSource mInput>;

        $z0 = virtualinvoke $r4.<com.ctc.wstx.io.WstxInputSource: boolean isOrIsExpandedFrom(java.lang.String)>(r3);

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwRecursionError(java.lang.String)>(r3);

     label1:
        $r7 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.io.WstxInputSource mInput>;

        virtualinvoke $r7.<com.ctc.wstx.io.WstxInputSource: void saveContext(com.ctc.wstx.io.WstxInputData)>(r0);

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mDocXmlVersion>;

        i1 = $i0;

        if $i0 != 0 goto label2;

        i1 = 256;

     label2:
        $r5 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.api.ReaderConfig mConfig>;

        $r6 = staticinvoke <com.ctc.wstx.io.DefaultInputResolver: com.ctc.wstx.io.WstxInputSource resolveEntityUsing(com.ctc.wstx.io.WstxInputSource,java.lang.String,java.lang.String,java.lang.String,javax.xml.stream.XMLResolver,com.ctc.wstx.api.ReaderConfig,int)>($r7, r3, null, null, $r2, $r5, i1);

        if $r6 == null goto label3;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void initInputSource(com.ctc.wstx.io.WstxInputSource,boolean)>($r6, 1);

        return;

     label3:
        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void handleUndeclaredEntity(java.lang.String)>(r3);

        return;
    }

    protected abstract com.ctc.wstx.ent.EntityDecl findEntity(java.lang.String, java.lang.Object) throws javax.xml.stream.XMLStreamException;

    protected abstract void handleUndeclaredEntity(java.lang.String) throws javax.xml.stream.XMLStreamException;

    protected abstract void handleIncompleteEntityProblem(com.ctc.wstx.io.WstxInputSource) throws javax.xml.stream.XMLStreamException;

    protected abstract char handleExpandedSurrogate(char, char);

    protected java.lang.String parseLocalName(char) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        int $i0, $i1, $i3, i4, i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14;
        java.lang.String $r3, $r4;
        com.ctc.wstx.sr.StreamScanner r0;
        boolean $z0, $z1;
        char c2, c8;
        com.ctc.wstx.util.SymbolTable $r2;
        char[] $r1, $r5;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        c2 := @parameter0: char;

        $z0 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean isNameStartChar(char)>(c2);

        if $z0 != 0 goto label2;

        $i9 = (int) c2;

        if $i9 != 58 goto label1;

        $i10 = (int) c2;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwUnexpectedChar(int,java.lang.String)>($i10, " (missing namespace prefix?)");

     label1:
        $i11 = (int) c2;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwUnexpectedChar(int,java.lang.String)>($i11, " (expected a name start character)");

     label2:
        $i3 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        i4 = $i3;

        $i12 = (int) c2;

        i5 = $i12;

        $i6 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        $i7 = $i3 - 1;

        $r5 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

     label3:
        if i4 < $i6 goto label4;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = i4;

        $r4 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: java.lang.String parseLocalName2(int,int)>($i7, i5);

        return $r4;

     label4:
        c8 = $r5[i4];

        $i13 = (int) c8;

        if $i13 >= 45 goto label5;

        goto label7;

     label5:
        $z1 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean isNameChar(char)>(c8);

        if $z1 != 0 goto label6;

        goto label7;

     label6:
        $i0 = i5 * 31;

        $i14 = (int) c8;

        i5 = $i0 + $i14;

        i4 = i4 + 1;

        goto label3;

     label7:
        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = i4;

        $r2 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.util.SymbolTable mSymbols>;

        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i1 = i4 - $i7;

        $r3 = virtualinvoke $r2.<com.ctc.wstx.util.SymbolTable: java.lang.String findSymbol(char[],int,int,int)>($r1, $i7, $i1, i5);

        return $r3;
    }

    protected java.lang.String parseLocalName2(int, int) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i9, i10, i11, $i12, $i13, $i14, $i15;
        java.lang.String $r7;
        com.ctc.wstx.sr.StreamScanner r0;
        boolean $z0, $z1;
        char $c8;
        com.ctc.wstx.util.SymbolTable $r6;
        char[] $r1, $r2, $r3, $r4, r5;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        i0 := @parameter0: int;

        i9 := @parameter1: int;

        $i1 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        i10 = $i1 - i0;

        $i2 = i10 + 8;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: char[] getNameBuffer(int)>($i2);

        r5 = $r1;

        if i10 <= 0 goto label1;

        $r4 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, i0, $r1, 0, i10);

     label1:
        i11 = lengthof $r1;

     label2:
        $i12 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i13 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        if $i12 < $i13 goto label3;

        $z1 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean loadMoreFromCurrent()>();

        if $z1 != 0 goto label3;

        goto label7;

     label3:
        $r2 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i3 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $c8 = $r2[$i3];

        $i14 = (int) $c8;

        if $i14 >= 45 goto label4;

        goto label7;

     label4:
        $z0 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean isNameChar(char)>($c8);

        if $z0 != 0 goto label5;

        goto label7;

     label5:
        $i4 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i5 = $i4 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i5;

        if i10 < i11 goto label6;

        $r3 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: char[] expandBy50Pct(char[])>(r5);

        r5 = $r3;

        r0.<com.ctc.wstx.sr.StreamScanner: char[] mNameBuffer> = $r3;

        i11 = lengthof $r3;

     label6:
        $i6 = i10;

        i10 = i10 + 1;

        r5[$i6] = $c8;

        $i7 = i9 * 31;

        $i15 = (int) $c8;

        i9 = $i7 + $i15;

        goto label2;

     label7:
        $r6 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.util.SymbolTable mSymbols>;

        $r7 = virtualinvoke $r6.<com.ctc.wstx.util.SymbolTable: java.lang.String findSymbol(char[],int,int,int)>(r5, 0, i10, i9);

        return $r7;
    }

    protected java.lang.String parseFullName() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        char $c4;
        int $i0, $i1, $i2, $i3;
        char[] $r1;
        java.lang.String $r2;
        com.ctc.wstx.sr.StreamScanner r0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        $i1 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean loadMoreFromCurrent()>();

     label1:
        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i2 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i3 = $i2 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i3;

        $c4 = $r1[$i2];

        $r2 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: java.lang.String parseFullName(char)>($c4);

        return $r2;
    }

    protected java.lang.String parseFullName(char) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        boolean $z0, $z1, $z2, $z3;
        com.ctc.wstx.util.SymbolTable $r3;
        java.lang.StringBuffer $r8, $r10, $r14;
        int $i0, $i1, $i3, i4, i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.lang.String $r4, $r9, $r11, $r12, $r13, $r15;
        com.ctc.wstx.sr.StreamScanner r0;
        char c2, c8;
        char[] $r1, $r2, $r7;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        c2 := @parameter0: char;

        $z0 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean isNameStartChar(char)>(c2);

        if $z0 != 0 goto label3;

        $i10 = (int) c2;

        if $i10 != 58 goto label1;

        $z3 = r0.<com.ctc.wstx.sr.StreamScanner: boolean mCfgNsEnabled>;

        if $z3 == 0 goto label3;

        $r13 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: java.lang.String parseFNameForError()>();

        specialinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwNsColonException(java.lang.String)>($r13);

        goto label3;

     label1:
        $i11 = (int) c2;

        if $i11 > 32 goto label2;

        $i12 = (int) c2;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwUnexpectedChar(int,java.lang.String)>($i12, " (missing name?)");

     label2:
        $i13 = (int) c2;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwUnexpectedChar(int,java.lang.String)>($i13, " (expected a name start character)");

     label3:
        $i3 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        i4 = $i3;

        $i14 = (int) c2;

        i5 = $i14;

        $i6 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        $i7 = $i3 - 1;

     label4:
        if i4 < $i6 goto label5;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = i4;

        $r12 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: java.lang.String parseFullName2(int,int)>($i7, i5);

        return $r12;

     label5:
        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        c8 = $r1[i4];

        $i15 = (int) c8;

        if $i15 != 58 goto label6;

        $z2 = r0.<com.ctc.wstx.sr.StreamScanner: boolean mCfgNsEnabled>;

        if $z2 == 0 goto label8;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = i4;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = new java.lang.String;

        $r7 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i1 = i4 - $i7;

        specialinvoke $r15.<java.lang.String: void <init>(char[],int,int)>($r7, $i7, $i1);

        $r8 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r9 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: java.lang.String parseFNameForError()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwNsColonException(java.lang.String)>($r11);

        goto label8;

     label6:
        $i16 = (int) c8;

        if $i16 >= 45 goto label7;

        goto label9;

     label7:
        $z1 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean isNameChar(char)>(c8);

        if $z1 != 0 goto label8;

        goto label9;

     label8:
        $i9 = i5 * 31;

        $i17 = (int) c8;

        i5 = $i9 + $i17;

        i4 = i4 + 1;

        goto label4;

     label9:
        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = i4;

        $r3 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.util.SymbolTable mSymbols>;

        $r2 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i0 = i4 - $i7;

        $r4 = virtualinvoke $r3.<com.ctc.wstx.util.SymbolTable: java.lang.String findSymbol(char[],int,int,int)>($r2, $i7, $i0, i5);

        return $r4;
    }

    protected java.lang.String parseFullName2(int, int) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        boolean $z0, $z1, $z2;
        com.ctc.wstx.util.SymbolTable $r13;
        java.lang.StringBuffer $r6, $r7, $r9, $r15;
        int i0, $i1, $i2, $i3, $i4, $i5, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        java.lang.String $r8, $r10, $r14, $r16;
        com.ctc.wstx.sr.StreamScanner r0;
        char $c6;
        char[] $r1, $r2, $r3, $r11, r12;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        i0 := @parameter0: int;

        i7 := @parameter1: int;

        $i1 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        i8 = $i1 - i0;

        $i2 = i8 + 8;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: char[] getNameBuffer(int)>($i2);

        r12 = $r1;

        if i8 <= 0 goto label1;

        $r11 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, i0, $r1, 0, i8);

     label1:
        i9 = lengthof $r1;

     label2:
        $i10 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i11 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        if $i10 < $i11 goto label3;

        $z2 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean loadMoreFromCurrent()>();

        if $z2 != 0 goto label3;

        goto label8;

     label3:
        $r2 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i3 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $c6 = $r2[$i3];

        $i14 = (int) $c6;

        if $i14 != 58 goto label4;

        $z1 = r0.<com.ctc.wstx.sr.StreamScanner: boolean mCfgNsEnabled>;

        if $z1 == 0 goto label6;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = new java.lang.String;

        specialinvoke $r16.<java.lang.String: void <init>(char[],int,int)>(r12, 0, i8);

        $r6 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);

        $r8 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: java.lang.String parseFNameForError()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwNsColonException(java.lang.String)>($r10);

        goto label6;

     label4:
        $i15 = (int) $c6;

        if $i15 >= 45 goto label5;

        goto label8;

     label5:
        $z0 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean isNameChar(char)>($c6);

        if $z0 != 0 goto label6;

        goto label8;

     label6:
        $i12 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i13 = $i12 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i13;

        if i8 < i9 goto label7;

        $r3 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: char[] expandBy50Pct(char[])>(r12);

        r12 = $r3;

        r0.<com.ctc.wstx.sr.StreamScanner: char[] mNameBuffer> = $r3;

        i9 = lengthof $r3;

     label7:
        $i4 = i8;

        i8 = i8 + 1;

        r12[$i4] = $c6;

        $i5 = i7 * 31;

        $i16 = (int) $c6;

        i7 = $i5 + $i16;

        goto label2;

     label8:
        $r13 = r0.<com.ctc.wstx.sr.StreamScanner: com.ctc.wstx.util.SymbolTable mSymbols>;

        $r14 = virtualinvoke $r13.<com.ctc.wstx.util.SymbolTable: java.lang.String findSymbol(char[],int,int,int)>(r12, 0, i8, i7);

        return $r14;
    }

    protected java.lang.String parseFNameForError() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        char c7;
        java.lang.StringBuffer $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8;
        char[] $r3;
        java.lang.String $r2;
        com.ctc.wstx.sr.StreamScanner r1;
        boolean $z0;

        r1 := @this: com.ctc.wstx.sr.StreamScanner;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(int)>(100);

     label1:
        $i1 = r1.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i0 = r1.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        if $i1 >= $i0 goto label2;

        $r3 = r1.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i5 = r1.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i6 = $i5 + 1;

        r1.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i6;

        c7 = $r3[$i5];

        goto label4;

     label2:
        $i2 = virtualinvoke r1.<com.ctc.wstx.sr.StreamScanner: int getNext()>();

        if $i2 >= 0 goto label3;

        goto label6;

     label3:
        c7 = (char) $i2;

     label4:
        $i8 = (int) c7;

        if $i8 == 58 goto label5;

        $z0 = virtualinvoke r1.<com.ctc.wstx.sr.StreamScanner: boolean isNameChar(char)>(c7);

        if $z0 != 0 goto label5;

        $i3 = r1.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i4 = $i3 - 1;

        r1.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i4;

        goto label6;

     label5:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c7);

        goto label1;

     label6:
        $r2 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    protected final java.lang.String parseEntityName(char) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        java.lang.StringBuffer $r3, $r4, $r5, $r8, $r9, $r10, $r13, $r14;
        int $i0, $i1, $i3, $i4, $i6, $i7;
        java.lang.String $r1, $r6, $r11;
        com.ctc.wstx.sr.StreamScanner r0;
        boolean $z0;
        char c2, $c5;
        char[] $r12;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        c2 := @parameter0: char;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: java.lang.String parseFullName(char)>(c2);

        $i1 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        if $i1 < $i0 goto label1;

        $z0 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean loadMoreFromCurrent()>();

        if $z0 != 0 goto label1;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Missing semicolon after reference for entity \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwParseError(java.lang.String)>($r11);

     label1:
        $r12 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i3 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i4 = $i3 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i4;

        $c5 = $r12[$i3];

        $i6 = (int) $c5;

        if $i6 == 59 goto label2;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; expected a semi-colon after the reference for entity \'");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $i7 = (int) $c5;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwUnexpectedChar(int,java.lang.String)>($i7, $r6);

     label2:
        return $r1;
    }

    protected int skipFullName(char) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        char c6, $c8;
        int $i0, $i1, $i2, $i3, $i4, $i5, i7, $i9;
        char[] $r1;
        com.ctc.wstx.sr.StreamScanner r0;
        boolean $z0, $z1;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        c6 := @parameter0: char;

        $z0 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean isNameStartChar(char)>(c6);

        if $z0 != 0 goto label1;

        $i4 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i5 = $i4 - 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i5;

        return 0;

     label1:
        i7 = 1;

     label2:
        $i1 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        if $i1 >= $i0 goto label3;

        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i2 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i3 = $i2 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i3;

        $c8 = $r1[$i2];

        goto label4;

     label3:
        $c8 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: char getNextChar(java.lang.String)>("; expected an identifier");

     label4:
        $i9 = (int) $c8;

        if $i9 == 58 goto label5;

        $z1 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean isNameChar(char)>($c8);

        if $z1 != 0 goto label5;

        goto label6;

     label5:
        i7 = i7 + 1;

        goto label2;

     label6:
        return i7;
    }

    protected final java.lang.String parseSystemId(char, boolean, java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i14, $i16, $i17, $i18, $i19, $i20;
        java.lang.String r1, $r4, $r5;
        com.ctc.wstx.sr.StreamScanner r0;
        boolean z0;
        char c2, $c12, c13;
        char[] $r2, r3;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        c2 := @parameter0: char;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        $i16 = (int) -1;

        r3 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: char[] getNameBuffer(int)>($i16);

        i11 = 0;

     label01:
        $i1 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        if $i1 >= $i0 goto label02;

        $r2 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i9 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i10 = $i9 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i10;

        $c12 = $r2[$i9];

        goto label03;

     label02:
        $c12 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: char getNextChar(java.lang.String)>(r1);

     label03:
        c13 = $c12;

        $i17 = (int) $c12;

        $i18 = (int) c2;

        if $i17 != $i18 goto label04;

        goto label11;

     label04:
        $i19 = (int) $c12;

        if $i19 != 10 goto label05;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void markLF()>();

        goto label09;

     label05:
        $i20 = (int) $c12;

        if $i20 != 13 goto label09;

        $i4 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: int peekNext()>();

        if $i4 != 10 goto label08;

        $i5 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i6 = $i5 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i6;

        if z0 != 0 goto label07;

        $i7 = lengthof r3;

        if i11 < $i7 goto label06;

        r3 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: char[] expandBy50Pct(char[])>(r3);

     label06:
        $i8 = i11;

        i11 = i11 + 1;

        r3[$i8] = 13;

     label07:
        c13 = 10;

        goto label09;

     label08:
        if z0 == 0 goto label09;

        c13 = 10;

     label09:
        $i14 = lengthof r3;

        if i11 < $i14 goto label10;

        r3 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: char[] expandBy50Pct(char[])>(r3);

     label10:
        $i3 = i11;

        i11 = i11 + 1;

        r3[$i3] = c13;

        goto label01;

     label11:
        if i11 != 0 goto label12;

        $r4 = "";

        goto label13;

     label12:
        $r5 = new java.lang.String;

        $r4 = $r5;

        specialinvoke $r5.<java.lang.String: void <init>(char[],int,int)>(r3, 0, i11);

     label13:
        return $r4;
    }

    protected final java.lang.String parsePublicId(char, boolean, java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        byte[] $r2;
        byte $b3;
        boolean z0, z1;
        int $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, $i13, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        java.lang.String r1, $r5, $r6;
        com.ctc.wstx.sr.StreamScanner r0;
        char c0, $c14, c15;
        char[] $r3, r4;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        c0 := @parameter0: char;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        $i19 = (int) -1;

        r4 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: char[] getNameBuffer(int)>($i19);

        i11 = 0;

        z1 = 0;

     label01:
        $i12 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i13 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        if $i12 >= $i13 goto label02;

        $r3 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i9 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i10 = $i9 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i10;

        $c14 = $r3[$i9];

        goto label03;

     label02:
        $c14 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: char getNextChar(java.lang.String)>(r1);

     label03:
        c15 = $c14;

        $i20 = (int) $c14;

        $i21 = (int) c0;

        if $i20 != $i21 goto label04;

        goto label16;

     label04:
        $i22 = (int) $c14;

        if $i22 != 10 goto label05;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void markLF()>();

        if z0 == 0 goto label12;

        z1 = 1;

        goto label01;

     label05:
        $i23 = (int) $c14;

        if $i23 != 13 goto label09;

        $i4 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: int peekNext()>();

        if $i4 != 10 goto label08;

        $i5 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i6 = $i5 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i6;

        if z0 == 0 goto label06;

        z1 = 1;

        goto label01;

     label06:
        $i7 = lengthof r4;

        if i11 < $i7 goto label07;

        r4 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: char[] expandBy50Pct(char[])>(r4);

     label07:
        $i8 = i11;

        i11 = i11 + 1;

        r4[$i8] = 13;

        c15 = 10;

        goto label12;

     label08:
        if z0 == 0 goto label12;

        z1 = 1;

        goto label01;

     label09:
        $i24 = (int) $c14;

        if $i24 != 32 goto label10;

        if z0 == 0 goto label12;

        z1 = 1;

        goto label01;

     label10:
        $i25 = (int) $c14;

        if $i25 >= 128 goto label11;

        $r2 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $i26 = (int) $c14;

        $b3 = $r2[$i26];

        if $b3 == 1 goto label12;

     label11:
        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwUnexpectedChar(int,java.lang.String)>(c15, " in public identifier");

     label12:
        $i16 = lengthof r4;

        if i11 < $i16 goto label13;

        r4 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: char[] expandBy50Pct(char[])>(r4);

     label13:
        if z1 == 0 goto label15;

        if c15 != 32 goto label14;

        goto label01;

     label14:
        z1 = 0;

        if i11 <= 0 goto label15;

        $i1 = i11;

        i11 = i11 + 1;

        r4[$i1] = 32;

        $i2 = lengthof r4;

        if i11 < $i2 goto label15;

        r4 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: char[] expandBy50Pct(char[])>(r4);

     label15:
        $i17 = i11;

        i11 = i11 + 1;

        r4[$i17] = c15;

        goto label01;

     label16:
        if i11 != 0 goto label17;

        $r5 = "";

        goto label18;

     label17:
        $r6 = new java.lang.String;

        $r5 = $r6;

        specialinvoke $r6.<java.lang.String: void <init>(char[],int,int)>(r4, 0, i11);

     label18:
        return $r5;
    }

    protected final void parseUntil(com.ctc.wstx.util.TextBuffer, char, boolean, java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.util.TextBuffer r2;
        int $i0, $i1, $i2, $i4, $i6, $i7, $i8, $i10, $i11, $i12, i13, i14, i16, $i18, i19, $i20, $i21, $i22, $i23, $i24, $i25;
        java.lang.String r1;
        com.ctc.wstx.sr.StreamScanner r0;
        boolean z0;
        char c3, $c5, $c9, c15, $c17;
        char[] $r3;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r2 := @parameter0: com.ctc.wstx.util.TextBuffer;

        c3 := @parameter1: char;

        z0 := @parameter2: boolean;

        r1 := @parameter3: java.lang.String;

        $i1 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i0 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        if $i1 < $i0 goto label01;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean loadMore(java.lang.String)>(r1);

     label01:
        $r3 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i11 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        $i12 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        i13 = $i12;

        i14 = $i12;

     label02:
        if i13 >= $i11 goto label15;

        $i2 = i13;

        i13 = i13 + 1;

        c15 = $r3[$i2];

        $i20 = (int) c15;

        $i21 = (int) c3;

        if $i20 != $i21 goto label04;

        $i10 = i13 - i14;

        i16 = $i10 - 1;

        if i16 <= 0 goto label03;

        virtualinvoke r2.<com.ctc.wstx.util.TextBuffer: void append(char[],int,int)>($r3, i14, i16);

     label03:
        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = i13;

        return;

     label04:
        $i22 = (int) c15;

        if $i22 != 10 goto label05;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = i13;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void markLF()>();

        goto label14;

     label05:
        $i23 = (int) c15;

        if $i23 != 13 goto label14;

        if z0 != 0 goto label07;

        if i13 >= $i11 goto label07;

        $c9 = $r3[i13];

        $i24 = (int) $c9;

        if $i24 != 10 goto label06;

        i13 = i13 + 1;

     label06:
        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = i13;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void markLF()>();

        goto label14;

     label07:
        $i4 = i13 - i14;

        $i8 = $i4 - 1;

        if $i8 <= 0 goto label08;

        virtualinvoke r2.<com.ctc.wstx.util.TextBuffer: void append(char[],int,int)>($r3, i14, $i8);

     label08:
        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = i13;

        $c5 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: char getNextChar(java.lang.String)>(r1);

        $i25 = (int) $c5;

        if $i25 == 10 goto label11;

        $i6 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i7 = $i6 - 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i7;

        if z0 == 0 goto label09;

        $c17 = 10;

        goto label10;

     label09:
        $c17 = 13;

     label10:
        virtualinvoke r2.<com.ctc.wstx.util.TextBuffer: void append(char)>($c17);

        goto label13;

     label11:
        if z0 == 0 goto label12;

        virtualinvoke r2.<com.ctc.wstx.util.TextBuffer: void append(char)>(10);

        goto label13;

     label12:
        virtualinvoke r2.<com.ctc.wstx.util.TextBuffer: void append(char)>(13);

        virtualinvoke r2.<com.ctc.wstx.util.TextBuffer: void append(char)>(10);

     label13:
        $i18 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        i13 = $i18;

        i14 = $i18;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void markLF()>();

     label14:
        goto label02;

     label15:
        i19 = i13 - i14;

        if i19 <= 0 goto label16;

        virtualinvoke r2.<com.ctc.wstx.util.TextBuffer: void append(char[],int,int)>($r3, i14, i19);

     label16:
        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: boolean loadMore(java.lang.String)>(r1);

        goto label01;
    }

    private char resolveCharEnt() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i15, $i16, $i19, $i20, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38;
        com.ctc.wstx.sr.StreamScanner r0;
        char $c0, $c1, c14, $c17, c18, $c21;
        char[] $r1, $r2;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        i13 = 0;

        $c0 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: char getNextChar(java.lang.String)>(" in entity reference");

        c14 = $c0;

        $i22 = (int) $c0;

        if $i22 != 120 goto label09;

     label01:
        $i15 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i16 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        if $i15 >= $i16 goto label02;

        $r2 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i11 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i12 = $i11 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i12;

        $c17 = $r2[$i11];

        goto label03;

     label02:
        $c17 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: char getNextCharFromCurrent(java.lang.String)>(" in entity reference");

     label03:
        c18 = $c17;

        $i23 = (int) $c17;

        if $i23 != 59 goto label04;

        goto label14;

     label04:
        i13 = i13 << 4;

        $i24 = (int) $c17;

        if $i24 > 57 goto label05;

        $i25 = (int) $c17;

        if $i25 < 48 goto label05;

        $i26 = (int) $c17;

        $i10 = $i26 - 48;

        i13 = i13 + $i10;

        goto label08;

     label05:
        $i27 = (int) c18;

        if $i27 < 97 goto label06;

        $i28 = (int) c18;

        if $i28 > 102 goto label06;

        $i29 = (int) c18;

        $i8 = $i29 - 97;

        $i9 = 10 + $i8;

        i13 = i13 + $i9;

        goto label08;

     label06:
        $i30 = (int) c18;

        if $i30 < 65 goto label07;

        $i31 = (int) c18;

        if $i31 > 70 goto label07;

        $i32 = (int) c18;

        $i6 = $i32 - 65;

        $i7 = 10 + $i6;

        i13 = i13 + $i7;

        goto label08;

     label07:
        $i33 = (int) c18;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwUnexpectedChar(int,java.lang.String)>($i33, "; expected a hex digit (0-9a-fA-F).");

     label08:
        if i13 <= 1114111 goto label01;

        specialinvoke r0.<com.ctc.wstx.sr.StreamScanner: void reportUnicodeOverflow()>();

        goto label01;

     label09:
        $i34 = (int) c14;

        if $i34 == 59 goto label14;

        $i35 = (int) c14;

        if $i35 > 57 goto label10;

        $i36 = (int) c14;

        if $i36 < 48 goto label10;

        $i5 = i13 * 10;

        $i37 = (int) c14;

        $i4 = $i37 - 48;

        i13 = $i5 + $i4;

        if i13 <= 1114111 goto label11;

        specialinvoke r0.<com.ctc.wstx.sr.StreamScanner: void reportUnicodeOverflow()>();

        goto label11;

     label10:
        $i38 = (int) c14;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwUnexpectedChar(int,java.lang.String)>($i38, "; expected a decimal number.");

     label11:
        $i19 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i20 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputLen>;

        if $i19 >= $i20 goto label12;

        $r1 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mInputBuffer>;

        $i2 = r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr>;

        $i3 = $i2 + 1;

        r0.<com.ctc.wstx.sr.StreamScanner: int mInputPtr> = $i3;

        $c21 = $r1[$i2];

        goto label13;

     label12:
        $c21 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: char getNextCharFromCurrent(java.lang.String)>(" in entity reference");

     label13:
        c14 = $c21;

        goto label09;

     label14:
        $c1 = specialinvoke r0.<com.ctc.wstx.sr.StreamScanner: char checkAndExpandChar(int)>(i13);

        return $c1;
    }

    private final char checkAndExpandChar(int) throws javax.xml.stream.XMLStreamException
    {
        int $i0, $i1, $i2, $i3, $i5, i8, $i11, $i13, $i15, $i17, $i19, $i21;
        com.ctc.wstx.sr.StreamScanner r0;
        boolean $z0;
        char $c4, $c6, $c7, $c9;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        i8 := @parameter0: int;

        $i11 = (int) 55296;

        if i8 < $i11 goto label4;

        $i13 = (int) 57344;

        if i8 >= $i13 goto label1;

        specialinvoke r0.<com.ctc.wstx.sr.StreamScanner: void reportIllegalChar(int)>(i8);

     label1:
        $i15 = (int) 65535;

        if i8 <= $i15 goto label3;

        if i8 <= 1114111 goto label2;

        specialinvoke r0.<com.ctc.wstx.sr.StreamScanner: void reportUnicodeOverflow()>();

     label2:
        $i5 = i8 - 65536;

        $i0 = $i5 >> 10;

        $i17 = (int) 55296;

        $i1 = $i0 + $i17;

        $c6 = (char) $i1;

        $i2 = $i5 & 1023;

        $i19 = (int) 56320;

        $i3 = $i2 + $i19;

        $c7 = (char) $i3;

        $c4 = virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: char handleExpandedSurrogate(char,char)>($c6, $c7);

        return $c4;

     label3:
        $i21 = (int) 65534;

        if i8 < $i21 goto label6;

        specialinvoke r0.<com.ctc.wstx.sr.StreamScanner: void reportIllegalChar(int)>(i8);

        goto label6;

     label4:
        if i8 >= 32 goto label6;

        if i8 != 0 goto label5;

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwParseError(java.lang.String)>("Invalid character reference: null character not allowed in XML content.");

     label5:
        $z0 = r0.<com.ctc.wstx.sr.StreamScanner: boolean mXml11>;

        if $z0 != 0 goto label6;

        if i8 == 9 goto label6;

        if i8 == 10 goto label6;

        if i8 == 13 goto label6;

        specialinvoke r0.<com.ctc.wstx.sr.StreamScanner: void reportIllegalChar(int)>(i8);

     label6:
        $c9 = (char) i8;

        return $c9;
    }

    protected final char[] getNameBuffer(int)
    {
        int i0, $i1, $i2, $i3, i4, i5, $i6;
        char[] $r1, $r2, r3;
        com.ctc.wstx.sr.StreamScanner r0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        i0 := @parameter0: int;

        r3 = r0.<com.ctc.wstx.sr.StreamScanner: char[] mNameBuffer>;

        if r3 != null goto label3;

        if i0 <= 48 goto label1;

        $i3 = i0 + 16;

        goto label2;

     label1:
        $i3 = 64;

     label2:
        $r2 = newarray (char)[$i3];

        r3 = $r2;

        r0.<com.ctc.wstx.sr.StreamScanner: char[] mNameBuffer> = $r2;

        goto label6;

     label3:
        $i1 = lengthof r3;

        if i0 < $i1 goto label6;

        i4 = lengthof r3;

        $i2 = i4 >> 1;

        i5 = i4 + $i2;

        if i0 < i5 goto label4;

        $i6 = i0 + 16;

        goto label5;

     label4:
        $i6 = i5;

     label5:
        $r1 = newarray (char)[$i6];

        r3 = $r1;

        r0.<com.ctc.wstx.sr.StreamScanner: char[] mNameBuffer> = $r1;

     label6:
        return r3;
    }

    protected final char[] expandBy50Pct(char[])
    {
        int i0, $i1, $i2;
        char[] r0, r1;
        com.ctc.wstx.sr.StreamScanner r2;

        r2 := @this: com.ctc.wstx.sr.StreamScanner;

        r0 := @parameter0: char[];

        i0 = lengthof r0;

        $i1 = i0 >> 1;

        $i2 = i0 + $i1;

        r1 = newarray (char)[$i2];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, i0);

        return r1;
    }

    private void throwNsColonException(java.lang.String) throws com.ctc.wstx.exc.WstxException
    {
        java.lang.StringBuffer $r1, $r2, $r4, $r5;
        java.lang.String r3, $r6;
        com.ctc.wstx.sr.StreamScanner r0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r3 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal name \'");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' (PI target, entity/notation name): can not contain a colon (XML Namespaces 1.0#6)");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwParseError(java.lang.String)>($r6);

        return;
    }

    private void throwRecursionError(java.lang.String) throws com.ctc.wstx.exc.WstxException
    {
        java.lang.StringBuffer $r1, $r2, $r4, $r5;
        java.lang.String r3, $r6;
        com.ctc.wstx.sr.StreamScanner r0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        r3 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal entity expansion: entity \'");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' expands itself recursively.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwParseError(java.lang.String)>($r6);

        return;
    }

    private void reportUnicodeOverflow() throws com.ctc.wstx.exc.WstxException
    {
        java.lang.StringBuffer $r1, $r2, $r4, $r5;
        java.lang.String $r3, $r6;
        com.ctc.wstx.sr.StreamScanner r0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal character entity: value higher than max allowed (0x");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(1114111);

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwParseError(java.lang.String)>($r6);

        return;
    }

    private void reportIllegalChar(int) throws com.ctc.wstx.exc.WstxException
    {
        java.lang.StringBuffer $r1, $r2, $r4, $r5;
        int i0;
        java.lang.String $r3, $r6;
        com.ctc.wstx.sr.StreamScanner r0;

        r0 := @this: com.ctc.wstx.sr.StreamScanner;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal character entity: expansion character (code 0x");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") not a valid XML character");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.sr.StreamScanner: void throwParseError(java.lang.String)>($r6);

        return;
    }

    protected void throwIllegalCall() throws java.lang.Error
    {
        java.lang.Error $r0;
        com.ctc.wstx.sr.StreamScanner r1;

        r1 := @this: com.ctc.wstx.sr.StreamScanner;

        $r0 = new java.lang.Error;

        specialinvoke $r0.<java.lang.Error: void <init>(java.lang.String)>("Internal error: this method should never be called");

        throw $r0;
    }

    static void <clinit>()
    {
        byte[] $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7, i8;

        <com.ctc.wstx.sr.StreamScanner: byte PUBID_CHAR_VALID_B> = 1;

        <com.ctc.wstx.sr.StreamScanner: byte PUBID_CHAR_INVALID_B> = 0;

        <com.ctc.wstx.sr.StreamScanner: int VALID_PUBID_CHAR_COUNT> = 128;

        <com.ctc.wstx.sr.StreamScanner: int NAME_CHAR_VALID_NONFIRST_I> = -1;

        <com.ctc.wstx.sr.StreamScanner: int NAME_CHAR_ALL_VALID_I> = 1;

        <com.ctc.wstx.sr.StreamScanner: int NAME_CHAR_INVALID_I> = 0;

        <com.ctc.wstx.sr.StreamScanner: byte NAME_CHAR_VALID_NONFIRST_B> = -1;

        <com.ctc.wstx.sr.StreamScanner: byte NAME_CHAR_ALL_VALID_B> = 1;

        <com.ctc.wstx.sr.StreamScanner: byte NAME_CHAR_INVALID_B> = 0;

        <com.ctc.wstx.sr.StreamScanner: int VALID_CHAR_COUNT> = 256;

        <com.ctc.wstx.sr.StreamScanner: char CHAR_LOWEST_LEGAL_LOCALNAME_CHAR> = 45;

        <com.ctc.wstx.sr.StreamScanner: char CHAR_FIRST_PURE_TEXT> = 63;

        <com.ctc.wstx.sr.StreamScanner: int INT_CR_LF_OR_NULL> = 13;

        <com.ctc.wstx.sr.StreamScanner: char CHAR_CR_LF_OR_NULL> = 13;

        <com.ctc.wstx.sr.StreamScanner: boolean SAX_COMPAT_MODE> = 0;

        $r0 = newarray (byte)[256];

        <com.ctc.wstx.sr.StreamScanner: byte[] sCharValidity> = $r0;

        $r1 = <com.ctc.wstx.sr.StreamScanner: byte[] sCharValidity>;

        $r1[95] = 1;

        i4 = 0;

     label01:
        if i4 > 25 goto label02;

        $r35 = <com.ctc.wstx.sr.StreamScanner: byte[] sCharValidity>;

        $i2 = 65 + i4;

        $r35[$i2] = 1;

        $r36 = <com.ctc.wstx.sr.StreamScanner: byte[] sCharValidity>;

        $i3 = 97 + i4;

        $r36[$i3] = 1;

        i4 = i4 + 1;

        goto label01;

     label02:
        i5 = 192;

     label03:
        if i5 >= 246 goto label04;

        $r34 = <com.ctc.wstx.sr.StreamScanner: byte[] sCharValidity>;

        $r34[i5] = 1;

        i5 = i5 + 1;

        goto label03;

     label04:
        $r2 = <com.ctc.wstx.sr.StreamScanner: byte[] sCharValidity>;

        $r2[215] = 0;

        $r3 = <com.ctc.wstx.sr.StreamScanner: byte[] sCharValidity>;

        $r3[247] = 0;

        $r4 = <com.ctc.wstx.sr.StreamScanner: byte[] sCharValidity>;

        $r4[45] = -1;

        $r5 = <com.ctc.wstx.sr.StreamScanner: byte[] sCharValidity>;

        $r5[46] = -1;

        $r6 = <com.ctc.wstx.sr.StreamScanner: byte[] sCharValidity>;

        $r6[183] = -1;

        i6 = 48;

     label05:
        if i6 > 57 goto label06;

        $r33 = <com.ctc.wstx.sr.StreamScanner: byte[] sCharValidity>;

        $r33[i6] = -1;

        i6 = i6 + 1;

        goto label05;

     label06:
        $r7 = newarray (byte)[128];

        <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity> = $r7;

        i7 = 0;

     label07:
        if i7 > 25 goto label08;

        $r31 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $i0 = 65 + i7;

        $r31[$i0] = 1;

        $r32 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $i1 = 97 + i7;

        $r32[$i1] = 1;

        i7 = i7 + 1;

        goto label07;

     label08:
        i8 = 48;

     label09:
        if i8 > 57 goto label10;

        $r30 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $r30[i8] = 1;

        i8 = i8 + 1;

        goto label09;

     label10:
        $r8 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $r8[10] = 1;

        $r9 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $r9[13] = 1;

        $r10 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $r10[32] = 1;

        $r11 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $r11[45] = 1;

        $r12 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $r12[39] = 1;

        $r13 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $r13[40] = 1;

        $r14 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $r14[41] = 1;

        $r15 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $r15[43] = 1;

        $r16 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $r16[44] = 1;

        $r17 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $r17[46] = 1;

        $r18 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $r18[47] = 1;

        $r19 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $r19[58] = 1;

        $r20 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $r20[61] = 1;

        $r21 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $r21[63] = 1;

        $r22 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $r22[59] = 1;

        $r23 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $r23[33] = 1;

        $r24 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $r24[42] = 1;

        $r25 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $r25[35] = 1;

        $r26 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $r26[64] = 1;

        $r27 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $r27[36] = 1;

        $r28 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $r28[95] = 1;

        $r29 = <com.ctc.wstx.sr.StreamScanner: byte[] sPubidValidity>;

        $r29[37] = 1;

        return;
    }
}
