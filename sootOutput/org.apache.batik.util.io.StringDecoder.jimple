public class org.apache.batik.util.io.StringDecoder extends java.lang.Object implements org.apache.batik.util.io.CharDecoder
{
    protected java.lang.String string;
    protected int length;
    protected int next;

    public void <init>(java.lang.String)
    {
        int $i0;
        org.apache.batik.util.io.StringDecoder r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.util.io.StringDecoder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.util.io.StringDecoder: java.lang.String string> = r1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        r0.<org.apache.batik.util.io.StringDecoder: int length> = $i0;

        return;
    }

    public int readChar() throws java.io.IOException
    {
        org.apache.batik.util.io.StringDecoder r0;
        char $c4;
        int $i0, $i1, $i2, $i3, $i6, $i7;
        java.lang.String $r1;

        r0 := @this: org.apache.batik.util.io.StringDecoder;

        $i1 = r0.<org.apache.batik.util.io.StringDecoder: int next>;

        $i0 = r0.<org.apache.batik.util.io.StringDecoder: int length>;

        if $i1 != $i0 goto label1;

        $i6 = (int) -1;

        return $i6;

     label1:
        $r1 = r0.<org.apache.batik.util.io.StringDecoder: java.lang.String string>;

        $i2 = r0.<org.apache.batik.util.io.StringDecoder: int next>;

        $i3 = $i2 + 1;

        r0.<org.apache.batik.util.io.StringDecoder: int next> = $i3;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i2);

        $i7 = (int) $c4;

        return $i7;
    }

    public void dispose() throws java.io.IOException
    {
        org.apache.batik.util.io.StringDecoder r0;

        r0 := @this: org.apache.batik.util.io.StringDecoder;

        r0.<org.apache.batik.util.io.StringDecoder: java.lang.String string> = null;

        return;
    }
}
