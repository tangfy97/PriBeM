final class org.joda.time.chrono.GJDayOfWeekDateTimeField extends org.joda.time.field.PreciseDurationDateTimeField
{
    private static final long serialVersionUID;
    private final org.joda.time.chrono.BasicChronology iChronology;

    void <init>(org.joda.time.chrono.BasicChronology, org.joda.time.DurationField)
    {
        org.joda.time.DurationField r2;
        org.joda.time.chrono.BasicChronology r3;
        org.joda.time.chrono.GJDayOfWeekDateTimeField r0;
        org.joda.time.DateTimeFieldType $r1;

        r0 := @this: org.joda.time.chrono.GJDayOfWeekDateTimeField;

        r3 := @parameter0: org.joda.time.chrono.BasicChronology;

        r2 := @parameter1: org.joda.time.DurationField;

        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfWeek()>();

        specialinvoke r0.<org.joda.time.field.PreciseDurationDateTimeField: void <init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)>($r1, r2);

        r0.<org.joda.time.chrono.GJDayOfWeekDateTimeField: org.joda.time.chrono.BasicChronology iChronology> = r3;

        return;
    }

    public int get(long)
    {
        int $i1;
        org.joda.time.chrono.BasicChronology $r1;
        org.joda.time.chrono.GJDayOfWeekDateTimeField r0;
        long l0;

        r0 := @this: org.joda.time.chrono.GJDayOfWeekDateTimeField;

        l0 := @parameter0: long;

        $r1 = r0.<org.joda.time.chrono.GJDayOfWeekDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i1 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: int getDayOfWeek(long)>(l0);

        return $i1;
    }

    public java.lang.String getAsText(int, java.util.Locale)
    {
        org.joda.time.chrono.GJLocaleSymbols $r1;
        java.util.Locale r0;
        int i0;
        org.joda.time.chrono.GJDayOfWeekDateTimeField r3;
        java.lang.String $r2;

        r3 := @this: org.joda.time.chrono.GJDayOfWeekDateTimeField;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.Locale;

        $r1 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: org.joda.time.chrono.GJLocaleSymbols forLocale(java.util.Locale)>(r0);

        $r2 = virtualinvoke $r1.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String dayOfWeekValueToText(int)>(i0);

        return $r2;
    }

    public java.lang.String getAsShortText(int, java.util.Locale)
    {
        org.joda.time.chrono.GJLocaleSymbols $r1;
        java.util.Locale r0;
        int i0;
        org.joda.time.chrono.GJDayOfWeekDateTimeField r3;
        java.lang.String $r2;

        r3 := @this: org.joda.time.chrono.GJDayOfWeekDateTimeField;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.Locale;

        $r1 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: org.joda.time.chrono.GJLocaleSymbols forLocale(java.util.Locale)>(r0);

        $r2 = virtualinvoke $r1.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String dayOfWeekValueToShortText(int)>(i0);

        return $r2;
    }

    protected int convertText(java.lang.String, java.util.Locale)
    {
        org.joda.time.chrono.GJLocaleSymbols $r1;
        java.util.Locale r0;
        int $i0;
        org.joda.time.chrono.GJDayOfWeekDateTimeField r3;
        java.lang.String r2;

        r3 := @this: org.joda.time.chrono.GJDayOfWeekDateTimeField;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.Locale;

        $r1 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: org.joda.time.chrono.GJLocaleSymbols forLocale(java.util.Locale)>(r0);

        $i0 = virtualinvoke $r1.<org.joda.time.chrono.GJLocaleSymbols: int dayOfWeekTextToValue(java.lang.String)>(r2);

        return $i0;
    }

    public org.joda.time.DurationField getRangeDurationField()
    {
        org.joda.time.chrono.BasicChronology $r1;
        org.joda.time.chrono.GJDayOfWeekDateTimeField r0;
        org.joda.time.DurationField $r2;

        r0 := @this: org.joda.time.chrono.GJDayOfWeekDateTimeField;

        $r1 = r0.<org.joda.time.chrono.GJDayOfWeekDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $r2 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: org.joda.time.DurationField weeks()>();

        return $r2;
    }

    public int getMinimumValue()
    {
        org.joda.time.chrono.GJDayOfWeekDateTimeField r0;

        r0 := @this: org.joda.time.chrono.GJDayOfWeekDateTimeField;

        return 1;
    }

    public int getMaximumValue()
    {
        org.joda.time.chrono.GJDayOfWeekDateTimeField r0;

        r0 := @this: org.joda.time.chrono.GJDayOfWeekDateTimeField;

        return 7;
    }

    public int getMaximumTextLength(java.util.Locale)
    {
        org.joda.time.chrono.GJLocaleSymbols $r1;
        java.util.Locale r0;
        int $i0;
        org.joda.time.chrono.GJDayOfWeekDateTimeField r2;

        r2 := @this: org.joda.time.chrono.GJDayOfWeekDateTimeField;

        r0 := @parameter0: java.util.Locale;

        $r1 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: org.joda.time.chrono.GJLocaleSymbols forLocale(java.util.Locale)>(r0);

        $i0 = virtualinvoke $r1.<org.joda.time.chrono.GJLocaleSymbols: int getDayOfWeekMaxTextLength()>();

        return $i0;
    }

    public int getMaximumShortTextLength(java.util.Locale)
    {
        org.joda.time.chrono.GJLocaleSymbols $r1;
        java.util.Locale r0;
        int $i0;
        org.joda.time.chrono.GJDayOfWeekDateTimeField r2;

        r2 := @this: org.joda.time.chrono.GJDayOfWeekDateTimeField;

        r0 := @parameter0: java.util.Locale;

        $r1 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: org.joda.time.chrono.GJLocaleSymbols forLocale(java.util.Locale)>(r0);

        $i0 = virtualinvoke $r1.<org.joda.time.chrono.GJLocaleSymbols: int getDayOfWeekMaxShortTextLength()>();

        return $i0;
    }

    private java.lang.Object readResolve()
    {
        org.joda.time.chrono.BasicChronology $r1;
        org.joda.time.chrono.GJDayOfWeekDateTimeField r0;
        org.joda.time.DateTimeField $r2;

        r0 := @this: org.joda.time.chrono.GJDayOfWeekDateTimeField;

        $r1 = r0.<org.joda.time.chrono.GJDayOfWeekDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $r2 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: org.joda.time.DateTimeField dayOfWeek()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <org.joda.time.chrono.GJDayOfWeekDateTimeField: long serialVersionUID> = -3857947176719041436L;

        return;
    }
}
