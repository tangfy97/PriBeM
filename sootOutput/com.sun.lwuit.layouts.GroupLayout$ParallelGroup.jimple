public class com.sun.lwuit.layouts.GroupLayout$ParallelGroup extends com.sun.lwuit.layouts.GroupLayout$Group
{
    private final int childAlignment;
    private final boolean resizable;
    final com.sun.lwuit.layouts.GroupLayout this$0;

    void <init>(com.sun.lwuit.layouts.GroupLayout, int, boolean)
    {
        com.sun.lwuit.layouts.GroupLayout r1;
        com.sun.lwuit.layouts.GroupLayout$ParallelGroup r0;
        int i0;
        boolean z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ParallelGroup;

        r1 := @parameter0: com.sun.lwuit.layouts.GroupLayout;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: com.sun.lwuit.layouts.GroupLayout this$0> = r1;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Group: void <init>(com.sun.lwuit.layouts.GroupLayout)>(r1);

        r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: int childAlignment> = i0;

        r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: boolean resizable> = z0;

        return;
    }

    public com.sun.lwuit.layouts.GroupLayout$ParallelGroup add(com.sun.lwuit.layouts.GroupLayout$Group)
    {
        com.sun.lwuit.layouts.GroupLayout$ParallelGroup r0, $r3;
        com.sun.lwuit.layouts.GroupLayout$Group r1, $r2;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ParallelGroup;

        r1 := @parameter0: com.sun.lwuit.layouts.GroupLayout$Group;

        $r2 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: com.sun.lwuit.layouts.GroupLayout$Group addSpring(com.sun.lwuit.layouts.GroupLayout$Spring)>(r1);

        $r3 = (com.sun.lwuit.layouts.GroupLayout$ParallelGroup) $r2;

        return $r3;
    }

    public com.sun.lwuit.layouts.GroupLayout$ParallelGroup add(com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r1;
        com.sun.lwuit.layouts.GroupLayout$ParallelGroup r0, $r2;
        int $i1, $i3, $i5;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ParallelGroup;

        r1 := @parameter0: com.sun.lwuit.Component;

        $i1 = (int) -1;

        $i3 = (int) -1;

        $i5 = (int) -1;

        $r2 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: com.sun.lwuit.layouts.GroupLayout$ParallelGroup add(com.sun.lwuit.Component,int,int,int)>(r1, $i1, $i3, $i5);

        return $r2;
    }

    public com.sun.lwuit.layouts.GroupLayout$ParallelGroup add(com.sun.lwuit.Component, int, int, int)
    {
        com.sun.lwuit.layouts.GroupLayout $r3;
        com.sun.lwuit.layouts.GroupLayout$Group $r4;
        com.sun.lwuit.Component r2;
        com.sun.lwuit.layouts.GroupLayout$ParallelGroup r0, $r5;
        int i0, i1, i2;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring $r1;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ParallelGroup;

        r2 := @parameter0: com.sun.lwuit.Component;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = new com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        $r3 = r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: com.sun.lwuit.layouts.GroupLayout this$0>;

        specialinvoke $r1.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: void <init>(com.sun.lwuit.layouts.GroupLayout,com.sun.lwuit.Component,int,int,int,com.sun.lwuit.layouts.GroupLayout$1)>($r3, r2, i0, i1, i2, null);

        $r4 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: com.sun.lwuit.layouts.GroupLayout$Group addSpring(com.sun.lwuit.layouts.GroupLayout$Spring)>($r1);

        $r5 = (com.sun.lwuit.layouts.GroupLayout$ParallelGroup) $r4;

        return $r5;
    }

    public com.sun.lwuit.layouts.GroupLayout$ParallelGroup add(int)
    {
        int i0;
        com.sun.lwuit.layouts.GroupLayout$ParallelGroup r0, $r1;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ParallelGroup;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: com.sun.lwuit.layouts.GroupLayout$ParallelGroup add(int,int,int)>(i0, i0, i0);

        return $r1;
    }

    public com.sun.lwuit.layouts.GroupLayout$ParallelGroup add(int, int, int)
    {
        com.sun.lwuit.layouts.GroupLayout $r2;
        com.sun.lwuit.layouts.GroupLayout$GapSpring $r1;
        com.sun.lwuit.layouts.GroupLayout$Group $r3;
        com.sun.lwuit.layouts.GroupLayout$ParallelGroup r0, $r4;
        int i0, i1, i2;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ParallelGroup;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = new com.sun.lwuit.layouts.GroupLayout$GapSpring;

        $r2 = r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: com.sun.lwuit.layouts.GroupLayout this$0>;

        specialinvoke $r1.<com.sun.lwuit.layouts.GroupLayout$GapSpring: void <init>(com.sun.lwuit.layouts.GroupLayout,int,int,int)>($r2, i0, i1, i2);

        $r3 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: com.sun.lwuit.layouts.GroupLayout$Group addSpring(com.sun.lwuit.layouts.GroupLayout$Spring)>($r1);

        $r4 = (com.sun.lwuit.layouts.GroupLayout$ParallelGroup) $r3;

        return $r4;
    }

    public com.sun.lwuit.layouts.GroupLayout$ParallelGroup add(int, com.sun.lwuit.layouts.GroupLayout$Group)
    {
        com.sun.lwuit.layouts.GroupLayout$ParallelGroup r0, $r3;
        int i0;
        com.sun.lwuit.layouts.GroupLayout$Group r1, $r2;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ParallelGroup;

        i0 := @parameter0: int;

        r1 := @parameter1: com.sun.lwuit.layouts.GroupLayout$Group;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: void checkChildAlignment(int)>(i0);

        virtualinvoke r1.<com.sun.lwuit.layouts.GroupLayout$Group: void setAlignment(int)>(i0);

        $r2 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: com.sun.lwuit.layouts.GroupLayout$Group addSpring(com.sun.lwuit.layouts.GroupLayout$Spring)>(r1);

        $r3 = (com.sun.lwuit.layouts.GroupLayout$ParallelGroup) $r2;

        return $r3;
    }

    public com.sun.lwuit.layouts.GroupLayout$ParallelGroup add(int, com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r1;
        com.sun.lwuit.layouts.GroupLayout$ParallelGroup r0, $r2;
        int i0, $i2, $i4, $i6;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ParallelGroup;

        i0 := @parameter0: int;

        r1 := @parameter1: com.sun.lwuit.Component;

        $i2 = (int) -1;

        $i4 = (int) -1;

        $i6 = (int) -1;

        $r2 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: com.sun.lwuit.layouts.GroupLayout$ParallelGroup add(int,com.sun.lwuit.Component,int,int,int)>(i0, r1, $i2, $i4, $i6);

        return $r2;
    }

    public com.sun.lwuit.layouts.GroupLayout$ParallelGroup add(int, com.sun.lwuit.Component, int, int, int)
    {
        com.sun.lwuit.layouts.GroupLayout $r3;
        com.sun.lwuit.layouts.GroupLayout$Group $r4;
        com.sun.lwuit.Component r2;
        com.sun.lwuit.layouts.GroupLayout$ParallelGroup r0, $r5;
        int i0, i1, i2, i3;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring $r1;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ParallelGroup;

        i0 := @parameter0: int;

        r2 := @parameter1: com.sun.lwuit.Component;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: void checkChildAlignment(int)>(i0);

        $r1 = new com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        $r3 = r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: com.sun.lwuit.layouts.GroupLayout this$0>;

        specialinvoke $r1.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: void <init>(com.sun.lwuit.layouts.GroupLayout,com.sun.lwuit.Component,int,int,int,com.sun.lwuit.layouts.GroupLayout$1)>($r3, r2, i1, i2, i3, null);

        virtualinvoke $r1.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: void setAlignment(int)>(i0);

        $r4 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: com.sun.lwuit.layouts.GroupLayout$Group addSpring(com.sun.lwuit.layouts.GroupLayout$Spring)>($r1);

        $r5 = (com.sun.lwuit.layouts.GroupLayout$ParallelGroup) $r4;

        return $r5;
    }

    boolean isResizable()
    {
        com.sun.lwuit.layouts.GroupLayout$ParallelGroup r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ParallelGroup;

        $z0 = r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: boolean resizable>;

        return $z0;
    }

    int operator(int, int)
    {
        com.sun.lwuit.layouts.GroupLayout$ParallelGroup r0;
        int i0, i1, $i2;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ParallelGroup;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(i0, i1);

        return $i2;
    }

    int calculateMinimumSize(int)
    {
        com.sun.lwuit.layouts.GroupLayout$ParallelGroup r0;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ParallelGroup;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: boolean isResizable()>();

        if $z0 != 0 goto label1;

        $i2 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: int getPreferredSize(int)>(i0);

        return $i2;

     label1:
        $i1 = specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Group: int calculateMinimumSize(int)>(i0);

        return $i1;
    }

    int calculateMaximumSize(int)
    {
        com.sun.lwuit.layouts.GroupLayout$ParallelGroup r0;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ParallelGroup;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: boolean isResizable()>();

        if $z0 != 0 goto label1;

        $i2 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: int getPreferredSize(int)>(i0);

        return $i2;

     label1:
        $i1 = specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Group: int calculateMaximumSize(int)>(i0);

        return $i1;
    }

    void setValidSize(int, int, int)
    {
        com.sun.lwuit.layouts.GroupLayout$Spring $r2;
        com.sun.lwuit.layouts.GroupLayout$ParallelGroup r0;
        java.util.Vector $r1;
        int $i0, i1, i2, i3, i4;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ParallelGroup;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        i3 := @parameter2: int;

        i4 = 0;

        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: java.util.Vector springs>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

     label1:
        if i4 >= $i0 goto label2;

        $r2 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: com.sun.lwuit.layouts.GroupLayout$Spring getSpring(int)>(i4);

        virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: void setChildSize(com.sun.lwuit.layouts.GroupLayout$Spring,int,int,int)>($r2, i1, i2, i3);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    void setChildSize(com.sun.lwuit.layouts.GroupLayout$Spring, int, int, int)
    {
        int $i0, i1, $i2, i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, $i11, $i12, i13;
        com.sun.lwuit.layouts.GroupLayout$Spring r0;
        com.sun.lwuit.layouts.GroupLayout$ParallelGroup r1;

        r1 := @this: com.sun.lwuit.layouts.GroupLayout$ParallelGroup;

        r0 := @parameter0: com.sun.lwuit.layouts.GroupLayout$Spring;

        i1 := @parameter1: int;

        i7 := @parameter2: int;

        i3 := @parameter3: int;

        $i0 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int getAlignment()>();

        i13 = $i0;

        $i2 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int getMinimumSize(int)>(i1);

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i2, i3);

        $i5 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int getMaximumSize(int)>(i1);

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i5);

        if $i0 != 0 goto label1;

        i13 = r1.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: int childAlignment>;

     label1:
        lookupswitch(i13)
        {
            case 2: goto label2;
            case 4: goto label3;
            default: goto label4;
        };

     label2:
        $i11 = i7 + i3;

        $i12 = $i11 - $i6;

        virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Spring: void setSize(int,int,int)>(i1, $i12, $i6);

        goto label5;

     label3:
        $i8 = i3 - $i6;

        $i9 = $i8 / 2;

        $i10 = i7 + $i9;

        virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Spring: void setSize(int,int,int)>(i1, $i10, $i6);

        goto label5;

     label4:
        virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Spring: void setSize(int,int,int)>(i1, i7, $i6);

     label5:
        return;
    }

    void insertAutopadding(int, java.util.Vector, java.util.Vector, java.util.Vector, java.util.Vector, boolean)
    {
        java.util.Vector $r1, r3, r5, r6, r7;
        com.sun.lwuit.layouts.GroupLayout$AutopaddingSpring $r4, $r12;
        int $i0, i1, $i2, i3, i4;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring $r9, $r11;
        boolean $z0, $z1, $z2, z3, $z4;
        com.sun.lwuit.layouts.GroupLayout$Spring $r2;
        com.sun.lwuit.layouts.GroupLayout$Group $r8;
        com.sun.lwuit.layouts.GroupLayout$ParallelGroup r0;
        java.lang.Object $r10;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ParallelGroup;

        i1 := @parameter0: int;

        r6 := @parameter1: java.util.Vector;

        r5 := @parameter2: java.util.Vector;

        r3 := @parameter3: java.util.Vector;

        r7 := @parameter4: java.util.Vector;

        z3 := @parameter5: boolean;

        i3 = 0;

        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: java.util.Vector springs>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

     label1:
        if i3 >= $i0 goto label7;

        $r2 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ParallelGroup: com.sun.lwuit.layouts.GroupLayout$Spring getSpring(int)>(i3);

        $z0 = $r2 instanceof com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        if $z0 == 0 goto label4;

        $r9 = (com.sun.lwuit.layouts.GroupLayout$ComponentSpring) $r2;

        $z4 = virtualinvoke $r9.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: boolean isVisible()>();

        if $z4 == 0 goto label6;

        i4 = 0;

     label2:
        $i2 = virtualinvoke r6.<java.util.Vector: int size()>();

        if i4 >= $i2 goto label3;

        $r10 = virtualinvoke r6.<java.util.Vector: java.lang.Object elementAt(int)>(i4);

        $r12 = (com.sun.lwuit.layouts.GroupLayout$AutopaddingSpring) $r10;

        $r11 = (com.sun.lwuit.layouts.GroupLayout$ComponentSpring) $r2;

        virtualinvoke $r12.<com.sun.lwuit.layouts.GroupLayout$AutopaddingSpring: void addTarget(com.sun.lwuit.layouts.GroupLayout$ComponentSpring,int)>($r11, i1);

        i4 = i4 + 1;

        goto label2;

     label3:
        virtualinvoke r7.<java.util.Vector: void addElement(java.lang.Object)>($r2);

        goto label6;

     label4:
        $z1 = $r2 instanceof com.sun.lwuit.layouts.GroupLayout$Group;

        if $z1 == 0 goto label5;

        $r8 = (com.sun.lwuit.layouts.GroupLayout$Group) $r2;

        virtualinvoke $r8.<com.sun.lwuit.layouts.GroupLayout$Group: void insertAutopadding(int,java.util.Vector,java.util.Vector,java.util.Vector,java.util.Vector,boolean)>(i1, r6, r5, r3, r7, z3);

        goto label6;

     label5:
        $z2 = $r2 instanceof com.sun.lwuit.layouts.GroupLayout$AutopaddingSpring;

        if $z2 == 0 goto label6;

        $r4 = (com.sun.lwuit.layouts.GroupLayout$AutopaddingSpring) $r2;

        virtualinvoke $r4.<com.sun.lwuit.layouts.GroupLayout$AutopaddingSpring: void setSources(java.util.Vector)>(r3);

        virtualinvoke r5.<java.util.Vector: void addElement(java.lang.Object)>($r2);

     label6:
        i3 = i3 + 1;

        goto label1;

     label7:
        return;
    }

    private void checkChildAlignment(int)
    {
        com.sun.lwuit.layouts.GroupLayout$ParallelGroup r0;
        int i0;
        java.lang.IllegalArgumentException $r1, $r2;
        boolean z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ParallelGroup;

        i0 := @parameter0: int;

        z0 = r0 instanceof com.sun.lwuit.layouts.GroupLayout$BaselineGroup;

        if z0 != 0 goto label1;

        if i0 != 3 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Alignment must be one of:LEADING, TRAILING or CENTER");

        throw $r2;

     label1:
        if i0 == 4 goto label2;

        if i0 == 3 goto label2;

        if i0 == 1 goto label2;

        if i0 == 2 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Alignment must be one of:LEADING, TRAILING or CENTER");

        throw $r1;

     label2:
        return;
    }
}
