public abstract class groovyjarjarantlr.BaseAST extends java.lang.Object implements groovyjarjarantlr.collections.AST, java.io.Serializable
{
    protected groovyjarjarantlr.BaseAST down;
    protected groovyjarjarantlr.BaseAST right;
    private static boolean verboseStringConversion;
    private static java.lang.String[] tokenNames;

    public void <init>()
    {
        groovyjarjarantlr.BaseAST r0;

        r0 := @this: groovyjarjarantlr.BaseAST;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void addChild(groovyjarjarantlr.collections.AST)
    {
        groovyjarjarantlr.collections.AST r0;
        groovyjarjarantlr.BaseAST r1, $r2, $r3, $r4, r5;

        r1 := @this: groovyjarjarantlr.BaseAST;

        r0 := @parameter0: groovyjarjarantlr.collections.AST;

        if r0 != null goto label1;

        return;

     label1:
        r5 = r1.<groovyjarjarantlr.BaseAST: groovyjarjarantlr.BaseAST down>;

        if r5 == null goto label4;

     label2:
        $r3 = r5.<groovyjarjarantlr.BaseAST: groovyjarjarantlr.BaseAST right>;

        if $r3 == null goto label3;

        r5 = r5.<groovyjarjarantlr.BaseAST: groovyjarjarantlr.BaseAST right>;

        goto label2;

     label3:
        $r4 = (groovyjarjarantlr.BaseAST) r0;

        r5.<groovyjarjarantlr.BaseAST: groovyjarjarantlr.BaseAST right> = $r4;

        goto label5;

     label4:
        $r2 = (groovyjarjarantlr.BaseAST) r0;

        r1.<groovyjarjarantlr.BaseAST: groovyjarjarantlr.BaseAST down> = $r2;

     label5:
        return;
    }

    public int getNumberOfChildren()
    {
        int i0;
        groovyjarjarantlr.BaseAST r0, $r1, r2;

        r0 := @this: groovyjarjarantlr.BaseAST;

        r2 = r0.<groovyjarjarantlr.BaseAST: groovyjarjarantlr.BaseAST down>;

        if r2 == null goto label3;

        i0 = 1;

     label1:
        $r1 = r2.<groovyjarjarantlr.BaseAST: groovyjarjarantlr.BaseAST right>;

        if $r1 == null goto label2;

        r2 = r2.<groovyjarjarantlr.BaseAST: groovyjarjarantlr.BaseAST right>;

        i0 = i0 + 1;

        goto label1;

     label2:
        return i0;

     label3:
        return 0;
    }

    private void doWorkForFindAll(groovyjarjarantlr.collections.impl.Vector, groovyjarjarantlr.collections.AST, boolean)
    {
        groovyjarjarantlr.BaseAST r0, $r4;
        groovyjarjarantlr.collections.AST $r1, r3, r5, $r6;
        groovyjarjarantlr.collections.impl.Vector r2;
        boolean z0, $z1, $z2;

        r0 := @this: groovyjarjarantlr.BaseAST;

        r2 := @parameter0: groovyjarjarantlr.collections.impl.Vector;

        r3 := @parameter1: groovyjarjarantlr.collections.AST;

        z0 := @parameter2: boolean;

        r5 = r0;

     label1:
        if r5 == null goto label6;

        if z0 == 0 goto label2;

        $z2 = interfaceinvoke r5.<groovyjarjarantlr.collections.AST: boolean equalsTreePartial(groovyjarjarantlr.collections.AST)>(r3);

        if $z2 != 0 goto label3;

     label2:
        if z0 != 0 goto label4;

        $z1 = interfaceinvoke r5.<groovyjarjarantlr.collections.AST: boolean equalsTree(groovyjarjarantlr.collections.AST)>(r3);

        if $z1 == 0 goto label4;

     label3:
        virtualinvoke r2.<groovyjarjarantlr.collections.impl.Vector: void appendElement(java.lang.Object)>(r5);

     label4:
        $r6 = interfaceinvoke r5.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getFirstChild()>();

        if $r6 == null goto label5;

        $r1 = interfaceinvoke r5.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getFirstChild()>();

        $r4 = (groovyjarjarantlr.BaseAST) $r1;

        specialinvoke $r4.<groovyjarjarantlr.BaseAST: void doWorkForFindAll(groovyjarjarantlr.collections.impl.Vector,groovyjarjarantlr.collections.AST,boolean)>(r2, r3, z0);

     label5:
        r5 = interfaceinvoke r5.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getNextSibling()>();

        goto label1;

     label6:
        return;
    }

    public boolean equals(groovyjarjarantlr.collections.AST)
    {
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0, $z1, $z2;
        groovyjarjarantlr.BaseAST r1;
        groovyjarjarantlr.collections.AST r0;

        r1 := @this: groovyjarjarantlr.BaseAST;

        r0 := @parameter0: groovyjarjarantlr.collections.AST;

        if r0 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r1.<groovyjarjarantlr.BaseAST: java.lang.String getText()>();

        if $r2 != null goto label2;

        $r9 = interfaceinvoke r0.<groovyjarjarantlr.collections.AST: java.lang.String getText()>();

        if $r9 != null goto label3;

     label2:
        $r3 = virtualinvoke r1.<groovyjarjarantlr.BaseAST: java.lang.String getText()>();

        if $r3 == null goto label4;

        $r8 = interfaceinvoke r0.<groovyjarjarantlr.collections.AST: java.lang.String getText()>();

        if $r8 != null goto label4;

     label3:
        return 0;

     label4:
        $r4 = virtualinvoke r1.<groovyjarjarantlr.BaseAST: java.lang.String getText()>();

        if $r4 != null goto label7;

        $r7 = interfaceinvoke r0.<groovyjarjarantlr.collections.AST: java.lang.String getText()>();

        if $r7 != null goto label7;

        $i2 = virtualinvoke r1.<groovyjarjarantlr.BaseAST: int getType()>();

        $i3 = interfaceinvoke r0.<groovyjarjarantlr.collections.AST: int getType()>();

        if $i2 != $i3 goto label5;

        $z1 = 1;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        return $z1;

     label7:
        $r5 = virtualinvoke r1.<groovyjarjarantlr.BaseAST: java.lang.String getText()>();

        $r6 = interfaceinvoke r0.<groovyjarjarantlr.collections.AST: java.lang.String getText()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label8;

        $i0 = virtualinvoke r1.<groovyjarjarantlr.BaseAST: int getType()>();

        $i1 = interfaceinvoke r0.<groovyjarjarantlr.collections.AST: int getType()>();

        if $i0 != $i1 goto label8;

        $z2 = 1;

        goto label9;

     label8:
        $z2 = 0;

     label9:
        return $z2;
    }

    public boolean equalsList(groovyjarjarantlr.collections.AST)
    {
        groovyjarjarantlr.BaseAST r0;
        groovyjarjarantlr.collections.AST $r1, $r2, $r3, $r4, r5, r6;
        boolean $z0, $z1;

        r0 := @this: groovyjarjarantlr.BaseAST;

        r5 := @parameter0: groovyjarjarantlr.collections.AST;

        if r5 != null goto label1;

        return 0;

     label1:
        r6 = r0;

     label2:
        if r6 == null goto label6;

        if r5 == null goto label6;

        $z0 = interfaceinvoke r6.<groovyjarjarantlr.collections.AST: boolean equals(groovyjarjarantlr.collections.AST)>(r5);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $r1 = interfaceinvoke r6.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getFirstChild()>();

        if $r1 == null goto label4;

        $r3 = interfaceinvoke r6.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getFirstChild()>();

        $r4 = interfaceinvoke r5.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getFirstChild()>();

        $z1 = interfaceinvoke $r3.<groovyjarjarantlr.collections.AST: boolean equalsList(groovyjarjarantlr.collections.AST)>($r4);

        if $z1 != 0 goto label5;

        return 0;

     label4:
        $r2 = interfaceinvoke r5.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getFirstChild()>();

        if $r2 == null goto label5;

        return 0;

     label5:
        r6 = interfaceinvoke r6.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getNextSibling()>();

        r5 = interfaceinvoke r5.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getNextSibling()>();

        goto label2;

     label6:
        if r6 != null goto label7;

        if r5 != null goto label7;

        return 1;

     label7:
        return 0;
    }

    public boolean equalsListPartial(groovyjarjarantlr.collections.AST)
    {
        groovyjarjarantlr.BaseAST r0;
        groovyjarjarantlr.collections.AST $r1, $r2, $r3, r4, r5;
        boolean $z0, $z1;

        r0 := @this: groovyjarjarantlr.BaseAST;

        r4 := @parameter0: groovyjarjarantlr.collections.AST;

        if r4 != null goto label1;

        return 1;

     label1:
        r5 = r0;

     label2:
        if r5 == null goto label5;

        if r4 == null goto label5;

        $z0 = interfaceinvoke r5.<groovyjarjarantlr.collections.AST: boolean equals(groovyjarjarantlr.collections.AST)>(r4);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $r1 = interfaceinvoke r5.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getFirstChild()>();

        if $r1 == null goto label4;

        $r2 = interfaceinvoke r5.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getFirstChild()>();

        $r3 = interfaceinvoke r4.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getFirstChild()>();

        $z1 = interfaceinvoke $r2.<groovyjarjarantlr.collections.AST: boolean equalsListPartial(groovyjarjarantlr.collections.AST)>($r3);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        r5 = interfaceinvoke r5.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getNextSibling()>();

        r4 = interfaceinvoke r4.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getNextSibling()>();

        goto label2;

     label5:
        if r5 != null goto label6;

        if r4 == null goto label6;

        return 0;

     label6:
        return 1;
    }

    public boolean equalsTree(groovyjarjarantlr.collections.AST)
    {
        groovyjarjarantlr.BaseAST r0;
        groovyjarjarantlr.collections.AST r1, $r2, $r3, $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: groovyjarjarantlr.BaseAST;

        r1 := @parameter0: groovyjarjarantlr.collections.AST;

        $z0 = virtualinvoke r0.<groovyjarjarantlr.BaseAST: boolean equals(groovyjarjarantlr.collections.AST)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r0.<groovyjarjarantlr.BaseAST: groovyjarjarantlr.collections.AST getFirstChild()>();

        if $r2 == null goto label2;

        $r4 = virtualinvoke r0.<groovyjarjarantlr.BaseAST: groovyjarjarantlr.collections.AST getFirstChild()>();

        $r5 = interfaceinvoke r1.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getFirstChild()>();

        $z1 = interfaceinvoke $r4.<groovyjarjarantlr.collections.AST: boolean equalsList(groovyjarjarantlr.collections.AST)>($r5);

        if $z1 != 0 goto label3;

        return 0;

     label2:
        $r3 = interfaceinvoke r1.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getFirstChild()>();

        if $r3 == null goto label3;

        return 0;

     label3:
        return 1;
    }

    public boolean equalsTreePartial(groovyjarjarantlr.collections.AST)
    {
        groovyjarjarantlr.collections.AST r0, $r2, $r3, $r4;
        groovyjarjarantlr.BaseAST r1;
        boolean $z0, $z1;

        r1 := @this: groovyjarjarantlr.BaseAST;

        r0 := @parameter0: groovyjarjarantlr.collections.AST;

        if r0 != null goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r1.<groovyjarjarantlr.BaseAST: boolean equals(groovyjarjarantlr.collections.AST)>(r0);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r1.<groovyjarjarantlr.BaseAST: groovyjarjarantlr.collections.AST getFirstChild()>();

        if $r2 == null goto label3;

        $r3 = virtualinvoke r1.<groovyjarjarantlr.BaseAST: groovyjarjarantlr.collections.AST getFirstChild()>();

        $r4 = interfaceinvoke r0.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getFirstChild()>();

        $z1 = interfaceinvoke $r3.<groovyjarjarantlr.collections.AST: boolean equalsListPartial(groovyjarjarantlr.collections.AST)>($r4);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public groovyjarjarantlr.collections.ASTEnumeration findAll(groovyjarjarantlr.collections.AST)
    {
        groovyjarjarantlr.collections.impl.ASTEnumerator $r3;
        groovyjarjarantlr.collections.AST r1;
        groovyjarjarantlr.collections.impl.Vector $r0;
        groovyjarjarantlr.BaseAST r2;

        r2 := @this: groovyjarjarantlr.BaseAST;

        r1 := @parameter0: groovyjarjarantlr.collections.AST;

        $r0 = new groovyjarjarantlr.collections.impl.Vector;

        specialinvoke $r0.<groovyjarjarantlr.collections.impl.Vector: void <init>(int)>(10);

        if r1 != null goto label1;

        return null;

     label1:
        specialinvoke r2.<groovyjarjarantlr.BaseAST: void doWorkForFindAll(groovyjarjarantlr.collections.impl.Vector,groovyjarjarantlr.collections.AST,boolean)>($r0, r1, 0);

        $r3 = new groovyjarjarantlr.collections.impl.ASTEnumerator;

        specialinvoke $r3.<groovyjarjarantlr.collections.impl.ASTEnumerator: void <init>(groovyjarjarantlr.collections.impl.Vector)>($r0);

        return $r3;
    }

    public groovyjarjarantlr.collections.ASTEnumeration findAllPartial(groovyjarjarantlr.collections.AST)
    {
        groovyjarjarantlr.collections.impl.ASTEnumerator $r3;
        groovyjarjarantlr.collections.AST r1;
        groovyjarjarantlr.collections.impl.Vector $r0;
        groovyjarjarantlr.BaseAST r2;

        r2 := @this: groovyjarjarantlr.BaseAST;

        r1 := @parameter0: groovyjarjarantlr.collections.AST;

        $r0 = new groovyjarjarantlr.collections.impl.Vector;

        specialinvoke $r0.<groovyjarjarantlr.collections.impl.Vector: void <init>(int)>(10);

        if r1 != null goto label1;

        return null;

     label1:
        specialinvoke r2.<groovyjarjarantlr.BaseAST: void doWorkForFindAll(groovyjarjarantlr.collections.impl.Vector,groovyjarjarantlr.collections.AST,boolean)>($r0, r1, 1);

        $r3 = new groovyjarjarantlr.collections.impl.ASTEnumerator;

        specialinvoke $r3.<groovyjarjarantlr.collections.impl.ASTEnumerator: void <init>(groovyjarjarantlr.collections.impl.Vector)>($r0);

        return $r3;
    }

    public groovyjarjarantlr.collections.AST getFirstChild()
    {
        groovyjarjarantlr.BaseAST r0, $r1;

        r0 := @this: groovyjarjarantlr.BaseAST;

        $r1 = r0.<groovyjarjarantlr.BaseAST: groovyjarjarantlr.BaseAST down>;

        return $r1;
    }

    public groovyjarjarantlr.collections.AST getNextSibling()
    {
        groovyjarjarantlr.BaseAST r0, $r1;

        r0 := @this: groovyjarjarantlr.BaseAST;

        $r1 = r0.<groovyjarjarantlr.BaseAST: groovyjarjarantlr.BaseAST right>;

        return $r1;
    }

    public java.lang.String getText()
    {
        groovyjarjarantlr.BaseAST r0;

        r0 := @this: groovyjarjarantlr.BaseAST;

        return "";
    }

    public int getType()
    {
        groovyjarjarantlr.BaseAST r0;

        r0 := @this: groovyjarjarantlr.BaseAST;

        return 0;
    }

    public int getLine()
    {
        groovyjarjarantlr.BaseAST r0;

        r0 := @this: groovyjarjarantlr.BaseAST;

        return 0;
    }

    public int getColumn()
    {
        groovyjarjarantlr.BaseAST r0;

        r0 := @this: groovyjarjarantlr.BaseAST;

        return 0;
    }

    public abstract void initialize(int, java.lang.String);

    public abstract void initialize(groovyjarjarantlr.collections.AST);

    public abstract void initialize(groovyjarjarantlr.Token);

    public void removeChildren()
    {
        groovyjarjarantlr.BaseAST r0;

        r0 := @this: groovyjarjarantlr.BaseAST;

        r0.<groovyjarjarantlr.BaseAST: groovyjarjarantlr.BaseAST down> = null;

        return;
    }

    public void setFirstChild(groovyjarjarantlr.collections.AST)
    {
        groovyjarjarantlr.collections.AST r1;
        groovyjarjarantlr.BaseAST r0, $r2;

        r0 := @this: groovyjarjarantlr.BaseAST;

        r1 := @parameter0: groovyjarjarantlr.collections.AST;

        $r2 = (groovyjarjarantlr.BaseAST) r1;

        r0.<groovyjarjarantlr.BaseAST: groovyjarjarantlr.BaseAST down> = $r2;

        return;
    }

    public void setNextSibling(groovyjarjarantlr.collections.AST)
    {
        groovyjarjarantlr.collections.AST r1;
        groovyjarjarantlr.BaseAST r0, $r2;

        r0 := @this: groovyjarjarantlr.BaseAST;

        r1 := @parameter0: groovyjarjarantlr.collections.AST;

        $r2 = (groovyjarjarantlr.BaseAST) r1;

        r0.<groovyjarjarantlr.BaseAST: groovyjarjarantlr.BaseAST right> = $r2;

        return;
    }

    public void setText(java.lang.String)
    {
        java.lang.String r1;
        groovyjarjarantlr.BaseAST r0;

        r0 := @this: groovyjarjarantlr.BaseAST;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void setType(int)
    {
        int i0;
        groovyjarjarantlr.BaseAST r0;

        r0 := @this: groovyjarjarantlr.BaseAST;

        i0 := @parameter0: int;

        return;
    }

    public static void setVerboseStringConversion(boolean, java.lang.String[])
    {
        java.lang.String[] r0;
        boolean z0;

        z0 := @parameter0: boolean;

        r0 := @parameter1: java.lang.String[];

        <groovyjarjarantlr.BaseAST: boolean verboseStringConversion> = z0;

        <groovyjarjarantlr.BaseAST: java.lang.String[] tokenNames> = r0;

        return;
    }

    public static java.lang.String[] getTokenNames()
    {
        java.lang.String[] $r0;

        $r0 = <groovyjarjarantlr.BaseAST: java.lang.String[] tokenNames>;

        return $r0;
    }

    public java.lang.String toString()
    {
        java.lang.String[] $r4, $r7, $r11;
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2;
        java.lang.String $r2, $r3, $r5, $r6, $r8, $r9, $r10, $r12, $r13, $r14;
        boolean $z0, $z1, $z2;
        groovyjarjarantlr.BaseAST r1;

        r1 := @this: groovyjarjarantlr.BaseAST;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $z0 = <groovyjarjarantlr.BaseAST: boolean verboseStringConversion>;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r1.<groovyjarjarantlr.BaseAST: java.lang.String getText()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke r1.<groovyjarjarantlr.BaseAST: java.lang.String getText()>();

        $r4 = <groovyjarjarantlr.BaseAST: java.lang.String[] tokenNames>;

        $i0 = virtualinvoke r1.<groovyjarjarantlr.BaseAST: int getType()>();

        $r5 = $r4[$i0];

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        if $z1 != 0 goto label1;

        $r6 = virtualinvoke r1.<groovyjarjarantlr.BaseAST: java.lang.String getText()>();

        $r7 = <groovyjarjarantlr.BaseAST: java.lang.String[] tokenNames>;

        $i1 = virtualinvoke r1.<groovyjarjarantlr.BaseAST: int getType()>();

        $r8 = $r7[$i1];

        $r9 = staticinvoke <groovyjarjarantlr.StringUtils: java.lang.String stripFrontBack(java.lang.String,java.lang.String,java.lang.String)>($r8, "\"", "\"");

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r9);

        if $z2 != 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        $r10 = virtualinvoke r1.<groovyjarjarantlr.BaseAST: java.lang.String getText()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",<");

        $r11 = <groovyjarjarantlr.BaseAST: java.lang.String[] tokenNames>;

        $i2 = virtualinvoke r1.<groovyjarjarantlr.BaseAST: int getType()>();

        $r12 = $r11[$i2];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">]");

        $r13 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r13;

     label1:
        $r14 = virtualinvoke r1.<groovyjarjarantlr.BaseAST: java.lang.String getText()>();

        return $r14;
    }

    public java.lang.String toStringList()
    {
        java.lang.StringBuffer $r2, $r3, $r4, $r6, $r11, $r12, $r16, $r17, $r18, $r19, $r20, $r21, $r25, $r26, $r27, $r28;
        java.lang.String $r5, $r7, $r15, $r24, r29, r30;
        groovyjarjarantlr.BaseAST r0, $r14, $r23;
        groovyjarjarantlr.collections.AST $r1, $r8, $r9, $r10, $r13, $r22;

        r0 := @this: groovyjarjarantlr.BaseAST;

        r29 = "";

        $r1 = interfaceinvoke r0.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getFirstChild()>();

        if $r1 == null goto label1;

        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r29);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r5 = virtualinvoke r0.<groovyjarjarantlr.BaseAST: java.lang.String toString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        r30 = $r7;

        $r8 = interfaceinvoke r0.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getFirstChild()>();

        if $r8 == null goto label2;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r22 = interfaceinvoke r0.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getFirstChild()>();

        $r23 = (groovyjarjarantlr.BaseAST) $r22;

        $r24 = virtualinvoke $r23.<groovyjarjarantlr.BaseAST: java.lang.String toStringList()>();

        $r25 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        r30 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $r9 = interfaceinvoke r0.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getFirstChild()>();

        if $r9 == null goto label3;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r30);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" )");

        r30 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        $r10 = interfaceinvoke r0.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getNextSibling()>();

        if $r10 == null goto label4;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r30);

        $r13 = interfaceinvoke r0.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getNextSibling()>();

        $r14 = (groovyjarjarantlr.BaseAST) $r13;

        $r15 = virtualinvoke $r14.<groovyjarjarantlr.BaseAST: java.lang.String toStringList()>();

        $r16 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        r30 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        return r30;
    }

    public java.lang.String toStringTree()
    {
        java.lang.StringBuffer $r2, $r3, $r4, $r6, $r10, $r11, $r12, $r13, $r14, $r18, $r19, $r20, $r21;
        java.lang.String $r5, $r7, $r17, r22, r23;
        groovyjarjarantlr.BaseAST r0, $r16;
        groovyjarjarantlr.collections.AST $r1, $r8, $r9, $r15;

        r0 := @this: groovyjarjarantlr.BaseAST;

        r22 = "";

        $r1 = interfaceinvoke r0.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getFirstChild()>();

        if $r1 == null goto label1;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r22);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r5 = virtualinvoke r0.<groovyjarjarantlr.BaseAST: java.lang.String toString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        r23 = $r7;

        $r8 = interfaceinvoke r0.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getFirstChild()>();

        if $r8 == null goto label2;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r15 = interfaceinvoke r0.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getFirstChild()>();

        $r16 = (groovyjarjarantlr.BaseAST) $r15;

        $r17 = virtualinvoke $r16.<groovyjarjarantlr.BaseAST: java.lang.String toStringList()>();

        $r18 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        r23 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $r9 = interfaceinvoke r0.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getFirstChild()>();

        if $r9 == null goto label3;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r23);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" )");

        r23 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        return r23;
    }

    public static java.lang.String decode(java.lang.String)
    {
        java.lang.StringBuffer $r3;
        int $i0, $i2, $i4, $i6, $i8, $i10, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33;
        java.lang.String r1, $r4;
        char $c1, $c3, $c5, $c7, $c9, $c11;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        i12 = 0;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i12 >= $i0 goto label9;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i12);

        $i13 = (int) $c1;

        if $i13 != 38 goto label7;

        $i2 = i12 + 1;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i2);

        $i4 = i12 + 2;

        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i4);

        $i6 = i12 + 3;

        $c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i6);

        $i8 = i12 + 4;

        $c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i8);

        $i10 = i12 + 5;

        $c11 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i10);

        $i14 = (int) $c3;

        if $i14 != 97 goto label2;

        $i15 = (int) $c5;

        if $i15 != 109 goto label2;

        $i16 = (int) $c7;

        if $i16 != 112 goto label2;

        $i17 = (int) $c9;

        if $i17 != 59 goto label2;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&");

        i12 = i12 + 5;

        goto label8;

     label2:
        $i18 = (int) $c3;

        if $i18 != 108 goto label3;

        $i19 = (int) $c5;

        if $i19 != 116 goto label3;

        $i20 = (int) $c7;

        if $i20 != 59 goto label3;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<");

        i12 = i12 + 4;

        goto label8;

     label3:
        $i21 = (int) $c3;

        if $i21 != 103 goto label4;

        $i22 = (int) $c5;

        if $i22 != 116 goto label4;

        $i23 = (int) $c7;

        if $i23 != 59 goto label4;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        i12 = i12 + 4;

        goto label8;

     label4:
        $i24 = (int) $c3;

        if $i24 != 113 goto label5;

        $i25 = (int) $c5;

        if $i25 != 117 goto label5;

        $i26 = (int) $c7;

        if $i26 != 111 goto label5;

        $i27 = (int) $c9;

        if $i27 != 116 goto label5;

        $i28 = (int) $c11;

        if $i28 != 59 goto label5;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        i12 = i12 + 6;

        goto label8;

     label5:
        $i29 = (int) $c3;

        if $i29 != 97 goto label6;

        $i30 = (int) $c5;

        if $i30 != 112 goto label6;

        $i31 = (int) $c7;

        if $i31 != 111 goto label6;

        $i32 = (int) $c9;

        if $i32 != 115 goto label6;

        $i33 = (int) $c11;

        if $i33 != 59 goto label6;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        i12 = i12 + 6;

        goto label8;

     label6:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&");

        goto label8;

     label7:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

     label8:
        i12 = i12 + 1;

        goto label1;

     label9:
        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(java.lang.StringBuffer)>($r3);

        return $r4;
    }

    public static java.lang.String encode(java.lang.String)
    {
        java.lang.StringBuffer $r3;
        int $i0, i2, $i3;
        char $c1;
        java.lang.String r1, $r4;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        i2 = 0;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i2 >= $i0 goto label9;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        $i3 = (int) $c1;

        lookupswitch($i3)
        {
            case 34: goto label5;
            case 38: goto label2;
            case 39: goto label6;
            case 60: goto label3;
            case 62: goto label4;
            default: goto label7;
        };

     label2:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&amp;");

        goto label8;

     label3:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&lt;");

        goto label8;

     label4:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&gt;");

        goto label8;

     label5:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&quot;");

        goto label8;

     label6:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&apos;");

        goto label8;

     label7:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

     label8:
        i2 = i2 + 1;

        goto label1;

     label9:
        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(java.lang.StringBuffer)>($r3);

        return $r4;
    }

    public void xmlSerializeNode(java.io.Writer) throws java.io.IOException
    {
        java.lang.StringBuffer $r0, $r1, $r5, $r6, $r8, $r9, $r12, $r13, $r14, $r15;
        int $i0;
        java.lang.String $r4, $r7, $r10, $r11, $r16, $r18;
        groovyjarjarantlr.BaseAST r2;
        java.io.Writer r17;
        java.lang.Class $r3;

        r2 := @this: groovyjarjarantlr.BaseAST;

        r17 := @parameter0: java.io.Writer;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(100);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<");

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("text=\"");

        $r10 = virtualinvoke r2.<groovyjarjarantlr.BaseAST: java.lang.String getText()>();

        $r11 = staticinvoke <groovyjarjarantlr.BaseAST: java.lang.String encode(java.lang.String)>($r10);

        $r12 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" type=\"");

        $i0 = virtualinvoke r2.<groovyjarjarantlr.BaseAST: int getType()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"/>");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r17.<java.io.Writer: void write(java.lang.String)>($r18);

        return;
    }

    public void xmlSerializeRootOpen(java.io.Writer) throws java.io.IOException
    {
        java.lang.StringBuffer $r0, $r1, $r5, $r6, $r8, $r9, $r12, $r13, $r14, $r15;
        int $i0;
        java.lang.String $r4, $r7, $r10, $r11, $r16, $r18;
        groovyjarjarantlr.BaseAST r2;
        java.io.Writer r17;
        java.lang.Class $r3;

        r2 := @this: groovyjarjarantlr.BaseAST;

        r17 := @parameter0: java.io.Writer;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(100);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<");

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("text=\"");

        $r10 = virtualinvoke r2.<groovyjarjarantlr.BaseAST: java.lang.String getText()>();

        $r11 = staticinvoke <groovyjarjarantlr.BaseAST: java.lang.String encode(java.lang.String)>($r10);

        $r12 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" type=\"");

        $i0 = virtualinvoke r2.<groovyjarjarantlr.BaseAST: int getType()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\">\n");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r17.<java.io.Writer: void write(java.lang.String)>($r18);

        return;
    }

    public void xmlSerializeRootClose(java.io.Writer) throws java.io.IOException
    {
        groovyjarjarantlr.BaseAST r3;
        java.lang.StringBuffer $r1, $r2, $r6, $r7;
        java.io.Writer r0;
        java.lang.Class $r4;
        java.lang.String $r5, $r8;

        r3 := @this: groovyjarjarantlr.BaseAST;

        r0 := @parameter0: java.io.Writer;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</");

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">\n");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>($r8);

        return;
    }

    public void xmlSerialize(java.io.Writer) throws java.io.IOException
    {
        groovyjarjarantlr.BaseAST r0, $r3, $r5, $r6, $r7;
        java.io.Writer r2;
        groovyjarjarantlr.collections.AST $r1, $r4, r8;

        r0 := @this: groovyjarjarantlr.BaseAST;

        r2 := @parameter0: java.io.Writer;

        r8 = r0;

     label1:
        if r8 == null goto label4;

        $r1 = interfaceinvoke r8.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getFirstChild()>();

        if $r1 != null goto label2;

        $r7 = (groovyjarjarantlr.BaseAST) r8;

        virtualinvoke $r7.<groovyjarjarantlr.BaseAST: void xmlSerializeNode(java.io.Writer)>(r2);

        goto label3;

     label2:
        $r3 = (groovyjarjarantlr.BaseAST) r8;

        virtualinvoke $r3.<groovyjarjarantlr.BaseAST: void xmlSerializeRootOpen(java.io.Writer)>(r2);

        $r4 = interfaceinvoke r8.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getFirstChild()>();

        $r5 = (groovyjarjarantlr.BaseAST) $r4;

        virtualinvoke $r5.<groovyjarjarantlr.BaseAST: void xmlSerialize(java.io.Writer)>(r2);

        $r6 = (groovyjarjarantlr.BaseAST) r8;

        virtualinvoke $r6.<groovyjarjarantlr.BaseAST: void xmlSerializeRootClose(java.io.Writer)>(r2);

     label3:
        r8 = interfaceinvoke r8.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getNextSibling()>();

        goto label1;

     label4:
        return;
    }

    static void <clinit>()
    {
        <groovyjarjarantlr.BaseAST: boolean verboseStringConversion> = 0;

        <groovyjarjarantlr.BaseAST: java.lang.String[] tokenNames> = null;

        return;
    }
}
