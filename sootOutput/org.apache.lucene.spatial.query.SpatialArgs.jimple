public class org.apache.lucene.spatial.query.SpatialArgs extends java.lang.Object
{
    public static final double DEFAULT_DISTERRPCT;
    private org.apache.lucene.spatial.query.SpatialOperation operation;
    private com.spatial4j.core.shape.Shape shape;
    private java.lang.Double distErrPct;
    private java.lang.Double distErr;

    public void <init>(org.apache.lucene.spatial.query.SpatialOperation, com.spatial4j.core.shape.Shape)
    {
        com.spatial4j.core.shape.Shape r3;
        org.apache.lucene.spatial.query.SpatialArgs r0;
        org.apache.lucene.spatial.query.SpatialOperation r1;
        java.lang.NullPointerException $r2;

        r0 := @this: org.apache.lucene.spatial.query.SpatialArgs;

        r1 := @parameter0: org.apache.lucene.spatial.query.SpatialOperation;

        r3 := @parameter1: com.spatial4j.core.shape.Shape;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        if r3 != null goto label2;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("operation and shape are required");

        throw $r2;

     label2:
        r0.<org.apache.lucene.spatial.query.SpatialArgs: org.apache.lucene.spatial.query.SpatialOperation operation> = r1;

        r0.<org.apache.lucene.spatial.query.SpatialArgs: com.spatial4j.core.shape.Shape shape> = r3;

        return;
    }

    public static double calcDistanceFromErrPct(com.spatial4j.core.shape.Shape, double, com.spatial4j.core.context.SpatialContext)
    {
        com.spatial4j.core.distance.DistanceCalculator $r10;
        com.spatial4j.core.shape.Shape r6;
        byte $b0, $b1, $b2, $b3;
        com.spatial4j.core.shape.Point $r8;
        int $i4, $i5, $i6;
        java.lang.String $r5;
        double d0, $d1, $d2, $d3, $d4, $d5;
        boolean $z0;
        com.spatial4j.core.shape.Rectangle $r7;
        com.spatial4j.core.context.SpatialContext r9;
        java.lang.IllegalArgumentException $r12;
        java.lang.StringBuilder $r2, $r3, $r4, $r11;

        r6 := @parameter0: com.spatial4j.core.shape.Shape;

        d0 := @parameter1: double;

        r9 := @parameter2: com.spatial4j.core.context.SpatialContext;

        $b0 = d0 cmpg 0.0;

        $i4 = (int) $b0;

        if $i4 < 0 goto label1;

        $b1 = d0 cmpl 0.5;

        $i5 = (int) $b1;

        if $i5 <= 0 goto label2;

     label1:
        $r12 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("distErrPct ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be between [0 to 0.5]");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r12;

     label2:
        $b2 = d0 cmpl 0.0;

        if $b2 == 0 goto label3;

        $z0 = r6 instanceof com.spatial4j.core.shape.Point;

        if $z0 == 0 goto label4;

     label3:
        return 0.0;

     label4:
        $r7 = interfaceinvoke r6.<com.spatial4j.core.shape.Shape: com.spatial4j.core.shape.Rectangle getBoundingBox()>();

        $r8 = interfaceinvoke $r7.<com.spatial4j.core.shape.Rectangle: com.spatial4j.core.shape.Point getCenter()>();

        $d1 = interfaceinvoke $r8.<com.spatial4j.core.shape.Point: double getY()>();

        $b3 = $d1 cmpl 0.0;

        $i6 = (int) $b3;

        if $i6 < 0 goto label5;

        $d5 = interfaceinvoke $r7.<com.spatial4j.core.shape.Rectangle: double getMaxY()>();

        goto label6;

     label5:
        $d5 = interfaceinvoke $r7.<com.spatial4j.core.shape.Rectangle: double getMinY()>();

     label6:
        $r10 = virtualinvoke r9.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.distance.DistanceCalculator getDistCalc()>();

        $d2 = interfaceinvoke $r7.<com.spatial4j.core.shape.Rectangle: double getMaxX()>();

        $d3 = interfaceinvoke $r10.<com.spatial4j.core.distance.DistanceCalculator: double distance(com.spatial4j.core.shape.Point,double,double)>($r8, $d2, $d5);

        $d4 = $d3 * d0;

        return $d4;
    }

    public double resolveDistErr(com.spatial4j.core.context.SpatialContext, double)
    {
        java.lang.Double $r1, $r2, $r5, $r6;
        com.spatial4j.core.context.SpatialContext r3;
        com.spatial4j.core.shape.Shape $r4;
        org.apache.lucene.spatial.query.SpatialArgs r0;
        double d0, $d1, $d2, $d3;

        r0 := @this: org.apache.lucene.spatial.query.SpatialArgs;

        r3 := @parameter0: com.spatial4j.core.context.SpatialContext;

        d0 := @parameter1: double;

        $r1 = r0.<org.apache.lucene.spatial.query.SpatialArgs: java.lang.Double distErr>;

        if $r1 == null goto label1;

        $r6 = r0.<org.apache.lucene.spatial.query.SpatialArgs: java.lang.Double distErr>;

        $d2 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        return $d2;

     label1:
        $r2 = r0.<org.apache.lucene.spatial.query.SpatialArgs: java.lang.Double distErrPct>;

        if $r2 == null goto label2;

        $r5 = r0.<org.apache.lucene.spatial.query.SpatialArgs: java.lang.Double distErrPct>;

        $d3 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();

        goto label3;

     label2:
        $d3 = d0;

     label3:
        $r4 = r0.<org.apache.lucene.spatial.query.SpatialArgs: com.spatial4j.core.shape.Shape shape>;

        $d1 = staticinvoke <org.apache.lucene.spatial.query.SpatialArgs: double calcDistanceFromErrPct(com.spatial4j.core.shape.Shape,double,com.spatial4j.core.context.SpatialContext)>($r4, $d3, r3);

        return $d1;
    }

    public void validate() throws java.lang.IllegalArgumentException
    {
        java.lang.Double $r2, $r3;
        java.lang.IllegalArgumentException $r4, $r6;
        com.spatial4j.core.shape.Shape $r5;
        org.apache.lucene.spatial.query.SpatialArgs r0;
        java.lang.StringBuilder $r7, $r9, $r10;
        java.lang.String $r11;
        org.apache.lucene.spatial.query.SpatialOperation $r1, $r8;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.spatial.query.SpatialArgs;

        $r1 = r0.<org.apache.lucene.spatial.query.SpatialArgs: org.apache.lucene.spatial.query.SpatialOperation operation>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.spatial.query.SpatialOperation: boolean isTargetNeedsArea()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.lucene.spatial.query.SpatialArgs: com.spatial4j.core.shape.Shape shape>;

        $z1 = interfaceinvoke $r5.<com.spatial4j.core.shape.Shape: boolean hasArea()>();

        if $z1 != 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = r0.<org.apache.lucene.spatial.query.SpatialArgs: org.apache.lucene.spatial.query.SpatialOperation operation>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" only supports geometry with area");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label1:
        $r2 = r0.<org.apache.lucene.spatial.query.SpatialArgs: java.lang.Double distErr>;

        if $r2 == null goto label2;

        $r3 = r0.<org.apache.lucene.spatial.query.SpatialArgs: java.lang.Double distErrPct>;

        if $r3 == null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only distErr or distErrPct can be specified.");

        throw $r4;

     label2:
        return;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        org.apache.lucene.spatial.query.SpatialArgs r0;

        r0 := @this: org.apache.lucene.spatial.query.SpatialArgs;

        $r1 = staticinvoke <org.apache.lucene.spatial.query.SpatialArgsParser: java.lang.String writeSpatialArgs(org.apache.lucene.spatial.query.SpatialArgs)>(r0);

        return $r1;
    }

    public org.apache.lucene.spatial.query.SpatialOperation getOperation()
    {
        org.apache.lucene.spatial.query.SpatialArgs r0;
        org.apache.lucene.spatial.query.SpatialOperation $r1;

        r0 := @this: org.apache.lucene.spatial.query.SpatialArgs;

        $r1 = r0.<org.apache.lucene.spatial.query.SpatialArgs: org.apache.lucene.spatial.query.SpatialOperation operation>;

        return $r1;
    }

    public void setOperation(org.apache.lucene.spatial.query.SpatialOperation)
    {
        org.apache.lucene.spatial.query.SpatialArgs r0;
        org.apache.lucene.spatial.query.SpatialOperation r1;

        r0 := @this: org.apache.lucene.spatial.query.SpatialArgs;

        r1 := @parameter0: org.apache.lucene.spatial.query.SpatialOperation;

        r0.<org.apache.lucene.spatial.query.SpatialArgs: org.apache.lucene.spatial.query.SpatialOperation operation> = r1;

        return;
    }

    public com.spatial4j.core.shape.Shape getShape()
    {
        com.spatial4j.core.shape.Shape $r1;
        org.apache.lucene.spatial.query.SpatialArgs r0;

        r0 := @this: org.apache.lucene.spatial.query.SpatialArgs;

        $r1 = r0.<org.apache.lucene.spatial.query.SpatialArgs: com.spatial4j.core.shape.Shape shape>;

        return $r1;
    }

    public void setShape(com.spatial4j.core.shape.Shape)
    {
        com.spatial4j.core.shape.Shape r1;
        org.apache.lucene.spatial.query.SpatialArgs r0;

        r0 := @this: org.apache.lucene.spatial.query.SpatialArgs;

        r1 := @parameter0: com.spatial4j.core.shape.Shape;

        r0.<org.apache.lucene.spatial.query.SpatialArgs: com.spatial4j.core.shape.Shape shape> = r1;

        return;
    }

    public java.lang.Double getDistErrPct()
    {
        org.apache.lucene.spatial.query.SpatialArgs r0;
        java.lang.Double $r1;

        r0 := @this: org.apache.lucene.spatial.query.SpatialArgs;

        $r1 = r0.<org.apache.lucene.spatial.query.SpatialArgs: java.lang.Double distErrPct>;

        return $r1;
    }

    public void setDistErrPct(java.lang.Double)
    {
        org.apache.lucene.spatial.query.SpatialArgs r1;
        java.lang.Double r0;

        r1 := @this: org.apache.lucene.spatial.query.SpatialArgs;

        r0 := @parameter0: java.lang.Double;

        if r0 == null goto label1;

        r1.<org.apache.lucene.spatial.query.SpatialArgs: java.lang.Double distErrPct> = r0;

     label1:
        return;
    }

    public java.lang.Double getDistErr()
    {
        org.apache.lucene.spatial.query.SpatialArgs r0;
        java.lang.Double $r1;

        r0 := @this: org.apache.lucene.spatial.query.SpatialArgs;

        $r1 = r0.<org.apache.lucene.spatial.query.SpatialArgs: java.lang.Double distErr>;

        return $r1;
    }

    public void setDistErr(java.lang.Double)
    {
        org.apache.lucene.spatial.query.SpatialArgs r0;
        java.lang.Double r1;

        r0 := @this: org.apache.lucene.spatial.query.SpatialArgs;

        r1 := @parameter0: java.lang.Double;

        r0.<org.apache.lucene.spatial.query.SpatialArgs: java.lang.Double distErr> = r1;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.spatial.query.SpatialArgs: double DEFAULT_DISTERRPCT> = 0.025;

        return;
    }
}
