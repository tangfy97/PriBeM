public class net.oauth.http.HttpMessageDecoder extends net.oauth.http.HttpResponseMessage
{
    public static final java.lang.String GZIP;
    public static final java.lang.String DEFLATE;
    public static final java.lang.String ACCEPTED;
    private final net.oauth.http.HttpResponseMessage in;
    static final boolean $assertionsDisabled;

    public static net.oauth.http.HttpResponseMessage decode(net.oauth.http.HttpResponseMessage) throws java.io.IOException
    {
        java.lang.String $r1;
        net.oauth.http.HttpResponseMessage r0;
        net.oauth.http.HttpMessageDecoder $r2;

        r0 := @parameter0: net.oauth.http.HttpResponseMessage;

        if r0 == null goto label1;

        $r1 = staticinvoke <net.oauth.http.HttpMessageDecoder: java.lang.String getEncoding(net.oauth.http.HttpMessage)>(r0);

        if $r1 == null goto label1;

        $r2 = new net.oauth.http.HttpMessageDecoder;

        specialinvoke $r2.<net.oauth.http.HttpMessageDecoder: void <init>(net.oauth.http.HttpResponseMessage,java.lang.String)>(r0, $r1);

        return $r2;

     label1:
        return r0;
    }

    private static java.lang.String getEncoding(net.oauth.http.HttpMessage)
    {
        net.oauth.http.HttpMessage r0;
        java.lang.String $r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: net.oauth.http.HttpMessage;

        $r1 = virtualinvoke r0.<net.oauth.http.HttpMessage: java.lang.String getHeader(java.lang.String)>("Content-Encoding");

        if $r1 != null goto label1;

        goto label4;

     label1:
        $r2 = "gzip";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 != 0 goto label2;

        $r3 = "x-gzip";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z1 == 0 goto label3;

     label2:
        return "gzip";

     label3:
        $r4 = "deflate";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z2 == 0 goto label4;

        return "deflate";

     label4:
        return null;
    }

    private void <init>(net.oauth.http.HttpResponseMessage, java.lang.String) throws java.io.IOException
    {
        java.util.zip.GZIPInputStream $r10;
        net.oauth.http.HttpResponseMessage r1;
        java.net.URL $r2;
        java.util.zip.InflaterInputStream $r9;
        java.lang.AssertionError $r8;
        java.util.List $r4, $r5;
        java.lang.String $r3, r7;
        net.oauth.http.HttpMessageDecoder r0;
        java.io.InputStream $r6, r11;
        boolean $z0;

        r0 := @this: net.oauth.http.HttpMessageDecoder;

        r1 := @parameter0: net.oauth.http.HttpResponseMessage;

        r7 := @parameter1: java.lang.String;

        $r3 = r1.<net.oauth.http.HttpResponseMessage: java.lang.String method>;

        $r2 = r1.<net.oauth.http.HttpResponseMessage: java.net.URL url>;

        specialinvoke r0.<net.oauth.http.HttpResponseMessage: void <init>(java.lang.String,java.net.URL)>($r3, $r2);

        $r5 = r0.<net.oauth.http.HttpMessageDecoder: java.util.List headers>;

        $r4 = r1.<net.oauth.http.HttpResponseMessage: java.util.List headers>;

        interfaceinvoke $r5.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        virtualinvoke r0.<net.oauth.http.HttpMessageDecoder: java.lang.String removeHeaders(java.lang.String)>("Content-Encoding");

        virtualinvoke r0.<net.oauth.http.HttpMessageDecoder: java.lang.String removeHeaders(java.lang.String)>("Content-Length");

        $r6 = virtualinvoke r1.<net.oauth.http.HttpResponseMessage: java.io.InputStream getBody()>();

        r11 = $r6;

        if $r6 == null goto label3;

        if r7 != "gzip" goto label1;

        $r10 = new java.util.zip.GZIPInputStream;

        specialinvoke $r10.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r6);

        r11 = $r10;

        goto label3;

     label1:
        if r7 != "deflate" goto label2;

        $r9 = new java.util.zip.InflaterInputStream;

        specialinvoke $r9.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>($r6);

        r11 = $r9;

        goto label3;

     label2:
        $z0 = <net.oauth.http.HttpMessageDecoder: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label3:
        r0.<net.oauth.http.HttpMessageDecoder: java.io.InputStream body> = r11;

        r0.<net.oauth.http.HttpMessageDecoder: net.oauth.http.HttpResponseMessage in> = r1;

        return;
    }

    public void dump(java.util.Map) throws java.io.IOException
    {
        net.oauth.http.HttpMessageDecoder r0;
        net.oauth.http.HttpResponseMessage $r2;
        java.util.Map r1;

        r0 := @this: net.oauth.http.HttpMessageDecoder;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<net.oauth.http.HttpMessageDecoder: net.oauth.http.HttpResponseMessage in>;

        virtualinvoke $r2.<net.oauth.http.HttpResponseMessage: void dump(java.util.Map)>(r1);

        return;
    }

    public int getStatusCode() throws java.io.IOException
    {
        int $i0;
        net.oauth.http.HttpMessageDecoder r0;
        net.oauth.http.HttpResponseMessage $r1;

        r0 := @this: net.oauth.http.HttpMessageDecoder;

        $r1 = r0.<net.oauth.http.HttpMessageDecoder: net.oauth.http.HttpResponseMessage in>;

        $i0 = virtualinvoke $r1.<net.oauth.http.HttpResponseMessage: int getStatusCode()>();

        return $i0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <net.oauth.http.HttpMessageDecoder: java.lang.String ACCEPTED> = "gzip,deflate";

        <net.oauth.http.HttpMessageDecoder: java.lang.String DEFLATE> = "deflate";

        <net.oauth.http.HttpMessageDecoder: java.lang.String GZIP> = "gzip";

        $r0 = class "Lnet/oauth/http/HttpMessageDecoder;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.oauth.http.HttpMessageDecoder: boolean $assertionsDisabled> = $z1;

        return;
    }
}
