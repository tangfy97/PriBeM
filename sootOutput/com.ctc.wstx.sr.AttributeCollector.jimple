public abstract class com.ctc.wstx.sr.AttributeCollector extends java.lang.Object
{
    protected static final int LONG_ATTR_LIST_LEN;
    protected static final int EXP_ATTR_COUNT;
    protected static final int XMLID_IX_DISABLED;
    protected static final int XMLID_IX_NONE;
    protected int mAttrCount;
    protected int mNonDefCount;
    protected com.ctc.wstx.util.TextBuilder mValueBuffer;
    protected com.ctc.wstx.util.StringVector mAttrNames;
    protected int mXmlIdAttrIndex;
    protected java.lang.String[] mAttrValues;
    protected int[] mAttrMap;
    protected int mAttrHashSize;
    protected int mAttrSpillEnd;

    protected void <init>(com.ctc.wstx.api.ReaderConfig)
    {
        com.ctc.wstx.sr.AttributeCollector r0;
        byte $b0;
        int $i1;
        com.ctc.wstx.api.ReaderConfig r1;
        boolean $z0;

        r0 := @this: com.ctc.wstx.sr.AttributeCollector;

        r1 := @parameter0: com.ctc.wstx.api.ReaderConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.ctc.wstx.sr.AttributeCollector: com.ctc.wstx.util.TextBuilder mValueBuffer> = null;

        r0.<com.ctc.wstx.sr.AttributeCollector: com.ctc.wstx.util.StringVector mAttrNames> = null;

        r0.<com.ctc.wstx.sr.AttributeCollector: java.lang.String[] mAttrValues> = null;

        r0.<com.ctc.wstx.sr.AttributeCollector: int[] mAttrMap> = null;

        $z0 = virtualinvoke r1.<com.ctc.wstx.api.ReaderConfig: boolean willDoXmlIdTyping()>();

        if $z0 == 0 goto label1;

        $b0 = -1;

        goto label2;

     label1:
        $b0 = -2;

     label2:
        $i1 = (int) $b0;

        r0.<com.ctc.wstx.sr.AttributeCollector: int mXmlIdAttrIndex> = $i1;

        return;
    }

    protected abstract void reset();

    public abstract int getNsCount();

    public abstract java.lang.String getNsPrefix(int);

    public abstract java.lang.String getNsURI(int);

    public final int getCount()
    {
        int $i0;
        com.ctc.wstx.sr.AttributeCollector r0;

        r0 := @this: com.ctc.wstx.sr.AttributeCollector;

        $i0 = r0.<com.ctc.wstx.sr.AttributeCollector: int mAttrCount>;

        return $i0;
    }

    public int getSpecifiedCount()
    {
        int $i0;
        com.ctc.wstx.sr.AttributeCollector r0;

        r0 := @this: com.ctc.wstx.sr.AttributeCollector;

        $i0 = r0.<com.ctc.wstx.sr.AttributeCollector: int mNonDefCount>;

        return $i0;
    }

    public abstract java.lang.String getPrefix(int);

    public abstract java.lang.String getLocalName(int);

    public abstract java.lang.String getURI(int);

    public abstract javax.xml.namespace.QName getQName(int);

    public final java.lang.String getValue(int)
    {
        com.ctc.wstx.sr.AttributeCollector r0;
        java.lang.String[] $r1, $r4, $r5, $r7;
        int i0, $i1, $i2;
        java.lang.String $r3, $r6, r8;
        com.ctc.wstx.util.TextBuilder $r2;

        r0 := @this: com.ctc.wstx.sr.AttributeCollector;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i2 = r0.<com.ctc.wstx.sr.AttributeCollector: int mAttrCount>;

        if i0 < $i2 goto label2;

     label1:
        virtualinvoke r0.<com.ctc.wstx.sr.AttributeCollector: void throwIndex(int)>(i0);

     label2:
        $r7 = r0.<com.ctc.wstx.sr.AttributeCollector: java.lang.String[] mAttrValues>;

        if $r7 != null goto label3;

        $i1 = r0.<com.ctc.wstx.sr.AttributeCollector: int mAttrCount>;

        $r5 = newarray (java.lang.String)[$i1];

        r0.<com.ctc.wstx.sr.AttributeCollector: java.lang.String[] mAttrValues> = $r5;

     label3:
        $r1 = r0.<com.ctc.wstx.sr.AttributeCollector: java.lang.String[] mAttrValues>;

        $r6 = $r1[i0];

        r8 = $r6;

        if $r6 != null goto label4;

        $r2 = r0.<com.ctc.wstx.sr.AttributeCollector: com.ctc.wstx.util.TextBuilder mValueBuffer>;

        $r3 = virtualinvoke $r2.<com.ctc.wstx.util.TextBuilder: java.lang.String getEntry(int)>(i0);

        r8 = $r3;

        $r4 = r0.<com.ctc.wstx.sr.AttributeCollector: java.lang.String[] mAttrValues>;

        $r4[i0] = $r3;

     label4:
        return r8;
    }

    public abstract java.lang.String getValue(java.lang.String, java.lang.String);

    public final boolean isSpecified(int)
    {
        com.ctc.wstx.sr.AttributeCollector r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: com.ctc.wstx.sr.AttributeCollector;

        i0 := @parameter0: int;

        $i1 = r0.<com.ctc.wstx.sr.AttributeCollector: int mNonDefCount>;

        if i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final int getXmlIdAttrIndex()
    {
        int $i0;
        com.ctc.wstx.sr.AttributeCollector r0;

        r0 := @this: com.ctc.wstx.sr.AttributeCollector;

        $i0 = r0.<com.ctc.wstx.sr.AttributeCollector: int mXmlIdAttrIndex>;

        return $i0;
    }

    public abstract com.ctc.wstx.util.TextBuilder getDefaultNsBuilder();

    public abstract com.ctc.wstx.util.TextBuilder getNsBuilder(java.lang.String);

    public abstract com.ctc.wstx.util.TextBuilder getAttrBuilder(java.lang.String, java.lang.String);

    public abstract com.ctc.wstx.sr.ElemAttrs buildAttrOb();

    public final com.ctc.wstx.util.TextBuilder getAttrBuilder()
    {
        com.ctc.wstx.sr.AttributeCollector r0;
        com.ctc.wstx.util.TextBuilder $r1;

        r0 := @this: com.ctc.wstx.sr.AttributeCollector;

        $r1 = r0.<com.ctc.wstx.sr.AttributeCollector: com.ctc.wstx.util.TextBuilder mValueBuffer>;

        return $r1;
    }

    public final void setNormalizedValue(int, java.lang.String)
    {
        com.ctc.wstx.sr.AttributeCollector r0;
        int i0, $i1;
        java.lang.String[] $r1, $r3, $r4;
        java.lang.String r2;

        r0 := @this: com.ctc.wstx.sr.AttributeCollector;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        $r1 = r0.<com.ctc.wstx.sr.AttributeCollector: java.lang.String[] mAttrValues>;

        if $r1 != null goto label1;

        $i1 = r0.<com.ctc.wstx.sr.AttributeCollector: int mAttrCount>;

        $r4 = newarray (java.lang.String)[$i1];

        r0.<com.ctc.wstx.sr.AttributeCollector: java.lang.String[] mAttrValues> = $r4;

     label1:
        $r3 = r0.<com.ctc.wstx.sr.AttributeCollector: java.lang.String[] mAttrValues>;

        $r3[i0] = r2;

        return;
    }

    protected void throwIndex(int)
    {
        com.ctc.wstx.sr.AttributeCollector r5;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r6, $r7;
        int i0, $i1;
        java.lang.String $r8;

        r5 := @this: com.ctc.wstx.sr.AttributeCollector;

        i0 := @parameter0: int;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid index ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; current element has only ");

        $i1 = virtualinvoke r5.<com.ctc.wstx.sr.AttributeCollector: int getCount()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" attributes");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r0;
    }

    public final com.ctc.wstx.util.StringVector getNameList()
    {
        com.ctc.wstx.sr.AttributeCollector r0;
        com.ctc.wstx.util.StringVector $r1;

        r0 := @this: com.ctc.wstx.sr.AttributeCollector;

        $r1 = r0.<com.ctc.wstx.sr.AttributeCollector: com.ctc.wstx.util.StringVector mAttrNames>;

        return $r1;
    }

    public abstract void writeAttribute(int, com.ctc.wstx.sw.XmlWriter) throws java.io.IOException, javax.xml.stream.XMLStreamException;

    protected final void allocBuffers()
    {
        com.ctc.wstx.sr.AttributeCollector r0;
        com.ctc.wstx.util.StringVector $r2, $r3;
        com.ctc.wstx.util.TextBuilder $r1, $r4;

        r0 := @this: com.ctc.wstx.sr.AttributeCollector;

        $r1 = r0.<com.ctc.wstx.sr.AttributeCollector: com.ctc.wstx.util.TextBuilder mValueBuffer>;

        if $r1 != null goto label1;

        $r4 = new com.ctc.wstx.util.TextBuilder;

        specialinvoke $r4.<com.ctc.wstx.util.TextBuilder: void <init>(int)>(16);

        r0.<com.ctc.wstx.sr.AttributeCollector: com.ctc.wstx.util.TextBuilder mValueBuffer> = $r4;

     label1:
        $r2 = r0.<com.ctc.wstx.sr.AttributeCollector: com.ctc.wstx.util.StringVector mAttrNames>;

        if $r2 != null goto label2;

        $r3 = new com.ctc.wstx.util.StringVector;

        specialinvoke $r3.<com.ctc.wstx.util.StringVector: void <init>(int)>(16);

        r0.<com.ctc.wstx.sr.AttributeCollector: com.ctc.wstx.util.StringVector mAttrNames> = $r3;

     label2:
        return;
    }

    protected static java.lang.String[] resize(java.lang.String[])
    {
        int i0;
        java.lang.String[] r0, r1;

        r0 := @parameter0: java.lang.String[];

        i0 = lengthof r0;

        r1 = newarray (java.lang.String)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, i0);

        return r1;
    }

    protected void throwDupAttr(com.ctc.wstx.sr.InputProblemReporter, int) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.AttributeCollector r3;
        java.lang.StringBuffer $r1, $r2, $r5, $r6;
        com.ctc.wstx.sr.InputProblemReporter r0;
        int i0;
        javax.xml.namespace.QName $r4;
        java.lang.String $r7;

        r3 := @this: com.ctc.wstx.sr.AttributeCollector;

        r0 := @parameter0: com.ctc.wstx.sr.InputProblemReporter;

        i0 := @parameter1: int;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Duplicate attribute \'");

        $r4 = virtualinvoke r3.<com.ctc.wstx.sr.AttributeCollector: javax.xml.namespace.QName getQName(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r0.<com.ctc.wstx.sr.InputProblemReporter: void throwParseError(java.lang.String)>($r7);

        return;
    }

    public static void <clinit>()
    {
        <com.ctc.wstx.sr.AttributeCollector: int XMLID_IX_NONE> = -1;

        <com.ctc.wstx.sr.AttributeCollector: int XMLID_IX_DISABLED> = -2;

        <com.ctc.wstx.sr.AttributeCollector: int EXP_ATTR_COUNT> = 16;

        <com.ctc.wstx.sr.AttributeCollector: int LONG_ATTR_LIST_LEN> = 4;

        return;
    }
}
