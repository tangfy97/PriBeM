public class ucar.nc2.dt.grid.GridDatasetInfo extends java.lang.Object
{
    private ucar.nc2.dt.GridDataset gds;
    private java.lang.String path;

    public void <init>(ucar.nc2.dt.GridDataset, java.lang.String)
    {
        ucar.nc2.dt.GridDataset r1;
        ucar.nc2.dt.grid.GridDatasetInfo r0;
        java.lang.String r2;

        r0 := @this: ucar.nc2.dt.grid.GridDatasetInfo;

        r1 := @parameter0: ucar.nc2.dt.GridDataset;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.dt.grid.GridDatasetInfo: ucar.nc2.dt.GridDataset gds> = r1;

        r0.<ucar.nc2.dt.grid.GridDatasetInfo: java.lang.String path> = r2;

        return;
    }

    public java.lang.String writeXML(org.jdom.Document)
    {
        org.jdom.Document r2;
        ucar.nc2.dt.grid.GridDatasetInfo r4;
        org.jdom.output.Format $r1;
        org.jdom.output.XMLOutputter $r0;
        java.lang.String $r3;

        r4 := @this: ucar.nc2.dt.grid.GridDatasetInfo;

        r2 := @parameter0: org.jdom.Document;

        $r0 = new org.jdom.output.XMLOutputter;

        $r1 = staticinvoke <org.jdom.output.Format: org.jdom.output.Format getPrettyFormat()>();

        specialinvoke $r0.<org.jdom.output.XMLOutputter: void <init>(org.jdom.output.Format)>($r1);

        $r3 = virtualinvoke $r0.<org.jdom.output.XMLOutputter: java.lang.String outputString(org.jdom.Document)>(r2);

        return $r3;
    }

    public void writeXML(org.jdom.Document, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r3;
        org.jdom.Document r2;
        ucar.nc2.dt.grid.GridDatasetInfo r4;
        org.jdom.output.Format $r1;
        org.jdom.output.XMLOutputter $r0;

        r4 := @this: ucar.nc2.dt.grid.GridDatasetInfo;

        r2 := @parameter0: org.jdom.Document;

        r3 := @parameter1: java.io.OutputStream;

        $r0 = new org.jdom.output.XMLOutputter;

        $r1 = staticinvoke <org.jdom.output.Format: org.jdom.output.Format getPrettyFormat()>();

        specialinvoke $r0.<org.jdom.output.XMLOutputter: void <init>(org.jdom.output.Format)>($r1);

        virtualinvoke $r0.<org.jdom.output.XMLOutputter: void output(org.jdom.Document,java.io.OutputStream)>(r2, r3);

        return;
    }

    public org.jdom.Document makeDatasetDescription()
    {
        java.util.Date $r19, $r21;
        ucar.nc2.dataset.CoordinateAxis r38;
        org.jdom.Document $r1;
        boolean $z0, $z1, $z2;
        java.util.List $r7, $r10, $r14;
        ucar.nc2.units.DateFormatter $r22;
        ucar.nc2.dataset.CoordinateTransform r40;
        java.lang.String $r4, $r5, $r25, $r28, $r37;
        java.util.Iterator $r8, $r12, $r15;
        ucar.nc2.dt.GridDataset $r3, $r6, $r9, $r13, $r16, $r18, $r20;
        ucar.unidata.geoloc.LatLonRect $r17;
        ucar.nc2.dt.grid.GridDatasetInfo$GridSetComparator $r11;
        ucar.nc2.dt.grid.GridDatasetInfo r2;
        ucar.nc2.dt.GridDataset$Gridset r39;
        java.lang.Object $r31, $r33, $r35;
        org.jdom.Element $r0, $r23, $r24, $r26, $r27, $r29, $r30, $r32, $r34, $r36, $r41, $r42, $r43, $r44, $r45, $r46, $r47;

        r2 := @this: ucar.nc2.dt.grid.GridDatasetInfo;

        $r0 = new org.jdom.Element;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String)>("gridDataset");

        $r1 = new org.jdom.Document;

        specialinvoke $r1.<org.jdom.Document: void <init>(org.jdom.Element)>($r0);

        $r3 = r2.<ucar.nc2.dt.grid.GridDatasetInfo: ucar.nc2.dt.GridDataset gds>;

        $r4 = interfaceinvoke $r3.<ucar.nc2.dt.GridDataset: java.lang.String getLocationURI()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("location", $r4);

        $r5 = r2.<ucar.nc2.dt.grid.GridDatasetInfo: java.lang.String path>;

        if null == $r5 goto label1;

        $r37 = r2.<ucar.nc2.dt.grid.GridDatasetInfo: java.lang.String path>;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("path", $r37);

     label1:
        $r6 = r2.<ucar.nc2.dt.grid.GridDatasetInfo: ucar.nc2.dt.GridDataset gds>;

        $r7 = specialinvoke r2.<ucar.nc2.dt.grid.GridDatasetInfo: java.util.List getCoordAxes(ucar.nc2.dt.GridDataset)>($r6);

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r35 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r38 = (ucar.nc2.dataset.CoordinateAxis) $r35;

        $r36 = specialinvoke r2.<ucar.nc2.dt.grid.GridDatasetInfo: org.jdom.Element writeAxis(ucar.nc2.dataset.CoordinateAxis)>(r38);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r36);

        goto label2;

     label3:
        $r9 = r2.<ucar.nc2.dt.grid.GridDatasetInfo: ucar.nc2.dt.GridDataset gds>;

        $r10 = interfaceinvoke $r9.<ucar.nc2.dt.GridDataset: java.util.List getGridsets()>();

        $r11 = new ucar.nc2.dt.grid.GridDatasetInfo$GridSetComparator;

        specialinvoke $r11.<ucar.nc2.dt.grid.GridDatasetInfo$GridSetComparator: void <init>(ucar.nc2.dt.grid.GridDatasetInfo,ucar.nc2.dt.grid.GridDatasetInfo$1)>(r2, null);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r10, $r11);

        $r12 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r33 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r39 = (ucar.nc2.dt.GridDataset$Gridset) $r33;

        $r34 = specialinvoke r2.<ucar.nc2.dt.grid.GridDatasetInfo: org.jdom.Element writeGridSet(ucar.nc2.dt.GridDataset$Gridset)>(r39);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r34);

        goto label4;

     label5:
        $r13 = r2.<ucar.nc2.dt.grid.GridDatasetInfo: ucar.nc2.dt.GridDataset gds>;

        $r14 = specialinvoke r2.<ucar.nc2.dt.grid.GridDatasetInfo: java.util.List getCoordTransforms(ucar.nc2.dt.GridDataset)>($r13);

        $r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r31 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r40 = (ucar.nc2.dataset.CoordinateTransform) $r31;

        $r32 = specialinvoke r2.<ucar.nc2.dt.grid.GridDatasetInfo: org.jdom.Element writeCoordTransform(ucar.nc2.dataset.CoordinateTransform)>(r40);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r32);

        goto label6;

     label7:
        $r16 = r2.<ucar.nc2.dt.grid.GridDatasetInfo: ucar.nc2.dt.GridDataset gds>;

        $r17 = interfaceinvoke $r16.<ucar.nc2.dt.GridDataset: ucar.unidata.geoloc.LatLonRect getBoundingBox()>();

        if $r17 == null goto label8;

        $r30 = specialinvoke r2.<ucar.nc2.dt.grid.GridDatasetInfo: org.jdom.Element writeBoundingBox(ucar.unidata.geoloc.LatLonRect)>($r17);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r30);

     label8:
        $r18 = r2.<ucar.nc2.dt.grid.GridDatasetInfo: ucar.nc2.dt.GridDataset gds>;

        $r19 = interfaceinvoke $r18.<ucar.nc2.dt.GridDataset: java.util.Date getStartDate()>();

        $r20 = r2.<ucar.nc2.dt.grid.GridDatasetInfo: ucar.nc2.dt.GridDataset gds>;

        $r21 = interfaceinvoke $r20.<ucar.nc2.dt.GridDataset: java.util.Date getEndDate()>();

        if $r19 == null goto label9;

        if $r21 == null goto label9;

        $r22 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r22.<ucar.nc2.units.DateFormatter: void <init>()>();

        $r23 = new org.jdom.Element;

        specialinvoke $r23.<org.jdom.Element: void <init>(java.lang.String)>("TimeSpan");

        $r24 = new org.jdom.Element;

        specialinvoke $r24.<org.jdom.Element: void <init>(java.lang.String)>("begin");

        $r25 = virtualinvoke $r22.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r19);

        $r26 = virtualinvoke $r24.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r25);

        virtualinvoke $r23.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r26);

        $r27 = new org.jdom.Element;

        specialinvoke $r27.<org.jdom.Element: void <init>(java.lang.String)>("end");

        $r28 = virtualinvoke $r22.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r21);

        $r29 = virtualinvoke $r27.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r28);

        virtualinvoke $r23.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r29);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r23);

     label9:
        $r41 = new org.jdom.Element;

        specialinvoke $r41.<org.jdom.Element: void <init>(java.lang.String)>("AcceptList");

        $r42 = new org.jdom.Element;

        specialinvoke $r42.<org.jdom.Element: void <init>(java.lang.String)>("accept");

        $r43 = virtualinvoke $r42.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("xml");

        virtualinvoke $r41.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r43);

        $r44 = new org.jdom.Element;

        specialinvoke $r44.<org.jdom.Element: void <init>(java.lang.String)>("accept");

        $r45 = virtualinvoke $r44.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("csv");

        virtualinvoke $r41.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r45);

        $r46 = new org.jdom.Element;

        specialinvoke $r46.<org.jdom.Element: void <init>(java.lang.String)>("accept");

        $r47 = virtualinvoke $r46.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("netcdf");

        virtualinvoke $r41.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r47);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r41);

        return $r1;
    }

    public org.jdom.Document makeGridForm()
    {
        java.util.Date $r12, $r14;
        ucar.nc2.dataset.CoordinateAxis $r26, r33;
        org.jdom.Document $r1;
        ucar.nc2.dt.grid.GeoGrid r37;
        ucar.nc2.dataset.CoordinateAxis1D $r27, r34;
        boolean $z0, $z1, z2;
        ucar.nc2.dt.grid.GridDatasetInfo$GridComparator $r8;
        java.util.List $r7;
        ucar.nc2.dt.GridCoordSystem $r25;
        ucar.nc2.units.DateFormatter $r15;
        int i0, $i1;
        java.lang.String $r4, $r5, $r18, $r21, $r32;
        ucar.nc2.dt.GridDataset $r3, $r6, $r9, $r11, $r13;
        ucar.unidata.geoloc.LatLonRect $r10;
        ucar.nc2.dt.grid.GridDatasetInfo r2;
        java.lang.Object $r24;
        org.jdom.Element $r0, $r16, $r17, $r19, $r20, $r22, $r23, $r28, $r29, $r30, $r31, r35, r36, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45;

        r2 := @this: ucar.nc2.dt.grid.GridDatasetInfo;

        $r0 = new org.jdom.Element;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String)>("gridForm");

        $r1 = new org.jdom.Document;

        specialinvoke $r1.<org.jdom.Document: void <init>(org.jdom.Element)>($r0);

        $r3 = r2.<ucar.nc2.dt.grid.GridDatasetInfo: ucar.nc2.dt.GridDataset gds>;

        $r4 = interfaceinvoke $r3.<ucar.nc2.dt.GridDataset: java.lang.String getLocationURI()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("location", $r4);

        $r5 = r2.<ucar.nc2.dt.grid.GridDatasetInfo: java.lang.String path>;

        if null == $r5 goto label01;

        $r32 = r2.<ucar.nc2.dt.grid.GridDatasetInfo: java.lang.String path>;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("path", $r32);

     label01:
        $r6 = r2.<ucar.nc2.dt.grid.GridDatasetInfo: ucar.nc2.dt.GridDataset gds>;

        $r7 = interfaceinvoke $r6.<ucar.nc2.dt.GridDataset: java.util.List getGrids()>();

        $r8 = new ucar.nc2.dt.grid.GridDatasetInfo$GridComparator;

        specialinvoke $r8.<ucar.nc2.dt.grid.GridDatasetInfo$GridComparator: void <init>(ucar.nc2.dt.grid.GridDatasetInfo,ucar.nc2.dt.grid.GridDatasetInfo$1)>(r2, null);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r7, $r8);

        r33 = null;

        r34 = null;

        r35 = null;

        r36 = null;

        i0 = 0;

     label02:
        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        if i0 >= $i1 goto label10;

        $r24 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i0);

        r37 = (ucar.nc2.dt.grid.GeoGrid) $r24;

        $r25 = virtualinvoke r37.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $r26 = interfaceinvoke $r25.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis getTimeAxis()>();

        $r27 = interfaceinvoke $r25.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis1D getVerticalAxis()>();

        if i0 == 0 goto label03;

        $z1 = specialinvoke r2.<ucar.nc2.dt.grid.GridDatasetInfo: boolean compareAxis(ucar.nc2.dataset.CoordinateAxis,ucar.nc2.dataset.CoordinateAxis)>($r26, r33);

        if $z1 != 0 goto label05;

     label03:
        $r28 = new org.jdom.Element;

        specialinvoke $r28.<org.jdom.Element: void <init>(java.lang.String)>("timeSet");

        r35 = $r28;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r28);

        $r29 = specialinvoke r2.<ucar.nc2.dt.grid.GridDatasetInfo: org.jdom.Element writeAxis2(ucar.nc2.dataset.CoordinateAxis,java.lang.String)>($r26, "time");

        if $r29 == null goto label04;

        virtualinvoke $r28.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r29);

     label04:
        r33 = $r26;

        z2 = 1;

        goto label06;

     label05:
        z2 = 0;

     label06:
        if z2 != 0 goto label07;

        $z0 = specialinvoke r2.<ucar.nc2.dt.grid.GridDatasetInfo: boolean compareAxis(ucar.nc2.dataset.CoordinateAxis,ucar.nc2.dataset.CoordinateAxis)>($r27, r34);

        if $z0 != 0 goto label09;

     label07:
        $r30 = new org.jdom.Element;

        specialinvoke $r30.<org.jdom.Element: void <init>(java.lang.String)>("vertSet");

        r36 = $r30;

        virtualinvoke r35.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r30);

        $r31 = specialinvoke r2.<ucar.nc2.dt.grid.GridDatasetInfo: org.jdom.Element writeAxis2(ucar.nc2.dataset.CoordinateAxis,java.lang.String)>($r27, "vert");

        if $r31 == null goto label08;

        virtualinvoke $r30.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r31);

     label08:
        r34 = $r27;

     label09:
        $r38 = specialinvoke r2.<ucar.nc2.dt.grid.GridDatasetInfo: org.jdom.Element writeGrid(ucar.nc2.dt.GridDatatype)>(r37);

        virtualinvoke r36.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r38);

        i0 = i0 + 1;

        goto label02;

     label10:
        $r9 = r2.<ucar.nc2.dt.grid.GridDatasetInfo: ucar.nc2.dt.GridDataset gds>;

        $r10 = interfaceinvoke $r9.<ucar.nc2.dt.GridDataset: ucar.unidata.geoloc.LatLonRect getBoundingBox()>();

        if $r10 == null goto label11;

        $r23 = specialinvoke r2.<ucar.nc2.dt.grid.GridDatasetInfo: org.jdom.Element writeBoundingBox(ucar.unidata.geoloc.LatLonRect)>($r10);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r23);

     label11:
        $r11 = r2.<ucar.nc2.dt.grid.GridDatasetInfo: ucar.nc2.dt.GridDataset gds>;

        $r12 = interfaceinvoke $r11.<ucar.nc2.dt.GridDataset: java.util.Date getStartDate()>();

        $r13 = r2.<ucar.nc2.dt.grid.GridDatasetInfo: ucar.nc2.dt.GridDataset gds>;

        $r14 = interfaceinvoke $r13.<ucar.nc2.dt.GridDataset: java.util.Date getEndDate()>();

        if $r12 == null goto label12;

        if $r14 == null goto label12;

        $r15 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r15.<ucar.nc2.units.DateFormatter: void <init>()>();

        $r16 = new org.jdom.Element;

        specialinvoke $r16.<org.jdom.Element: void <init>(java.lang.String)>("TimeSpan");

        $r17 = new org.jdom.Element;

        specialinvoke $r17.<org.jdom.Element: void <init>(java.lang.String)>("begin");

        $r18 = virtualinvoke $r15.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r12);

        $r19 = virtualinvoke $r17.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r18);

        virtualinvoke $r16.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r19);

        $r20 = new org.jdom.Element;

        specialinvoke $r20.<org.jdom.Element: void <init>(java.lang.String)>("end");

        $r21 = virtualinvoke $r15.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r14);

        $r22 = virtualinvoke $r20.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r21);

        virtualinvoke $r16.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r22);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r16);

     label12:
        $r39 = new org.jdom.Element;

        specialinvoke $r39.<org.jdom.Element: void <init>(java.lang.String)>("AcceptList");

        $r40 = new org.jdom.Element;

        specialinvoke $r40.<org.jdom.Element: void <init>(java.lang.String)>("accept");

        $r41 = virtualinvoke $r40.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("xml");

        virtualinvoke $r39.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r41);

        $r42 = new org.jdom.Element;

        specialinvoke $r42.<org.jdom.Element: void <init>(java.lang.String)>("accept");

        $r43 = virtualinvoke $r42.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("csv");

        virtualinvoke $r39.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r43);

        $r44 = new org.jdom.Element;

        specialinvoke $r44.<org.jdom.Element: void <init>(java.lang.String)>("accept");

        $r45 = virtualinvoke $r44.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("netcdf");

        virtualinvoke $r39.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r45);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r39);

        return $r1;
    }

    private org.jdom.Element writeAxis2(ucar.nc2.dataset.CoordinateAxis, java.lang.String)
    {
        long $l0;
        ucar.nc2.dataset.CoordinateAxis r0;
        int[] $r5;
        ucar.nc2.constants.AxisType $r9;
        java.lang.String r2, $r3, $r6, $r8, $r13, $r17;
        boolean $z0;
        java.util.Iterator $r11;
        ucar.ma2.DataType $r7;
        java.util.List $r10;
        ucar.nc2.dt.grid.GridDatasetInfo r4;
        ucar.nc2.Attribute r15;
        java.lang.Object $r14;
        org.jdom.Element $r1, $r12, $r16;

        r4 := @this: ucar.nc2.dt.grid.GridDatasetInfo;

        r0 := @parameter0: ucar.nc2.dataset.CoordinateAxis;

        r2 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new org.jdom.Element;

        specialinvoke $r1.<org.jdom.Element: void <init>(java.lang.String)>(r2);

        $r3 = virtualinvoke r0.<ucar.nc2.dataset.CoordinateAxis: java.lang.String getName()>();

        virtualinvoke $r1.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("name", $r3);

        $r5 = virtualinvoke r0.<ucar.nc2.dataset.CoordinateAxis: int[] getShape()>();

        $r6 = specialinvoke r4.<ucar.nc2.dt.grid.GridDatasetInfo: java.lang.String getShapeString(int[])>($r5);

        virtualinvoke $r1.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("shape", $r6);

        $r7 = virtualinvoke r0.<ucar.nc2.dataset.CoordinateAxis: ucar.ma2.DataType getDataType()>();

        $r8 = virtualinvoke $r7.<ucar.ma2.DataType: java.lang.String toString()>();

        virtualinvoke $r1.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("type", $r8);

        $r9 = virtualinvoke r0.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        if null == $r9 goto label2;

        $r17 = virtualinvoke $r9.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        virtualinvoke $r1.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("axisType", $r17);

     label2:
        $r10 = virtualinvoke r0.<ucar.nc2.dataset.CoordinateAxis: java.util.List getAttributes()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r14 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r15 = (ucar.nc2.Attribute) $r14;

        $r16 = staticinvoke <ucar.nc2.ncml.NcMLWriter: org.jdom.Element writeAttribute(ucar.nc2.Attribute,java.lang.String,org.jdom.Namespace)>(r15, "attribute", null);

        virtualinvoke $r1.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r16);

        goto label3;

     label4:
        $r12 = staticinvoke <ucar.nc2.ncml.NcMLWriter: org.jdom.Element writeValues(ucar.nc2.dataset.VariableEnhanced,org.jdom.Namespace,boolean)>(r0, null, 0);

        $l0 = virtualinvoke r0.<ucar.nc2.dataset.CoordinateAxis: long getSize()>();

        $r13 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        virtualinvoke $r12.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("npts", $r13);

        virtualinvoke $r1.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r12);

        return $r1;
    }

    private boolean compareAxis(ucar.nc2.dataset.CoordinateAxis, ucar.nc2.dataset.CoordinateAxis)
    {
        ucar.nc2.dataset.CoordinateAxis r0, r1;
        ucar.nc2.dt.grid.GridDatasetInfo r2;
        boolean $z0;

        r2 := @this: ucar.nc2.dt.grid.GridDatasetInfo;

        r0 := @parameter0: ucar.nc2.dataset.CoordinateAxis;

        r1 := @parameter1: ucar.nc2.dataset.CoordinateAxis;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r0 != null goto label2;

        return 0;

     label2:
        if r1 != null goto label3;

        return 0;

     label3:
        $z0 = virtualinvoke r0.<ucar.nc2.dataset.CoordinateAxis: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    private java.util.List getCoordAxes(ucar.nc2.dt.GridDataset)
    {
        java.lang.Object[] $r5;
        java.util.HashSet $r0;
        ucar.nc2.dataset.CoordinateAxis r15;
        int $i0;
        ucar.nc2.dataset.CoordinateAxis[] $r4, $r6, $r7;
        boolean $z0, $z1;
        java.util.Iterator $r3, $r13;
        ucar.nc2.dt.GridDataset r1;
        java.util.List $r2, $r8, $r12;
        ucar.nc2.dt.grid.GridDatasetInfo r16;
        ucar.nc2.dt.GridDataset$Gridset r10;
        ucar.nc2.dt.GridCoordSystem $r11;
        java.lang.Object $r9, $r14;

        r16 := @this: ucar.nc2.dt.grid.GridDatasetInfo;

        r1 := @parameter0: ucar.nc2.dt.GridDataset;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r2 = interfaceinvoke r1.<ucar.nc2.dt.GridDataset: java.util.List getGridsets()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r10 = (ucar.nc2.dt.GridDataset$Gridset) $r9;

        $r11 = interfaceinvoke r10.<ucar.nc2.dt.GridDataset$Gridset: ucar.nc2.dt.GridCoordSystem getGeoCoordSystem()>();

        $r12 = interfaceinvoke $r11.<ucar.nc2.dt.GridCoordSystem: java.util.List getCoordinateAxes()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r15 = (ucar.nc2.dataset.CoordinateAxis) $r14;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>(r15);

        goto label2;

     label3:
        goto label1;

     label4:
        $i0 = interfaceinvoke $r0.<java.util.Set: int size()>();

        $r4 = newarray (ucar.nc2.dataset.CoordinateAxis)[$i0];

        $r5 = interfaceinvoke $r0.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (ucar.nc2.dataset.CoordinateAxis[]) $r5;

        $r7 = (ucar.nc2.dataset.CoordinateAxis[]) $r6;

        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r8);

        return $r8;
    }

    private java.util.List getCoordTransforms(ucar.nc2.dt.GridDataset)
    {
        java.lang.Object[] $r5;
        java.util.HashSet $r0;
        ucar.nc2.dataset.CoordinateTransform r15;
        int $i0;
        boolean $z0, $z1;
        java.util.Iterator $r3, $r13;
        ucar.nc2.dataset.CoordinateTransform[] $r4, $r6, $r7;
        ucar.nc2.dt.GridDataset r1;
        java.util.List $r2, $r8, $r12;
        ucar.nc2.dt.grid.GridDatasetInfo r16;
        ucar.nc2.dt.GridDataset$Gridset r10;
        ucar.nc2.dt.GridCoordSystem $r11;
        java.lang.Object $r9, $r14;

        r16 := @this: ucar.nc2.dt.grid.GridDatasetInfo;

        r1 := @parameter0: ucar.nc2.dt.GridDataset;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r2 = interfaceinvoke r1.<ucar.nc2.dt.GridDataset: java.util.List getGridsets()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r10 = (ucar.nc2.dt.GridDataset$Gridset) $r9;

        $r11 = interfaceinvoke r10.<ucar.nc2.dt.GridDataset$Gridset: ucar.nc2.dt.GridCoordSystem getGeoCoordSystem()>();

        $r12 = interfaceinvoke $r11.<ucar.nc2.dt.GridCoordSystem: java.util.List getCoordinateTransforms()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r15 = (ucar.nc2.dataset.CoordinateTransform) $r14;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>(r15);

        goto label2;

     label3:
        goto label1;

     label4:
        $i0 = interfaceinvoke $r0.<java.util.Set: int size()>();

        $r4 = newarray (ucar.nc2.dataset.CoordinateTransform)[$i0];

        $r5 = interfaceinvoke $r0.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (ucar.nc2.dataset.CoordinateTransform[]) $r5;

        $r7 = (ucar.nc2.dataset.CoordinateTransform[]) $r6;

        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r8);

        return $r8;
    }

    private org.jdom.Element writeAxis(ucar.nc2.dataset.CoordinateAxis)
    {
        ucar.nc2.dataset.CoordinateAxis r1;
        int[] $r4;
        ucar.nc2.constants.AxisType $r8;
        int $i0;
        java.lang.String $r2, $r5, $r7, $r15;
        boolean $z0;
        java.util.Iterator $r10;
        ucar.ma2.DataType $r6;
        java.util.List $r9;
        ucar.nc2.dt.grid.GridDatasetInfo r3;
        ucar.nc2.Attribute r13;
        java.lang.Object $r12;
        org.jdom.Element $r0, $r11, $r14;

        r3 := @this: ucar.nc2.dt.grid.GridDatasetInfo;

        r1 := @parameter0: ucar.nc2.dataset.CoordinateAxis;

        $r0 = new org.jdom.Element;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String)>("axis");

        $r2 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateAxis: java.lang.String getName()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("name", $r2);

        $r4 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateAxis: int[] getShape()>();

        $r5 = specialinvoke r3.<ucar.nc2.dt.grid.GridDatasetInfo: java.lang.String getShapeString(int[])>($r4);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("shape", $r5);

        $r6 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateAxis: ucar.ma2.DataType getDataType()>();

        $r7 = virtualinvoke $r6.<ucar.ma2.DataType: java.lang.String toString()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("type", $r7);

        $r8 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        if null == $r8 goto label1;

        $r15 = virtualinvoke $r8.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("axisType", $r15);

     label1:
        $r9 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateAxis: java.util.List getAttributes()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r12 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r13 = (ucar.nc2.Attribute) $r12;

        $r14 = staticinvoke <ucar.nc2.ncml.NcMLWriter: org.jdom.Element writeAttribute(ucar.nc2.Attribute,java.lang.String,org.jdom.Namespace)>(r13, "attribute", null);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r14);

        goto label2;

     label3:
        $i0 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateAxis: int getRank()>();

        if $i0 != 1 goto label4;

        $r11 = staticinvoke <ucar.nc2.ncml.NcMLWriter: org.jdom.Element writeValues(ucar.nc2.dataset.VariableEnhanced,org.jdom.Namespace,boolean)>(r1, null, 1);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r11);

     label4:
        return $r0;
    }

    private java.lang.String getShapeString(int[])
    {
        ucar.nc2.dt.grid.GridDatasetInfo r3;
        int[] r1;
        int $i0, $i1, i2;
        java.lang.StringBuilder $r0;
        java.lang.String $r2;

        r3 := @this: ucar.nc2.dt.grid.GridDatasetInfo;

        r1 := @parameter0: int[];

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        i2 = 0;

     label1:
        $i0 = lengthof r1;

        if i2 >= $i0 goto label3;

        if i2 == 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label2:
        $i1 = r1[i2];

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        i2 = i2 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private org.jdom.Element writeBoundingBox(ucar.unidata.geoloc.LatLonRect)
    {
        java.lang.String $r5, $r8, $r11, $r14;
        double $d0, $d1, $d2, $d3;
        ucar.unidata.geoloc.LatLonRect r1;
        ucar.nc2.dt.grid.GridDatasetInfo r16;
        ucar.unidata.geoloc.LatLonPointImpl $r2, $r3;
        org.jdom.Element $r0, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r15;

        r16 := @this: ucar.nc2.dt.grid.GridDatasetInfo;

        r1 := @parameter0: ucar.unidata.geoloc.LatLonRect;

        $r0 = new org.jdom.Element;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String)>("LatLonBox");

        $r2 = virtualinvoke r1.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getLowerLeftPoint()>();

        $r3 = virtualinvoke r1.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getUpperRightPoint()>();

        $r4 = new org.jdom.Element;

        specialinvoke $r4.<org.jdom.Element: void <init>(java.lang.String)>("west");

        $d0 = interfaceinvoke $r2.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $r5 = staticinvoke <ucar.unidata.util.Format: java.lang.String dfrac(double,int)>($d0, 4);

        $r6 = virtualinvoke $r4.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r5);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r6);

        $r7 = new org.jdom.Element;

        specialinvoke $r7.<org.jdom.Element: void <init>(java.lang.String)>("east");

        $d1 = interfaceinvoke $r3.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $r8 = staticinvoke <ucar.unidata.util.Format: java.lang.String dfrac(double,int)>($d1, 4);

        $r9 = virtualinvoke $r7.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r8);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r9);

        $r10 = new org.jdom.Element;

        specialinvoke $r10.<org.jdom.Element: void <init>(java.lang.String)>("south");

        $d2 = interfaceinvoke $r2.<ucar.unidata.geoloc.LatLonPoint: double getLatitude()>();

        $r11 = staticinvoke <ucar.unidata.util.Format: java.lang.String dfrac(double,int)>($d2, 4);

        $r12 = virtualinvoke $r10.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r11);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r12);

        $r13 = new org.jdom.Element;

        specialinvoke $r13.<org.jdom.Element: void <init>(java.lang.String)>("north");

        $d3 = interfaceinvoke $r3.<ucar.unidata.geoloc.LatLonPoint: double getLatitude()>();

        $r14 = staticinvoke <ucar.unidata.util.Format: java.lang.String dfrac(double,int)>($d3, 4);

        $r15 = virtualinvoke $r13.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r14);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r15);

        return $r0;
    }

    private org.jdom.Element writeGridSet(ucar.nc2.dt.GridDataset$Gridset)
    {
        ucar.nc2.dt.GridDatatype r21;
        ucar.nc2.dataset.CoordinateAxis r19;
        ucar.nc2.dataset.CoordinateTransform r20;
        java.lang.String $r3, $r15, $r18;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r5, $r7, $r9;
        java.util.List $r4, $r6, $r8;
        ucar.nc2.dt.grid.GridDatasetInfo r11;
        ucar.nc2.dt.GridDataset$Gridset r1;
        ucar.nc2.dt.GridCoordSystem $r2;
        java.lang.Object $r10, $r13, $r16;
        org.jdom.Element $r0, $r12, $r14, $r17;

        r11 := @this: ucar.nc2.dt.grid.GridDatasetInfo;

        r1 := @parameter0: ucar.nc2.dt.GridDataset$Gridset;

        $r0 = new org.jdom.Element;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String)>("gridSet");

        $r2 = interfaceinvoke r1.<ucar.nc2.dt.GridDataset$Gridset: ucar.nc2.dt.GridCoordSystem getGeoCoordSystem()>();

        $r3 = interfaceinvoke $r2.<ucar.nc2.dt.GridCoordSystem: java.lang.String getName()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("name", $r3);

        $r4 = interfaceinvoke $r2.<ucar.nc2.dt.GridCoordSystem: java.util.List getCoordinateAxes()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r16 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r19 = (ucar.nc2.dataset.CoordinateAxis) $r16;

        $r17 = new org.jdom.Element;

        specialinvoke $r17.<org.jdom.Element: void <init>(java.lang.String)>("axisRef");

        $r18 = virtualinvoke r19.<ucar.nc2.dataset.CoordinateAxis: java.lang.String getName()>();

        virtualinvoke $r17.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("name", $r18);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r17);

        goto label1;

     label2:
        $r6 = interfaceinvoke $r2.<ucar.nc2.dt.GridCoordSystem: java.util.List getCoordinateTransforms()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r13 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r20 = (ucar.nc2.dataset.CoordinateTransform) $r13;

        $r14 = new org.jdom.Element;

        specialinvoke $r14.<org.jdom.Element: void <init>(java.lang.String)>("coordTransRef");

        $r15 = virtualinvoke r20.<ucar.nc2.dataset.CoordinateTransform: java.lang.String getName()>();

        virtualinvoke $r14.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("name", $r15);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r14);

        goto label3;

     label4:
        $r8 = interfaceinvoke r1.<ucar.nc2.dt.GridDataset$Gridset: java.util.List getGrids()>();

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r8);

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r21 = (ucar.nc2.dt.GridDatatype) $r10;

        $r12 = specialinvoke r11.<ucar.nc2.dt.grid.GridDatasetInfo: org.jdom.Element writeGrid(ucar.nc2.dt.GridDatatype)>(r21);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r12);

        goto label5;

     label6:
        return $r0;
    }

    private org.jdom.Element writeCoordTransform(ucar.nc2.dataset.CoordinateTransform)
    {
        java.util.Iterator $r6;
        ucar.nc2.dataset.TransformType $r3;
        ucar.unidata.util.Parameter r8;
        java.util.List $r5;
        ucar.nc2.dt.grid.GridDatasetInfo r12;
        ucar.nc2.dataset.CoordinateTransform r1;
        java.lang.Object $r7;
        java.lang.String $r2, $r4, $r10, $r11;
        org.jdom.Element $r0, $r9;
        boolean $z0;

        r12 := @this: ucar.nc2.dt.grid.GridDatasetInfo;

        r1 := @parameter0: ucar.nc2.dataset.CoordinateTransform;

        $r0 = new org.jdom.Element;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String)>("coordTransform");

        $r2 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateTransform: java.lang.String getName()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("name", $r2);

        $r3 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateTransform: ucar.nc2.dataset.TransformType getTransformType()>();

        $r4 = virtualinvoke $r3.<ucar.nc2.dataset.TransformType: java.lang.String toString()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("transformType", $r4);

        $r5 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateTransform: java.util.List getParameters()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (ucar.unidata.util.Parameter) $r7;

        $r9 = new org.jdom.Element;

        specialinvoke $r9.<org.jdom.Element: void <init>(java.lang.String)>("parameter");

        $r10 = virtualinvoke r8.<ucar.unidata.util.Parameter: java.lang.String getName()>();

        virtualinvoke $r9.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("name", $r10);

        $r11 = virtualinvoke r8.<ucar.unidata.util.Parameter: java.lang.String getStringValue()>();

        virtualinvoke $r9.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("value", $r11);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r9);

        goto label1;

     label2:
        return $r0;
    }

    private org.jdom.Element writeGrid(ucar.nc2.dt.GridDatatype)
    {
        ucar.nc2.dt.GridDatatype r1;
        int $i0, $i1, $i2, i3;
        java.lang.String $r2, $r11, $r12, $r14;
        boolean $z0, $z1;
        java.util.Iterator $r7;
        ucar.ma2.DataType $r5;
        java.util.List $r4, $r6;
        ucar.nc2.dt.grid.GridDatasetInfo r15;
        ucar.nc2.Attribute r9;
        java.lang.StringBuilder $r3;
        java.lang.Object $r8, $r13;
        ucar.nc2.Dimension r16;
        org.jdom.Element $r0, $r10;

        r15 := @this: ucar.nc2.dt.grid.GridDatasetInfo;

        r1 := @parameter0: ucar.nc2.dt.GridDatatype;

        $r0 = new org.jdom.Element;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String)>("grid");

        $r2 = interfaceinvoke r1.<ucar.nc2.dt.GridDatatype: java.lang.String getName()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("name", $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = interfaceinvoke r1.<ucar.nc2.dt.GridDatatype: java.util.List getDimensions()>();

        i3 = 0;

     label1:
        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i3 >= $i0 goto label5;

        $r13 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i3);

        r16 = (ucar.nc2.Dimension) $r13;

        if i3 <= 0 goto label2;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label2:
        $z0 = virtualinvoke r16.<ucar.nc2.Dimension: boolean isShared()>();

        if $z0 == 0 goto label3;

        $r14 = virtualinvoke r16.<ucar.nc2.Dimension: java.lang.String getName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        goto label4;

     label3:
        $i2 = virtualinvoke r16.<ucar.nc2.Dimension: int getLength()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        $i1 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>();

        if $i1 <= 0 goto label6;

        $r12 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("shape", $r12);

     label6:
        $r5 = interfaceinvoke r1.<ucar.nc2.dt.GridDatatype: ucar.ma2.DataType getDataType()>();

        if $r5 == null goto label7;

        $r11 = virtualinvoke $r5.<ucar.ma2.DataType: java.lang.String toString()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("type", $r11);

     label7:
        $r6 = interfaceinvoke r1.<ucar.nc2.dt.GridDatatype: java.util.List getAttributes()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label8:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label9;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (ucar.nc2.Attribute) $r8;

        $r10 = staticinvoke <ucar.nc2.ncml.NcMLWriter: org.jdom.Element writeAttribute(ucar.nc2.Attribute,java.lang.String,org.jdom.Namespace)>(r9, "attribute", null);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r10);

        goto label8;

     label9:
        return $r0;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.io.PrintStream $r6;
        ucar.nc2.dt.grid.GridDataset $r0;
        java.io.FileOutputStream $r2;
        java.lang.String[] r7;
        org.jdom.Document $r3, $r4;
        ucar.nc2.dt.grid.GridDatasetInfo $r1;
        java.lang.String $r5;

        r7 := @parameter0: java.lang.String[];

        $r0 = staticinvoke <ucar.nc2.dt.grid.GridDataset: ucar.nc2.dt.grid.GridDataset open(java.lang.String)>("C:/data/NAM_CONUS_12km_20060227_1200.grib2");

        $r1 = new ucar.nc2.dt.grid.GridDatasetInfo;

        specialinvoke $r1.<ucar.nc2.dt.grid.GridDatasetInfo: void <init>(ucar.nc2.dt.GridDataset,java.lang.String)>($r0, null);

        $r2 = new java.io.FileOutputStream;

        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.lang.String)>("C:/TEMP/gridInfo.xml");

        $r3 = virtualinvoke $r1.<ucar.nc2.dt.grid.GridDatasetInfo: org.jdom.Document makeGridForm()>();

        virtualinvoke $r1.<ucar.nc2.dt.grid.GridDatasetInfo: void writeXML(org.jdom.Document,java.io.OutputStream)>($r3, $r2);

        virtualinvoke $r2.<java.io.FileOutputStream: void close()>();

        $r4 = virtualinvoke $r1.<ucar.nc2.dt.grid.GridDatasetInfo: org.jdom.Document makeGridForm()>();

        $r5 = virtualinvoke $r1.<ucar.nc2.dt.grid.GridDatasetInfo: java.lang.String writeXML(org.jdom.Document)>($r4);

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;
    }
}
