public class com.hp.hpl.jena.sparql.syntax.ElementService extends com.hp.hpl.jena.sparql.syntax.Element
{
    private final com.hp.hpl.jena.graph.Node serviceNode;
    private final com.hp.hpl.jena.sparql.syntax.Element element;
    private final boolean silent;

    public void <init>(java.lang.String, com.hp.hpl.jena.sparql.syntax.Element)
    {
        com.hp.hpl.jena.sparql.syntax.Element r3;
        com.hp.hpl.jena.sparql.syntax.ElementService r0;
        java.lang.String r1;
        com.hp.hpl.jena.graph.Node $r2;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementService;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: com.hp.hpl.jena.sparql.syntax.Element;

        $r2 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createURI(java.lang.String)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementService: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.syntax.Element,boolean)>($r2, r3, 0);

        return;
    }

    public void <init>(java.lang.String, com.hp.hpl.jena.sparql.syntax.Element, boolean)
    {
        com.hp.hpl.jena.sparql.syntax.Element r3;
        com.hp.hpl.jena.sparql.syntax.ElementService r0;
        java.lang.String r1;
        com.hp.hpl.jena.graph.Node $r2;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementService;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: com.hp.hpl.jena.sparql.syntax.Element;

        z0 := @parameter2: boolean;

        $r2 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createURI(java.lang.String)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementService: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.syntax.Element,boolean)>($r2, r3, z0);

        return;
    }

    public void <init>(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.syntax.Element, boolean)
    {
        com.hp.hpl.jena.sparql.syntax.Element r2;
        com.hp.hpl.jena.sparql.syntax.ElementService r0;
        com.hp.hpl.jena.graph.Node r1;
        boolean $z0, z1, $z2;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementService;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.sparql.syntax.Element;

        z1 := @parameter2: boolean;

        specialinvoke r0.<com.hp.hpl.jena.sparql.syntax.Element: void <init>()>();

        $z0 = virtualinvoke r1.<com.hp.hpl.jena.graph.Node: boolean isURI()>();

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r1.<com.hp.hpl.jena.graph.Node: boolean isVariable()>();

        if $z2 != 0 goto label1;

        staticinvoke <org.apache.jena.atlas.logging.Log: void fatal(java.lang.Object,java.lang.String)>(r0, "Must be a URI (or variable which will be bound) for a service endpoint");

     label1:
        r0.<com.hp.hpl.jena.sparql.syntax.ElementService: com.hp.hpl.jena.graph.Node serviceNode> = r1;

        r0.<com.hp.hpl.jena.sparql.syntax.ElementService: com.hp.hpl.jena.sparql.syntax.Element element> = r2;

        r0.<com.hp.hpl.jena.sparql.syntax.ElementService: boolean silent> = z1;

        return;
    }

    public com.hp.hpl.jena.sparql.syntax.Element getElement()
    {
        com.hp.hpl.jena.sparql.syntax.Element $r1;
        com.hp.hpl.jena.sparql.syntax.ElementService r0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementService;

        $r1 = r0.<com.hp.hpl.jena.sparql.syntax.ElementService: com.hp.hpl.jena.sparql.syntax.Element element>;

        return $r1;
    }

    public com.hp.hpl.jena.graph.Node getServiceNode()
    {
        com.hp.hpl.jena.sparql.syntax.ElementService r0;
        com.hp.hpl.jena.graph.Node $r1;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementService;

        $r1 = r0.<com.hp.hpl.jena.sparql.syntax.ElementService: com.hp.hpl.jena.graph.Node serviceNode>;

        return $r1;
    }

    public boolean getSilent()
    {
        com.hp.hpl.jena.sparql.syntax.ElementService r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementService;

        $z0 = r0.<com.hp.hpl.jena.sparql.syntax.ElementService: boolean silent>;

        return $z0;
    }

    public int hashCode()
    {
        int $i0, $i1, $i2;
        com.hp.hpl.jena.sparql.syntax.Element $r2;
        com.hp.hpl.jena.sparql.syntax.ElementService r0;
        com.hp.hpl.jena.graph.Node $r1;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.ElementService;

        $r1 = r0.<com.hp.hpl.jena.sparql.syntax.ElementService: com.hp.hpl.jena.graph.Node serviceNode>;

        $i0 = virtualinvoke $r1.<com.hp.hpl.jena.graph.Node: int hashCode()>();

        $r2 = r0.<com.hp.hpl.jena.sparql.syntax.ElementService: com.hp.hpl.jena.sparql.syntax.Element element>;

        $i1 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.syntax.Element: int hashCode()>();

        $i2 = $i0 ^ $i1;

        return $i2;
    }

    public boolean equalTo(com.hp.hpl.jena.sparql.syntax.Element, com.hp.hpl.jena.sparql.util.NodeIsomorphismMap)
    {
        com.hp.hpl.jena.sparql.syntax.ElementService r1, r2;
        com.hp.hpl.jena.graph.Node $r3, $r4;
        com.hp.hpl.jena.sparql.util.NodeIsomorphismMap r7;
        com.hp.hpl.jena.sparql.syntax.Element r0, $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4;

        r2 := @this: com.hp.hpl.jena.sparql.syntax.ElementService;

        r0 := @parameter0: com.hp.hpl.jena.sparql.syntax.Element;

        r7 := @parameter1: com.hp.hpl.jena.sparql.util.NodeIsomorphismMap;

        $z0 = r0 instanceof com.hp.hpl.jena.sparql.syntax.ElementService;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (com.hp.hpl.jena.sparql.syntax.ElementService) r0;

        $r4 = r2.<com.hp.hpl.jena.sparql.syntax.ElementService: com.hp.hpl.jena.graph.Node serviceNode>;

        $r3 = r1.<com.hp.hpl.jena.sparql.syntax.ElementService: com.hp.hpl.jena.graph.Node serviceNode>;

        $z1 = virtualinvoke $r4.<com.hp.hpl.jena.graph.Node: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $z2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.syntax.ElementService: boolean getSilent()>();

        $z3 = virtualinvoke r2.<com.hp.hpl.jena.sparql.syntax.ElementService: boolean getSilent()>();

        if $z2 == $z3 goto label3;

        return 0;

     label3:
        $r5 = virtualinvoke r2.<com.hp.hpl.jena.sparql.syntax.ElementService: com.hp.hpl.jena.sparql.syntax.Element getElement()>();

        $r6 = virtualinvoke r1.<com.hp.hpl.jena.sparql.syntax.ElementService: com.hp.hpl.jena.sparql.syntax.Element getElement()>();

        $z4 = virtualinvoke $r5.<com.hp.hpl.jena.sparql.syntax.Element: boolean equalTo(com.hp.hpl.jena.sparql.syntax.Element,com.hp.hpl.jena.sparql.util.NodeIsomorphismMap)>($r6, r7);

        if $z4 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public void visit(com.hp.hpl.jena.sparql.syntax.ElementVisitor)
    {
        com.hp.hpl.jena.sparql.syntax.ElementVisitor r0;
        com.hp.hpl.jena.sparql.syntax.ElementService r1;

        r1 := @this: com.hp.hpl.jena.sparql.syntax.ElementService;

        r0 := @parameter0: com.hp.hpl.jena.sparql.syntax.ElementVisitor;

        interfaceinvoke r0.<com.hp.hpl.jena.sparql.syntax.ElementVisitor: void visit(com.hp.hpl.jena.sparql.syntax.ElementService)>(r1);

        return;
    }
}
