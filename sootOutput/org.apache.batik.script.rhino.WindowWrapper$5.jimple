class org.apache.batik.script.rhino.WindowWrapper$5 extends java.lang.Object implements java.security.PrivilegedAction
{
    static java.lang.Class class$java$lang$String;
    private final org.apache.batik.script.Window val$window;
    private final java.lang.String val$uri;
    private final java.lang.String val$content;
    private final org.apache.batik.script.Window$URLResponseHandler val$fw;
    private final java.lang.Object[] val$args;

    void <init>(org.apache.batik.script.Window, java.lang.String, java.lang.String, org.apache.batik.script.Window$URLResponseHandler, java.lang.Object[])
    {
        java.lang.Object[] r5;
        org.apache.batik.script.rhino.WindowWrapper$5 r0;
        org.apache.batik.script.Window$URLResponseHandler r4;
        java.lang.String r2, r3;
        org.apache.batik.script.Window r1;

        r0 := @this: org.apache.batik.script.rhino.WindowWrapper$5;

        r1 := @parameter0: org.apache.batik.script.Window;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.apache.batik.script.Window$URLResponseHandler;

        r5 := @parameter4: java.lang.Object[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.script.rhino.WindowWrapper$5: org.apache.batik.script.Window val$window> = r1;

        r0.<org.apache.batik.script.rhino.WindowWrapper$5: java.lang.String val$uri> = r2;

        r0.<org.apache.batik.script.rhino.WindowWrapper$5: java.lang.String val$content> = r3;

        r0.<org.apache.batik.script.rhino.WindowWrapper$5: org.apache.batik.script.Window$URLResponseHandler val$fw> = r4;

        r0.<org.apache.batik.script.rhino.WindowWrapper$5: java.lang.Object[] val$args> = r5;

        return;
    }

    public java.lang.Object run()
    {
        java.lang.Object[] $r1;
        org.apache.batik.script.rhino.WindowWrapper$5 r0;
        org.apache.batik.script.Window$URLResponseHandler $r7;
        org.apache.batik.script.Window $r4;
        java.lang.Class $r2, $r10;
        java.lang.Object $r3, $r8;
        java.lang.String $r5, $r6, $r9;

        r0 := @this: org.apache.batik.script.rhino.WindowWrapper$5;

        $r4 = r0.<org.apache.batik.script.rhino.WindowWrapper$5: org.apache.batik.script.Window val$window>;

        $r5 = r0.<org.apache.batik.script.rhino.WindowWrapper$5: java.lang.String val$uri>;

        $r6 = r0.<org.apache.batik.script.rhino.WindowWrapper$5: java.lang.String val$content>;

        $r7 = r0.<org.apache.batik.script.rhino.WindowWrapper$5: org.apache.batik.script.Window$URLResponseHandler val$fw>;

        $r1 = r0.<org.apache.batik.script.rhino.WindowWrapper$5: java.lang.Object[] val$args>;

        $r3 = $r1[3];

        $r2 = <org.apache.batik.script.rhino.WindowWrapper$5: java.lang.Class class$java$lang$String>;

        if $r2 != null goto label1;

        $r10 = staticinvoke <org.apache.batik.script.rhino.WindowWrapper$5: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.batik.script.rhino.WindowWrapper$5: java.lang.Class class$java$lang$String> = $r10;

        goto label2;

     label1:
        $r10 = <org.apache.batik.script.rhino.WindowWrapper$5: java.lang.Class class$java$lang$String>;

     label2:
        $r8 = staticinvoke <org.mozilla.javascript.Context: java.lang.Object jsToJava(java.lang.Object,java.lang.Class)>($r3, $r10);

        $r9 = (java.lang.String) $r8;

        interfaceinvoke $r4.<org.apache.batik.script.Window: void postURL(java.lang.String,java.lang.String,org.apache.batik.script.Window$URLResponseHandler,java.lang.String)>($r5, $r6, $r7, $r9);

        return null;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
