public class javax.servlet.ServletResponseWrapper extends java.lang.Object implements javax.servlet.ServletResponse
{
    private javax.servlet.ServletResponse response;

    public void <init>(javax.servlet.ServletResponse)
    {
        javax.servlet.ServletResponseWrapper r0;
        java.lang.IllegalArgumentException $r2;
        javax.servlet.ServletResponse r1;

        r0 := @this: javax.servlet.ServletResponseWrapper;

        r1 := @parameter0: javax.servlet.ServletResponse;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Response cannot be null");

        throw $r2;

     label1:
        r0.<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse response> = r1;

        return;
    }

    public javax.servlet.ServletResponse getResponse()
    {
        javax.servlet.ServletResponseWrapper r0;
        javax.servlet.ServletResponse $r1;

        r0 := @this: javax.servlet.ServletResponseWrapper;

        $r1 = r0.<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse response>;

        return $r1;
    }

    public void setResponse(javax.servlet.ServletResponse)
    {
        javax.servlet.ServletResponseWrapper r1;
        java.lang.IllegalArgumentException $r2;
        javax.servlet.ServletResponse r0;

        r1 := @this: javax.servlet.ServletResponseWrapper;

        r0 := @parameter0: javax.servlet.ServletResponse;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Response cannot be null");

        throw $r2;

     label1:
        r1.<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse response> = r0;

        return;
    }

    public void setCharacterEncoding(java.lang.String)
    {
        java.lang.String r1;
        javax.servlet.ServletResponseWrapper r0;
        javax.servlet.ServletResponse $r2;

        r0 := @this: javax.servlet.ServletResponseWrapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse response>;

        interfaceinvoke $r2.<javax.servlet.ServletResponse: void setCharacterEncoding(java.lang.String)>(r1);

        return;
    }

    public java.lang.String getCharacterEncoding()
    {
        java.lang.String $r2;
        javax.servlet.ServletResponseWrapper r0;
        javax.servlet.ServletResponse $r1;

        r0 := @this: javax.servlet.ServletResponseWrapper;

        $r1 = r0.<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse response>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletResponse: java.lang.String getCharacterEncoding()>();

        return $r2;
    }

    public javax.servlet.ServletOutputStream getOutputStream() throws java.io.IOException
    {
        javax.servlet.ServletResponseWrapper r0;
        javax.servlet.ServletResponse $r1;
        javax.servlet.ServletOutputStream $r2;

        r0 := @this: javax.servlet.ServletResponseWrapper;

        $r1 = r0.<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse response>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

        return $r2;
    }

    public java.io.PrintWriter getWriter() throws java.io.IOException
    {
        java.io.PrintWriter $r2;
        javax.servlet.ServletResponseWrapper r0;
        javax.servlet.ServletResponse $r1;

        r0 := @this: javax.servlet.ServletResponseWrapper;

        $r1 = r0.<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse response>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletResponse: java.io.PrintWriter getWriter()>();

        return $r2;
    }

    public void setContentLength(int)
    {
        int i0;
        javax.servlet.ServletResponseWrapper r0;
        javax.servlet.ServletResponse $r1;

        r0 := @this: javax.servlet.ServletResponseWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse response>;

        interfaceinvoke $r1.<javax.servlet.ServletResponse: void setContentLength(int)>(i0);

        return;
    }

    public void setContentType(java.lang.String)
    {
        java.lang.String r1;
        javax.servlet.ServletResponseWrapper r0;
        javax.servlet.ServletResponse $r2;

        r0 := @this: javax.servlet.ServletResponseWrapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse response>;

        interfaceinvoke $r2.<javax.servlet.ServletResponse: void setContentType(java.lang.String)>(r1);

        return;
    }

    public java.lang.String getContentType()
    {
        java.lang.String $r2;
        javax.servlet.ServletResponseWrapper r0;
        javax.servlet.ServletResponse $r1;

        r0 := @this: javax.servlet.ServletResponseWrapper;

        $r1 = r0.<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse response>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletResponse: java.lang.String getContentType()>();

        return $r2;
    }

    public void setBufferSize(int)
    {
        int i0;
        javax.servlet.ServletResponseWrapper r0;
        javax.servlet.ServletResponse $r1;

        r0 := @this: javax.servlet.ServletResponseWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse response>;

        interfaceinvoke $r1.<javax.servlet.ServletResponse: void setBufferSize(int)>(i0);

        return;
    }

    public int getBufferSize()
    {
        int $i0;
        javax.servlet.ServletResponseWrapper r0;
        javax.servlet.ServletResponse $r1;

        r0 := @this: javax.servlet.ServletResponseWrapper;

        $r1 = r0.<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse response>;

        $i0 = interfaceinvoke $r1.<javax.servlet.ServletResponse: int getBufferSize()>();

        return $i0;
    }

    public void flushBuffer() throws java.io.IOException
    {
        javax.servlet.ServletResponseWrapper r0;
        javax.servlet.ServletResponse $r1;

        r0 := @this: javax.servlet.ServletResponseWrapper;

        $r1 = r0.<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse response>;

        interfaceinvoke $r1.<javax.servlet.ServletResponse: void flushBuffer()>();

        return;
    }

    public boolean isCommitted()
    {
        javax.servlet.ServletResponseWrapper r0;
        javax.servlet.ServletResponse $r1;
        boolean $z0;

        r0 := @this: javax.servlet.ServletResponseWrapper;

        $r1 = r0.<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse response>;

        $z0 = interfaceinvoke $r1.<javax.servlet.ServletResponse: boolean isCommitted()>();

        return $z0;
    }

    public void reset()
    {
        javax.servlet.ServletResponseWrapper r0;
        javax.servlet.ServletResponse $r1;

        r0 := @this: javax.servlet.ServletResponseWrapper;

        $r1 = r0.<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse response>;

        interfaceinvoke $r1.<javax.servlet.ServletResponse: void reset()>();

        return;
    }

    public void resetBuffer()
    {
        javax.servlet.ServletResponseWrapper r0;
        javax.servlet.ServletResponse $r1;

        r0 := @this: javax.servlet.ServletResponseWrapper;

        $r1 = r0.<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse response>;

        interfaceinvoke $r1.<javax.servlet.ServletResponse: void resetBuffer()>();

        return;
    }

    public void setLocale(java.util.Locale)
    {
        javax.servlet.ServletResponseWrapper r0;
        javax.servlet.ServletResponse $r2;
        java.util.Locale r1;

        r0 := @this: javax.servlet.ServletResponseWrapper;

        r1 := @parameter0: java.util.Locale;

        $r2 = r0.<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse response>;

        interfaceinvoke $r2.<javax.servlet.ServletResponse: void setLocale(java.util.Locale)>(r1);

        return;
    }

    public java.util.Locale getLocale()
    {
        javax.servlet.ServletResponseWrapper r0;
        javax.servlet.ServletResponse $r1;
        java.util.Locale $r2;

        r0 := @this: javax.servlet.ServletResponseWrapper;

        $r1 = r0.<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse response>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletResponse: java.util.Locale getLocale()>();

        return $r2;
    }

    public boolean isWrapperFor(javax.servlet.ServletResponse)
    {
        javax.servlet.ServletResponseWrapper r0, $r5;
        javax.servlet.ServletResponse r1, $r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: javax.servlet.ServletResponseWrapper;

        r1 := @parameter0: javax.servlet.ServletResponse;

        $r2 = r0.<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse response>;

        if $r2 != r1 goto label1;

        return 1;

     label1:
        $r3 = r0.<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse response>;

        $z0 = $r3 instanceof javax.servlet.ServletResponseWrapper;

        if $z0 == 0 goto label2;

        $r4 = r0.<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse response>;

        $r5 = (javax.servlet.ServletResponseWrapper) $r4;

        $z1 = virtualinvoke $r5.<javax.servlet.ServletResponseWrapper: boolean isWrapperFor(javax.servlet.ServletResponse)>(r1);

        return $z1;

     label2:
        return 0;
    }

    public boolean isWrapperFor(java.lang.Class)
    {
        java.lang.String $r11, $r15, $r17;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r8;
        javax.servlet.ServletResponseWrapper r2, $r7;
        javax.servlet.ServletResponse $r3, $r5, $r6;
        java.lang.Class r0, $r1, $r4, $r14;
        java.lang.StringBuilder $r9, $r10, $r12, $r13, $r16;

        r2 := @this: javax.servlet.ServletResponseWrapper;

        r0 := @parameter0: java.lang.Class;

        $r1 = class "Ljavax/servlet/ServletResponse;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 != 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Given class ");

        $r11 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not a subinterface of ");

        $r14 = class "Ljavax/servlet/ServletResponse;";

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r8;

     label1:
        $r3 = r2.<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse response>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r5 = r2.<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse response>;

        $z2 = $r5 instanceof javax.servlet.ServletResponseWrapper;

        if $z2 == 0 goto label3;

        $r6 = r2.<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse response>;

        $r7 = (javax.servlet.ServletResponseWrapper) $r6;

        $z3 = virtualinvoke $r7.<javax.servlet.ServletResponseWrapper: boolean isWrapperFor(java.lang.Class)>(r0);

        return $z3;

     label3:
        return 0;
    }
}
