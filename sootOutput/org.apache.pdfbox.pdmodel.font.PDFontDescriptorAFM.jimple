public class org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM extends org.apache.pdfbox.pdmodel.font.PDFontDescriptor
{
    private org.apache.fontbox.afm.FontMetric afm;

    public void <init>(org.apache.fontbox.afm.FontMetric)
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r0;
        org.apache.fontbox.afm.FontMetric r1;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        r1 := @parameter0: org.apache.fontbox.afm.FontMetric;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM: org.apache.fontbox.afm.FontMetric afm> = r1;

        return;
    }

    public java.lang.String getFontName()
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r0;
        org.apache.fontbox.afm.FontMetric $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        $r1 = r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM: org.apache.fontbox.afm.FontMetric afm>;

        $r2 = virtualinvoke $r1.<org.apache.fontbox.afm.FontMetric: java.lang.String getFontName()>();

        return $r2;
    }

    public void setFontName(java.lang.String)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r1;
        java.lang.String r2;

        r1 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The AFM Font descriptor is immutable");

        throw $r0;
    }

    public java.lang.String getFontFamily()
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r0;
        org.apache.fontbox.afm.FontMetric $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        $r1 = r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM: org.apache.fontbox.afm.FontMetric afm>;

        $r2 = virtualinvoke $r1.<org.apache.fontbox.afm.FontMetric: java.lang.String getFamilyName()>();

        return $r2;
    }

    public void setFontFamily(java.lang.String)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r1;
        java.lang.String r2;

        r1 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The AFM Font descriptor is immutable");

        throw $r0;
    }

    public float getFontWeight()
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r0;
        float f0;
        org.apache.fontbox.afm.FontMetric $r1;
        java.lang.String $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        $r1 = r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM: org.apache.fontbox.afm.FontMetric afm>;

        $r2 = virtualinvoke $r1.<org.apache.fontbox.afm.FontMetric: java.lang.String getWeight()>();

        f0 = 500.0F;

        if $r2 == null goto label1;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("bold");

        if $z1 == 0 goto label1;

        f0 = 900.0F;

        goto label2;

     label1:
        if $r2 == null goto label2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("light");

        if $z0 == 0 goto label2;

        f0 = 100.0F;

     label2:
        return f0;
    }

    public void setFontWeight(float)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r1;
        float f0;

        r1 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        f0 := @parameter0: float;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The AFM Font descriptor is immutable");

        throw $r0;
    }

    public java.lang.String getFontStretch()
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        return null;
    }

    public void setFontStretch(java.lang.String)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r1;
        java.lang.String r2;

        r1 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The AFM Font descriptor is immutable");

        throw $r0;
    }

    public int getFlags()
    {
        byte $b0;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r0;
        org.apache.fontbox.afm.FontMetric $r1;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        $r1 = r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM: org.apache.fontbox.afm.FontMetric afm>;

        $z0 = virtualinvoke $r1.<org.apache.fontbox.afm.FontMetric: boolean isFixedPitch()>();

        if $z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        return $b0;
    }

    public void setFlags(int)
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r1;

        r1 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The AFM Font descriptor is immutable");

        throw $r0;
    }

    public org.apache.pdfbox.pdmodel.common.PDRectangle getFontBoundingBox()
    {
        org.apache.pdfbox.pdmodel.common.PDRectangle $r3, r4;
        org.apache.fontbox.util.BoundingBox $r2;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r0;
        org.apache.fontbox.afm.FontMetric $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        $r1 = r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM: org.apache.fontbox.afm.FontMetric afm>;

        $r2 = virtualinvoke $r1.<org.apache.fontbox.afm.FontMetric: org.apache.fontbox.util.BoundingBox getFontBBox()>();

        r4 = null;

        if $r2 == null goto label1;

        $r3 = new org.apache.pdfbox.pdmodel.common.PDRectangle;

        specialinvoke $r3.<org.apache.pdfbox.pdmodel.common.PDRectangle: void <init>(org.apache.fontbox.util.BoundingBox)>($r2);

        r4 = $r3;

     label1:
        return r4;
    }

    public void setFontBoundingBox(org.apache.pdfbox.pdmodel.common.PDRectangle)
    {
        org.apache.pdfbox.pdmodel.common.PDRectangle r2;
        java.lang.UnsupportedOperationException $r0;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r1;

        r1 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        r2 := @parameter0: org.apache.pdfbox.pdmodel.common.PDRectangle;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The AFM Font descriptor is immutable");

        throw $r0;
    }

    public float getItalicAngle()
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r0;
        float $f0;
        org.apache.fontbox.afm.FontMetric $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        $r1 = r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM: org.apache.fontbox.afm.FontMetric afm>;

        $f0 = virtualinvoke $r1.<org.apache.fontbox.afm.FontMetric: float getItalicAngle()>();

        return $f0;
    }

    public void setItalicAngle(float)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r1;
        float f0;

        r1 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        f0 := @parameter0: float;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The AFM Font descriptor is immutable");

        throw $r0;
    }

    public float getAscent()
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r0;
        float $f0;
        org.apache.fontbox.afm.FontMetric $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        $r1 = r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM: org.apache.fontbox.afm.FontMetric afm>;

        $f0 = virtualinvoke $r1.<org.apache.fontbox.afm.FontMetric: float getAscender()>();

        return $f0;
    }

    public void setAscent(float)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r1;
        float f0;

        r1 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        f0 := @parameter0: float;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The AFM Font descriptor is immutable");

        throw $r0;
    }

    public float getDescent()
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r0;
        float $f0;
        org.apache.fontbox.afm.FontMetric $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        $r1 = r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM: org.apache.fontbox.afm.FontMetric afm>;

        $f0 = virtualinvoke $r1.<org.apache.fontbox.afm.FontMetric: float getDescender()>();

        return $f0;
    }

    public void setDescent(float)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r1;
        float f0;

        r1 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        f0 := @parameter0: float;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The AFM Font descriptor is immutable");

        throw $r0;
    }

    public float getLeading()
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        return 0.0F;
    }

    public void setLeading(float)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r1;
        float f0;

        r1 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        f0 := @parameter0: float;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The AFM Font descriptor is immutable");

        throw $r0;
    }

    public float getCapHeight()
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r0;
        float $f0;
        org.apache.fontbox.afm.FontMetric $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        $r1 = r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM: org.apache.fontbox.afm.FontMetric afm>;

        $f0 = virtualinvoke $r1.<org.apache.fontbox.afm.FontMetric: float getCapHeight()>();

        return $f0;
    }

    public void setCapHeight(float)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r1;
        float f0;

        r1 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        f0 := @parameter0: float;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The AFM Font descriptor is immutable");

        throw $r0;
    }

    public float getXHeight()
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r0;
        float $f0;
        org.apache.fontbox.afm.FontMetric $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        $r1 = r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM: org.apache.fontbox.afm.FontMetric afm>;

        $f0 = virtualinvoke $r1.<org.apache.fontbox.afm.FontMetric: float getXHeight()>();

        return $f0;
    }

    public void setXHeight(float)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r1;
        float f0;

        r1 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        f0 := @parameter0: float;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The AFM Font descriptor is immutable");

        throw $r0;
    }

    public float getStemV()
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        return 0.0F;
    }

    public void setStemV(float)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r1;
        float f0;

        r1 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        f0 := @parameter0: float;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The AFM Font descriptor is immutable");

        throw $r0;
    }

    public float getStemH()
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        return 0.0F;
    }

    public void setStemH(float)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r1;
        float f0;

        r1 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        f0 := @parameter0: float;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The AFM Font descriptor is immutable");

        throw $r0;
    }

    public float getAverageWidth() throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r0;
        float $f0;
        org.apache.fontbox.afm.FontMetric $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        $r1 = r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM: org.apache.fontbox.afm.FontMetric afm>;

        $f0 = virtualinvoke $r1.<org.apache.fontbox.afm.FontMetric: float getAverageCharacterWidth()>();

        return $f0;
    }

    public void setAverageWidth(float)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r1;
        float f0;

        r1 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        f0 := @parameter0: float;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The AFM Font descriptor is immutable");

        throw $r0;
    }

    public float getMaxWidth()
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        return 0.0F;
    }

    public void setMaxWidth(float)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r1;
        float f0;

        r1 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        f0 := @parameter0: float;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The AFM Font descriptor is immutable");

        throw $r0;
    }

    public float getMissingWidth()
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        return 0.0F;
    }

    public void setMissingWidth(float)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r1;
        float f0;

        r1 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        f0 := @parameter0: float;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The AFM Font descriptor is immutable");

        throw $r0;
    }

    public java.lang.String getCharSet()
    {
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r0;
        org.apache.fontbox.afm.FontMetric $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        $r1 = r0.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM: org.apache.fontbox.afm.FontMetric afm>;

        $r2 = virtualinvoke $r1.<org.apache.fontbox.afm.FontMetric: java.lang.String getCharacterSet()>();

        return $r2;
    }

    public void setCharacterSet(java.lang.String)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM r1;
        java.lang.String r2;

        r1 := @this: org.apache.pdfbox.pdmodel.font.PDFontDescriptorAFM;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The AFM Font descriptor is immutable");

        throw $r0;
    }
}
