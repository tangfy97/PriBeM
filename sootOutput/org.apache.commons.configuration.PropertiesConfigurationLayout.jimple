public class org.apache.commons.configuration.PropertiesConfigurationLayout extends java.lang.Object implements org.apache.commons.configuration.event.ConfigurationListener
{
    private static final java.lang.String CR;
    private static final java.lang.String COMMENT_PREFIX;
    private org.apache.commons.configuration.PropertiesConfiguration configuration;
    private java.util.Map layoutData;
    private java.lang.String headerComment;
    private int loadCounter;
    private boolean forceSingleLine;

    public void <init>(org.apache.commons.configuration.PropertiesConfiguration)
    {
        org.apache.commons.configuration.PropertiesConfiguration r1;
        org.apache.commons.configuration.PropertiesConfigurationLayout r0;

        r0 := @this: org.apache.commons.configuration.PropertiesConfigurationLayout;

        r1 := @parameter0: org.apache.commons.configuration.PropertiesConfiguration;

        specialinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: void <init>(org.apache.commons.configuration.PropertiesConfiguration,org.apache.commons.configuration.PropertiesConfigurationLayout)>(r1, null);

        return;
    }

    public void <init>(org.apache.commons.configuration.PropertiesConfiguration, org.apache.commons.configuration.PropertiesConfigurationLayout)
    {
        org.apache.commons.configuration.PropertiesConfigurationLayout r0, r3;
        org.apache.commons.configuration.PropertiesConfiguration r1;
        org.apache.commons.collections.map.LinkedMap $r2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.apache.commons.configuration.PropertiesConfigurationLayout;

        r1 := @parameter0: org.apache.commons.configuration.PropertiesConfiguration;

        r3 := @parameter1: org.apache.commons.configuration.PropertiesConfigurationLayout;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Configuration must not be null!");

        throw $r4;

     label1:
        r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: org.apache.commons.configuration.PropertiesConfiguration configuration> = r1;

        $r2 = new org.apache.commons.collections.map.LinkedMap;

        specialinvoke $r2.<org.apache.commons.collections.map.LinkedMap: void <init>()>();

        r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.util.Map layoutData> = $r2;

        virtualinvoke r1.<org.apache.commons.configuration.PropertiesConfiguration: void addConfigurationListener(org.apache.commons.configuration.event.ConfigurationListener)>(r0);

        if r3 == null goto label2;

        specialinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: void copyFrom(org.apache.commons.configuration.PropertiesConfigurationLayout)>(r3);

     label2:
        return;
    }

    public org.apache.commons.configuration.PropertiesConfiguration getConfiguration()
    {
        org.apache.commons.configuration.PropertiesConfiguration $r1;
        org.apache.commons.configuration.PropertiesConfigurationLayout r0;

        r0 := @this: org.apache.commons.configuration.PropertiesConfigurationLayout;

        $r1 = r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: org.apache.commons.configuration.PropertiesConfiguration configuration>;

        return $r1;
    }

    public java.lang.String getCanonicalComment(java.lang.String, boolean)
    {
        org.apache.commons.configuration.PropertiesConfigurationLayout r0;
        java.lang.String r1, $r2, $r3;
        boolean z0;

        r0 := @this: org.apache.commons.configuration.PropertiesConfigurationLayout;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.lang.String getComment(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = staticinvoke <org.apache.commons.configuration.PropertiesConfigurationLayout: java.lang.String trimComment(java.lang.String,boolean)>($r2, z0);

        return $r3;
    }

    public java.lang.String getComment(java.lang.String)
    {
        org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData $r2;
        org.apache.commons.configuration.PropertiesConfigurationLayout r0;
        java.lang.String r1, $r3;

        r0 := @this: org.apache.commons.configuration.PropertiesConfigurationLayout;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData fetchLayoutData(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData: java.lang.String getComment()>();

        return $r3;
    }

    public void setComment(java.lang.String, java.lang.String)
    {
        org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData $r2;
        org.apache.commons.configuration.PropertiesConfigurationLayout r0;
        java.lang.String r1, r3;

        r0 := @this: org.apache.commons.configuration.PropertiesConfigurationLayout;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData fetchLayoutData(java.lang.String)>(r1);

        virtualinvoke $r2.<org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData: void setComment(java.lang.String)>(r3);

        return;
    }

    public int getBlancLinesBefore(java.lang.String)
    {
        org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData $r2;
        org.apache.commons.configuration.PropertiesConfigurationLayout r0;
        int $i0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.configuration.PropertiesConfigurationLayout;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData fetchLayoutData(java.lang.String)>(r1);

        $i0 = virtualinvoke $r2.<org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData: int getBlancLines()>();

        return $i0;
    }

    public void setBlancLinesBefore(java.lang.String, int)
    {
        org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData $r2;
        org.apache.commons.configuration.PropertiesConfigurationLayout r0;
        int i0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.configuration.PropertiesConfigurationLayout;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = specialinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData fetchLayoutData(java.lang.String)>(r1);

        virtualinvoke $r2.<org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData: void setBlancLines(int)>(i0);

        return;
    }

    public java.lang.String getCanonicalHeaderComment(boolean)
    {
        org.apache.commons.configuration.PropertiesConfigurationLayout r0;
        java.lang.String $r1, $r2, $r3;
        boolean z0;

        r0 := @this: org.apache.commons.configuration.PropertiesConfigurationLayout;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.lang.String getHeaderComment()>();

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.lang.String getHeaderComment()>();

        $r3 = staticinvoke <org.apache.commons.configuration.PropertiesConfigurationLayout: java.lang.String trimComment(java.lang.String,boolean)>($r2, z0);

     label2:
        return $r3;
    }

    public java.lang.String getHeaderComment()
    {
        java.lang.String $r1;
        org.apache.commons.configuration.PropertiesConfigurationLayout r0;

        r0 := @this: org.apache.commons.configuration.PropertiesConfigurationLayout;

        $r1 = r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.lang.String headerComment>;

        return $r1;
    }

    public void setHeaderComment(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.configuration.PropertiesConfigurationLayout r0;

        r0 := @this: org.apache.commons.configuration.PropertiesConfigurationLayout;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.lang.String headerComment> = r1;

        return;
    }

    public boolean isSingleLine(java.lang.String)
    {
        org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData $r2;
        org.apache.commons.configuration.PropertiesConfigurationLayout r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.PropertiesConfigurationLayout;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData fetchLayoutData(java.lang.String)>(r1);

        $z0 = virtualinvoke $r2.<org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData: boolean isSingleLine()>();

        return $z0;
    }

    public void setSingleLine(java.lang.String, boolean)
    {
        org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData $r2;
        org.apache.commons.configuration.PropertiesConfigurationLayout r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.apache.commons.configuration.PropertiesConfigurationLayout;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = specialinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData fetchLayoutData(java.lang.String)>(r1);

        virtualinvoke $r2.<org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData: void setSingleLine(boolean)>(z0);

        return;
    }

    public boolean isForceSingleLine()
    {
        org.apache.commons.configuration.PropertiesConfigurationLayout r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.PropertiesConfigurationLayout;

        $z0 = r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: boolean forceSingleLine>;

        return $z0;
    }

    public void setForceSingleLine(boolean)
    {
        org.apache.commons.configuration.PropertiesConfigurationLayout r0;
        boolean z0;

        r0 := @this: org.apache.commons.configuration.PropertiesConfigurationLayout;

        z0 := @parameter0: boolean;

        r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: boolean forceSingleLine> = z0;

        return;
    }

    public java.util.Set getKeys()
    {
        java.util.Set $r2;
        org.apache.commons.configuration.PropertiesConfigurationLayout r0;
        java.util.Map $r1;

        r0 := @this: org.apache.commons.configuration.PropertiesConfigurationLayout;

        $r1 = r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.util.Map layoutData>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public void load(java.io.Reader) throws org.apache.commons.configuration.ConfigurationException
    {
        org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader $r1;
        java.util.Map $r8;
        boolean $z0, $z1, $z2;
        org.apache.commons.configuration.PropertiesConfigurationLayout r0;
        java.io.Reader r2;
        java.util.List $r10, $r11, $r12, $r13, $r17;
        org.apache.commons.configuration.ConfigurationException $r24;
        java.lang.Throwable $r21;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        java.lang.String $r6, $r7, $r9, $r14, $r15, $r19;
        org.apache.commons.configuration.PropertiesConfiguration $r3, $r4, $r5, $r20, $r22;
        char $c2;
        java.io.IOException $r23;
        org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData $r16;
        java.lang.Object $r18;

        r0 := @this: org.apache.commons.configuration.PropertiesConfigurationLayout;

        r2 := @parameter0: java.io.Reader;

        $i0 = r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: int loadCounter>;

        $i1 = $i0 + 1;

        r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: int loadCounter> = $i1;

        if $i1 != 1 goto label01;

        $r20 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: org.apache.commons.configuration.PropertiesConfiguration getConfiguration()>();

        virtualinvoke $r20.<org.apache.commons.configuration.PropertiesConfiguration: boolean removeConfigurationListener(org.apache.commons.configuration.event.ConfigurationListener)>(r0);

     label01:
        $r1 = new org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader;

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: org.apache.commons.configuration.PropertiesConfiguration getConfiguration()>();

        $c2 = virtualinvoke $r3.<org.apache.commons.configuration.PropertiesConfiguration: char getListDelimiter()>();

        specialinvoke $r1.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: void <init>(java.io.Reader,char)>(r2, $c2);

     label02:
        $z2 = virtualinvoke $r1.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: boolean nextProperty()>();

        if $z2 == 0 goto label07;

        $r5 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: org.apache.commons.configuration.PropertiesConfiguration getConfiguration()>();

        $r6 = virtualinvoke $r1.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: java.lang.String getPropertyName()>();

        $r7 = virtualinvoke $r1.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: java.lang.String getPropertyValue()>();

        $z0 = virtualinvoke $r5.<org.apache.commons.configuration.PropertiesConfiguration: boolean propertyLoaded(java.lang.String,java.lang.String)>($r6, $r7);

        if $z0 == 0 goto label02;

        $r8 = r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.util.Map layoutData>;

        $r9 = virtualinvoke $r1.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: java.lang.String getPropertyName()>();

        $z1 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>($r9);

        i11 = 0;

        $r10 = virtualinvoke $r1.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: java.util.List getCommentLines()>();

        i12 = specialinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: int checkHeaderComment(java.util.List)>($r10);

     label03:
        $r11 = virtualinvoke $r1.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: java.util.List getCommentLines()>();

        $i5 = interfaceinvoke $r11.<java.util.List: int size()>();

        if i12 >= $i5 goto label04;

        $r17 = virtualinvoke $r1.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: java.util.List getCommentLines()>();

        $r18 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>(i12);

        $r19 = (java.lang.String) $r18;

        $i8 = virtualinvoke $r19.<java.lang.String: int length()>();

        if $i8 >= 1 goto label04;

        i12 = i12 + 1;

        i11 = i11 + 1;

        goto label03;

     label04:
        $r12 = virtualinvoke $r1.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: java.util.List getCommentLines()>();

        $r13 = virtualinvoke $r1.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: java.util.List getCommentLines()>();

        $i6 = interfaceinvoke $r13.<java.util.List: int size()>();

        $i7 = $i6 - 1;

        $r14 = specialinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.lang.String extractComment(java.util.List,int,int)>($r12, i12, $i7);

        $r15 = virtualinvoke $r1.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader: java.lang.String getPropertyName()>();

        $r16 = specialinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData fetchLayoutData(java.lang.String)>($r15);

        if $z1 == 0 goto label05;

        virtualinvoke $r16.<org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData: void addComment(java.lang.String)>($r14);

        virtualinvoke $r16.<org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData: void setSingleLine(boolean)>(0);

        goto label06;

     label05:
        virtualinvoke $r16.<org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData: void setComment(java.lang.String)>($r14);

        virtualinvoke $r16.<org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData: void setBlancLines(int)>(i11);

     label06:
        goto label02;

     label07:
        goto label13;

     label08:
        goto label12;

     label09:
        $r23 := @caughtexception;

        $r24 = new org.apache.commons.configuration.ConfigurationException;

        specialinvoke $r24.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.Throwable)>($r23);

        throw $r24;

     label10:
        $r21 := @caughtexception;

        goto label15;

     label11:
        throw $r21;

     label12:
        return;

     label13:
        $i3 = r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: int loadCounter>;

        $i4 = $i3 - 1;

        r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: int loadCounter> = $i4;

        if $i4 != 0 goto label14;

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: org.apache.commons.configuration.PropertiesConfiguration getConfiguration()>();

        virtualinvoke $r4.<org.apache.commons.configuration.PropertiesConfiguration: void addConfigurationListener(org.apache.commons.configuration.event.ConfigurationListener)>(r0);

     label14:
        goto label08;

     label15:
        $i9 = r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: int loadCounter>;

        $i10 = $i9 - 1;

        r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: int loadCounter> = $i10;

        if $i10 != 0 goto label16;

        $r22 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: org.apache.commons.configuration.PropertiesConfiguration getConfiguration()>();

        virtualinvoke $r22.<org.apache.commons.configuration.PropertiesConfiguration: void addConfigurationListener(org.apache.commons.configuration.event.ConfigurationListener)>(r0);

     label16:
        goto label11;

        catch java.io.IOException from label02 to label07 with label09;
        catch java.lang.Throwable from label02 to label08 with label10;
        catch java.lang.Throwable from label09 to label11 with label10;
    }

    public void save(java.io.Writer) throws org.apache.commons.configuration.ConfigurationException
    {
        java.util.Map $r6;
        int $i0, i2;
        java.lang.String $r5, r10, $r12, $r14, $r15;
        org.apache.commons.configuration.PropertiesConfiguration $r1, $r2, $r11, $r13, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.Iterator $r8;
        org.apache.commons.configuration.PropertiesConfigurationLayout r0;
        java.util.Set $r7;
        java.io.IOException $r16;
        char $c1;
        org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter $r3;
        java.io.Writer r4;
        java.lang.Object $r9, $r19;
        org.apache.commons.configuration.ConfigurationException $r17;

        r0 := @this: org.apache.commons.configuration.PropertiesConfigurationLayout;

        r4 := @parameter0: java.io.Writer;

     label01:
        $r1 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: org.apache.commons.configuration.PropertiesConfiguration getConfiguration()>();

        $z0 = virtualinvoke $r1.<org.apache.commons.configuration.PropertiesConfiguration: boolean isDelimiterParsingDisabled()>();

        if $z0 == 0 goto label02;

        $c1 = 0;

        goto label03;

     label02:
        $r2 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: org.apache.commons.configuration.PropertiesConfiguration getConfiguration()>();

        $c1 = virtualinvoke $r2.<org.apache.commons.configuration.PropertiesConfiguration: char getListDelimiter()>();

     label03:
        $r3 = new org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter;

        specialinvoke $r3.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: void <init>(java.io.Writer,char)>(r4, $c1);

        $r5 = r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.lang.String headerComment>;

        if $r5 == null goto label04;

        $r15 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.lang.String getCanonicalHeaderComment(boolean)>(1);

        virtualinvoke $r3.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: void writeln(java.lang.String)>($r15);

        virtualinvoke $r3.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: void writeln(java.lang.String)>(null);

     label04:
        $r6 = r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.util.Map layoutData>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z5 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label13;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r9;

        $r11 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: org.apache.commons.configuration.PropertiesConfiguration getConfiguration()>();

        $z1 = virtualinvoke $r11.<org.apache.commons.configuration.PropertiesConfiguration: boolean containsKey(java.lang.String)>(r10);

        if $z1 == 0 goto label12;

        i2 = 0;

     label06:
        $i0 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: int getBlancLinesBefore(java.lang.String)>(r10);

        if i2 >= $i0 goto label07;

        virtualinvoke $r3.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: void writeln(java.lang.String)>(null);

        i2 = i2 + 1;

        goto label06;

     label07:
        $r12 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.lang.String getComment(java.lang.String)>(r10);

        if $r12 == null goto label08;

        $r14 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.lang.String getCanonicalComment(java.lang.String,boolean)>(r10, 1);

        virtualinvoke $r3.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: void writeln(java.lang.String)>($r14);

     label08:
        $z2 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: boolean isForceSingleLine()>();

        if $z2 != 0 goto label09;

        $z4 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: boolean isSingleLine(java.lang.String)>(r10);

        if $z4 == 0 goto label10;

     label09:
        $r13 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: org.apache.commons.configuration.PropertiesConfiguration getConfiguration()>();

        $z3 = virtualinvoke $r13.<org.apache.commons.configuration.PropertiesConfiguration: boolean isDelimiterParsingDisabled()>();

        if $z3 != 0 goto label10;

        $z6 = 1;

        goto label11;

     label10:
        $z6 = 0;

     label11:
        $r18 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: org.apache.commons.configuration.PropertiesConfiguration getConfiguration()>();

        $r19 = virtualinvoke $r18.<org.apache.commons.configuration.PropertiesConfiguration: java.lang.Object getProperty(java.lang.String)>(r10);

        virtualinvoke $r3.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: void writeProperty(java.lang.String,java.lang.Object,boolean)>(r10, $r19, $z6);

     label12:
        goto label05;

     label13:
        virtualinvoke $r3.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: void flush()>();

     label14:
        goto label16;

     label15:
        $r16 := @caughtexception;

        $r17 = new org.apache.commons.configuration.ConfigurationException;

        specialinvoke $r17.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.Throwable)>($r16);

        throw $r17;

     label16:
        return;

        catch java.io.IOException from label01 to label14 with label15;
    }

    public void configurationChanged(org.apache.commons.configuration.event.ConfigurationEvent)
    {
        org.apache.commons.configuration.event.ConfigurationEvent r0;
        org.apache.commons.configuration.PropertiesConfigurationLayout r1;
        org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData $r8;
        java.util.Map $r3, $r5;
        int $i0, $i1;
        java.lang.String $r2, $r4, $r6, $r7;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.commons.configuration.PropertiesConfigurationLayout;

        r0 := @parameter0: org.apache.commons.configuration.event.ConfigurationEvent;

        $z0 = virtualinvoke r0.<org.apache.commons.configuration.event.ConfigurationEvent: boolean isBeforeUpdate()>();

        if $z0 == 0 goto label1;

        $i1 = virtualinvoke r0.<org.apache.commons.configuration.event.ConfigurationEvent: int getType()>();

        if 20 != $i1 goto label8;

        specialinvoke r1.<org.apache.commons.configuration.PropertiesConfigurationLayout: void clear()>();

        goto label8;

     label1:
        $i0 = virtualinvoke r0.<org.apache.commons.configuration.event.ConfigurationEvent: int getType()>();

        tableswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label5;
            case 3: goto label7;
            case 4: goto label6;
            default: goto label8;
        };

     label2:
        $r5 = r1.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.util.Map layoutData>;

        $r6 = virtualinvoke r0.<org.apache.commons.configuration.event.ConfigurationEvent: java.lang.String getPropertyName()>();

        $z1 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r6);

        $r7 = virtualinvoke r0.<org.apache.commons.configuration.event.ConfigurationEvent: java.lang.String getPropertyName()>();

        $r8 = specialinvoke r1.<org.apache.commons.configuration.PropertiesConfigurationLayout: org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData fetchLayoutData(java.lang.String)>($r7);

        if $z1 != 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        virtualinvoke $r8.<org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData: void setSingleLine(boolean)>($z2);

        goto label8;

     label5:
        $r3 = r1.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.util.Map layoutData>;

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.event.ConfigurationEvent: java.lang.String getPropertyName()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r4);

        goto label8;

     label6:
        specialinvoke r1.<org.apache.commons.configuration.PropertiesConfigurationLayout: void clear()>();

        goto label8;

     label7:
        $r2 = virtualinvoke r0.<org.apache.commons.configuration.event.ConfigurationEvent: java.lang.String getPropertyName()>();

        specialinvoke r1.<org.apache.commons.configuration.PropertiesConfigurationLayout: org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData fetchLayoutData(java.lang.String)>($r2);

     label8:
        return;
    }

    private org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData fetchLayoutData(java.lang.String)
    {
        org.apache.commons.configuration.PropertiesConfigurationLayout r1;
        java.lang.IllegalArgumentException $r6;
        org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData $r4, r7;
        java.util.Map $r2, $r5;
        java.lang.Object $r3;
        java.lang.String r0;

        r1 := @this: org.apache.commons.configuration.PropertiesConfigurationLayout;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Property key must not be null!");

        throw $r6;

     label1:
        $r2 = r1.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.util.Map layoutData>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r7 = (org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData) $r3;

        if r7 != null goto label2;

        $r4 = new org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData;

        specialinvoke $r4.<org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData: void <init>()>();

        r7 = $r4;

        virtualinvoke $r4.<org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData: void setSingleLine(boolean)>(1);

        $r5 = r1.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.util.Map layoutData>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r4);

     label2:
        return r7;
    }

    private void clear()
    {
        org.apache.commons.configuration.PropertiesConfigurationLayout r0;
        java.util.Map $r1;

        r0 := @this: org.apache.commons.configuration.PropertiesConfigurationLayout;

        $r1 = r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.util.Map layoutData>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: void setHeaderComment(java.lang.String)>(null);

        return;
    }

    static boolean isCommentLine(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.commons.configuration.PropertiesConfiguration: boolean isCommentLine(java.lang.String)>(r0);

        return $z0;
    }

    static java.lang.String trimComment(java.lang.String, boolean)
    {
        java.lang.StringBuffer $r0, $r8;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10;
        boolean z0;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r0 = new java.lang.StringBuffer;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>($i0);

        i4 = 0;

     label1:
        $r2 = <org.apache.commons.configuration.PropertiesConfigurationLayout: java.lang.String CR>;

        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String,int)>($r2, i4);

        if $i1 < 0 goto label2;

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i4, $i1);

        $r7 = staticinvoke <org.apache.commons.configuration.PropertiesConfigurationLayout: java.lang.String stripCommentChar(java.lang.String,boolean)>($r6, z0);

        $r8 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = <org.apache.commons.configuration.PropertiesConfigurationLayout: java.lang.String CR>;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r10 = <org.apache.commons.configuration.PropertiesConfigurationLayout: java.lang.String CR>;

        $i3 = virtualinvoke $r10.<java.lang.String: int length()>();

        i4 = $i1 + $i3;

     label2:
        if $i1 >= 0 goto label1;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if i4 >= $i2 goto label3;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i4);

        $r5 = staticinvoke <org.apache.commons.configuration.PropertiesConfigurationLayout: java.lang.String stripCommentChar(java.lang.String,boolean)>($r4, z0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

     label3:
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    static java.lang.String stripCommentChar(java.lang.String, boolean)
    {
        java.lang.StringBuffer $r2, $r3, $r7;
        int $i0, $i2, $i3, $i4, i6, i7, $i8;
        java.lang.String r0, $r4, $r5, $r6;
        boolean $z0, z1, $z2;
        char $c1, $c5;

        r0 := @parameter0: java.lang.String;

        z1 := @parameter1: boolean;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 < 1 goto label1;

        $z0 = staticinvoke <org.apache.commons.configuration.PropertiesConfigurationLayout: boolean isCommentLine(java.lang.String)>(r0);

        if $z0 != z1 goto label2;

     label1:
        return r0;

     label2:
        if z1 != 0 goto label9;

        i6 = 0;

     label3:
        $r5 = "#!";

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $i8 = (int) $c1;

        $i2 = virtualinvoke $r5.<java.lang.String: int indexOf(int)>($i8);

        if $i2 >= 0 goto label4;

        i6 = i6 + 1;

        goto label3;

     label4:
        i7 = i6 + 1;

     label5:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if i7 >= $i3 goto label6;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        $z2 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c5);

        if $z2 == 0 goto label6;

        i7 = i7 + 1;

        goto label5;

     label6:
        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        if i7 >= $i4 goto label7;

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i7);

        goto label8;

     label7:
        $r6 = "";

     label8:
        return $r6;

     label9:
        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("# ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    private java.lang.String extractComment(java.util.List, int, int)
    {
        org.apache.commons.configuration.PropertiesConfigurationLayout r7;
        java.util.List r1;
        java.lang.StringBuffer $r0;
        int i0, i1, i2;
        java.lang.Object $r2, $r6;
        java.lang.String $r3, $r4, $r5;

        r7 := @this: org.apache.commons.configuration.PropertiesConfigurationLayout;

        r1 := @parameter0: java.util.List;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        if i0 >= i1 goto label1;

        return null;

     label1:
        $r0 = new java.lang.StringBuffer;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r3 = (java.lang.String) $r2;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>($r3);

        i2 = i1 + 1;

     label2:
        if i2 > i0 goto label3;

        $r5 = <org.apache.commons.configuration.PropertiesConfigurationLayout: java.lang.String CR>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        i2 = i2 + 1;

        goto label2;

     label3:
        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    private int checkHeaderComment(java.util.List)
    {
        org.apache.commons.configuration.PropertiesConfigurationLayout r0;
        java.util.List r3;
        java.util.Map $r2;
        int $i0, $i1, $i2, $i3, $i4, i5, $i7;
        java.lang.Object $r5;
        java.lang.String $r1, $r4, $r6;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.PropertiesConfigurationLayout;

        r3 := @parameter0: java.util.List;

        $i0 = r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: int loadCounter>;

        if $i0 != 1 goto label3;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.lang.String getHeaderComment()>();

        if $r1 != null goto label3;

        $r2 = r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.util.Map layoutData>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        i5 = $i1 - 1;

     label1:
        if i5 < 0 goto label2;

        $r5 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i5);

        $r6 = (java.lang.String) $r5;

        $i4 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i4 <= 0 goto label2;

        $i7 = (int) -1;

        i5 = i5 + $i7;

        goto label1;

     label2:
        $i2 = i5 - 1;

        $r4 = specialinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.lang.String extractComment(java.util.List,int,int)>(r3, 0, $i2);

        virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: void setHeaderComment(java.lang.String)>($r4);

        $i3 = i5 + 1;

        return $i3;

     label3:
        return 0;
    }

    private void copyFrom(org.apache.commons.configuration.PropertiesConfigurationLayout)
    {
        java.util.Iterator $r2;
        org.apache.commons.configuration.PropertiesConfigurationLayout r0, r8;
        java.util.Set $r1;
        org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData r7;
        java.util.Map $r5, $r9;
        java.lang.Object $r3, $r6, $r10;
        java.lang.String r4;
        boolean $z0;

        r8 := @this: org.apache.commons.configuration.PropertiesConfigurationLayout;

        r0 := @parameter0: org.apache.commons.configuration.PropertiesConfigurationLayout;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.util.Set getKeys()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

        $r5 = r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.util.Map layoutData>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r7 = (org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData) $r6;

        $r9 = r8.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.util.Map layoutData>;

        $r10 = virtualinvoke r7.<org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData: java.lang.Object clone()>();

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r10);

        goto label1;

     label2:
        return;
    }

    static java.lang.String access$000()
    {
        java.lang.String $r0;

        $r0 = <org.apache.commons.configuration.PropertiesConfigurationLayout: java.lang.String CR>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.String $r0;

        <org.apache.commons.configuration.PropertiesConfigurationLayout: java.lang.String COMMENT_PREFIX> = "# ";

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        <org.apache.commons.configuration.PropertiesConfigurationLayout: java.lang.String CR> = $r0;

        return;
    }
}
