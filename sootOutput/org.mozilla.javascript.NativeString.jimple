final class org.mozilla.javascript.NativeString extends org.mozilla.javascript.IdScriptableObject
{
    static final long serialVersionUID;
    private static final java.lang.Object STRING_TAG;
    private static final int Id_length;
    private static final int MAX_INSTANCE_ID;
    private static final int ConstructorId_fromCharCode;
    private static final int Id_constructor;
    private static final int Id_toString;
    private static final int Id_toSource;
    private static final int Id_valueOf;
    private static final int Id_charAt;
    private static final int Id_charCodeAt;
    private static final int Id_indexOf;
    private static final int Id_lastIndexOf;
    private static final int Id_split;
    private static final int Id_substring;
    private static final int Id_toLowerCase;
    private static final int Id_toUpperCase;
    private static final int Id_substr;
    private static final int Id_concat;
    private static final int Id_slice;
    private static final int Id_bold;
    private static final int Id_italics;
    private static final int Id_fixed;
    private static final int Id_strike;
    private static final int Id_small;
    private static final int Id_big;
    private static final int Id_blink;
    private static final int Id_sup;
    private static final int Id_sub;
    private static final int Id_fontsize;
    private static final int Id_fontcolor;
    private static final int Id_link;
    private static final int Id_anchor;
    private static final int Id_equals;
    private static final int Id_equalsIgnoreCase;
    private static final int Id_match;
    private static final int Id_search;
    private static final int Id_replace;
    private static final int Id_localeCompare;
    private static final int MAX_PROTOTYPE_ID;
    private java.lang.String string;

    static void init(org.mozilla.javascript.Scriptable, boolean)
    {
        org.mozilla.javascript.Scriptable r1;
        org.mozilla.javascript.NativeString $r0;
        boolean z0;

        r1 := @parameter0: org.mozilla.javascript.Scriptable;

        z0 := @parameter1: boolean;

        $r0 = new org.mozilla.javascript.NativeString;

        specialinvoke $r0.<org.mozilla.javascript.NativeString: void <init>(java.lang.String)>("");

        virtualinvoke $r0.<org.mozilla.javascript.NativeString: org.mozilla.javascript.IdFunctionObject exportAsJSClass(int,org.mozilla.javascript.Scriptable,boolean)>(34, r1, z0);

        return;
    }

    private void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.mozilla.javascript.NativeString r0;

        r0 := @this: org.mozilla.javascript.NativeString;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: void <init>()>();

        r0.<org.mozilla.javascript.NativeString: java.lang.String string> = r1;

        return;
    }

    public java.lang.String getClassName()
    {
        org.mozilla.javascript.NativeString r0;

        r0 := @this: org.mozilla.javascript.NativeString;

        return "String";
    }

    protected int getMaxInstanceId()
    {
        org.mozilla.javascript.NativeString r0;

        r0 := @this: org.mozilla.javascript.NativeString;

        return 1;
    }

    protected int findInstanceIdInfo(java.lang.String)
    {
        org.mozilla.javascript.NativeString r1;
        int $i0, $i1;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: org.mozilla.javascript.NativeString;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("length");

        if $z0 == 0 goto label1;

        $i1 = staticinvoke <org.mozilla.javascript.NativeString: int instanceIdInfo(int,int)>(7, 1);

        return $i1;

     label1:
        $i0 = specialinvoke r1.<org.mozilla.javascript.IdScriptableObject: int findInstanceIdInfo(java.lang.String)>(r0);

        return $i0;
    }

    protected java.lang.String getInstanceIdName(int)
    {
        int i0;
        java.lang.String $r1;
        org.mozilla.javascript.NativeString r0;

        r0 := @this: org.mozilla.javascript.NativeString;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        return "length";

     label1:
        $r1 = specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: java.lang.String getInstanceIdName(int)>(i0);

        return $r1;
    }

    protected java.lang.Object getInstanceIdValue(int)
    {
        org.mozilla.javascript.NativeString r0;
        int i0, $i1;
        java.lang.Object $r1;
        java.lang.String $r2;
        java.lang.Integer $r3;

        r0 := @this: org.mozilla.javascript.NativeString;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        $r2 = r0.<org.mozilla.javascript.NativeString: java.lang.String string>;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Integer wrapInt(int)>($i1);

        return $r3;

     label1:
        $r1 = specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: java.lang.Object getInstanceIdValue(int)>(i0);

        return $r1;
    }

    protected void fillConstructorProperties(org.mozilla.javascript.IdFunctionObject)
    {
        org.mozilla.javascript.IdFunctionObject r1;
        org.mozilla.javascript.NativeString r0;
        int $i1;
        java.lang.Object $r2;

        r0 := @this: org.mozilla.javascript.NativeString;

        r1 := @parameter0: org.mozilla.javascript.IdFunctionObject;

        $r2 = <org.mozilla.javascript.NativeString: java.lang.Object STRING_TAG>;

        $i1 = (int) -1;

        virtualinvoke r0.<org.mozilla.javascript.NativeString: void addIdFunctionProperty(org.mozilla.javascript.Scriptable,java.lang.Object,int,java.lang.String,int)>(r1, $r2, $i1, "fromCharCode", 1);

        specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: void fillConstructorProperties(org.mozilla.javascript.IdFunctionObject)>(r1);

        return;
    }

    protected void initPrototypeId(int)
    {
        byte b1;
        org.mozilla.javascript.NativeString r0;
        int i0;
        java.lang.Object $r4;
        java.lang.String $r2, r3;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: org.mozilla.javascript.NativeString;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label07;
            case 8: goto label08;
            case 9: goto label09;
            case 10: goto label10;
            case 11: goto label11;
            case 12: goto label12;
            case 13: goto label13;
            case 14: goto label14;
            case 15: goto label15;
            case 16: goto label16;
            case 17: goto label17;
            case 18: goto label18;
            case 19: goto label19;
            case 20: goto label20;
            case 21: goto label21;
            case 22: goto label22;
            case 23: goto label23;
            case 24: goto label24;
            case 25: goto label25;
            case 26: goto label26;
            case 27: goto label27;
            case 28: goto label28;
            case 29: goto label29;
            case 30: goto label30;
            case 31: goto label31;
            case 32: goto label32;
            case 33: goto label33;
            case 34: goto label34;
            default: goto label35;
        };

     label01:
        b1 = 1;

        r3 = "constructor";

        goto label36;

     label02:
        b1 = 0;

        r3 = "toString";

        goto label36;

     label03:
        b1 = 0;

        r3 = "toSource";

        goto label36;

     label04:
        b1 = 0;

        r3 = "valueOf";

        goto label36;

     label05:
        b1 = 1;

        r3 = "charAt";

        goto label36;

     label06:
        b1 = 1;

        r3 = "charCodeAt";

        goto label36;

     label07:
        b1 = 1;

        r3 = "indexOf";

        goto label36;

     label08:
        b1 = 1;

        r3 = "lastIndexOf";

        goto label36;

     label09:
        b1 = 2;

        r3 = "split";

        goto label36;

     label10:
        b1 = 2;

        r3 = "substring";

        goto label36;

     label11:
        b1 = 0;

        r3 = "toLowerCase";

        goto label36;

     label12:
        b1 = 0;

        r3 = "toUpperCase";

        goto label36;

     label13:
        b1 = 2;

        r3 = "substr";

        goto label36;

     label14:
        b1 = 1;

        r3 = "concat";

        goto label36;

     label15:
        b1 = 2;

        r3 = "slice";

        goto label36;

     label16:
        b1 = 0;

        r3 = "bold";

        goto label36;

     label17:
        b1 = 0;

        r3 = "italics";

        goto label36;

     label18:
        b1 = 0;

        r3 = "fixed";

        goto label36;

     label19:
        b1 = 0;

        r3 = "strike";

        goto label36;

     label20:
        b1 = 0;

        r3 = "small";

        goto label36;

     label21:
        b1 = 0;

        r3 = "big";

        goto label36;

     label22:
        b1 = 0;

        r3 = "blink";

        goto label36;

     label23:
        b1 = 0;

        r3 = "sup";

        goto label36;

     label24:
        b1 = 0;

        r3 = "sub";

        goto label36;

     label25:
        b1 = 0;

        r3 = "fontsize";

        goto label36;

     label26:
        b1 = 0;

        r3 = "fontcolor";

        goto label36;

     label27:
        b1 = 0;

        r3 = "link";

        goto label36;

     label28:
        b1 = 0;

        r3 = "anchor";

        goto label36;

     label29:
        b1 = 1;

        r3 = "equals";

        goto label36;

     label30:
        b1 = 1;

        r3 = "equalsIgnoreCase";

        goto label36;

     label31:
        b1 = 1;

        r3 = "match";

        goto label36;

     label32:
        b1 = 1;

        r3 = "search";

        goto label36;

     label33:
        b1 = 1;

        r3 = "replace";

        goto label36;

     label34:
        b1 = 1;

        r3 = "localeCompare";

        goto label36;

     label35:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label36:
        $r4 = <org.mozilla.javascript.NativeString: java.lang.Object STRING_TAG>;

        virtualinvoke r0.<org.mozilla.javascript.NativeString: void initPrototypeMethod(java.lang.Object,int,java.lang.String,int)>($r4, i0, r3, b1);

        return;
    }

    public java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.lang.Integer $r42, $r44, $r47;
        byte $b4, $b6, b13;
        org.mozilla.javascript.RegExpProxy $r69;
        java.lang.Object[] r7;
        java.lang.Double $r46;
        org.mozilla.javascript.IdFunctionObject r0;
        org.mozilla.javascript.NativeString $r49, $r56, r65, $r72;
        java.lang.StringBuffer $r51, $r53, $r54, $r71, $r73;
        java.lang.String $r6, $r8, $r11, $r12, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r41, $r43, $r45, $r48, $r52, $r55, $r57, $r61, $r64, $r67, r68;
        java.lang.Number $r9;
        java.text.Collator $r4;
        org.mozilla.javascript.Context r2;
        java.util.Locale $r3;
        boolean $z0, $z1;
        org.mozilla.javascript.Scriptable r5, r10;
        int $i0, $i1, $i2, $i3, $i5, $i7, $i9, i11, i12, $i14, $i15, $i16;
        java.lang.Boolean $r13;
        double $d0, $d1, $d2;
        char $c8, $c10;
        java.lang.IllegalArgumentException $r74;
        java.lang.Object $r1, $r40, $r59, $r62, $r66, $r70;

        r65 := @this: org.mozilla.javascript.NativeString;

        r0 := @parameter0: org.mozilla.javascript.IdFunctionObject;

        r2 := @parameter1: org.mozilla.javascript.Context;

        r10 := @parameter2: org.mozilla.javascript.Scriptable;

        r5 := @parameter3: org.mozilla.javascript.Scriptable;

        r7 := @parameter4: java.lang.Object[];

        $r1 = <org.mozilla.javascript.NativeString: java.lang.Object STRING_TAG>;

        $z0 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: boolean hasTag(java.lang.Object)>($r1);

        if $z0 != 0 goto label01;

        $r66 = specialinvoke r65.<org.mozilla.javascript.IdScriptableObject: java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r0, r2, r10, r5, r7);

        return $r66;

     label01:
        $i0 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: int methodId()>();

        tableswitch($i0)
        {
            case -1: goto label02;
            case 0: goto label47;
            case 1: goto label06;
            case 2: goto label10;
            case 3: goto label11;
            case 4: goto label10;
            case 5: goto label12;
            case 6: goto label12;
            case 7: goto label17;
            case 8: goto label18;
            case 9: goto label19;
            case 10: goto label20;
            case 11: goto label21;
            case 12: goto label22;
            case 13: goto label23;
            case 14: goto label24;
            case 15: goto label25;
            case 16: goto label26;
            case 17: goto label27;
            case 18: goto label28;
            case 19: goto label29;
            case 20: goto label30;
            case 21: goto label31;
            case 22: goto label32;
            case 23: goto label33;
            case 24: goto label34;
            case 25: goto label35;
            case 26: goto label36;
            case 27: goto label37;
            case 28: goto label38;
            case 29: goto label39;
            case 30: goto label39;
            case 31: goto label42;
            case 32: goto label42;
            case 33: goto label42;
            case 34: goto label46;
            default: goto label47;
        };

     label02:
        i11 = lengthof r7;

        if i11 >= 1 goto label03;

        return "";

     label03:
        $r71 = new java.lang.StringBuffer;

        specialinvoke $r71.<java.lang.StringBuffer: void <init>(int)>(i11);

        i12 = 0;

     label04:
        if i12 == i11 goto label05;

        $r62 = r7[i12];

        $c10 = staticinvoke <org.mozilla.javascript.ScriptRuntime: char toUint16(java.lang.Object)>($r62);

        virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c10);

        i12 = i12 + 1;

        goto label04;

     label05:
        $r61 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r61;

     label06:
        $i9 = lengthof r7;

        if $i9 < 1 goto label07;

        $r59 = r7[0];

        $r67 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>($r59);

        goto label08;

     label07:
        $r67 = "";

     label08:
        if r5 != null goto label09;

        $r72 = new org.mozilla.javascript.NativeString;

        specialinvoke $r72.<org.mozilla.javascript.NativeString: void <init>(java.lang.String)>($r67);

        return $r72;

     label09:
        return $r67;

     label10:
        $r56 = staticinvoke <org.mozilla.javascript.NativeString: org.mozilla.javascript.NativeString realThis(org.mozilla.javascript.Scriptable,org.mozilla.javascript.IdFunctionObject)>(r5, r0);

        $r57 = $r56.<org.mozilla.javascript.NativeString: java.lang.String string>;

        return $r57;

     label11:
        $r49 = staticinvoke <org.mozilla.javascript.NativeString: org.mozilla.javascript.NativeString realThis(org.mozilla.javascript.Scriptable,org.mozilla.javascript.IdFunctionObject)>(r5, r0);

        r68 = $r49.<org.mozilla.javascript.NativeString: java.lang.String string>;

        $r73 = new java.lang.StringBuffer;

        specialinvoke $r73.<java.lang.StringBuffer: void <init>()>();

        $r51 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(new String(\"");

        $r52 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String escapeString(java.lang.String)>(r68);

        $r53 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"))");

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r55;

     label12:
        $r45 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r5);

        $d1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toInteger(java.lang.Object[],int)>(r7, 0);

        $b4 = $d1 cmpg 0.0;

        $i14 = (int) $b4;

        if $i14 < 0 goto label13;

        $i5 = virtualinvoke $r45.<java.lang.String: int length()>();

        $d2 = (double) $i5;

        $b6 = $d1 cmpl $d2;

        $i15 = (int) $b6;

        if $i15 < 0 goto label15;

     label13:
        if $i0 != 5 goto label14;

        return "";

     label14:
        $r46 = <org.mozilla.javascript.ScriptRuntime: java.lang.Double NaNobj>;

        return $r46;

     label15:
        $i7 = (int) $d1;

        $c8 = virtualinvoke $r45.<java.lang.String: char charAt(int)>($i7);

        if $i0 != 5 goto label16;

        $r48 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c8);

        return $r48;

     label16:
        $i16 = (int) $c8;

        $r47 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Integer wrapInt(int)>($i16);

        return $r47;

     label17:
        $r43 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r5);

        $i3 = staticinvoke <org.mozilla.javascript.NativeString: int js_indexOf(java.lang.String,java.lang.Object[])>($r43, r7);

        $r44 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Integer wrapInt(int)>($i3);

        return $r44;

     label18:
        $r41 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r5);

        $i2 = staticinvoke <org.mozilla.javascript.NativeString: int js_lastIndexOf(java.lang.String,java.lang.Object[])>($r41, r7);

        $r42 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Integer wrapInt(int)>($i2);

        return $r42;

     label19:
        $r39 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r5);

        $r40 = staticinvoke <org.mozilla.javascript.NativeString: java.lang.Object js_split(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object[])>(r2, r10, $r39, r7);

        return $r40;

     label20:
        $r37 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r5);

        $r38 = staticinvoke <org.mozilla.javascript.NativeString: java.lang.String js_substring(org.mozilla.javascript.Context,java.lang.String,java.lang.Object[])>(r2, $r37, r7);

        return $r38;

     label21:
        $r35 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r5);

        $r36 = virtualinvoke $r35.<java.lang.String: java.lang.String toLowerCase()>();

        return $r36;

     label22:
        $r33 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r5);

        $r34 = virtualinvoke $r33.<java.lang.String: java.lang.String toUpperCase()>();

        return $r34;

     label23:
        $r31 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r5);

        $r32 = staticinvoke <org.mozilla.javascript.NativeString: java.lang.String js_substr(java.lang.String,java.lang.Object[])>($r31, r7);

        return $r32;

     label24:
        $r29 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r5);

        $r30 = staticinvoke <org.mozilla.javascript.NativeString: java.lang.String js_concat(java.lang.String,java.lang.Object[])>($r29, r7);

        return $r30;

     label25:
        $r27 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r5);

        $r28 = staticinvoke <org.mozilla.javascript.NativeString: java.lang.String js_slice(java.lang.String,java.lang.Object[])>($r27, r7);

        return $r28;

     label26:
        $r26 = staticinvoke <org.mozilla.javascript.NativeString: java.lang.String tagify(java.lang.Object,java.lang.String,java.lang.String,java.lang.Object[])>(r5, "b", null, null);

        return $r26;

     label27:
        $r25 = staticinvoke <org.mozilla.javascript.NativeString: java.lang.String tagify(java.lang.Object,java.lang.String,java.lang.String,java.lang.Object[])>(r5, "i", null, null);

        return $r25;

     label28:
        $r24 = staticinvoke <org.mozilla.javascript.NativeString: java.lang.String tagify(java.lang.Object,java.lang.String,java.lang.String,java.lang.Object[])>(r5, "tt", null, null);

        return $r24;

     label29:
        $r23 = staticinvoke <org.mozilla.javascript.NativeString: java.lang.String tagify(java.lang.Object,java.lang.String,java.lang.String,java.lang.Object[])>(r5, "strike", null, null);

        return $r23;

     label30:
        $r22 = staticinvoke <org.mozilla.javascript.NativeString: java.lang.String tagify(java.lang.Object,java.lang.String,java.lang.String,java.lang.Object[])>(r5, "small", null, null);

        return $r22;

     label31:
        $r21 = staticinvoke <org.mozilla.javascript.NativeString: java.lang.String tagify(java.lang.Object,java.lang.String,java.lang.String,java.lang.Object[])>(r5, "big", null, null);

        return $r21;

     label32:
        $r20 = staticinvoke <org.mozilla.javascript.NativeString: java.lang.String tagify(java.lang.Object,java.lang.String,java.lang.String,java.lang.Object[])>(r5, "blink", null, null);

        return $r20;

     label33:
        $r19 = staticinvoke <org.mozilla.javascript.NativeString: java.lang.String tagify(java.lang.Object,java.lang.String,java.lang.String,java.lang.Object[])>(r5, "sup", null, null);

        return $r19;

     label34:
        $r18 = staticinvoke <org.mozilla.javascript.NativeString: java.lang.String tagify(java.lang.Object,java.lang.String,java.lang.String,java.lang.Object[])>(r5, "sub", null, null);

        return $r18;

     label35:
        $r17 = staticinvoke <org.mozilla.javascript.NativeString: java.lang.String tagify(java.lang.Object,java.lang.String,java.lang.String,java.lang.Object[])>(r5, "font", "size", r7);

        return $r17;

     label36:
        $r16 = staticinvoke <org.mozilla.javascript.NativeString: java.lang.String tagify(java.lang.Object,java.lang.String,java.lang.String,java.lang.Object[])>(r5, "font", "color", r7);

        return $r16;

     label37:
        $r15 = staticinvoke <org.mozilla.javascript.NativeString: java.lang.String tagify(java.lang.Object,java.lang.String,java.lang.String,java.lang.Object[])>(r5, "a", "href", r7);

        return $r15;

     label38:
        $r14 = staticinvoke <org.mozilla.javascript.NativeString: java.lang.String tagify(java.lang.Object,java.lang.String,java.lang.String,java.lang.Object[])>(r5, "a", "name", r7);

        return $r14;

     label39:
        $r11 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r5);

        $r12 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object[],int)>(r7, 0);

        if $i0 != 29 goto label40;

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        goto label41;

     label40:
        $z1 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r12);

     label41:
        $r13 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Boolean wrapBoolean(boolean)>($z1);

        return $r13;

     label42:
        if $i0 != 31 goto label43;

        b13 = 1;

        goto label45;

     label43:
        if $i0 != 32 goto label44;

        b13 = 3;

        goto label45;

     label44:
        b13 = 2;

     label45:
        $r69 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.RegExpProxy checkRegExpProxy(org.mozilla.javascript.Context)>(r2);

        $r70 = interfaceinvoke $r69.<org.mozilla.javascript.RegExpProxy: java.lang.Object action(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[],int)>(r2, r10, r5, r7, b13);

        return $r70;

     label46:
        $r3 = virtualinvoke r2.<org.mozilla.javascript.Context: java.util.Locale getLocale()>();

        $r4 = staticinvoke <java.text.Collator: java.text.Collator getInstance(java.util.Locale)>($r3);

        virtualinvoke $r4.<java.text.Collator: void setStrength(int)>(3);

        virtualinvoke $r4.<java.text.Collator: void setDecomposition(int)>(1);

        $r6 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r5);

        $r8 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object[],int)>(r7, 0);

        $i1 = virtualinvoke $r4.<java.text.Collator: int compare(java.lang.String,java.lang.String)>($r6, $r8);

        $d0 = (double) $i1;

        $r9 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d0);

        return $r9;

     label47:
        $r74 = new java.lang.IllegalArgumentException;

        $r64 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        specialinvoke $r74.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r64);

        throw $r74;
    }

    private static org.mozilla.javascript.NativeString realThis(org.mozilla.javascript.Scriptable, org.mozilla.javascript.IdFunctionObject)
    {
        org.mozilla.javascript.EcmaError $r3;
        org.mozilla.javascript.Scriptable r0;
        org.mozilla.javascript.IdFunctionObject r2;
        org.mozilla.javascript.NativeString $r1;
        boolean $z0;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        r2 := @parameter1: org.mozilla.javascript.IdFunctionObject;

        $z0 = r0 instanceof org.mozilla.javascript.NativeString;

        if $z0 != 0 goto label1;

        $r3 = staticinvoke <org.mozilla.javascript.NativeString: org.mozilla.javascript.EcmaError incompatibleCallError(org.mozilla.javascript.IdFunctionObject)>(r2);

        throw $r3;

     label1:
        $r1 = (org.mozilla.javascript.NativeString) r0;

        return $r1;
    }

    private static java.lang.String tagify(java.lang.Object, java.lang.String, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r6;
        java.lang.StringBuffer $r2;
        java.lang.Object r0;
        java.lang.String $r1, r3, r4, $r5, $r7;

        r0 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r6 := @parameter3: java.lang.Object[];

        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(60);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        if r4 == null goto label1;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=\"");

        $r7 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object[],int)>(r6, 0);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

     label1:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(62);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(62);

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        org.mozilla.javascript.NativeString r0;

        r0 := @this: org.mozilla.javascript.NativeString;

        $r1 = r0.<org.mozilla.javascript.NativeString: java.lang.String string>;

        return $r1;
    }

    public java.lang.Object get(int, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Scriptable r1;
        org.mozilla.javascript.NativeString r0;
        int i0, $i1, $i2;
        java.lang.Object $r2;
        java.lang.String $r3, $r4, $r5;

        r0 := @this: org.mozilla.javascript.NativeString;

        i0 := @parameter0: int;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        if 0 > i0 goto label1;

        $r3 = r0.<org.mozilla.javascript.NativeString: java.lang.String string>;

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        if i0 >= $i1 goto label1;

        $r4 = r0.<org.mozilla.javascript.NativeString: java.lang.String string>;

        $i2 = i0 + 1;

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(i0, $i2);

        return $r5;

     label1:
        $r2 = specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: java.lang.Object get(int,org.mozilla.javascript.Scriptable)>(i0, r1);

        return $r2;
    }

    public void put(int, org.mozilla.javascript.Scriptable, java.lang.Object)
    {
        org.mozilla.javascript.Scriptable r1;
        org.mozilla.javascript.NativeString r0;
        int i0, $i1;
        java.lang.Object r2;
        java.lang.String $r3;

        r0 := @this: org.mozilla.javascript.NativeString;

        i0 := @parameter0: int;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        r2 := @parameter2: java.lang.Object;

        if 0 > i0 goto label1;

        $r3 = r0.<org.mozilla.javascript.NativeString: java.lang.String string>;

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        if i0 >= $i1 goto label1;

        return;

     label1:
        specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: void put(int,org.mozilla.javascript.Scriptable,java.lang.Object)>(i0, r1, r2);

        return;
    }

    private static int js_indexOf(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r0;
        byte $b1, $b2;
        int $i0, $i3, $i4, $i5, $i7, $i8;
        java.lang.String $r1, r2;
        double $d0, $d1, d2;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object[];

        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object[],int)>(r0, 0);

        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toInteger(java.lang.Object[],int)>(r0, 1);

        d2 = $d0;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        $d1 = (double) $i0;

        $b1 = $d0 cmpl $d1;

        $i5 = (int) $b1;

        if $i5 <= 0 goto label1;

        $i7 = (int) -1;

        return $i7;

     label1:
        $b2 = $d0 cmpg 0.0;

        $i8 = (int) $b2;

        if $i8 >= 0 goto label2;

        d2 = 0.0;

     label2:
        $i3 = (int) d2;

        $i4 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String,int)>($r1, $i3);

        return $i4;
    }

    private static int js_lastIndexOf(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r0;
        byte $b0, $b3, $b4;
        int $i1, $i2, $i5, $i6, $i7, $i8;
        java.lang.String $r1, r2;
        double $d0, $d1, d2;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object[];

        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object[],int)>(r0, 0);

        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object[],int)>(r0, 1);

        d2 = $d0;

        $b0 = $d0 cmpl $d0;

        if $b0 != 0 goto label1;

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        $d1 = (double) $i2;

        $b3 = $d0 cmpl $d1;

        $i7 = (int) $b3;

        if $i7 <= 0 goto label2;

     label1:
        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        d2 = (double) $i1;

        goto label3;

     label2:
        $b4 = $d0 cmpg 0.0;

        $i8 = (int) $b4;

        if $i8 >= 0 goto label3;

        d2 = 0.0;

     label3:
        $i5 = (int) d2;

        $i6 = virtualinvoke r2.<java.lang.String: int lastIndexOf(java.lang.String,int)>($r1, $i5);

        return $i6;
    }

    private static int find_split(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.String, java.lang.String, int, org.mozilla.javascript.RegExpProxy, org.mozilla.javascript.Scriptable, int[], int[], boolean[], java.lang.String[][])
    {
        int[] r0, r4;
        boolean $z0, $z1, $z2;
        org.mozilla.javascript.RegExpProxy r5;
        org.mozilla.javascript.Scriptable r2, r7;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, i13, i14, $i15, $i16, $i17, $i18, $i20, $i22, $i24, $i26, $i28;
        java.lang.String r1, r3;
        org.mozilla.javascript.Context r6;
        boolean[] r8;
        char $c8, $c10, $c11, $c12;
        java.lang.String[][] r9;

        r6 := @parameter0: org.mozilla.javascript.Context;

        r7 := @parameter1: org.mozilla.javascript.Scriptable;

        r1 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r5 := @parameter5: org.mozilla.javascript.RegExpProxy;

        r2 := @parameter6: org.mozilla.javascript.Scriptable;

        r0 := @parameter7: int[];

        r4 := @parameter8: int[];

        r8 := @parameter9: boolean[];

        r9 := @parameter10: java.lang.String[][];

        i13 = r0[0];

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i1 != 120 goto label08;

        if r2 != null goto label08;

        $i7 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i7 != 1 goto label08;

        $c8 = virtualinvoke r3.<java.lang.String: char charAt(int)>(0);

        $i18 = (int) $c8;

        if $i18 != 32 goto label08;

        if i13 != 0 goto label03;

     label01:
        if i13 >= $i0 goto label02;

        $c12 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i13);

        $z2 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c12);

        if $z2 == 0 goto label02;

        i13 = i13 + 1;

        goto label01;

     label02:
        r0[0] = i13;

     label03:
        if i13 != $i0 goto label04;

        $i20 = (int) -1;

        return $i20;

     label04:
        if i13 >= $i0 goto label05;

        $c11 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i13);

        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c11);

        if $z1 != 0 goto label05;

        i13 = i13 + 1;

        goto label04;

     label05:
        i14 = i13;

     label06:
        if i14 >= $i0 goto label07;

        $c10 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i14);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c10);

        if $z0 == 0 goto label07;

        i14 = i14 + 1;

        goto label06;

     label07:
        $i9 = i14 - i13;

        r4[0] = $i9;

        return i13;

     label08:
        if i13 <= $i0 goto label09;

        $i22 = (int) -1;

        return $i22;

     label09:
        if r2 == null goto label10;

        $i6 = interfaceinvoke r5.<org.mozilla.javascript.RegExpProxy: int find_split(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String,java.lang.String,org.mozilla.javascript.Scriptable,int[],int[],boolean[],java.lang.String[][])>(r6, r7, r1, r3, r2, r0, r4, r8, r9);

        return $i6;

     label10:
        if i1 == 0 goto label11;

        if i1 >= 130 goto label11;

        if $i0 != 0 goto label11;

        $i24 = (int) -1;

        return $i24;

     label11:
        $i15 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i15 != 0 goto label16;

        if i1 != 120 goto label13;

        if i13 != $i0 goto label12;

        r4[0] = 1;

        return i13;

     label12:
        $i5 = i13 + 1;

        return $i5;

     label13:
        if i13 != $i0 goto label14;

        $i26 = (int) -1;

        $i16 = $i26;

        goto label15;

     label14:
        $i16 = i13 + 1;

     label15:
        return $i16;

     label16:
        $i2 = r0[0];

        if $i2 < $i0 goto label17;

        return $i0;

     label17:
        $i3 = r0[0];

        $i4 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String,int)>(r3, $i3);

        $i28 = (int) -1;

        if $i4 == $i28 goto label18;

        $i17 = $i4;

        goto label19;

     label18:
        $i17 = $i0;

     label19:
        return $i17;
    }

    private static java.lang.Object js_split(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.String, java.lang.Object[])
    {
        byte $b10, $b12, $b17;
        int[] $r5, $r20;
        boolean z0, $z1, $z2, $z4, $z5, $z6;
        org.mozilla.javascript.RegExpProxy $r14, r22;
        org.mozilla.javascript.Scriptable r0, $r1, $r3, r21, r24;
        java.lang.Object[] r4;
        java.lang.String[] $r9, $r10;
        long $l9, $l11, $l14, $l16, l20;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i13, $i15, $i18, $i19, i21, $i22, i23, $i24, $i25, $i26, $i27, $i28;
        java.lang.String r8, $r11, $r13, r19, r25;
        org.mozilla.javascript.Context r2;
        boolean[] $r6;
        java.lang.Object $r12, $r15, $r16, $r17, $r18, $r23;
        java.lang.String[][] $r7;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: org.mozilla.javascript.Scriptable;

        r8 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object[];

        $r1 = staticinvoke <org.mozilla.javascript.NativeString: org.mozilla.javascript.Scriptable getTopLevelScope(org.mozilla.javascript.Scriptable)>(r0);

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable newObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object[])>(r2, $r1, "Array", null);

        $i0 = lengthof r4;

        if $i0 >= 1 goto label01;

        interfaceinvoke $r3.<org.mozilla.javascript.Scriptable: void put(int,org.mozilla.javascript.Scriptable,java.lang.Object)>(0, $r3, r8);

        return $r3;

     label01:
        $i1 = lengthof r4;

        if $i1 <= 1 goto label02;

        $r18 = r4[1];

        $r17 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if $r18 == $r17 goto label02;

        $z6 = 1;

        $z5 = 1;

        goto label03;

     label02:
        $z6 = 0;

        $z5 = 0;

     label03:
        z0 = $z6;

        l20 = 0L;

        if $z5 == 0 goto label04;

        $r16 = r4[1];

        $l14 = staticinvoke <org.mozilla.javascript.ScriptRuntime: long toUint32(java.lang.Object)>($r16);

        l20 = $l14;

        $i15 = virtualinvoke r8.<java.lang.String: int length()>();

        $l16 = (long) $i15;

        $b17 = $l14 cmp $l16;

        $i26 = (int) $b17;

        if $i26 <= 0 goto label04;

        $i18 = virtualinvoke r8.<java.lang.String: int length()>();

        $i19 = 1 + $i18;

        l20 = (long) $i19;

     label04:
        r19 = null;

        $r20 = newarray (int)[1];

        r21 = null;

        r22 = null;

        $r23 = r4[0];

        $z4 = $r23 instanceof org.mozilla.javascript.Scriptable;

        if $z4 == 0 goto label05;

        $r14 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.RegExpProxy getRegExpProxy(org.mozilla.javascript.Context)>(r2);

        r22 = $r14;

        if $r14 == null goto label05;

        $r15 = r4[0];

        r24 = (org.mozilla.javascript.Scriptable) $r15;

        $z2 = interfaceinvoke $r14.<org.mozilla.javascript.RegExpProxy: boolean isRegExp(org.mozilla.javascript.Scriptable)>(r24);

        if $z2 == 0 goto label05;

        r21 = r24;

     label05:
        if r21 != null goto label06;

        $r12 = r4[0];

        $r13 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>($r12);

        r19 = $r13;

        $i13 = virtualinvoke $r13.<java.lang.String: int length()>();

        $r20[0] = $i13;

     label06:
        $r5 = newarray (int)[1];

        $r5[0] = 0;

        i21 = 0;

        $r6 = newarray (boolean)[1];

        $r6[0] = 0;

        $r7 = newarray (java.lang.String[])[1];

        $r7[0] = null;

        $i2 = virtualinvoke r2.<org.mozilla.javascript.Context: int getLanguageVersion()>();

     label07:
        $i22 = staticinvoke <org.mozilla.javascript.NativeString: int find_split(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String,java.lang.String,int,org.mozilla.javascript.RegExpProxy,org.mozilla.javascript.Scriptable,int[],int[],boolean[],java.lang.String[][])>(r2, r0, r8, r19, $i2, r22, r21, $r5, $r20, $r6, $r7);

        if $i22 < 0 goto label16;

        if z0 == 0 goto label08;

        $l11 = (long) i21;

        $b12 = $l11 cmp l20;

        $i27 = (int) $b12;

        if $i27 >= 0 goto label16;

     label08:
        $i3 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i22 <= $i3 goto label09;

        goto label16;

     label09:
        $i4 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i4 != 0 goto label10;

        r25 = r8;

        goto label11;

     label10:
        $i5 = $r5[0];

        r25 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>($i5, $i22);

     label11:
        interfaceinvoke $r3.<org.mozilla.javascript.Scriptable: void put(int,org.mozilla.javascript.Scriptable,java.lang.Object)>(i21, $r3, r25);

        i21 = i21 + 1;

        if r21 == null goto label15;

        $z1 = $r6[0];

        if $z1 != 1 goto label15;

        $r9 = $r7[0];

        i8 = lengthof $r9;

        i23 = 0;

     label12:
        if i23 >= i8 goto label14;

        if z0 == 0 goto label13;

        $l9 = (long) i21;

        $b10 = $l9 cmp l20;

        $i28 = (int) $b10;

        if $i28 < 0 goto label13;

        goto label14;

     label13:
        $r10 = $r7[0];

        $r11 = $r10[i23];

        interfaceinvoke $r3.<org.mozilla.javascript.Scriptable: void put(int,org.mozilla.javascript.Scriptable,java.lang.Object)>(i21, $r3, $r11);

        i21 = i21 + 1;

        i23 = i23 + 1;

        goto label12;

     label14:
        $r6[0] = 0;

     label15:
        $i24 = $r20[0];

        $i25 = $i22 + $i24;

        $r5[0] = $i25;

        if $i2 >= 130 goto label07;

        if $i2 == 0 goto label07;

        if z0 != 0 goto label07;

        $i6 = $r5[0];

        $i7 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i6 != $i7 goto label07;

        goto label16;

     label16:
        return $r3;
    }

    private static java.lang.String js_substring(org.mozilla.javascript.Context, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r1;
        byte $b1, $b2, $b3, $b4, $b7;
        int $i0, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.lang.String r0, $r6;
        double $d0, $d1, $d2, $d3, d4, d5, d6;
        org.mozilla.javascript.Context r5;
        java.lang.Object $r2, $r3, $r4;

        r5 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.Object[];

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toInteger(java.lang.Object[],int)>(r1, 0);

        d5 = $d0;

        $b1 = $d0 cmpg 0.0;

        $i10 = (int) $b1;

        if $i10 >= 0 goto label1;

        d5 = 0.0;

        goto label2;

     label1:
        $d1 = (double) $i0;

        $b2 = $d0 cmpl $d1;

        $i11 = (int) $b2;

        if $i11 <= 0 goto label2;

        d5 = (double) $i0;

     label2:
        $i6 = lengthof r1;

        if $i6 <= 1 goto label3;

        $r3 = r1[1];

        $r2 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if $r3 != $r2 goto label4;

     label3:
        d6 = (double) $i0;

        goto label8;

     label4:
        $r4 = r1[1];

        $d2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toInteger(java.lang.Object)>($r4);

        d6 = $d2;

        $b3 = $d2 cmpg 0.0;

        $i12 = (int) $b3;

        if $i12 >= 0 goto label5;

        d6 = 0.0;

        goto label6;

     label5:
        $d3 = (double) $i0;

        $b4 = $d2 cmpl $d3;

        $i13 = (int) $b4;

        if $i13 <= 0 goto label6;

        d6 = (double) $i0;

     label6:
        $b7 = d6 cmpg d5;

        $i14 = (int) $b7;

        if $i14 >= 0 goto label8;

        $i5 = virtualinvoke r5.<org.mozilla.javascript.Context: int getLanguageVersion()>();

        if $i5 == 120 goto label7;

        d4 = d5;

        d5 = d6;

        d6 = d4;

        goto label8;

     label7:
        d6 = d5;

     label8:
        $i8 = (int) d5;

        $i9 = (int) d6;

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i8, $i9);

        return $r6;
    }

    int getLength()
    {
        int $i0;
        java.lang.String $r1;
        org.mozilla.javascript.NativeString r0;

        r0 := @this: org.mozilla.javascript.NativeString;

        $r1 = r0.<org.mozilla.javascript.NativeString: java.lang.String string>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i0;
    }

    private static java.lang.String js_substr(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r0;
        byte $b2, $b3, $b4, $b5, $b6;
        int $i0, $i1, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.lang.String r2, $r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6, d7, d8;
        java.lang.Object $r1, $r3;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object[];

        $i0 = lengthof r0;

        if $i0 >= 1 goto label1;

        return r2;

     label1:
        $r1 = r0[0];

        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toInteger(java.lang.Object)>($r1);

        d6 = $d0;

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        $b2 = $d0 cmpg 0.0;

        $i10 = (int) $b2;

        if $i10 >= 0 goto label2;

        $d5 = (double) $i1;

        d6 = $d0 + $d5;

        $b6 = d6 cmpg 0.0;

        $i11 = (int) $b6;

        if $i11 >= 0 goto label3;

        d6 = 0.0;

        goto label3;

     label2:
        $d1 = (double) $i1;

        $b3 = $d0 cmpl $d1;

        $i12 = (int) $b3;

        if $i12 <= 0 goto label3;

        d6 = (double) $i1;

     label3:
        $i7 = lengthof r0;

        if $i7 != 1 goto label4;

        d7 = (double) $i1;

        goto label6;

     label4:
        $r3 = r0[1];

        $d2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toInteger(java.lang.Object)>($r3);

        d8 = $d2;

        $b4 = $d2 cmpg 0.0;

        $i13 = (int) $b4;

        if $i13 >= 0 goto label5;

        d8 = 0.0;

     label5:
        $d4 = d8 + d6;

        d7 = $d4;

        $d3 = (double) $i1;

        $b5 = $d4 cmpl $d3;

        $i14 = (int) $b5;

        if $i14 <= 0 goto label6;

        d7 = (double) $i1;

     label6:
        $i8 = (int) d6;

        $i9 = (int) d7;

        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>($i8, $i9);

        return $r4;
    }

    private static java.lang.String js_concat(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r0;
        java.lang.String[] r2;
        java.lang.StringBuffer $r3;
        int i0, $i1, i2, i3, i4;
        java.lang.String r1, $r4, $r5, $r7, $r9, $r10;
        java.lang.Object $r6, $r8;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object[];

        i0 = lengthof r0;

        if i0 != 0 goto label1;

        return r1;

     label1:
        if i0 != 1 goto label2;

        $r8 = r0[0];

        $r9 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>($r8);

        $r10 = virtualinvoke r1.<java.lang.String: java.lang.String concat(java.lang.String)>($r9);

        return $r10;

     label2:
        i2 = virtualinvoke r1.<java.lang.String: int length()>();

        r2 = newarray (java.lang.String)[i0];

        i3 = 0;

     label3:
        if i3 == i0 goto label4;

        $r6 = r0[i3];

        $r7 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>($r6);

        r2[i3] = $r7;

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        i2 = i2 + $i1;

        i3 = i3 + 1;

        goto label3;

     label4:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(int)>(i2);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        i4 = 0;

     label5:
        if i4 == i0 goto label6;

        $r5 = r2[i4];

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        i4 = i4 + 1;

        goto label5;

     label6:
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    private static java.lang.String js_slice(java.lang.String, java.lang.Object[])
    {
        byte $b2, $b3, $b4, $b5, $b6, $b7, $b9;
        java.lang.Object[] r0;
        int $i0, $i1, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        java.lang.String r1, $r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6, d7;
        java.lang.Object $r2, $r3;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object[];

        $i0 = lengthof r0;

        if $i0 == 0 goto label7;

        $r2 = r0[0];

        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toInteger(java.lang.Object)>($r2);

        d6 = $d0;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $b2 = $d0 cmpg 0.0;

        $i12 = (int) $b2;

        if $i12 >= 0 goto label1;

        $d5 = (double) $i1;

        d6 = $d0 + $d5;

        $b7 = d6 cmpg 0.0;

        $i13 = (int) $b7;

        if $i13 >= 0 goto label2;

        d6 = 0.0;

        goto label2;

     label1:
        $d1 = (double) $i1;

        $b3 = $d0 cmpl $d1;

        $i14 = (int) $b3;

        if $i14 <= 0 goto label2;

        d6 = (double) $i1;

     label2:
        $i8 = lengthof r0;

        if $i8 != 1 goto label3;

        d7 = (double) $i1;

        goto label6;

     label3:
        $r3 = r0[1];

        $d2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toInteger(java.lang.Object)>($r3);

        d7 = $d2;

        $b4 = $d2 cmpg 0.0;

        $i15 = (int) $b4;

        if $i15 >= 0 goto label4;

        $d4 = (double) $i1;

        d7 = $d2 + $d4;

        $b6 = d7 cmpg 0.0;

        $i16 = (int) $b6;

        if $i16 >= 0 goto label5;

        d7 = 0.0;

        goto label5;

     label4:
        $d3 = (double) $i1;

        $b5 = $d2 cmpl $d3;

        $i17 = (int) $b5;

        if $i17 <= 0 goto label5;

        d7 = (double) $i1;

     label5:
        $b9 = d7 cmpg d6;

        $i18 = (int) $b9;

        if $i18 >= 0 goto label6;

        d7 = d6;

     label6:
        $i10 = (int) d6;

        $i11 = (int) d7;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i10, $i11);

        return $r4;

     label7:
        return r1;
    }

    protected int findPrototypeId(java.lang.String)
    {
        byte b15;
        boolean $z0;
        org.mozilla.javascript.NativeString r1;
        int $i0, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35;
        java.lang.String r0, r2, r3, r4, r5;
        char $c1, $c2, $c3, $c4, $c5, $c6, $c7, $c8, $c9, $c10, $c11, $c12, $c13, $c14;

        r1 := @this: org.mozilla.javascript.NativeString;

        r0 := @parameter0: java.lang.String;

        b15 = 0;

        r2 = null;

        r5 = null;

        r4 = null;

        r3 = null;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        tableswitch($i0)
        {
            case 3: goto label01;
            case 4: goto label04;
            case 5: goto label06;
            case 6: goto label14;
            case 7: goto label23;
            case 8: goto label29;
            case 9: goto label32;
            case 10: goto label34;
            case 11: goto label35;
            case 12: goto label43;
            case 13: goto label41;
            case 14: goto label43;
            case 15: goto label43;
            case 16: goto label42;
            default: goto label43;
        };

     label01:
        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i16 = (int) $c8;

        if $i16 != 98 goto label02;

        $c13 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i17 = (int) $c13;

        if $i17 != 115 goto label43;

        $c14 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i18 = (int) $c14;

        if $i18 != 117 goto label43;

        b15 = 24;

        goto label44;

     label02:
        $i19 = (int) $c8;

        if $i19 != 103 goto label03;

        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i20 = (int) $c11;

        if $i20 != 98 goto label43;

        $c12 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i21 = (int) $c12;

        if $i21 != 105 goto label43;

        b15 = 21;

        goto label44;

     label03:
        $i22 = (int) $c8;

        if $i22 != 112 goto label43;

        $c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i23 = (int) $c9;

        if $i23 != 115 goto label43;

        $c10 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i24 = (int) $c10;

        if $i24 != 117 goto label43;

        b15 = 23;

        goto label44;

     label04:
        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i25 = (int) $c7;

        if $i25 != 98 goto label05;

        r2 = "bold";

        r5 = "bold";

        r4 = "bold";

        r3 = "bold";

        b15 = 16;

        goto label43;

     label05:
        $i26 = (int) $c7;

        if $i26 != 108 goto label43;

        r2 = "link";

        r5 = "link";

        r4 = "link";

        r3 = "link";

        b15 = 27;

        goto label43;

     label06:
        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(4);

        $i27 = (int) $c6;

        tableswitch($i27)
        {
            case 100: goto label07;
            case 101: goto label08;
            case 102: goto label13;
            case 103: goto label13;
            case 104: goto label09;
            case 105: goto label13;
            case 106: goto label13;
            case 107: goto label10;
            case 108: goto label11;
            case 109: goto label13;
            case 110: goto label13;
            case 111: goto label13;
            case 112: goto label13;
            case 113: goto label13;
            case 114: goto label13;
            case 115: goto label13;
            case 116: goto label12;
            default: goto label13;
        };

     label07:
        r2 = "fixed";

        r5 = "fixed";

        r4 = "fixed";

        r3 = "fixed";

        b15 = 18;

        goto label43;

     label08:
        r2 = "slice";

        r5 = "slice";

        r4 = "slice";

        r3 = "slice";

        b15 = 15;

        goto label43;

     label09:
        r2 = "match";

        r5 = "match";

        r4 = "match";

        r3 = "match";

        b15 = 31;

        goto label43;

     label10:
        r2 = "blink";

        r5 = "blink";

        r4 = "blink";

        r3 = "blink";

        b15 = 22;

        goto label43;

     label11:
        r2 = "small";

        r5 = "small";

        r4 = "small";

        r3 = "small";

        b15 = 20;

        goto label43;

     label12:
        r2 = "split";

        r5 = "split";

        r4 = "split";

        r3 = "split";

        b15 = 9;

        goto label43;

     label13:
        goto label43;

     label14:
        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i28 = (int) $c5;

        tableswitch($i28)
        {
            case 101: goto label15;
            case 102: goto label22;
            case 103: goto label22;
            case 104: goto label16;
            case 105: goto label22;
            case 106: goto label22;
            case 107: goto label22;
            case 108: goto label22;
            case 109: goto label22;
            case 110: goto label17;
            case 111: goto label18;
            case 112: goto label22;
            case 113: goto label19;
            case 114: goto label22;
            case 115: goto label22;
            case 116: goto label20;
            case 117: goto label21;
            default: goto label22;
        };

     label15:
        r2 = "search";

        r5 = "search";

        r4 = "search";

        r3 = "search";

        b15 = 32;

        goto label43;

     label16:
        r2 = "charAt";

        r5 = "charAt";

        r4 = "charAt";

        r3 = "charAt";

        b15 = 5;

        goto label43;

     label17:
        r2 = "anchor";

        r5 = "anchor";

        r4 = "anchor";

        r3 = "anchor";

        b15 = 28;

        goto label43;

     label18:
        r2 = "concat";

        r5 = "concat";

        r4 = "concat";

        r3 = "concat";

        b15 = 14;

        goto label43;

     label19:
        r2 = "equals";

        r5 = "equals";

        r4 = "equals";

        r3 = "equals";

        b15 = 29;

        goto label43;

     label20:
        r2 = "strike";

        r5 = "strike";

        r4 = "strike";

        r3 = "strike";

        b15 = 19;

        goto label43;

     label21:
        r2 = "substr";

        r5 = "substr";

        r4 = "substr";

        r3 = "substr";

        b15 = 13;

        goto label43;

     label22:
        goto label43;

     label23:
        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i29 = (int) $c4;

        lookupswitch($i29)
        {
            case 97: goto label24;
            case 101: goto label25;
            case 110: goto label26;
            case 116: goto label27;
            default: goto label28;
        };

     label24:
        r2 = "valueOf";

        r5 = "valueOf";

        r4 = "valueOf";

        r3 = "valueOf";

        b15 = 4;

        goto label43;

     label25:
        r2 = "replace";

        r5 = "replace";

        r4 = "replace";

        r3 = "replace";

        b15 = 33;

        goto label43;

     label26:
        r2 = "indexOf";

        r5 = "indexOf";

        r4 = "indexOf";

        r3 = "indexOf";

        b15 = 7;

        goto label43;

     label27:
        r2 = "italics";

        r5 = "italics";

        r4 = "italics";

        r3 = "italics";

        b15 = 17;

        goto label43;

     label28:
        goto label43;

     label29:
        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(4);

        $i30 = (int) $c3;

        if $i30 != 114 goto label30;

        r2 = "toString";

        r5 = "toString";

        r4 = "toString";

        r3 = "toString";

        b15 = 2;

        goto label43;

     label30:
        $i31 = (int) $c3;

        if $i31 != 115 goto label31;

        r2 = "fontsize";

        r5 = "fontsize";

        r4 = "fontsize";

        r3 = "fontsize";

        b15 = 25;

        goto label43;

     label31:
        $i32 = (int) $c3;

        if $i32 != 117 goto label43;

        r2 = "toSource";

        r5 = "toSource";

        r4 = "toSource";

        r3 = "toSource";

        b15 = 3;

        goto label43;

     label32:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i33 = (int) $c2;

        if $i33 != 102 goto label33;

        r2 = "fontcolor";

        r5 = "fontcolor";

        r4 = "fontcolor";

        r3 = "fontcolor";

        b15 = 26;

        goto label43;

     label33:
        $i34 = (int) $c2;

        if $i34 != 115 goto label43;

        r2 = "substring";

        r5 = "substring";

        r4 = "substring";

        r3 = "substring";

        b15 = 10;

        goto label43;

     label34:
        r2 = "charCodeAt";

        r5 = "charCodeAt";

        r4 = "charCodeAt";

        r3 = "charCodeAt";

        b15 = 6;

        goto label43;

     label35:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i35 = (int) $c1;

        lookupswitch($i35)
        {
            case 76: goto label36;
            case 85: goto label37;
            case 110: goto label38;
            case 115: goto label39;
            default: goto label40;
        };

     label36:
        r2 = "toLowerCase";

        r5 = "toLowerCase";

        r4 = "toLowerCase";

        r3 = "toLowerCase";

        b15 = 11;

        goto label43;

     label37:
        r2 = "toUpperCase";

        r5 = "toUpperCase";

        r4 = "toUpperCase";

        r3 = "toUpperCase";

        b15 = 12;

        goto label43;

     label38:
        r2 = "constructor";

        r5 = "constructor";

        r4 = "constructor";

        r3 = "constructor";

        b15 = 1;

        goto label43;

     label39:
        r2 = "lastIndexOf";

        r5 = "lastIndexOf";

        r4 = "lastIndexOf";

        r3 = "lastIndexOf";

        b15 = 8;

        goto label43;

     label40:
        goto label43;

     label41:
        r2 = "localeCompare";

        r5 = "localeCompare";

        r4 = "localeCompare";

        r3 = "localeCompare";

        b15 = 34;

        goto label43;

     label42:
        r2 = "equalsIgnoreCase";

        r5 = "equalsIgnoreCase";

        r4 = "equalsIgnoreCase";

        r3 = "equalsIgnoreCase";

        b15 = 30;

        goto label43;

     label43:
        if r5 == null goto label44;

        if r4 == r0 goto label44;

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label44;

        b15 = 0;

     label44:
        return b15;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        <org.mozilla.javascript.NativeString: int MAX_PROTOTYPE_ID> = 34;

        <org.mozilla.javascript.NativeString: int Id_localeCompare> = 34;

        <org.mozilla.javascript.NativeString: int Id_replace> = 33;

        <org.mozilla.javascript.NativeString: int Id_search> = 32;

        <org.mozilla.javascript.NativeString: int Id_match> = 31;

        <org.mozilla.javascript.NativeString: int Id_equalsIgnoreCase> = 30;

        <org.mozilla.javascript.NativeString: int Id_equals> = 29;

        <org.mozilla.javascript.NativeString: int Id_anchor> = 28;

        <org.mozilla.javascript.NativeString: int Id_link> = 27;

        <org.mozilla.javascript.NativeString: int Id_fontcolor> = 26;

        <org.mozilla.javascript.NativeString: int Id_fontsize> = 25;

        <org.mozilla.javascript.NativeString: int Id_sub> = 24;

        <org.mozilla.javascript.NativeString: int Id_sup> = 23;

        <org.mozilla.javascript.NativeString: int Id_blink> = 22;

        <org.mozilla.javascript.NativeString: int Id_big> = 21;

        <org.mozilla.javascript.NativeString: int Id_small> = 20;

        <org.mozilla.javascript.NativeString: int Id_strike> = 19;

        <org.mozilla.javascript.NativeString: int Id_fixed> = 18;

        <org.mozilla.javascript.NativeString: int Id_italics> = 17;

        <org.mozilla.javascript.NativeString: int Id_bold> = 16;

        <org.mozilla.javascript.NativeString: int Id_slice> = 15;

        <org.mozilla.javascript.NativeString: int Id_concat> = 14;

        <org.mozilla.javascript.NativeString: int Id_substr> = 13;

        <org.mozilla.javascript.NativeString: int Id_toUpperCase> = 12;

        <org.mozilla.javascript.NativeString: int Id_toLowerCase> = 11;

        <org.mozilla.javascript.NativeString: int Id_substring> = 10;

        <org.mozilla.javascript.NativeString: int Id_split> = 9;

        <org.mozilla.javascript.NativeString: int Id_lastIndexOf> = 8;

        <org.mozilla.javascript.NativeString: int Id_indexOf> = 7;

        <org.mozilla.javascript.NativeString: int Id_charCodeAt> = 6;

        <org.mozilla.javascript.NativeString: int Id_charAt> = 5;

        <org.mozilla.javascript.NativeString: int Id_valueOf> = 4;

        <org.mozilla.javascript.NativeString: int Id_toSource> = 3;

        <org.mozilla.javascript.NativeString: int Id_toString> = 2;

        <org.mozilla.javascript.NativeString: int Id_constructor> = 1;

        <org.mozilla.javascript.NativeString: int ConstructorId_fromCharCode> = -1;

        <org.mozilla.javascript.NativeString: int MAX_INSTANCE_ID> = 1;

        <org.mozilla.javascript.NativeString: int Id_length> = 1;

        <org.mozilla.javascript.NativeString: long serialVersionUID> = 920268368584188687L;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <org.mozilla.javascript.NativeString: java.lang.Object STRING_TAG> = $r0;

        return;
    }
}
