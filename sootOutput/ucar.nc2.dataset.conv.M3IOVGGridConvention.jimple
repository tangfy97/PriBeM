public class ucar.nc2.dataset.conv.M3IOVGGridConvention extends ucar.nc2.dataset.CoordSysBuilder
{
    private static final int GRDDED3;
    private static final int IDDATA3;
    private static final int PTRFLY3;
    private static final int MXLAYS3;
    private static final int MXVARS3;
    private static final int NAMLEN3;
    private static final int LATGRD3;
    private static final int LAMGRD3;
    private static final int MERGRD3;
    private static final int STEGRD3;
    private static final int UTMGRD3;
    private static final int POLGRD3;
    private static final int EQMGRD3;
    private static final int TRMGRD3;
    private static final int ALBGRD3;
    private static final int LEQGRD3;
    private static final int VGSGPH3;
    private static final int VGSGPN3;
    private static final int VGSIGZ3;
    private static final int VGPRES3;
    private static final int VGZVAL3;
    private static final int VGHVAL3;
    private static final int IMISS3;
    private static final double BADVAL3;
    private static final double AMISS3;
    private static final double SURFACE_PRESSURE_IN_MB;
    private ucar.nc2.dataset.CoordinateTransform ct;
    private ucar.nc2.dataset.NetcdfDataset ncd;

    public static boolean isMine(ucar.nc2.NetcdfFile)
    {
        ucar.nc2.Attribute $r1;
        ucar.nc2.NetcdfFile r0;
        boolean $z0, $z1;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        $r1 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("VGLVLS");

        if $r1 == null goto label1;

        $z0 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean isValidM3IOFile_(ucar.nc2.NetcdfFile)>(r0);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void <init>()
    {
        ucar.nc2.dataset.conv.M3IOVGGridConvention r0;

        r0 := @this: ucar.nc2.dataset.conv.M3IOVGGridConvention;

        specialinvoke r0.<ucar.nc2.dataset.CoordSysBuilder: void <init>()>();

        r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: ucar.nc2.dataset.CoordinateTransform ct> = null;

        r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: ucar.nc2.dataset.NetcdfDataset ncd> = null;

        r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: java.lang.String conventionName> = "M3IOVGGrid";

        return;
    }

    public void augmentDataset(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask)
    {
        ucar.nc2.util.CancelTask r2;
        ucar.nc2.dataset.NetcdfDataset r1;
        ucar.nc2.dataset.conv.M3IOVGGridConvention r0;

        r0 := @this: ucar.nc2.dataset.conv.M3IOVGGridConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: ucar.nc2.util.CancelTask;

        r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: ucar.nc2.dataset.NetcdfDataset ncd> = r1;

        virtualinvoke r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: void constructCoordAxes(ucar.nc2.dataset.NetcdfDataset)>(r1);

        virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        return;
    }

    protected void constructCoordAxes(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.unidata.geoloc.ProjectionImpl r23;
        byte $b1;
        ucar.unidata.geoloc.projection.TransverseMercator $r26, $r31;
        boolean $z0;
        ucar.nc2.dataset.VariableDS $r10;
        ucar.nc2.dataset.conv.M3IOVGGridConvention r0;
        ucar.unidata.geoloc.projection.Stereographic $r27, $r29;
        ucar.nc2.Attribute $r35;
        ucar.unidata.geoloc.projection.AlbersEqualArea $r32;
        ucar.unidata.geoloc.projection.UtmProjection $r28;
        ucar.unidata.geoloc.projection.Mercator $r30;
        ucar.nc2.dataset.CoordinateTransform $r9;
        int $i0, $i2, $i3;
        ucar.nc2.Variable $r2;
        java.lang.String r3, r4, $r8, $r21, $r22;
        ucar.unidata.geoloc.projection.LambertAzimuthalEqualArea $r33;
        double $d0, $d1, $d2, $d3, $d4;
        ucar.nc2.dataset.ProjectionCT $r34;
        ucar.unidata.geoloc.projection.LambertConformal $r25;
        ucar.nc2.dataset.NetcdfDataset $r1, r6;
        ucar.unidata.geoloc.projection.LatLonProjection $r24;

        r0 := @this: ucar.nc2.dataset.conv.M3IOVGGridConvention;

        r6 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: ucar.nc2.dataset.NetcdfDataset ncd>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("x");

        if null == $r2 goto label01;

        return;

     label01:
        $i0 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: int intAttribute(java.lang.String)>("GDTYP");

        $d0 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: double doubleAttribute(java.lang.String)>("P_ALP");

        $d1 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: double doubleAttribute(java.lang.String)>("P_BET");

        $d2 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: double doubleAttribute(java.lang.String)>("P_GAM");

        $d3 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: double doubleAttribute(java.lang.String)>("XCENT");

        $d4 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: double doubleAttribute(java.lang.String)>("YCENT");

        if $i0 != 1 goto label02;

        $r21 = "degrees east";

        goto label03;

     label02:
        $r21 = "m";

     label03:
        r3 = $r21;

        if $i0 != 1 goto label04;

        $r22 = "degrees north";

        goto label05;

     label04:
        $r22 = "m";

     label05:
        r4 = $r22;

        r23 = null;

        tableswitch($i0)
        {
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label08;
            case 4: goto label09;
            case 5: goto label10;
            case 6: goto label13;
            case 7: goto label14;
            case 8: goto label15;
            case 9: goto label16;
            case 10: goto label17;
            default: goto label18;
        };

     label06:
        $r24 = new ucar.unidata.geoloc.projection.LatLonProjection;

        specialinvoke $r24.<ucar.unidata.geoloc.projection.LatLonProjection: void <init>()>();

        r23 = $r24;

        goto label18;

     label07:
        $r25 = new ucar.unidata.geoloc.projection.LambertConformal;

        specialinvoke $r25.<ucar.unidata.geoloc.projection.LambertConformal: void <init>(double,double,double,double)>($d4, $d2, $d0, $d1);

        r23 = $r25;

        goto label18;

     label08:
        $r26 = new ucar.unidata.geoloc.projection.TransverseMercator;

        specialinvoke $r26.<ucar.unidata.geoloc.projection.TransverseMercator: void <init>(double,double,double)>($d0, $d1, 1.0);

        r23 = $r26;

        goto label18;

     label09:
        $r27 = new ucar.unidata.geoloc.projection.Stereographic;

        specialinvoke $r27.<ucar.unidata.geoloc.projection.Stereographic: void <init>(double,double,double)>($d0, $d1, 1.0);

        r23 = $r27;

        goto label18;

     label10:
        $r28 = new ucar.unidata.geoloc.projection.UtmProjection;

        $i2 = (int) $d0;

        $b1 = $d4 cmpl 0.0;

        $i3 = (int) $b1;

        if $i3 < 0 goto label11;

        $z0 = 1;

        goto label12;

     label11:
        $z0 = 0;

     label12:
        specialinvoke $r28.<ucar.unidata.geoloc.projection.UtmProjection: void <init>(double,double,int,boolean)>(6370000.0, 1.0E30, $i2, $z0);

        r23 = $r28;

        goto label18;

     label13:
        $r29 = new ucar.unidata.geoloc.projection.Stereographic;

        specialinvoke $r29.<ucar.unidata.geoloc.projection.Stereographic: void <init>(double,double,double)>($d4, $d3, 1.0);

        r23 = $r29;

        goto label18;

     label14:
        $r30 = new ucar.unidata.geoloc.projection.Mercator;

        specialinvoke $r30.<ucar.unidata.geoloc.projection.Mercator: void <init>(double,double)>($d2, $d0);

        r23 = $r30;

        goto label18;

     label15:
        $r31 = new ucar.unidata.geoloc.projection.TransverseMercator;

        specialinvoke $r31.<ucar.unidata.geoloc.projection.TransverseMercator: void <init>(double,double,double)>($d0, $d2, 1.0);

        r23 = $r31;

        goto label18;

     label16:
        $r32 = new ucar.unidata.geoloc.projection.AlbersEqualArea;

        specialinvoke $r32.<ucar.unidata.geoloc.projection.AlbersEqualArea: void <init>(double,double,double,double)>($d4, $d3, $d0, $d1);

        r23 = $r32;

        goto label18;

     label17:
        $r33 = new ucar.unidata.geoloc.projection.LambertAzimuthalEqualArea;

        specialinvoke $r33.<ucar.unidata.geoloc.projection.LambertAzimuthalEqualArea: void <init>(double,double,double,double,double)>($d4, $d3, 0.0, 0.0, 6370000.0);

        r23 = $r33;

        goto label18;

     label18:
        if r23 == null goto label19;

        $r34 = new ucar.nc2.dataset.ProjectionCT;

        $r8 = virtualinvoke r23.<ucar.unidata.geoloc.ProjectionImpl: java.lang.String getClassName()>();

        specialinvoke $r34.<ucar.nc2.dataset.ProjectionCT: void <init>(java.lang.String,java.lang.String,ucar.unidata.geoloc.ProjectionImpl)>($r8, "FGDC", r23);

        r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: ucar.nc2.dataset.CoordinateTransform ct> = $r34;

        $r9 = r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: ucar.nc2.dataset.CoordinateTransform ct>;

        $r10 = virtualinvoke r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: ucar.nc2.dataset.VariableDS makeCoordinateTransformVariable(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.CoordinateTransform)>(r6, $r9);

        $r35 = new ucar.nc2.Attribute;

        specialinvoke $r35.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisTypes", "GeoX GeoY");

        virtualinvoke $r10.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r35);

        virtualinvoke r6.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r10);

     label19:
        specialinvoke r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: void makeXCoordAxis(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r6, r3);

        specialinvoke r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: void makeYCoordAxis(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r6, r4);

        specialinvoke r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: void makeZCoordAxis(ucar.nc2.dataset.NetcdfDataset)>(r6);

        specialinvoke r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: void makeTimeCoordAxis(ucar.nc2.dataset.NetcdfDataset)>(r6);

        return;
    }

    private void makeXCoordAxis(ucar.nc2.dataset.NetcdfDataset, java.lang.String)
    {
        ucar.nc2.dataset.CoordinateAxis1D $r4;
        ucar.nc2.constants.AxisType $r11;
        int $i0;
        java.lang.String r2, r3, $r6, $r12, $r13;
        boolean $z0, $z1;
        double $d0, $d1, $d2, $d3, $d5, $d6;
        ucar.nc2.dataset.conv.M3IOVGGridConvention r7;
        ucar.ma2.DataType $r5;
        ucar.nc2.Attribute $r8, $r9, $r10;
        ucar.nc2.Dimension $r1;
        ucar.nc2.dataset.NetcdfDataset r0;

        r7 := @this: ucar.nc2.dataset.conv.M3IOVGGridConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("COL");

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("m");

        if $z0 == 0 goto label1;

        $r13 = "km";

        goto label2;

     label1:
        $r13 = r2;

     label2:
        r3 = $r13;

        $r4 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r5 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r6 = virtualinvoke $r1.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r4.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r0, null, "x", $r5, $r6, $r13, "synthesized x coordinate from XORIG, XCELL global attributes");

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("m");

        if $z1 == 0 goto label3;

        $d6 = 0.001;

        $d5 = 0.001;

        goto label4;

     label3:
        $d6 = 1.0;

        $d5 = 1.0;

     label4:
        $d0 = specialinvoke r7.<ucar.nc2.dataset.conv.M3IOVGGridConvention: double doubleAttribute(java.lang.String)>("XORIG");

        $d2 = $d0 * $d6;

        $d1 = specialinvoke r7.<ucar.nc2.dataset.conv.M3IOVGGridConvention: double doubleAttribute(java.lang.String)>("XCELL");

        $d3 = $d1 * $d5;

        $i0 = virtualinvoke $r1.<ucar.nc2.Dimension: int getLength()>();

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: void setValues(ucar.nc2.Variable,int,double,double)>($r4, $i0, $d2, $d3);

        $r8 = new ucar.nc2.Attribute;

        specialinvoke $r8.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", r3);

        virtualinvoke $r4.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r8);

        $r9 = new ucar.nc2.Attribute;

        specialinvoke $r9.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "synthesized x coordinate from XORIG, XCELL global attributes");

        virtualinvoke $r4.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r9);

        $r10 = new ucar.nc2.Attribute;

        $r11 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoX>;

        $r12 = virtualinvoke $r11.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r10.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r12);

        virtualinvoke $r4.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r10);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r4);

        return;
    }

    private void makeYCoordAxis(ucar.nc2.dataset.NetcdfDataset, java.lang.String)
    {
        ucar.nc2.dataset.CoordinateAxis1D $r4;
        ucar.nc2.constants.AxisType $r11;
        int $i0;
        java.lang.String r2, r3, $r6, $r12, $r13;
        boolean $z0, $z1;
        double $d0, $d1, $d2, $d3, $d5, $d6;
        ucar.nc2.dataset.conv.M3IOVGGridConvention r7;
        ucar.ma2.DataType $r5;
        ucar.nc2.Attribute $r8, $r9, $r10;
        ucar.nc2.Dimension $r1;
        ucar.nc2.dataset.NetcdfDataset r0;

        r7 := @this: ucar.nc2.dataset.conv.M3IOVGGridConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("ROW");

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("m");

        if $z0 == 0 goto label1;

        $r13 = "km";

        goto label2;

     label1:
        $r13 = r2;

     label2:
        r3 = $r13;

        $r4 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r5 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r6 = virtualinvoke $r1.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r4.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r0, null, "y", $r5, $r6, $r13, "synthesized y coordinate from YORIG, YCELL global attributes");

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("m");

        if $z1 == 0 goto label3;

        $d6 = 0.001;

        $d5 = 0.001;

        goto label4;

     label3:
        $d6 = 1.0;

        $d5 = 1.0;

     label4:
        $d0 = specialinvoke r7.<ucar.nc2.dataset.conv.M3IOVGGridConvention: double doubleAttribute(java.lang.String)>("YORIG");

        $d2 = $d0 * $d6;

        $d1 = specialinvoke r7.<ucar.nc2.dataset.conv.M3IOVGGridConvention: double doubleAttribute(java.lang.String)>("YCELL");

        $d3 = $d1 * $d5;

        $i0 = virtualinvoke $r1.<ucar.nc2.Dimension: int getLength()>();

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: void setValues(ucar.nc2.Variable,int,double,double)>($r4, $i0, $d2, $d3);

        $r8 = new ucar.nc2.Attribute;

        specialinvoke $r8.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", r3);

        virtualinvoke $r4.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r8);

        $r9 = new ucar.nc2.Attribute;

        specialinvoke $r9.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "synthesized y coordinate from YORIG, YCELL global attributes");

        virtualinvoke $r4.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r9);

        $r10 = new ucar.nc2.Attribute;

        $r11 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoY>;

        $r12 = virtualinvoke $r11.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r10.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r12);

        virtualinvoke $r4.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r10);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r4);

        return;
    }

    private void makeZCoordAxis(ucar.nc2.dataset.NetcdfDataset)
    {
        double[] $r6, $r7;
        java.util.ArrayList $r8;
        ucar.nc2.dataset.CoordinateAxis1D $r2;
        ucar.nc2.constants.AxisType $r12;
        int $i0, i1, i2;
        java.lang.String $r4, $r13, $r14;
        double $d0, $d1, $d2;
        ucar.nc2.dataset.conv.M3IOVGGridConvention r5;
        ucar.ma2.DataType $r3;
        ucar.nc2.Attribute $r9, $r10, $r11;
        ucar.nc2.Dimension $r1;
        ucar.nc2.dataset.NetcdfDataset r0;

        r5 := @this: ucar.nc2.dataset.conv.M3IOVGGridConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("LAY");

        $r2 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r3 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r4 = virtualinvoke $r1.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r2.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r0, null, "z", $r3, $r4, "km", "synthesized z coordinate from VGTYP, VGTOP, VGLVLS global attributes");

        $i0 = specialinvoke r5.<ucar.nc2.dataset.conv.M3IOVGGridConvention: int intAttribute(java.lang.String)>("VGTYP");

        $d0 = specialinvoke r5.<ucar.nc2.dataset.conv.M3IOVGGridConvention: double doubleAttribute(java.lang.String)>("VGTOP");

        $r6 = specialinvoke r5.<ucar.nc2.dataset.conv.M3IOVGGridConvention: double[] doubleArrayAttribute(java.lang.String)>("VGLVLS");

        $r7 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: double[] convertVGLevels_(int,double,double[])>($i0, $d0, $r6);

        i1 = lengthof $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(i1);

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $d1 = $r7[i2];

        $d2 = $d1 * 0.001;

        $r14 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d2);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r14);

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: void setValues(ucar.nc2.Variable,java.util.List)>($r2, $r8);

        $r9 = new ucar.nc2.Attribute;

        specialinvoke $r9.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "km");

        virtualinvoke $r2.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r9);

        $r10 = new ucar.nc2.Attribute;

        specialinvoke $r10.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "synthesized z coordinate from VGTYP, VGTOP, VGLVLS global attributes");

        virtualinvoke $r2.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r10);

        $r11 = new ucar.nc2.Attribute;

        $r12 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        $r13 = virtualinvoke $r12.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r11.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r13);

        virtualinvoke $r2.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r11);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r2);

        return;
    }

    private void makeTimeCoordAxis(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.CoordinateAxis1D $r4;
        ucar.nc2.constants.AxisType $r9;
        int $i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, i11, $i12, $i13, i14;
        java.lang.String $r3, $r10;
        ucar.nc2.dataset.conv.M3IOVGGridConvention r0;
        ucar.ma2.DataType $r5;
        ucar.ma2.ArrayInt$D1 $r2;
        ucar.nc2.Attribute $r6, $r7, $r8;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.dataset.conv.M3IOVGGridConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $i0 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: int intAttribute(java.lang.String)>("TSTEP");

        i1 = $i0 / 10000;

        i2 = i1 * 10000;

        i3 = $i0 - i2;

        i4 = i3 / 100;

        i5 = i4 * 100;

        i6 = i3 - i5;

        $i7 = i1 * 60;

        $i9 = $i7 * 60;

        $i8 = i4 * 60;

        $i10 = $i9 + $i8;

        i11 = $i10 + i6;

        $i12 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: int dimension_(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "TSTEP");

        $r2 = new ucar.ma2.ArrayInt$D1;

        specialinvoke $r2.<ucar.ma2.ArrayInt$D1: void <init>(int)>($i12);

        i14 = 0;

     label1:
        if i14 >= $i12 goto label2;

        $i13 = i14 * i11;

        virtualinvoke $r2.<ucar.ma2.ArrayInt$D1: void set(int,int)>(i14, $i13);

        i14 = i14 + 1;

        goto label1;

     label2:
        $r3 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: java.lang.String timeUnits()>();

        $r4 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r5 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        specialinvoke $r4.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r1, null, "time", $r5, "TSTEP", $r3, "synthesized time coordinate from SDATE, STIME, STEP global attributes");

        virtualinvoke $r4.<ucar.nc2.dataset.CoordinateAxis1D: void setCachedData(ucar.ma2.Array,boolean)>($r2, 1);

        $r6 = new ucar.nc2.Attribute;

        specialinvoke $r6.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "synthesized time coordinate from SDATE, STIME, STEP global attributes");

        virtualinvoke $r4.<ucar.nc2.dataset.CoordinateAxis1D: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r6);

        $r7 = new ucar.nc2.Attribute;

        specialinvoke $r7.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r3);

        virtualinvoke $r4.<ucar.nc2.dataset.CoordinateAxis1D: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r7);

        $r8 = new ucar.nc2.Attribute;

        $r9 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r10 = virtualinvoke $r9.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r8.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r10);

        virtualinvoke $r4.<ucar.nc2.dataset.CoordinateAxis1D: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r8);

        virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r4);

        return;
    }

    private java.lang.String timeUnits()
    {
        java.util.Date $r7;
        java.text.SimpleDateFormat $r3;
        int $i0, $i1, i2, i3, i4, i5, i6, i7, i8, i9;
        java.lang.String $r8, $r11;
        java.util.GregorianCalendar $r1;
        java.util.TimeZone $r4;
        ucar.nc2.dataset.conv.M3IOVGGridConvention r0;
        java.lang.StringBuilder $r5, $r6, $r9, $r10;
        java.util.SimpleTimeZone $r2;

        r0 := @this: ucar.nc2.dataset.conv.M3IOVGGridConvention;

        $i0 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: int intAttribute(java.lang.String)>("SDATE");

        $i1 = specialinvoke r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: int intAttribute(java.lang.String)>("STIME");

        i2 = $i0 / 1000;

        i3 = $i0 % 1000;

        i4 = $i1 / 10000;

        i5 = i4 * 10000;

        i6 = $i1 - i5;

        i7 = i6 / 100;

        i8 = i7 * 100;

        i9 = i6 - i8;

        $r1 = new java.util.GregorianCalendar;

        $r2 = new java.util.SimpleTimeZone;

        specialinvoke $r2.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(0, "GMT");

        specialinvoke $r1.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>($r2);

        virtualinvoke $r1.<java.util.Calendar: void clear()>();

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(1, i2);

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(6, i3);

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(11, i4);

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(12, i7);

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(13, i9);

        $r3 = new java.text.SimpleDateFormat;

        specialinvoke $r3.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss");

        $r4 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke $r3.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("seconds since ");

        $r7 = virtualinvoke $r1.<java.util.Calendar: java.util.Date getTime()>();

        $r8 = virtualinvoke $r3.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r7);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" UTC");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    protected ucar.nc2.constants.AxisType getAxisType(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.dataset.VariableEnhanced)
    {
        ucar.nc2.constants.AxisType $r3, $r4, $r5, $r6, $r7, $r8;
        ucar.nc2.Variable r1;
        java.lang.String $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        ucar.nc2.dataset.conv.M3IOVGGridConvention r9;
        ucar.nc2.dataset.VariableEnhanced r0;
        ucar.nc2.dataset.NetcdfDataset r10;

        r9 := @this: ucar.nc2.dataset.conv.M3IOVGGridConvention;

        r10 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r0 := @parameter1: ucar.nc2.dataset.VariableEnhanced;

        r1 = (ucar.nc2.Variable) r0;

        $r2 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("x");

        if $z0 == 0 goto label1;

        $r8 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoX>;

        return $r8;

     label1:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lon");

        if $z1 == 0 goto label2;

        $r7 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        return $r7;

     label2:
        $z2 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("y");

        if $z2 == 0 goto label3;

        $r6 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoY>;

        return $r6;

     label3:
        $z3 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lat");

        if $z3 == 0 goto label4;

        $r5 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        return $r5;

     label4:
        $z4 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("time");

        if $z4 == 0 goto label5;

        $r4 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        return $r4;

     label5:
        $z5 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("z");

        if $z5 == 0 goto label6;

        $r3 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        return $r3;

     label6:
        return null;
    }

    protected java.lang.String getZPositive(ucar.nc2.dataset.CoordinateAxis)
    {
        ucar.nc2.dataset.CoordinateAxis r0;
        ucar.nc2.dataset.conv.M3IOVGGridConvention r2;
        java.lang.String $r1, $r3;
        boolean $z0, $z1;

        r2 := @this: ucar.nc2.dataset.conv.M3IOVGGridConvention;

        r0 := @parameter0: ucar.nc2.dataset.CoordinateAxis;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.CoordinateAxis: java.lang.String getUnitsString()>();

        if $r1 == null goto label1;

        $z0 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>("m", $r1);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        $r3 = "up";

        goto label4;

     label3:
        $r3 = "";

     label4:
        return $r3;
    }

    protected java.util.List getCoordinateTransforms(ucar.nc2.dataset.CoordinateSystem)
    {
        ucar.nc2.dataset.CoordinateAxis $r2, $r3;
        ucar.nc2.dataset.CoordinateTransform $r5;
        ucar.nc2.dataset.conv.M3IOVGGridConvention r4;
        ucar.nc2.dataset.CoordinateSystem r1;
        java.util.ArrayList $r0;

        r4 := @this: ucar.nc2.dataset.conv.M3IOVGGridConvention;

        r1 := @parameter0: ucar.nc2.dataset.CoordinateSystem;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateSystem: ucar.nc2.dataset.CoordinateAxis getXaxis()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateSystem: ucar.nc2.dataset.CoordinateAxis getYaxis()>();

        if $r3 == null goto label1;

        $r5 = r4.<ucar.nc2.dataset.conv.M3IOVGGridConvention: ucar.nc2.dataset.CoordinateTransform ct>;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

     label1:
        return $r0;
    }

    protected boolean hasMissingData(ucar.nc2.Variable)
    {
        ucar.nc2.Variable r1;
        ucar.nc2.dataset.conv.M3IOVGGridConvention r0;

        r0 := @this: ucar.nc2.dataset.conv.M3IOVGGridConvention;

        r1 := @parameter0: ucar.nc2.Variable;

        return 1;
    }

    protected double getMissingDataValue(ucar.nc2.Variable)
    {
        ucar.nc2.Variable r1;
        ucar.nc2.dataset.conv.M3IOVGGridConvention r0;

        r0 := @this: ucar.nc2.dataset.conv.M3IOVGGridConvention;

        r1 := @parameter0: ucar.nc2.Variable;

        return -9.999E36;
    }

    private int intAttribute(java.lang.String)
    {
        ucar.nc2.dataset.conv.M3IOVGGridConvention r0;
        int $i0;
        java.lang.String r1;
        ucar.nc2.dataset.NetcdfDataset $r2;

        r0 := @this: ucar.nc2.dataset.conv.M3IOVGGridConvention;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: ucar.nc2.dataset.NetcdfDataset ncd>;

        $i0 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: int intAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>($r2, r1);

        return $i0;
    }

    private double doubleAttribute(java.lang.String)
    {
        ucar.nc2.dataset.conv.M3IOVGGridConvention r0;
        java.lang.String r1;
        ucar.nc2.dataset.NetcdfDataset $r2;
        double $d0;

        r0 := @this: ucar.nc2.dataset.conv.M3IOVGGridConvention;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: ucar.nc2.dataset.NetcdfDataset ncd>;

        $d0 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: double doubleAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>($r2, r1);

        return $d0;
    }

    private double[] doubleArrayAttribute(java.lang.String)
    {
        ucar.nc2.dataset.conv.M3IOVGGridConvention r0;
        double[] $r3;
        java.lang.String r1;
        ucar.nc2.dataset.NetcdfDataset $r2;

        r0 := @this: ucar.nc2.dataset.conv.M3IOVGGridConvention;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.nc2.dataset.conv.M3IOVGGridConvention: ucar.nc2.dataset.NetcdfDataset ncd>;

        $r3 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: double[] doubleArrayAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>($r2, r1);

        return $r3;
    }

    private static int intAttribute_(ucar.nc2.NetcdfFile, java.lang.String)
    {
        ucar.nc2.Attribute $r2;
        int i0;
        ucar.nc2.NetcdfFile r0;
        java.lang.String r1;
        java.lang.Number $r3;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: java.lang.String;

        i0 = 0;

        $r2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

     label1:
        return i0;
    }

    private static double doubleAttribute_(ucar.nc2.NetcdfFile, java.lang.String)
    {
        ucar.nc2.Attribute $r2;
        ucar.nc2.NetcdfFile r0;
        java.lang.String r1;
        java.lang.Number $r3;
        double d0;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: java.lang.String;

        d0 = 0.0;

        $r2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        d0 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

     label1:
        return d0;
    }

    private static double[] doubleArrayAttribute_(ucar.nc2.NetcdfFile, java.lang.String)
    {
        double[] r4;
        ucar.nc2.Attribute $r2;
        int $i0, $i1, i2;
        ucar.nc2.NetcdfFile r0;
        java.lang.String r1;
        java.lang.Number $r3;
        boolean $z0;
        double $d0;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: java.lang.String;

        r4 = null;

        $r2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>(r1);

        if $r2 == null goto label2;

        $z0 = virtualinvoke $r2.<ucar.nc2.Attribute: boolean isArray()>();

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke $r2.<ucar.nc2.Attribute: int getLength()>();

        if $i0 <= 1 goto label2;

        $i1 = virtualinvoke $r2.<ucar.nc2.Attribute: int getLength()>();

        r4 = newarray (double)[$i1];

        i2 = 0;

     label1:
        if i2 >= $i1 goto label2;

        $r3 = virtualinvoke $r2.<ucar.nc2.Attribute: java.lang.Number getNumericValue(int)>(i2);

        $d0 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        r4[i2] = $d0;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r4;
    }

    private static boolean isValidM3IOFile_(ucar.nc2.NetcdfFile)
    {
        ucar.nc2.Attribute $r4, $r5, $r6, $r8;
        double[] $r7;
        int[] $r0, $r3, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, z44, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, $z53, $z54, z56, $z57, $z58, z60, $z62, $z63, $z64, $z65, $z66, $z67, $z68, $z69, $z70, $z71, $z72, $z73, $z74, $z75, $z76;
        ucar.nc2.NetcdfFile r2;
        java.lang.String[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i14, $i15;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;

        r2 := @parameter0: ucar.nc2.NetcdfFile;

        $r0 = newarray (int)[3];

        $r0[0] = 1;

        $r0[1] = 3;

        $r0[2] = 8;

        $r1 = newarray (java.lang.String)[6];

        $r1[0] = "TSTEP";

        $r1[1] = "DATE-TIME";

        $r1[2] = "LAY";

        $r1[3] = "VAR";

        $r1[4] = "ROW";

        $r1[5] = "COL";

        $z0 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasDimensions_(ucar.nc2.NetcdfFile,java.lang.String[])>(r2, $r1);

        if $z0 == 0 goto label01;

        $z30 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasStringAttribute_(ucar.nc2.NetcdfFile,java.lang.String,int)>(r2, "EXEC_ID", 80);

        if $z30 == 0 goto label01;

        $z31 = 1;

        goto label02;

     label01:
        $z31 = 0;

     label02:
        if $z31 == 0 goto label03;

        $z29 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasIntAttributeIn_(ucar.nc2.NetcdfFile,java.lang.String,int[])>(r2, "FTYPE", $r0);

        if $z29 == 0 goto label03;

        $z32 = 1;

        goto label04;

     label03:
        $z32 = 0;

     label04:
        if $z32 == 0 goto label05;

        $z28 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasYYYYDDDAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "CDATE");

        if $z28 == 0 goto label05;

        $z33 = 1;

        goto label06;

     label05:
        $z33 = 0;

     label06:
        if $z33 == 0 goto label07;

        $z27 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasHHMMSSAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "CTIME");

        if $z27 == 0 goto label07;

        $z34 = 1;

        goto label08;

     label07:
        $z34 = 0;

     label08:
        if $z34 == 0 goto label09;

        $z26 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasYYYYDDDAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "SDATE");

        if $z26 == 0 goto label09;

        $z35 = 1;

        goto label10;

     label09:
        $z35 = 0;

     label10:
        if $z35 == 0 goto label11;

        $z25 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasHHMMSSAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "STIME");

        if $z25 == 0 goto label11;

        $z36 = 1;

        goto label12;

     label11:
        $z36 = 0;

     label12:
        if $z36 == 0 goto label13;

        $z24 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasHHMMSSAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "TSTEP");

        if $z24 == 0 goto label13;

        $z37 = 1;

        goto label14;

     label13:
        $z37 = 0;

     label14:
        if $z37 == 0 goto label15;

        $z23 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasIntAttribute_(ucar.nc2.NetcdfFile,java.lang.String,int,int)>(r2, "NTHIK", 1, 2147483647);

        if $z23 == 0 goto label15;

        $z38 = 1;

        goto label16;

     label15:
        $z38 = 0;

     label16:
        if $z38 == 0 goto label17;

        $z22 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasIntAttribute_(ucar.nc2.NetcdfFile,java.lang.String,int,int)>(r2, "NCOLS", 1, 2147483647);

        if $z22 == 0 goto label17;

        $z39 = 1;

        goto label18;

     label17:
        $z39 = 0;

     label18:
        if $z39 == 0 goto label19;

        $z21 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasIntAttribute_(ucar.nc2.NetcdfFile,java.lang.String,int,int)>(r2, "NROWS", 1, 2147483647);

        if $z21 == 0 goto label19;

        $z40 = 1;

        goto label20;

     label19:
        $z40 = 0;

     label20:
        if $z40 == 0 goto label21;

        $z20 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasIntAttribute_(ucar.nc2.NetcdfFile,java.lang.String,int,int)>(r2, "NLAYS", 1, 100);

        if $z20 == 0 goto label21;

        $z41 = 1;

        goto label22;

     label21:
        $z41 = 0;

     label22:
        if $z41 == 0 goto label23;

        $z19 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasIntAttribute_(ucar.nc2.NetcdfFile,java.lang.String,int,int)>(r2, "NVARS", 1, 120);

        if $z19 == 0 goto label23;

        $z42 = 1;

        goto label24;

     label23:
        $z42 = 0;

     label24:
        if $z42 == 0 goto label25;

        $z18 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasDimension_(ucar.nc2.NetcdfFile,java.lang.String,int,int)>(r2, "TSTEP", 1, 2147483647);

        if $z18 == 0 goto label25;

        $z76 = 1;

        $z75 = 1;

        goto label26;

     label25:
        $z76 = 0;

        $z75 = 0;

     label26:
        z44 = $z75;

        if $z76 == 0 goto label29;

        staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: int dimension_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "TSTEP");

        staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: int intAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "NVARS");

        staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: int intAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "NLAYS");

        $i9 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: int intAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "NROWS");

        $i10 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: int intAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "NCOLS");

        $i11 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: int intAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "NTHIK");

        $i12 = staticinvoke <java.lang.Math: int min(int,int)>($i9, $i10);

        i13 = 21474836 / $i9;

        if $i11 > $i12 goto label27;

        if $i10 > i13 goto label27;

        $z45 = 1;

        goto label28;

     label27:
        $z45 = 0;

     label28:
        z44 = $z45;

     label29:
        $r9 = newarray (int)[10];

        $r9[0] = 1;

        $r9[1] = 2;

        $r9[2] = 3;

        $r9[3] = 4;

        $r9[4] = 5;

        $r9[5] = 6;

        $r9[6] = 7;

        $r9[7] = 8;

        $r9[8] = 9;

        $r9[9] = 10;

        if z44 == 0 goto label30;

        $z17 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasIntAttributeIn_(ucar.nc2.NetcdfFile,java.lang.String,int[])>(r2, "GDTYP", $r9);

        if $z17 == 0 goto label30;

        $z46 = 1;

        goto label31;

     label30:
        $z46 = 0;

     label31:
        if $z46 == 0 goto label32;

        $z16 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasDoubleAttribute_(ucar.nc2.NetcdfFile,java.lang.String,double,double)>(r2, "P_ALP", -90.0, 90.0);

        if $z16 == 0 goto label32;

        $z47 = 1;

        goto label33;

     label32:
        $z47 = 0;

     label33:
        if $z47 == 0 goto label34;

        $z15 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasDoubleAttribute_(ucar.nc2.NetcdfFile,java.lang.String,double,double)>(r2, "P_BET", -90.0, 90.0);

        if $z15 == 0 goto label34;

        $z48 = 1;

        goto label35;

     label34:
        $z48 = 0;

     label35:
        if $z48 == 0 goto label36;

        $z14 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasDoubleAttribute_(ucar.nc2.NetcdfFile,java.lang.String,double,double)>(r2, "P_GAM", -180.0, 180.0);

        if $z14 == 0 goto label36;

        $z49 = 1;

        goto label37;

     label36:
        $z49 = 0;

     label37:
        if $z49 == 0 goto label38;

        $z13 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasDoubleAttribute_(ucar.nc2.NetcdfFile,java.lang.String,double,double)>(r2, "XCENT", -180.0, 180.0);

        if $z13 == 0 goto label38;

        $z50 = 1;

        goto label39;

     label38:
        $z50 = 0;

     label39:
        if $z50 == 0 goto label40;

        $z12 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasDoubleAttribute_(ucar.nc2.NetcdfFile,java.lang.String,double,double)>(r2, "YCENT", -90.0, 90.0);

        if $z12 == 0 goto label40;

        $z51 = 1;

        goto label41;

     label40:
        $z51 = 0;

     label41:
        if $z51 == 0 goto label42;

        $z11 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasDoubleAttribute_(ucar.nc2.NetcdfFile,java.lang.String,double,double)>(r2, "XORIG", -3.4028234663852886E38, 3.4028234663852886E38);

        if $z11 == 0 goto label42;

        $z52 = 1;

        goto label43;

     label42:
        $z52 = 0;

     label43:
        if $z52 == 0 goto label44;

        $z10 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasDoubleAttribute_(ucar.nc2.NetcdfFile,java.lang.String,double,double)>(r2, "YORIG", -3.4028234663852886E38, 3.4028234663852886E38);

        if $z10 == 0 goto label44;

        $z53 = 1;

        goto label45;

     label44:
        $z53 = 0;

     label45:
        if $z53 == 0 goto label46;

        $z9 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasDoubleAttribute_(ucar.nc2.NetcdfFile,java.lang.String,double,double)>(r2, "XCELL", 1.401298464324817E-45, 3.4028234663852886E38);

        if $z9 == 0 goto label46;

        $z54 = 1;

        goto label47;

     label46:
        $z54 = 0;

     label47:
        if $z54 == 0 goto label48;

        $z8 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasDoubleAttribute_(ucar.nc2.NetcdfFile,java.lang.String,double,double)>(r2, "YCELL", 1.401298464324817E-45, 3.4028234663852886E38);

        if $z8 == 0 goto label48;

        $z70 = 1;

        $z69 = 1;

        goto label49;

     label48:
        $z70 = 0;

        $z69 = 0;

     label49:
        z56 = $z69;

        if $z70 == 0 goto label50;

        $i6 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: int intAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "GDTYP");

        $d1 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: double doubleAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "P_ALP");

        $d2 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: double doubleAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "P_BET");

        $d3 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: double doubleAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "P_GAM");

        $d4 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: double doubleAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "XCENT");

        $d5 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: double doubleAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "YCENT");

        $d6 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: double doubleAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "XORIG");

        $d7 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: double doubleAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "YORIG");

        $d8 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: double doubleAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "XCELL");

        $d9 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: double doubleAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "YCELL");

        $i7 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: int intAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "NROWS");

        $i8 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: int intAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "NCOLS");

        z56 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean isValidM3IOProjection_(int,double,double,double,double,double,double,double,double,double,int,int)>($i6, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $i7, $i8);

     label50:
        $r3 = newarray (int)[6];

        $r3[0] = 1;

        $r3[1] = 2;

        $r3[2] = 3;

        $r3[3] = 4;

        $r3[4] = 5;

        $r3[5] = 6;

        if z56 == 0 goto label51;

        $z7 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasIntAttributeIn_(ucar.nc2.NetcdfFile,java.lang.String,int[])>(r2, "VGTYP", $r3);

        if $z7 == 0 goto label51;

        $z57 = 1;

        goto label52;

     label51:
        $z57 = 0;

     label52:
        if $z57 == 0 goto label53;

        $z6 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasDoubleAttribute_(ucar.nc2.NetcdfFile,java.lang.String,double,double)>(r2, "VGTOP", 0.0, 3.4028234663852886E38);

        if $z6 == 0 goto label53;

        $z58 = 1;

        goto label54;

     label53:
        $z58 = 0;

     label54:
        if $z58 == 0 goto label55;

        $r8 = virtualinvoke r2.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("VGLVLS");

        if $r8 == null goto label55;

        $z74 = 1;

        $z73 = 1;

        goto label56;

     label55:
        $z74 = 0;

        $z73 = 0;

     label56:
        z60 = $z74;

        if $z73 == 0 goto label63;

        $i0 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: int intAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "NLAYS");

        $i1 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: int intAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "VGTYP");

        $d0 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: double doubleAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "VGTOP");

        $r6 = virtualinvoke r2.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("VGLVLS");

        if $r6 == null goto label57;

        $z5 = virtualinvoke $r6.<ucar.nc2.Attribute: boolean isArray()>();

        if $z5 == 0 goto label57;

        $i4 = virtualinvoke $r6.<ucar.nc2.Attribute: int getLength()>();

        $i5 = $i0 + 1;

        if $i4 != $i5 goto label57;

        $z72 = 1;

        $z71 = 1;

        goto label58;

     label57:
        $z72 = 0;

        $z71 = 0;

     label58:
        z60 = $z72;

        if $z71 == 0 goto label63;

        $r7 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: double[] doubleArrayAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "VGLVLS");

        if $r7 == null goto label59;

        $i3 = lengthof $r7;

        $i2 = $i0 + 1;

        if $i3 != $i2 goto label59;

        $z62 = 1;

        goto label60;

     label59:
        $z62 = 0;

     label60:
        if $z62 == 0 goto label61;

        $z4 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean isValidVG_(int,double,double[])>($i1, $d0, $r7);

        if $z4 == 0 goto label61;

        $z63 = 1;

        goto label62;

     label61:
        $z63 = 0;

     label62:
        z60 = $z63;

     label63:
        if z60 == 0 goto label64;

        $z3 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasStringAttribute_(ucar.nc2.NetcdfFile,java.lang.String,int)>(r2, "GDNAM", 16);

        if $z3 == 0 goto label64;

        $z64 = 1;

        goto label65;

     label64:
        $z64 = 0;

     label65:
        if $z64 == 0 goto label66;

        $z2 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasStringAttribute_(ucar.nc2.NetcdfFile,java.lang.String,int)>(r2, "UPNAM", 16);

        if $z2 == 0 goto label66;

        $z65 = 1;

        goto label67;

     label66:
        $z65 = 0;

     label67:
        $i14 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: int intAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r2, "NVARS");

        $i15 = $i14 * 16;

        if $z65 == 0 goto label68;

        $z1 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasStringAttribute_(ucar.nc2.NetcdfFile,java.lang.String,int)>(r2, "VAR-LIST", $i15);

        if $z1 == 0 goto label68;

        $z66 = 1;

        goto label69;

     label68:
        $z66 = 0;

     label69:
        if $z66 == 0 goto label70;

        $r5 = virtualinvoke r2.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("FILEDESC");

        if $r5 == null goto label70;

        $z67 = 1;

        goto label71;

     label70:
        $z67 = 0;

     label71:
        if $z67 == 0 goto label72;

        $r4 = virtualinvoke r2.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("HISTORY");

        if $r4 == null goto label72;

        $z68 = 1;

        goto label73;

     label72:
        $z68 = 0;

     label73:
        return $z68;
    }

    private static boolean hasDimensions_(ucar.nc2.NetcdfFile, java.lang.String[])
    {
        java.util.Iterator $r2;
        java.lang.String[] r3;
        java.util.List $r1;
        int i0, i1;
        java.lang.Object $r4;
        ucar.nc2.Dimension r5;
        ucar.nc2.NetcdfFile r0;
        java.lang.String $r6, $r7;
        boolean $z0, $z1, z2, $z3;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r3 := @parameter1: java.lang.String[];

        z2 = 1;

        $r1 = virtualinvoke r0.<ucar.nc2.NetcdfFile: java.util.List getDimensions()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if z2 == 0 goto label4;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (ucar.nc2.Dimension) $r4;

        if i1 >= i0 goto label2;

        $r6 = virtualinvoke r5.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r7 = r3[i1];

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        z2 = $z3;

        i1 = i1 + 1;

        goto label1;

     label4:
        return z2;
    }

    private static boolean hasStringAttribute_(ucar.nc2.NetcdfFile, java.lang.String, int)
    {
        ucar.nc2.Attribute $r2;
        int $i0, i1;
        ucar.nc2.NetcdfFile r0;
        java.lang.String r1, $r3;
        boolean $z0, $z1;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<ucar.nc2.Attribute: boolean isString()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r2.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != i1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private static boolean hasDoubleAttribute_(ucar.nc2.NetcdfFile, java.lang.String, double, double)
    {
        byte $b0, $b1, $b2, $b3;
        int $i4, $i5, $i6, $i7;
        java.lang.String r1;
        java.lang.Number $r7, $r8;
        double $d0, d1, d2, $d3, $d4;
        boolean z0, $z1, $z2;
        ucar.ma2.DataType $r3, $r4, $r5, $r6;
        ucar.nc2.Attribute $r2;
        float $f0;
        ucar.nc2.NetcdfFile r0;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: java.lang.String;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        z0 = 0;

        $r2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>(r1);

        if $r2 == null goto label6;

        $r3 = virtualinvoke $r2.<ucar.nc2.Attribute: ucar.ma2.DataType getDataType()>();

        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        if $r3 != $r4 goto label3;

        $r8 = virtualinvoke $r2.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $f0 = virtualinvoke $r8.<java.lang.Number: float floatValue()>();

        $d3 = (double) $f0;

        $b2 = $d3 cmpl d1;

        $i4 = (int) $b2;

        if $i4 < 0 goto label1;

        $d4 = (double) $f0;

        $b3 = $d4 cmpg d2;

        $i5 = (int) $b3;

        if $i5 > 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        goto label6;

     label3:
        $r5 = virtualinvoke $r2.<ucar.nc2.Attribute: ucar.ma2.DataType getDataType()>();

        $r6 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        if $r5 != $r6 goto label6;

        $r7 = virtualinvoke $r2.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $d0 = virtualinvoke $r7.<java.lang.Number: double doubleValue()>();

        $b0 = $d0 cmpl d1;

        $i6 = (int) $b0;

        if $i6 < 0 goto label4;

        $b1 = $d0 cmpg d2;

        $i7 = (int) $b1;

        if $i7 > 0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        z0 = $z2;

     label6:
        return z0;
    }

    private static boolean hasDimension_(ucar.nc2.NetcdfFile, java.lang.String, int, int)
    {
        int $i0, i1, i2;
        ucar.nc2.Dimension $r2;
        ucar.nc2.NetcdfFile r0;
        java.lang.String r1;
        boolean z0;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 = 0;

        $r2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension findDimension(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<ucar.nc2.Dimension: int getLength()>();

        z0 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRangeI_(int,int,int)>($i0, i1, i2);

     label1:
        return z0;
    }

    private static int dimension_(ucar.nc2.NetcdfFile, java.lang.String)
    {
        int $i0;
        ucar.nc2.Dimension $r2;
        ucar.nc2.NetcdfFile r0;
        java.lang.String r1;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension findDimension(java.lang.String)>(r1);

        $i0 = virtualinvoke $r2.<ucar.nc2.Dimension: int getLength()>();

        return $i0;
    }

    private static boolean hasIntAttribute_(ucar.nc2.NetcdfFile, java.lang.String, int, int)
    {
        ucar.ma2.DataType $r3, $r4;
        ucar.nc2.Attribute $r2;
        int $i0, i1, i2;
        ucar.nc2.NetcdfFile r0;
        java.lang.String r1;
        java.lang.Number $r5;
        boolean z0, $z1;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 = 0;

        $r2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>(r1);

        if $r2 == null goto label3;

        $r3 = virtualinvoke $r2.<ucar.nc2.Attribute: ucar.ma2.DataType getDataType()>();

        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        if $r3 != $r4 goto label3;

        $r5 = virtualinvoke $r2.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $i0 = virtualinvoke $r5.<java.lang.Number: int intValue()>();

        if $i0 < i1 goto label1;

        if $i0 > i2 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

     label3:
        return z0;
    }

    private static boolean hasIntAttributeIn_(ucar.nc2.NetcdfFile, java.lang.String, int[])
    {
        ucar.ma2.DataType $r3, $r4;
        ucar.nc2.Attribute $r2;
        int[] r6;
        int $i0, i1, $i2, i3;
        ucar.nc2.NetcdfFile r0;
        java.lang.String r1;
        java.lang.Number $r5;
        boolean z0, $z1;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: java.lang.String;

        r6 := @parameter2: int[];

        z0 = 0;

        $r2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>(r1);

        if $r2 == null goto label4;

        $r3 = virtualinvoke $r2.<ucar.nc2.Attribute: ucar.ma2.DataType getDataType()>();

        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        if $r3 != $r4 goto label4;

        $r5 = virtualinvoke $r2.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $i0 = virtualinvoke $r5.<java.lang.Number: int intValue()>();

        i1 = lengthof r6;

        i3 = 0;

     label1:
        if z0 != 0 goto label4;

        if i3 >= i1 goto label4;

        $i2 = r6[i3];

        if $i0 != $i2 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;

        i3 = i3 + 1;

        goto label1;

     label4:
        return z0;
    }

    private static boolean hasYYYYDDDAttribute_(ucar.nc2.NetcdfFile, java.lang.String)
    {
        int $i0, $i1, $i2, i3;
        ucar.nc2.NetcdfFile r0;
        java.lang.String r1;
        boolean $z0, z1;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasIntAttribute_(ucar.nc2.NetcdfFile,java.lang.String,int,int)>(r0, r1, 1001, 9999366);

        z1 = $z0;

        if $z0 == 0 goto label1;

        $i0 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: int intAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r0, r1);

        $i1 = $i0 / 1000;

        $i2 = $i1 * 1000;

        i3 = $i0 - $i2;

        z1 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRangeI_(int,int,int)>(i3, 1, 366);

     label1:
        return z1;
    }

    private static boolean hasHHMMSSAttribute_(ucar.nc2.NetcdfFile, java.lang.String)
    {
        int $i0, i1;
        ucar.nc2.NetcdfFile r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2, z3, $z4;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean hasIntAttribute_(ucar.nc2.NetcdfFile,java.lang.String,int,int)>(r0, r1, 0, 235959);

        z3 = $z0;

        if $z0 == 0 goto label3;

        $i0 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: int intAttribute_(ucar.nc2.NetcdfFile,java.lang.String)>(r0, r1);

        i1 = $i0 / 10000;

        $z1 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean isValidTimestepSize_(int)>($i0);

        if $z1 == 0 goto label1;

        $z2 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRangeI_(int,int,int)>(i1, 0, 23);

        if $z2 == 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z3 = $z4;

     label3:
        return z3;
    }

    private static boolean isValidTimestepSize_(int)
    {
        int i0, i1, i2, i3, i4, i5, i6;
        boolean $z0, $z1, $z2;

        i0 := @parameter0: int;

        i1 = i0 / 10000;

        i2 = i1 * 10000;

        i3 = i0 - i2;

        i4 = i3 / 100;

        i5 = i4 * 100;

        i6 = i3 - i5;

        if i1 < 0 goto label1;

        $z0 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRangeI_(int,int,int)>(i4, 0, 59);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRangeI_(int,int,int)>(i6, 0, 59);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private static boolean isValidM3IOProjection_(int, double, double, double, double, double, double, double, double, double, int, int)
    {
        byte $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43;
        int i0, i11, i12, $i13, $i14, $i15;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        d4 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        d3 := @parameter5: double;

        d5 := @parameter6: double;

        d6 := @parameter7: double;

        d7 := @parameter8: double;

        d8 := @parameter9: double;

        i12 := @parameter10: int;

        i11 := @parameter11: int;

        z34 = 0;

        tableswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label04;
            case 3: goto label09;
            case 4: goto label12;
            case 5: goto label17;
            case 6: goto label18;
            case 7: goto label22;
            case 8: goto label25;
            case 9: goto label28;
            case 10: goto label31;
            default: goto label34;
        };

     label01:
        $z28 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d5, -180.0, 180.0);

        if $z28 == 0 goto label02;

        $z29 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d6, -90.0, 90.0);

        if $z29 == 0 goto label02;

        $z30 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d7, 0.0, 360.0);

        if $z30 == 0 goto label02;

        $z31 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d8, 0.0, 180.0);

        if $z31 == 0 goto label02;

        $d9 = (double) i11;

        $d10 = $d9 * d7;

        $d11 = d5 + $d10;

        $z32 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>($d11, -180.0, 540.0);

        if $z32 == 0 goto label02;

        $d12 = (double) i12;

        $d13 = $d12 * d8;

        $d14 = d6 + $d13;

        $z33 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>($d14, -90.0, 90.0);

        if $z33 == 0 goto label02;

        $z35 = 1;

        goto label03;

     label02:
        $z35 = 0;

     label03:
        z34 = $z35;

        goto label34;

     label04:
        $z23 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d0, -90.0, 90.0);

        if $z23 == 0 goto label07;

        $b10 = d0 cmpl 0.0;

        $i13 = (int) $b10;

        if $i13 <= 0 goto label05;

        $d15 = 90.0;

        goto label06;

     label05:
        $d15 = 0.0;

     label06:
        $z24 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d4, d0, $d15);

        if $z24 == 0 goto label07;

        $z25 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d1, -180.0, 180.0);

        if $z25 == 0 goto label07;

        $z26 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d2, -180.0, 180.0);

        if $z26 == 0 goto label07;

        $z27 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d3, -90.0, 90.0);

        if $z27 == 0 goto label07;

        $z36 = 1;

        goto label08;

     label07:
        $z36 = 0;

     label08:
        z34 = $z36;

        goto label34;

     label09:
        $z19 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d0, -90.0, 90.0);

        if $z19 == 0 goto label10;

        $z20 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d4, -180.0, 180.0);

        if $z20 == 0 goto label10;

        $b9 = d1 cmpl 0.0;

        if $b9 != 0 goto label10;

        $z21 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d2, -180.0, 180.0);

        if $z21 == 0 goto label10;

        $z22 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d3, -90.0, 90.0);

        if $z22 == 0 goto label10;

        $z37 = 1;

        goto label11;

     label10:
        $z37 = 0;

     label11:
        z34 = $z37;

        goto label34;

     label12:
        $z16 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d0, -90.0, 90.0);

        if $z16 == 0 goto label15;

        $b8 = d0 cmpl 0.0;

        $i14 = (int) $b8;

        if $i14 <= 0 goto label13;

        $d16 = 90.0;

        goto label14;

     label13:
        $d16 = 0.0;

     label14:
        $z17 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d4, d0, $d16);

        if $z17 == 0 goto label15;

        $z18 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d1, -180.0, 180.0);

        if $z18 == 0 goto label15;

        $z38 = 1;

        goto label16;

     label15:
        $z38 = 0;

     label16:
        z34 = $z38;

        goto label34;

     label17:
        z34 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d0, 1.0, 60.0);

        goto label34;

     label18:
        $b6 = d0 cmpl -1.0;

        if $b6 == 0 goto label19;

        $b7 = d0 cmpl 1.0;

        if $b7 != 0 goto label20;

     label19:
        $z12 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d4, -90.0, 90.0);

        if $z12 == 0 goto label20;

        $z13 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d1, -180.0, 180.0);

        if $z13 == 0 goto label20;

        $z14 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d2, -180.0, 180.0);

        if $z14 == 0 goto label20;

        $z15 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d3, -90.0, 90.0);

        if $z15 == 0 goto label20;

        $z39 = 1;

        goto label21;

     label20:
        $z39 = 0;

     label21:
        z34 = $z39;

        goto label34;

     label22:
        $z9 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d0, -90.0, 90.0);

        if $z9 == 0 goto label23;

        $b5 = d1 cmpl d2;

        if $b5 != 0 goto label23;

        $z10 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d2, -180.0, 180.0);

        if $z10 == 0 goto label23;

        $z11 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d3, -90.0, 90.0);

        if $z11 == 0 goto label23;

        $z40 = 1;

        goto label24;

     label23:
        $z40 = 0;

     label24:
        z34 = $z40;

        goto label34;

     label25:
        $z6 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d0, -90.0, 90.0);

        if $z6 == 0 goto label26;

        $b4 = d1 cmpl d2;

        if $b4 != 0 goto label26;

        $z7 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d2, -180.0, 180.0);

        if $z7 == 0 goto label26;

        $z8 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d3, -90.0, 90.0);

        if $z8 == 0 goto label26;

        $z41 = 1;

        goto label27;

     label26:
        $z41 = 0;

     label27:
        z34 = $z41;

        goto label34;

     label28:
        $z2 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d0, -90.0, 90.0);

        if $z2 == 0 goto label31;

        $b2 = d0 cmpl 0.0;

        $i15 = (int) $b2;

        if $i15 <= 0 goto label29;

        $d17 = 90.0;

        goto label30;

     label29:
        $d17 = 0.0;

     label30:
        $z3 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d4, d0, $d17);

        if $z3 == 0 goto label31;

        $b3 = d1 cmpl d2;

        if $b3 != 0 goto label31;

        $z4 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d2, -180.0, 180.0);

        if $z4 == 0 goto label31;

        $z5 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d3, -90.0, 90.0);

        if $z5 == 0 goto label31;

        goto label31;

     label31:
        $z42 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d0, -90.0, 90.0);

        if $z42 == 0 goto label32;

        $b1 = d1 cmpl d2;

        if $b1 != 0 goto label32;

        $z0 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d2, -180.0, 180.0);

        if $z0 == 0 goto label32;

        $z1 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>(d3, -90.0, 90.0);

        if $z1 == 0 goto label32;

        $z43 = 1;

        goto label33;

     label32:
        $z43 = 0;

     label33:
        z34 = $z43;

        goto label34;

     label34:
        return z34;
    }

    private static boolean isValidVG_(int, double, double[])
    {
        int i0, $i1, $i3;
        double[] r0;
        double d0;
        boolean z0, $z1;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        r0 := @parameter2: double[];

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label3;
            case 6: goto label4;
            default: goto label5;
        };

     label1:
        z0 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean orderedFromTo_(double[],double,double)>(r0, 1.0, 0.0);

        goto label8;

     label2:
        z0 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean decreasesToward_(double[],double)>(r0, d0);

        goto label8;

     label3:
        z0 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean orderedWithin_(double[],double,double)>(r0, -200.0, 100000.0);

        goto label8;

     label4:
        z0 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean orderedWithin_(double[],double,double)>(r0, 0.0, 100000.0);

        goto label8;

     label5:
        $i3 = (int) -9999;

        if i0 != $i3 goto label6;

        $i1 = lengthof r0;

        if $i1 != 2 goto label6;

        $z1 = 1;

        goto label7;

     label6:
        $z1 = 0;

     label7:
        z0 = $z1;

     label8:
        return z0;
    }

    private static double[] convertVGLevels_(int, double, double[])
    {
        double[] r0, r1;
        int $i0, i1, $i2, i3, i4, $i6;
        double $d0, $d1, $d2, d3, $d4, $d5, $d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;

        i3 := @parameter0: int;

        d7 := @parameter1: double;

        r0 := @parameter2: double[];

        $i0 = lengthof r0;

        $i6 = (int) -1;

        i1 = $i0 + $i6;

        r1 = newarray (double)[i1];

        i4 = 0;

     label1:
        if i4 >= i1 goto label9;

        $d1 = r0[i4];

        $i2 = i4 + 1;

        $d0 = r0[$i2];

        $d2 = $d1 + $d0;

        d3 = $d2 * 0.5;

        tableswitch(i3)
        {
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            case 6: goto label6;
            default: goto label7;
        };

     label2:
        $d11 = d7 * 0.01;

        $d12 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: double pressureAtSigmaLevel_(double,double)>(d3, $d11);

        $d13 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: double heightAtPressure_(double)>($d12);

        r1[i4] = $d13;

        goto label8;

     label3:
        $d8 = d7 - 0.0;

        $d9 = d3 * $d8;

        $d10 = 0.0 + $d9;

        r1[i4] = $d10;

        goto label8;

     label4:
        $d5 = d3 * 0.01;

        $d6 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: double heightAtPressure_(double)>($d5);

        r1[i4] = $d6;

        goto label8;

     label5:
        r1[i4] = d3;

        goto label8;

     label6:
        $d4 = d3 + 0.0;

        r1[i4] = $d4;

        goto label8;

     label7:
        $d14 = (double) i4;

        r1[i4] = $d14;

     label8:
        i4 = i4 + 1;

        goto label1;

     label9:
        return r1;
    }

    private static double pressureAtSigmaLevel_(double, double)
    {
        double d0, d1, $d2, $d3, $d4;

        d1 := @parameter0: double;

        d0 := @parameter1: double;

        $d2 = 1012.5 - d0;

        $d3 = d1 * $d2;

        $d4 = d0 + $d3;

        return $d4;
    }

    private static double heightAtPressure_(double)
    {
        double d0, $d1, $d2, $d3;

        d0 := @parameter0: double;

        $d1 = d0 / 1012.5;

        $d2 = staticinvoke <java.lang.Math: double log(double)>($d1);

        $d3 = -7200.0 * $d2;

        return $d3;
    }

    private static boolean orderedFromTo_(double[], double, double)
    {
        byte $b1, $b2, $b6, $b7, $b9;
        boolean z0, $z2, z3, $z4, $z5;
        double[] r0;
        int i0, $i3, $i4, $i5, $i8, i10, i11, $i12, $i13, $i14, $i15, $i16;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;

        r0 := @parameter0: double[];

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        i0 = lengthof r0;

        $b1 = d0 cmpg d1;

        $i12 = (int) $b1;

        if $i12 > 0 goto label01;

        $z5 = 1;

        $z4 = 1;

        goto label02;

     label01:
        $z5 = 0;

        $z4 = 0;

     label02:
        z0 = $z4;

        if $z5 == 0 goto label04;

        $d8 = r0[0];

        $b7 = $d8 cmpl d0;

        $i13 = (int) $b7;

        if $i13 < 0 goto label03;

        $i8 = i0 - 1;

        $d9 = r0[$i8];

        $b9 = $d9 cmpg d1;

        $i14 = (int) $b9;

        if $i14 > 0 goto label03;

        $z2 = 1;

        goto label06;

     label03:
        $z2 = 0;

        goto label06;

     label04:
        $d2 = r0[0];

        $b2 = $d2 cmpl d1;

        $i15 = (int) $b2;

        if $i15 < 0 goto label05;

        $i5 = i0 - 1;

        $d7 = r0[$i5];

        $b6 = $d7 cmpg d0;

        $i16 = (int) $b6;

        if $i16 > 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        z3 = $z2;

        if z0 == 0 goto label09;

        i10 = 1;

     label07:
        if z3 == 0 goto label08;

        if i10 >= i0 goto label08;

        $d6 = r0[i10];

        $i4 = i10 - 1;

        $d5 = r0[$i4];

        z3 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>($d6, $d5, d1);

        i10 = i10 + 1;

        goto label07;

     label08:
        goto label11;

     label09:
        i11 = 1;

     label10:
        if z3 == 0 goto label11;

        if i11 >= i0 goto label11;

        $d4 = r0[i11];

        $i3 = i11 - 1;

        $d3 = r0[$i3];

        z3 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>($d4, d1, $d3);

        i11 = i11 + 1;

        goto label10;

     label11:
        return z3;
    }

    private static boolean orderedWithin_(double[], double, double)
    {
        byte $b1, $b2, $b3, $b5, $b7, $b8, $b10, $b11, $b13;
        boolean z0, $z2, z3, $z4, $z5, $z6, $z7;
        double[] r0;
        int i0, $i4, $i6, $i9, $i12, i14, i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, d8, d9;

        r0 := @parameter0: double[];

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        i0 = lengthof r0;

        $b1 = d0 cmpg d1;

        $i16 = (int) $b1;

        if $i16 >= 0 goto label01;

        $z7 = 1;

        $z6 = 1;

        goto label02;

     label01:
        $z7 = 0;

        $z6 = 0;

     label02:
        z0 = $z6;

        if $z7 == 0 goto label04;

        $d6 = r0[0];

        $b11 = $d6 cmpl d0;

        $i17 = (int) $b11;

        if $i17 <= 0 goto label03;

        $i12 = i0 - 1;

        $d7 = r0[$i12];

        $b13 = $d7 cmpg d1;

        $i18 = (int) $b13;

        if $i18 >= 0 goto label03;

        $z2 = 1;

        goto label06;

     label03:
        $z2 = 0;

        goto label06;

     label04:
        $d2 = r0[0];

        $b2 = $d2 cmpl d1;

        $i19 = (int) $b2;

        if $i19 <= 0 goto label05;

        $i9 = i0 - 1;

        $d5 = r0[$i9];

        $b10 = $d5 cmpg d0;

        $i20 = (int) $b10;

        if $i20 >= 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        z3 = $z2;

        if z0 == 0 goto label11;

        i14 = 1;

     label07:
        if z3 == 0 goto label10;

        if i14 >= i0 goto label10;

        d8 = r0[i14];

        $i6 = i14 - 1;

        $d4 = r0[$i6];

        $b7 = d8 cmpl $d4;

        $i21 = (int) $b7;

        if $i21 <= 0 goto label08;

        $b8 = d8 cmpg d1;

        $i22 = (int) $b8;

        if $i22 >= 0 goto label08;

        $z4 = 1;

        goto label09;

     label08:
        $z4 = 0;

     label09:
        z3 = $z4;

        i14 = i14 + 1;

        goto label07;

     label10:
        goto label15;

     label11:
        i15 = 1;

     label12:
        if z3 == 0 goto label15;

        if i15 >= i0 goto label15;

        d9 = r0[i15];

        $b3 = d9 cmpl d1;

        $i23 = (int) $b3;

        if $i23 <= 0 goto label13;

        $i4 = i15 - 1;

        $d3 = r0[$i4];

        $b5 = d9 cmpg $d3;

        $i24 = (int) $b5;

        if $i24 >= 0 goto label13;

        $z5 = 1;

        goto label14;

     label13:
        $z5 = 0;

     label14:
        z3 = $z5;

        i15 = i15 + 1;

        goto label12;

     label15:
        return z3;
    }

    private static boolean decreasesToward_(double[], double)
    {
        double[] r0;
        int i0, $i1, i2;
        double d0, $d1, $d2;
        boolean z0;

        r0 := @parameter0: double[];

        d0 := @parameter1: double;

        i0 = lengthof r0;

        z0 = 1;

        i2 = 1;

     label1:
        if z0 == 0 goto label2;

        if i2 >= i0 goto label2;

        $d2 = r0[i2];

        $i1 = i2 - 1;

        $d1 = r0[$i1];

        z0 = staticinvoke <ucar.nc2.dataset.conv.M3IOVGGridConvention: boolean inRange_(double,double,double)>($d2, d0, $d1);

        i2 = i2 + 1;

        goto label1;

     label2:
        return z0;
    }

    private static boolean inRangeI_(int, int, int)
    {
        int i0, i1, i2;
        boolean $z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 < i1 goto label1;

        if i0 > i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean inRange_(double, double, double)
    {
        byte $b0, $b1;
        int $i2, $i3;
        double d0, d1, d2;
        boolean $z0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $b0 = d0 cmpl d1;

        $i2 = (int) $b0;

        if $i2 < 0 goto label1;

        $b1 = d0 cmpg d2;

        $i3 = (int) $b1;

        if $i3 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static void <clinit>()
    {
        <ucar.nc2.dataset.conv.M3IOVGGridConvention: double SURFACE_PRESSURE_IN_MB> = 1012.5;

        <ucar.nc2.dataset.conv.M3IOVGGridConvention: double AMISS3> = -9.0E36;

        <ucar.nc2.dataset.conv.M3IOVGGridConvention: double BADVAL3> = -9.999E36;

        <ucar.nc2.dataset.conv.M3IOVGGridConvention: int IMISS3> = -9999;

        <ucar.nc2.dataset.conv.M3IOVGGridConvention: int VGHVAL3> = 6;

        <ucar.nc2.dataset.conv.M3IOVGGridConvention: int VGZVAL3> = 5;

        <ucar.nc2.dataset.conv.M3IOVGGridConvention: int VGPRES3> = 4;

        <ucar.nc2.dataset.conv.M3IOVGGridConvention: int VGSIGZ3> = 3;

        <ucar.nc2.dataset.conv.M3IOVGGridConvention: int VGSGPN3> = 2;

        <ucar.nc2.dataset.conv.M3IOVGGridConvention: int VGSGPH3> = 1;

        <ucar.nc2.dataset.conv.M3IOVGGridConvention: int LEQGRD3> = 10;

        <ucar.nc2.dataset.conv.M3IOVGGridConvention: int ALBGRD3> = 9;

        <ucar.nc2.dataset.conv.M3IOVGGridConvention: int TRMGRD3> = 8;

        <ucar.nc2.dataset.conv.M3IOVGGridConvention: int EQMGRD3> = 7;

        <ucar.nc2.dataset.conv.M3IOVGGridConvention: int POLGRD3> = 6;

        <ucar.nc2.dataset.conv.M3IOVGGridConvention: int UTMGRD3> = 5;

        <ucar.nc2.dataset.conv.M3IOVGGridConvention: int STEGRD3> = 4;

        <ucar.nc2.dataset.conv.M3IOVGGridConvention: int MERGRD3> = 3;

        <ucar.nc2.dataset.conv.M3IOVGGridConvention: int LAMGRD3> = 2;

        <ucar.nc2.dataset.conv.M3IOVGGridConvention: int LATGRD3> = 1;

        <ucar.nc2.dataset.conv.M3IOVGGridConvention: int NAMLEN3> = 16;

        <ucar.nc2.dataset.conv.M3IOVGGridConvention: int MXVARS3> = 120;

        <ucar.nc2.dataset.conv.M3IOVGGridConvention: int MXLAYS3> = 100;

        <ucar.nc2.dataset.conv.M3IOVGGridConvention: int PTRFLY3> = 8;

        <ucar.nc2.dataset.conv.M3IOVGGridConvention: int IDDATA3> = 3;

        <ucar.nc2.dataset.conv.M3IOVGGridConvention: int GRDDED3> = 1;

        return;
    }
}
