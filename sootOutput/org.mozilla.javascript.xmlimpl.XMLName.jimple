class org.mozilla.javascript.xmlimpl.XMLName extends org.mozilla.javascript.Ref
{
    static final long serialVersionUID;
    private java.lang.String uri;
    private java.lang.String localName;
    private boolean isAttributeName;
    private boolean isDescendants;
    private org.mozilla.javascript.xmlimpl.XMLObjectImpl xmlObject;

    private void <init>(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        org.mozilla.javascript.xmlimpl.XMLName r0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLName;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.mozilla.javascript.Ref: void <init>()>();

        r0.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String uri> = r1;

        r0.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String localName> = r2;

        return;
    }

    static org.mozilla.javascript.xmlimpl.XMLName formStar()
    {
        org.mozilla.javascript.xmlimpl.XMLName $r0;

        $r0 = new org.mozilla.javascript.xmlimpl.XMLName;

        specialinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLName: void <init>(java.lang.String,java.lang.String)>(null, "*");

        return $r0;
    }

    static org.mozilla.javascript.xmlimpl.XMLName formProperty(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        org.mozilla.javascript.xmlimpl.XMLName $r0;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.mozilla.javascript.xmlimpl.XMLName;

        specialinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLName: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        return $r0;
    }

    void initXMLObject(org.mozilla.javascript.xmlimpl.XMLObjectImpl)
    {
        java.lang.IllegalStateException $r3;
        org.mozilla.javascript.xmlimpl.XMLObjectImpl r0, $r2;
        org.mozilla.javascript.xmlimpl.XMLName r1;
        java.lang.IllegalArgumentException $r4;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLName;

        r0 := @parameter0: org.mozilla.javascript.xmlimpl.XMLObjectImpl;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r1.<org.mozilla.javascript.xmlimpl.XMLName: org.mozilla.javascript.xmlimpl.XMLObjectImpl xmlObject>;

        if $r2 == null goto label2;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;

     label2:
        r1.<org.mozilla.javascript.xmlimpl.XMLName: org.mozilla.javascript.xmlimpl.XMLObjectImpl xmlObject> = r0;

        return;
    }

    java.lang.String uri()
    {
        java.lang.String $r1;
        org.mozilla.javascript.xmlimpl.XMLName r0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLName;

        $r1 = r0.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String uri>;

        return $r1;
    }

    java.lang.String localName()
    {
        java.lang.String $r1;
        org.mozilla.javascript.xmlimpl.XMLName r0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLName;

        $r1 = r0.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String localName>;

        return $r1;
    }

    boolean isAttributeName()
    {
        org.mozilla.javascript.xmlimpl.XMLName r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLName;

        $z0 = r0.<org.mozilla.javascript.xmlimpl.XMLName: boolean isAttributeName>;

        return $z0;
    }

    void setAttributeName()
    {
        java.lang.IllegalStateException $r1;
        org.mozilla.javascript.xmlimpl.XMLName r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLName;

        $z0 = r0.<org.mozilla.javascript.xmlimpl.XMLName: boolean isAttributeName>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;

     label1:
        r0.<org.mozilla.javascript.xmlimpl.XMLName: boolean isAttributeName> = 1;

        return;
    }

    boolean isDescendants()
    {
        org.mozilla.javascript.xmlimpl.XMLName r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLName;

        $z0 = r0.<org.mozilla.javascript.xmlimpl.XMLName: boolean isDescendants>;

        return $z0;
    }

    void setIsDescendants()
    {
        java.lang.IllegalStateException $r1;
        org.mozilla.javascript.xmlimpl.XMLName r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLName;

        $z0 = r0.<org.mozilla.javascript.xmlimpl.XMLName: boolean isDescendants>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;

     label1:
        r0.<org.mozilla.javascript.xmlimpl.XMLName: boolean isDescendants> = 1;

        return;
    }

    public boolean has(org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.xmlimpl.XMLName r0;
        org.mozilla.javascript.xmlimpl.XMLObjectImpl $r1, $r2;
        org.mozilla.javascript.Context r3;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLName;

        r3 := @parameter0: org.mozilla.javascript.Context;

        $r1 = r0.<org.mozilla.javascript.xmlimpl.XMLName: org.mozilla.javascript.xmlimpl.XMLObjectImpl xmlObject>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.mozilla.javascript.xmlimpl.XMLName: org.mozilla.javascript.xmlimpl.XMLObjectImpl xmlObject>;

        $z0 = virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XMLObjectImpl: boolean hasXMLProperty(org.mozilla.javascript.xmlimpl.XMLName)>(r0);

        return $z0;
    }

    public java.lang.Object get(org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.xmlimpl.XMLObjectImpl $r1, $r2;
        org.mozilla.javascript.Context r7;
        java.lang.RuntimeException $r6;
        org.mozilla.javascript.xmlimpl.XMLName r0;
        java.lang.Object $r3, $r4;
        java.lang.String $r5;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLName;

        r7 := @parameter0: org.mozilla.javascript.Context;

        $r1 = r0.<org.mozilla.javascript.xmlimpl.XMLName: org.mozilla.javascript.xmlimpl.XMLObjectImpl xmlObject>;

        if $r1 != null goto label1;

        $r4 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        $r5 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String toString()>();

        $r6 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException undefReadError(java.lang.Object,java.lang.Object)>($r4, $r5);

        throw $r6;

     label1:
        $r2 = r0.<org.mozilla.javascript.xmlimpl.XMLName: org.mozilla.javascript.xmlimpl.XMLObjectImpl xmlObject>;

        $r3 = virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XMLObjectImpl: java.lang.Object getXMLProperty(org.mozilla.javascript.xmlimpl.XMLName)>(r0);

        return $r3;
    }

    public java.lang.Object set(org.mozilla.javascript.Context, java.lang.Object)
    {
        org.mozilla.javascript.xmlimpl.XMLObjectImpl $r1, $r3;
        org.mozilla.javascript.Context r8;
        java.lang.RuntimeException $r4, $r7;
        org.mozilla.javascript.xmlimpl.XMLName r0;
        java.lang.Object r2, $r5;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLName;

        r8 := @parameter0: org.mozilla.javascript.Context;

        r2 := @parameter1: java.lang.Object;

        $r1 = r0.<org.mozilla.javascript.xmlimpl.XMLName: org.mozilla.javascript.xmlimpl.XMLObjectImpl xmlObject>;

        if $r1 != null goto label1;

        $r5 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        $r6 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String toString()>();

        $r7 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException undefWriteError(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r6, r2);

        throw $r7;

     label1:
        $z0 = r0.<org.mozilla.javascript.xmlimpl.XMLName: boolean isDescendants>;

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r4;

     label2:
        $r3 = r0.<org.mozilla.javascript.xmlimpl.XMLName: org.mozilla.javascript.xmlimpl.XMLObjectImpl xmlObject>;

        virtualinvoke $r3.<org.mozilla.javascript.xmlimpl.XMLObjectImpl: void putXMLProperty(org.mozilla.javascript.xmlimpl.XMLName,java.lang.Object)>(r0, r2);

        return r2;
    }

    public boolean delete(org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.xmlimpl.XMLName r0;
        org.mozilla.javascript.xmlimpl.XMLObjectImpl $r1, $r2, $r3;
        org.mozilla.javascript.Context r4;
        boolean $z0, $z1;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLName;

        r4 := @parameter0: org.mozilla.javascript.Context;

        $r1 = r0.<org.mozilla.javascript.xmlimpl.XMLName: org.mozilla.javascript.xmlimpl.XMLObjectImpl xmlObject>;

        if $r1 != null goto label1;

        return 1;

     label1:
        $r2 = r0.<org.mozilla.javascript.xmlimpl.XMLName: org.mozilla.javascript.xmlimpl.XMLObjectImpl xmlObject>;

        virtualinvoke $r2.<org.mozilla.javascript.xmlimpl.XMLObjectImpl: void deleteXMLProperty(org.mozilla.javascript.xmlimpl.XMLName)>(r0);

        $r3 = r0.<org.mozilla.javascript.xmlimpl.XMLName: org.mozilla.javascript.xmlimpl.XMLObjectImpl xmlObject>;

        $z0 = virtualinvoke $r3.<org.mozilla.javascript.xmlimpl.XMLObjectImpl: boolean hasXMLProperty(org.mozilla.javascript.xmlimpl.XMLName)>(r0);

        if $z0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public java.lang.String toString()
    {
        org.mozilla.javascript.xmlimpl.XMLName r1;
        java.lang.StringBuffer $r0, $r3, $r5, $r6;
        java.lang.String $r2, $r4, $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLName;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $z0 = r1.<org.mozilla.javascript.xmlimpl.XMLName: boolean isDescendants>;

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("..");

     label1:
        $z1 = r1.<org.mozilla.javascript.xmlimpl.XMLName: boolean isAttributeName>;

        if $z1 == 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(64);

     label2:
        $r2 = r1.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String uri>;

        if $r2 != null goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(42);

        $r9 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String localName()>();

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z2 == 0 goto label4;

        $r10 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;

     label3:
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        $r4 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String uri()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

     label4:
        $r6 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $r7 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLName: java.lang.String localName()>();

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r8 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    public static void <clinit>()
    {
        <org.mozilla.javascript.xmlimpl.XMLName: long serialVersionUID> = 3832176310755686977L;

        return;
    }
}
