public class org.apache.log4j.helpers.PatternParser extends java.lang.Object
{
    private static final char ESCAPE_CHAR;
    private static final int LITERAL_STATE;
    private static final int CONVERTER_STATE;
    private static final int DOT_STATE;
    private static final int MIN_STATE;
    private static final int MAX_STATE;
    static final int FULL_LOCATION_CONVERTER;
    static final int METHOD_LOCATION_CONVERTER;
    static final int CLASS_LOCATION_CONVERTER;
    static final int LINE_LOCATION_CONVERTER;
    static final int FILE_LOCATION_CONVERTER;
    static final int RELATIVE_TIME_CONVERTER;
    static final int THREAD_CONVERTER;
    static final int LEVEL_CONVERTER;
    static final int NDC_CONVERTER;
    static final int MESSAGE_CONVERTER;
    int state;
    protected java.lang.StringBuffer currentLiteral;
    protected int patternLength;
    protected int i;
    org.apache.log4j.helpers.PatternConverter head;
    org.apache.log4j.helpers.PatternConverter tail;
    protected org.apache.log4j.helpers.FormattingInfo formattingInfo;
    protected java.lang.String pattern;
    static java.lang.Class class$java$text$DateFormat;

    public void <init>(java.lang.String)
    {
        java.lang.StringBuffer $r1;
        int $i0;
        org.apache.log4j.helpers.PatternParser r0;
        java.lang.String r3;
        org.apache.log4j.helpers.FormattingInfo $r2;

        r0 := @this: org.apache.log4j.helpers.PatternParser;

        r3 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>(32);

        r0.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral> = $r1;

        $r2 = new org.apache.log4j.helpers.FormattingInfo;

        specialinvoke $r2.<org.apache.log4j.helpers.FormattingInfo: void <init>()>();

        r0.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo> = $r2;

        r0.<org.apache.log4j.helpers.PatternParser: java.lang.String pattern> = r3;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        r0.<org.apache.log4j.helpers.PatternParser: int patternLength> = $i0;

        r0.<org.apache.log4j.helpers.PatternParser: int state> = 0;

        return;
    }

    private void addToList(org.apache.log4j.helpers.PatternConverter)
    {
        org.apache.log4j.helpers.PatternConverter $r1, r2, $r3;
        org.apache.log4j.helpers.PatternParser r0;

        r0 := @this: org.apache.log4j.helpers.PatternParser;

        r2 := @parameter0: org.apache.log4j.helpers.PatternConverter;

        $r1 = r0.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.PatternConverter head>;

        if $r1 != null goto label1;

        r0.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.PatternConverter tail> = r2;

        r0.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.PatternConverter head> = r2;

        goto label2;

     label1:
        $r3 = r0.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.PatternConverter tail>;

        $r3.<org.apache.log4j.helpers.PatternConverter: org.apache.log4j.helpers.PatternConverter next> = r2;

        r0.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.PatternConverter tail> = r2;

     label2:
        return;
    }

    protected java.lang.String extractOption()
    {
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        org.apache.log4j.helpers.PatternParser r0;
        java.lang.String $r1, $r2, $r3, $r4;
        char $c3;

        r0 := @this: org.apache.log4j.helpers.PatternParser;

        $i1 = r0.<org.apache.log4j.helpers.PatternParser: int i>;

        $i0 = r0.<org.apache.log4j.helpers.PatternParser: int patternLength>;

        if $i1 >= $i0 goto label1;

        $r1 = r0.<org.apache.log4j.helpers.PatternParser: java.lang.String pattern>;

        $i2 = r0.<org.apache.log4j.helpers.PatternParser: int i>;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i2);

        $i10 = (int) $c3;

        if $i10 != 123 goto label1;

        $r2 = r0.<org.apache.log4j.helpers.PatternParser: java.lang.String pattern>;

        $i4 = r0.<org.apache.log4j.helpers.PatternParser: int i>;

        $i5 = virtualinvoke $r2.<java.lang.String: int indexOf(int,int)>(125, $i4);

        $i6 = r0.<org.apache.log4j.helpers.PatternParser: int i>;

        if $i5 <= $i6 goto label1;

        $r3 = r0.<org.apache.log4j.helpers.PatternParser: java.lang.String pattern>;

        $i7 = r0.<org.apache.log4j.helpers.PatternParser: int i>;

        $i8 = $i7 + 1;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>($i8, $i5);

        $i9 = $i5 + 1;

        r0.<org.apache.log4j.helpers.PatternParser: int i> = $i9;

        return $r4;

     label1:
        return null;
    }

    protected int extractPrecisionOption()
    {
        java.lang.NumberFormatException $r7;
        java.lang.StringBuffer $r2, $r3, $r4, $r5, $r8, $r9, $r10, $r11;
        int $i0, i1;
        org.apache.log4j.helpers.PatternParser r0;
        java.lang.String $r1, $r6, $r12;

        r0 := @this: org.apache.log4j.helpers.PatternParser;

        $r1 = virtualinvoke r0.<org.apache.log4j.helpers.PatternParser: java.lang.String extractOption()>();

        i1 = 0;

        if $r1 == null goto label4;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        i1 = $i0;

        if $i0 > 0 goto label2;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Precision option (");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") isn\'t a positive integer.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>($r6);

        i1 = 0;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Category option \"");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" not a decimal integer.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>($r12, $r7);

     label4:
        return i1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public org.apache.log4j.helpers.PatternConverter parse()
    {
        org.apache.log4j.helpers.PatternConverter $r2;
        java.lang.StringBuffer $r1, $r4, $r7, $r10, $r13, $r15, $r16, $r17, $r18, $r19, $r22, $r25, $r28, $r29, $r30, $r31, $r32, $r35, $r37, $r39;
        java.lang.String $r5, $r6, $r20, $r26, $r27, $r36;
        org.apache.log4j.helpers.PatternParser$LiteralPatternConverter $r38, $r40;
        org.apache.log4j.helpers.FormattingInfo $r8, $r9, $r11, $r12, $r21, $r23, $r24, $r33;
        org.apache.log4j.helpers.PatternParser r0;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42;
        char $c3, $c19;

        r0 := @this: org.apache.log4j.helpers.PatternParser;

        r0.<org.apache.log4j.helpers.PatternParser: int i> = 0;

     label01:
        $i25 = r0.<org.apache.log4j.helpers.PatternParser: int i>;

        $i26 = r0.<org.apache.log4j.helpers.PatternParser: int patternLength>;

        if $i25 >= $i26 goto label22;

        $r6 = r0.<org.apache.log4j.helpers.PatternParser: java.lang.String pattern>;

        $i1 = r0.<org.apache.log4j.helpers.PatternParser: int i>;

        $i2 = $i1 + 1;

        r0.<org.apache.log4j.helpers.PatternParser: int i> = $i2;

        $c3 = virtualinvoke $r6.<java.lang.String: char charAt(int)>($i1);

        $i4 = r0.<org.apache.log4j.helpers.PatternParser: int state>;

        tableswitch($i4)
        {
            case 0: goto label02;
            case 1: goto label09;
            case 2: goto label21;
            case 3: goto label17;
            case 4: goto label14;
            case 5: goto label19;
            default: goto label21;
        };

     label02:
        $i17 = r0.<org.apache.log4j.helpers.PatternParser: int i>;

        $i16 = r0.<org.apache.log4j.helpers.PatternParser: int patternLength>;

        if $i17 != $i16 goto label03;

        $r37 = r0.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        goto label01;

     label03:
        $i27 = (int) $c3;

        if $i27 != 37 goto label08;

        $r26 = r0.<org.apache.log4j.helpers.PatternParser: java.lang.String pattern>;

        $i18 = r0.<org.apache.log4j.helpers.PatternParser: int i>;

        $c19 = virtualinvoke $r26.<java.lang.String: char charAt(int)>($i18);

        $i28 = (int) $c19;

        lookupswitch($i28)
        {
            case 37: goto label04;
            case 110: goto label05;
            default: goto label06;
        };

     label04:
        $r29 = r0.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $i22 = r0.<org.apache.log4j.helpers.PatternParser: int i>;

        $i23 = $i22 + 1;

        r0.<org.apache.log4j.helpers.PatternParser: int i> = $i23;

        goto label21;

     label05:
        $r28 = r0.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        $r27 = <org.apache.log4j.Layout: java.lang.String LINE_SEP>;

        virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $i20 = r0.<org.apache.log4j.helpers.PatternParser: int i>;

        $i21 = $i20 + 1;

        r0.<org.apache.log4j.helpers.PatternParser: int i> = $i21;

        goto label21;

     label06:
        $r30 = r0.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        $i24 = virtualinvoke $r30.<java.lang.StringBuffer: int length()>();

        if $i24 == 0 goto label07;

        $r38 = new org.apache.log4j.helpers.PatternParser$LiteralPatternConverter;

        $r35 = r0.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r38.<org.apache.log4j.helpers.PatternParser$LiteralPatternConverter: void <init>(java.lang.String)>($r36);

        specialinvoke r0.<org.apache.log4j.helpers.PatternParser: void addToList(org.apache.log4j.helpers.PatternConverter)>($r38);

     label07:
        $r31 = r0.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        virtualinvoke $r31.<java.lang.StringBuffer: void setLength(int)>(0);

        $r32 = r0.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        r0.<org.apache.log4j.helpers.PatternParser: int state> = 1;

        $r33 = r0.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo>;

        virtualinvoke $r33.<org.apache.log4j.helpers.FormattingInfo: void reset()>();

        goto label21;

     label08:
        $r25 = r0.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        goto label21;

     label09:
        $r22 = r0.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $i29 = (int) $c3;

        lookupswitch($i29)
        {
            case 45: goto label10;
            case 46: goto label11;
            default: goto label12;
        };

     label10:
        $r23 = r0.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo>;

        $r23.<org.apache.log4j.helpers.FormattingInfo: boolean leftAlign> = 1;

        goto label21;

     label11:
        r0.<org.apache.log4j.helpers.PatternParser: int state> = 3;

        goto label21;

     label12:
        $i30 = (int) $c3;

        if $i30 < 48 goto label13;

        $i31 = (int) $c3;

        if $i31 > 57 goto label13;

        $r24 = r0.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo>;

        $i32 = (int) $c3;

        $i15 = $i32 - 48;

        $r24.<org.apache.log4j.helpers.FormattingInfo: int min> = $i15;

        r0.<org.apache.log4j.helpers.PatternParser: int state> = 4;

        goto label21;

     label13:
        virtualinvoke r0.<org.apache.log4j.helpers.PatternParser: void finalizeConverter(char)>($c3);

        goto label21;

     label14:
        $r10 = r0.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $i33 = (int) $c3;

        if $i33 < 48 goto label15;

        $i34 = (int) $c3;

        if $i34 > 57 goto label15;

        $r12 = r0.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo>;

        $r11 = r0.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo>;

        $i9 = $r11.<org.apache.log4j.helpers.FormattingInfo: int min>;

        $i11 = $i9 * 10;

        $i35 = (int) $c3;

        $i10 = $i35 - 48;

        $i12 = $i11 + $i10;

        $r12.<org.apache.log4j.helpers.FormattingInfo: int min> = $i12;

        goto label21;

     label15:
        $i36 = (int) $c3;

        if $i36 != 46 goto label16;

        r0.<org.apache.log4j.helpers.PatternParser: int state> = 3;

        goto label21;

     label16:
        virtualinvoke r0.<org.apache.log4j.helpers.PatternParser: void finalizeConverter(char)>($c3);

        goto label21;

     label17:
        $r13 = r0.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $i37 = (int) $c3;

        if $i37 < 48 goto label18;

        $i38 = (int) $c3;

        if $i38 > 57 goto label18;

        $r21 = r0.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo>;

        $i39 = (int) $c3;

        $i14 = $i39 - 48;

        $r21.<org.apache.log4j.helpers.FormattingInfo: int max> = $i14;

        r0.<org.apache.log4j.helpers.PatternParser: int state> = 5;

        goto label21;

     label18:
        $r39 = new java.lang.StringBuffer;

        specialinvoke $r39.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error occured in position ");

        $i13 = r0.<org.apache.log4j.helpers.PatternParser: int i>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i13);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".\n Was expecting digit, instead got char \"");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\".");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>($r20);

        r0.<org.apache.log4j.helpers.PatternParser: int state> = 0;

        goto label21;

     label19:
        $r7 = r0.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $i40 = (int) $c3;

        if $i40 < 48 goto label20;

        $i41 = (int) $c3;

        if $i41 > 57 goto label20;

        $r9 = r0.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo>;

        $r8 = r0.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo>;

        $i5 = $r8.<org.apache.log4j.helpers.FormattingInfo: int max>;

        $i7 = $i5 * 10;

        $i42 = (int) $c3;

        $i6 = $i42 - 48;

        $i8 = $i7 + $i6;

        $r9.<org.apache.log4j.helpers.FormattingInfo: int max> = $i8;

        goto label21;

     label20:
        virtualinvoke r0.<org.apache.log4j.helpers.PatternParser: void finalizeConverter(char)>($c3);

        r0.<org.apache.log4j.helpers.PatternParser: int state> = 0;

     label21:
        goto label01;

     label22:
        $r1 = r0.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        $i0 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        if $i0 == 0 goto label23;

        $r40 = new org.apache.log4j.helpers.PatternParser$LiteralPatternConverter;

        $r4 = r0.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r40.<org.apache.log4j.helpers.PatternParser$LiteralPatternConverter: void <init>(java.lang.String)>($r5);

        specialinvoke r0.<org.apache.log4j.helpers.PatternParser: void addToList(org.apache.log4j.helpers.PatternConverter)>($r40);

     label23:
        $r2 = r0.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.PatternConverter head>;

        return $r2;
    }

    protected void finalizeConverter(char)
    {
        org.apache.log4j.helpers.PatternConverter r61;
        org.apache.log4j.helpers.DateTimeDateFormat $r72;
        org.apache.log4j.helpers.ISO8601DateFormat $r70;
        org.apache.log4j.helpers.PatternParser$LocationPatternConverter $r76, $r77, $r78, $r80;
        org.apache.log4j.helpers.PatternParser$BasicPatternConverter $r79, $r81, $r82, $r83, $r84;
        java.text.SimpleDateFormat $r73;
        org.apache.log4j.helpers.PatternParser$CategoryPatternConverter $r68;
        java.lang.StringBuffer $r3, $r6, $r9, $r12, $r15, $r18, $r26, $r30, $r33, $r36, $r39, $r42, $r44, $r45, $r46, $r47, $r48, $r51, $r53, $r56, $r57, $r67, $r74, $r86;
        java.lang.String $r19, $r27, $r49, $r52, $r58, r62;
        org.apache.log4j.helpers.PatternParser$LiteralPatternConverter $r87;
        org.apache.log4j.helpers.FormattingInfo $r2, $r5, $r8, $r11, $r14, $r17, $r25, $r29, $r32, $r35, $r38, $r41, $r66;
        org.apache.log4j.helpers.AbsoluteTimeDateFormat $r71;
        org.apache.log4j.helpers.PatternParser$ClassNamePatternConverter $r69;
        org.apache.log4j.helpers.PatternParser r1;
        java.text.DateFormat r63;
        boolean $z0, $z1, $z2;
        int $i1, $i2, $i3, $i4;
        char c0;
        java.lang.IllegalArgumentException $r54;
        org.apache.log4j.helpers.PatternParser$DatePatternConverter $r75;
        org.apache.log4j.helpers.PatternParser$MDCPatternConverter $r85;
        java.lang.Class $r59, $r64;
        java.lang.Object $r60;

        r1 := @this: org.apache.log4j.helpers.PatternParser;

        c0 := @parameter0: char;

        $i4 = (int) c0;

        tableswitch($i4)
        {
            case 67: goto label02;
            case 68: goto label23;
            case 69: goto label23;
            case 70: goto label13;
            case 71: goto label23;
            case 72: goto label23;
            case 73: goto label23;
            case 74: goto label23;
            case 75: goto label23;
            case 76: goto label15;
            case 77: goto label17;
            case 78: goto label23;
            case 79: goto label23;
            case 80: goto label23;
            case 81: goto label23;
            case 82: goto label23;
            case 83: goto label23;
            case 84: goto label23;
            case 85: goto label23;
            case 86: goto label23;
            case 87: goto label23;
            case 88: goto label22;
            case 89: goto label23;
            case 90: goto label23;
            case 91: goto label23;
            case 92: goto label23;
            case 93: goto label23;
            case 94: goto label23;
            case 95: goto label23;
            case 96: goto label23;
            case 97: goto label23;
            case 98: goto label23;
            case 99: goto label01;
            case 100: goto label03;
            case 101: goto label23;
            case 102: goto label23;
            case 103: goto label23;
            case 104: goto label23;
            case 105: goto label23;
            case 106: goto label23;
            case 107: goto label23;
            case 108: goto label14;
            case 109: goto label16;
            case 110: goto label23;
            case 111: goto label23;
            case 112: goto label18;
            case 113: goto label23;
            case 114: goto label19;
            case 115: goto label23;
            case 116: goto label20;
            case 117: goto label23;
            case 118: goto label23;
            case 119: goto label23;
            case 120: goto label21;
            default: goto label23;
        };

     label01:
        $r68 = new org.apache.log4j.helpers.PatternParser$CategoryPatternConverter;

        $r25 = r1.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo>;

        $i1 = virtualinvoke r1.<org.apache.log4j.helpers.PatternParser: int extractPrecisionOption()>();

        specialinvoke $r68.<org.apache.log4j.helpers.PatternParser$CategoryPatternConverter: void <init>(org.apache.log4j.helpers.PatternParser,org.apache.log4j.helpers.FormattingInfo,int)>(r1, $r25, $i1);

        r61 = $r68;

        $r26 = r1.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        virtualinvoke $r26.<java.lang.StringBuffer: void setLength(int)>(0);

        goto label24;

     label02:
        $r69 = new org.apache.log4j.helpers.PatternParser$ClassNamePatternConverter;

        $r41 = r1.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo>;

        $i2 = virtualinvoke r1.<org.apache.log4j.helpers.PatternParser: int extractPrecisionOption()>();

        specialinvoke $r69.<org.apache.log4j.helpers.PatternParser$ClassNamePatternConverter: void <init>(org.apache.log4j.helpers.PatternParser,org.apache.log4j.helpers.FormattingInfo,int)>(r1, $r41, $i2);

        r61 = $r69;

        $r42 = r1.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        virtualinvoke $r42.<java.lang.StringBuffer: void setLength(int)>(0);

        goto label24;

     label03:
        r62 = "ISO8601";

        $r19 = virtualinvoke r1.<org.apache.log4j.helpers.PatternParser: java.lang.String extractOption()>();

        if $r19 == null goto label04;

        r62 = $r19;

     label04:
        $z0 = virtualinvoke r62.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ISO8601");

        if $z0 == 0 goto label05;

        $r70 = new org.apache.log4j.helpers.ISO8601DateFormat;

        specialinvoke $r70.<org.apache.log4j.helpers.ISO8601DateFormat: void <init>()>();

        r63 = $r70;

        goto label12;

     label05:
        $z1 = virtualinvoke r62.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ABSOLUTE");

        if $z1 == 0 goto label06;

        $r71 = new org.apache.log4j.helpers.AbsoluteTimeDateFormat;

        specialinvoke $r71.<org.apache.log4j.helpers.AbsoluteTimeDateFormat: void <init>()>();

        r63 = $r71;

        goto label12;

     label06:
        $z2 = virtualinvoke r62.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("DATE");

        if $z2 == 0 goto label07;

        $r72 = new org.apache.log4j.helpers.DateTimeDateFormat;

        specialinvoke $r72.<org.apache.log4j.helpers.DateTimeDateFormat: void <init>()>();

        r63 = $r72;

        goto label12;

     label07:
        $r73 = new java.text.SimpleDateFormat;

        specialinvoke $r73.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(r62);

        r63 = $r73;

     label08:
        goto label12;

     label09:
        $r54 := @caughtexception;

        $r74 = new java.lang.StringBuffer;

        specialinvoke $r74.<java.lang.StringBuffer: void <init>()>();

        $r56 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not instantiate SimpleDateFormat with ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r62);

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>($r58, $r54);

        $r59 = <org.apache.log4j.helpers.PatternParser: java.lang.Class class$java$text$DateFormat>;

        if $r59 != null goto label10;

        $r64 = staticinvoke <org.apache.log4j.helpers.PatternParser: java.lang.Class class$(java.lang.String)>("java.text.DateFormat");

        <org.apache.log4j.helpers.PatternParser: java.lang.Class class$java$text$DateFormat> = $r64;

        goto label11;

     label10:
        $r64 = <org.apache.log4j.helpers.PatternParser: java.lang.Class class$java$text$DateFormat>;

     label11:
        $r60 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)>("org.apache.log4j.helpers.ISO8601DateFormat", $r64, null);

        r63 = (java.text.DateFormat) $r60;

     label12:
        $r75 = new org.apache.log4j.helpers.PatternParser$DatePatternConverter;

        $r66 = r1.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo>;

        specialinvoke $r75.<org.apache.log4j.helpers.PatternParser$DatePatternConverter: void <init>(org.apache.log4j.helpers.FormattingInfo,java.text.DateFormat)>($r66, r63);

        r61 = $r75;

        $r67 = r1.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        virtualinvoke $r67.<java.lang.StringBuffer: void setLength(int)>(0);

        goto label24;

     label13:
        $r76 = new org.apache.log4j.helpers.PatternParser$LocationPatternConverter;

        $r38 = r1.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo>;

        specialinvoke $r76.<org.apache.log4j.helpers.PatternParser$LocationPatternConverter: void <init>(org.apache.log4j.helpers.PatternParser,org.apache.log4j.helpers.FormattingInfo,int)>(r1, $r38, 1004);

        r61 = $r76;

        $r39 = r1.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        virtualinvoke $r39.<java.lang.StringBuffer: void setLength(int)>(0);

        goto label24;

     label14:
        $r77 = new org.apache.log4j.helpers.PatternParser$LocationPatternConverter;

        $r17 = r1.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo>;

        specialinvoke $r77.<org.apache.log4j.helpers.PatternParser$LocationPatternConverter: void <init>(org.apache.log4j.helpers.PatternParser,org.apache.log4j.helpers.FormattingInfo,int)>(r1, $r17, 1000);

        r61 = $r77;

        $r18 = r1.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        virtualinvoke $r18.<java.lang.StringBuffer: void setLength(int)>(0);

        goto label24;

     label15:
        $r78 = new org.apache.log4j.helpers.PatternParser$LocationPatternConverter;

        $r35 = r1.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo>;

        specialinvoke $r78.<org.apache.log4j.helpers.PatternParser$LocationPatternConverter: void <init>(org.apache.log4j.helpers.PatternParser,org.apache.log4j.helpers.FormattingInfo,int)>(r1, $r35, 1003);

        r61 = $r78;

        $r36 = r1.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        virtualinvoke $r36.<java.lang.StringBuffer: void setLength(int)>(0);

        goto label24;

     label16:
        $r79 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;

        $r14 = r1.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo>;

        specialinvoke $r79.<org.apache.log4j.helpers.PatternParser$BasicPatternConverter: void <init>(org.apache.log4j.helpers.FormattingInfo,int)>($r14, 2004);

        r61 = $r79;

        $r15 = r1.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        virtualinvoke $r15.<java.lang.StringBuffer: void setLength(int)>(0);

        goto label24;

     label17:
        $r80 = new org.apache.log4j.helpers.PatternParser$LocationPatternConverter;

        $r32 = r1.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo>;

        specialinvoke $r80.<org.apache.log4j.helpers.PatternParser$LocationPatternConverter: void <init>(org.apache.log4j.helpers.PatternParser,org.apache.log4j.helpers.FormattingInfo,int)>(r1, $r32, 1001);

        r61 = $r80;

        $r33 = r1.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        virtualinvoke $r33.<java.lang.StringBuffer: void setLength(int)>(0);

        goto label24;

     label18:
        $r81 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;

        $r11 = r1.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo>;

        specialinvoke $r81.<org.apache.log4j.helpers.PatternParser$BasicPatternConverter: void <init>(org.apache.log4j.helpers.FormattingInfo,int)>($r11, 2002);

        r61 = $r81;

        $r12 = r1.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        virtualinvoke $r12.<java.lang.StringBuffer: void setLength(int)>(0);

        goto label24;

     label19:
        $r82 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;

        $r8 = r1.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo>;

        specialinvoke $r82.<org.apache.log4j.helpers.PatternParser$BasicPatternConverter: void <init>(org.apache.log4j.helpers.FormattingInfo,int)>($r8, 2000);

        r61 = $r82;

        $r9 = r1.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        virtualinvoke $r9.<java.lang.StringBuffer: void setLength(int)>(0);

        goto label24;

     label20:
        $r83 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;

        $r5 = r1.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo>;

        specialinvoke $r83.<org.apache.log4j.helpers.PatternParser$BasicPatternConverter: void <init>(org.apache.log4j.helpers.FormattingInfo,int)>($r5, 2001);

        r61 = $r83;

        $r6 = r1.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        virtualinvoke $r6.<java.lang.StringBuffer: void setLength(int)>(0);

        goto label24;

     label21:
        $r84 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;

        $r2 = r1.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo>;

        specialinvoke $r84.<org.apache.log4j.helpers.PatternParser$BasicPatternConverter: void <init>(org.apache.log4j.helpers.FormattingInfo,int)>($r2, 2003);

        r61 = $r84;

        $r3 = r1.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        virtualinvoke $r3.<java.lang.StringBuffer: void setLength(int)>(0);

        goto label24;

     label22:
        $r27 = virtualinvoke r1.<org.apache.log4j.helpers.PatternParser: java.lang.String extractOption()>();

        $r85 = new org.apache.log4j.helpers.PatternParser$MDCPatternConverter;

        $r29 = r1.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo>;

        specialinvoke $r85.<org.apache.log4j.helpers.PatternParser$MDCPatternConverter: void <init>(org.apache.log4j.helpers.FormattingInfo,java.lang.String)>($r29, $r27);

        r61 = $r85;

        $r30 = r1.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        virtualinvoke $r30.<java.lang.StringBuffer: void setLength(int)>(0);

        goto label24;

     label23:
        $r86 = new java.lang.StringBuffer;

        specialinvoke $r86.<java.lang.StringBuffer: void <init>()>();

        $r44 = virtualinvoke $r86.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected char [");

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] at position ");

        $i3 = r1.<org.apache.log4j.helpers.PatternParser: int i>;

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" in conversion patterrn.");

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>($r49);

        $r87 = new org.apache.log4j.helpers.PatternParser$LiteralPatternConverter;

        $r51 = r1.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r87.<org.apache.log4j.helpers.PatternParser$LiteralPatternConverter: void <init>(java.lang.String)>($r52);

        r61 = $r87;

        $r53 = r1.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        virtualinvoke $r53.<java.lang.StringBuffer: void setLength(int)>(0);

     label24:
        virtualinvoke r1.<org.apache.log4j.helpers.PatternParser: void addConverter(org.apache.log4j.helpers.PatternConverter)>(r61);

        return;

        catch java.lang.IllegalArgumentException from label07 to label08 with label09;
    }

    protected void addConverter(org.apache.log4j.helpers.PatternConverter)
    {
        java.lang.StringBuffer $r1;
        org.apache.log4j.helpers.PatternConverter r2;
        org.apache.log4j.helpers.PatternParser r0;
        org.apache.log4j.helpers.FormattingInfo $r3;

        r0 := @this: org.apache.log4j.helpers.PatternParser;

        r2 := @parameter0: org.apache.log4j.helpers.PatternConverter;

        $r1 = r0.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        specialinvoke r0.<org.apache.log4j.helpers.PatternParser: void addToList(org.apache.log4j.helpers.PatternConverter)>(r2);

        r0.<org.apache.log4j.helpers.PatternParser: int state> = 0;

        $r3 = r0.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo>;

        virtualinvoke $r3.<org.apache.log4j.helpers.FormattingInfo: void reset()>();

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <org.apache.log4j.helpers.PatternParser: int MESSAGE_CONVERTER> = 2004;

        <org.apache.log4j.helpers.PatternParser: int NDC_CONVERTER> = 2003;

        <org.apache.log4j.helpers.PatternParser: int LEVEL_CONVERTER> = 2002;

        <org.apache.log4j.helpers.PatternParser: int THREAD_CONVERTER> = 2001;

        <org.apache.log4j.helpers.PatternParser: int RELATIVE_TIME_CONVERTER> = 2000;

        <org.apache.log4j.helpers.PatternParser: int FILE_LOCATION_CONVERTER> = 1004;

        <org.apache.log4j.helpers.PatternParser: int LINE_LOCATION_CONVERTER> = 1003;

        <org.apache.log4j.helpers.PatternParser: int CLASS_LOCATION_CONVERTER> = 1002;

        <org.apache.log4j.helpers.PatternParser: int METHOD_LOCATION_CONVERTER> = 1001;

        <org.apache.log4j.helpers.PatternParser: int FULL_LOCATION_CONVERTER> = 1000;

        <org.apache.log4j.helpers.PatternParser: int MAX_STATE> = 5;

        <org.apache.log4j.helpers.PatternParser: int MIN_STATE> = 4;

        <org.apache.log4j.helpers.PatternParser: int DOT_STATE> = 3;

        <org.apache.log4j.helpers.PatternParser: int CONVERTER_STATE> = 1;

        <org.apache.log4j.helpers.PatternParser: int LITERAL_STATE> = 0;

        <org.apache.log4j.helpers.PatternParser: char ESCAPE_CHAR> = 37;

        return;
    }
}
