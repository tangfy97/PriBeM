class thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs extends java.lang.Object implements java.util.Iterator
{
    final boolean recheck;
    final java.util.Queue traverse;
    thredds.filesystem.ControllerCaching$Traversal currTraversal;
    java.util.Iterator currIter;
    final thredds.filesystem.ControllerCaching this$0;

    void <init>(thredds.filesystem.ControllerCaching, thredds.filesystem.CacheDirectory, boolean)
    {
        thredds.filesystem.ControllerCaching r1;
        thredds.filesystem.ControllerCaching$Traversal $r3;
        thredds.filesystem.CacheDirectory r4;
        java.util.LinkedList $r2;
        thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs r0;
        boolean z0;

        r0 := @this: thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs;

        r1 := @parameter0: thredds.filesystem.ControllerCaching;

        r4 := @parameter1: thredds.filesystem.CacheDirectory;

        z0 := @parameter2: boolean;

        r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: thredds.filesystem.ControllerCaching this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: java.util.Queue traverse> = $r2;

        $r3 = new thredds.filesystem.ControllerCaching$Traversal;

        specialinvoke $r3.<thredds.filesystem.ControllerCaching$Traversal: void <init>(thredds.filesystem.ControllerCaching,thredds.filesystem.CacheDirectory)>(r1, r4);

        r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: thredds.filesystem.ControllerCaching$Traversal currTraversal> = $r3;

        r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: boolean recheck> = z0;

        return;
    }

    public boolean hasNext()
    {
        java.util.Iterator $r1, $r2, $r3, $r4, $r5;
        thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs r0;
        boolean $z0, $z1;

        r0 := @this: thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs;

        $r1 = r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: java.util.Iterator currIter>;

        if $r1 != null goto label1;

        $r4 = specialinvoke r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: java.util.Iterator getNextIterator()>();

        r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: java.util.Iterator currIter> = $r4;

        $r5 = r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: java.util.Iterator currIter>;

        if $r5 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: java.util.Iterator currIter>;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        $r3 = specialinvoke r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: java.util.Iterator getNextIterator()>();

        r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: java.util.Iterator currIter> = $r3;

        $z1 = virtualinvoke r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: boolean hasNext()>();

        return $z1;

     label2:
        return 1;
    }

    public thredds.inventory.MFile next()
    {
        thredds.inventory.MFile $r3;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs r0;

        r0 := @this: thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs;

        $r1 = r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: java.util.Iterator currIter>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (thredds.inventory.MFile) $r2;

        return $r3;
    }

    private java.util.Iterator getNextIterator()
    {
        thredds.filesystem.CacheDirectory $r20, $r27, $r37;
        thredds.filesystem.CacheManager $r17;
        boolean $z0, $z1, $z2;
        java.util.List $r41;
        thredds.filesystem.ControllerCaching $r16, $r31, $r38;
        java.lang.StringBuilder $r18, $r22, $r23, $r25;
        java.util.Queue $r4, $r6, $r29;
        java.lang.String $r21, $r24, $r26, $r39;
        java.util.Iterator $r3, $r9, $r11, $r13, $r32, $r33;
        thredds.filesystem.ControllerCaching$Traversal $r1, $r2, $r8, $r10, $r12, $r19, $r28, $r30, $r34, $r36, $r40;
        thredds.filesystem.CacheFile r15;
        thredds.filesystem.ControllerCaching$MFileIterator $r35;
        java.lang.Object $r5, $r7, $r14;
        thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs r0;

        r0 := @this: thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs;

        $r1 = r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: thredds.filesystem.ControllerCaching$Traversal currTraversal>;

        $z0 = $r1.<thredds.filesystem.ControllerCaching$Traversal: boolean leavesAreDone>;

        if $z0 != 0 goto label1;

        $r34 = r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: thredds.filesystem.ControllerCaching$Traversal currTraversal>;

        $r34.<thredds.filesystem.ControllerCaching$Traversal: boolean leavesAreDone> = 1;

        $r35 = new thredds.filesystem.ControllerCaching$MFileIterator;

        $r38 = r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: thredds.filesystem.ControllerCaching this$0>;

        $r36 = r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: thredds.filesystem.ControllerCaching$Traversal currTraversal>;

        $r37 = $r36.<thredds.filesystem.ControllerCaching$Traversal: thredds.filesystem.CacheDirectory dir>;

        $r39 = virtualinvoke $r37.<thredds.filesystem.CacheDirectory: java.lang.String getPath()>();

        $r40 = r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: thredds.filesystem.ControllerCaching$Traversal currTraversal>;

        $r41 = $r40.<thredds.filesystem.ControllerCaching$Traversal: java.util.List fileList>;

        specialinvoke $r35.<thredds.filesystem.ControllerCaching$MFileIterator: void <init>(thredds.filesystem.ControllerCaching,java.lang.String,java.util.List)>($r38, $r39, $r41);

        return $r35;

     label1:
        $r2 = r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: thredds.filesystem.ControllerCaching$Traversal currTraversal>;

        $r3 = $r2.<thredds.filesystem.ControllerCaching$Traversal: java.util.Iterator subdirIterator>;

        if $r3 == null goto label3;

        $r10 = r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: thredds.filesystem.ControllerCaching$Traversal currTraversal>;

        $r11 = $r10.<thredds.filesystem.ControllerCaching$Traversal: java.util.Iterator subdirIterator>;

        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r12 = r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: thredds.filesystem.ControllerCaching$Traversal currTraversal>;

        $r13 = $r12.<thredds.filesystem.ControllerCaching$Traversal: java.util.Iterator subdirIterator>;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r15 = (thredds.filesystem.CacheFile) $r14;

        $r16 = r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: thredds.filesystem.ControllerCaching this$0>;

        $r17 = staticinvoke <thredds.filesystem.ControllerCaching: thredds.filesystem.CacheManager access$000(thredds.filesystem.ControllerCaching)>($r16);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: thredds.filesystem.ControllerCaching$Traversal currTraversal>;

        $r20 = $r19.<thredds.filesystem.ControllerCaching$Traversal: thredds.filesystem.CacheDirectory dir>;

        $r21 = virtualinvoke $r20.<thredds.filesystem.CacheDirectory: java.lang.String getPath()>();

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r24 = virtualinvoke r15.<thredds.filesystem.CacheFile: java.lang.String getShortName()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: boolean recheck>;

        $r27 = virtualinvoke $r17.<thredds.filesystem.CacheManager: thredds.filesystem.CacheDirectory get(java.lang.String,boolean)>($r26, $z2);

        if $r27 != null goto label2;

        $r33 = specialinvoke r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: java.util.Iterator getNextIterator()>();

        return $r33;

     label2:
        $r29 = r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: java.util.Queue traverse>;

        $r28 = r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: thredds.filesystem.ControllerCaching$Traversal currTraversal>;

        interfaceinvoke $r29.<java.util.Queue: boolean add(java.lang.Object)>($r28);

        $r30 = new thredds.filesystem.ControllerCaching$Traversal;

        $r31 = r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: thredds.filesystem.ControllerCaching this$0>;

        specialinvoke $r30.<thredds.filesystem.ControllerCaching$Traversal: void <init>(thredds.filesystem.ControllerCaching,thredds.filesystem.CacheDirectory)>($r31, $r27);

        r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: thredds.filesystem.ControllerCaching$Traversal currTraversal> = $r30;

        $r32 = specialinvoke r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: java.util.Iterator getNextIterator()>();

        return $r32;

     label3:
        $r4 = r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: java.util.Queue traverse>;

        $r5 = interfaceinvoke $r4.<java.util.Queue: java.lang.Object peek()>();

        if $r5 != null goto label4;

        return null;

     label4:
        $r6 = r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: java.util.Queue traverse>;

        $r7 = interfaceinvoke $r6.<java.util.Queue: java.lang.Object remove()>();

        $r8 = (thredds.filesystem.ControllerCaching$Traversal) $r7;

        r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: thredds.filesystem.ControllerCaching$Traversal currTraversal> = $r8;

        $r9 = specialinvoke r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: java.util.Iterator getNextIterator()>();

        return $r9;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs r1;

        r1 := @this: thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public volatile java.lang.Object next()
    {
        thredds.inventory.MFile $r1;
        thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs r0;

        r0 := @this: thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs;

        $r1 = virtualinvoke r0.<thredds.filesystem.ControllerCaching$MFileIteratorWithSubdirs: thredds.inventory.MFile next()>();

        return $r1;
    }
}
