public class org.apache.lucene.util.fst.Util$TopNSearcher extends java.lang.Object
{
    private final org.apache.lucene.util.fst.FST fst;
    private final org.apache.lucene.util.fst.FST$BytesReader bytesReader;
    private final int topN;
    private final int maxQueueDepth;
    private final org.apache.lucene.util.fst.FST$Arc scratchArc;
    final java.util.Comparator comparator;
    java.util.TreeSet queue;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.util.fst.FST, int, int, java.util.Comparator)
    {
        org.apache.lucene.util.fst.Util$TopNSearcher r0;
        org.apache.lucene.util.fst.FST$BytesReader $r3;
        org.apache.lucene.util.fst.Util$TieBreakByInputComparator $r6;
        org.apache.lucene.util.fst.FST$Arc $r1;
        java.util.TreeSet $r5;
        int i0, i1;
        org.apache.lucene.util.fst.FST r2;
        java.util.Comparator r4;

        r0 := @this: org.apache.lucene.util.fst.Util$TopNSearcher;

        r2 := @parameter0: org.apache.lucene.util.fst.FST;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r4 := @parameter3: java.util.Comparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.lucene.util.fst.FST$Arc;

        specialinvoke $r1.<org.apache.lucene.util.fst.FST$Arc: void <init>()>();

        r0.<org.apache.lucene.util.fst.Util$TopNSearcher: org.apache.lucene.util.fst.FST$Arc scratchArc> = $r1;

        r0.<org.apache.lucene.util.fst.Util$TopNSearcher: java.util.TreeSet queue> = null;

        r0.<org.apache.lucene.util.fst.Util$TopNSearcher: org.apache.lucene.util.fst.FST fst> = r2;

        $r3 = virtualinvoke r2.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$BytesReader getBytesReader()>();

        r0.<org.apache.lucene.util.fst.Util$TopNSearcher: org.apache.lucene.util.fst.FST$BytesReader bytesReader> = $r3;

        r0.<org.apache.lucene.util.fst.Util$TopNSearcher: int topN> = i0;

        r0.<org.apache.lucene.util.fst.Util$TopNSearcher: int maxQueueDepth> = i1;

        r0.<org.apache.lucene.util.fst.Util$TopNSearcher: java.util.Comparator comparator> = r4;

        $r5 = new java.util.TreeSet;

        $r6 = new org.apache.lucene.util.fst.Util$TieBreakByInputComparator;

        specialinvoke $r6.<org.apache.lucene.util.fst.Util$TieBreakByInputComparator: void <init>(java.util.Comparator)>(r4);

        specialinvoke $r5.<java.util.TreeSet: void <init>(java.util.Comparator)>($r6);

        r0.<org.apache.lucene.util.fst.Util$TopNSearcher: java.util.TreeSet queue> = $r5;

        return;
    }

    private void addIfCompetitive(org.apache.lucene.util.fst.Util$FSTPath)
    {
        org.apache.lucene.util.fst.FST$Arc $r3, $r19, $r35, $r38;
        java.lang.AssertionError $r23, $r25;
        org.apache.lucene.util.fst.Outputs $r6;
        java.util.TreeSet $r8, $r9, $r10, $r24, $r39, $r40;
        org.apache.lucene.util.fst.FST $r1;
        org.apache.lucene.util.IntsRef $r14, $r15, $r16, $r17, $r20, $r21, $r22, $r27, $r28, $r29, $r32, $r34, $r36;
        int[] $r18, $r30, $r31, $r33;
        boolean $z0, $z1;
        org.apache.lucene.util.fst.Util$TopNSearcher r0;
        org.apache.lucene.util.fst.Util$FSTPath r2, r26, $r37;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        java.lang.Object $r4, $r5, $r7, $r11, $r12;
        java.util.Comparator $r13;

        r0 := @this: org.apache.lucene.util.fst.Util$TopNSearcher;

        r2 := @parameter0: org.apache.lucene.util.fst.Util$FSTPath;

        $z0 = <org.apache.lucene.util.fst.Util$TopNSearcher: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r24 = r0.<org.apache.lucene.util.fst.Util$TopNSearcher: java.util.TreeSet queue>;

        if $r24 != null goto label1;

        $r25 = new java.lang.AssertionError;

        specialinvoke $r25.<java.lang.AssertionError: void <init>()>();

        throw $r25;

     label1:
        $r1 = r0.<org.apache.lucene.util.fst.Util$TopNSearcher: org.apache.lucene.util.fst.FST fst>;

        $r6 = $r1.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.Outputs outputs>;

        $r5 = r2.<org.apache.lucene.util.fst.Util$FSTPath: java.lang.Object cost>;

        $r3 = r2.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.fst.FST$Arc arc>;

        $r4 = $r3.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        $r7 = virtualinvoke $r6.<org.apache.lucene.util.fst.Outputs: java.lang.Object add(java.lang.Object,java.lang.Object)>($r5, $r4);

        $r8 = r0.<org.apache.lucene.util.fst.Util$TopNSearcher: java.util.TreeSet queue>;

        $i0 = virtualinvoke $r8.<java.util.TreeSet: int size()>();

        $i1 = r0.<org.apache.lucene.util.fst.Util$TopNSearcher: int maxQueueDepth>;

        if $i0 != $i1 goto label4;

        $r10 = r0.<org.apache.lucene.util.fst.Util$TopNSearcher: java.util.TreeSet queue>;

        $r11 = virtualinvoke $r10.<java.util.TreeSet: java.lang.Object last()>();

        r26 = (org.apache.lucene.util.fst.Util$FSTPath) $r11;

        $r13 = r0.<org.apache.lucene.util.fst.Util$TopNSearcher: java.util.Comparator comparator>;

        $r12 = r26.<org.apache.lucene.util.fst.Util$FSTPath: java.lang.Object cost>;

        $i2 = interfaceinvoke $r13.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r7, $r12);

        if $i2 <= 0 goto label2;

        return;

     label2:
        if $i2 != 0 goto label4;

        $r15 = r2.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.IntsRef input>;

        $r14 = r2.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.IntsRef input>;

        $i3 = $r14.<org.apache.lucene.util.IntsRef: int length>;

        $i4 = $i3 + 1;

        virtualinvoke $r15.<org.apache.lucene.util.IntsRef: void grow(int)>($i4);

        $r16 = r2.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.IntsRef input>;

        $r18 = $r16.<org.apache.lucene.util.IntsRef: int[] ints>;

        $r17 = r2.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.IntsRef input>;

        $i5 = $r17.<org.apache.lucene.util.IntsRef: int length>;

        $i6 = $i5 + 1;

        $r17.<org.apache.lucene.util.IntsRef: int length> = $i6;

        $r19 = r2.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.fst.FST$Arc arc>;

        $i7 = $r19.<org.apache.lucene.util.fst.FST$Arc: int label>;

        $r18[$i5] = $i7;

        $r21 = r26.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.IntsRef input>;

        $r20 = r2.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.IntsRef input>;

        $i8 = virtualinvoke $r21.<org.apache.lucene.util.IntsRef: int compareTo(org.apache.lucene.util.IntsRef)>($r20);

        $r22 = r2.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.IntsRef input>;

        $i9 = $r22.<org.apache.lucene.util.IntsRef: int length>;

        $i10 = $i9 - 1;

        $r22.<org.apache.lucene.util.IntsRef: int length> = $i10;

        $z1 = <org.apache.lucene.util.fst.Util$TopNSearcher: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        if $i8 != 0 goto label3;

        $r23 = new java.lang.AssertionError;

        specialinvoke $r23.<java.lang.AssertionError: void <init>()>();

        throw $r23;

     label3:
        if $i8 >= 0 goto label4;

        return;

     label4:
        $r27 = new org.apache.lucene.util.IntsRef;

        $r28 = r2.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.IntsRef input>;

        $i11 = $r28.<org.apache.lucene.util.IntsRef: int length>;

        $i12 = $i11 + 1;

        specialinvoke $r27.<org.apache.lucene.util.IntsRef: void <init>(int)>($i12);

        $r29 = r2.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.IntsRef input>;

        $r30 = $r29.<org.apache.lucene.util.IntsRef: int[] ints>;

        $r31 = $r27.<org.apache.lucene.util.IntsRef: int[] ints>;

        $r32 = r2.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.IntsRef input>;

        $i13 = $r32.<org.apache.lucene.util.IntsRef: int length>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r30, 0, $r31, 0, $i13);

        $r33 = $r27.<org.apache.lucene.util.IntsRef: int[] ints>;

        $r34 = r2.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.IntsRef input>;

        $i14 = $r34.<org.apache.lucene.util.IntsRef: int length>;

        $r35 = r2.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.fst.FST$Arc arc>;

        $i15 = $r35.<org.apache.lucene.util.fst.FST$Arc: int label>;

        $r33[$i14] = $i15;

        $r36 = r2.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.IntsRef input>;

        $i16 = $r36.<org.apache.lucene.util.IntsRef: int length>;

        $i17 = $i16 + 1;

        $r27.<org.apache.lucene.util.IntsRef: int length> = $i17;

        $r37 = new org.apache.lucene.util.fst.Util$FSTPath;

        $r38 = r2.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.fst.FST$Arc arc>;

        specialinvoke $r37.<org.apache.lucene.util.fst.Util$FSTPath: void <init>(java.lang.Object,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.IntsRef)>($r7, $r38, $r27);

        $r39 = r0.<org.apache.lucene.util.fst.Util$TopNSearcher: java.util.TreeSet queue>;

        virtualinvoke $r39.<java.util.TreeSet: boolean add(java.lang.Object)>($r37);

        $r40 = r0.<org.apache.lucene.util.fst.Util$TopNSearcher: java.util.TreeSet queue>;

        $i18 = virtualinvoke $r40.<java.util.TreeSet: int size()>();

        $i19 = r0.<org.apache.lucene.util.fst.Util$TopNSearcher: int maxQueueDepth>;

        $i20 = $i19 + 1;

        if $i18 != $i20 goto label5;

        $r9 = r0.<org.apache.lucene.util.fst.Util$TopNSearcher: java.util.TreeSet queue>;

        virtualinvoke $r9.<java.util.TreeSet: java.lang.Object pollLast()>();

     label5:
        return;
    }

    public void addStartPaths(org.apache.lucene.util.fst.FST$Arc, java.lang.Object, boolean, org.apache.lucene.util.IntsRef) throws java.io.IOException
    {
        org.apache.lucene.util.fst.FST$BytesReader $r7, $r10;
        org.apache.lucene.util.fst.Outputs $r2, $r15;
        org.apache.lucene.util.fst.FST$Arc r5, $r8, $r11, $r13, $r17;
        org.apache.lucene.util.IntsRef r6;
        org.apache.lucene.util.fst.Util$FSTPath $r18;
        int $i0, $i2;
        boolean $z0, z1, $z2;
        org.apache.lucene.util.fst.Util$TopNSearcher r0;
        org.apache.lucene.util.fst.FST $r1, $r9, $r12, $r14;
        java.lang.Object $r3, r16;

        r0 := @this: org.apache.lucene.util.fst.Util$TopNSearcher;

        r5 := @parameter0: org.apache.lucene.util.fst.FST$Arc;

        r16 := @parameter1: java.lang.Object;

        z1 := @parameter2: boolean;

        r6 := @parameter3: org.apache.lucene.util.IntsRef;

        $r1 = r0.<org.apache.lucene.util.fst.Util$TopNSearcher: org.apache.lucene.util.fst.FST fst>;

        $r2 = $r1.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.Outputs outputs>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.util.fst.Outputs: java.lang.Object getNoOutput()>();

        $z0 = virtualinvoke r16.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r14 = r0.<org.apache.lucene.util.fst.Util$TopNSearcher: org.apache.lucene.util.fst.FST fst>;

        $r15 = $r14.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.Outputs outputs>;

        r16 = virtualinvoke $r15.<org.apache.lucene.util.fst.Outputs: java.lang.Object getNoOutput()>();

     label1:
        $r18 = new org.apache.lucene.util.fst.Util$FSTPath;

        specialinvoke $r18.<org.apache.lucene.util.fst.Util$FSTPath: void <init>(java.lang.Object,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.IntsRef)>(r16, r5, r6);

        $r9 = r0.<org.apache.lucene.util.fst.Util$TopNSearcher: org.apache.lucene.util.fst.FST fst>;

        $r8 = $r18.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.fst.FST$Arc arc>;

        $r7 = r0.<org.apache.lucene.util.fst.Util$TopNSearcher: org.apache.lucene.util.fst.FST$BytesReader bytesReader>;

        virtualinvoke $r9.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readFirstTargetArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>(r5, $r8, $r7);

     label2:
        if z1 != 0 goto label3;

        $r13 = $r18.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.fst.FST$Arc arc>;

        $i0 = $r13.<org.apache.lucene.util.fst.FST$Arc: int label>;

        $i2 = (int) -1;

        if $i0 == $i2 goto label4;

     label3:
        specialinvoke r0.<org.apache.lucene.util.fst.Util$TopNSearcher: void addIfCompetitive(org.apache.lucene.util.fst.Util$FSTPath)>($r18);

     label4:
        $r17 = $r18.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.fst.FST$Arc arc>;

        $z2 = virtualinvoke $r17.<org.apache.lucene.util.fst.FST$Arc: boolean isLast()>();

        if $z2 == 0 goto label5;

        goto label6;

     label5:
        $r12 = r0.<org.apache.lucene.util.fst.Util$TopNSearcher: org.apache.lucene.util.fst.FST fst>;

        $r11 = $r18.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.fst.FST$Arc arc>;

        $r10 = r0.<org.apache.lucene.util.fst.Util$TopNSearcher: org.apache.lucene.util.fst.FST$BytesReader bytesReader>;

        virtualinvoke $r12.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readNextArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>($r11, $r10);

        goto label2;

     label6:
        return;
    }

    public org.apache.lucene.util.fst.Util$MinResult[] search() throws java.io.IOException
    {
        org.apache.lucene.util.fst.FST$Arc $r10, $r12, $r15, $r20, $r24, $r30, $r48, $r49, $r52, $r53, $r60, $r61, $r63, $r65;
        java.lang.StringBuilder $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r74;
        java.lang.Object[] $r68;
        java.lang.AssertionError $r72, $r75;
        org.apache.lucene.util.fst.Outputs $r5, $r27, $r33;
        java.util.TreeSet $r7, $r8, $r11, $r14, $r51;
        java.util.ArrayList $r70;
        java.lang.String $r45;
        org.apache.lucene.util.fst.FST $r2, $r4, $r13, $r23, $r29, $r59;
        org.apache.lucene.util.fst.Util$MinResult $r71, $r73;
        org.apache.lucene.util.IntsRef $r16, $r17, $r18, $r19, $r22, $r35, $r47, $r54, $r57;
        int[] $r21;
        boolean $z0, $z1, $z2, z3, $z4, z5, z6;
        org.apache.lucene.util.fst.Util$TopNSearcher r1;
        org.apache.lucene.util.fst.Util$MinResult[] $r66, $r67, $r69;
        org.apache.lucene.util.fst.FST$BytesReader $r3;
        org.apache.lucene.util.fst.Util$FSTPath r58;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, $i21, $i22, $i23, $i24, $i26, $i28;
        java.lang.Object $r6, $r9, $r25, $r26, $r28, $r31, $r32, $r34, $r56, $r64;
        java.util.Comparator $r62;

        r1 := @this: org.apache.lucene.util.fst.Util$TopNSearcher;

        $r70 = new java.util.ArrayList;

        specialinvoke $r70.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.lucene.util.fst.Util$TopNSearcher: org.apache.lucene.util.fst.FST fst>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$BytesReader getBytesReader()>();

        $r4 = r1.<org.apache.lucene.util.fst.Util$TopNSearcher: org.apache.lucene.util.fst.FST fst>;

        $r5 = $r4.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.Outputs outputs>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.util.fst.Outputs: java.lang.Object getNoOutput()>();

        i20 = 0;

     label01:
        $i21 = interfaceinvoke $r70.<java.util.List: int size()>();

        $i22 = r1.<org.apache.lucene.util.fst.Util$TopNSearcher: int topN>;

        if $i21 >= $i22 goto label18;

        $r7 = r1.<org.apache.lucene.util.fst.Util$TopNSearcher: java.util.TreeSet queue>;

        if $r7 != null goto label02;

        goto label18;

     label02:
        $r8 = r1.<org.apache.lucene.util.fst.Util$TopNSearcher: java.util.TreeSet queue>;

        $r9 = virtualinvoke $r8.<java.util.TreeSet: java.lang.Object pollFirst()>();

        r58 = (org.apache.lucene.util.fst.Util$FSTPath) $r9;

        if r58 != null goto label03;

        goto label18;

     label03:
        $r10 = r58.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.fst.FST$Arc arc>;

        $i0 = $r10.<org.apache.lucene.util.fst.FST$Arc: int label>;

        $i26 = (int) -1;

        if $i0 != $i26 goto label04;

        $r54 = r58.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.IntsRef input>;

        $i18 = $r54.<org.apache.lucene.util.IntsRef: int length>;

        $i19 = $i18 - 1;

        $r54.<org.apache.lucene.util.IntsRef: int length> = $i19;

        $r71 = new org.apache.lucene.util.fst.Util$MinResult;

        $r57 = r58.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.IntsRef input>;

        $r56 = r58.<org.apache.lucene.util.fst.Util$FSTPath: java.lang.Object cost>;

        specialinvoke $r71.<org.apache.lucene.util.fst.Util$MinResult: void <init>(org.apache.lucene.util.IntsRef,java.lang.Object)>($r57, $r56);

        interfaceinvoke $r70.<java.util.List: boolean add(java.lang.Object)>($r71);

        goto label01;

     label04:
        $i1 = interfaceinvoke $r70.<java.util.List: int size()>();

        $i2 = r1.<org.apache.lucene.util.fst.Util$TopNSearcher: int topN>;

        $i3 = $i2 - 1;

        if $i1 != $i3 goto label05;

        $i17 = r1.<org.apache.lucene.util.fst.Util$TopNSearcher: int maxQueueDepth>;

        $i16 = r1.<org.apache.lucene.util.fst.Util$TopNSearcher: int topN>;

        if $i17 != $i16 goto label05;

        r1.<org.apache.lucene.util.fst.Util$TopNSearcher: java.util.TreeSet queue> = null;

     label05:
        $r59 = r1.<org.apache.lucene.util.fst.Util$TopNSearcher: org.apache.lucene.util.fst.FST fst>;

        $r60 = r58.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.fst.FST$Arc arc>;

        $r61 = r58.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.fst.FST$Arc arc>;

        virtualinvoke $r59.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readFirstTargetArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>($r60, $r61, $r3);

        z3 = 0;

        z6 = 0;

        z5 = 0;

     label06:
        $r62 = r1.<org.apache.lucene.util.fst.Util$TopNSearcher: java.util.Comparator comparator>;

        $r63 = r58.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.fst.FST$Arc arc>;

        $r64 = $r63.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        $i23 = interfaceinvoke $r62.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r6, $r64);

        if $i23 != 0 goto label09;

        $r51 = r1.<org.apache.lucene.util.fst.Util$TopNSearcher: java.util.TreeSet queue>;

        if $r51 != null goto label07;

        z3 = 1;

        z6 = 1;

        goto label12;

     label07:
        if z5 != 0 goto label08;

        $r53 = r1.<org.apache.lucene.util.fst.Util$TopNSearcher: org.apache.lucene.util.fst.FST$Arc scratchArc>;

        $r52 = r58.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.fst.FST$Arc arc>;

        virtualinvoke $r53.<org.apache.lucene.util.fst.FST$Arc: org.apache.lucene.util.fst.FST$Arc copyFrom(org.apache.lucene.util.fst.FST$Arc)>($r52);

        z3 = 1;

        z6 = 1;

        z5 = 1;

        goto label10;

     label08:
        specialinvoke r1.<org.apache.lucene.util.fst.Util$TopNSearcher: void addIfCompetitive(org.apache.lucene.util.fst.Util$FSTPath)>(r58);

        goto label10;

     label09:
        $r11 = r1.<org.apache.lucene.util.fst.Util$TopNSearcher: java.util.TreeSet queue>;

        if $r11 == null goto label10;

        specialinvoke r1.<org.apache.lucene.util.fst.Util$TopNSearcher: void addIfCompetitive(org.apache.lucene.util.fst.Util$FSTPath)>(r58);

     label10:
        $r65 = r58.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.fst.FST$Arc arc>;

        $z4 = virtualinvoke $r65.<org.apache.lucene.util.fst.FST$Arc: boolean isLast()>();

        if $z4 == 0 goto label11;

        goto label12;

     label11:
        $r13 = r1.<org.apache.lucene.util.fst.Util$TopNSearcher: org.apache.lucene.util.fst.FST fst>;

        $r12 = r58.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.fst.FST$Arc arc>;

        virtualinvoke $r13.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc readNextArc(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>($r12, $r3);

        goto label06;

     label12:
        $z0 = <org.apache.lucene.util.fst.Util$TopNSearcher: boolean $assertionsDisabled>;

        if $z0 != 0 goto label13;

        if z6 != 0 goto label13;

        $r72 = new java.lang.AssertionError;

        specialinvoke $r72.<java.lang.AssertionError: void <init>()>();

        throw $r72;

     label13:
        $r14 = r1.<org.apache.lucene.util.fst.Util$TopNSearcher: java.util.TreeSet queue>;

        if $r14 == null goto label14;

        $r49 = r58.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.fst.FST$Arc arc>;

        $r48 = r1.<org.apache.lucene.util.fst.Util$TopNSearcher: org.apache.lucene.util.fst.FST$Arc scratchArc>;

        virtualinvoke $r49.<org.apache.lucene.util.fst.FST$Arc: org.apache.lucene.util.fst.FST$Arc copyFrom(org.apache.lucene.util.fst.FST$Arc)>($r48);

     label14:
        $r15 = r58.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.fst.FST$Arc arc>;

        $i4 = $r15.<org.apache.lucene.util.fst.FST$Arc: int label>;

        $i28 = (int) -1;

        if $i4 != $i28 goto label16;

        $r29 = r1.<org.apache.lucene.util.fst.Util$TopNSearcher: org.apache.lucene.util.fst.FST fst>;

        $r33 = $r29.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.Outputs outputs>;

        $r32 = r58.<org.apache.lucene.util.fst.Util$FSTPath: java.lang.Object cost>;

        $r30 = r58.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.fst.FST$Arc arc>;

        $r31 = $r30.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        $r34 = virtualinvoke $r33.<org.apache.lucene.util.fst.Outputs: java.lang.Object add(java.lang.Object,java.lang.Object)>($r32, $r31);

        $r35 = r58.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.IntsRef input>;

        $z1 = virtualinvoke r1.<org.apache.lucene.util.fst.Util$TopNSearcher: boolean acceptResult(org.apache.lucene.util.IntsRef,java.lang.Object)>($r35, $r34);

        if $z1 == 0 goto label15;

        $r73 = new org.apache.lucene.util.fst.Util$MinResult;

        $r47 = r58.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.IntsRef input>;

        specialinvoke $r73.<org.apache.lucene.util.fst.Util$MinResult: void <init>(org.apache.lucene.util.IntsRef,java.lang.Object)>($r47, $r34);

        interfaceinvoke $r70.<java.util.List: boolean add(java.lang.Object)>($r73);

        goto label17;

     label15:
        i20 = i20 + 1;

        $z2 = <org.apache.lucene.util.fst.Util$TopNSearcher: boolean $assertionsDisabled>;

        if $z2 != 0 goto label17;

        $i11 = r1.<org.apache.lucene.util.fst.Util$TopNSearcher: int topN>;

        $i13 = i20 + $i11;

        $i12 = r1.<org.apache.lucene.util.fst.Util$TopNSearcher: int maxQueueDepth>;

        if $i13 <= $i12 goto label17;

        $r75 = new java.lang.AssertionError;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maxQueueDepth (");

        $i14 = r1.<org.apache.lucene.util.fst.Util$TopNSearcher: int maxQueueDepth>;

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is too small for topN (");

        $i15 = r1.<org.apache.lucene.util.fst.Util$TopNSearcher: int topN>;

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): rejected ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i20);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" paths");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r75.<java.lang.AssertionError: void <init>(java.lang.Object)>($r45);

        throw $r75;

     label16:
        $r17 = r58.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.IntsRef input>;

        $r16 = r58.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.IntsRef input>;

        $i5 = $r16.<org.apache.lucene.util.IntsRef: int length>;

        $i6 = 1 + $i5;

        virtualinvoke $r17.<org.apache.lucene.util.IntsRef: void grow(int)>($i6);

        $r18 = r58.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.IntsRef input>;

        $r21 = $r18.<org.apache.lucene.util.IntsRef: int[] ints>;

        $r19 = r58.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.IntsRef input>;

        $i8 = $r19.<org.apache.lucene.util.IntsRef: int length>;

        $r20 = r58.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.fst.FST$Arc arc>;

        $i7 = $r20.<org.apache.lucene.util.fst.FST$Arc: int label>;

        $r21[$i8] = $i7;

        $r22 = r58.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.IntsRef input>;

        $i9 = $r22.<org.apache.lucene.util.IntsRef: int length>;

        $i10 = $i9 + 1;

        $r22.<org.apache.lucene.util.IntsRef: int length> = $i10;

        $r23 = r1.<org.apache.lucene.util.fst.Util$TopNSearcher: org.apache.lucene.util.fst.FST fst>;

        $r27 = $r23.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.Outputs outputs>;

        $r26 = r58.<org.apache.lucene.util.fst.Util$FSTPath: java.lang.Object cost>;

        $r24 = r58.<org.apache.lucene.util.fst.Util$FSTPath: org.apache.lucene.util.fst.FST$Arc arc>;

        $r25 = $r24.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        $r28 = virtualinvoke $r27.<org.apache.lucene.util.fst.Outputs: java.lang.Object add(java.lang.Object,java.lang.Object)>($r26, $r25);

        r58.<org.apache.lucene.util.fst.Util$FSTPath: java.lang.Object cost> = $r28;

        goto label05;

     label17:
        goto label01;

     label18:
        $i24 = interfaceinvoke $r70.<java.util.List: int size()>();

        $r66 = newarray (org.apache.lucene.util.fst.Util$MinResult)[$i24];

        $r67 = (org.apache.lucene.util.fst.Util$MinResult[]) $r66;

        $r68 = interfaceinvoke $r70.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r67);

        $r69 = (org.apache.lucene.util.fst.Util$MinResult[]) $r68;

        return $r69;
    }

    protected boolean acceptResult(org.apache.lucene.util.IntsRef, java.lang.Object)
    {
        org.apache.lucene.util.fst.Util$TopNSearcher r0;
        java.lang.Object r2;
        org.apache.lucene.util.IntsRef r1;

        r0 := @this: org.apache.lucene.util.fst.Util$TopNSearcher;

        r1 := @parameter0: org.apache.lucene.util.IntsRef;

        r2 := @parameter1: java.lang.Object;

        return 1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/util/fst/Util;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.util.fst.Util$TopNSearcher: boolean $assertionsDisabled> = $z1;

        return;
    }
}
