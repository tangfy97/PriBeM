public class org.apache.tika.parser.ParseContext extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.util.Map context;

    public void <init>()
    {
        java.util.HashMap $r1;
        org.apache.tika.parser.ParseContext r0;

        r0 := @this: org.apache.tika.parser.ParseContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.tika.parser.ParseContext: java.util.Map context> = $r1;

        return;
    }

    public void set(java.lang.Class, java.lang.Object)
    {
        org.apache.tika.parser.ParseContext r1;
        java.util.Map $r3, $r5;
        java.lang.Object r0;
        java.lang.Class r2;
        java.lang.String $r4, $r6;

        r1 := @this: org.apache.tika.parser.ParseContext;

        r2 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Object;

        if r0 == null goto label1;

        $r5 = r1.<org.apache.tika.parser.ParseContext: java.util.Map context>;

        $r6 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r0);

        goto label2;

     label1:
        $r3 = r1.<org.apache.tika.parser.ParseContext: java.util.Map context>;

        $r4 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r4);

     label2:
        return;
    }

    public java.lang.Object get(java.lang.Class)
    {
        org.apache.tika.parser.ParseContext r0;
        java.util.Map $r2;
        java.lang.Class r1;
        java.lang.Object $r4;
        java.lang.String $r3;

        r0 := @this: org.apache.tika.parser.ParseContext;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.tika.parser.ParseContext: java.util.Map context>;

        $r3 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        return $r4;
    }

    public java.lang.Object get(java.lang.Class, java.lang.Object)
    {
        org.apache.tika.parser.ParseContext r0;
        java.lang.Class r1;
        java.lang.Object $r2, r3;

        r0 := @this: org.apache.tika.parser.ParseContext;

        r1 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.tika.parser.ParseContext: java.lang.Object get(java.lang.Class)>(r1);

        if $r2 == null goto label1;

        return $r2;

     label1:
        return r3;
    }

    public javax.xml.parsers.SAXParser getSAXParser() throws org.apache.tika.exception.TikaException
    {
        javax.xml.parsers.SAXParserFactory $r3;
        org.apache.tika.exception.TikaException $r6, $r8;
        javax.xml.parsers.ParserConfigurationException $r7;
        org.apache.tika.parser.ParseContext r0;
        org.xml.sax.SAXException $r5;
        javax.xml.parsers.SAXParser r2, $r4;
        java.lang.Object $r1;

        r0 := @this: org.apache.tika.parser.ParseContext;

        $r1 = virtualinvoke r0.<org.apache.tika.parser.ParseContext: java.lang.Object get(java.lang.Class)>(class "Ljavax/xml/parsers/SAXParser;");

        r2 = (javax.xml.parsers.SAXParser) $r1;

        if r2 == null goto label1;

        return r2;

     label1:
        $r3 = virtualinvoke r0.<org.apache.tika.parser.ParseContext: javax.xml.parsers.SAXParserFactory getSAXParserFactory()>();

        $r4 = virtualinvoke $r3.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

     label2:
        return $r4;

     label3:
        $r7 := @caughtexception;

        $r8 = new org.apache.tika.exception.TikaException;

        specialinvoke $r8.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to configure a SAX parser", $r7);

        throw $r8;

     label4:
        $r5 := @caughtexception;

        $r6 = new org.apache.tika.exception.TikaException;

        specialinvoke $r6.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to create a SAX parser", $r5);

        throw $r6;

        catch javax.xml.parsers.ParserConfigurationException from label1 to label2 with label3;
        catch org.xml.sax.SAXException from label1 to label2 with label4;
    }

    public javax.xml.parsers.SAXParserFactory getSAXParserFactory()
    {
        org.xml.sax.SAXNotRecognizedException $r3;
        org.xml.sax.SAXNotSupportedException $r4;
        javax.xml.parsers.ParserConfigurationException $r5;
        org.apache.tika.parser.ParseContext r0;
        javax.xml.parsers.SAXParserFactory $r2, r6;
        java.lang.Object $r1;

        r0 := @this: org.apache.tika.parser.ParseContext;

        $r1 = virtualinvoke r0.<org.apache.tika.parser.ParseContext: java.lang.Object get(java.lang.Class)>(class "Ljavax/xml/parsers/SAXParserFactory;");

        r6 = (javax.xml.parsers.SAXParserFactory) $r1;

        if r6 != null goto label6;

        $r2 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        r6 = $r2;

        virtualinvoke $r2.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(1);

     label1:
        virtualinvoke $r2.<javax.xml.parsers.SAXParserFactory: void setFeature(java.lang.String,boolean)>("http://javax.xml.XMLConstants/feature/secure-processing", 1);

     label2:
        goto label6;

     label3:
        $r5 := @caughtexception;

        goto label6;

     label4:
        $r4 := @caughtexception;

        goto label6;

     label5:
        $r3 := @caughtexception;

     label6:
        return r6;

        catch javax.xml.parsers.ParserConfigurationException from label1 to label2 with label3;
        catch org.xml.sax.SAXNotSupportedException from label1 to label2 with label4;
        catch org.xml.sax.SAXNotRecognizedException from label1 to label2 with label5;
    }

    public static void <clinit>()
    {
        <org.apache.tika.parser.ParseContext: long serialVersionUID> = -5921436862145826534L;

        return;
    }
}
