public class org.springframework.core.serializer.support.DeserializingConverter extends java.lang.Object implements org.springframework.core.convert.converter.Converter
{
    private final org.springframework.core.serializer.Deserializer deserializer;

    public void <init>()
    {
        org.springframework.core.serializer.support.DeserializingConverter r0;
        org.springframework.core.serializer.DefaultDeserializer $r1;

        r0 := @this: org.springframework.core.serializer.support.DeserializingConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.springframework.core.serializer.DefaultDeserializer;

        specialinvoke $r1.<org.springframework.core.serializer.DefaultDeserializer: void <init>()>();

        r0.<org.springframework.core.serializer.support.DeserializingConverter: org.springframework.core.serializer.Deserializer deserializer> = $r1;

        return;
    }

    public void <init>(org.springframework.core.serializer.Deserializer)
    {
        org.springframework.core.serializer.support.DeserializingConverter r0;
        org.springframework.core.serializer.Deserializer r1;

        r0 := @this: org.springframework.core.serializer.support.DeserializingConverter;

        r1 := @parameter0: org.springframework.core.serializer.Deserializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Deserializer must not be null");

        r0.<org.springframework.core.serializer.support.DeserializingConverter: org.springframework.core.serializer.Deserializer deserializer> = r1;

        return;
    }

    public java.lang.Object convert(byte[])
    {
        java.lang.Throwable $r5;
        byte[] r1;
        java.io.ByteArrayInputStream $r0;
        org.springframework.core.serializer.support.SerializationFailedException $r6;
        org.springframework.core.serializer.support.DeserializingConverter r2;
        java.lang.Object $r4;
        java.lang.StringBuilder $r7, $r11, $r12;
        java.lang.Class $r9;
        java.lang.String $r10, $r13;
        org.springframework.core.serializer.Deserializer $r3, $r8;

        r2 := @this: org.springframework.core.serializer.support.DeserializingConverter;

        r1 := @parameter0: byte[];

        $r0 = new java.io.ByteArrayInputStream;

        specialinvoke $r0.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);

     label1:
        $r3 = r2.<org.springframework.core.serializer.support.DeserializingConverter: org.springframework.core.serializer.Deserializer deserializer>;

        $r4 = interfaceinvoke $r3.<org.springframework.core.serializer.Deserializer: java.lang.Object deserialize(java.io.InputStream)>($r0);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.springframework.core.serializer.support.SerializationFailedException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to deserialize payload. Is the byte array a result of corresponding serialization for ");

        $r8 = r2.<org.springframework.core.serializer.support.DeserializingConverter: org.springframework.core.serializer.Deserializer deserializer>;

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getSimpleName()>();

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.springframework.core.serializer.support.SerializationFailedException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r5);

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public volatile java.lang.Object convert(java.lang.Object)
    {
        byte[] $r2;
        org.springframework.core.serializer.support.DeserializingConverter r0;
        java.lang.Object r1, $r3;

        r0 := @this: org.springframework.core.serializer.support.DeserializingConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (byte[]) r1;

        $r3 = virtualinvoke r0.<org.springframework.core.serializer.support.DeserializingConverter: java.lang.Object convert(byte[])>($r2);

        return $r3;
    }
}
