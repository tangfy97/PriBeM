public class org.apache.log4j.net.JMSAppender extends org.apache.log4j.AppenderSkeleton
{
    java.lang.String securityPrincipalName;
    java.lang.String securityCredentials;
    java.lang.String initialContextFactoryName;
    java.lang.String urlPkgPrefixes;
    java.lang.String providerURL;
    java.lang.String topicBindingName;
    java.lang.String tcfBindingName;
    java.lang.String userName;
    java.lang.String password;
    boolean locationInfo;
    javax.jms.TopicConnection topicConnection;
    javax.jms.TopicSession topicSession;
    javax.jms.TopicPublisher topicPublisher;

    public void <init>()
    {
        org.apache.log4j.net.JMSAppender r0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        specialinvoke r0.<org.apache.log4j.AppenderSkeleton: void <init>()>();

        return;
    }

    public void setTopicConnectionFactoryBindingName(java.lang.String)
    {
        java.lang.String r1;
        org.apache.log4j.net.JMSAppender r0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.log4j.net.JMSAppender: java.lang.String tcfBindingName> = r1;

        return;
    }

    public java.lang.String getTopicConnectionFactoryBindingName()
    {
        java.lang.String $r1;
        org.apache.log4j.net.JMSAppender r0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        $r1 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String tcfBindingName>;

        return $r1;
    }

    public void setTopicBindingName(java.lang.String)
    {
        java.lang.String r1;
        org.apache.log4j.net.JMSAppender r0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.log4j.net.JMSAppender: java.lang.String topicBindingName> = r1;

        return;
    }

    public java.lang.String getTopicBindingName()
    {
        java.lang.String $r1;
        org.apache.log4j.net.JMSAppender r0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        $r1 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String topicBindingName>;

        return $r1;
    }

    public boolean getLocationInfo()
    {
        org.apache.log4j.net.JMSAppender r0;
        boolean $z0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        $z0 = r0.<org.apache.log4j.net.JMSAppender: boolean locationInfo>;

        return $z0;
    }

    public void activateOptions()
    {
        javax.naming.InitialContext r66, $r68, $r69;
        javax.jms.Topic $r29;
        java.lang.Exception $r76;
        org.apache.log4j.net.JMSAppender r0;
        java.lang.Throwable $r57;
        javax.jms.TopicPublisher $r24;
        java.lang.StringBuffer $r4, $r6, $r7, $r16, $r18, $r19, $r44, $r46, $r47, $r52, $r54, $r55, $r60, $r62, $r63, $r70, $r71, $r72, $r73, $r74;
        java.lang.String $r1, $r5, $r8, $r9, $r11, $r17, $r20, $r21, $r26, $r27, $r31, $r32, $r33, $r34, $r36, $r37, $r38, $r39, $r40, $r45, $r48, $r53, $r56, $r61, $r64;
        javax.jms.Connection $r75;
        java.util.Properties $r67;
        org.apache.log4j.spi.ErrorHandler $r43, $r51, $r59;
        java.lang.RuntimeException $r41;
        javax.jms.TopicConnectionFactory $r35;
        javax.naming.NamingException $r49;
        javax.jms.TopicSession $r14, $r23;
        javax.jms.TopicConnection $r12, $r13, $r25, $r28;
        java.lang.Object $r10, $r22;

        r0 := @this: org.apache.log4j.net.JMSAppender;

     label01:
        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>("Getting initial context.");

        $r1 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String initialContextFactoryName>;

        if $r1 == null goto label07;

        $r67 = new java.util.Properties;

        specialinvoke $r67.<java.util.Properties: void <init>()>();

        $r31 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String initialContextFactoryName>;

        virtualinvoke $r67.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.factory.initial", $r31);

        $r32 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String providerURL>;

        if $r32 == null goto label02;

        $r40 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String providerURL>;

        virtualinvoke $r67.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.provider.url", $r40);

        goto label03;

     label02:
        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>("You have set InitialContextFactoryName option but not the ProviderURL. This is likely to cause problems.");

     label03:
        $r33 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String urlPkgPrefixes>;

        if $r33 == null goto label04;

        $r39 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String urlPkgPrefixes>;

        virtualinvoke $r67.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.factory.url.pkgs", $r39);

     label04:
        $r34 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String securityPrincipalName>;

        if $r34 == null goto label06;

        $r36 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String securityPrincipalName>;

        virtualinvoke $r67.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.principal", $r36);

        $r37 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String securityCredentials>;

        if $r37 == null goto label05;

        $r38 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String securityCredentials>;

        virtualinvoke $r67.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.credentials", $r38);

        goto label06;

     label05:
        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>("You have set SecurityPrincipalName option but not the SecurityCredentials. This is likely to cause problems.");

     label06:
        $r68 = new javax.naming.InitialContext;

        specialinvoke $r68.<javax.naming.InitialContext: void <init>(java.util.Hashtable)>($r67);

        r66 = $r68;

        goto label08;

     label07:
        $r69 = new javax.naming.InitialContext;

        specialinvoke $r69.<javax.naming.InitialContext: void <init>()>();

        r66 = $r69;

     label08:
        $r70 = new java.lang.StringBuffer;

        specialinvoke $r70.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Looking up [");

        $r5 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String tcfBindingName>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r8);

        $r9 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String tcfBindingName>;

        $r10 = virtualinvoke r0.<org.apache.log4j.net.JMSAppender: java.lang.Object lookup(javax.naming.Context,java.lang.String)>(r66, $r9);

        $r35 = (javax.jms.TopicConnectionFactory) $r10;

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>("About to create TopicConnection.");

        $r11 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String userName>;

        if $r11 == null goto label09;

        $r27 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String userName>;

        $r26 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String password>;

        $r28 = interfaceinvoke $r35.<javax.jms.TopicConnectionFactory: javax.jms.TopicConnection createTopicConnection(java.lang.String,java.lang.String)>($r27, $r26);

        r0.<org.apache.log4j.net.JMSAppender: javax.jms.TopicConnection topicConnection> = $r28;

        goto label10;

     label09:
        $r12 = interfaceinvoke $r35.<javax.jms.TopicConnectionFactory: javax.jms.TopicConnection createTopicConnection()>();

        r0.<org.apache.log4j.net.JMSAppender: javax.jms.TopicConnection topicConnection> = $r12;

     label10:
        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>("Creating TopicSession, non-transactional, in AUTO_ACKNOWLEDGE mode.");

        $r13 = r0.<org.apache.log4j.net.JMSAppender: javax.jms.TopicConnection topicConnection>;

        $r14 = interfaceinvoke $r13.<javax.jms.TopicConnection: javax.jms.TopicSession createTopicSession(boolean,int)>(0, 1);

        r0.<org.apache.log4j.net.JMSAppender: javax.jms.TopicSession topicSession> = $r14;

        $r71 = new java.lang.StringBuffer;

        specialinvoke $r71.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Looking up topic name [");

        $r17 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String topicBindingName>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("].");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r20);

        $r21 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String topicBindingName>;

        $r22 = virtualinvoke r0.<org.apache.log4j.net.JMSAppender: java.lang.Object lookup(javax.naming.Context,java.lang.String)>(r66, $r21);

        $r29 = (javax.jms.Topic) $r22;

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>("Creating TopicPublisher.");

        $r23 = r0.<org.apache.log4j.net.JMSAppender: javax.jms.TopicSession topicSession>;

        $r24 = interfaceinvoke $r23.<javax.jms.TopicSession: javax.jms.TopicPublisher createPublisher(javax.jms.Topic)>($r29);

        r0.<org.apache.log4j.net.JMSAppender: javax.jms.TopicPublisher topicPublisher> = $r24;

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>("Starting TopicConnection.");

        $r25 = r0.<org.apache.log4j.net.JMSAppender: javax.jms.TopicConnection topicConnection>;

        $r75 = (javax.jms.Connection) $r25;

        interfaceinvoke $r75.<javax.jms.Connection: void start()>();

        interfaceinvoke r66.<javax.naming.Context: void close()>();

     label11:
        goto label15;

     label12:
        $r57 := @caughtexception;

        $r59 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.ErrorHandler errorHandler>;

        $r72 = new java.lang.StringBuffer;

        specialinvoke $r72.<java.lang.StringBuffer: void <init>()>();

        $r60 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error while activating options for appender named [");

        $r61 = r0.<org.apache.log4j.AppenderSkeleton: java.lang.String name>;

        $r62 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("].");

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.String toString()>();

        $r76 = (java.lang.Exception) $r57;

        interfaceinvoke $r59.<org.apache.log4j.spi.ErrorHandler: void error(java.lang.String,java.lang.Exception,int)>($r64, $r76, 0);

        goto label15;

     label13:
        $r49 := @caughtexception;

        $r51 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.ErrorHandler errorHandler>;

        $r73 = new java.lang.StringBuffer;

        specialinvoke $r73.<java.lang.StringBuffer: void <init>()>();

        $r52 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error while activating options for appender named [");

        $r53 = r0.<org.apache.log4j.AppenderSkeleton: java.lang.String name>;

        $r54 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r53);

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("].");

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r51.<org.apache.log4j.spi.ErrorHandler: void error(java.lang.String,java.lang.Exception,int)>($r56, $r49, 0);

        goto label15;

     label14:
        $r41 := @caughtexception;

        $r43 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.ErrorHandler errorHandler>;

        $r74 = new java.lang.StringBuffer;

        specialinvoke $r74.<java.lang.StringBuffer: void <init>()>();

        $r44 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error while activating options for appender named [");

        $r45 = r0.<org.apache.log4j.AppenderSkeleton: java.lang.String name>;

        $r46 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("].");

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r43.<org.apache.log4j.spi.ErrorHandler: void error(java.lang.String,java.lang.Exception,int)>($r48, $r41, 0);

     label15:
        return;

        catch javax.jms.JMSException from label01 to label11 with label12;
        catch javax.naming.NamingException from label01 to label11 with label13;
        catch java.lang.RuntimeException from label01 to label11 with label14;
    }

    protected java.lang.Object lookup(javax.naming.Context, java.lang.String) throws javax.naming.NamingException
    {
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        java.lang.Object $r2;
        javax.naming.Context r0;
        java.lang.String r1, $r8;
        javax.naming.NameNotFoundException $r3;
        org.apache.log4j.net.JMSAppender r9;

        r9 := @this: org.apache.log4j.net.JMSAppender;

        r0 := @parameter0: javax.naming.Context;

        r1 := @parameter1: java.lang.String;

     label1:
        $r2 = interfaceinvoke r0.<javax.naming.Context: java.lang.Object lookup(java.lang.String)>(r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not find name [");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("].");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>($r8);

        throw $r3;

        catch javax.naming.NameNotFoundException from label1 to label2 with label3;
    }

    protected boolean checkEntryConditions()
    {
        javax.jms.TopicConnection $r1;
        org.apache.log4j.spi.ErrorHandler $r5;
        javax.jms.TopicPublisher $r3;
        java.lang.StringBuffer $r4, $r6, $r7, $r9, $r10;
        javax.jms.TopicSession $r2;
        java.lang.String $r8, $r11, r12, r13, r14;
        org.apache.log4j.net.JMSAppender r0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        r12 = null;

        r14 = null;

        r13 = null;

        $r1 = r0.<org.apache.log4j.net.JMSAppender: javax.jms.TopicConnection topicConnection>;

        if $r1 != null goto label1;

        r12 = "No TopicConnection";

        r14 = "No TopicConnection";

        r13 = "No TopicConnection";

        goto label3;

     label1:
        $r2 = r0.<org.apache.log4j.net.JMSAppender: javax.jms.TopicSession topicSession>;

        if $r2 != null goto label2;

        r12 = "No TopicSession";

        r14 = "No TopicSession";

        r13 = "No TopicSession";

        goto label3;

     label2:
        $r3 = r0.<org.apache.log4j.net.JMSAppender: javax.jms.TopicPublisher topicPublisher>;

        if $r3 != null goto label3;

        r12 = "No TopicPublisher";

        r14 = "No TopicPublisher";

        r13 = "No TopicPublisher";

     label3:
        if r13 == null goto label4;

        $r5 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.ErrorHandler errorHandler>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r14);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" for JMSAppender named [");

        $r8 = r0.<org.apache.log4j.AppenderSkeleton: java.lang.String name>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("].");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r5.<org.apache.log4j.spi.ErrorHandler: void error(java.lang.String)>($r11);

        return 0;

     label4:
        return 1;
    }

    public synchronized void close()
    {
        java.lang.Throwable $r18;
        javax.jms.Session $r28;
        java.lang.StringBuffer $r2, $r4, $r5, $r13, $r15, $r16, $r20, $r22, $r23, $r25, $r26, $r27;
        javax.jms.TopicSession $r7, $r10;
        java.lang.String $r3, $r6, $r14, $r17, $r21, $r24;
        boolean $z0;
        javax.jms.Connection $r29;
        javax.jms.TopicConnection $r8, $r9;
        java.lang.RuntimeException $r11;
        org.apache.log4j.net.JMSAppender r0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        $z0 = r0.<org.apache.log4j.AppenderSkeleton: boolean closed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Closing appender [");

        $r3 = r0.<org.apache.log4j.AppenderSkeleton: java.lang.String name>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("].");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r6);

        r0.<org.apache.log4j.AppenderSkeleton: boolean closed> = 1;

     label2:
        $r7 = r0.<org.apache.log4j.net.JMSAppender: javax.jms.TopicSession topicSession>;

        if $r7 == null goto label3;

        $r10 = r0.<org.apache.log4j.net.JMSAppender: javax.jms.TopicSession topicSession>;

        $r28 = (javax.jms.Session) $r10;

        interfaceinvoke $r28.<javax.jms.Session: void close()>();

     label3:
        $r8 = r0.<org.apache.log4j.net.JMSAppender: javax.jms.TopicConnection topicConnection>;

        if $r8 == null goto label4;

        $r9 = r0.<org.apache.log4j.net.JMSAppender: javax.jms.TopicConnection topicConnection>;

        $r29 = (javax.jms.Connection) $r9;

        interfaceinvoke $r29.<javax.jms.Connection: void close()>();

     label4:
        goto label7;

     label5:
        $r18 := @caughtexception;

        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error while closing JMSAppender [");

        $r21 = r0.<org.apache.log4j.AppenderSkeleton: java.lang.String name>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("].");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>($r24, $r18);

        goto label7;

     label6:
        $r11 := @caughtexception;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error while closing JMSAppender [");

        $r14 = r0.<org.apache.log4j.AppenderSkeleton: java.lang.String name>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("].");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>($r17, $r11);

     label7:
        r0.<org.apache.log4j.net.JMSAppender: javax.jms.TopicPublisher topicPublisher> = null;

        r0.<org.apache.log4j.net.JMSAppender: javax.jms.TopicSession topicSession> = null;

        r0.<org.apache.log4j.net.JMSAppender: javax.jms.TopicConnection topicConnection> = null;

        return;

        catch javax.jms.JMSException from label2 to label4 with label5;
        catch java.lang.RuntimeException from label2 to label4 with label6;
    }

    public void append(org.apache.log4j.spi.LoggingEvent)
    {
        java.lang.Throwable $r13;
        javax.jms.ObjectMessage $r2;
        javax.jms.TopicPublisher $r4;
        javax.jms.Session $r23;
        java.lang.StringBuffer $r8, $r10, $r11, $r16, $r18, $r19, $r21, $r22;
        javax.jms.TopicSession $r1;
        java.lang.String $r9, $r12, $r17, $r20;
        javax.jms.Message $r24;
        boolean $z0, $z1;
        org.apache.log4j.spi.LoggingEvent r3;
        org.apache.log4j.spi.ErrorHandler $r7, $r15;
        java.lang.RuntimeException $r5;
        java.lang.Exception $r25;
        org.apache.log4j.net.JMSAppender r0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        r3 := @parameter0: org.apache.log4j.spi.LoggingEvent;

        $z0 = virtualinvoke r0.<org.apache.log4j.net.JMSAppender: boolean checkEntryConditions()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.apache.log4j.net.JMSAppender: javax.jms.TopicSession topicSession>;

        $r23 = (javax.jms.Session) $r1;

        $r2 = interfaceinvoke $r23.<javax.jms.Session: javax.jms.ObjectMessage createObjectMessage()>();

        $z1 = r0.<org.apache.log4j.net.JMSAppender: boolean locationInfo>;

        if $z1 == 0 goto label2;

        virtualinvoke r3.<org.apache.log4j.spi.LoggingEvent: org.apache.log4j.spi.LocationInfo getLocationInformation()>();

     label2:
        interfaceinvoke $r2.<javax.jms.ObjectMessage: void setObject(java.io.Serializable)>(r3);

        $r4 = r0.<org.apache.log4j.net.JMSAppender: javax.jms.TopicPublisher topicPublisher>;

        $r24 = (javax.jms.Message) $r2;

        interfaceinvoke $r4.<javax.jms.TopicPublisher: void publish(javax.jms.Message)>($r24);

     label3:
        goto label6;

     label4:
        $r13 := @caughtexception;

        $r15 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.ErrorHandler errorHandler>;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not publish message in JMSAppender [");

        $r17 = r0.<org.apache.log4j.AppenderSkeleton: java.lang.String name>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("].");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        $r25 = (java.lang.Exception) $r13;

        interfaceinvoke $r15.<org.apache.log4j.spi.ErrorHandler: void error(java.lang.String,java.lang.Exception,int)>($r20, $r25, 0);

        goto label6;

     label5:
        $r5 := @caughtexception;

        $r7 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.ErrorHandler errorHandler>;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not publish message in JMSAppender [");

        $r9 = r0.<org.apache.log4j.AppenderSkeleton: java.lang.String name>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("].");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r7.<org.apache.log4j.spi.ErrorHandler: void error(java.lang.String,java.lang.Exception,int)>($r12, $r5, 0);

     label6:
        return;

        catch javax.jms.JMSException from label1 to label3 with label4;
        catch java.lang.RuntimeException from label1 to label3 with label5;
    }

    public java.lang.String getInitialContextFactoryName()
    {
        java.lang.String $r1;
        org.apache.log4j.net.JMSAppender r0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        $r1 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String initialContextFactoryName>;

        return $r1;
    }

    public void setInitialContextFactoryName(java.lang.String)
    {
        java.lang.String r1;
        org.apache.log4j.net.JMSAppender r0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.log4j.net.JMSAppender: java.lang.String initialContextFactoryName> = r1;

        return;
    }

    public java.lang.String getProviderURL()
    {
        java.lang.String $r1;
        org.apache.log4j.net.JMSAppender r0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        $r1 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String providerURL>;

        return $r1;
    }

    public void setProviderURL(java.lang.String)
    {
        java.lang.String r1;
        org.apache.log4j.net.JMSAppender r0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.log4j.net.JMSAppender: java.lang.String providerURL> = r1;

        return;
    }

    java.lang.String getURLPkgPrefixes()
    {
        java.lang.String $r1;
        org.apache.log4j.net.JMSAppender r0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        $r1 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String urlPkgPrefixes>;

        return $r1;
    }

    public void setURLPkgPrefixes(java.lang.String)
    {
        java.lang.String r1;
        org.apache.log4j.net.JMSAppender r0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.log4j.net.JMSAppender: java.lang.String urlPkgPrefixes> = r1;

        return;
    }

    public java.lang.String getSecurityCredentials()
    {
        java.lang.String $r1;
        org.apache.log4j.net.JMSAppender r0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        $r1 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String securityCredentials>;

        return $r1;
    }

    public void setSecurityCredentials(java.lang.String)
    {
        java.lang.String r1;
        org.apache.log4j.net.JMSAppender r0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.log4j.net.JMSAppender: java.lang.String securityCredentials> = r1;

        return;
    }

    public java.lang.String getSecurityPrincipalName()
    {
        java.lang.String $r1;
        org.apache.log4j.net.JMSAppender r0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        $r1 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String securityPrincipalName>;

        return $r1;
    }

    public void setSecurityPrincipalName(java.lang.String)
    {
        java.lang.String r1;
        org.apache.log4j.net.JMSAppender r0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.log4j.net.JMSAppender: java.lang.String securityPrincipalName> = r1;

        return;
    }

    public java.lang.String getUserName()
    {
        java.lang.String $r1;
        org.apache.log4j.net.JMSAppender r0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        $r1 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String userName>;

        return $r1;
    }

    public void setUserName(java.lang.String)
    {
        java.lang.String r1;
        org.apache.log4j.net.JMSAppender r0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.log4j.net.JMSAppender: java.lang.String userName> = r1;

        return;
    }

    public java.lang.String getPassword()
    {
        java.lang.String $r1;
        org.apache.log4j.net.JMSAppender r0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        $r1 = r0.<org.apache.log4j.net.JMSAppender: java.lang.String password>;

        return $r1;
    }

    public void setPassword(java.lang.String)
    {
        java.lang.String r1;
        org.apache.log4j.net.JMSAppender r0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.log4j.net.JMSAppender: java.lang.String password> = r1;

        return;
    }

    public void setLocationInfo(boolean)
    {
        org.apache.log4j.net.JMSAppender r0;
        boolean z0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        z0 := @parameter0: boolean;

        r0.<org.apache.log4j.net.JMSAppender: boolean locationInfo> = z0;

        return;
    }

    protected javax.jms.TopicConnection getTopicConnection()
    {
        javax.jms.TopicConnection $r1;
        org.apache.log4j.net.JMSAppender r0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        $r1 = r0.<org.apache.log4j.net.JMSAppender: javax.jms.TopicConnection topicConnection>;

        return $r1;
    }

    protected javax.jms.TopicSession getTopicSession()
    {
        javax.jms.TopicSession $r1;
        org.apache.log4j.net.JMSAppender r0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        $r1 = r0.<org.apache.log4j.net.JMSAppender: javax.jms.TopicSession topicSession>;

        return $r1;
    }

    protected javax.jms.TopicPublisher getTopicPublisher()
    {
        org.apache.log4j.net.JMSAppender r0;
        javax.jms.TopicPublisher $r1;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        $r1 = r0.<org.apache.log4j.net.JMSAppender: javax.jms.TopicPublisher topicPublisher>;

        return $r1;
    }

    public boolean requiresLayout()
    {
        org.apache.log4j.net.JMSAppender r0;

        r0 := @this: org.apache.log4j.net.JMSAppender;

        return 0;
    }
}
