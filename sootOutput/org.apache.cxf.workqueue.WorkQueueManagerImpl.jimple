public class org.apache.cxf.workqueue.WorkQueueManagerImpl extends java.lang.Object implements org.apache.cxf.workqueue.WorkQueueManager
{
    private static final java.util.logging.Logger LOG;
    java.util.Map namedQueues;
    boolean inShutdown;
    org.apache.cxf.management.InstrumentationManager imanager;
    org.apache.cxf.Bus bus;

    public void <init>()
    {
        java.util.concurrent.ConcurrentHashMap $r1;
        org.apache.cxf.workqueue.WorkQueueManagerImpl r0;

        r0 := @this: org.apache.cxf.workqueue.WorkQueueManagerImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: java.util.Map namedQueues> = $r1;

        return;
    }

    public void <init>(org.apache.cxf.Bus)
    {
        java.util.concurrent.ConcurrentHashMap $r1;
        org.apache.cxf.Bus r2;
        org.apache.cxf.workqueue.WorkQueueManagerImpl r0;

        r0 := @this: org.apache.cxf.workqueue.WorkQueueManagerImpl;

        r2 := @parameter0: org.apache.cxf.Bus;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: java.util.Map namedQueues> = $r1;

        virtualinvoke r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: void setBus(org.apache.cxf.Bus)>(r2);

        return;
    }

    public org.apache.cxf.Bus getBus()
    {
        org.apache.cxf.Bus $r1;
        org.apache.cxf.workqueue.WorkQueueManagerImpl r0;

        r0 := @this: org.apache.cxf.workqueue.WorkQueueManagerImpl;

        $r1 = r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: org.apache.cxf.Bus bus>;

        return $r1;
    }

    public final void setBus(org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r1;
        org.apache.cxf.workqueue.WorkQueueManagerImpl r0;
        java.util.logging.Level $r15;
        org.apache.cxf.management.InstrumentationManager $r3, $r4, $r12;
        java.util.Map $r5;
        java.lang.String $r10, $r16;
        org.apache.cxf.workqueue.WorkQueueManagerImpl$WQLifecycleListener $r23;
        boolean $z0, $z1;
        java.util.Iterator $r7;
        java.util.Collection $r19;
        org.apache.cxf.workqueue.WorkQueueManagerImplMBeanWrapper $r11;
        org.apache.cxf.configuration.ConfiguredBeanLocator $r18;
        java.util.logging.Logger $r14;
        org.apache.cxf.workqueue.AutomaticWorkQueue r9, r20;
        org.apache.cxf.buslifecycle.BusLifeCycleManager $r22;
        javax.management.JMException $r13;
        java.lang.Object $r2, $r6, $r8, $r17, $r21;

        r0 := @this: org.apache.cxf.workqueue.WorkQueueManagerImpl;

        r1 := @parameter0: org.apache.cxf.Bus;

        r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: org.apache.cxf.Bus bus> = r1;

        if null == r1 goto label8;

        interfaceinvoke r1.<org.apache.cxf.Bus: void setExtension(java.lang.Object,java.lang.Class)>(r0, class "Lorg/apache/cxf/workqueue/WorkQueueManager;");

        $r2 = interfaceinvoke r1.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/management/InstrumentationManager;");

        $r3 = (org.apache.cxf.management.InstrumentationManager) $r2;

        r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: org.apache.cxf.management.InstrumentationManager imanager> = $r3;

        $r4 = r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: org.apache.cxf.management.InstrumentationManager imanager>;

        if null == $r4 goto label4;

     label1:
        $r12 = r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: org.apache.cxf.management.InstrumentationManager imanager>;

        $r11 = new org.apache.cxf.workqueue.WorkQueueManagerImplMBeanWrapper;

        specialinvoke $r11.<org.apache.cxf.workqueue.WorkQueueManagerImplMBeanWrapper: void <init>(org.apache.cxf.workqueue.WorkQueueManagerImpl)>(r0);

        interfaceinvoke $r12.<org.apache.cxf.management.InstrumentationManager: javax.management.ObjectName register(org.apache.cxf.management.ManagedComponent)>($r11);

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        $r14 = <org.apache.cxf.workqueue.WorkQueueManagerImpl: java.util.logging.Logger LOG>;

        $r15 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r16 = virtualinvoke $r13.<javax.management.JMException: java.lang.String getMessage()>();

        virtualinvoke $r14.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r15, $r16, $r13);

     label4:
        $r17 = interfaceinvoke r1.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/configuration/ConfiguredBeanLocator;");

        $r18 = (org.apache.cxf.configuration.ConfiguredBeanLocator) $r17;

        $r19 = interfaceinvoke $r18.<org.apache.cxf.configuration.ConfiguredBeanLocator: java.util.Collection getBeansOfType(java.lang.Class)>(class "Lorg/apache/cxf/workqueue/AutomaticWorkQueue;");

        if $r19 == null goto label6;

        $r7 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.cxf.workqueue.AutomaticWorkQueue) $r8;

        $r10 = interfaceinvoke r9.<org.apache.cxf.workqueue.AutomaticWorkQueue: java.lang.String getName()>();

        virtualinvoke r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)>($r10, r9);

        goto label5;

     label6:
        $r5 = r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: java.util.Map namedQueues>;

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>("default");

        if $z0 != 0 goto label7;

        $r6 = interfaceinvoke $r18.<org.apache.cxf.configuration.ConfiguredBeanLocator: java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)>("cxf.default.workqueue", class "Lorg/apache/cxf/workqueue/AutomaticWorkQueue;");

        r20 = (org.apache.cxf.workqueue.AutomaticWorkQueue) $r6;

        if r20 == null goto label7;

        virtualinvoke r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)>("default", r20);

     label7:
        $r21 = interfaceinvoke r1.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/buslifecycle/BusLifeCycleManager;");

        $r22 = (org.apache.cxf.buslifecycle.BusLifeCycleManager) $r21;

        $r23 = new org.apache.cxf.workqueue.WorkQueueManagerImpl$WQLifecycleListener;

        specialinvoke $r23.<org.apache.cxf.workqueue.WorkQueueManagerImpl$WQLifecycleListener: void <init>(org.apache.cxf.workqueue.WorkQueueManagerImpl)>(r0);

        interfaceinvoke $r22.<org.apache.cxf.buslifecycle.BusLifeCycleManager: void registerLifeCycleListener(org.apache.cxf.buslifecycle.BusLifeCycleListener)>($r23);

     label8:
        return;

        catch javax.management.JMException from label1 to label2 with label3;
    }

    public synchronized org.apache.cxf.workqueue.AutomaticWorkQueue getAutomaticWorkQueue()
    {
        org.apache.cxf.workqueue.WorkQueueManagerImpl r0;
        org.apache.cxf.workqueue.AutomaticWorkQueue $r1, r2;

        r0 := @this: org.apache.cxf.workqueue.WorkQueueManagerImpl;

        $r1 = virtualinvoke r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)>("default");

        r2 = $r1;

        if $r1 != null goto label1;

        r2 = specialinvoke r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: org.apache.cxf.workqueue.AutomaticWorkQueue createAutomaticWorkQueue()>();

     label1:
        return r2;
    }

    public synchronized void shutdown(boolean)
    {
        java.lang.Throwable $r12, $r13;
        org.apache.cxf.workqueue.AutomaticWorkQueueImpl r6;
        org.apache.cxf.workqueue.WorkQueueManagerImpl r0;
        java.util.logging.Level $r16;
        org.apache.cxf.management.InstrumentationManager $r7, $r8, $r11;
        java.util.Map $r1;
        javax.management.MBeanServer $r9;
        int $i0;
        java.lang.String $r17;
        boolean $z0, $z1, z2, $z3;
        java.util.Iterator $r3;
        java.util.Collection $r2;
        java.util.logging.Logger $r15;
        org.apache.cxf.workqueue.AutomaticWorkQueue r5;
        org.apache.cxf.workqueue.WorkQueueImplMBeanWrapper $r10;
        javax.management.JMException $r14;
        java.lang.Object $r4;

        r0 := @this: org.apache.cxf.workqueue.WorkQueueManagerImpl;

        z2 := @parameter0: boolean;

        r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: boolean inShutdown> = 1;

        $r1 = r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: java.util.Map namedQueues>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label15;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.cxf.workqueue.AutomaticWorkQueue) $r4;

        $z1 = r5 instanceof org.apache.cxf.workqueue.AutomaticWorkQueueImpl;

        if $z1 == 0 goto label13;

        r6 = (org.apache.cxf.workqueue.AutomaticWorkQueueImpl) r5;

        $z3 = virtualinvoke r6.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl: boolean isShared()>();

        if $z3 == 0 goto label11;

        entermonitor r6;

     label02:
        virtualinvoke r6.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl: void removeSharedUser()>();

        $i0 = virtualinvoke r6.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl: int getShareCount()>();

        if $i0 != 0 goto label06;

        $r7 = r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: org.apache.cxf.management.InstrumentationManager imanager>;

        if $r7 == null goto label06;

        $r8 = r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: org.apache.cxf.management.InstrumentationManager imanager>;

        $r9 = interfaceinvoke $r8.<org.apache.cxf.management.InstrumentationManager: javax.management.MBeanServer getMBeanServer()>();

        if $r9 == null goto label06;

     label03:
        $r11 = r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: org.apache.cxf.management.InstrumentationManager imanager>;

        $r10 = new org.apache.cxf.workqueue.WorkQueueImplMBeanWrapper;

        specialinvoke $r10.<org.apache.cxf.workqueue.WorkQueueImplMBeanWrapper: void <init>(org.apache.cxf.workqueue.AutomaticWorkQueueImpl,org.apache.cxf.workqueue.WorkQueueManager)>(r6, r0);

        interfaceinvoke $r11.<org.apache.cxf.management.InstrumentationManager: void unregister(org.apache.cxf.management.ManagedComponent)>($r10);

     label04:
        goto label06;

     label05:
        $r14 := @caughtexception;

        $r15 = <org.apache.cxf.workqueue.WorkQueueManagerImpl: java.util.logging.Logger LOG>;

        $r16 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r17 = virtualinvoke $r14.<javax.management.JMException: java.lang.String getMessage()>();

        virtualinvoke $r15.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r16, $r17, $r14);

     label06:
        exitmonitor r6;

     label07:
        goto label10;

     label08:
        $r13 := @caughtexception;

        exitmonitor r6;

     label09:
        throw $r13;

     label10:
        goto label12;

     label11:
        interfaceinvoke r5.<org.apache.cxf.workqueue.AutomaticWorkQueue: void shutdown(boolean)>(z2);

     label12:
        goto label14;

     label13:
        interfaceinvoke r5.<org.apache.cxf.workqueue.AutomaticWorkQueue: void shutdown(boolean)>(z2);

     label14:
        goto label01;

     label15:
        entermonitor r0;

     label16:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label17:
        goto label20;

     label18:
        $r12 := @caughtexception;

        exitmonitor r0;

     label19:
        throw $r12;

     label20:
        return;

        catch javax.management.JMException from label03 to label04 with label05;
        catch java.lang.Throwable from label02 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    public void run()
    {
        java.lang.Throwable $r7;
        java.util.logging.Handler[] $r5;
        org.apache.cxf.workqueue.WorkQueueManagerImpl r0;
        java.util.Map $r1;
        int i0, i1;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r3;
        java.util.Collection $r2;
        java.util.logging.Logger $r4;
        org.apache.cxf.workqueue.AutomaticWorkQueue r10;
        java.lang.InterruptedException $r8, $r9;
        java.lang.Object $r6;
        java.util.logging.Handler r11;

        r0 := @this: org.apache.cxf.workqueue.WorkQueueManagerImpl;

        entermonitor r0;

     label01:
        $z1 = r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: boolean inShutdown>;

        if $z1 != 0 goto label05;

     label02:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label03:
        goto label01;

     label04:
        $r9 := @caughtexception;

        goto label01;

     label05:
        $r1 = r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: java.util.Map namedQueues>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.cxf.workqueue.AutomaticWorkQueue) $r6;

     label07:
        $z2 = interfaceinvoke r10.<org.apache.cxf.workqueue.AutomaticWorkQueue: boolean isShutdown()>();

        if $z2 != 0 goto label11;

     label08:
        staticinvoke <java.lang.Thread: void sleep(long)>(100L);

     label09:
        goto label07;

     label10:
        $r8 := @caughtexception;

        goto label07;

     label11:
        goto label06;

     label12:
        exitmonitor r0;

     label13:
        goto label16;

     label14:
        $r7 := @caughtexception;

        exitmonitor r0;

     label15:
        throw $r7;

     label16:
        $r4 = <org.apache.cxf.workqueue.WorkQueueManagerImpl: java.util.logging.Logger LOG>;

        $r5 = virtualinvoke $r4.<java.util.logging.Logger: java.util.logging.Handler[] getHandlers()>();

        i0 = lengthof $r5;

        i1 = 0;

     label17:
        if i1 >= i0 goto label18;

        r11 = $r5[i1];

        virtualinvoke r11.<java.util.logging.Handler: void flush()>();

        i1 = i1 + 1;

        goto label17;

     label18:
        return;

        catch java.lang.InterruptedException from label02 to label03 with label04;
        catch java.lang.InterruptedException from label08 to label09 with label10;
        catch java.lang.Throwable from label01 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        org.apache.cxf.workqueue.WorkQueueManagerImpl r0;
        org.apache.cxf.workqueue.AutomaticWorkQueue $r4;

        r0 := @this: org.apache.cxf.workqueue.WorkQueueManagerImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: java.util.Map namedQueues>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.cxf.workqueue.AutomaticWorkQueue) $r3;

        return $r4;
    }

    public final void addNamedWorkQueue(java.lang.String, org.apache.cxf.workqueue.AutomaticWorkQueue)
    {
        java.lang.Throwable $r19;
        org.apache.cxf.workqueue.AutomaticWorkQueueImpl r4, $r7, $r13;
        org.apache.cxf.workqueue.WorkQueueManagerImpl r0;
        java.util.logging.Level $r17, $r22;
        org.apache.cxf.management.InstrumentationManager $r5, $r8, $r9, $r10, $r14;
        java.util.Map $r3;
        javax.management.MBeanServer $r11;
        int $i0;
        java.lang.String r1, $r18, $r23;
        boolean $z0, $z1;
        java.util.logging.Logger $r16, $r21;
        org.apache.cxf.workqueue.AutomaticWorkQueue r2;
        org.apache.cxf.workqueue.WorkQueueImplMBeanWrapper $r6, $r12;
        javax.management.JMException $r15, $r20;

        r0 := @this: org.apache.cxf.workqueue.WorkQueueManagerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.cxf.workqueue.AutomaticWorkQueue;

        $r3 = r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: java.util.Map namedQueues>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $z0 = r2 instanceof org.apache.cxf.workqueue.AutomaticWorkQueueImpl;

        if $z0 == 0 goto label14;

        r4 = (org.apache.cxf.workqueue.AutomaticWorkQueueImpl) r2;

        $z1 = virtualinvoke r4.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl: boolean isShared()>();

        if $z1 == 0 goto label10;

        entermonitor r4;

     label01:
        $i0 = virtualinvoke r4.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl: int getShareCount()>();

        if $i0 != 0 goto label05;

        $r9 = r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: org.apache.cxf.management.InstrumentationManager imanager>;

        if $r9 == null goto label05;

        $r10 = r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: org.apache.cxf.management.InstrumentationManager imanager>;

        $r11 = interfaceinvoke $r10.<org.apache.cxf.management.InstrumentationManager: javax.management.MBeanServer getMBeanServer()>();

        if $r11 == null goto label05;

     label02:
        $r14 = r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: org.apache.cxf.management.InstrumentationManager imanager>;

        $r12 = new org.apache.cxf.workqueue.WorkQueueImplMBeanWrapper;

        $r13 = (org.apache.cxf.workqueue.AutomaticWorkQueueImpl) r2;

        specialinvoke $r12.<org.apache.cxf.workqueue.WorkQueueImplMBeanWrapper: void <init>(org.apache.cxf.workqueue.AutomaticWorkQueueImpl,org.apache.cxf.workqueue.WorkQueueManager)>($r13, r0);

        interfaceinvoke $r14.<org.apache.cxf.management.InstrumentationManager: javax.management.ObjectName register(org.apache.cxf.management.ManagedComponent)>($r12);

     label03:
        goto label05;

     label04:
        $r20 := @caughtexception;

        $r21 = <org.apache.cxf.workqueue.WorkQueueManagerImpl: java.util.logging.Logger LOG>;

        $r22 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r23 = virtualinvoke $r20.<javax.management.JMException: java.lang.String getMessage()>();

        virtualinvoke $r21.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r22, $r23, $r20);

     label05:
        virtualinvoke r4.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl: void addSharedUser()>();

        exitmonitor r4;

     label06:
        goto label09;

     label07:
        $r19 := @caughtexception;

        exitmonitor r4;

     label08:
        throw $r19;

     label09:
        goto label14;

     label10:
        $r5 = r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: org.apache.cxf.management.InstrumentationManager imanager>;

        if $r5 == null goto label14;

     label11:
        $r8 = r0.<org.apache.cxf.workqueue.WorkQueueManagerImpl: org.apache.cxf.management.InstrumentationManager imanager>;

        $r6 = new org.apache.cxf.workqueue.WorkQueueImplMBeanWrapper;

        $r7 = (org.apache.cxf.workqueue.AutomaticWorkQueueImpl) r2;

        specialinvoke $r6.<org.apache.cxf.workqueue.WorkQueueImplMBeanWrapper: void <init>(org.apache.cxf.workqueue.AutomaticWorkQueueImpl,org.apache.cxf.workqueue.WorkQueueManager)>($r7, r0);

        interfaceinvoke $r8.<org.apache.cxf.management.InstrumentationManager: javax.management.ObjectName register(org.apache.cxf.management.ManagedComponent)>($r6);

     label12:
        goto label14;

     label13:
        $r15 := @caughtexception;

        $r16 = <org.apache.cxf.workqueue.WorkQueueManagerImpl: java.util.logging.Logger LOG>;

        $r17 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r18 = virtualinvoke $r15.<javax.management.JMException: java.lang.String getMessage()>();

        virtualinvoke $r16.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r17, $r18, $r15);

     label14:
        return;

        catch javax.management.JMException from label02 to label03 with label04;
        catch java.lang.Throwable from label01 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch javax.management.JMException from label11 to label12 with label13;
    }

    private org.apache.cxf.workqueue.AutomaticWorkQueue createAutomaticWorkQueue()
    {
        org.apache.cxf.workqueue.AutomaticWorkQueueImpl $r0;
        org.apache.cxf.workqueue.WorkQueueManagerImpl r1;

        r1 := @this: org.apache.cxf.workqueue.WorkQueueManagerImpl;

        $r0 = new org.apache.cxf.workqueue.AutomaticWorkQueueImpl;

        specialinvoke $r0.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl: void <init>(java.lang.String)>("default");

        virtualinvoke r1.<org.apache.cxf.workqueue.WorkQueueManagerImpl: void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)>("default", $r0);

        return $r0;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/workqueue/WorkQueueManagerImpl;");

        <org.apache.cxf.workqueue.WorkQueueManagerImpl: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
