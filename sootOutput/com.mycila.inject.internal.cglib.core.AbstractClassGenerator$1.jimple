class com.mycila.inject.internal.cglib.core.AbstractClassGenerator$1 extends java.lang.Object implements com.mycila.inject.internal.cglib.core.Predicate
{
    private final java.util.Set val$nameCache;
    private final com.mycila.inject.internal.cglib.core.AbstractClassGenerator this$0;

    void <init>(com.mycila.inject.internal.cglib.core.AbstractClassGenerator, java.util.Set)
    {
        com.mycila.inject.internal.cglib.core.AbstractClassGenerator r1;
        java.util.Set r2;
        com.mycila.inject.internal.cglib.core.AbstractClassGenerator$1 r0;

        r0 := @this: com.mycila.inject.internal.cglib.core.AbstractClassGenerator$1;

        r1 := @parameter0: com.mycila.inject.internal.cglib.core.AbstractClassGenerator;

        r2 := @parameter1: java.util.Set;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mycila.inject.internal.cglib.core.AbstractClassGenerator$1: com.mycila.inject.internal.cglib.core.AbstractClassGenerator this$0> = r1;

        r0.<com.mycila.inject.internal.cglib.core.AbstractClassGenerator$1: java.util.Set val$nameCache> = r2;

        return;
    }

    public boolean evaluate(java.lang.Object)
    {
        java.util.Set $r2;
        java.lang.Object r1;
        com.mycila.inject.internal.cglib.core.AbstractClassGenerator$1 r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.cglib.core.AbstractClassGenerator$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.mycila.inject.internal.cglib.core.AbstractClassGenerator$1: java.util.Set val$nameCache>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }
}
