public abstract class thredds.cataloggen.config.DatasetSource extends java.lang.Object
{
    private static org.slf4j.Logger logger;
    protected thredds.catalog.InvCatalog resultingCatalog;
    protected thredds.catalog.InvDataset accessPointDataset;
    protected java.util.List catalogRefInfoList;
    private java.lang.String name;
    protected thredds.cataloggen.config.DatasetSourceType type;
    private thredds.cataloggen.config.DatasetSourceStructure structure;
    private boolean flatten;
    private java.lang.String accessPoint;
    private java.lang.String prefixUrlPath;
    protected boolean createCatalogRefs;
    private thredds.cataloggen.config.ResultService resultService;
    protected java.util.List datasetNamerList;
    protected java.util.List datasetFilterList;
    protected thredds.cataloggen.config.DatasetSorter datasetSorter;
    protected java.util.List datasetEnhancerList;
    protected boolean addDatasetSize;
    protected boolean isValid;
    protected java.lang.StringBuffer msgLog;
    private volatile int hashCode;

    protected void <init>()
    {
        thredds.cataloggen.config.DatasetSource r0;
        java.lang.StringBuffer $r5;
        java.util.ArrayList $r1, $r2, $r3, $r4;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<thredds.cataloggen.config.DatasetSource: java.util.List catalogRefInfoList> = $r1;

        r0.<thredds.cataloggen.config.DatasetSource: boolean flatten> = 0;

        r0.<thredds.cataloggen.config.DatasetSource: boolean createCatalogRefs> = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<thredds.cataloggen.config.DatasetSource: java.util.List datasetNamerList> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<thredds.cataloggen.config.DatasetSource: java.util.List datasetFilterList> = $r3;

        r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSorter datasetSorter> = null;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<thredds.cataloggen.config.DatasetSource: java.util.List datasetEnhancerList> = $r4;

        r0.<thredds.cataloggen.config.DatasetSource: boolean isValid> = 1;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        r0.<thredds.cataloggen.config.DatasetSource: java.lang.StringBuffer msgLog> = $r5;

        r0.<thredds.cataloggen.config.DatasetSource: int hashCode> = 0;

        return;
    }

    public static final thredds.cataloggen.config.DatasetSource newDatasetSource(java.lang.String, thredds.cataloggen.config.DatasetSourceType, thredds.cataloggen.config.DatasetSourceStructure, java.lang.String, thredds.cataloggen.config.ResultService)
    {
        thredds.cataloggen.config.DatasetSourceType r0, $r1, $r2, $r3, $r4;
        thredds.cataloggen.config.DodsDirDatasetSource $r27;
        thredds.cataloggen.config.DodsFileServerDatasetSource $r26;
        boolean $z0;
        thredds.cataloggen.config.DatasetSource r35;
        thredds.cataloggen.config.ResultService r21;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r11, $r13, $r14, $r29, $r31, $r32, $r37;
        thredds.cataloggen.config.LocalDatasetSource $r28;
        thredds.cataloggen.config.DatasetSourceStructure r19;
        java.lang.String $r7, $r10, $r15, r18, r20, $r23, $r25, $r33;
        org.slf4j.Logger $r12, $r22, $r24, $r30, $r36;
        java.lang.IllegalArgumentException $r16, $r34;
        thredds.cataloggen.config.GrADSDataServerDatasetSource $r17;

        r18 := @parameter0: java.lang.String;

        r0 := @parameter1: thredds.cataloggen.config.DatasetSourceType;

        r19 := @parameter2: thredds.cataloggen.config.DatasetSourceStructure;

        r20 := @parameter3: java.lang.String;

        r21 := @parameter4: thredds.cataloggen.config.ResultService;

        if r0 != null goto label1;

        $r30 = <thredds.cataloggen.config.DatasetSource: org.slf4j.Logger logger>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("newDatasetSource(): ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DatasetSource type cannot be null");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r30.<org.slf4j.Logger: void error(java.lang.String)>($r33);

        $r34 = new java.lang.IllegalArgumentException;

        specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("DatasetSource type cannot be null");

        throw $r34;

     label1:
        $r1 = staticinvoke <thredds.cataloggen.config.DatasetSourceType: thredds.cataloggen.config.DatasetSourceType getType(java.lang.String)>("Local");

        if r0 != $r1 goto label2;

        $r28 = new thredds.cataloggen.config.LocalDatasetSource;

        specialinvoke $r28.<thredds.cataloggen.config.LocalDatasetSource: void <init>()>();

        r35 = $r28;

        goto label6;

     label2:
        $r2 = staticinvoke <thredds.cataloggen.config.DatasetSourceType: thredds.cataloggen.config.DatasetSourceType getType(java.lang.String)>("DodsDir");

        if r0 != $r2 goto label3;

        $r27 = new thredds.cataloggen.config.DodsDirDatasetSource;

        specialinvoke $r27.<thredds.cataloggen.config.DodsDirDatasetSource: void <init>()>();

        r35 = $r27;

        goto label6;

     label3:
        $r3 = staticinvoke <thredds.cataloggen.config.DatasetSourceType: thredds.cataloggen.config.DatasetSourceType getType(java.lang.String)>("DodsFileServer");

        if r0 != $r3 goto label4;

        $r26 = new thredds.cataloggen.config.DodsFileServerDatasetSource;

        specialinvoke $r26.<thredds.cataloggen.config.DodsFileServerDatasetSource: void <init>()>();

        r35 = $r26;

        goto label6;

     label4:
        $r4 = staticinvoke <thredds.cataloggen.config.DatasetSourceType: thredds.cataloggen.config.DatasetSourceType getType(java.lang.String)>("GrADSDataServer");

        if r0 != $r4 goto label5;

        $r17 = new thredds.cataloggen.config.GrADSDataServerDatasetSource;

        specialinvoke $r17.<thredds.cataloggen.config.GrADSDataServerDatasetSource: void <init>()>();

        r35 = $r17;

        goto label6;

     label5:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported DatasetSource type <");

        $r7 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSourceType: java.lang.String toString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = <thredds.cataloggen.config.DatasetSource: org.slf4j.Logger logger>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("newDatasetSource(): ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.slf4j.Logger: void error(java.lang.String)>($r15);

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r16;

     label6:
        virtualinvoke r35.<thredds.cataloggen.config.DatasetSource: void setName(java.lang.String)>(r18);

        virtualinvoke r35.<thredds.cataloggen.config.DatasetSource: void setStructure(thredds.cataloggen.config.DatasetSourceStructure)>(r19);

        virtualinvoke r35.<thredds.cataloggen.config.DatasetSource: void setAccessPoint(java.lang.String)>(r20);

        virtualinvoke r35.<thredds.cataloggen.config.DatasetSource: void setResultService(thredds.cataloggen.config.ResultService)>(r21);

        $r36 = <thredds.cataloggen.config.DatasetSource: org.slf4j.Logger logger>;

        interfaceinvoke $r36.<org.slf4j.Logger: void debug(java.lang.String)>("DatasetSource(): constructor done.");

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $z0 = virtualinvoke r35.<thredds.cataloggen.config.DatasetSource: boolean validate(java.lang.StringBuilder)>($r37);

        if $z0 == 0 goto label7;

        $r24 = <thredds.cataloggen.config.DatasetSource: org.slf4j.Logger logger>;

        $r25 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r24.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("DatasetSource(): new DatasetSource is valid: {}", $r25);

        goto label8;

     label7:
        $r22 = <thredds.cataloggen.config.DatasetSource: org.slf4j.Logger logger>;

        $r23 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r22.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("DatasetSource(): new DatasetSource is invalid: {}", $r23);

     label8:
        return r35;
    }

    public thredds.catalog.InvCatalog getResultingCatalog()
    {
        thredds.catalog.InvCatalog $r1;
        thredds.cataloggen.config.DatasetSource r0;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        $r1 = r0.<thredds.cataloggen.config.DatasetSource: thredds.catalog.InvCatalog resultingCatalog>;

        return $r1;
    }

    public java.util.List getCatalogRefInfoList()
    {
        java.util.List $r1;
        thredds.cataloggen.config.DatasetSource r0;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        $r1 = r0.<thredds.cataloggen.config.DatasetSource: java.util.List catalogRefInfoList>;

        return $r1;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        thredds.cataloggen.config.DatasetSource r0;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        $r1 = r0.<thredds.cataloggen.config.DatasetSource: java.lang.String name>;

        return $r1;
    }

    public void setName(java.lang.String)
    {
        java.lang.String r1;
        thredds.cataloggen.config.DatasetSource r0;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        r1 := @parameter0: java.lang.String;

        r0.<thredds.cataloggen.config.DatasetSource: java.lang.String name> = r1;

        return;
    }

    public thredds.cataloggen.config.DatasetSourceType getType()
    {
        thredds.cataloggen.config.DatasetSourceType $r1;
        thredds.cataloggen.config.DatasetSource r0;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        $r1 = r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSourceType type>;

        return $r1;
    }

    public thredds.cataloggen.config.DatasetSourceStructure getStructure()
    {
        thredds.cataloggen.config.DatasetSource r0;
        thredds.cataloggen.config.DatasetSourceStructure $r1;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        $r1 = r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSourceStructure structure>;

        return $r1;
    }

    public void setStructure(thredds.cataloggen.config.DatasetSourceStructure)
    {
        thredds.cataloggen.config.DatasetSource r0;
        thredds.cataloggen.config.DatasetSourceStructure r1, $r2, $r3;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        r1 := @parameter0: thredds.cataloggen.config.DatasetSourceStructure;

        r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSourceStructure structure> = r1;

        $r3 = r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSourceStructure structure>;

        $r2 = <thredds.cataloggen.config.DatasetSourceStructure: thredds.cataloggen.config.DatasetSourceStructure FLAT>;

        if $r3 != $r2 goto label1;

        r0.<thredds.cataloggen.config.DatasetSource: boolean flatten> = 1;

        goto label2;

     label1:
        r0.<thredds.cataloggen.config.DatasetSource: boolean flatten> = 0;

     label2:
        return;
    }

    public boolean isFlatten()
    {
        thredds.cataloggen.config.DatasetSource r0;
        boolean $z0;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        $z0 = r0.<thredds.cataloggen.config.DatasetSource: boolean flatten>;

        return $z0;
    }

    public java.lang.String getAccessPoint()
    {
        java.lang.String $r1;
        thredds.cataloggen.config.DatasetSource r0;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        $r1 = r0.<thredds.cataloggen.config.DatasetSource: java.lang.String accessPoint>;

        return $r1;
    }

    public void setAccessPoint(java.lang.String)
    {
        java.lang.String r1;
        thredds.cataloggen.config.DatasetSource r0;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        r1 := @parameter0: java.lang.String;

        r0.<thredds.cataloggen.config.DatasetSource: java.lang.String accessPoint> = r1;

        return;
    }

    public java.lang.String getPrefixUrlPath()
    {
        java.lang.String $r1;
        thredds.cataloggen.config.DatasetSource r0;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        $r1 = r0.<thredds.cataloggen.config.DatasetSource: java.lang.String prefixUrlPath>;

        return $r1;
    }

    public void setPrefixUrlPath(java.lang.String)
    {
        java.lang.String r1;
        thredds.cataloggen.config.DatasetSource r0;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        r1 := @parameter0: java.lang.String;

        r0.<thredds.cataloggen.config.DatasetSource: java.lang.String prefixUrlPath> = r1;

        return;
    }

    public thredds.cataloggen.config.ResultService getResultService()
    {
        thredds.cataloggen.config.ResultService $r1;
        thredds.cataloggen.config.DatasetSource r0;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        $r1 = r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.ResultService resultService>;

        return $r1;
    }

    public void setResultService(thredds.cataloggen.config.ResultService)
    {
        thredds.cataloggen.config.ResultService r1;
        thredds.cataloggen.config.DatasetSource r0;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        r1 := @parameter0: thredds.cataloggen.config.ResultService;

        r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.ResultService resultService> = r1;

        return;
    }

    public boolean isCreateCatalogRefs()
    {
        thredds.cataloggen.config.DatasetSource r0;
        boolean $z0;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        $z0 = r0.<thredds.cataloggen.config.DatasetSource: boolean createCatalogRefs>;

        return $z0;
    }

    public void setCreateCatalogRefs(boolean)
    {
        thredds.cataloggen.config.DatasetSource r0;
        boolean z0;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        z0 := @parameter0: boolean;

        r0.<thredds.cataloggen.config.DatasetSource: boolean createCatalogRefs> = z0;

        return;
    }

    public java.util.List getDatasetNamerList()
    {
        java.util.List $r1;
        thredds.cataloggen.config.DatasetSource r0;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        $r1 = r0.<thredds.cataloggen.config.DatasetSource: java.util.List datasetNamerList>;

        return $r1;
    }

    public void addDatasetNamer(thredds.cataloggen.config.DatasetNamer)
    {
        java.util.List $r2;
        thredds.cataloggen.config.DatasetNamer r1;
        thredds.cataloggen.config.DatasetSource r0;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        r1 := @parameter0: thredds.cataloggen.config.DatasetNamer;

        $r2 = r0.<thredds.cataloggen.config.DatasetSource: java.util.List datasetNamerList>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.util.List getDatasetFilterList()
    {
        java.util.List $r1;
        thredds.cataloggen.config.DatasetSource r0;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        $r1 = r0.<thredds.cataloggen.config.DatasetSource: java.util.List datasetFilterList>;

        return $r1;
    }

    public void addDatasetFilter(thredds.cataloggen.config.DatasetFilter)
    {
        thredds.cataloggen.config.DatasetFilter r1;
        java.util.List $r2;
        thredds.cataloggen.config.DatasetSource r0;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        r1 := @parameter0: thredds.cataloggen.config.DatasetFilter;

        $r2 = r0.<thredds.cataloggen.config.DatasetSource: java.util.List datasetFilterList>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public thredds.cataloggen.config.DatasetSorter getDatasetSorter()
    {
        thredds.cataloggen.config.DatasetSorter $r1;
        thredds.cataloggen.config.DatasetSource r0;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        $r1 = r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSorter datasetSorter>;

        return $r1;
    }

    public void setDatasetSorter(thredds.cataloggen.config.DatasetSorter)
    {
        thredds.cataloggen.config.DatasetSorter r1;
        thredds.cataloggen.config.DatasetSource r0;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        r1 := @parameter0: thredds.cataloggen.config.DatasetSorter;

        r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSorter datasetSorter> = r1;

        return;
    }

    public java.util.List getDatasetEnhancerList()
    {
        java.util.List $r1;
        thredds.cataloggen.config.DatasetSource r0;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        $r1 = r0.<thredds.cataloggen.config.DatasetSource: java.util.List datasetEnhancerList>;

        return $r1;
    }

    public void addDatasetEnhancer(thredds.cataloggen.DatasetEnhancer1)
    {
        java.util.List $r1, $r3;
        thredds.cataloggen.config.DatasetSource r0;
        thredds.cataloggen.DatasetEnhancer1 r2;
        java.util.ArrayList $r4;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        r2 := @parameter0: thredds.cataloggen.DatasetEnhancer1;

        $r1 = r0.<thredds.cataloggen.config.DatasetSource: java.util.List datasetEnhancerList>;

        if $r1 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<thredds.cataloggen.config.DatasetSource: java.util.List datasetEnhancerList> = $r4;

     label1:
        $r3 = r0.<thredds.cataloggen.config.DatasetSource: java.util.List datasetEnhancerList>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public boolean isAddDatasetSize()
    {
        thredds.cataloggen.config.DatasetSource r0;
        boolean $z0;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        $z0 = r0.<thredds.cataloggen.config.DatasetSource: boolean addDatasetSize>;

        return $z0;
    }

    public void setAddDatasetSize(boolean)
    {
        thredds.cataloggen.config.DatasetSource r0;
        boolean z0;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        z0 := @parameter0: boolean;

        r0.<thredds.cataloggen.config.DatasetSource: boolean addDatasetSize> = z0;

        return;
    }

    public boolean validate(java.lang.StringBuilder)
    {
        thredds.cataloggen.config.DatasetSourceType $r3;
        thredds.cataloggen.config.DatasetNamer $r14;
        thredds.cataloggen.config.DatasetSourceStructure $r4;
        java.lang.StringBuffer $r1, $r16;
        int $i0;
        thredds.cataloggen.config.DatasetFilter $r12;
        java.lang.String $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.util.Iterator $r7, $r9;
        java.util.List $r6, $r8;
        thredds.cataloggen.config.DatasetSource r0;
        thredds.cataloggen.config.ResultService $r5, $r15;
        java.lang.Object $r10, $r13;
        java.lang.StringBuilder r11;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        r11 := @parameter0: java.lang.StringBuilder;

        r0.<thredds.cataloggen.config.DatasetSource: boolean isValid> = 1;

        $r1 = r0.<thredds.cataloggen.config.DatasetSource: java.lang.StringBuffer msgLog>;

        $i0 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        if $i0 <= 0 goto label1;

        $r16 = r0.<thredds.cataloggen.config.DatasetSource: java.lang.StringBuffer msgLog>;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.StringBuffer)>($r16);

     label1:
        $r2 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: java.lang.String getName()>();

        if $r2 != null goto label2;

        r0.<thredds.cataloggen.config.DatasetSource: boolean isValid> = 0;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ** DatasetSource (5): null value for name is not valid.");

     label2:
        $r3 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSourceType getType()>();

        if $r3 != null goto label3;

        r0.<thredds.cataloggen.config.DatasetSource: boolean isValid> = 0;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ** DatasetSource (6): null value for type is not valid (set with bad string?).");

     label3:
        $r4 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSourceStructure getStructure()>();

        if $r4 != null goto label4;

        r0.<thredds.cataloggen.config.DatasetSource: boolean isValid> = 0;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ** DatasetSource (7): null value for structure is not valid (set with bad string?).");

     label4:
        $r5 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.ResultService getResultService()>();

        if $r5 == null goto label5;

        $z8 = r0.<thredds.cataloggen.config.DatasetSource: boolean isValid>;

        $r15 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.ResultService getResultService()>();

        $z9 = virtualinvoke $r15.<thredds.cataloggen.config.ResultService: boolean validate(java.lang.StringBuilder)>(r11);

        $z10 = $z8 & $z9;

        r0.<thredds.cataloggen.config.DatasetSource: boolean isValid> = $z10;

     label5:
        $r6 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: java.util.List getDatasetNamerList()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z11 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label7;

        $z5 = r0.<thredds.cataloggen.config.DatasetSource: boolean isValid>;

        $r13 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (thredds.cataloggen.config.DatasetNamer) $r13;

        $z6 = virtualinvoke $r14.<thredds.cataloggen.config.DatasetNamer: boolean validate(java.lang.StringBuilder)>(r11);

        $z7 = $z5 & $z6;

        r0.<thredds.cataloggen.config.DatasetSource: boolean isValid> = $z7;

        goto label6;

     label7:
        $r8 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: java.util.List getDatasetFilterList()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label8:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $z2 = r0.<thredds.cataloggen.config.DatasetSource: boolean isValid>;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (thredds.cataloggen.config.DatasetFilter) $r10;

        $z3 = virtualinvoke $r12.<thredds.cataloggen.config.DatasetFilter: boolean validate(java.lang.StringBuilder)>(r11);

        $z4 = $z2 & $z3;

        r0.<thredds.cataloggen.config.DatasetSource: boolean isValid> = $z4;

        goto label8;

     label9:
        $z1 = r0.<thredds.cataloggen.config.DatasetSource: boolean isValid>;

        return $z1;
    }

    public java.lang.String toString()
    {
        thredds.cataloggen.config.DatasetSourceType $r7;
        java.util.List $r22, $r26;
        thredds.cataloggen.config.DatasetSource r3;
        thredds.cataloggen.config.ResultService $r17;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r16, $r19, $r20, $r21, $r23, $r24, $r25, $r27, $r28;
        thredds.cataloggen.config.DatasetSourceStructure $r10;
        java.lang.StringBuffer $r0;
        int $i0, $i1;
        java.lang.String $r4, $r13, $r18, $r29, $r30;

        r3 := @this: thredds.cataloggen.config.DatasetSource;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DatasetSource[name:<");

        $r4 = virtualinvoke r3.<thredds.cataloggen.config.DatasetSource: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> type:<");

        $r7 = virtualinvoke r3.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSourceType getType()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> structure:<");

        $r10 = virtualinvoke r3.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSourceStructure getStructure()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> accessPoint:<");

        $r13 = virtualinvoke r3.<thredds.cataloggen.config.DatasetSource: java.lang.String getAccessPoint()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> and children - ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ResultService(");

        $r17 = virtualinvoke r3.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.ResultService getResultService()>();

        $r18 = virtualinvoke $r17.<thredds.cataloggen.config.ResultService: java.lang.String getName()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") - ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DatasetNamer(");

        $r22 = virtualinvoke r3.<thredds.cataloggen.config.DatasetSource: java.util.List getDatasetNamerList()>();

        $i0 = interfaceinvoke $r22.<java.util.List: int size()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") - ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DatasetFilter(");

        $r26 = virtualinvoke r3.<thredds.cataloggen.config.DatasetSource: java.util.List getDatasetFilterList()>();

        $i1 = interfaceinvoke $r26.<java.util.List: int size()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")]");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r30 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r30;
    }

    public thredds.catalog.InvDataset expand() throws java.io.IOException
    {
        java.lang.String $r1, $r16, $r19;
        thredds.catalog.InvDataset $r6, $r7, $r8, $r11, $r12, $r15;
        boolean $z0;
        org.slf4j.Logger $r20;
        thredds.catalog.InvCatalog $r2, $r3, $r9;
        java.io.IOException $r21;
        java.util.List $r4;
        thredds.catalog.InvCatalogImpl $r10;
        thredds.cataloggen.config.DatasetSource r0;
        java.lang.Object $r5;
        java.lang.StringBuilder $r13, $r14, $r17, $r18;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        $r1 = r0.<thredds.cataloggen.config.DatasetSource: java.lang.String prefixUrlPath>;

        $r2 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: thredds.catalog.InvCatalog createSkeletonCatalog(java.lang.String)>($r1);

        r0.<thredds.cataloggen.config.DatasetSource: thredds.catalog.InvCatalog resultingCatalog> = $r2;

        $r3 = r0.<thredds.cataloggen.config.DatasetSource: thredds.catalog.InvCatalog resultingCatalog>;

        $r4 = virtualinvoke $r3.<thredds.catalog.InvCatalog: java.util.List getDatasets()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (thredds.catalog.InvDataset) $r5;

        r0.<thredds.cataloggen.config.DatasetSource: thredds.catalog.InvDataset accessPointDataset> = $r6;

        $r7 = r0.<thredds.cataloggen.config.DatasetSource: thredds.catalog.InvDataset accessPointDataset>;

        $z0 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: boolean isCollection(thredds.catalog.InvDataset)>($r7);

        if $z0 != 0 goto label1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The access point dataset <");

        $r15 = r0.<thredds.cataloggen.config.DatasetSource: thredds.catalog.InvDataset accessPointDataset>;

        $r16 = virtualinvoke $r15.<thredds.catalog.InvDataset: java.lang.String getName()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> must be a collection dataset.");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = <thredds.cataloggen.config.DatasetSource: org.slf4j.Logger logger>;

        interfaceinvoke $r20.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("expand(): {}", $r19);

        $r21 = new java.io.IOException;

        specialinvoke $r21.<java.io.IOException: void <init>(java.lang.String)>($r19);

        throw $r21;

     label1:
        $r8 = r0.<thredds.cataloggen.config.DatasetSource: thredds.catalog.InvDataset accessPointDataset>;

        specialinvoke r0.<thredds.cataloggen.config.DatasetSource: void expandRecursive(thredds.catalog.InvDataset)>($r8);

        $r9 = r0.<thredds.cataloggen.config.DatasetSource: thredds.catalog.InvCatalog resultingCatalog>;

        $r10 = (thredds.catalog.InvCatalogImpl) $r9;

        virtualinvoke $r10.<thredds.catalog.InvCatalogImpl: boolean finish()>();

        $r11 = r0.<thredds.cataloggen.config.DatasetSource: thredds.catalog.InvDataset accessPointDataset>;

        specialinvoke r0.<thredds.cataloggen.config.DatasetSource: void recursivelyRemoveEmptyCollectionDatasets(thredds.catalog.InvDataset)>($r11);

        $r12 = r0.<thredds.cataloggen.config.DatasetSource: thredds.catalog.InvDataset accessPointDataset>;

        return $r12;
    }

    public thredds.catalog.InvDataset expand(java.util.List) throws java.io.IOException
    {
        java.lang.String $r1, $r14, $r15;
        thredds.catalog.InvDataset $r6, $r11, $r12, $r16, $r17;
        boolean $z0;
        thredds.catalog.InvCatalog $r2, $r3, $r9;
        java.util.Iterator $r8;
        java.util.List $r4, r7;
        thredds.catalog.InvCatalogImpl $r10;
        thredds.cataloggen.config.DatasetSource r0;
        java.lang.Object $r5, $r13;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        r7 := @parameter0: java.util.List;

        $r1 = r0.<thredds.cataloggen.config.DatasetSource: java.lang.String prefixUrlPath>;

        $r2 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: thredds.catalog.InvCatalog createSkeletonCatalog(java.lang.String)>($r1);

        r0.<thredds.cataloggen.config.DatasetSource: thredds.catalog.InvCatalog resultingCatalog> = $r2;

        $r3 = r0.<thredds.cataloggen.config.DatasetSource: thredds.catalog.InvCatalog resultingCatalog>;

        $r4 = virtualinvoke $r3.<thredds.catalog.InvCatalog: java.util.List getDatasets()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (thredds.catalog.InvDataset) $r5;

        r0.<thredds.cataloggen.config.DatasetSource: thredds.catalog.InvDataset accessPointDataset> = $r6;

        $r8 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r13 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (java.lang.String) $r13;

        $r14 = r0.<thredds.cataloggen.config.DatasetSource: java.lang.String prefixUrlPath>;

        $r16 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: thredds.catalog.InvDataset createDataset(java.lang.String,java.lang.String)>($r15, $r14);

        $r17 = r0.<thredds.cataloggen.config.DatasetSource: thredds.catalog.InvDataset accessPointDataset>;

        specialinvoke r0.<thredds.cataloggen.config.DatasetSource: void expandRecursiveCollection(thredds.catalog.InvDataset,thredds.catalog.InvDataset)>($r17, $r16);

        goto label1;

     label2:
        $r9 = r0.<thredds.cataloggen.config.DatasetSource: thredds.catalog.InvCatalog resultingCatalog>;

        $r10 = (thredds.catalog.InvCatalogImpl) $r9;

        virtualinvoke $r10.<thredds.catalog.InvCatalogImpl: boolean finish()>();

        $r11 = r0.<thredds.cataloggen.config.DatasetSource: thredds.catalog.InvDataset accessPointDataset>;

        specialinvoke r0.<thredds.cataloggen.config.DatasetSource: void recursivelyRemoveEmptyCollectionDatasets(thredds.catalog.InvDataset)>($r11);

        $r12 = r0.<thredds.cataloggen.config.DatasetSource: thredds.catalog.InvDataset accessPointDataset>;

        return $r12;
    }

    private void expandRecursive(thredds.catalog.InvDataset)
    {
        java.lang.String $r2;
        thredds.catalog.InvDataset r1, $r7, r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r4;
        java.util.List $r3, $r6;
        thredds.cataloggen.config.DatasetSource r0;
        java.lang.Object $r5;
        thredds.catalog.InvDatasetImpl $r8, $r9, $r10, $r11;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        r1 := @parameter0: thredds.catalog.InvDataset;

        $r2 = r0.<thredds.cataloggen.config.DatasetSource: java.lang.String prefixUrlPath>;

        $r3 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: java.util.List expandThisLevel(thredds.catalog.InvDataset,java.lang.String)>(r1, $r2);

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z4 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r12 = (thredds.catalog.InvDataset) $r5;

        $r6 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: java.util.List getDatasetFilterList()>();

        $z0 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: boolean isCollection(thredds.catalog.InvDataset)>(r12);

        $z1 = staticinvoke <thredds.cataloggen.config.DatasetFilter: boolean acceptDatasetByFilterGroup(java.util.List,thredds.catalog.InvDataset,boolean)>($r6, r12, $z0);

        if $z1 != 0 goto label2;

        goto label1;

     label2:
        $z2 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: boolean isCollection(thredds.catalog.InvDataset)>(r12);

        if $z2 == 0 goto label3;

        specialinvoke r0.<thredds.cataloggen.config.DatasetSource: void expandRecursiveCollection(thredds.catalog.InvDataset,thredds.catalog.InvDataset)>(r1, r12);

        goto label1;

     label3:
        $z3 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: boolean isFlatten()>();

        if $z3 != 0 goto label4;

        $r11 = (thredds.catalog.InvDatasetImpl) r1;

        $r10 = (thredds.catalog.InvDatasetImpl) r12;

        virtualinvoke $r11.<thredds.catalog.InvDatasetImpl: void addDataset(thredds.catalog.InvDatasetImpl)>($r10);

        goto label1;

     label4:
        $r7 = r0.<thredds.cataloggen.config.DatasetSource: thredds.catalog.InvDataset accessPointDataset>;

        $r9 = (thredds.catalog.InvDatasetImpl) $r7;

        $r8 = (thredds.catalog.InvDatasetImpl) r12;

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void addDataset(thredds.catalog.InvDatasetImpl)>($r8);

        goto label1;

     label5:
        return;
    }

    private void expandRecursiveCollection(thredds.catalog.InvDataset, thredds.catalog.InvDataset)
    {
        thredds.cataloggen.config.DatasetSourceType $r9;
        thredds.catalog.InvCatalogRef $r4;
        thredds.cataloggen.config.DatasetSourceStructure $r10;
        java.lang.String $r2, $r3, $r8, $r11, $r17, $r19, $r24;
        boolean $z0, $z1, $z2;
        thredds.catalog.InvDataset r1, r5;
        java.util.List $r16;
        thredds.cataloggen.config.DatasetSource r0, $r14;
        thredds.cataloggen.config.CatalogRefInfo $r15;
        thredds.cataloggen.config.ResultService $r12, $r13;
        java.lang.StringBuilder $r18, $r20, $r21;
        thredds.catalog.InvDatasetImpl $r6, $r7, $r22, $r23;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        r5 := @parameter0: thredds.catalog.InvDataset;

        r1 := @parameter1: thredds.catalog.InvDataset;

        $z0 = r0.<thredds.cataloggen.config.DatasetSource: boolean createCatalogRefs>;

        if $z0 != 0 goto label2;

        $z2 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: boolean isFlatten()>();

        if $z2 != 0 goto label1;

        $r23 = (thredds.catalog.InvDatasetImpl) r5;

        $r22 = (thredds.catalog.InvDatasetImpl) r1;

        virtualinvoke $r23.<thredds.catalog.InvDatasetImpl: void addDataset(thredds.catalog.InvDatasetImpl)>($r22);

     label1:
        specialinvoke r0.<thredds.cataloggen.config.DatasetSource: void expandRecursive(thredds.catalog.InvDataset)>(r1);

        goto label6;

     label2:
        $r2 = virtualinvoke r1.<thredds.catalog.InvDataset: java.lang.String getName()>();

        $r3 = virtualinvoke r1.<thredds.catalog.InvDataset: java.lang.String getName()>();

        if $r3 == null goto label3;

        $r17 = virtualinvoke r1.<thredds.catalog.InvDataset: java.lang.String getName()>();

        $z1 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label4;

     label3:
        $r24 = "catalog.xml";

        goto label5;

     label4:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke r1.<thredds.catalog.InvDataset: java.lang.String getName()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/catalog.xml");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        $r4 = new thredds.catalog.InvCatalogRef;

        $r6 = (thredds.catalog.InvDatasetImpl) r5;

        specialinvoke $r4.<thredds.catalog.InvCatalogRef: void <init>(thredds.catalog.InvDatasetImpl,java.lang.String,java.lang.String)>($r6, $r2, $r24);

        $r7 = (thredds.catalog.InvDatasetImpl) r5;

        virtualinvoke $r7.<thredds.catalog.InvDatasetImpl: void addDataset(thredds.catalog.InvDatasetImpl)>($r4);

        $r8 = virtualinvoke r1.<thredds.catalog.InvDataset: java.lang.String getName()>();

        $r9 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSourceType getType()>();

        $r10 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSourceStructure getStructure()>();

        $r11 = virtualinvoke r1.<thredds.catalog.InvDataset: java.lang.String getName()>();

        $r12 = new thredds.cataloggen.config.ResultService;

        $r13 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.ResultService getResultService()>();

        specialinvoke $r12.<thredds.cataloggen.config.ResultService: void <init>(thredds.cataloggen.config.ResultService)>($r13);

        $r14 = staticinvoke <thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSource newDatasetSource(java.lang.String,thredds.cataloggen.config.DatasetSourceType,thredds.cataloggen.config.DatasetSourceStructure,java.lang.String,thredds.cataloggen.config.ResultService)>($r8, $r9, $r10, $r11, $r12);

        $r16 = r0.<thredds.cataloggen.config.DatasetSource: java.util.List catalogRefInfoList>;

        $r15 = new thredds.cataloggen.config.CatalogRefInfo;

        specialinvoke $r15.<thredds.cataloggen.config.CatalogRefInfo: void <init>(java.lang.String,java.lang.String,thredds.catalog.InvDataset,thredds.cataloggen.config.DatasetSource)>($r2, $r24, r1, $r14);

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r15);

     label6:
        return;
    }

    public thredds.catalog.InvCatalog fullExpand() throws java.io.IOException
    {
        org.slf4j.Logger $r1, $r7, $r9;
        thredds.catalog.InvCatalog $r4;
        java.util.Iterator $r6;
        thredds.cataloggen.DatasetEnhancer1 r12;
        java.util.List $r5;
        thredds.catalog.InvCatalogImpl $r10;
        thredds.cataloggen.config.DatasetSource r0;
        java.lang.Object $r11;
        java.lang.String $r2;
        thredds.catalog.InvDatasetImpl $r8;
        thredds.catalog.InvDataset $r3;
        boolean $z0;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        $r1 = <thredds.cataloggen.config.DatasetSource: org.slf4j.Logger logger>;

        $r2 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: java.lang.String getName()>();

        interfaceinvoke $r1.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("fullExpand(): expanding DatasetSource named \"{}\"", $r2);

        $r3 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: thredds.catalog.InvDataset expand()>();

        $r4 = virtualinvoke $r3.<thredds.catalog.InvDataset: thredds.catalog.InvCatalog getParentCatalog()>();

        $r5 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: java.util.List getDatasetEnhancerList()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r12 = (thredds.cataloggen.DatasetEnhancer1) $r11;

        virtualinvoke r12.<thredds.cataloggen.DatasetEnhancer1: void addMetadata(thredds.catalog.InvDataset)>($r3);

        goto label1;

     label2:
        $r7 = <thredds.cataloggen.config.DatasetSource: org.slf4j.Logger logger>;

        interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String)>("fullExpand(): naming the datasets.");

        $r8 = (thredds.catalog.InvDatasetImpl) $r3;

        specialinvoke r0.<thredds.cataloggen.config.DatasetSource: void nameDatasets(thredds.catalog.InvDatasetImpl)>($r8);

        $r9 = <thredds.cataloggen.config.DatasetSource: org.slf4j.Logger logger>;

        interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String)>("fullExpand(): sorting the datasets.");

        specialinvoke r0.<thredds.cataloggen.config.DatasetSource: void sortDatasets(thredds.catalog.InvDataset)>($r3);

        $r10 = (thredds.catalog.InvCatalogImpl) $r4;

        virtualinvoke $r10.<thredds.catalog.InvCatalogImpl: boolean finish()>();

        return $r4;
    }

    protected abstract thredds.catalog.InvDataset createDataset(java.lang.String, java.lang.String) throws java.io.IOException;

    protected abstract boolean isCollection(thredds.catalog.InvDataset);

    protected abstract thredds.catalog.InvCatalog createSkeletonCatalog(java.lang.String) throws java.io.IOException;

    protected abstract java.util.List expandThisLevel(thredds.catalog.InvDataset, java.lang.String);

    private void nameDatasets(thredds.catalog.InvDatasetImpl)
    {
        org.slf4j.Logger $r2, $r7;
        java.util.List $r1, $r4, $r5;
        thredds.cataloggen.config.DatasetSource r0;
        int $i0, i1;
        java.lang.Object $r6;
        thredds.catalog.InvDatasetImpl r3, r8;
        boolean $z0, $z1;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        r3 := @parameter0: thredds.catalog.InvDatasetImpl;

        $r1 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: java.util.List getDatasetNamerList()>();

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: boolean isFlatten()>();

        if $z1 == 0 goto label2;

        $r7 = <thredds.cataloggen.config.DatasetSource: org.slf4j.Logger logger>;

        interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String)>("nameDatasets(): structure is FLAT calling nameDatasetList()");

        specialinvoke r0.<thredds.cataloggen.config.DatasetSource: void nameDatasetList(thredds.catalog.InvDatasetImpl)>(r3);

        goto label4;

     label2:
        $r2 = <thredds.cataloggen.config.DatasetSource: org.slf4j.Logger logger>;

        interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String)>("nameDatasets(): structure is DIRECTORY_TREE calling nameDatasetTree() on each dataset in dataset container");

        i1 = 0;

     label3:
        $r4 = virtualinvoke r3.<thredds.catalog.InvDatasetImpl: java.util.List getDatasets()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i1 >= $i0 goto label4;

        $r5 = virtualinvoke r3.<thredds.catalog.InvDatasetImpl: java.util.List getDatasets()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        r8 = (thredds.catalog.InvDatasetImpl) $r6;

        specialinvoke r0.<thredds.cataloggen.config.DatasetSource: void nameDatasetTree(thredds.catalog.InvDatasetImpl)>(r8);

        i1 = i1 + 1;

        goto label3;

     label4:
        return;
    }

    private void nameDatasetList(thredds.catalog.InvDatasetImpl)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.List $r3, $r5, $r11, $r16, $r20, $r33;
        thredds.cataloggen.config.DatasetSource r2;
        java.lang.StringBuilder $r8, $r10, $r12, $r13;
        thredds.cataloggen.config.DatasetNamer r30;
        int $i0, $i1, i2, i3, $i4;
        java.lang.String $r14, $r19, $r24, $r25, $r27, $r29;
        org.slf4j.Logger $r4, $r9, $r15, $r18, $r23, $r26;
        java.util.Iterator $r21;
        java.lang.Object $r6, $r17, $r22;
        thredds.catalog.InvDatasetImpl $r0, r1, $r7, $r28, r31, r32;

        r2 := @this: thredds.cataloggen.config.DatasetSource;

        r1 := @parameter0: thredds.catalog.InvDatasetImpl;

        $r0 = new thredds.catalog.InvDatasetImpl;

        specialinvoke $r0.<thredds.catalog.InvDatasetImpl: void <init>(thredds.catalog.InvDatasetImpl,java.lang.String,ucar.nc2.constants.FeatureType,java.lang.String,java.lang.String)>(r1, "nameDatastList() temp dataset", null, null, null);

        virtualinvoke r1.<thredds.catalog.InvDatasetImpl: void addDataset(thredds.catalog.InvDatasetImpl)>($r0);

        i2 = 0;

     label01:
        $r3 = r2.<thredds.cataloggen.config.DatasetSource: java.util.List datasetNamerList>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i2 >= $i0 goto label08;

        $r16 = r2.<thredds.cataloggen.config.DatasetSource: java.util.List datasetNamerList>;

        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i2);

        r30 = (thredds.cataloggen.config.DatasetNamer) $r17;

        $r18 = <thredds.cataloggen.config.DatasetSource: org.slf4j.Logger logger>;

        $r19 = virtualinvoke r30.<thredds.cataloggen.config.DatasetNamer: java.lang.String getName()>();

        interfaceinvoke $r18.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("nameDatasetList(): trying namer ({})", $r19);

        r31 = null;

        $z1 = virtualinvoke r30.<thredds.cataloggen.config.DatasetNamer: boolean getAddLevel()>();

        if $z1 == 0 goto label02;

        $r28 = new thredds.catalog.InvDatasetImpl;

        $r29 = virtualinvoke r30.<thredds.cataloggen.config.DatasetNamer: java.lang.String getName()>();

        specialinvoke $r28.<thredds.catalog.InvDatasetImpl: void <init>(thredds.catalog.InvDatasetImpl,java.lang.String,ucar.nc2.constants.FeatureType,java.lang.String,java.lang.String)>(null, $r29, null, null, null);

        r31 = $r28;

     label02:
        $r20 = virtualinvoke r1.<thredds.catalog.InvDatasetImpl: java.util.List getDatasets()>();

        $r21 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z6 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label06;

        $r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r32 = (thredds.catalog.InvDatasetImpl) $r22;

        $r23 = <thredds.cataloggen.config.DatasetSource: org.slf4j.Logger logger>;

        $r24 = virtualinvoke r32.<thredds.catalog.InvDatasetImpl: java.lang.String getName()>();

        $r25 = virtualinvoke r32.<thredds.catalog.InvDatasetImpl: java.lang.String getUrlPath()>();

        interfaceinvoke $r23.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("nameDatasetList(): try namer on this ds ({}-{})", $r24, $r25);

        $z4 = virtualinvoke r30.<thredds.cataloggen.config.DatasetNamer: boolean nameDataset(thredds.catalog.InvDatasetImpl)>(r32);

        if $z4 == 0 goto label03;

        $r26 = <thredds.cataloggen.config.DatasetSource: org.slf4j.Logger logger>;

        $r27 = virtualinvoke r32.<thredds.catalog.InvDatasetImpl: java.lang.String getName()>();

        interfaceinvoke $r26.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("nameDatasetList(): ds named ({})", $r27);

        $z5 = virtualinvoke r30.<thredds.cataloggen.config.DatasetNamer: boolean getAddLevel()>();

        if $z5 == 0 goto label04;

        virtualinvoke r31.<thredds.catalog.InvDatasetImpl: void addDataset(thredds.catalog.InvDatasetImpl)>(r32);

        goto label05;

     label04:
        virtualinvoke $r0.<thredds.catalog.InvDatasetImpl: void addDataset(thredds.catalog.InvDatasetImpl)>(r32);

     label05:
        interfaceinvoke $r21.<java.util.Iterator: void remove()>();

        goto label03;

     label06:
        $z2 = virtualinvoke r30.<thredds.cataloggen.config.DatasetNamer: boolean getAddLevel()>();

        if $z2 == 0 goto label07;

        $z3 = virtualinvoke r31.<thredds.catalog.InvDatasetImpl: boolean hasNestedDatasets()>();

        if $z3 == 0 goto label07;

        virtualinvoke $r0.<thredds.catalog.InvDatasetImpl: void addDataset(thredds.catalog.InvDatasetImpl)>(r31);

     label07:
        i2 = i2 + 1;

        goto label01;

     label08:
        virtualinvoke $r0.<thredds.catalog.InvDatasetImpl: boolean finish()>();

        $r4 = <thredds.cataloggen.config.DatasetSource: org.slf4j.Logger logger>;

        $z0 = interfaceinvoke $r4.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label09;

        $r9 = <thredds.cataloggen.config.DatasetSource: org.slf4j.Logger logger>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nameDatasetList(): number of unnamed datasets is ");

        $r11 = virtualinvoke r1.<thredds.catalog.InvDatasetImpl: java.util.List getDatasets()>();

        $i1 = interfaceinvoke $r11.<java.util.List: int size()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String)>($r14);

        $r15 = <thredds.cataloggen.config.DatasetSource: org.slf4j.Logger logger>;

        interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String)>("nameDatasetList(): add named datasets back to container.");

     label09:
        i3 = 0;

     label10:
        $r33 = virtualinvoke $r0.<thredds.catalog.InvDatasetImpl: java.util.List getDatasets()>();

        $i4 = interfaceinvoke $r33.<java.util.List: int size()>();

        if i3 >= $i4 goto label11;

        $r5 = virtualinvoke $r0.<thredds.catalog.InvDatasetImpl: java.util.List getDatasets()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i3);

        $r7 = (thredds.catalog.InvDatasetImpl) $r6;

        virtualinvoke r1.<thredds.catalog.InvDatasetImpl: void addDataset(thredds.catalog.InvDatasetImpl)>($r7);

        i3 = i3 + 1;

        goto label10;

     label11:
        virtualinvoke r1.<thredds.catalog.InvDatasetImpl: boolean removeDataset(thredds.catalog.InvDatasetImpl)>($r0);

        return;
    }

    private void nameDatasetTree(thredds.catalog.InvDatasetImpl)
    {
        thredds.cataloggen.config.DatasetNamer r14;
        int i0, $i1, i2, $i3;
        java.lang.String $r1, $r3, $r8, $r12;
        boolean $z0, $z1, $z2;
        org.slf4j.Logger $r2, $r7, $r11;
        java.util.List $r5, $r9, $r13, $r15;
        thredds.cataloggen.config.DatasetSource r4;
        java.lang.Object $r6, $r10;
        thredds.catalog.InvDatasetImpl r0, r16;

        r4 := @this: thredds.cataloggen.config.DatasetSource;

        r0 := @parameter0: thredds.catalog.InvDatasetImpl;

        $r1 = virtualinvoke r0.<thredds.catalog.InvDatasetImpl: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r0.<thredds.catalog.InvDatasetImpl: boolean hasAccess()>();

        if $z2 != 0 goto label4;

     label1:
        $r2 = <thredds.cataloggen.config.DatasetSource: org.slf4j.Logger logger>;

        $r3 = virtualinvoke r0.<thredds.catalog.InvDatasetImpl: java.lang.String getUrlPath()>();

        interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("nameDatasetTree(): naming dataset ({})...", $r3);

        i0 = 0;

     label2:
        $r13 = r4.<thredds.cataloggen.config.DatasetSource: java.util.List datasetNamerList>;

        $i1 = interfaceinvoke $r13.<java.util.List: int size()>();

        if i0 >= $i1 goto label4;

        $r9 = r4.<thredds.cataloggen.config.DatasetSource: java.util.List datasetNamerList>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i0);

        r14 = (thredds.cataloggen.config.DatasetNamer) $r10;

        $z1 = virtualinvoke r14.<thredds.cataloggen.config.DatasetNamer: boolean nameDataset(thredds.catalog.InvDatasetImpl)>(r0);

        if $z1 == 0 goto label3;

        $r11 = <thredds.cataloggen.config.DatasetSource: org.slf4j.Logger logger>;

        $r12 = virtualinvoke r14.<thredds.cataloggen.config.DatasetNamer: java.lang.String getName()>();

        interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("nameDatasetTree(): ... used namer ({})", $r12);

        goto label4;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        i2 = 0;

     label5:
        $r15 = virtualinvoke r0.<thredds.catalog.InvDatasetImpl: java.util.List getDatasets()>();

        $i3 = interfaceinvoke $r15.<java.util.List: int size()>();

        if i2 >= $i3 goto label6;

        $r5 = virtualinvoke r0.<thredds.catalog.InvDatasetImpl: java.util.List getDatasets()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i2);

        r16 = (thredds.catalog.InvDatasetImpl) $r6;

        $r7 = <thredds.cataloggen.config.DatasetSource: org.slf4j.Logger logger>;

        $r8 = virtualinvoke r16.<thredds.catalog.InvDatasetImpl: java.lang.String getUrlPath()>();

        interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("nameDatasetTree(): recurse to name child dataset ({})", $r8);

        specialinvoke r4.<thredds.cataloggen.config.DatasetSource: void nameDatasetTree(thredds.catalog.InvDatasetImpl)>(r16);

        i2 = i2 + 1;

        goto label5;

     label6:
        return;
    }

    private void sortDatasets(thredds.catalog.InvDataset)
    {
        thredds.cataloggen.config.DatasetSorter $r1, $r2, $r4;
        thredds.cataloggen.config.DatasetSource r0;
        thredds.cataloggen.config.DatasetSource$1 $r5;
        thredds.catalog.InvDataset r3;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        r3 := @parameter0: thredds.catalog.InvDataset;

        $r1 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSorter getDatasetSorter()>();

        if $r1 != null goto label1;

        $r4 = new thredds.cataloggen.config.DatasetSorter;

        $r5 = new thredds.cataloggen.config.DatasetSource$1;

        specialinvoke $r5.<thredds.cataloggen.config.DatasetSource$1: void <init>(thredds.cataloggen.config.DatasetSource)>(r0);

        specialinvoke $r4.<thredds.cataloggen.config.DatasetSorter: void <init>(java.util.Comparator)>($r5);

        virtualinvoke $r4.<thredds.cataloggen.config.DatasetSorter: void sortNestedDatasets(thredds.catalog.InvDataset)>(r3);

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSorter getDatasetSorter()>();

        virtualinvoke $r2.<thredds.cataloggen.config.DatasetSorter: void sortNestedDatasets(thredds.catalog.InvDataset)>(r3);

     label2:
        return;
    }

    private void recursivelyRemoveEmptyCollectionDatasets(thredds.catalog.InvDataset)
    {
        java.util.Iterator $r2;
        java.util.List $r1;
        thredds.cataloggen.config.DatasetSource r4;
        java.lang.Object $r3;
        thredds.catalog.InvDataset r0, r5;
        boolean $z0, $z1, $z2, $z3;

        r4 := @this: thredds.cataloggen.config.DatasetSource;

        r0 := @parameter0: thredds.catalog.InvDataset;

        $r1 = virtualinvoke r0.<thredds.catalog.InvDataset: java.util.List getDatasets()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (thredds.catalog.InvDataset) $r3;

        $z0 = virtualinvoke r5.<thredds.catalog.InvDataset: boolean hasAccess()>();

        if $z0 == 0 goto label2;

        goto label1;

     label2:
        $z1 = r5 instanceof thredds.catalog.InvCatalogRef;

        if $z1 == 0 goto label3;

        goto label1;

     label3:
        $z2 = virtualinvoke r5.<thredds.catalog.InvDataset: boolean hasNestedDatasets()>();

        if $z2 == 0 goto label4;

        specialinvoke r4.<thredds.cataloggen.config.DatasetSource: void recursivelyRemoveEmptyCollectionDatasets(thredds.catalog.InvDataset)>(r5);

        goto label1;

     label4:
        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

        goto label1;

     label5:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        thredds.cataloggen.config.DatasetSourceType $r13, $r14, $r15, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.util.List $r5, $r6, $r7, $r8, $r21, $r22, $r23, $r24;
        thredds.cataloggen.config.DatasetSource r0, r2;
        thredds.cataloggen.config.ResultService $r11, $r12, $r17, $r18;
        java.lang.String $r3, $r4, $r9, $r10, $r19, $r20, $r25, $r26;
        java.lang.Object r1;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        $z0 = r1 instanceof thredds.cataloggen.config.DatasetSource;

        if $z0 != 0 goto label02;

        return 0;

     label02:
        r2 = (thredds.cataloggen.config.DatasetSource) r1;

        $z2 = r0.<thredds.cataloggen.config.DatasetSource: boolean createCatalogRefs>;

        $z1 = r2.<thredds.cataloggen.config.DatasetSource: boolean createCatalogRefs>;

        if $z2 == $z1 goto label03;

        return 0;

     label03:
        $z4 = r0.<thredds.cataloggen.config.DatasetSource: boolean flatten>;

        $z3 = r2.<thredds.cataloggen.config.DatasetSource: boolean flatten>;

        if $z4 == $z3 goto label04;

        return 0;

     label04:
        $r3 = r0.<thredds.cataloggen.config.DatasetSource: java.lang.String accessPoint>;

        if $r3 == null goto label05;

        $r26 = r0.<thredds.cataloggen.config.DatasetSource: java.lang.String accessPoint>;

        $r25 = r2.<thredds.cataloggen.config.DatasetSource: java.lang.String accessPoint>;

        $z10 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r25);

        if $z10 != 0 goto label07;

        goto label06;

     label05:
        $r4 = r2.<thredds.cataloggen.config.DatasetSource: java.lang.String accessPoint>;

        if $r4 == null goto label07;

     label06:
        return 0;

     label07:
        $r5 = r0.<thredds.cataloggen.config.DatasetSource: java.util.List datasetFilterList>;

        if $r5 == null goto label08;

        $r24 = r0.<thredds.cataloggen.config.DatasetSource: java.util.List datasetFilterList>;

        $r23 = r2.<thredds.cataloggen.config.DatasetSource: java.util.List datasetFilterList>;

        $z9 = virtualinvoke $r24.<java.lang.Object: boolean equals(java.lang.Object)>($r23);

        if $z9 != 0 goto label10;

        goto label09;

     label08:
        $r6 = r2.<thredds.cataloggen.config.DatasetSource: java.util.List datasetFilterList>;

        if $r6 == null goto label10;

     label09:
        return 0;

     label10:
        $r7 = r0.<thredds.cataloggen.config.DatasetSource: java.util.List datasetNamerList>;

        if $r7 == null goto label11;

        $r22 = r0.<thredds.cataloggen.config.DatasetSource: java.util.List datasetNamerList>;

        $r21 = r2.<thredds.cataloggen.config.DatasetSource: java.util.List datasetNamerList>;

        $z8 = virtualinvoke $r22.<java.lang.Object: boolean equals(java.lang.Object)>($r21);

        if $z8 != 0 goto label13;

        goto label12;

     label11:
        $r8 = r2.<thredds.cataloggen.config.DatasetSource: java.util.List datasetNamerList>;

        if $r8 == null goto label13;

     label12:
        return 0;

     label13:
        $r9 = r0.<thredds.cataloggen.config.DatasetSource: java.lang.String name>;

        if $r9 == null goto label14;

        $r20 = r0.<thredds.cataloggen.config.DatasetSource: java.lang.String name>;

        $r19 = r2.<thredds.cataloggen.config.DatasetSource: java.lang.String name>;

        $z7 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z7 != 0 goto label16;

        goto label15;

     label14:
        $r10 = r2.<thredds.cataloggen.config.DatasetSource: java.lang.String name>;

        if $r10 == null goto label16;

     label15:
        return 0;

     label16:
        $r11 = r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.ResultService resultService>;

        if $r11 == null goto label17;

        $r18 = r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.ResultService resultService>;

        $r17 = r2.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.ResultService resultService>;

        $z6 = virtualinvoke $r18.<thredds.cataloggen.config.ResultService: boolean equals(java.lang.Object)>($r17);

        if $z6 != 0 goto label19;

        goto label18;

     label17:
        $r12 = r2.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.ResultService resultService>;

        if $r12 == null goto label19;

     label18:
        return 0;

     label19:
        $r13 = r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSourceType type>;

        if $r13 == null goto label20;

        $r16 = r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSourceType type>;

        $r15 = r2.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSourceType type>;

        $z5 = virtualinvoke $r16.<java.lang.Object: boolean equals(java.lang.Object)>($r15);

        if $z5 != 0 goto label22;

        goto label21;

     label20:
        $r14 = r2.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSourceType type>;

        if $r14 == null goto label22;

     label21:
        return 0;

     label22:
        return 1;
    }

    public int hashCode()
    {
        thredds.cataloggen.config.DatasetSourceType $r2, $r11;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r5, $r6, $r7, $r8;
        thredds.cataloggen.config.DatasetSource r0;
        thredds.cataloggen.config.ResultService $r4, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        java.lang.String $r1, $r3, $r10, $r12;

        r0 := @this: thredds.cataloggen.config.DatasetSource;

        $i0 = r0.<thredds.cataloggen.config.DatasetSource: int hashCode>;

        if $i0 != 0 goto label17;

        $r1 = r0.<thredds.cataloggen.config.DatasetSource: java.lang.String name>;

        if $r1 == null goto label01;

        $r12 = r0.<thredds.cataloggen.config.DatasetSource: java.lang.String name>;

        $i15 = virtualinvoke $r12.<java.lang.String: int hashCode()>();

        goto label02;

     label01:
        $i15 = 0;

     label02:
        $i1 = 29 * $i15;

        $r2 = r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSourceType type>;

        if $r2 == null goto label03;

        $r11 = r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSourceType type>;

        $i16 = virtualinvoke $r11.<java.lang.Object: int hashCode()>();

        goto label04;

     label03:
        $i16 = 0;

     label04:
        $i14 = $i1 + $i16;

        $i2 = 29 * $i14;

        $z0 = r0.<thredds.cataloggen.config.DatasetSource: boolean flatten>;

        if $z0 == 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        $i13 = $i2 + $z2;

        $i3 = 29 * $i13;

        $r3 = r0.<thredds.cataloggen.config.DatasetSource: java.lang.String accessPoint>;

        if $r3 == null goto label07;

        $r10 = r0.<thredds.cataloggen.config.DatasetSource: java.lang.String accessPoint>;

        $i17 = virtualinvoke $r10.<java.lang.String: int hashCode()>();

        goto label08;

     label07:
        $i17 = 0;

     label08:
        $i12 = $i3 + $i17;

        $i4 = 29 * $i12;

        $z1 = r0.<thredds.cataloggen.config.DatasetSource: boolean createCatalogRefs>;

        if $z1 == 0 goto label09;

        $z3 = 1;

        goto label10;

     label09:
        $z3 = 0;

     label10:
        $i11 = $i4 + $z3;

        $i5 = 29 * $i11;

        $r4 = r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.ResultService resultService>;

        if $r4 == null goto label11;

        $r9 = r0.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.ResultService resultService>;

        $i18 = virtualinvoke $r9.<thredds.cataloggen.config.ResultService: int hashCode()>();

        goto label12;

     label11:
        $i18 = 0;

     label12:
        $i10 = $i5 + $i18;

        $i6 = 29 * $i10;

        $r5 = r0.<thredds.cataloggen.config.DatasetSource: java.util.List datasetNamerList>;

        if $r5 == null goto label13;

        $r8 = r0.<thredds.cataloggen.config.DatasetSource: java.util.List datasetNamerList>;

        $i19 = virtualinvoke $r8.<java.lang.Object: int hashCode()>();

        goto label14;

     label13:
        $i19 = 0;

     label14:
        $i9 = $i6 + $i19;

        $i7 = 29 * $i9;

        $r6 = r0.<thredds.cataloggen.config.DatasetSource: java.util.List datasetFilterList>;

        if $r6 == null goto label15;

        $r7 = r0.<thredds.cataloggen.config.DatasetSource: java.util.List datasetFilterList>;

        $i20 = virtualinvoke $r7.<java.lang.Object: int hashCode()>();

        goto label16;

     label15:
        $i20 = 0;

     label16:
        $i8 = $i7 + $i20;

        r0.<thredds.cataloggen.config.DatasetSource: int hashCode> = $i8;

     label17:
        $i21 = r0.<thredds.cataloggen.config.DatasetSource: int hashCode>;

        return $i21;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lthredds/cataloggen/config/DatasetSource;");

        <thredds.cataloggen.config.DatasetSource: org.slf4j.Logger logger> = $r0;

        return;
    }
}
