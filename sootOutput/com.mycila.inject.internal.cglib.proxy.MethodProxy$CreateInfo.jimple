class com.mycila.inject.internal.cglib.proxy.MethodProxy$CreateInfo extends java.lang.Object
{
    java.lang.Class c1;
    java.lang.Class c2;
    com.mycila.inject.internal.cglib.core.NamingPolicy namingPolicy;
    com.mycila.inject.internal.cglib.core.GeneratorStrategy strategy;
    boolean attemptLoad;

    public void <init>(java.lang.Class, java.lang.Class)
    {
        com.mycila.inject.internal.cglib.proxy.MethodProxy$CreateInfo r0;
        com.mycila.inject.internal.cglib.core.AbstractClassGenerator $r3;
        com.mycila.inject.internal.cglib.core.GeneratorStrategy $r5;
        java.lang.Class r1, r2;
        com.mycila.inject.internal.cglib.core.NamingPolicy $r4;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.MethodProxy$CreateInfo;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mycila.inject.internal.cglib.proxy.MethodProxy$CreateInfo: java.lang.Class c1> = r1;

        r0.<com.mycila.inject.internal.cglib.proxy.MethodProxy$CreateInfo: java.lang.Class c2> = r2;

        $r3 = staticinvoke <com.mycila.inject.internal.cglib.core.AbstractClassGenerator: com.mycila.inject.internal.cglib.core.AbstractClassGenerator getCurrent()>();

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r3.<com.mycila.inject.internal.cglib.core.AbstractClassGenerator: com.mycila.inject.internal.cglib.core.NamingPolicy getNamingPolicy()>();

        r0.<com.mycila.inject.internal.cglib.proxy.MethodProxy$CreateInfo: com.mycila.inject.internal.cglib.core.NamingPolicy namingPolicy> = $r4;

        $r5 = virtualinvoke $r3.<com.mycila.inject.internal.cglib.core.AbstractClassGenerator: com.mycila.inject.internal.cglib.core.GeneratorStrategy getStrategy()>();

        r0.<com.mycila.inject.internal.cglib.proxy.MethodProxy$CreateInfo: com.mycila.inject.internal.cglib.core.GeneratorStrategy strategy> = $r5;

        $z0 = virtualinvoke $r3.<com.mycila.inject.internal.cglib.core.AbstractClassGenerator: boolean getAttemptLoad()>();

        r0.<com.mycila.inject.internal.cglib.proxy.MethodProxy$CreateInfo: boolean attemptLoad> = $z0;

     label1:
        return;
    }
}
