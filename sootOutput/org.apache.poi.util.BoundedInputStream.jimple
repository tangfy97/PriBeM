public class org.apache.poi.util.BoundedInputStream extends java.io.InputStream
{
    private final java.io.InputStream in;
    private final long max;
    private long pos;
    private long mark;
    private boolean propagateClose;

    public void <init>(java.io.InputStream, long)
    {
        long l0;
        org.apache.poi.util.BoundedInputStream r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.poi.util.BoundedInputStream;

        r1 := @parameter0: java.io.InputStream;

        l0 := @parameter1: long;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<org.apache.poi.util.BoundedInputStream: long pos> = 0L;

        r0.<org.apache.poi.util.BoundedInputStream: long mark> = -1L;

        r0.<org.apache.poi.util.BoundedInputStream: boolean propagateClose> = 1;

        r0.<org.apache.poi.util.BoundedInputStream: long max> = l0;

        r0.<org.apache.poi.util.BoundedInputStream: java.io.InputStream in> = r1;

        return;
    }

    public void <init>(java.io.InputStream)
    {
        org.apache.poi.util.BoundedInputStream r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.poi.util.BoundedInputStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<org.apache.poi.util.BoundedInputStream: void <init>(java.io.InputStream,long)>(r1, -1L);

        return;
    }

    public int read() throws java.io.IOException
    {
        long $l0, $l3, $l4, $l5, $l6;
        org.apache.poi.util.BoundedInputStream r0;
        byte $b1, $b7;
        int $i2, $i8, $i10;
        java.io.InputStream $r1;

        r0 := @this: org.apache.poi.util.BoundedInputStream;

        $l0 = r0.<org.apache.poi.util.BoundedInputStream: long max>;

        $b1 = $l0 cmp 0L;

        $i8 = (int) $b1;

        if $i8 < 0 goto label1;

        $l6 = r0.<org.apache.poi.util.BoundedInputStream: long pos>;

        $l5 = r0.<org.apache.poi.util.BoundedInputStream: long max>;

        $b7 = $l6 cmp $l5;

        if $b7 != 0 goto label1;

        $i10 = (int) -1;

        return $i10;

     label1:
        $r1 = r0.<org.apache.poi.util.BoundedInputStream: java.io.InputStream in>;

        $i2 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        $l3 = r0.<org.apache.poi.util.BoundedInputStream: long pos>;

        $l4 = $l3 + 1L;

        r0.<org.apache.poi.util.BoundedInputStream: long pos> = $l4;

        return $i2;
    }

    public int read(byte[]) throws java.io.IOException
    {
        byte[] r1;
        org.apache.poi.util.BoundedInputStream r0;
        int $i0, $i1;

        r0 := @this: org.apache.poi.util.BoundedInputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        $i1 = virtualinvoke r0.<org.apache.poi.util.BoundedInputStream: int read(byte[],int,int)>(r1, 0, $i0);

        return $i1;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        long $l0, $l2, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l18;
        byte $b1, $b3, $b17;
        int i4, i5, $i6, $i7, $i19, $i20, $i22, $i23, $i25, $i27;
        org.apache.poi.util.BoundedInputStream r0;
        java.io.InputStream $r2;

        r0 := @this: org.apache.poi.util.BoundedInputStream;

        r1 := @parameter0: byte[];

        i5 := @parameter1: int;

        i4 := @parameter2: int;

        $l0 = r0.<org.apache.poi.util.BoundedInputStream: long max>;

        $b1 = $l0 cmp 0L;

        $i19 = (int) $b1;

        if $i19 < 0 goto label1;

        $l16 = r0.<org.apache.poi.util.BoundedInputStream: long pos>;

        $l15 = r0.<org.apache.poi.util.BoundedInputStream: long max>;

        $b17 = $l16 cmp $l15;

        $i20 = (int) $b17;

        if $i20 < 0 goto label1;

        $i22 = (int) -1;

        return $i22;

     label1:
        $l2 = r0.<org.apache.poi.util.BoundedInputStream: long max>;

        $b3 = $l2 cmp 0L;

        $i23 = (int) $b3;

        if $i23 < 0 goto label2;

        $l14 = (long) i4;

        $l12 = r0.<org.apache.poi.util.BoundedInputStream: long max>;

        $l11 = r0.<org.apache.poi.util.BoundedInputStream: long pos>;

        $l13 = $l12 - $l11;

        $l18 = staticinvoke <java.lang.Math: long min(long,long)>($l14, $l13);

        goto label3;

     label2:
        $l18 = (long) i4;

     label3:
        $r2 = r0.<org.apache.poi.util.BoundedInputStream: java.io.InputStream in>;

        $i6 = (int) $l18;

        $i7 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, i5, $i6);

        $i25 = (int) -1;

        if $i7 != $i25 goto label4;

        $i27 = (int) -1;

        return $i27;

     label4:
        $l9 = r0.<org.apache.poi.util.BoundedInputStream: long pos>;

        $l8 = (long) $i7;

        $l10 = $l9 + $l8;

        r0.<org.apache.poi.util.BoundedInputStream: long pos> = $l10;

        return $i7;
    }

    public long skip(long) throws java.io.IOException
    {
        long $l0, l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9;
        org.apache.poi.util.BoundedInputStream r0;
        byte $b1;
        int $i10;
        java.io.InputStream $r1;

        r0 := @this: org.apache.poi.util.BoundedInputStream;

        l2 := @parameter0: long;

        $l0 = r0.<org.apache.poi.util.BoundedInputStream: long max>;

        $b1 = $l0 cmp 0L;

        $i10 = (int) $b1;

        if $i10 < 0 goto label1;

        $l7 = r0.<org.apache.poi.util.BoundedInputStream: long max>;

        $l6 = r0.<org.apache.poi.util.BoundedInputStream: long pos>;

        $l8 = $l7 - $l6;

        $l9 = staticinvoke <java.lang.Math: long min(long,long)>(l2, $l8);

        goto label2;

     label1:
        $l9 = l2;

     label2:
        $r1 = r0.<org.apache.poi.util.BoundedInputStream: java.io.InputStream in>;

        $l3 = virtualinvoke $r1.<java.io.InputStream: long skip(long)>($l9);

        $l4 = r0.<org.apache.poi.util.BoundedInputStream: long pos>;

        $l5 = $l4 + $l3;

        r0.<org.apache.poi.util.BoundedInputStream: long pos> = $l5;

        return $l3;
    }

    public int available() throws java.io.IOException
    {
        long $l0, $l3, $l4;
        org.apache.poi.util.BoundedInputStream r0;
        byte $b1, $b5;
        int $i2, $i6, $i7;
        java.io.InputStream $r1;

        r0 := @this: org.apache.poi.util.BoundedInputStream;

        $l0 = r0.<org.apache.poi.util.BoundedInputStream: long max>;

        $b1 = $l0 cmp 0L;

        $i6 = (int) $b1;

        if $i6 < 0 goto label1;

        $l4 = r0.<org.apache.poi.util.BoundedInputStream: long pos>;

        $l3 = r0.<org.apache.poi.util.BoundedInputStream: long max>;

        $b5 = $l4 cmp $l3;

        $i7 = (int) $b5;

        if $i7 < 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<org.apache.poi.util.BoundedInputStream: java.io.InputStream in>;

        $i2 = virtualinvoke $r1.<java.io.InputStream: int available()>();

        return $i2;
    }

    public java.lang.String toString()
    {
        org.apache.poi.util.BoundedInputStream r0;
        java.lang.String $r2;
        java.io.InputStream $r1;

        r0 := @this: org.apache.poi.util.BoundedInputStream;

        $r1 = r0.<org.apache.poi.util.BoundedInputStream: java.io.InputStream in>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public void close() throws java.io.IOException
    {
        org.apache.poi.util.BoundedInputStream r0;
        boolean $z0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.poi.util.BoundedInputStream;

        $z0 = r0.<org.apache.poi.util.BoundedInputStream: boolean propagateClose>;

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.poi.util.BoundedInputStream: java.io.InputStream in>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label1:
        return;
    }

    public synchronized void reset() throws java.io.IOException
    {
        long $l0;
        org.apache.poi.util.BoundedInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.poi.util.BoundedInputStream;

        $r1 = r0.<org.apache.poi.util.BoundedInputStream: java.io.InputStream in>;

        virtualinvoke $r1.<java.io.InputStream: void reset()>();

        $l0 = r0.<org.apache.poi.util.BoundedInputStream: long mark>;

        r0.<org.apache.poi.util.BoundedInputStream: long pos> = $l0;

        return;
    }

    public synchronized void mark(int)
    {
        org.apache.poi.util.BoundedInputStream r0;
        int i0;
        long $l1;
        java.io.InputStream $r1;

        r0 := @this: org.apache.poi.util.BoundedInputStream;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.util.BoundedInputStream: java.io.InputStream in>;

        virtualinvoke $r1.<java.io.InputStream: void mark(int)>(i0);

        $l1 = r0.<org.apache.poi.util.BoundedInputStream: long pos>;

        r0.<org.apache.poi.util.BoundedInputStream: long mark> = $l1;

        return;
    }

    public boolean markSupported()
    {
        org.apache.poi.util.BoundedInputStream r0;
        java.io.InputStream $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.util.BoundedInputStream;

        $r1 = r0.<org.apache.poi.util.BoundedInputStream: java.io.InputStream in>;

        $z0 = virtualinvoke $r1.<java.io.InputStream: boolean markSupported()>();

        return $z0;
    }

    public boolean isPropagateClose()
    {
        org.apache.poi.util.BoundedInputStream r0;
        boolean $z0;

        r0 := @this: org.apache.poi.util.BoundedInputStream;

        $z0 = r0.<org.apache.poi.util.BoundedInputStream: boolean propagateClose>;

        return $z0;
    }

    public void setPropagateClose(boolean)
    {
        org.apache.poi.util.BoundedInputStream r0;
        boolean z0;

        r0 := @this: org.apache.poi.util.BoundedInputStream;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.util.BoundedInputStream: boolean propagateClose> = z0;

        return;
    }
}
