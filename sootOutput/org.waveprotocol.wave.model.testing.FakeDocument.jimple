public class org.waveprotocol.wave.model.testing.FakeDocument extends org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument
{
    private org.waveprotocol.wave.model.document.operation.DocOp consumed;

    public void <init>(org.waveprotocol.wave.model.document.operation.DocInitialization, org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema)
    {
        org.waveprotocol.wave.model.testing.FakeDocument r0;
        org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema r1;
        org.waveprotocol.wave.model.document.operation.DocInitialization r2;

        r0 := @this: org.waveprotocol.wave.model.testing.FakeDocument;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.DocInitialization;

        r1 := @parameter1: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema;

        specialinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument: void <init>(org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema,org.waveprotocol.wave.model.document.operation.DocInitialization)>(r1, r2);

        return;
    }

    public void consume(org.waveprotocol.wave.model.document.operation.DocOp) throws org.waveprotocol.wave.model.operation.OperationException
    {
        org.waveprotocol.wave.model.testing.FakeDocument r0;
        org.waveprotocol.wave.model.document.operation.DocOp r1;

        r0 := @this: org.waveprotocol.wave.model.testing.FakeDocument;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

        specialinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument: void consume(org.waveprotocol.wave.model.document.operation.DocOp)>(r1);

        r0.<org.waveprotocol.wave.model.testing.FakeDocument: org.waveprotocol.wave.model.document.operation.DocOp consumed> = r1;

        return;
    }

    public org.waveprotocol.wave.model.document.operation.DocOp getConsumed()
    {
        org.waveprotocol.wave.model.testing.FakeDocument r0;
        org.waveprotocol.wave.model.document.operation.DocOp $r1;

        r0 := @this: org.waveprotocol.wave.model.testing.FakeDocument;

        $r1 = r0.<org.waveprotocol.wave.model.testing.FakeDocument: org.waveprotocol.wave.model.document.operation.DocOp consumed>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.model.testing.FakeDocument r0;
        java.lang.String $r1;

        r0 := @this: org.waveprotocol.wave.model.testing.FakeDocument;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.testing.FakeDocument: java.lang.String toXmlString()>();

        return $r1;
    }

    public volatile void consume(org.waveprotocol.wave.model.operation.Operation) throws org.waveprotocol.wave.model.operation.OperationException
    {
        org.waveprotocol.wave.model.testing.FakeDocument r0;
        org.waveprotocol.wave.model.operation.Operation r1;
        org.waveprotocol.wave.model.document.operation.DocOp $r2;

        r0 := @this: org.waveprotocol.wave.model.testing.FakeDocument;

        r1 := @parameter0: org.waveprotocol.wave.model.operation.Operation;

        $r2 = (org.waveprotocol.wave.model.document.operation.DocOp) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.testing.FakeDocument: void consume(org.waveprotocol.wave.model.document.operation.DocOp)>($r2);

        return;
    }
}
