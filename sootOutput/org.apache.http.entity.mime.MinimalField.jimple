public class org.apache.http.entity.mime.MinimalField extends java.lang.Object
{
    private final java.lang.String name;
    private final java.lang.String value;

    void <init>(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        org.apache.http.entity.mime.MinimalField r0;

        r0 := @this: org.apache.http.entity.mime.MinimalField;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.http.entity.mime.MinimalField: java.lang.String name> = r1;

        r0.<org.apache.http.entity.mime.MinimalField: java.lang.String value> = r2;

        return;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        org.apache.http.entity.mime.MinimalField r0;

        r0 := @this: org.apache.http.entity.mime.MinimalField;

        $r1 = r0.<org.apache.http.entity.mime.MinimalField: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getBody()
    {
        java.lang.String $r1;
        org.apache.http.entity.mime.MinimalField r0;

        r0 := @this: org.apache.http.entity.mime.MinimalField;

        $r1 = r0.<org.apache.http.entity.mime.MinimalField: java.lang.String value>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0;
        java.lang.String $r2, $r3, $r4;
        org.apache.http.entity.mime.MinimalField r1;

        r1 := @this: org.apache.http.entity.mime.MinimalField;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.http.entity.mime.MinimalField: java.lang.String name>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r3 = r1.<org.apache.http.entity.mime.MinimalField: java.lang.String value>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
