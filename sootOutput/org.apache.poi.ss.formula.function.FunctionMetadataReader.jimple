final class org.apache.poi.ss.formula.function.FunctionMetadataReader extends java.lang.Object
{
    private static final java.lang.String METADATA_FILE_NAME;
    private static final java.lang.String ELLIPSIS;
    private static final java.util.regex.Pattern TAB_DELIM_PATTERN;
    private static final java.util.regex.Pattern SPACE_DELIM_PATTERN;
    private static final byte[] EMPTY_BYTE_ARRAY;
    private static final java.lang.String[] DIGIT_ENDING_FUNCTION_NAMES;
    private static final java.util.Set DIGIT_ENDING_FUNCTION_NAMES_SET;

    void <init>()
    {
        org.apache.poi.ss.formula.function.FunctionMetadataReader r0;

        r0 := @this: org.apache.poi.ss.formula.function.FunctionMetadataReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.poi.ss.formula.function.FunctionMetadataRegistry createRegistry()
    {
        org.apache.poi.ss.formula.function.FunctionDataBuilder $r17;
        int $i0, $i2, $i3;
        java.lang.String $r5, $r12;
        org.apache.poi.ss.formula.function.FunctionMetadataRegistry $r6;
        char $c1;
        java.io.IOException $r8;
        java.lang.RuntimeException $r13, $r16, $r18;
        java.io.InputStreamReader $r14;
        java.lang.Class $r0;
        java.io.BufferedReader $r15;
        java.io.UnsupportedEncodingException $r10;
        java.io.InputStream $r1;

        $r0 = class "Lorg/apache/poi/ss/formula/function/FunctionMetadataReader;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("functionMetadata.txt");

        if $r1 != null goto label01;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>("resource \'functionMetadata.txt\' not found");

        throw $r13;

     label01:
        $r15 = new java.io.BufferedReader;

        $r14 = new java.io.InputStreamReader;

        specialinvoke $r14.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r1, "UTF-8");

        specialinvoke $r15.<java.io.BufferedReader: void <init>(java.io.Reader)>($r14);

     label02:
        goto label04;

     label03:
        $r10 := @caughtexception;

        $r16 = new java.lang.RuntimeException;

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r10);

        throw $r16;

     label04:
        $r17 = new org.apache.poi.ss.formula.function.FunctionDataBuilder;

        specialinvoke $r17.<org.apache.poi.ss.formula.function.FunctionDataBuilder: void <init>(int)>(400);

     label05:
        $r12 = virtualinvoke $r15.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r12 != null goto label06;

        goto label09;

     label06:
        $i0 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i0 < 1 goto label05;

        $c1 = virtualinvoke $r12.<java.lang.String: char charAt(int)>(0);

        $i3 = (int) $c1;

        if $i3 != 35 goto label07;

        goto label05;

     label07:
        $r5 = virtualinvoke $r12.<java.lang.String: java.lang.String trim()>();

        $i2 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i2 >= 1 goto label08;

        goto label05;

     label08:
        staticinvoke <org.apache.poi.ss.formula.function.FunctionMetadataReader: void processLine(org.apache.poi.ss.formula.function.FunctionDataBuilder,java.lang.String)>($r17, $r12);

        goto label05;

     label09:
        virtualinvoke $r15.<java.io.BufferedReader: void close()>();

     label10:
        goto label12;

     label11:
        $r8 := @caughtexception;

        $r18 = new java.lang.RuntimeException;

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r8);

        throw $r18;

     label12:
        $r6 = virtualinvoke $r17.<org.apache.poi.ss.formula.function.FunctionDataBuilder: org.apache.poi.ss.formula.function.FunctionMetadataRegistry build()>();

        return $r6;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label03;
        catch java.io.IOException from label05 to label10 with label11;
    }

    private static void processLine(org.apache.poi.ss.formula.function.FunctionDataBuilder, java.lang.String)
    {
        byte[] $r9;
        org.apache.poi.ss.formula.function.FunctionDataBuilder r11;
        java.lang.String[] $r2;
        byte $b4;
        int $i0, $i1, $i2, $i3, $i5, $i7;
        java.lang.String r0, $r3, r4, $r5, $r6, $r7, $r8, $r10, $r17;
        boolean $z0;
        java.lang.RuntimeException $r19;
        java.lang.StringBuilder $r14, $r15, $r16, $r18;
        java.util.regex.Pattern $r1;

        r11 := @parameter0: org.apache.poi.ss.formula.function.FunctionDataBuilder;

        r0 := @parameter1: java.lang.String;

        $r1 = <org.apache.poi.ss.formula.function.FunctionMetadataReader: java.util.regex.Pattern TAB_DELIM_PATTERN>;

        $i7 = (int) -2;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence,int)>(r0, $i7);

        $i0 = lengthof $r2;

        if $i0 == 8 goto label1;

        $r19 = new java.lang.RuntimeException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad line format \'");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' - expected 8 data fields");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>($r17);

        throw $r19;

     label1:
        $r3 = $r2[0];

        $i1 = staticinvoke <org.apache.poi.ss.formula.function.FunctionMetadataReader: int parseInt(java.lang.String)>($r3);

        r4 = $r2[1];

        $r5 = $r2[2];

        $i2 = staticinvoke <org.apache.poi.ss.formula.function.FunctionMetadataReader: int parseInt(java.lang.String)>($r5);

        $r6 = $r2[3];

        $i3 = staticinvoke <org.apache.poi.ss.formula.function.FunctionMetadataReader: int parseInt(java.lang.String)>($r6);

        $r7 = $r2[4];

        $b4 = staticinvoke <org.apache.poi.ss.formula.function.FunctionMetadataReader: byte parseReturnTypeCode(java.lang.String)>($r7);

        $r8 = $r2[5];

        $r9 = staticinvoke <org.apache.poi.ss.formula.function.FunctionMetadataReader: byte[] parseOperandTypeCodes(java.lang.String)>($r8);

        $r10 = $r2[7];

        $i5 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i5 <= 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        staticinvoke <org.apache.poi.ss.formula.function.FunctionMetadataReader: void validateFunctionName(java.lang.String)>(r4);

        virtualinvoke r11.<org.apache.poi.ss.formula.function.FunctionDataBuilder: void add(int,java.lang.String,int,int,byte,byte[],boolean)>($i1, r4, $i2, $i3, $b4, $r9, $z0);

        return;
    }

    private static byte parseReturnTypeCode(java.lang.String)
    {
        int $i0;
        java.lang.String r0;
        byte $b1;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $b1 = staticinvoke <org.apache.poi.ss.formula.function.FunctionMetadataReader: byte parseOperandTypeCode(java.lang.String)>(r0);

        return $b1;
    }

    private static byte[] parseOperandTypeCodes(java.lang.String)
    {
        byte[] $r6, $r7, $r8;
        java.lang.String[] $r2;
        byte $b2;
        int $i0, $i1, i3, i4, $i6;
        java.lang.String r0, $r3, $r4, $r5;
        boolean $z0, $z1;
        java.util.regex.Pattern $r1;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 >= 1 goto label1;

        $r8 = <org.apache.poi.ss.formula.function.FunctionMetadataReader: byte[] EMPTY_BYTE_ARRAY>;

        return $r8;

     label1:
        $z0 = staticinvoke <org.apache.poi.ss.formula.function.FunctionMetadataReader: boolean isDash(java.lang.String)>(r0);

        if $z0 == 0 goto label2;

        $r7 = <org.apache.poi.ss.formula.function.FunctionMetadataReader: byte[] EMPTY_BYTE_ARRAY>;

        return $r7;

     label2:
        $r1 = <org.apache.poi.ss.formula.function.FunctionMetadataReader: java.util.regex.Pattern SPACE_DELIM_PATTERN>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence)>(r0);

        i3 = lengthof $r2;

        $r4 = "...";

        $i1 = i3 - 1;

        $r3 = $r2[$i1];

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $i6 = (int) -1;

        i3 = i3 + $i6;

     label3:
        $r6 = newarray (byte)[i3];

        i4 = 0;

     label4:
        if i4 >= i3 goto label5;

        $r5 = $r2[i4];

        $b2 = staticinvoke <org.apache.poi.ss.formula.function.FunctionMetadataReader: byte parseOperandTypeCode(java.lang.String)>($r5);

        $r6[i4] = $b2;

        i4 = i4 + 1;

        goto label4;

     label5:
        return $r6;
    }

    private static boolean isDash(java.lang.String)
    {
        int $i0, $i2;
        char $c1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 1 goto label2;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i2 = (int) $c1;

        lookupswitch($i2)
        {
            case 45: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    private static byte parseOperandTypeCode(java.lang.String)
    {
        int $i0, $i3, $i4;
        java.lang.String r0, $r8, $r14;
        char $c1, $c2;
        java.lang.RuntimeException $r16;
        java.lang.IllegalArgumentException $r18;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r11, $r12, $r13, $r15, $r17;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == 1 goto label1;

        $r16 = new java.lang.RuntimeException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad operand type code format \'");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' expected single char");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14);

        throw $r16;

     label1:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i3 = (int) $c1;

        lookupswitch($i3)
        {
            case 65: goto label4;
            case 82: goto label3;
            case 86: goto label2;
            default: goto label5;
        };

     label2:
        return 32;

     label3:
        return 0;

     label4:
        return 64;

     label5:
        $r18 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected operand type code \'");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' (");

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i4 = (int) $c2;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r18;
    }

    private static void validateFunctionName(java.lang.String)
    {
        int $i0, i3, $i5;
        java.lang.String r0, $r7;
        boolean $z0, $z1, $z2;
        java.util.Set $r1;
        char $c1, $c2;
        java.lang.RuntimeException $r9;
        java.lang.StringBuilder $r4, $r5, $r6, $r8;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i3 = $i0 - 1;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c1);

        if $z0 != 0 goto label1;

        return;

     label1:
        if i3 < 0 goto label3;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $z2 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c2);

        if $z2 != 0 goto label2;

        goto label3;

     label2:
        $i5 = (int) -1;

        i3 = i3 + $i5;

        goto label1;

     label3:
        $r1 = <org.apache.poi.ss.formula.function.FunctionMetadataReader: java.util.Set DIGIT_ENDING_FUNCTION_NAMES_SET>;

        $z1 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>(r0);

        if $z1 == 0 goto label4;

        return;

     label4:
        $r9 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid function name \'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' (is footnote number incorrectly appended)");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r9;
    }

    private static int parseInt(java.lang.String)
    {
        java.lang.NumberFormatException $r1;
        java.lang.RuntimeException $r2;
        int $i0;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String r0, $r7;

        r0 := @parameter0: java.lang.String;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);

     label2:
        return $i0;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Value \'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' could not be parsed as an integer");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r2;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.util.HashSet $r4;
        byte[] $r2;
        java.util.List $r6;
        java.lang.String[] $r3, $r5;
        java.util.regex.Pattern $r0, $r1;

        <org.apache.poi.ss.formula.function.FunctionMetadataReader: java.lang.String ELLIPSIS> = "...";

        <org.apache.poi.ss.formula.function.FunctionMetadataReader: java.lang.String METADATA_FILE_NAME> = "functionMetadata.txt";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\t");

        <org.apache.poi.ss.formula.function.FunctionMetadataReader: java.util.regex.Pattern TAB_DELIM_PATTERN> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" ");

        <org.apache.poi.ss.formula.function.FunctionMetadataReader: java.util.regex.Pattern SPACE_DELIM_PATTERN> = $r1;

        $r2 = newarray (byte)[0];

        <org.apache.poi.ss.formula.function.FunctionMetadataReader: byte[] EMPTY_BYTE_ARRAY> = $r2;

        $r3 = newarray (java.lang.String)[6];

        $r3[0] = "LOG10";

        $r3[1] = "ATAN2";

        $r3[2] = "DAYS360";

        $r3[3] = "SUMXMY2";

        $r3[4] = "SUMX2MY2";

        $r3[5] = "SUMX2PY2";

        <org.apache.poi.ss.formula.function.FunctionMetadataReader: java.lang.String[] DIGIT_ENDING_FUNCTION_NAMES> = $r3;

        $r4 = new java.util.HashSet;

        $r5 = <org.apache.poi.ss.formula.function.FunctionMetadataReader: java.lang.String[] DIGIT_ENDING_FUNCTION_NAMES>;

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);

        specialinvoke $r4.<java.util.HashSet: void <init>(java.util.Collection)>($r6);

        <org.apache.poi.ss.formula.function.FunctionMetadataReader: java.util.Set DIGIT_ENDING_FUNCTION_NAMES_SET> = $r4;

        return;
    }
}
