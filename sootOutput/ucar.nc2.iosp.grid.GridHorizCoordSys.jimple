public class ucar.nc2.iosp.grid.GridHorizCoordSys extends java.lang.Object
{
    private static org.slf4j.Logger log;
    java.util.Map varHash;
    java.util.Map productHash;
    private ucar.grid.GridTableLookup lookup;
    private ucar.grid.GridDefRecord gds;
    private ucar.nc2.Group g;
    private java.lang.String grid_name;
    private java.lang.String shape_name;
    private java.lang.String id;
    private boolean isLatLon;
    private boolean isGaussian;
    private double startx;
    private double starty;
    private double incrx;
    private double incry;
    private ucar.unidata.geoloc.ProjectionImpl proj;
    private java.util.List attributes;

    public void <init>(ucar.grid.GridDefRecord, ucar.grid.GridTableLookup, ucar.nc2.Group)
    {
        ucar.nc2.iosp.grid.GridHorizCoordSys r0;
        ucar.grid.GridTableLookup r5;
        java.util.HashMap $r1, $r2;
        ucar.grid.GridDefRecord r4;
        java.util.ArrayList $r3;
        int $i0;
        java.lang.String $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        boolean $z0, $z1, $z2;
        double $d0, $d1;
        ucar.nc2.Group r6;

        r0 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        r4 := @parameter0: ucar.grid.GridDefRecord;

        r5 := @parameter1: ucar.grid.GridTableLookup;

        r6 := @parameter2: ucar.nc2.Group;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>(200);

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.Map varHash> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(100);

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.Map productHash> = $r2;

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: boolean isLatLon> = 1;

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: boolean isGaussian> = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes> = $r3;

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds> = r4;

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridTableLookup lookup> = r5;

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.nc2.Group g> = r6;

        $r7 = interfaceinvoke r5.<ucar.grid.GridTableLookup: java.lang.String getGridName(ucar.grid.GridDefRecord)>(r4);

        $r8 = staticinvoke <ucar.nc2.iosp.AbstractIOServiceProvider: java.lang.String createValidNetcdfObjectName(java.lang.String)>($r7);

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.lang.String grid_name> = $r8;

        $r9 = interfaceinvoke r5.<ucar.grid.GridTableLookup: java.lang.String getShapeName(ucar.grid.GridDefRecord)>(r4);

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.lang.String shape_name> = $r9;

        $z0 = interfaceinvoke r5.<ucar.grid.GridTableLookup: boolean isLatLon(ucar.grid.GridDefRecord)>(r4);

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: boolean isLatLon> = $z0;

        $r10 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.lang.String grid_name>;

        $r11 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,char,java.lang.String)>($r10, 32, "_");

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.lang.String grid_name> = $r11;

        if r6 != null goto label1;

        $r13 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.lang.String grid_name>;

        goto label2;

     label1:
        $r13 = virtualinvoke r6.<ucar.nc2.Group: java.lang.String getName()>();

     label2:
        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.lang.String id> = $r13;

        $z1 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: boolean isLatLon>;

        if $z1 == 0 goto label5;

        $i0 = interfaceinvoke r5.<ucar.grid.GridTableLookup: int getProjectionType(ucar.grid.GridDefRecord)>(r4);

        if $i0 != 8 goto label5;

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: boolean isGaussian> = 1;

        $d0 = virtualinvoke r4.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Np");

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z2 == 0 goto label3;

        $d1 = 90.0;

        goto label4;

     label3:
        $d1 = $d0;

     label4:
        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d1);

        virtualinvoke r4.<ucar.grid.GridDefRecord: void addParam(java.lang.String,java.lang.String)>("Dy", $r12);

     label5:
        return;
    }

    public java.lang.String getID()
    {
        ucar.nc2.iosp.grid.GridHorizCoordSys r0;
        java.lang.String $r1;

        r0 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        $r1 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.lang.String id>;

        return $r1;
    }

    public java.lang.String getGridName()
    {
        ucar.nc2.iosp.grid.GridHorizCoordSys r0;
        java.lang.String $r1;

        r0 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        $r1 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.lang.String grid_name>;

        return $r1;
    }

    public ucar.nc2.Group getGroup()
    {
        ucar.nc2.iosp.grid.GridHorizCoordSys r0;
        ucar.nc2.Group $r1;

        r0 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        $r1 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.nc2.Group g>;

        return $r1;
    }

    public boolean isLatLon()
    {
        ucar.nc2.iosp.grid.GridHorizCoordSys r0;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        $z0 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: boolean isLatLon>;

        return $z0;
    }

    public int getNx()
    {
        int $i0;
        ucar.nc2.iosp.grid.GridHorizCoordSys r0;
        ucar.grid.GridDefRecord $r1;

        r0 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        $r1 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $i0 = virtualinvoke $r1.<ucar.grid.GridDefRecord: int getInt(java.lang.String)>("Nx");

        return $i0;
    }

    public int getNy()
    {
        int $i0;
        ucar.nc2.iosp.grid.GridHorizCoordSys r0;
        ucar.grid.GridDefRecord $r1;

        r0 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        $r1 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $i0 = virtualinvoke $r1.<ucar.grid.GridDefRecord: int getInt(java.lang.String)>("Ny");

        return $i0;
    }

    public double getDxInKm()
    {
        ucar.nc2.iosp.grid.GridHorizCoordSys r0;
        double $d0;

        r0 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        $d0 = specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double getGridSpacingInKm(java.lang.String)>("Dx");

        return $d0;
    }

    public double getDyInKm()
    {
        ucar.nc2.iosp.grid.GridHorizCoordSys r0;
        double $d0;

        r0 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        $d0 = specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double getGridSpacingInKm(java.lang.String)>("Dy");

        return $d0;
    }

    private double getGridSpacingInKm(java.lang.String)
    {
        ucar.nc2.iosp.grid.GridHorizCoordSys r0;
        ucar.grid.GridDefRecord $r2, $r3;
        ucar.nc2.units.SimpleUnit $r6, r7;
        int $i0;
        java.lang.String r1, $r4, $r5;
        double $d0, d1;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d0 = virtualinvoke $r2.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>(r1);

        d1 = $d0;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 == 0 goto label1;

        return $d0;

     label1:
        $r3 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $r4 = virtualinvoke $r3.<ucar.grid.GridDefRecord: java.lang.String getParam(java.lang.String)>("grid_units");

        if $r4 == null goto label2;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

     label2:
        r7 = <ucar.nc2.units.SimpleUnit: ucar.nc2.units.SimpleUnit meterUnit>;

        goto label4;

     label3:
        r7 = staticinvoke <ucar.nc2.units.SimpleUnit: ucar.nc2.units.SimpleUnit factory(java.lang.String)>($r4);

     label4:
        if r7 == null goto label5;

        $r5 = virtualinvoke r7.<ucar.nc2.units.SimpleUnit: java.lang.String getUnitString()>();

        $z1 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>($r5, "km");

        if $z1 == 0 goto label5;

        $r6 = <ucar.nc2.units.SimpleUnit: ucar.nc2.units.SimpleUnit kmUnit>;

        d1 = virtualinvoke r7.<ucar.nc2.units.SimpleUnit: double convertTo(double,ucar.nc2.units.SimpleUnit)>($d0, $r6);

     label5:
        return d1;
    }

    void addDimensionsToNetcdfFile(ucar.nc2.NetcdfFile)
    {
        ucar.nc2.iosp.grid.GridHorizCoordSys r0;
        ucar.grid.GridDefRecord $r3, $r6, $r9, $r12;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        ucar.nc2.Group $r4, $r7, $r10, $r13;
        ucar.nc2.Dimension $r2, $r5, $r8, $r11;
        ucar.nc2.NetcdfFile r1;

        r0 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        r1 := @parameter0: ucar.nc2.NetcdfFile;

        $z0 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: boolean isLatLon>;

        if $z0 == 0 goto label1;

        $r10 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.nc2.Group g>;

        $r8 = new ucar.nc2.Dimension;

        $r9 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $i2 = virtualinvoke $r9.<ucar.grid.GridDefRecord: int getInt(java.lang.String)>("Ny");

        specialinvoke $r8.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean)>("lat", $i2, 1);

        virtualinvoke r1.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>($r10, $r8);

        $r13 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.nc2.Group g>;

        $r11 = new ucar.nc2.Dimension;

        $r12 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $i3 = virtualinvoke $r12.<ucar.grid.GridDefRecord: int getInt(java.lang.String)>("Nx");

        specialinvoke $r11.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean)>("lon", $i3, 1);

        virtualinvoke r1.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>($r13, $r11);

        goto label2;

     label1:
        $r4 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.nc2.Group g>;

        $r2 = new ucar.nc2.Dimension;

        $r3 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $i0 = virtualinvoke $r3.<ucar.grid.GridDefRecord: int getInt(java.lang.String)>("Ny");

        specialinvoke $r2.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean)>("y", $i0, 1);

        virtualinvoke r1.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>($r4, $r2);

        $r7 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.nc2.Group g>;

        $r5 = new ucar.nc2.Dimension;

        $r6 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $i1 = virtualinvoke $r6.<ucar.grid.GridDefRecord: int getInt(java.lang.String)>("Nx");

        specialinvoke $r5.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean)>("x", $i1, 1);

        virtualinvoke r1.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>($r7, $r5);

     label2:
        return;
    }

    void addToNetcdfFile(ucar.nc2.NetcdfFile)
    {
        byte $b5, $b8, $b9;
        ucar.nc2.constants.AxisType $r5, $r7, $r9, $r11, $r17, $r21, $r29, $r33, $r34;
        ucar.nc2.iosp.grid.GridHorizCoordSys r0;
        double[] r36, r37;
        ucar.grid.GridDefRecord $r1, $r4, $r6, $r8, $r10, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r30, $r31, $r32, $r35;
        boolean $z0, $z1, $z2, $z3;
        ucar.nc2.NetcdfFile r3;
        ucar.grid.GridTableLookup $r2;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i10, $i11, $i12, $i13;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, d21, $d22, $d23;

        r0 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        r3 := @parameter0: ucar.nc2.NetcdfFile;

        $z0 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: boolean isLatLon>;

        if $z0 == 0 goto label07;

        $r23 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d14 = virtualinvoke $r23.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Dy");

        $b8 = $d14 cmpl -9999.0;

        if $b8 != 0 goto label01;

        d21 = specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double setLatLonDxDy()>();

        goto label04;

     label01:
        $r24 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d15 = virtualinvoke $r24.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("La2");

        $r25 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d16 = virtualinvoke $r25.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("La1");

        $b9 = $d15 cmpg $d16;

        $i12 = (int) $b9;

        if $i12 >= 0 goto label02;

        $r35 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d20 = virtualinvoke $r35.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Dy");

        $d22 = neg $d20;

        goto label03;

     label02:
        $r26 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d22 = virtualinvoke $r26.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Dy");

     label03:
        d21 = $d22;

     label04:
        $z2 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: boolean isGaussian>;

        if $z2 == 0 goto label05;

        $r34 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double[] addGaussianLatAxis(ucar.nc2.NetcdfFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,ucar.nc2.constants.AxisType)>(r3, "lat", "degrees_north", "latitude coordinate", "latitude", $r34);

        goto label06;

     label05:
        $r27 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $i10 = virtualinvoke $r27.<ucar.grid.GridDefRecord: int getInt(java.lang.String)>("Ny");

        $r28 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d17 = virtualinvoke $r28.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("La1");

        $r29 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double[] addCoordAxis(ucar.nc2.NetcdfFile,java.lang.String,int,double,double,java.lang.String,java.lang.String,java.lang.String,ucar.nc2.constants.AxisType)>(r3, "lat", $i10, $d17, d21, "degrees_north", "latitude coordinate", "latitude", $r29);

     label06:
        $r30 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $i11 = virtualinvoke $r30.<ucar.grid.GridDefRecord: int getInt(java.lang.String)>("Nx");

        $r31 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d18 = virtualinvoke $r31.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Lo1");

        $r32 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d19 = virtualinvoke $r32.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Dx");

        $r33 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double[] addCoordAxis(ucar.nc2.NetcdfFile,java.lang.String,int,double,double,java.lang.String,java.lang.String,java.lang.String,ucar.nc2.constants.AxisType)>(r3, "lon", $i11, $d18, $d19, "degrees_east", "longitude coordinate", "longitude", $r33);

        specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: void addCoordSystemVariable(ucar.nc2.NetcdfFile,java.lang.String,java.lang.String)>(r3, "latLonCoordSys", "time lat lon");

        goto label14;

     label07:
        $r2 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridTableLookup lookup>;

        $r1 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $i0 = interfaceinvoke $r2.<ucar.grid.GridTableLookup: int getProjectionType(ucar.grid.GridDefRecord)>($r1);

        $z1 = specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: boolean makeProjection(ucar.nc2.NetcdfFile,int)>(r3, $i0);

        if $z1 == 0 goto label14;

        if $i0 != 10 goto label10;

        $r12 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d8 = virtualinvoke $r12.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("La2");

        $r13 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d9 = virtualinvoke $r13.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("La1");

        $b5 = $d8 cmpg $d9;

        $i13 = (int) $b5;

        if $i13 >= 0 goto label08;

        $r22 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d13 = virtualinvoke $r22.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Dy");

        $d23 = neg $d13;

        goto label09;

     label08:
        $r14 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d23 = virtualinvoke $r14.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Dy");

     label09:
        $r15 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $i6 = virtualinvoke $r15.<ucar.grid.GridDefRecord: int getInt(java.lang.String)>("Ny");

        $r16 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d10 = virtualinvoke $r16.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("La1");

        $r17 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoY>;

        r36 = specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double[] addCoordAxis(ucar.nc2.NetcdfFile,java.lang.String,int,double,double,java.lang.String,java.lang.String,java.lang.String,ucar.nc2.constants.AxisType)>(r3, "y", $i6, $d10, $d23, "degrees", "y coordinate of projection", "projection_y_coordinate", $r17);

        $r18 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $i7 = virtualinvoke $r18.<ucar.grid.GridDefRecord: int getInt(java.lang.String)>("Nx");

        $r19 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d11 = virtualinvoke $r19.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Lo1");

        $r20 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d12 = virtualinvoke $r20.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Dx");

        $r21 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoX>;

        r37 = specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double[] addCoordAxis(ucar.nc2.NetcdfFile,java.lang.String,int,double,double,java.lang.String,java.lang.String,java.lang.String,ucar.nc2.constants.AxisType)>(r3, "x", $i7, $d11, $d12, "degrees", "x coordinate of projection", "projection_x_coordinate", $r21);

        goto label13;

     label10:
        if $i0 != 7 goto label11;

        $r8 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $i3 = virtualinvoke $r8.<ucar.grid.GridDefRecord: int getInt(java.lang.String)>("Ny");

        $d5 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double starty>;

        $d4 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double incry>;

        $r9 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoY>;

        r36 = specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double[] addCoordAxis(ucar.nc2.NetcdfFile,java.lang.String,int,double,double,java.lang.String,java.lang.String,java.lang.String,ucar.nc2.constants.AxisType)>(r3, "y", $i3, $d5, $d4, "km", "y coordinate of projection", "projection_y_coordinate", $r9);

        $r10 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $i4 = virtualinvoke $r10.<ucar.grid.GridDefRecord: int getInt(java.lang.String)>("Nx");

        $d7 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double startx>;

        $d6 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double incrx>;

        $r11 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoX>;

        r37 = specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double[] addCoordAxis(ucar.nc2.NetcdfFile,java.lang.String,int,double,double,java.lang.String,java.lang.String,java.lang.String,ucar.nc2.constants.AxisType)>(r3, "x", $i4, $d7, $d6, "km", "x coordinate of projection", "projection_x_coordinate", $r11);

        goto label13;

     label11:
        if $i0 != 100 goto label12;

        r36 = null;

        r37 = null;

        goto label13;

     label12:
        $r4 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $i1 = virtualinvoke $r4.<ucar.grid.GridDefRecord: int getInt(java.lang.String)>("Ny");

        $d0 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double starty>;

        $d1 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double getDyInKm()>();

        $r5 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoY>;

        r36 = specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double[] addCoordAxis(ucar.nc2.NetcdfFile,java.lang.String,int,double,double,java.lang.String,java.lang.String,java.lang.String,ucar.nc2.constants.AxisType)>(r3, "y", $i1, $d0, $d1, "km", "y coordinate of projection", "projection_y_coordinate", $r5);

        $r6 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $i2 = virtualinvoke $r6.<ucar.grid.GridDefRecord: int getInt(java.lang.String)>("Nx");

        $d2 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double startx>;

        $d3 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double getDxInKm()>();

        $r7 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoX>;

        r37 = specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double[] addCoordAxis(ucar.nc2.NetcdfFile,java.lang.String,int,double,double,java.lang.String,java.lang.String,java.lang.String,ucar.nc2.constants.AxisType)>(r3, "x", $i2, $d2, $d3, "km", "x coordinate of projection", "projection_x_coordinate", $r7);

     label13:
        $z3 = <ucar.nc2.iosp.grid.GridServiceProvider: boolean addLatLon>;

        if $z3 == 0 goto label14;

        if $i0 == 100 goto label14;

        specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: void addLatLon2D(ucar.nc2.NetcdfFile,double[],double[])>(r3, r37, r36);

     label14:
        return;
    }

    void empty()
    {
        ucar.nc2.iosp.grid.GridHorizCoordSys r0;

        r0 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds> = null;

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.Map varHash> = null;

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.Map productHash> = null;

        return;
    }

    private double[] addCoordAxis(ucar.nc2.NetcdfFile, java.lang.String, int, double, double, java.lang.String, java.lang.String, java.lang.String, ucar.nc2.constants.AxisType)
    {
        int[] $r7;
        ucar.nc2.constants.AxisType r23;
        ucar.ma2.DataType $r5, $r8;
        ucar.nc2.Group $r4, $r25;
        ucar.nc2.Attribute $r10, $r12, $r14, $r16, $r22;
        java.lang.StringBuilder $r17, $r18, $r19, $r20;
        ucar.nc2.NetcdfFile r1;
        ucar.nc2.iosp.grid.GridHorizCoordSys r2;
        double[] r6;
        int i0, i1;
        ucar.nc2.Variable $r0;
        java.lang.String r3, r11, r13, r15, $r21, $r24;
        double d0, d1, $d2, $d3, $d4;
        ucar.ma2.Array $r9;

        r2 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        r1 := @parameter0: ucar.nc2.NetcdfFile;

        r3 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        d1 := @parameter3: double;

        d0 := @parameter4: double;

        r11 := @parameter5: java.lang.String;

        r13 := @parameter6: java.lang.String;

        r15 := @parameter7: java.lang.String;

        r23 := @parameter8: ucar.nc2.constants.AxisType;

        $r0 = new ucar.nc2.Variable;

        $r4 = r2.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.nc2.Group g>;

        specialinvoke $r0.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r1, $r4, null, r3);

        $r5 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        virtualinvoke $r0.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r5);

        virtualinvoke $r0.<ucar.nc2.Variable: void setDimensions(java.lang.String)>(r3);

        r6 = newarray (double)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $d2 = (double) i1;

        $d3 = d0 * $d2;

        $d4 = d1 + $d3;

        r6[i1] = $d4;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r8 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r7 = newarray (int)[1];

        $r7[0] = i0;

        $r9 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r8, $r7, r6);

        virtualinvoke $r0.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r9, 0);

        $r10 = new ucar.nc2.Attribute;

        specialinvoke $r10.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", r11);

        virtualinvoke $r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r10);

        $r12 = new ucar.nc2.Attribute;

        specialinvoke $r12.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", r13);

        virtualinvoke $r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r12);

        $r14 = new ucar.nc2.Attribute;

        specialinvoke $r14.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", r15);

        virtualinvoke $r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r14);

        $r16 = new ucar.nc2.Attribute;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("grid_spacing", $r21);

        virtualinvoke $r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r16);

        $r22 = new ucar.nc2.Attribute;

        $r24 = virtualinvoke r23.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r22.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r24);

        virtualinvoke $r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r22);

        $r25 = r2.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.nc2.Group g>;

        virtualinvoke r1.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>($r25, $r0);

        return r6;
    }

    private double[] addGaussianLatAxis(ucar.nc2.NetcdfFile, java.lang.String, java.lang.String, java.lang.String, java.lang.String, ucar.nc2.constants.AxisType)
    {
        byte $b4, $b5;
        ucar.nc2.constants.AxisType r22;
        ucar.nc2.Group $r9, $r24, $r26, $r32;
        ucar.nc2.Attribute $r48, $r49, $r50, $r51, $r52, $r54;
        ucar.nc2.iosp.grid.GridHorizCoordSys r0;
        double[] $r33, $r34, $r35, $r36, $r39, $r40;
        ucar.grid.GridDefRecord $r1, $r2, $r3, $r5, $r42;
        java.lang.String r8, r15, r17, r19, $r23;
        ucar.ma2.Array $r13, $r31;
        ucar.unidata.util.GaussianLatitudes r43, $r45, $r46;
        int[] $r11, $r29;
        boolean $z0, $z1, $z2, z3;
        ucar.ma2.DataType $r10, $r12, $r27, $r30;
        ucar.nc2.NetcdfFile r7;
        int $i0, $i1, $i2, $i3, i6, i7, i8, i9, i10, i11, $i12, $i13, $i15;
        ucar.nc2.Variable $r47, $r53;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, d12, d13, d14;
        org.slf4j.Logger $r37;
        java.lang.IllegalArgumentException $r44;

        r0 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        r7 := @parameter0: ucar.nc2.NetcdfFile;

        r8 := @parameter1: java.lang.String;

        r15 := @parameter2: java.lang.String;

        r17 := @parameter3: java.lang.String;

        r19 := @parameter4: java.lang.String;

        r22 := @parameter5: ucar.nc2.constants.AxisType;

        $r1 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d0 = virtualinvoke $r1.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("NumberParallels");

        d12 = $d0;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 == 0 goto label01;

        $r42 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        d12 = virtualinvoke $r42.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Np");

     label01:
        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d12);

        if $z1 == 0 goto label02;

        $r44 = new java.lang.IllegalArgumentException;

        specialinvoke $r44.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Gaussian Lat/Lon grid must have \'NumberParallels\' or \'Np\' (number of parallels) parameter");

        throw $r44;

     label02:
        $r2 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d1 = virtualinvoke $r2.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("La1");

        $r3 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d2 = virtualinvoke $r3.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("La2");

        $d3 = 2.0 * d12;

        i6 = (int) $d3;

        $r45 = new ucar.unidata.util.GaussianLatitudes;

        specialinvoke $r45.<ucar.unidata.util.GaussianLatitudes: void <init>(int)>(i6);

        r43 = $r45;

        i7 = 0;

        i8 = 0;

        d13 = 1.7976931348623157E308;

        d14 = 1.7976931348623157E308;

        i9 = 0;

     label03:
        if i9 >= i6 goto label06;

        $r39 = $r45.<ucar.unidata.util.GaussianLatitudes: double[] latd>;

        $d6 = $r39[i9];

        $d7 = $d6 - $d1;

        $d8 = staticinvoke <java.lang.Math: double abs(double)>($d7);

        $b4 = $d8 cmpg d13;

        $i12 = (int) $b4;

        if $i12 >= 0 goto label04;

        d13 = $d8;

        i7 = i9;

     label04:
        $r40 = $r45.<ucar.unidata.util.GaussianLatitudes: double[] latd>;

        $d9 = $r40[i9];

        $d10 = $d9 - $d2;

        $d11 = staticinvoke <java.lang.Math: double abs(double)>($d10);

        $b5 = $d11 cmpg d14;

        $i13 = (int) $b5;

        if $i13 >= 0 goto label05;

        d14 = $d11;

        i8 = i9;

     label05:
        i9 = i9 + 1;

        goto label03;

     label06:
        $r5 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $i0 = virtualinvoke $r5.<ucar.grid.GridDefRecord: int getInt(java.lang.String)>("Ny");

        $i1 = i8 - i7;

        $i2 = $i1 + 1;

        $i3 = staticinvoke <java.lang.Math: int abs(int)>($i2);

        if $i3 == $i0 goto label07;

        $r37 = <ucar.nc2.iosp.grid.GridHorizCoordSys: org.slf4j.Logger log>;

        interfaceinvoke $r37.<org.slf4j.Logger: void warn(java.lang.String)>("GRIB gaussian lats: NP != NY, use NY");

        $r46 = new ucar.unidata.util.GaussianLatitudes;

        specialinvoke $r46.<ucar.unidata.util.GaussianLatitudes: void <init>(int)>($i0);

        r43 = $r46;

        i7 = 0;

        i8 = $i0 - 1;

     label07:
        if i8 <= i7 goto label08;

        $z2 = 1;

        goto label09;

     label08:
        $z2 = 0;

     label09:
        z3 = $z2;

        $r47 = new ucar.nc2.Variable;

        $r9 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.nc2.Group g>;

        specialinvoke $r47.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r7, $r9, null, r8);

        $r10 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        virtualinvoke $r47.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r10);

        virtualinvoke $r47.<ucar.nc2.Variable: void setDimensions(java.lang.String)>(r8);

        i10 = i7;

        $r35 = newarray (double)[$i0];

        $r36 = newarray (double)[$i0];

        i11 = 0;

     label10:
        if i11 >= $i0 goto label13;

        $r33 = r43.<ucar.unidata.util.GaussianLatitudes: double[] latd>;

        $d4 = $r33[i10];

        $r35[i11] = $d4;

        $r34 = r43.<ucar.unidata.util.GaussianLatitudes: double[] gaussw>;

        $d5 = $r34[i10];

        $r36[i11] = $d5;

        if z3 == 0 goto label11;

        i10 = i10 + 1;

        goto label12;

     label11:
        $i15 = (int) -1;

        i10 = i10 + $i15;

     label12:
        i11 = i11 + 1;

        goto label10;

     label13:
        $r12 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r11 = newarray (int)[1];

        $r11[0] = $i0;

        $r13 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r12, $r11, $r35);

        virtualinvoke $r47.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r13, 0);

        $r48 = new ucar.nc2.Attribute;

        specialinvoke $r48.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", r15);

        virtualinvoke $r47.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r48);

        $r49 = new ucar.nc2.Attribute;

        specialinvoke $r49.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", r17);

        virtualinvoke $r47.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r49);

        $r50 = new ucar.nc2.Attribute;

        specialinvoke $r50.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", r19);

        virtualinvoke $r47.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r50);

        $r51 = new ucar.nc2.Attribute;

        specialinvoke $r51.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("weights", "gaussw");

        virtualinvoke $r47.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r51);

        $r52 = new ucar.nc2.Attribute;

        $r23 = virtualinvoke r22.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r52.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r23);

        virtualinvoke $r47.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r52);

        $r24 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.nc2.Group g>;

        virtualinvoke r7.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>($r24, $r47);

        $r53 = new ucar.nc2.Variable;

        $r26 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.nc2.Group g>;

        specialinvoke $r53.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r7, $r26, null, "gaussw");

        $r27 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        virtualinvoke $r53.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r27);

        virtualinvoke $r53.<ucar.nc2.Variable: void setDimensions(java.lang.String)>(r8);

        $r54 = new ucar.nc2.Attribute;

        specialinvoke $r54.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "gaussian weights (unnormalized)");

        virtualinvoke $r53.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r54);

        $r30 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r29 = newarray (int)[1];

        $r29[0] = $i0;

        $r31 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r30, $r29, $r36);

        virtualinvoke $r53.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r31, 0);

        $r32 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.nc2.Group g>;

        virtualinvoke r7.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>($r32, $r53);

        return $r35;
    }

    private void addLatLon2D(ucar.nc2.NetcdfFile, double[], double[])
    {
        ucar.unidata.geoloc.ProjectionImpl $r34;
        int[] $r26, $r29;
        ucar.nc2.constants.AxisType $r9, $r18;
        ucar.unidata.geoloc.ProjectionPointImpl $r22;
        ucar.ma2.DataType $r4, $r13, $r27, $r30;
        ucar.nc2.Group $r3, $r12, $r32, $r33;
        ucar.nc2.Attribute $r5, $r6, $r7, $r8, $r14, $r15, $r16, $r17;
        ucar.nc2.NetcdfFile r1;
        ucar.nc2.iosp.grid.GridHorizCoordSys r2;
        double[] r20, r21, r24, r25;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        ucar.nc2.Variable $r0, $r11;
        java.lang.String $r10, $r19;
        double $d0, $d1, $d2, $d3;
        ucar.ma2.Array $r28, $r31;
        ucar.unidata.geoloc.LatLonPointImpl $r23;

        r2 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        r1 := @parameter0: ucar.nc2.NetcdfFile;

        r20 := @parameter1: double[];

        r21 := @parameter2: double[];

        $r0 = new ucar.nc2.Variable;

        $r3 = r2.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.nc2.Group g>;

        specialinvoke $r0.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r1, $r3, null, "lat");

        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        virtualinvoke $r0.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r4);

        virtualinvoke $r0.<ucar.nc2.Variable: void setDimensions(java.lang.String)>("y x");

        $r5 = new ucar.nc2.Attribute;

        specialinvoke $r5.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_north");

        virtualinvoke $r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r5);

        $r6 = new ucar.nc2.Attribute;

        specialinvoke $r6.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "latitude coordinate");

        virtualinvoke $r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r6);

        $r7 = new ucar.nc2.Attribute;

        specialinvoke $r7.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "latitude");

        virtualinvoke $r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r7);

        $r8 = new ucar.nc2.Attribute;

        $r9 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r10 = virtualinvoke $r9.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r8.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r10);

        virtualinvoke $r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r8);

        $r11 = new ucar.nc2.Variable;

        $r12 = r2.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.nc2.Group g>;

        specialinvoke $r11.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r1, $r12, null, "lon");

        $r13 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        virtualinvoke $r11.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r13);

        virtualinvoke $r11.<ucar.nc2.Variable: void setDimensions(java.lang.String)>("y x");

        $r14 = new ucar.nc2.Attribute;

        specialinvoke $r14.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_east");

        virtualinvoke $r11.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r14);

        $r15 = new ucar.nc2.Attribute;

        specialinvoke $r15.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "longitude coordinate");

        virtualinvoke $r11.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r15);

        $r16 = new ucar.nc2.Attribute;

        specialinvoke $r16.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "longitude");

        virtualinvoke $r11.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r16);

        $r17 = new ucar.nc2.Attribute;

        $r18 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r19 = virtualinvoke $r18.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r17.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r19);

        virtualinvoke $r11.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r17);

        i0 = lengthof r20;

        i1 = lengthof r21;

        $r22 = new ucar.unidata.geoloc.ProjectionPointImpl;

        specialinvoke $r22.<ucar.unidata.geoloc.ProjectionPointImpl: void <init>()>();

        $r23 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r23.<ucar.unidata.geoloc.LatLonPointImpl: void <init>()>();

        $i2 = i0 * i1;

        r24 = newarray (double)[$i2];

        $i3 = i0 * i1;

        r25 = newarray (double)[$i3];

        i8 = 0;

     label1:
        if i8 >= i1 goto label4;

        i9 = 0;

     label2:
        if i9 >= i0 goto label3;

        $d1 = r20[i9];

        $d0 = r21[i8];

        virtualinvoke $r22.<ucar.unidata.geoloc.ProjectionPointImpl: void setLocation(double,double)>($d1, $d0);

        $r34 = r2.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.unidata.geoloc.ProjectionImpl proj>;

        virtualinvoke $r34.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint,ucar.unidata.geoloc.LatLonPointImpl)>($r22, $r23);

        $i4 = i8 * i0;

        $i5 = $i4 + i9;

        $d2 = virtualinvoke $r23.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        r24[$i5] = $d2;

        $i6 = i8 * i0;

        $i7 = $i6 + i9;

        $d3 = virtualinvoke $r23.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        r25[$i7] = $d3;

        i9 = i9 + 1;

        goto label2;

     label3:
        i8 = i8 + 1;

        goto label1;

     label4:
        $r27 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r26 = newarray (int)[2];

        $r26[0] = i1;

        $r26[1] = i0;

        $r28 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r27, $r26, r24);

        virtualinvoke $r0.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r28, 0);

        $r30 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r29 = newarray (int)[2];

        $r29[0] = i1;

        $r29[1] = i0;

        $r31 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r30, $r29, r25);

        virtualinvoke $r11.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r31, 0);

        $r32 = r2.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.nc2.Group g>;

        virtualinvoke r1.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>($r32, $r0);

        $r33 = r2.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.nc2.Group g>;

        virtualinvoke r1.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>($r33, $r11);

        return;
    }

    private boolean makeProjection(ucar.nc2.NetcdfFile, int)
    {
        int[] $r30;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        ucar.ma2.DataType $r27, $r29;
        ucar.nc2.Group $r25, $r34;
        java.util.List $r32;
        ucar.nc2.Attribute $r2, $r7, $r9, $r13, r17;
        java.lang.StringBuilder $r19, $r20, $r22;
        ucar.nc2.NetcdfFile r1;
        ucar.nc2.iosp.grid.GridHorizCoordSys r0;
        java.lang.Double $r8, $r10, $r14;
        ucar.grid.GridDefRecord $r4, $r5, $r6, $r11, $r12, $r15, $r21;
        int i0, $i1;
        ucar.nc2.Variable $r24;
        java.lang.String $r3, $r23, $r26;
        double $d0, $d1, $d2, d3, d4, d5;
        java.lang.UnsupportedOperationException $r18;
        java.util.Iterator $r33;
        ucar.ma2.Array $r31;
        char[] $r28;
        java.lang.Object $r16;

        r0 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        r1 := @parameter0: ucar.nc2.NetcdfFile;

        i0 := @parameter1: int;

        lookupswitch(i0)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 7: goto label05;
            case 10: goto label01;
            case 100: goto label06;
            default: goto label07;
        };

     label01:
        specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: void makeRotatedLatLon(ucar.nc2.NetcdfFile)>(r1);

        goto label08;

     label02:
        specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: void makePS()>();

        goto label08;

     label03:
        specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: void makeLC()>();

        goto label08;

     label04:
        specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: void makeMercator()>();

        goto label08;

     label05:
        specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: void makeMSGgeostationary()>();

        goto label08;

     label06:
        specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: void makeCurvilinearAxis(ucar.nc2.NetcdfFile)>(r1);

        goto label08;

     label07:
        $r18 = new java.lang.UnsupportedOperationException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown projection = ");

        $r21 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $i1 = virtualinvoke $r21.<ucar.grid.GridDefRecord: int getInt(java.lang.String)>("grid_type");

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r23);

        throw $r18;

     label08:
        $r24 = new ucar.nc2.Variable;

        $r25 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.nc2.Group g>;

        $r26 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.lang.String grid_name>;

        specialinvoke $r24.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r1, $r25, null, $r26);

        $r27 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        virtualinvoke $r24.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r27);

        virtualinvoke $r24.<ucar.nc2.Variable: void setDimensions(java.lang.String)>("");

        $r28 = newarray (char)[1];

        $r28[0] = 100;

        $r29 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        $r30 = newarray (int)[0];

        $r31 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r29, $r30, $r28);

        virtualinvoke $r24.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r31, 0);

        $r32 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r33 = interfaceinvoke $r32.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z6 = interfaceinvoke $r33.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label10;

        $r16 = interfaceinvoke $r33.<java.util.Iterator: java.lang.Object next()>();

        r17 = (ucar.nc2.Attribute) $r16;

        virtualinvoke $r24.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>(r17);

        goto label09;

     label10:
        $r2 = new ucar.nc2.Attribute;

        $r3 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.lang.String shape_name>;

        specialinvoke $r2.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("earth_shape", $r3);

        virtualinvoke $r24.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r2);

        $r4 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d0 = virtualinvoke $r4.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("grid_radius_spherical_earth");

        d3 = $d0;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 == 0 goto label11;

        $r15 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        d3 = virtualinvoke $r15.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("radius_spherical_earth");

     label11:
        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d3);

        if $z1 != 0 goto label12;

        $r13 = new ucar.nc2.Attribute;

        $r14 = new java.lang.Double;

        specialinvoke $r14.<java.lang.Double: void <init>(double)>(d3);

        specialinvoke $r13.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("earth_radius", $r14);

        virtualinvoke $r24.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r13);

        goto label15;

     label12:
        $r5 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d1 = virtualinvoke $r5.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("grid_major_axis_earth");

        d4 = $d1;

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        if $z2 == 0 goto label13;

        $r12 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        d4 = virtualinvoke $r12.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("major_axis_earth");

     label13:
        $r6 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d2 = virtualinvoke $r6.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("grid_minor_axis_earth");

        d5 = $d2;

        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        if $z3 == 0 goto label14;

        $r11 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        d5 = virtualinvoke $r11.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("minor_axis_earth");

     label14:
        $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4);

        if $z4 != 0 goto label15;

        $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5);

        if $z5 != 0 goto label15;

        $r7 = new ucar.nc2.Attribute;

        $r8 = new java.lang.Double;

        specialinvoke $r8.<java.lang.Double: void <init>(double)>(d4);

        specialinvoke $r7.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("semi_major_axis", $r8);

        virtualinvoke $r24.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r7);

        $r9 = new ucar.nc2.Attribute;

        $r10 = new java.lang.Double;

        specialinvoke $r10.<java.lang.Double: void <init>(double)>(d5);

        specialinvoke $r9.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("semi_minor_axis", $r10);

        virtualinvoke $r24.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r9);

     label15:
        specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: void addGDSparams(ucar.nc2.Variable)>($r24);

        $r34 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.nc2.Group g>;

        virtualinvoke r1.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>($r34, $r24);

        return 1;
    }

    private void addGDSparams(ucar.nc2.Variable)
    {
        java.lang.Integer $r19;
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r3;
        ucar.grib.grib2.Grib2Tables$VectorComponentFlag $r20, $r22;
        java.lang.Exception $r24, $r26;
        ucar.nc2.Attribute $r18, $r21, $r25, $r27;
        java.lang.StringBuilder $r9, $r10, $r11, $r12;
        ucar.nc2.iosp.grid.GridHorizCoordSys r1;
        ucar.grid.GridTableLookup $r4, $r23;
        java.lang.Double $r28;
        ucar.grid.GridDefRecord $r2, $r15;
        java.util.ArrayList $r0;
        int $i0;
        ucar.nc2.Variable r17;
        java.lang.String r5, r8, $r13, $r14, $r16, $r29, r30;
        double $d0;
        java.util.Iterator $r6;
        java.lang.Object $r7;

        r1 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        r17 := @parameter0: ucar.nc2.Variable;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $r3 = virtualinvoke $r2.<ucar.grid.GridDefRecord: java.util.Set getKeys()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r0);

        $r4 = r1.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridTableLookup lookup>;

        $z0 = $r4 instanceof ucar.grib.grib2.Grib2GridTableLookup;

        if $z0 != 0 goto label01;

        $r23 = r1.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridTableLookup lookup>;

        $z2 = $r23 instanceof ucar.grib.grib1.Grib1GridTableLookup;

        if $z2 == 0 goto label02;

     label01:
        $r29 = "GRIB";

        goto label03;

     label02:
        $r29 = "GDS";

     label03:
        r5 = $r29;

        $r6 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z3 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label15;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r7;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_param_");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = staticinvoke <ucar.nc2.iosp.AbstractIOServiceProvider: java.lang.String createValidNetcdfObjectName(java.lang.String)>($r13);

        $r15 = r1.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $r16 = virtualinvoke $r15.<ucar.grid.GridDefRecord: java.lang.String getParam(java.lang.String)>(r8);

     label05:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r16);

        $z1 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("VectorComponentFlag");

        if $z1 == 0 goto label08;

        if $i0 != 0 goto label06;

        $r22 = <ucar.grib.grib2.Grib2Tables$VectorComponentFlag: ucar.grib.grib2.Grib2Tables$VectorComponentFlag easterlyNortherlyRelative>;

        r30 = virtualinvoke $r22.<ucar.grib.grib2.Grib2Tables$VectorComponentFlag: java.lang.String toString()>();

        goto label07;

     label06:
        $r20 = <ucar.grib.grib2.Grib2Tables$VectorComponentFlag: ucar.grib.grib2.Grib2Tables$VectorComponentFlag gridRelative>;

        r30 = virtualinvoke $r20.<ucar.grib.grib2.Grib2Tables$VectorComponentFlag: java.lang.String toString()>();

     label07:
        $r21 = new ucar.nc2.Attribute;

        specialinvoke $r21.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>($r14, r30);

        virtualinvoke r17.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r21);

        goto label09;

     label08:
        $r18 = new ucar.nc2.Attribute;

        $r19 = new java.lang.Integer;

        specialinvoke $r19.<java.lang.Integer: void <init>(int)>($i0);

        specialinvoke $r18.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>($r14, $r19);

        virtualinvoke r17.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r18);

     label09:
        goto label14;

     label10:
        $r26 := @caughtexception;

     label11:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r16);

        $r27 = new ucar.nc2.Attribute;

        $r28 = new java.lang.Double;

        specialinvoke $r28.<java.lang.Double: void <init>(double)>($d0);

        specialinvoke $r27.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>($r14, $r28);

        virtualinvoke r17.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r27);

     label12:
        goto label14;

     label13:
        $r24 := @caughtexception;

        $r25 = new ucar.nc2.Attribute;

        specialinvoke $r25.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>($r14, $r16);

        virtualinvoke r17.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r25);

     label14:
        goto label04;

     label15:
        return;

        catch java.lang.Exception from label05 to label09 with label10;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    private void addCoordSystemVariable(ucar.nc2.NetcdfFile, java.lang.String, java.lang.String)
    {
        ucar.nc2.iosp.grid.GridHorizCoordSys r2;
        int[] $r7;
        ucar.nc2.Variable $r0;
        java.lang.String r3, r11, $r13;
        boolean $z0;
        ucar.ma2.DataType $r5, $r8;
        ucar.nc2.Group $r4, $r14;
        ucar.ma2.Array $r9;
        ucar.nc2.Attribute $r10, $r12, $r15;
        char[] $r6;
        ucar.nc2.NetcdfFile r1;

        r2 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        r1 := @parameter0: ucar.nc2.NetcdfFile;

        r3 := @parameter1: java.lang.String;

        r11 := @parameter2: java.lang.String;

        $r0 = new ucar.nc2.Variable;

        $r4 = r2.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.nc2.Group g>;

        specialinvoke $r0.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r1, $r4, null, r3);

        $r5 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        virtualinvoke $r0.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r5);

        virtualinvoke $r0.<ucar.nc2.Variable: void setDimensions(java.lang.String)>("");

        $r8 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        $r7 = newarray (int)[0];

        $r6 = newarray (char)[1];

        $r6[0] = 48;

        $r9 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r8, $r7, $r6);

        virtualinvoke $r0.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r9, 0);

        $r10 = new ucar.nc2.Attribute;

        specialinvoke $r10.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxes", r11);

        virtualinvoke $r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r10);

        $z0 = virtualinvoke r2.<ucar.nc2.iosp.grid.GridHorizCoordSys: boolean isLatLon()>();

        if $z0 == 0 goto label1;

        $r15 = new ucar.nc2.Attribute;

        specialinvoke $r15.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateTransforms", "");

        virtualinvoke $r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r15);

        goto label2;

     label1:
        $r12 = new ucar.nc2.Attribute;

        $r13 = virtualinvoke r2.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.lang.String getGridName()>();

        specialinvoke $r12.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateTransforms", $r13);

        virtualinvoke $r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r12);

     label2:
        specialinvoke r2.<ucar.nc2.iosp.grid.GridHorizCoordSys: void addGDSparams(ucar.nc2.Variable)>($r0);

        $r14 = r2.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.nc2.Group g>;

        virtualinvoke r1.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>($r14, $r0);

        return;
    }

    private void makeLC()
    {
        byte $b0;
        ucar.unidata.geoloc.ProjectionPointImpl r11, r51;
        ucar.nc2.Attribute $r12, $r19, $r24, $r28, $r32;
        java.lang.StringBuilder $r36, $r38, $r39, $r44, $r46, $r47, $r52, $r54, $r55, $r57, $r59, $r60, $r61, $r62;
        ucar.nc2.iosp.grid.GridHorizCoordSys r0;
        java.lang.Double $r25, $r29, $r33;
        double[] $r16;
        ucar.grid.GridDefRecord $r2, $r3, $r4, $r5, $r7, $r8, $r14, $r15, $r17, $r18, $r26, $r30, $r34, $r41, $r42;
        java.lang.String $r40, $r48, $r56, $r63;
        ucar.ma2.Array $r23;
        ucar.unidata.geoloc.LatLonPointImpl $r6, $r43;
        ucar.unidata.geoloc.ProjectionImpl $r9, $r49, $r64;
        int[] $r20;
        boolean $z0, $z1;
        ucar.ma2.DataType $r21;
        java.util.List $r13, $r22, $r27, $r31, $r35;
        int $i1, $i2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, d22, $d23, $d24, $d25, $d26, d27, $d28, $d29;
        ucar.unidata.geoloc.ProjectionPoint $r10, $r50;
        java.io.PrintStream $r37, $r45, $r53, $r58;
        ucar.unidata.geoloc.projection.LambertConformal $r1;

        r0 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        $r1 = new ucar.unidata.geoloc.projection.LambertConformal;

        $r2 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d0 = virtualinvoke $r2.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Latin1");

        $r3 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d1 = virtualinvoke $r3.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("LoV");

        $r4 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d2 = virtualinvoke $r4.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Latin1");

        $r5 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d3 = virtualinvoke $r5.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Latin2");

        specialinvoke $r1.<ucar.unidata.geoloc.projection.LambertConformal: void <init>(double,double,double,double)>($d0, $d1, $d2, $d3);

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.unidata.geoloc.ProjectionImpl proj> = $r1;

        $r6 = new ucar.unidata.geoloc.LatLonPointImpl;

        $r7 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d4 = virtualinvoke $r7.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("La1");

        $r8 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d5 = virtualinvoke $r8.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Lo1");

        specialinvoke $r6.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d4, $d5);

        $r9 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.unidata.geoloc.ProjectionImpl proj>;

        $r10 = virtualinvoke $r9.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint)>($r6);

        r11 = (ucar.unidata.geoloc.ProjectionPointImpl) $r10;

        $d6 = virtualinvoke r11.<ucar.unidata.geoloc.ProjectionPointImpl: double getX()>();

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double startx> = $d6;

        $d7 = virtualinvoke r11.<ucar.unidata.geoloc.ProjectionPointImpl: double getY()>();

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double starty> = $d7;

        $d8 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double getDxInKm()>();

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d8);

        if $z0 == 0 goto label1;

        $d29 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double startx>;

        $d28 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double starty>;

        $r64 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.unidata.geoloc.ProjectionImpl proj>;

        specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: void setDxDy(double,double,ucar.unidata.geoloc.ProjectionImpl)>($d29, $d28, $r64);

     label1:
        $z1 = <ucar.nc2.iosp.grid.GridServiceProvider: boolean debugProj>;

        if $z1 == 0 goto label2;

        $r37 = <java.lang.System: java.io.PrintStream out>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GridHorizCoordSys.makeLC start at latlon ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>($r40);

        $r41 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d16 = virtualinvoke $r41.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Lo2");

        $r42 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d17 = virtualinvoke $r42.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("La2");

        $r43 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r43.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d17, $d16);

        $r45 = <java.lang.System: java.io.PrintStream out>;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GridHorizCoordSys.makeLC end at latlon ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r45.<java.io.PrintStream: void println(java.lang.String)>($r48);

        $r49 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.unidata.geoloc.ProjectionImpl proj>;

        $r50 = virtualinvoke $r49.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint)>($r43);

        r51 = (ucar.unidata.geoloc.ProjectionPointImpl) $r50;

        $r53 = <java.lang.System: java.io.PrintStream out>;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   end at proj coord ");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r51);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r53.<java.io.PrintStream: void println(java.lang.String)>($r56);

        $d18 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double startx>;

        $i1 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: int getNx()>();

        $d19 = (double) $i1;

        $d20 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double getDxInKm()>();

        $d21 = $d19 * $d20;

        d22 = $d18 + $d21;

        $d23 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double starty>;

        $i2 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: int getNy()>();

        $d24 = (double) $i2;

        $d25 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double getDyInKm()>();

        $d26 = $d24 * $d25;

        d27 = $d23 + $d26;

        $r58 = <java.lang.System: java.io.PrintStream out>;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   should be x=");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d22);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" y=");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d27);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r58.<java.io.PrintStream: void println(java.lang.String)>($r63);

     label2:
        $r13 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r12 = new ucar.nc2.Attribute;

        specialinvoke $r12.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("grid_mapping_name", "lambert_conformal_conic");

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r14 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d9 = virtualinvoke $r14.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Latin1");

        $r15 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d10 = virtualinvoke $r15.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Latin2");

        $b0 = $d9 cmpl $d10;

        if $b0 != 0 goto label3;

        $r35 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r32 = new ucar.nc2.Attribute;

        $r33 = new java.lang.Double;

        $r34 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d15 = virtualinvoke $r34.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Latin1");

        specialinvoke $r33.<java.lang.Double: void <init>(double)>($d15);

        specialinvoke $r32.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("standard_parallel", $r33);

        interfaceinvoke $r35.<java.util.List: boolean add(java.lang.Object)>($r32);

        goto label4;

     label3:
        $r16 = newarray (double)[2];

        $r17 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d11 = virtualinvoke $r17.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Latin1");

        $r16[0] = $d11;

        $r18 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d12 = virtualinvoke $r18.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Latin2");

        $r16[1] = $d12;

        $r22 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r19 = new ucar.nc2.Attribute;

        $r21 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r20 = newarray (int)[1];

        $r20[0] = 2;

        $r23 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r21, $r20, $r16);

        specialinvoke $r19.<ucar.nc2.Attribute: void <init>(java.lang.String,ucar.ma2.Array)>("standard_parallel", $r23);

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>($r19);

     label4:
        $r27 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r24 = new ucar.nc2.Attribute;

        $r25 = new java.lang.Double;

        $r26 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d13 = virtualinvoke $r26.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("LoV");

        specialinvoke $r25.<java.lang.Double: void <init>(double)>($d13);

        specialinvoke $r24.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("longitude_of_central_meridian", $r25);

        interfaceinvoke $r27.<java.util.List: boolean add(java.lang.Object)>($r24);

        $r31 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r28 = new ucar.nc2.Attribute;

        $r29 = new java.lang.Double;

        $r30 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d14 = virtualinvoke $r30.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Latin1");

        specialinvoke $r29.<java.lang.Double: void <init>(double)>($d14);

        specialinvoke $r28.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("latitude_of_projection_origin", $r29);

        interfaceinvoke $r31.<java.util.List: boolean add(java.lang.Object)>($r28);

        return;
    }

    private void makePS()
    {
        ucar.unidata.geoloc.ProjectionPointImpl $r41;
        ucar.nc2.Attribute $r11, $r13, $r17, $r21, $r24;
        java.lang.StringBuilder $r31, $r33, $r35, $r36, $r38;
        ucar.nc2.iosp.grid.GridHorizCoordSys r0;
        java.lang.Object[] $r27;
        java.lang.Double $r14, $r18, $r22, $r25;
        ucar.grid.GridDefRecord $r1, $r3, $r5, $r7, $r9, $r15, $r19, $r34, $r37;
        java.lang.String $r2, $r39;
        ucar.unidata.geoloc.LatLonPoint $r30;
        ucar.unidata.geoloc.LatLonPointImpl $r6;
        ucar.unidata.geoloc.ProjectionImpl $r8, $r28, $r40;
        boolean $z0, $z1, $z2, $z3;
        ucar.unidata.geoloc.projection.Stereographic $r4;
        java.util.List $r12, $r16, $r20, $r23, $r26;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, d18;
        ucar.unidata.geoloc.ProjectionPoint $r10;
        java.io.PrintStream $r29, $r32;

        r0 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        $r1 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $r2 = virtualinvoke $r1.<ucar.grid.GridDefRecord: java.lang.String getParam(java.lang.String)>("NpProj");

        if $r2 == null goto label1;

        $z3 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z3 == 0 goto label2;

     label1:
        $d17 = 90.0;

        goto label3;

     label2:
        $d17 = -90.0;

     label3:
        d0 = $d17;

        $r3 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d1 = virtualinvoke $r3.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("LaD");

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        if $z0 == 0 goto label4;

        d18 = 0.933;

        goto label5;

     label4:
        $d2 = staticinvoke <java.lang.Math: double toRadians(double)>($d1);

        $d3 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        $d4 = 1.0 + $d3;

        d18 = $d4 / 2.0;

     label5:
        $r4 = new ucar.unidata.geoloc.projection.Stereographic;

        $r5 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d5 = virtualinvoke $r5.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("LoV");

        specialinvoke $r4.<ucar.unidata.geoloc.projection.Stereographic: void <init>(double,double,double)>(d0, $d5, d18);

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.unidata.geoloc.ProjectionImpl proj> = $r4;

        $r8 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.unidata.geoloc.ProjectionImpl proj>;

        $r6 = new ucar.unidata.geoloc.LatLonPointImpl;

        $r7 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d6 = virtualinvoke $r7.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("La1");

        $r9 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d7 = virtualinvoke $r9.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Lo1");

        specialinvoke $r6.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d6, $d7);

        $r10 = virtualinvoke $r8.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint)>($r6);

        $r41 = (ucar.unidata.geoloc.ProjectionPointImpl) $r10;

        $d8 = virtualinvoke $r41.<ucar.unidata.geoloc.ProjectionPointImpl: double getX()>();

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double startx> = $d8;

        $d9 = virtualinvoke $r41.<ucar.unidata.geoloc.ProjectionPointImpl: double getY()>();

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double starty> = $d9;

        $d10 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double getDxInKm()>();

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d10);

        if $z1 == 0 goto label6;

        $d16 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double startx>;

        $d15 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double starty>;

        $r40 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.unidata.geoloc.ProjectionImpl proj>;

        specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: void setDxDy(double,double,ucar.unidata.geoloc.ProjectionImpl)>($d16, $d15, $r40);

     label6:
        $z2 = <ucar.nc2.iosp.grid.GridServiceProvider: boolean debugProj>;

        if $z2 == 0 goto label7;

        $r29 = <java.lang.System: java.io.PrintStream out>;

        $r27 = newarray (java.lang.Object)[2];

        $r27[0] = $r41;

        $r28 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.unidata.geoloc.ProjectionImpl proj>;

        $r30 = virtualinvoke $r28.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint)>($r41);

        $r27[1] = $r30;

        virtualinvoke $r29.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("starting proj coord %s lat/lon %s%n", $r27);

        $r32 = <java.lang.System: java.io.PrintStream out>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   should be LA1=");

        $r34 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d13 = virtualinvoke $r34.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("La1");

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d13);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" l)1=");

        $r37 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d14 = virtualinvoke $r37.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Lo1");

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d14);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r39);

     label7:
        $r12 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r11 = new ucar.nc2.Attribute;

        specialinvoke $r11.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("grid_mapping_name", "polar_stereographic");

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r16 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r13 = new ucar.nc2.Attribute;

        $r14 = new java.lang.Double;

        $r15 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d11 = virtualinvoke $r15.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("LoV");

        specialinvoke $r14.<java.lang.Double: void <init>(double)>($d11);

        specialinvoke $r13.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("longitude_of_projection_origin", $r14);

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r20 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r17 = new ucar.nc2.Attribute;

        $r18 = new java.lang.Double;

        $r19 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d12 = virtualinvoke $r19.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("LoV");

        specialinvoke $r18.<java.lang.Double: void <init>(double)>($d12);

        specialinvoke $r17.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("straight_vertical_longitude_from_pole", $r18);

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r17);

        $r23 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r21 = new ucar.nc2.Attribute;

        $r22 = new java.lang.Double;

        specialinvoke $r22.<java.lang.Double: void <init>(double)>(d18);

        specialinvoke $r21.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("scale_factor_at_projection_origin", $r22);

        interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>($r21);

        $r26 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r24 = new ucar.nc2.Attribute;

        $r25 = new java.lang.Double;

        specialinvoke $r25.<java.lang.Double: void <init>(double)>(d0);

        specialinvoke $r24.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("latitude_of_projection_origin", $r25);

        interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>($r24);

        return;
    }

    private void makeMercator()
    {
        byte $b0;
        ucar.unidata.geoloc.ProjectionPointImpl $r44, $r55;
        ucar.nc2.Attribute $r49, $r50, $r51;
        java.lang.StringBuilder $r21, $r22, $r28, $r30, $r34, $r35, $r39, $r40, $r41, $r42, $r53, $r54, $r56, $r57;
        ucar.nc2.iosp.grid.GridHorizCoordSys r0;
        java.lang.Double $r12, $r15;
        ucar.grid.GridDefRecord $r1, $r2, $r3, $r16, $r17, $r46;
        java.lang.String $r23, $r31, $r36, $r43;
        ucar.unidata.geoloc.LatLonPointImpl $r48, $r52;
        ucar.unidata.geoloc.ProjectionImpl $r6, $r24, $r45;
        boolean $z0, $z1, $z2;
        java.util.List $r9, $r11, $r14;
        ucar.unidata.geoloc.projection.Mercator $r47;
        int $i1, $i2, $i3, $i4, $i5;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, d22, d23;
        ucar.unidata.geoloc.ProjectionPoint $r7, $r25;
        java.io.PrintStream $r20, $r27, $r33, $r38;

        r0 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        $r1 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d0 = virtualinvoke $r1.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("LaD");

        d22 = $d0;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 == 0 goto label1;

        $r46 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        d22 = virtualinvoke $r46.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Latin");

     label1:
        $r2 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d1 = virtualinvoke $r2.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Lo1");

        $r3 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d2 = virtualinvoke $r3.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("La1");

        $r47 = new ucar.unidata.geoloc.projection.Mercator;

        specialinvoke $r47.<ucar.unidata.geoloc.projection.Mercator: void <init>(double,double)>($d1, d22);

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.unidata.geoloc.ProjectionImpl proj> = $r47;

        $r6 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.unidata.geoloc.ProjectionImpl proj>;

        $r48 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r48.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d2, $d1);

        $r7 = virtualinvoke $r6.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint)>($r48);

        $d3 = interfaceinvoke $r7.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double startx> = $d3;

        $d4 = interfaceinvoke $r7.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double starty> = $d4;

        $d5 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double getDxInKm()>();

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d5);

        if $z1 == 0 goto label2;

        $d21 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double startx>;

        $d20 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double starty>;

        $r45 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.unidata.geoloc.ProjectionImpl proj>;

        specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: void setDxDy(double,double,ucar.unidata.geoloc.ProjectionImpl)>($d21, $d20, $r45);

     label2:
        $r9 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r49 = new ucar.nc2.Attribute;

        specialinvoke $r49.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("grid_mapping_name", "mercator");

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r49);

        $r11 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r50 = new ucar.nc2.Attribute;

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d22);

        specialinvoke $r50.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("standard_parallel", $r12);

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r50);

        $r14 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r51 = new ucar.nc2.Attribute;

        $r15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        specialinvoke $r51.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("longitude_of_projection_origin", $r15);

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r51);

        $z2 = <ucar.nc2.iosp.grid.GridServiceProvider: boolean debugProj>;

        if $z2 == 0 goto label4;

        $r16 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d6 = virtualinvoke $r16.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Lo2");

        d23 = $d6;

        $b0 = $d6 cmpg $d1;

        $i5 = (int) $b0;

        if $i5 >= 0 goto label3;

        d23 = $d6 + 360.0;

     label3:
        $r17 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d7 = virtualinvoke $r17.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("La2");

        $r52 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r52.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d7, d23);

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GridHorizCoordSys.makeMercator: end at latlon= ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r52);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r23);

        $r24 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.unidata.geoloc.ProjectionImpl proj>;

        $r25 = virtualinvoke $r24.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint)>($r52);

        $r44 = (ucar.unidata.geoloc.ProjectionPointImpl) $r25;

        $r27 = <java.lang.System: java.io.PrintStream out>;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   start at proj coord ");

        $r55 = new ucar.unidata.geoloc.ProjectionPointImpl;

        $d9 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double startx>;

        $d8 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double starty>;

        specialinvoke $r55.<ucar.unidata.geoloc.ProjectionPointImpl: void <init>(double,double)>($d9, $d8);

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r55);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r31);

        $r33 = <java.lang.System: java.io.PrintStream out>;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   end at proj coord ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r44);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r36);

        $d10 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double startx>;

        $i1 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: int getNx()>();

        $i2 = $i1 - 1;

        $d11 = (double) $i2;

        $d12 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double getDxInKm()>();

        $d13 = $d11 * $d12;

        $d18 = $d10 + $d13;

        $d14 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double starty>;

        $i3 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: int getNy()>();

        $i4 = $i3 - 1;

        $d15 = (double) $i4;

        $d16 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double getDyInKm()>();

        $d17 = $d15 * $d16;

        $d19 = $d14 + $d17;

        $r38 = <java.lang.System: java.io.PrintStream out>;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   should be x=");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d18);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" y=");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d19);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r43);

     label4:
        return;
    }

    private void makeRotatedLatLon(ucar.nc2.NetcdfFile)
    {
        byte $b0;
        ucar.unidata.geoloc.ProjectionPointImpl $r89, $r102;
        ucar.nc2.Attribute $r90, $r92, $r94, $r96;
        java.lang.StringBuilder $r25, $r26, $r27, $r28, $r32, $r33, $r38, $r40, $r41, $r42, $r44, $r49, $r50, $r51, $r52, $r59, $r60, $r61, $r62, $r70, $r71, $r72, $r73, $r82, $r83, $r84, $r85, $r97, $r98, $r99, $r100, $r101, $r103, $r104;
        ucar.nc2.iosp.grid.GridHorizCoordSys r0;
        java.lang.Double $r91, $r93, $r95;
        ucar.grid.GridDefRecord $r1, $r2, $r3, $r6, $r8, $r39, $r43, $r54, $r55, $r75, $r76, $r77, $r78, $r79, $r87;
        java.lang.String $r29, $r34, $r45, $r53, $r63, $r74, $r86;
        ucar.unidata.geoloc.LatLonPoint $r9, $r67;
        ucar.unidata.geoloc.ProjectionImpl $r7, $r66;
        ucar.unidata.geoloc.projection.RotatedLatLon $r88;
        boolean $z0;
        java.util.List $r12, $r15, $r18, $r21;
        ucar.nc2.NetcdfFile r10;
        int $i1, $i2, $i3, $i4, $i5;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26;
        java.io.PrintStream $r22, $r24, $r31, $r35, $r37, $r46, $r48, $r56, $r58, $r64, $r69, $r81;

        r0 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        r10 := @parameter0: ucar.nc2.NetcdfFile;

        $r1 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d0 = virtualinvoke $r1.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("SpLat");

        $r2 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d1 = virtualinvoke $r2.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("SpLon");

        $r3 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d2 = virtualinvoke $r3.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("RotationAngle");

        $r88 = new ucar.unidata.geoloc.projection.RotatedLatLon;

        specialinvoke $r88.<ucar.unidata.geoloc.projection.RotatedLatLon: void <init>(double,double,double)>($d0, $d1, $d2);

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.unidata.geoloc.ProjectionImpl proj> = $r88;

        $r7 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.unidata.geoloc.ProjectionImpl proj>;

        $r89 = new ucar.unidata.geoloc.ProjectionPointImpl;

        $r6 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d3 = virtualinvoke $r6.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Lo1");

        $r8 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d4 = virtualinvoke $r8.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("La1");

        specialinvoke $r89.<ucar.unidata.geoloc.ProjectionPointImpl: void <init>(double,double)>($d3, $d4);

        $r9 = virtualinvoke $r7.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint)>($r89);

        $d5 = interfaceinvoke $r9.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double startx> = $d5;

        $d6 = interfaceinvoke $r9.<ucar.unidata.geoloc.LatLonPoint: double getLatitude()>();

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double starty> = $d6;

        specialinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: void addCoordSystemVariable(ucar.nc2.NetcdfFile,java.lang.String,java.lang.String)>(r10, "latLonCoordSys", "time y x");

        $r12 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r90 = new ucar.nc2.Attribute;

        specialinvoke $r90.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("grid_mapping_name", "rotated_latlon_grib");

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r90);

        $r15 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r92 = new ucar.nc2.Attribute;

        $r91 = new java.lang.Double;

        specialinvoke $r91.<java.lang.Double: void <init>(double)>($d0);

        specialinvoke $r92.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("grid_south_pole_latitude", $r91);

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r92);

        $r18 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r94 = new ucar.nc2.Attribute;

        $r93 = new java.lang.Double;

        specialinvoke $r93.<java.lang.Double: void <init>(double)>($d1);

        specialinvoke $r94.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("grid_south_pole_longitude", $r93);

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r94);

        $r21 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r96 = new ucar.nc2.Attribute;

        $r95 = new java.lang.Double;

        specialinvoke $r95.<java.lang.Double: void <init>(double)>($d2);

        specialinvoke $r96.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("grid_south_pole_angle", $r95);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r96);

        $z0 = <ucar.nc2.iosp.grid.GridServiceProvider: boolean debugProj>;

        if $z0 == 0 goto label3;

        $r22 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>("Location of pole of rotated grid:");

        $r24 = <java.lang.System: java.io.PrintStream out>;

        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lon=");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Lat=");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r29);

        $r31 = <java.lang.System: java.io.PrintStream out>;

        $r98 = new java.lang.StringBuilder;

        specialinvoke $r98.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Axial rotation about pole of rotated grid:");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r34);

        $r35 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>("Location of LL in rotated grid:");

        $r37 = <java.lang.System: java.io.PrintStream out>;

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lon=");

        $r39 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d7 = virtualinvoke $r39.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Lo1");

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d7);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lat=");

        $r43 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d8 = virtualinvoke $r43.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("La1");

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d8);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>($r45);

        $r46 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>("Location of LL in non-rotated grid:");

        $r48 = <java.lang.System: java.io.PrintStream out>;

        $r100 = new java.lang.StringBuilder;

        specialinvoke $r100.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lon=");

        $d9 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double startx>;

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d9);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Lat=");

        $d10 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double starty>;

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d10);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r48.<java.io.PrintStream: void println(java.lang.String)>($r53);

        $r54 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d11 = virtualinvoke $r54.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Lo2");

        $r55 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d12 = virtualinvoke $r55.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("La2");

        $r56 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>("Location of UR in rotated grid:");

        $r58 = <java.lang.System: java.io.PrintStream out>;

        $r101 = new java.lang.StringBuilder;

        specialinvoke $r101.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lon=");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d11);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Lat=");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d12);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r58.<java.io.PrintStream: void println(java.lang.String)>($r63);

        $r64 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r64.<java.io.PrintStream: void println(java.lang.String)>("Location of UR in non-rotated grid:");

        $r66 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.unidata.geoloc.ProjectionImpl proj>;

        $r102 = new ucar.unidata.geoloc.ProjectionPointImpl;

        specialinvoke $r102.<ucar.unidata.geoloc.ProjectionPointImpl: void <init>(double,double)>($d11, $d12);

        $r67 = virtualinvoke $r66.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint)>($r102);

        $r69 = <java.lang.System: java.io.PrintStream out>;

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lon=");

        $d13 = interfaceinvoke $r67.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d13);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Lat=");

        $d14 = interfaceinvoke $r67.<ucar.unidata.geoloc.LatLonPoint: double getLatitude()>();

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d14);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r69.<java.io.PrintStream: void println(java.lang.String)>($r74);

        $r75 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d15 = virtualinvoke $r75.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("La1");

        $b0 = $d12 cmpg $d15;

        $i5 = (int) $b0;

        if $i5 >= 0 goto label1;

        $r87 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d23 = virtualinvoke $r87.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Dy");

        $d26 = neg $d23;

        goto label2;

     label1:
        $r76 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d26 = virtualinvoke $r76.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Dy");

     label2:
        $r77 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d16 = virtualinvoke $r77.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Lo1");

        $i1 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: int getNx()>();

        $i2 = $i1 - 1;

        $d17 = (double) $i2;

        $r78 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d18 = virtualinvoke $r78.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Dx");

        $d19 = $d17 * $d18;

        $d24 = $d16 + $d19;

        $r79 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d20 = virtualinvoke $r79.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("La1");

        $i3 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: int getNy()>();

        $i4 = $i3 - 1;

        $d21 = (double) $i4;

        $d22 = $d21 * $d26;

        $d25 = $d20 + $d22;

        $r81 = <java.lang.System: java.io.PrintStream out>;

        $r104 = new java.lang.StringBuilder;

        specialinvoke $r104.<java.lang.StringBuilder: void <init>()>();

        $r82 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("End point rotated grid should be x=");

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d24);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" y=");

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d25);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r81.<java.io.PrintStream: void println(java.lang.String)>($r86);

     label3:
        return;
    }

    private void makeSpaceViewOrOthographic()
    {
        byte $b0;
        ucar.unidata.geoloc.ProjectionPointImpl r40;
        ucar.nc2.Attribute $r19, $r21, $r24, $r27, $r54, $r56, $r59;
        java.lang.StringBuilder $r33, $r35, $r36, $r41, $r43, $r44, $r46, $r48, $r49, $r50, $r51;
        ucar.nc2.iosp.grid.GridHorizCoordSys r0;
        java.lang.Double $r12, $r16, $r22, $r25, $r28, $r57, $r60;
        ucar.grid.GridDefRecord $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r13, $r14, $r17, $r30, $r31, $r62, $r63;
        java.lang.String $r11, $r15, $r37, $r45, $r52;
        ucar.unidata.geoloc.LatLonPointImpl $r32;
        ucar.unidata.geoloc.ProjectionImpl $r38;
        boolean $z0, $z1, $z2;
        java.util.List $r20, $r23, $r26, $r29, $r55, $r58, $r61;
        ucar.unidata.geoloc.projection.VerticalPerspectiveView $r18;
        int $i1, $i2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, d31, $d32, $d33, $d34, $d35, d36, $d37, $d38, $d39, $d40, $d41, d42, d43, d44, d45;
        ucar.unidata.geoloc.ProjectionPoint $r39;
        java.io.PrintStream $r34, $r42, $r47;
        ucar.unidata.geoloc.projection.Orthographic $r53;

        r0 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        $r1 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d0 = virtualinvoke $r1.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Lap");

        $r2 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d1 = virtualinvoke $r2.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Lop");

        $r3 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d2 = virtualinvoke $r3.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Xp");

        $r4 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d3 = virtualinvoke $r4.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Yp");

        $r5 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d4 = virtualinvoke $r5.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Dx");

        $r6 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d5 = virtualinvoke $r6.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Dy");

        $r7 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d6 = virtualinvoke $r7.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("grid_major_axis_earth");

        d42 = $d6;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d6);

        if $z0 == 0 goto label1;

        $r63 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        d42 = virtualinvoke $r63.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("major_axis_earth");

     label1:
        $r8 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d7 = virtualinvoke $r8.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("grid_minor_axis_earth");

        d43 = $d7;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d7);

        if $z1 == 0 goto label2;

        $r62 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        d43 = virtualinvoke $r62.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("minor_axis_earth");

     label2:
        $r9 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d8 = virtualinvoke $r9.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Nr");

        $d37 = $d8 * 1.0E-6;

        $d10 = $d37 - 1.0;

        $d9 = $d37 + 1.0;

        $d11 = $d10 / $d9;

        $d12 = staticinvoke <java.lang.Math: double sqrt(double)>($d11);

        $d38 = 2.0 * $d12;

        $d13 = d42 * $d38;

        $d39 = $d13 / $d4;

        $d14 = d43 * $d38;

        $d40 = $d14 / $d5;

        $r10 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d15 = 1000.0 * $d39;

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d15);

        virtualinvoke $r10.<ucar.grid.GridDefRecord: void addParam(java.lang.String,java.lang.String)>("Dx", $r11);

        $r13 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $r12 = new java.lang.Double;

        $d16 = 1000.0 * $d39;

        specialinvoke $r12.<java.lang.Double: void <init>(double)>($d16);

        virtualinvoke $r13.<ucar.grid.GridDefRecord: void addParam(java.lang.String,java.lang.Double)>("Dx", $r12);

        $r14 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d17 = 1000.0 * $d40;

        $r15 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d17);

        virtualinvoke $r14.<ucar.grid.GridDefRecord: void addParam(java.lang.String,java.lang.String)>("Dy", $r15);

        $r17 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $r16 = new java.lang.Double;

        $d18 = 1000.0 * $d40;

        specialinvoke $r16.<java.lang.Double: void <init>(double)>($d18);

        virtualinvoke $r17.<ucar.grid.GridDefRecord: void addParam(java.lang.String,java.lang.Double)>("Dy", $r16);

        $d19 = neg $d39;

        $d20 = $d19 * $d2;

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double startx> = $d20;

        $d21 = neg $d40;

        $d22 = $d21 * $d3;

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double starty> = $d22;

        $d23 = staticinvoke <ucar.unidata.geoloc.Earth: double getRadius()>();

        $d41 = $d23 / 1000.0;

        $b0 = $d37 cmpl 1.111111111E9;

        if $b0 != 0 goto label3;

        $r53 = new ucar.unidata.geoloc.projection.Orthographic;

        specialinvoke $r53.<ucar.unidata.geoloc.projection.Orthographic: void <init>(double,double,double)>($d0, $d1, $d41);

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.unidata.geoloc.ProjectionImpl proj> = $r53;

        $r55 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r54 = new ucar.nc2.Attribute;

        specialinvoke $r54.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("grid_mapping_name", "orthographic");

        interfaceinvoke $r55.<java.util.List: boolean add(java.lang.Object)>($r54);

        $r58 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r56 = new ucar.nc2.Attribute;

        $r57 = new java.lang.Double;

        specialinvoke $r57.<java.lang.Double: void <init>(double)>($d1);

        specialinvoke $r56.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("longitude_of_projection_origin", $r57);

        interfaceinvoke $r58.<java.util.List: boolean add(java.lang.Object)>($r56);

        $r61 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r59 = new ucar.nc2.Attribute;

        $r60 = new java.lang.Double;

        specialinvoke $r60.<java.lang.Double: void <init>(double)>($d0);

        specialinvoke $r59.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("latitude_of_projection_origin", $r60);

        interfaceinvoke $r61.<java.util.List: boolean add(java.lang.Object)>($r59);

        goto label4;

     label3:
        $d24 = $d37 - 1.0;

        d44 = $d24 * $d41;

        $r18 = new ucar.unidata.geoloc.projection.VerticalPerspectiveView;

        specialinvoke $r18.<ucar.unidata.geoloc.projection.VerticalPerspectiveView: void <init>(double,double,double,double)>($d0, $d1, $d41, d44);

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.unidata.geoloc.ProjectionImpl proj> = $r18;

        $r20 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r19 = new ucar.nc2.Attribute;

        specialinvoke $r19.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("grid_mapping_name", "vertical_perspective");

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r19);

        $r23 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r21 = new ucar.nc2.Attribute;

        $r22 = new java.lang.Double;

        specialinvoke $r22.<java.lang.Double: void <init>(double)>($d1);

        specialinvoke $r21.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("longitude_of_projection_origin", $r22);

        interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>($r21);

        $r26 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r24 = new ucar.nc2.Attribute;

        $r25 = new java.lang.Double;

        specialinvoke $r25.<java.lang.Double: void <init>(double)>($d0);

        specialinvoke $r24.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("latitude_of_projection_origin", $r25);

        interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>($r24);

        $r29 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r27 = new ucar.nc2.Attribute;

        $r28 = new java.lang.Double;

        specialinvoke $r28.<java.lang.Double: void <init>(double)>(d44);

        specialinvoke $r27.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("height_above_earth", $r28);

        interfaceinvoke $r29.<java.util.List: boolean add(java.lang.Object)>($r27);

     label4:
        $z2 = <ucar.nc2.iosp.grid.GridServiceProvider: boolean debugProj>;

        if $z2 == 0 goto label5;

        $r30 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d25 = virtualinvoke $r30.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Lo2");

        d45 = $d25 + 360.0;

        $r31 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d26 = virtualinvoke $r31.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("La2");

        $r32 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r32.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d26, d45);

        $r34 = <java.lang.System: java.io.PrintStream out>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GridHorizCoordSys.makeOrthographic end at latlon ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r37);

        $r38 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.unidata.geoloc.ProjectionImpl proj>;

        $r39 = virtualinvoke $r38.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint)>($r32);

        r40 = (ucar.unidata.geoloc.ProjectionPointImpl) $r39;

        $r42 = <java.lang.System: java.io.PrintStream out>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   end at proj coord ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r40);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r45);

        $d27 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double startx>;

        $i1 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: int getNx()>();

        $d28 = (double) $i1;

        $d29 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double getDxInKm()>();

        $d30 = $d28 * $d29;

        d31 = $d27 + $d30;

        $d32 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double starty>;

        $i2 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: int getNy()>();

        $d33 = (double) $i2;

        $d34 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double getDyInKm()>();

        $d35 = $d33 * $d34;

        d36 = $d32 + $d35;

        $r47 = <java.lang.System: java.io.PrintStream out>;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   should be x=");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d31);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" y=");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d36);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>($r52);

     label5:
        return;
    }

    private void makeMSGgeostationary()
    {
        byte $b3;
        ucar.unidata.geoloc.ProjectionPointImpl r40;
        ucar.nc2.Attribute $r55, $r57, $r59, $r61, $r63, $r65;
        java.lang.StringBuilder $r35, $r36, $r43, $r44, $r48, $r49, $r50, $r51, $r68, $r69, $r70;
        ucar.nc2.iosp.grid.GridHorizCoordSys r0;
        java.lang.Double $r56, $r58, $r60, $r62, $r64;
        ucar.unidata.geoloc.projection.sat.MSGnavigation $r66;
        ucar.grid.GridDefRecord $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r30, $r31, $r53, $r54;
        java.lang.String $r37, $r45, $r52;
        ucar.unidata.geoloc.LatLonPointImpl $r67;
        ucar.unidata.geoloc.ProjectionImpl $r38;
        boolean $z0, $z1, $z2;
        java.util.List $r13, $r16, $r19, $r22, $r25, $r28;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, d21, $d22, d23, d24, $d25, $d26, $d27, $d28, $d29, $d30, d31, d32, d33, d34;
        ucar.unidata.geoloc.ProjectionPoint $r39;
        java.io.PrintStream $r34, $r42, $r47;

        r0 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        $r1 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d0 = virtualinvoke $r1.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Lap");

        $r2 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d1 = virtualinvoke $r2.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Lop");

        $r3 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        virtualinvoke $r3.<ucar.grid.GridDefRecord: int getInt(java.lang.String)>("Nx");

        $r4 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $i0 = virtualinvoke $r4.<ucar.grid.GridDefRecord: int getInt(java.lang.String)>("Ny");

        $r5 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $i1 = virtualinvoke $r5.<ucar.grid.GridDefRecord: int getInt(java.lang.String)>("Xp");

        $r6 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $i2 = virtualinvoke $r6.<ucar.grid.GridDefRecord: int getInt(java.lang.String)>("Yp");

        $r7 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        virtualinvoke $r7.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Dx");

        $r8 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d2 = virtualinvoke $r8.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Dy");

        $b3 = $d2 cmpg 2100.0;

        $i10 = (int) $b3;

        if $i10 >= 0 goto label1;

        d31 = 1207.0;

        d32 = 1203.0;

        goto label2;

     label1:
        d31 = 3622.0;

        d32 = 3610.0;

     label2:
        $r9 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d3 = virtualinvoke $r9.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("grid_major_axis_earth");

        d33 = $d3;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d3);

        if $z0 == 0 goto label3;

        $r54 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        d33 = virtualinvoke $r54.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("major_axis_earth");

     label3:
        $r10 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d4 = virtualinvoke $r10.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("grid_minor_axis_earth");

        d34 = $d4;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d4);

        if $z1 == 0 goto label4;

        $r53 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        d34 = virtualinvoke $r53.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("minor_axis_earth");

     label4:
        $r11 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d5 = virtualinvoke $r11.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Nr");

        $d25 = $d5 * 1.0E-6;

        $d6 = 1.0 / $d25;

        $d7 = staticinvoke <java.lang.Math: double asin(double)>($d6);

        $d26 = 2.0 * $d7;

        $d27 = d31 / $d26;

        $d28 = d32 / $d26;

        $d8 = $d25 - 1.0;

        $d9 = $d8 * d33;

        $d29 = $d9 / 1000.0;

        $d30 = neg $d29;

        $i4 = 1 - $i1;

        $d10 = (double) $i4;

        $d11 = $d29 * $d10;

        $d12 = $d11 / $d27;

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double startx> = $d12;

        $i5 = $i2 - $i0;

        $d13 = (double) $i5;

        $d14 = $d29 * $d13;

        $d15 = $d14 / $d28;

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double starty> = $d15;

        $d16 = $d29 / $d27;

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double incrx> = $d16;

        $d17 = $d29 / $d28;

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: double incry> = $d17;

        $r13 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r55 = new ucar.nc2.Attribute;

        specialinvoke $r55.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("grid_mapping_name", "MSGnavigation");

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r55);

        $r16 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r57 = new ucar.nc2.Attribute;

        $r56 = new java.lang.Double;

        specialinvoke $r56.<java.lang.Double: void <init>(double)>($d1);

        specialinvoke $r57.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("longitude_of_projection_origin", $r56);

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r57);

        $r19 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r59 = new ucar.nc2.Attribute;

        $r58 = new java.lang.Double;

        specialinvoke $r58.<java.lang.Double: void <init>(double)>($d0);

        specialinvoke $r59.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("latitude_of_projection_origin", $r58);

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r59);

        $r22 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r61 = new ucar.nc2.Attribute;

        $r60 = new java.lang.Double;

        $d18 = $d25 * d33;

        specialinvoke $r60.<java.lang.Double: void <init>(double)>($d18);

        specialinvoke $r61.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("height_from_earth_center", $r60);

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>($r61);

        $r25 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r63 = new ucar.nc2.Attribute;

        $r62 = new java.lang.Double;

        specialinvoke $r62.<java.lang.Double: void <init>(double)>($d29);

        specialinvoke $r63.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("scale_x", $r62);

        interfaceinvoke $r25.<java.util.List: boolean add(java.lang.Object)>($r63);

        $r28 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.util.List attributes>;

        $r65 = new ucar.nc2.Attribute;

        $r64 = new java.lang.Double;

        specialinvoke $r64.<java.lang.Double: void <init>(double)>($d30);

        specialinvoke $r65.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("scale_y", $r64);

        interfaceinvoke $r28.<java.util.List: boolean add(java.lang.Object)>($r65);

        $r66 = new ucar.unidata.geoloc.projection.sat.MSGnavigation;

        $d19 = $d25 * d33;

        specialinvoke $r66.<ucar.unidata.geoloc.projection.sat.MSGnavigation: void <init>(double,double,double,double,double,double,double)>($d0, $d1, d33, d34, $d19, $d29, $d30);

        r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.unidata.geoloc.ProjectionImpl proj> = $r66;

        $z2 = <ucar.nc2.iosp.grid.GridServiceProvider: boolean debugProj>;

        if $z2 == 0 goto label5;

        $r30 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d20 = virtualinvoke $r30.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Lo2");

        d21 = $d20 + 360.0;

        $r31 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d22 = virtualinvoke $r31.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("La2");

        $r67 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r67.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d22, d21);

        $r34 = <java.lang.System: java.io.PrintStream out>;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GridHorizCoordSys.makeMSGgeostationary end at latlon ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r67);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r37);

        $r38 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.unidata.geoloc.ProjectionImpl proj>;

        $r39 = virtualinvoke $r38.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint)>($r67);

        r40 = (ucar.unidata.geoloc.ProjectionPointImpl) $r39;

        $r42 = <java.lang.System: java.io.PrintStream out>;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   end at proj coord ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r40);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r45);

        $i6 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: int getNx()>();

        $i7 = 1 + $i6;

        d23 = (double) $i7;

        $i8 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: int getNy()>();

        $i9 = 1 + $i8;

        d24 = (double) $i9;

        $r47 = <java.lang.System: java.io.PrintStream out>;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   should be x=");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d23);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" y=");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d24);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>($r52);

     label5:
        return;
    }

    private void makeCurvilinearAxis(ucar.nc2.NetcdfFile)
    {
        ucar.nc2.constants.AxisType $r80, $r87;
        ucar.nc2.Group $r1;
        ucar.nc2.Attribute $r11, $r23, $r35, $r76, $r77, $r78, $r79, $r83, $r84, $r85, $r86;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r24, $r25, $r26, $r27, $r36, $r37, $r38, $r39;
        ucar.nc2.iosp.grid.GridHorizCoordSys r68;
        java.util.ArrayList $r3, $r4;
        java.lang.String $r9, $r10, $r16, $r19, $r22, $r28, $r31, $r34, $r40, $r43, $r46, $r48, $r49, $r51, $r55, $r58, $r60, $r64, $r67, r69, r70, r71, r72, r73, r74, $r81, $r82, $r88, $r89;
        ucar.nc2.Dimension $r18, $r21, $r30, $r33, $r42, $r45, $r54, $r57, $r63, $r66;
        int[] $r50, $r59;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        java.util.List $r2, $r8, $r52, $r61;
        ucar.nc2.NetcdfFile r0;
        int $i0, $i1, $i2, $i3;
        ucar.nc2.Variable r75, r90;
        java.util.Iterator $r5, $r6;
        java.lang.Object $r7, $r17, $r20, $r29, $r32, $r41, $r44, $r47, $r53, $r56, $r62, $r65;

        r68 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        $r1 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Group getRootGroup()>();

        $r2 = virtualinvoke $r1.<ucar.nc2.Group: java.util.List getVariables()>();

        r69 = null;

        r70 = null;

        r71 = null;

        r72 = null;

        r73 = null;

        r74 = null;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r47 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r75 = (ucar.nc2.Variable) $r47;

        $r48 = virtualinvoke r75.<ucar.nc2.Variable: java.lang.String getName()>();

        $z7 = virtualinvoke $r48.<java.lang.String: boolean startsWith(java.lang.String)>("Latitude");

        if $z7 == 0 goto label07;

        $r59 = virtualinvoke r75.<ucar.nc2.Variable: int[] getShape()>();

        $i2 = virtualinvoke r75.<ucar.nc2.Variable: int getRank()>();

        if $i2 != 3 goto label03;

        $i3 = $r59[0];

        if $i3 != 1 goto label03;

        $r61 = virtualinvoke r75.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $r62 = interfaceinvoke $r61.<java.util.List: java.lang.Object get(int)>(0);

        $r63 = (ucar.nc2.Dimension) $r62;

        $r64 = virtualinvoke $r63.<ucar.nc2.Dimension: java.lang.String getName()>();

        $z12 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>($r64);

        if $z12 != 0 goto label02;

        $r65 = interfaceinvoke $r61.<java.util.List: java.lang.Object get(int)>(0);

        $r66 = (ucar.nc2.Dimension) $r65;

        $r67 = virtualinvoke $r66.<ucar.nc2.Dimension: java.lang.String getName()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r67);

     label02:
        interfaceinvoke $r61.<java.util.List: java.lang.Object remove(int)>(0);

        virtualinvoke r75.<ucar.nc2.Variable: void setDimensions(java.util.List)>($r61);

     label03:
        $r76 = new ucar.nc2.Attribute;

        specialinvoke $r76.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_north");

        virtualinvoke r75.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r76);

        $r77 = new ucar.nc2.Attribute;

        specialinvoke $r77.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "latitude coordinate");

        virtualinvoke r75.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r77);

        $r78 = new ucar.nc2.Attribute;

        specialinvoke $r78.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "latitude");

        virtualinvoke r75.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r78);

        $r79 = new ucar.nc2.Attribute;

        $r80 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r81 = virtualinvoke $r80.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r79.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r81);

        virtualinvoke r75.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r79);

        $r82 = virtualinvoke r75.<ucar.nc2.Variable: java.lang.String getName()>();

        $z13 = virtualinvoke $r82.<java.lang.String: boolean contains(java.lang.CharSequence)>("U_Wind_Component");

        if $z13 == 0 goto label04;

        r71 = virtualinvoke r75.<ucar.nc2.Variable: java.lang.String getName()>();

        goto label06;

     label04:
        $r60 = virtualinvoke r75.<ucar.nc2.Variable: java.lang.String getName()>();

        $z11 = virtualinvoke $r60.<java.lang.String: boolean contains(java.lang.CharSequence)>("V_Wind_Component");

        if $z11 == 0 goto label05;

        r73 = virtualinvoke r75.<ucar.nc2.Variable: java.lang.String getName()>();

        goto label06;

     label05:
        r69 = virtualinvoke r75.<ucar.nc2.Variable: java.lang.String getName()>();

     label06:
        goto label12;

     label07:
        $r49 = virtualinvoke r75.<ucar.nc2.Variable: java.lang.String getName()>();

        $z8 = virtualinvoke $r49.<java.lang.String: boolean startsWith(java.lang.String)>("Longitude");

        if $z8 == 0 goto label12;

        $r50 = virtualinvoke r75.<ucar.nc2.Variable: int[] getShape()>();

        $i0 = virtualinvoke r75.<ucar.nc2.Variable: int getRank()>();

        if $i0 != 3 goto label09;

        $i1 = $r50[0];

        if $i1 != 1 goto label09;

        $r52 = virtualinvoke r75.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $r53 = interfaceinvoke $r52.<java.util.List: java.lang.Object get(int)>(0);

        $r54 = (ucar.nc2.Dimension) $r53;

        $r55 = virtualinvoke $r54.<ucar.nc2.Dimension: java.lang.String getName()>();

        $z10 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>($r55);

        if $z10 != 0 goto label08;

        $r56 = interfaceinvoke $r52.<java.util.List: java.lang.Object get(int)>(0);

        $r57 = (ucar.nc2.Dimension) $r56;

        $r58 = virtualinvoke $r57.<ucar.nc2.Dimension: java.lang.String getName()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r58);

     label08:
        interfaceinvoke $r52.<java.util.List: java.lang.Object remove(int)>(0);

        virtualinvoke r75.<ucar.nc2.Variable: void setDimensions(java.util.List)>($r52);

     label09:
        $r83 = new ucar.nc2.Attribute;

        specialinvoke $r83.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_east");

        virtualinvoke r75.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r83);

        $r84 = new ucar.nc2.Attribute;

        specialinvoke $r84.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "longitude coordinate");

        virtualinvoke r75.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r84);

        $r85 = new ucar.nc2.Attribute;

        specialinvoke $r85.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "longitude");

        virtualinvoke r75.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r85);

        $r86 = new ucar.nc2.Attribute;

        $r87 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r88 = virtualinvoke $r87.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r86.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r88);

        virtualinvoke r75.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r86);

        $r89 = virtualinvoke r75.<ucar.nc2.Variable: java.lang.String getName()>();

        $z14 = virtualinvoke $r89.<java.lang.String: boolean contains(java.lang.CharSequence)>("U_Wind_Component");

        if $z14 == 0 goto label10;

        r72 = virtualinvoke r75.<ucar.nc2.Variable: java.lang.String getName()>();

        goto label12;

     label10:
        $r51 = virtualinvoke r75.<ucar.nc2.Variable: java.lang.String getName()>();

        $z9 = virtualinvoke $r51.<java.lang.String: boolean contains(java.lang.CharSequence)>("V_Wind_Component");

        if $z9 == 0 goto label11;

        r74 = virtualinvoke r75.<ucar.nc2.Variable: java.lang.String getName()>();

        goto label12;

     label11:
        r70 = virtualinvoke r75.<ucar.nc2.Variable: java.lang.String getName()>();

     label12:
        goto label01;

     label13:
        $r6 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label18;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r90 = (ucar.nc2.Variable) $r7;

        $r8 = virtualinvoke r90.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $r9 = virtualinvoke r90.<ucar.nc2.Variable: java.lang.String getName()>();

        $z2 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("U-component");

        if $z2 == 0 goto label15;

        $r35 = new ucar.nc2.Attribute;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r72);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("coordinates", $r40);

        virtualinvoke r90.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r35);

        $r41 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(0);

        $r42 = (ucar.nc2.Dimension) $r41;

        $r43 = virtualinvoke $r42.<ucar.nc2.Dimension: java.lang.String getName()>();

        $z6 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>($r43);

        if $z6 != 0 goto label17;

        $r44 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(0);

        $r45 = (ucar.nc2.Dimension) $r44;

        $r46 = virtualinvoke $r45.<ucar.nc2.Dimension: java.lang.String getName()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r46);

        goto label17;

     label15:
        $r10 = virtualinvoke r90.<ucar.nc2.Variable: java.lang.String getName()>();

        $z3 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>("V-component");

        if $z3 == 0 goto label16;

        $r23 = new ucar.nc2.Attribute;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r73);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("coordinates", $r28);

        virtualinvoke r90.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r23);

        $r29 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(0);

        $r30 = (ucar.nc2.Dimension) $r29;

        $r31 = virtualinvoke $r30.<ucar.nc2.Dimension: java.lang.String getName()>();

        $z5 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>($r31);

        if $z5 != 0 goto label17;

        $r32 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(0);

        $r33 = (ucar.nc2.Dimension) $r32;

        $r34 = virtualinvoke $r33.<ucar.nc2.Dimension: java.lang.String getName()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r34);

        goto label17;

     label16:
        $r11 = new ucar.nc2.Attribute;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r69);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r70);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("coordinates", $r16);

        virtualinvoke r90.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r11);

        $r17 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(0);

        $r18 = (ucar.nc2.Dimension) $r17;

        $r19 = virtualinvoke $r18.<ucar.nc2.Dimension: java.lang.String getName()>();

        $z4 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>($r19);

        if $z4 != 0 goto label17;

        $r20 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(0);

        $r21 = (ucar.nc2.Dimension) $r20;

        $r22 = virtualinvoke $r21.<ucar.nc2.Dimension: java.lang.String getName()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r22);

     label17:
        goto label14;

     label18:
        return;
    }

    private void setDxDy(double, double, ucar.unidata.geoloc.ProjectionImpl)
    {
        ucar.unidata.geoloc.ProjectionImpl r4;
        ucar.unidata.geoloc.ProjectionPointImpl r6;
        boolean $z0, $z1;
        ucar.nc2.iosp.grid.GridHorizCoordSys r0;
        ucar.grid.GridDefRecord $r1, $r2, $r7, $r8, $r9, $r11, $r13;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r10, $r12;
        double $d0, $d1, $d2, d3, $d4, $d5, $d6, d7, $d8, d9, $d10, $d11, $d12, d13;
        ucar.unidata.geoloc.ProjectionPoint $r5;
        ucar.unidata.geoloc.LatLonPointImpl $r3;

        r0 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        d3 := @parameter0: double;

        d9 := @parameter1: double;

        r4 := @parameter2: ucar.unidata.geoloc.ProjectionImpl;

        $r1 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d0 = virtualinvoke $r1.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Lo2");

        $r2 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d1 = virtualinvoke $r2.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("La2");

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        $r3 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r3.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d1, $d0);

        $r5 = virtualinvoke r4.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint)>($r3);

        r6 = (ucar.unidata.geoloc.ProjectionPointImpl) $r5;

        $d2 = virtualinvoke r6.<ucar.unidata.geoloc.ProjectionPointImpl: double getX()>();

        $d4 = $d2 - d3;

        $d5 = staticinvoke <java.lang.Math: double abs(double)>($d4);

        $r7 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $i0 = virtualinvoke $r7.<ucar.grid.GridDefRecord: int getInt(java.lang.String)>("Nx");

        $i1 = $i0 - 1;

        $d6 = (double) $i1;

        d7 = $d5 / $d6;

        $d8 = virtualinvoke r6.<ucar.unidata.geoloc.ProjectionPointImpl: double getY()>();

        $d10 = $d8 - d9;

        $d11 = staticinvoke <java.lang.Math: double abs(double)>($d10);

        $r8 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $i2 = virtualinvoke $r8.<ucar.grid.GridDefRecord: int getInt(java.lang.String)>("Ny");

        $i3 = $i2 - 1;

        $d12 = (double) $i3;

        d13 = $d11 / $d12;

        $r9 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d7);

        virtualinvoke $r9.<ucar.grid.GridDefRecord: void addParam(java.lang.String,java.lang.String)>("Dx", $r10);

        $r11 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d13);

        virtualinvoke $r11.<ucar.grid.GridDefRecord: void addParam(java.lang.String,java.lang.String)>("Dy", $r12);

        $r13 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        virtualinvoke $r13.<ucar.grid.GridDefRecord: void addParam(java.lang.String,java.lang.String)>("grid_units", "km");

        return;
    }

    private double setLatLonDxDy()
    {
        byte $b0;
        boolean $z0, $z1;
        ucar.nc2.iosp.grid.GridHorizCoordSys r0;
        java.lang.Double $r16, $r17;
        ucar.grid.GridDefRecord $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r12, $r14, $r15;
        int $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r8, $r10;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, d12;

        r0 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        $r1 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d0 = virtualinvoke $r1.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Lo1");

        $r2 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d1 = virtualinvoke $r2.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("La1");

        $r3 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d2 = virtualinvoke $r3.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("Lo2");

        d12 = $d2;

        $r4 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $d3 = virtualinvoke $r4.<ucar.grid.GridDefRecord: double getDouble(java.lang.String)>("La2");

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d3);

        if $z1 == 0 goto label2;

     label1:
        return #NaN;

     label2:
        $b0 = $d2 cmpg $d0;

        $i5 = (int) $b0;

        if $i5 >= 0 goto label3;

        d12 = $d2 + 360.0;

     label3:
        $d4 = d12 - $d0;

        $d5 = staticinvoke <java.lang.Math: double abs(double)>($d4);

        $r5 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $i1 = virtualinvoke $r5.<ucar.grid.GridDefRecord: int getInt(java.lang.String)>("Nx");

        $i2 = $i1 - 1;

        $d6 = (double) $i2;

        $d10 = $d5 / $d6;

        $d7 = $d3 - $d1;

        $d8 = staticinvoke <java.lang.Math: double abs(double)>($d7);

        $r6 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $i3 = virtualinvoke $r6.<ucar.grid.GridDefRecord: int getInt(java.lang.String)>("Ny");

        $i4 = $i3 - 1;

        $d9 = (double) $i4;

        $d11 = $d8 / $d9;

        $r7 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d10);

        virtualinvoke $r7.<ucar.grid.GridDefRecord: void addParam(java.lang.String,java.lang.String)>("Dx", $r8);

        $r9 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d11);

        virtualinvoke $r9.<ucar.grid.GridDefRecord: void addParam(java.lang.String,java.lang.String)>("Dy", $r10);

        $r12 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $r16 = new java.lang.Double;

        specialinvoke $r16.<java.lang.Double: void <init>(double)>($d10);

        virtualinvoke $r12.<ucar.grid.GridDefRecord: void addParam(java.lang.String,java.lang.Double)>("Dx", $r16);

        $r14 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        $r17 = new java.lang.Double;

        specialinvoke $r17.<java.lang.Double: void <init>(double)>($d11);

        virtualinvoke $r14.<ucar.grid.GridDefRecord: void addParam(java.lang.String,java.lang.Double)>("Dy", $r17);

        $r15 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        virtualinvoke $r15.<ucar.grid.GridDefRecord: void addParam(java.lang.String,java.lang.String)>("grid_units", "degree");

        return $d11;
    }

    public ucar.grid.GridDefRecord getGds()
    {
        ucar.nc2.iosp.grid.GridHorizCoordSys r0;
        ucar.grid.GridDefRecord $r1;

        r0 := @this: ucar.nc2.iosp.grid.GridHorizCoordSys;

        $r1 = r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord gds>;

        return $r1;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/iosp/grid/GridHorizCoordSys;");

        <ucar.nc2.iosp.grid.GridHorizCoordSys: org.slf4j.Logger log> = $r0;

        return;
    }
}
