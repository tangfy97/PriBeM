public class org.dom4j.io.DocumentSource extends javax.xml.transform.sax.SAXSource
{
    public static final java.lang.String DOM4J_FEATURE;
    private org.xml.sax.XMLReader xmlReader;

    public void <init>(org.dom4j.Node)
    {
        org.dom4j.Document $r3;
        org.dom4j.io.DocumentSource r0;
        org.dom4j.Node r2;
        org.dom4j.io.SAXWriter $r1;

        r0 := @this: org.dom4j.io.DocumentSource;

        r2 := @parameter0: org.dom4j.Node;

        specialinvoke r0.<javax.xml.transform.sax.SAXSource: void <init>()>();

        $r1 = new org.dom4j.io.SAXWriter;

        specialinvoke $r1.<org.dom4j.io.SAXWriter: void <init>()>();

        r0.<org.dom4j.io.DocumentSource: org.xml.sax.XMLReader xmlReader> = $r1;

        $r3 = interfaceinvoke r2.<org.dom4j.Node: org.dom4j.Document getDocument()>();

        virtualinvoke r0.<org.dom4j.io.DocumentSource: void setDocument(org.dom4j.Document)>($r3);

        return;
    }

    public void <init>(org.dom4j.Document)
    {
        org.dom4j.io.SAXWriter $r1;
        org.dom4j.Document r2;
        org.dom4j.io.DocumentSource r0;

        r0 := @this: org.dom4j.io.DocumentSource;

        r2 := @parameter0: org.dom4j.Document;

        specialinvoke r0.<javax.xml.transform.sax.SAXSource: void <init>()>();

        $r1 = new org.dom4j.io.SAXWriter;

        specialinvoke $r1.<org.dom4j.io.SAXWriter: void <init>()>();

        r0.<org.dom4j.io.DocumentSource: org.xml.sax.XMLReader xmlReader> = $r1;

        virtualinvoke r0.<org.dom4j.io.DocumentSource: void setDocument(org.dom4j.Document)>(r2);

        return;
    }

    public org.dom4j.Document getDocument()
    {
        org.xml.sax.InputSource $r1;
        org.dom4j.Document $r3;
        org.dom4j.io.DocumentSource r0;
        org.dom4j.io.DocumentInputSource r2;

        r0 := @this: org.dom4j.io.DocumentSource;

        $r1 = virtualinvoke r0.<org.dom4j.io.DocumentSource: org.xml.sax.InputSource getInputSource()>();

        r2 = (org.dom4j.io.DocumentInputSource) $r1;

        $r3 = virtualinvoke r2.<org.dom4j.io.DocumentInputSource: org.dom4j.Document getDocument()>();

        return $r3;
    }

    public void setDocument(org.dom4j.Document)
    {
        org.dom4j.io.DocumentInputSource $r1;
        org.dom4j.Document r2;
        org.dom4j.io.DocumentSource r0;

        r0 := @this: org.dom4j.io.DocumentSource;

        r2 := @parameter0: org.dom4j.Document;

        $r1 = new org.dom4j.io.DocumentInputSource;

        specialinvoke $r1.<org.dom4j.io.DocumentInputSource: void <init>(org.dom4j.Document)>(r2);

        specialinvoke r0.<javax.xml.transform.sax.SAXSource: void setInputSource(org.xml.sax.InputSource)>($r1);

        return;
    }

    public org.xml.sax.XMLReader getXMLReader()
    {
        org.xml.sax.XMLReader $r1;
        org.dom4j.io.DocumentSource r0;

        r0 := @this: org.dom4j.io.DocumentSource;

        $r1 = r0.<org.dom4j.io.DocumentSource: org.xml.sax.XMLReader xmlReader>;

        return $r1;
    }

    public void setInputSource(org.xml.sax.InputSource) throws java.lang.UnsupportedOperationException
    {
        org.xml.sax.InputSource r0;
        java.lang.UnsupportedOperationException $r1;
        org.dom4j.io.DocumentSource r2;
        org.dom4j.io.DocumentInputSource $r3;
        boolean $z0;

        r2 := @this: org.dom4j.io.DocumentSource;

        r0 := @parameter0: org.xml.sax.InputSource;

        $z0 = r0 instanceof org.dom4j.io.DocumentInputSource;

        if $z0 == 0 goto label1;

        $r3 = (org.dom4j.io.DocumentInputSource) r0;

        specialinvoke r2.<javax.xml.transform.sax.SAXSource: void setInputSource(org.xml.sax.InputSource)>($r3);

        goto label2;

     label1:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;

     label2:
        return;
    }

    public void setXMLReader(org.xml.sax.XMLReader) throws java.lang.UnsupportedOperationException
    {
        java.lang.UnsupportedOperationException $r1;
        org.xml.sax.XMLFilter r6;
        org.dom4j.io.DocumentSource r3;
        org.xml.sax.XMLReader r0, $r2, $r4;
        org.dom4j.io.SAXWriter $r5;
        boolean $z0, $z1, $z2;

        r3 := @this: org.dom4j.io.DocumentSource;

        r0 := @parameter0: org.xml.sax.XMLReader;

        $z0 = r0 instanceof org.dom4j.io.SAXWriter;

        if $z0 == 0 goto label1;

        $r5 = (org.dom4j.io.SAXWriter) r0;

        r3.<org.dom4j.io.DocumentSource: org.xml.sax.XMLReader xmlReader> = $r5;

        goto label5;

     label1:
        $z1 = r0 instanceof org.xml.sax.XMLFilter;

        if $z1 == 0 goto label4;

        r6 = (org.xml.sax.XMLFilter) r0;

     label2:
        $r2 = interfaceinvoke r6.<org.xml.sax.XMLFilter: org.xml.sax.XMLReader getParent()>();

        $z2 = $r2 instanceof org.xml.sax.XMLFilter;

        if $z2 == 0 goto label3;

        r6 = (org.xml.sax.XMLFilter) $r2;

        goto label2;

     label3:
        $r4 = r3.<org.dom4j.io.DocumentSource: org.xml.sax.XMLReader xmlReader>;

        interfaceinvoke r6.<org.xml.sax.XMLFilter: void setParent(org.xml.sax.XMLReader)>($r4);

        r3.<org.dom4j.io.DocumentSource: org.xml.sax.XMLReader xmlReader> = r6;

        goto label5;

     label4:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;

     label5:
        return;
    }

    public static void <clinit>()
    {
        <org.dom4j.io.DocumentSource: java.lang.String DOM4J_FEATURE> = "http://org.dom4j.io.DoucmentSource/feature";

        return;
    }
}
