public class groovy.xml.DOMBuilder extends groovy.util.BuilderSupport
{
    org.w3c.dom.Document document;
    javax.xml.parsers.DocumentBuilder documentBuilder;
    static java.lang.Class class$groovy$xml$QName;

    public static groovy.xml.DOMBuilder newInstance() throws javax.xml.parsers.ParserConfigurationException
    {
        groovy.xml.DOMBuilder $r0;

        $r0 = staticinvoke <groovy.xml.DOMBuilder: groovy.xml.DOMBuilder newInstance(boolean,boolean)>(0, 1);

        return $r0;
    }

    public static groovy.xml.DOMBuilder newInstance(boolean, boolean) throws javax.xml.parsers.ParserConfigurationException
    {
        javax.xml.parsers.DocumentBuilder $r2;
        groovy.xml.DOMBuilder $r1;
        javax.xml.parsers.DocumentBuilderFactory $r0;
        boolean z0, z1;

        z1 := @parameter0: boolean;

        z0 := @parameter1: boolean;

        $r0 = staticinvoke <groovy.xml.FactorySupport: javax.xml.parsers.DocumentBuilderFactory createDocumentBuilderFactory()>();

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(z0);

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setValidating(boolean)>(z1);

        $r1 = new groovy.xml.DOMBuilder;

        $r2 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        specialinvoke $r1.<groovy.xml.DOMBuilder: void <init>(javax.xml.parsers.DocumentBuilder)>($r2);

        return $r1;
    }

    public static org.w3c.dom.Document parse(java.io.Reader) throws org.xml.sax.SAXException, java.io.IOException, javax.xml.parsers.ParserConfigurationException
    {
        java.io.Reader r0;
        org.w3c.dom.Document $r1;

        r0 := @parameter0: java.io.Reader;

        $r1 = staticinvoke <groovy.xml.DOMBuilder: org.w3c.dom.Document parse(java.io.Reader,boolean,boolean)>(r0, 0, 1);

        return $r1;
    }

    public static org.w3c.dom.Document parse(java.io.Reader, boolean, boolean) throws org.xml.sax.SAXException, java.io.IOException, javax.xml.parsers.ParserConfigurationException
    {
        org.xml.sax.InputSource $r2;
        org.w3c.dom.Document $r4;
        javax.xml.parsers.DocumentBuilder $r1;
        javax.xml.parsers.DocumentBuilderFactory $r0;
        java.io.Reader r3;
        boolean z0, z1;

        r3 := @parameter0: java.io.Reader;

        z1 := @parameter1: boolean;

        z0 := @parameter2: boolean;

        $r0 = staticinvoke <groovy.xml.FactorySupport: javax.xml.parsers.DocumentBuilderFactory createDocumentBuilderFactory()>();

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(z0);

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setValidating(boolean)>(z1);

        $r1 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r2 = new org.xml.sax.InputSource;

        specialinvoke $r2.<org.xml.sax.InputSource: void <init>(java.io.Reader)>(r3);

        $r4 = virtualinvoke $r1.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(org.xml.sax.InputSource)>($r2);

        return $r4;
    }

    public void <init>(org.w3c.dom.Document)
    {
        groovy.xml.DOMBuilder r0;
        org.w3c.dom.Document r1;

        r0 := @this: groovy.xml.DOMBuilder;

        r1 := @parameter0: org.w3c.dom.Document;

        specialinvoke r0.<groovy.util.BuilderSupport: void <init>()>();

        r0.<groovy.xml.DOMBuilder: org.w3c.dom.Document document> = r1;

        return;
    }

    public void <init>(javax.xml.parsers.DocumentBuilder)
    {
        groovy.xml.DOMBuilder r0;
        javax.xml.parsers.DocumentBuilder r1;

        r0 := @this: groovy.xml.DOMBuilder;

        r1 := @parameter0: javax.xml.parsers.DocumentBuilder;

        specialinvoke r0.<groovy.util.BuilderSupport: void <init>()>();

        r0.<groovy.xml.DOMBuilder: javax.xml.parsers.DocumentBuilder documentBuilder> = r1;

        return;
    }

    protected void setParent(java.lang.Object, java.lang.Object)
    {
        org.w3c.dom.Node r1, r3;
        java.lang.Object r0, r2;
        groovy.xml.DOMBuilder r4;

        r4 := @this: groovy.xml.DOMBuilder;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r1 = (org.w3c.dom.Node) r0;

        r3 = (org.w3c.dom.Node) r2;

        interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r3);

        return;
    }

    protected java.lang.Object createNode(java.lang.Object)
    {
        org.w3c.dom.Element $r5, $r10;
        org.w3c.dom.Document $r1, $r3, $r7, $r11;
        groovy.xml.DOMBuilder r0;
        java.lang.Object r2;
        java.lang.String $r4, $r8, $r9;
        groovy.xml.QName r6;
        boolean $z0;

        r0 := @this: groovy.xml.DOMBuilder;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<groovy.xml.DOMBuilder: org.w3c.dom.Document document>;

        if $r1 != null goto label1;

        $r11 = virtualinvoke r0.<groovy.xml.DOMBuilder: org.w3c.dom.Document createDocument()>();

        r0.<groovy.xml.DOMBuilder: org.w3c.dom.Document document> = $r11;

     label1:
        $z0 = r2 instanceof groovy.xml.QName;

        if $z0 == 0 goto label2;

        r6 = (groovy.xml.QName) r2;

        $r7 = r0.<groovy.xml.DOMBuilder: org.w3c.dom.Document document>;

        $r8 = virtualinvoke r6.<groovy.xml.QName: java.lang.String getNamespaceURI()>();

        $r9 = virtualinvoke r6.<groovy.xml.QName: java.lang.String getQualifiedName()>();

        $r10 = interfaceinvoke $r7.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>($r8, $r9);

        return $r10;

     label2:
        $r3 = r0.<groovy.xml.DOMBuilder: org.w3c.dom.Document document>;

        $r4 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        $r5 = interfaceinvoke $r3.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>($r4);

        return $r5;
    }

    protected org.w3c.dom.Document createDocument()
    {
        org.w3c.dom.Document $r3;
        javax.xml.parsers.DocumentBuilder $r1, $r2;
        groovy.xml.DOMBuilder r0;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: groovy.xml.DOMBuilder;

        $r1 = r0.<groovy.xml.DOMBuilder: javax.xml.parsers.DocumentBuilder documentBuilder>;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No Document or DOMImplementation available so cannot create Document");

        throw $r4;

     label1:
        $r2 = r0.<groovy.xml.DOMBuilder: javax.xml.parsers.DocumentBuilder documentBuilder>;

        $r3 = virtualinvoke $r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

        return $r3;
    }

    protected java.lang.Object createNode(java.lang.Object, java.lang.Object)
    {
        org.w3c.dom.Text $r7;
        org.w3c.dom.Element r3;
        org.w3c.dom.Document $r5;
        groovy.xml.DOMBuilder r0;
        java.lang.Object r1, $r2, r4;
        java.lang.String $r6;

        r0 := @this: groovy.xml.DOMBuilder;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<groovy.xml.DOMBuilder: java.lang.Object createNode(java.lang.Object)>(r1);

        r3 = (org.w3c.dom.Element) $r2;

        $r5 = r0.<groovy.xml.DOMBuilder: org.w3c.dom.Document document>;

        $r6 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        $r7 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r6);

        interfaceinvoke r3.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r7);

        return r3;
    }

    protected java.lang.Object createNode(java.lang.Object, java.util.Map, java.lang.Object)
    {
        org.w3c.dom.Text $r8;
        org.w3c.dom.Element r4;
        org.w3c.dom.Document $r6;
        java.util.Map r2;
        groovy.xml.DOMBuilder r0;
        java.lang.Object r1, $r3, r5;
        java.lang.String $r7;

        r0 := @this: groovy.xml.DOMBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.Map;

        r5 := @parameter2: java.lang.Object;

        $r3 = virtualinvoke r0.<groovy.xml.DOMBuilder: java.lang.Object createNode(java.lang.Object,java.util.Map)>(r1, r2);

        r4 = (org.w3c.dom.Element) $r3;

        $r6 = r0.<groovy.xml.DOMBuilder: org.w3c.dom.Document document>;

        $r7 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        $r8 = interfaceinvoke $r6.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r7);

        interfaceinvoke r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

        return r4;
    }

    protected java.lang.Object createNode(java.lang.Object, java.util.Map)
    {
        java.util.Map r4, $r14;
        java.lang.String $r10, $r12, $r15;
        boolean $z0, $z1, $z2;
        java.util.Map$Entry r8;
        java.util.Iterator $r6;
        java.util.Set $r5;
        java.lang.IllegalArgumentException $r13;
        org.w3c.dom.Element r3;
        groovy.xml.DOMBuilder r0;
        java.lang.Object r1, $r2, $r7, $r9, $r11;

        r0 := @this: groovy.xml.DOMBuilder;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.util.Map;

        $r2 = virtualinvoke r0.<groovy.xml.DOMBuilder: java.lang.Object createNode(java.lang.Object)>(r1);

        r3 = (org.w3c.dom.Element) $r2;

        $r5 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r7;

        $r9 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        $r11 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = "xmlns";

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label3;

        $z2 = $r11 instanceof java.util.Map;

        if $z2 == 0 goto label2;

        $r14 = (java.util.Map) $r11;

        virtualinvoke r0.<groovy.xml.DOMBuilder: void appendNamespaceAttributes(org.w3c.dom.Element,java.util.Map)>(r3, $r14);

        goto label6;

     label2:
        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The value of the xmlns attribute must be a Map of QNames to String URIs");

        throw $r13;

     label3:
        if $r11 == null goto label4;

        $r15 = virtualinvoke $r11.<java.lang.Object: java.lang.String toString()>();

        goto label5;

     label4:
        $r15 = "";

     label5:
        interfaceinvoke r3.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>($r10, $r15);

     label6:
        goto label1;

     label7:
        return r3;
    }

    protected void appendNamespaceAttributes(org.w3c.dom.Element, java.util.Map)
    {
        java.util.Map r0;
        boolean $z0, $z1, $z2;
        java.util.Set $r1;
        groovy.xml.DOMBuilder r26;
        groovy.xml.QName r28;
        java.lang.StringBuffer $r8, $r9, $r10, $r11, $r13, $r21, $r22, $r23, $r24;
        java.lang.String $r14, $r16, $r17, $r18, $r19, $r25, r27;
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.lang.IllegalArgumentException $r7, $r20;
        org.w3c.dom.Element r15;
        java.lang.Object $r3, $r5, $r6;
        java.lang.Class $r12, $r29;

        r26 := @this: groovy.xml.DOMBuilder;

        r15 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: java.util.Map;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r5 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r6 != null goto label2;

        $r20 = new java.lang.IllegalArgumentException;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The value of key: ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" cannot be null");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r20;

     label2:
        $z1 = $r5 instanceof java.lang.String;

        if $z1 == 0 goto label3;

        r27 = (java.lang.String) $r5;

        $r19 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r15.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>("", r27, $r19);

        goto label7;

     label3:
        $z2 = $r5 instanceof groovy.xml.QName;

        if $z2 == 0 goto label4;

        r28 = (groovy.xml.QName) $r5;

        $r16 = virtualinvoke r28.<groovy.xml.QName: java.lang.String getNamespaceURI()>();

        $r17 = virtualinvoke r28.<groovy.xml.QName: java.lang.String getQualifiedName()>();

        $r18 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r15.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>($r16, $r17, $r18);

        goto label7;

     label4:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The key: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" should be an instanceof of ");

        $r12 = <groovy.xml.DOMBuilder: java.lang.Class class$groovy$xml$QName>;

        if $r12 != null goto label5;

        $r29 = staticinvoke <groovy.xml.DOMBuilder: java.lang.Class class$(java.lang.String)>("groovy.xml.QName");

        <groovy.xml.DOMBuilder: java.lang.Class class$groovy$xml$QName> = $r29;

        goto label6;

     label5:
        $r29 = <groovy.xml.DOMBuilder: java.lang.Class class$groovy$xml$QName>;

     label6:
        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r29);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r7;

     label7:
        goto label1;

     label8:
        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
