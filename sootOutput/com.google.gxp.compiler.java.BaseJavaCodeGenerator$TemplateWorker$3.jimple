final class com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$3 extends java.lang.Object implements com.google.gxp.com.google.common.base.Function
{
    final com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker this$0;

    void <init>(com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker)
    {
        com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker r1;
        com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$3 r0;

        r0 := @this: com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$3;

        r1 := @parameter0: com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker;

        r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$3: com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String apply(com.google.gxp.compiler.base.ImplementsDeclaration)
    {
        com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker $r2;
        com.google.gxp.compiler.base.ImplementsDeclaration r0;
        java.lang.Object $r4;
        com.google.gxp.compiler.base.ImplementsVisitor $r3;
        java.lang.String $r5;
        com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$3 r1;

        r1 := @this: com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$3;

        r0 := @parameter0: com.google.gxp.compiler.base.ImplementsDeclaration;

        $r2 = r1.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$3: com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker this$0>;

        $r3 = staticinvoke <com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.base.ImplementsVisitor access$800(com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker)>($r2);

        $r4 = virtualinvoke r0.<com.google.gxp.compiler.base.ImplementsDeclaration: java.lang.Object acceptImplementsVisitor(com.google.gxp.compiler.base.ImplementsVisitor)>($r3);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        com.google.gxp.compiler.base.ImplementsDeclaration $r2;
        java.lang.Object r1;
        java.lang.String $r3;
        com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$3 r0;

        r0 := @this: com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gxp.compiler.base.ImplementsDeclaration) r1;

        $r3 = virtualinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$3: java.lang.String apply(com.google.gxp.compiler.base.ImplementsDeclaration)>($r2);

        return $r3;
    }
}
