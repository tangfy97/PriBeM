final class org.apache.lucene.index.MultiDocValues$1 extends org.apache.lucene.index.NumericDocValues
{
    final int[] val$starts;
    final org.apache.lucene.index.NumericDocValues[] val$values;

    void <init>(int[], org.apache.lucene.index.NumericDocValues[])
    {
        org.apache.lucene.index.MultiDocValues$1 r0;
        int[] r1;
        org.apache.lucene.index.NumericDocValues[] r2;

        r0 := @this: org.apache.lucene.index.MultiDocValues$1;

        r1 := @parameter0: int[];

        r2 := @parameter1: org.apache.lucene.index.NumericDocValues[];

        r0.<org.apache.lucene.index.MultiDocValues$1: int[] val$starts> = r1;

        r0.<org.apache.lucene.index.MultiDocValues$1: org.apache.lucene.index.NumericDocValues[] val$values> = r2;

        specialinvoke r0.<org.apache.lucene.index.NumericDocValues: void <init>()>();

        return;
    }

    public long get(int)
    {
        org.apache.lucene.index.NumericDocValues $r4;
        org.apache.lucene.index.NumericDocValues[] $r2;
        long $l4;
        int[] $r1, $r3;
        int i0, $i1, $i2, $i3;
        org.apache.lucene.index.MultiDocValues$1 r0;

        r0 := @this: org.apache.lucene.index.MultiDocValues$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.index.MultiDocValues$1: int[] val$starts>;

        $i1 = staticinvoke <org.apache.lucene.index.ReaderUtil: int subIndex(int,int[])>(i0, $r1);

        $r2 = r0.<org.apache.lucene.index.MultiDocValues$1: org.apache.lucene.index.NumericDocValues[] val$values>;

        $r4 = $r2[$i1];

        $r3 = r0.<org.apache.lucene.index.MultiDocValues$1: int[] val$starts>;

        $i2 = $r3[$i1];

        $i3 = i0 - $i2;

        $l4 = virtualinvoke $r4.<org.apache.lucene.index.NumericDocValues: long get(int)>($i3);

        return $l4;
    }
}
