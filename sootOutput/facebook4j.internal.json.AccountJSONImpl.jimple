final class facebook4j.internal.json.AccountJSONImpl extends facebook4j.internal.json.FacebookResponseImpl implements facebook4j.Account, java.io.Serializable
{
    private static final long serialVersionUID;
    private java.lang.String name;
    private java.lang.String accessToken;
    private java.lang.String category;
    private java.lang.String id;
    private java.util.List perms;

    void <init>(facebook4j.internal.http.HttpResponse, facebook4j.conf.Configuration) throws facebook4j.FacebookException
    {
        facebook4j.conf.Configuration r3;
        facebook4j.internal.json.AccountJSONImpl r0;
        facebook4j.internal.org.json.JSONObject $r2;
        facebook4j.internal.http.HttpResponse r1;
        boolean $z0;

        r0 := @this: facebook4j.internal.json.AccountJSONImpl;

        r1 := @parameter0: facebook4j.internal.http.HttpResponse;

        r3 := @parameter1: facebook4j.conf.Configuration;

        specialinvoke r0.<facebook4j.internal.json.FacebookResponseImpl: void <init>(facebook4j.internal.http.HttpResponse)>(r1);

        $r2 = virtualinvoke r1.<facebook4j.internal.http.HttpResponse: facebook4j.internal.org.json.JSONObject asJSONObject()>();

        specialinvoke r0.<facebook4j.internal.json.AccountJSONImpl: void init(facebook4j.internal.org.json.JSONObject)>($r2);

        $z0 = interfaceinvoke r3.<facebook4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label1;

        staticinvoke <facebook4j.internal.json.DataObjectFactoryUtil: void clearThreadLocalMap()>();

        staticinvoke <facebook4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>(r0, $r2);

     label1:
        return;
    }

    void <init>(facebook4j.internal.org.json.JSONObject) throws facebook4j.FacebookException
    {
        facebook4j.internal.json.AccountJSONImpl r0;
        facebook4j.internal.org.json.JSONObject r1;

        r0 := @this: facebook4j.internal.json.AccountJSONImpl;

        r1 := @parameter0: facebook4j.internal.org.json.JSONObject;

        specialinvoke r0.<facebook4j.internal.json.FacebookResponseImpl: void <init>()>();

        specialinvoke r0.<facebook4j.internal.json.AccountJSONImpl: void init(facebook4j.internal.org.json.JSONObject)>(r1);

        return;
    }

    private void init(facebook4j.internal.org.json.JSONObject) throws facebook4j.FacebookException
    {
        java.util.ArrayList $r7;
        facebook4j.internal.org.json.JSONObject r1;
        int $i0, i1;
        java.lang.String $r2, $r3, $r4, $r10, $r11;
        boolean $z0, $z1;
        java.util.List $r5, $r8;
        facebook4j.internal.json.AccountJSONImpl r0;
        facebook4j.internal.org.json.JSONException $r12;
        facebook4j.FacebookException $r13;
        facebook4j.internal.org.json.JSONArray $r6;
        java.lang.Object $r9;

        r0 := @this: facebook4j.internal.json.AccountJSONImpl;

        r1 := @parameter0: facebook4j.internal.org.json.JSONObject;

     label1:
        $r2 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.String getRawString(java.lang.String,facebook4j.internal.org.json.JSONObject)>("name", r1);

        r0.<facebook4j.internal.json.AccountJSONImpl: java.lang.String name> = $r2;

        $z0 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("access_token");

        if $z0 != 0 goto label2;

        $r11 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.String getRawString(java.lang.String,facebook4j.internal.org.json.JSONObject)>("access_token", r1);

        r0.<facebook4j.internal.json.AccountJSONImpl: java.lang.String accessToken> = $r11;

     label2:
        $r3 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.String getRawString(java.lang.String,facebook4j.internal.org.json.JSONObject)>("category", r1);

        r0.<facebook4j.internal.json.AccountJSONImpl: java.lang.String category> = $r3;

        $r4 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.String getRawString(java.lang.String,facebook4j.internal.org.json.JSONObject)>("id", r1);

        r0.<facebook4j.internal.json.AccountJSONImpl: java.lang.String id> = $r4;

        $z1 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("perms");

        if $z1 != 0 goto label5;

        $r6 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: facebook4j.internal.org.json.JSONArray getJSONArray(java.lang.String)>("perms");

        $i0 = virtualinvoke $r6.<facebook4j.internal.org.json.JSONArray: int length()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<facebook4j.internal.json.AccountJSONImpl: java.util.List perms> = $r7;

        i1 = 0;

     label3:
        if i1 >= $i0 goto label4;

        $r8 = r0.<facebook4j.internal.json.AccountJSONImpl: java.util.List perms>;

        $r9 = virtualinvoke $r6.<facebook4j.internal.org.json.JSONArray: java.lang.Object get(int)>(i1);

        $r10 = (java.lang.String) $r9;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r10);

        i1 = i1 + 1;

        goto label3;

     label4:
        goto label6;

     label5:
        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<facebook4j.internal.json.AccountJSONImpl: java.util.List perms> = $r5;

     label6:
        goto label8;

     label7:
        $r12 := @caughtexception;

        $r13 = new facebook4j.FacebookException;

        specialinvoke $r13.<facebook4j.FacebookException: void <init>(java.lang.Throwable)>($r12);

        throw $r13;

     label8:
        return;

        catch facebook4j.internal.org.json.JSONException from label1 to label6 with label7;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        facebook4j.internal.json.AccountJSONImpl r0;

        r0 := @this: facebook4j.internal.json.AccountJSONImpl;

        $r1 = r0.<facebook4j.internal.json.AccountJSONImpl: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getAccessToken()
    {
        java.lang.String $r1;
        facebook4j.internal.json.AccountJSONImpl r0;

        r0 := @this: facebook4j.internal.json.AccountJSONImpl;

        $r1 = r0.<facebook4j.internal.json.AccountJSONImpl: java.lang.String accessToken>;

        return $r1;
    }

    public java.lang.String getCategory()
    {
        java.lang.String $r1;
        facebook4j.internal.json.AccountJSONImpl r0;

        r0 := @this: facebook4j.internal.json.AccountJSONImpl;

        $r1 = r0.<facebook4j.internal.json.AccountJSONImpl: java.lang.String category>;

        return $r1;
    }

    public java.lang.String getId()
    {
        java.lang.String $r1;
        facebook4j.internal.json.AccountJSONImpl r0;

        r0 := @this: facebook4j.internal.json.AccountJSONImpl;

        $r1 = r0.<facebook4j.internal.json.AccountJSONImpl: java.lang.String id>;

        return $r1;
    }

    public java.util.List getPerms()
    {
        java.util.List $r1;
        facebook4j.internal.json.AccountJSONImpl r0;

        r0 := @this: facebook4j.internal.json.AccountJSONImpl;

        $r1 = r0.<facebook4j.internal.json.AccountJSONImpl: java.util.List perms>;

        return $r1;
    }

    static facebook4j.ResponseList createAccountList(facebook4j.internal.http.HttpResponse, facebook4j.conf.Configuration) throws facebook4j.FacebookException
    {
        facebook4j.Account[] $r5;
        facebook4j.conf.Configuration r0;
        facebook4j.internal.http.HttpResponse r1;
        facebook4j.internal.json.ResponseListImpl $r4;
        facebook4j.internal.org.json.JSONObject $r2, $r6;
        facebook4j.internal.json.AccountJSONImpl $r7;
        facebook4j.internal.org.json.JSONException $r8;
        facebook4j.FacebookException $r9;
        int $i0, i1;
        facebook4j.internal.org.json.JSONArray $r3;
        boolean $z0, $z1, $z2;

        r1 := @parameter0: facebook4j.internal.http.HttpResponse;

        r0 := @parameter1: facebook4j.conf.Configuration;

     label1:
        $z0 = interfaceinvoke r0.<facebook4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label2;

        staticinvoke <facebook4j.internal.json.DataObjectFactoryUtil: void clearThreadLocalMap()>();

     label2:
        $r2 = virtualinvoke r1.<facebook4j.internal.http.HttpResponse: facebook4j.internal.org.json.JSONObject asJSONObject()>();

        $r3 = virtualinvoke $r2.<facebook4j.internal.org.json.JSONObject: facebook4j.internal.org.json.JSONArray getJSONArray(java.lang.String)>("data");

        $i0 = virtualinvoke $r3.<facebook4j.internal.org.json.JSONArray: int length()>();

        $r4 = new facebook4j.internal.json.ResponseListImpl;

        $r5 = newarray (facebook4j.Account)[0];

        specialinvoke $r4.<facebook4j.internal.json.ResponseListImpl: void <init>(int,facebook4j.internal.org.json.JSONObject,java.lang.Object[])>($i0, $r2, $r5);

        i1 = 0;

     label3:
        if i1 >= $i0 goto label5;

        $r6 = virtualinvoke $r3.<facebook4j.internal.org.json.JSONArray: facebook4j.internal.org.json.JSONObject getJSONObject(int)>(i1);

        $r7 = new facebook4j.internal.json.AccountJSONImpl;

        specialinvoke $r7.<facebook4j.internal.json.AccountJSONImpl: void <init>(facebook4j.internal.org.json.JSONObject)>($r6);

        $z2 = interfaceinvoke r0.<facebook4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z2 == 0 goto label4;

        staticinvoke <facebook4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r7, $r6);

     label4:
        interfaceinvoke $r4.<facebook4j.ResponseList: boolean add(java.lang.Object)>($r7);

        i1 = i1 + 1;

        goto label3;

     label5:
        $z1 = interfaceinvoke r0.<facebook4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z1 == 0 goto label6;

        staticinvoke <facebook4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r4, $r3);

     label6:
        return $r4;

     label7:
        $r8 := @caughtexception;

        $r9 = new facebook4j.FacebookException;

        specialinvoke $r9.<facebook4j.FacebookException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

        catch facebook4j.internal.org.json.JSONException from label1 to label6 with label7;
    }

    public int hashCode()
    {
        facebook4j.internal.json.AccountJSONImpl r0;
        int $i0, $i1;
        java.lang.String $r1, $r2;

        r0 := @this: facebook4j.internal.json.AccountJSONImpl;

        $r1 = r0.<facebook4j.internal.json.AccountJSONImpl: java.lang.String id>;

        if $r1 != null goto label1;

        $i1 = 0;

        goto label2;

     label1:
        $r2 = r0.<facebook4j.internal.json.AccountJSONImpl: java.lang.String id>;

        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

     label2:
        $i0 = 31 + $i1;

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        facebook4j.internal.json.AccountJSONImpl r0, r4;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        java.lang.String $r5, $r6, $r7, $r8;
        boolean $z0;

        r0 := @this: facebook4j.internal.json.AccountJSONImpl;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        r4 = (facebook4j.internal.json.AccountJSONImpl) r1;

        $r5 = r0.<facebook4j.internal.json.AccountJSONImpl: java.lang.String id>;

        if $r5 != null goto label4;

        $r8 = r4.<facebook4j.internal.json.AccountJSONImpl: java.lang.String id>;

        if $r8 == null goto label5;

        return 0;

     label4:
        $r7 = r0.<facebook4j.internal.json.AccountJSONImpl: java.lang.String id>;

        $r6 = r4.<facebook4j.internal.json.AccountJSONImpl: java.lang.String id>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    public java.lang.String toString()
    {
        java.lang.String $r3, $r7, $r11, $r15, $r22;
        java.util.List $r19;
        facebook4j.internal.json.AccountJSONImpl r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r6, $r8, $r9, $r10, $r12, $r13, $r14, $r16, $r17, $r18, $r20, $r21;

        r2 := @this: facebook4j.internal.json.AccountJSONImpl;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AccountJSONImpl{name=\'");

        $r3 = r2.<facebook4j.internal.json.AccountJSONImpl: java.lang.String name>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", accessToken=\'");

        $r7 = r2.<facebook4j.internal.json.AccountJSONImpl: java.lang.String accessToken>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", category=\'");

        $r11 = r2.<facebook4j.internal.json.AccountJSONImpl: java.lang.String category>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", id=\'");

        $r15 = r2.<facebook4j.internal.json.AccountJSONImpl: java.lang.String id>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", perms=");

        $r19 = r2.<facebook4j.internal.json.AccountJSONImpl: java.util.List perms>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r22;
    }

    public static void <clinit>()
    {
        <facebook4j.internal.json.AccountJSONImpl: long serialVersionUID> = 1311323662169212743L;

        return;
    }
}
