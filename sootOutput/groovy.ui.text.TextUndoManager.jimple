public class groovy.ui.text.TextUndoManager extends javax.swing.undo.UndoManager
{
    private javax.swing.event.SwingPropertyChangeSupport propChangeSupport;
    private groovy.ui.text.TextUndoManager$StructuredEdit compoundEdit;
    private long firstModified;
    private javax.swing.undo.UndoableEdit modificationMarker;

    public void <init>()
    {
        javax.swing.undo.UndoableEdit $r3;
        groovy.ui.text.TextUndoManager r0;
        javax.swing.event.SwingPropertyChangeSupport $r1;
        groovy.ui.text.TextUndoManager$StructuredEdit $r2;

        r0 := @this: groovy.ui.text.TextUndoManager;

        specialinvoke r0.<javax.swing.undo.UndoManager: void <init>()>();

        $r1 = new javax.swing.event.SwingPropertyChangeSupport;

        specialinvoke $r1.<javax.swing.event.SwingPropertyChangeSupport: void <init>(java.lang.Object)>(r0);

        r0.<groovy.ui.text.TextUndoManager: javax.swing.event.SwingPropertyChangeSupport propChangeSupport> = $r1;

        $r2 = new groovy.ui.text.TextUndoManager$StructuredEdit;

        specialinvoke $r2.<groovy.ui.text.TextUndoManager$StructuredEdit: void <init>(groovy.ui.text.TextUndoManager,groovy.ui.text.TextUndoManager$1)>(r0, null);

        r0.<groovy.ui.text.TextUndoManager: groovy.ui.text.TextUndoManager$StructuredEdit compoundEdit> = $r2;

        $r3 = virtualinvoke r0.<groovy.ui.text.TextUndoManager: javax.swing.undo.UndoableEdit editToBeUndone()>();

        r0.<groovy.ui.text.TextUndoManager: javax.swing.undo.UndoableEdit modificationMarker> = $r3;

        return;
    }

    public void addPropertyChangeListener(java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeListener r1;
        javax.swing.event.SwingPropertyChangeSupport $r2;
        groovy.ui.text.TextUndoManager r0;

        r0 := @this: groovy.ui.text.TextUndoManager;

        r1 := @parameter0: java.beans.PropertyChangeListener;

        $r2 = r0.<groovy.ui.text.TextUndoManager: javax.swing.event.SwingPropertyChangeSupport propChangeSupport>;

        virtualinvoke $r2.<javax.swing.event.SwingPropertyChangeSupport: void addPropertyChangeListener(java.beans.PropertyChangeListener)>(r1);

        return;
    }

    public void die()
    {
        groovy.ui.text.TextUndoManager r0;
        boolean $z0, $z1;

        r0 := @this: groovy.ui.text.TextUndoManager;

        $z0 = virtualinvoke r0.<groovy.ui.text.TextUndoManager: boolean canUndo()>();

        specialinvoke r0.<javax.swing.undo.UndoManager: void die()>();

        $z1 = virtualinvoke r0.<groovy.ui.text.TextUndoManager: boolean canUndo()>();

        virtualinvoke r0.<groovy.ui.text.TextUndoManager: void firePropertyChangeEvent(java.lang.String,boolean,boolean)>("Undo", $z0, $z1);

        return;
    }

    public void discardAllEdits()
    {
        javax.swing.undo.UndoableEdit $r1;
        groovy.ui.text.TextUndoManager r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: groovy.ui.text.TextUndoManager;

        $z0 = virtualinvoke r0.<groovy.ui.text.TextUndoManager: boolean canUndo()>();

        $z1 = virtualinvoke r0.<groovy.ui.text.TextUndoManager: boolean canRedo()>();

        virtualinvoke r0.<groovy.ui.text.TextUndoManager: boolean hasChanged()>();

        specialinvoke r0.<javax.swing.undo.UndoManager: void discardAllEdits()>();

        $r1 = virtualinvoke r0.<groovy.ui.text.TextUndoManager: javax.swing.undo.UndoableEdit editToBeUndone()>();

        r0.<groovy.ui.text.TextUndoManager: javax.swing.undo.UndoableEdit modificationMarker> = $r1;

        $z2 = virtualinvoke r0.<groovy.ui.text.TextUndoManager: boolean canUndo()>();

        virtualinvoke r0.<groovy.ui.text.TextUndoManager: void firePropertyChangeEvent(java.lang.String,boolean,boolean)>("Undo", $z0, $z2);

        $z3 = virtualinvoke r0.<groovy.ui.text.TextUndoManager: boolean canRedo()>();

        virtualinvoke r0.<groovy.ui.text.TextUndoManager: void firePropertyChangeEvent(java.lang.String,boolean,boolean)>("Undo", $z1, $z3);

        return;
    }

    protected void firePropertyChangeEvent(java.lang.String, boolean, boolean)
    {
        groovy.ui.text.TextUndoManager r0;
        java.lang.String r1;
        javax.swing.event.SwingPropertyChangeSupport $r2;
        boolean z0, z1;

        r0 := @this: groovy.ui.text.TextUndoManager;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r2 = r0.<groovy.ui.text.TextUndoManager: javax.swing.event.SwingPropertyChangeSupport propChangeSupport>;

        virtualinvoke $r2.<javax.swing.event.SwingPropertyChangeSupport: void firePropertyChange(java.lang.String,boolean,boolean)>(r1, z0, z1);

        return;
    }

    public boolean hasChanged()
    {
        javax.swing.undo.UndoableEdit $r1, $r2;
        groovy.ui.text.TextUndoManager r0;
        boolean $z0;

        r0 := @this: groovy.ui.text.TextUndoManager;

        $r1 = r0.<groovy.ui.text.TextUndoManager: javax.swing.undo.UndoableEdit modificationMarker>;

        $r2 = virtualinvoke r0.<groovy.ui.text.TextUndoManager: javax.swing.undo.UndoableEdit editToBeUndone()>();

        if $r1 == $r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void redo() throws javax.swing.undo.CannotRedoException
    {
        javax.swing.undo.UndoableEdit $r2;
        long $l0, $l2;
        byte $b1;
        groovy.ui.text.TextUndoManager r0;
        groovy.ui.text.TextUndoManager$StructuredEdit $r1, $r3;
        boolean $z0, $z1;

        r0 := @this: groovy.ui.text.TextUndoManager;

        $r1 = r0.<groovy.ui.text.TextUndoManager: groovy.ui.text.TextUndoManager$StructuredEdit compoundEdit>;

        virtualinvoke $r1.<groovy.ui.text.TextUndoManager$StructuredEdit: void end()>();

        $l0 = r0.<groovy.ui.text.TextUndoManager: long firstModified>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r2 = virtualinvoke r0.<groovy.ui.text.TextUndoManager: javax.swing.undo.UndoableEdit editToBeRedone()>();

        $r3 = (groovy.ui.text.TextUndoManager$StructuredEdit) $r2;

        $l2 = virtualinvoke $r3.<groovy.ui.text.TextUndoManager$StructuredEdit: long editedTime()>();

        r0.<groovy.ui.text.TextUndoManager: long firstModified> = $l2;

     label1:
        $z0 = virtualinvoke r0.<groovy.ui.text.TextUndoManager: boolean canUndo()>();

        virtualinvoke r0.<groovy.ui.text.TextUndoManager: boolean hasChanged()>();

        specialinvoke r0.<javax.swing.undo.UndoManager: void redo()>();

        $z1 = virtualinvoke r0.<groovy.ui.text.TextUndoManager: boolean canUndo()>();

        virtualinvoke r0.<groovy.ui.text.TextUndoManager: void firePropertyChangeEvent(java.lang.String,boolean,boolean)>("Undo", $z0, $z1);

        return;
    }

    protected void redoTo(javax.swing.undo.UndoableEdit)
    {
        javax.swing.undo.UndoableEdit r2, $r3;
        long $l0, $l2;
        byte $b1;
        groovy.ui.text.TextUndoManager r0;
        groovy.ui.text.TextUndoManager$StructuredEdit $r1, $r4;
        boolean $z0, $z1;

        r0 := @this: groovy.ui.text.TextUndoManager;

        r2 := @parameter0: javax.swing.undo.UndoableEdit;

        $r1 = r0.<groovy.ui.text.TextUndoManager: groovy.ui.text.TextUndoManager$StructuredEdit compoundEdit>;

        virtualinvoke $r1.<groovy.ui.text.TextUndoManager$StructuredEdit: void end()>();

        $l0 = r0.<groovy.ui.text.TextUndoManager: long firstModified>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r3 = virtualinvoke r0.<groovy.ui.text.TextUndoManager: javax.swing.undo.UndoableEdit editToBeRedone()>();

        $r4 = (groovy.ui.text.TextUndoManager$StructuredEdit) $r3;

        $l2 = virtualinvoke $r4.<groovy.ui.text.TextUndoManager$StructuredEdit: long editedTime()>();

        r0.<groovy.ui.text.TextUndoManager: long firstModified> = $l2;

     label1:
        $z0 = virtualinvoke r0.<groovy.ui.text.TextUndoManager: boolean canUndo()>();

        virtualinvoke r0.<groovy.ui.text.TextUndoManager: boolean hasChanged()>();

        specialinvoke r0.<javax.swing.undo.UndoManager: void redoTo(javax.swing.undo.UndoableEdit)>(r2);

        $z1 = virtualinvoke r0.<groovy.ui.text.TextUndoManager: boolean canUndo()>();

        virtualinvoke r0.<groovy.ui.text.TextUndoManager: void firePropertyChangeEvent(java.lang.String,boolean,boolean)>("Undo", $z0, $z1);

        return;
    }

    public void removePropertyChangeListener(java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeListener r1;
        javax.swing.event.SwingPropertyChangeSupport $r2;
        groovy.ui.text.TextUndoManager r0;

        r0 := @this: groovy.ui.text.TextUndoManager;

        r1 := @parameter0: java.beans.PropertyChangeListener;

        $r2 = r0.<groovy.ui.text.TextUndoManager: javax.swing.event.SwingPropertyChangeSupport propChangeSupport>;

        virtualinvoke $r2.<javax.swing.event.SwingPropertyChangeSupport: void removePropertyChangeListener(java.beans.PropertyChangeListener)>(r1);

        return;
    }

    public void reset()
    {
        javax.swing.undo.UndoableEdit $r1, $r2, $r3;
        groovy.ui.text.TextUndoManager r0;
        boolean $z0;

        r0 := @this: groovy.ui.text.TextUndoManager;

        $r1 = r0.<groovy.ui.text.TextUndoManager: javax.swing.undo.UndoableEdit modificationMarker>;

        $r2 = virtualinvoke r0.<groovy.ui.text.TextUndoManager: javax.swing.undo.UndoableEdit editToBeUndone()>();

        if $r1 == $r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = virtualinvoke r0.<groovy.ui.text.TextUndoManager: javax.swing.undo.UndoableEdit editToBeUndone()>();

        r0.<groovy.ui.text.TextUndoManager: javax.swing.undo.UndoableEdit modificationMarker> = $r3;

     label3:
        return;
    }

    protected void trimEdits(int, int)
    {
        groovy.ui.text.TextUndoManager r0;
        int i0, i1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: groovy.ui.text.TextUndoManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<groovy.ui.text.TextUndoManager: boolean canUndo()>();

        $z1 = virtualinvoke r0.<groovy.ui.text.TextUndoManager: boolean canRedo()>();

        virtualinvoke r0.<groovy.ui.text.TextUndoManager: boolean hasChanged()>();

        specialinvoke r0.<javax.swing.undo.UndoManager: void trimEdits(int,int)>(i0, i1);

        $z2 = virtualinvoke r0.<groovy.ui.text.TextUndoManager: boolean canUndo()>();

        virtualinvoke r0.<groovy.ui.text.TextUndoManager: void firePropertyChangeEvent(java.lang.String,boolean,boolean)>("Undo", $z0, $z2);

        $z3 = virtualinvoke r0.<groovy.ui.text.TextUndoManager: boolean canRedo()>();

        virtualinvoke r0.<groovy.ui.text.TextUndoManager: void firePropertyChangeEvent(java.lang.String,boolean,boolean)>("Redo", $z1, $z3);

        return;
    }

    public void undo() throws javax.swing.undo.CannotUndoException
    {
        javax.swing.undo.UndoableEdit $r2, $r4;
        long $l0, $l1, $l3, $l5;
        byte $b2, $b4;
        groovy.ui.text.TextUndoManager r0;
        groovy.ui.text.TextUndoManager$StructuredEdit $r1, $r3, $r5;
        boolean $z0, $z1;

        r0 := @this: groovy.ui.text.TextUndoManager;

        $r1 = r0.<groovy.ui.text.TextUndoManager: groovy.ui.text.TextUndoManager$StructuredEdit compoundEdit>;

        virtualinvoke $r1.<groovy.ui.text.TextUndoManager$StructuredEdit: void end()>();

        virtualinvoke r0.<groovy.ui.text.TextUndoManager: javax.swing.undo.UndoableEdit editToBeUndone()>();

        $r2 = virtualinvoke r0.<groovy.ui.text.TextUndoManager: javax.swing.undo.UndoableEdit editToBeUndone()>();

        $r3 = (groovy.ui.text.TextUndoManager$StructuredEdit) $r2;

        $l0 = virtualinvoke $r3.<groovy.ui.text.TextUndoManager$StructuredEdit: long editedTime()>();

        $l1 = r0.<groovy.ui.text.TextUndoManager: long firstModified>;

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label1;

        r0.<groovy.ui.text.TextUndoManager: long firstModified> = 0L;

        goto label2;

     label1:
        $l3 = r0.<groovy.ui.text.TextUndoManager: long firstModified>;

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label2;

        $r4 = virtualinvoke r0.<groovy.ui.text.TextUndoManager: javax.swing.undo.UndoableEdit editToBeUndone()>();

        $r5 = (groovy.ui.text.TextUndoManager$StructuredEdit) $r4;

        $l5 = virtualinvoke $r5.<groovy.ui.text.TextUndoManager$StructuredEdit: long editedTime()>();

        r0.<groovy.ui.text.TextUndoManager: long firstModified> = $l5;

     label2:
        $z0 = virtualinvoke r0.<groovy.ui.text.TextUndoManager: boolean canRedo()>();

        virtualinvoke r0.<groovy.ui.text.TextUndoManager: boolean hasChanged()>();

        specialinvoke r0.<javax.swing.undo.UndoManager: void undo()>();

        $z1 = virtualinvoke r0.<groovy.ui.text.TextUndoManager: boolean canRedo()>();

        virtualinvoke r0.<groovy.ui.text.TextUndoManager: void firePropertyChangeEvent(java.lang.String,boolean,boolean)>("Redo", $z0, $z1);

        return;
    }

    public void undoableEditHappened(javax.swing.event.UndoableEditEvent)
    {
        long $l0, $l1, $l3, $l4, $l6, $l8;
        byte $b2, $b5, $b7;
        groovy.ui.text.TextUndoManager r2;
        int $i9;
        groovy.ui.text.TextUndoManager$StructuredEdit $r3, $r6, $r7, $r8, $r9, $r10, $r11;
        boolean $z0, $z1;
        javax.swing.undo.UndoableEdit $r1, $r5;
        javax.swing.event.UndoableEditEvent r0;

        r2 := @this: groovy.ui.text.TextUndoManager;

        r0 := @parameter0: javax.swing.event.UndoableEditEvent;

        $r1 = virtualinvoke r0.<javax.swing.event.UndoableEditEvent: javax.swing.undo.UndoableEdit getEdit()>();

        $z0 = virtualinvoke r2.<groovy.ui.text.TextUndoManager: boolean canUndo()>();

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = r2.<groovy.ui.text.TextUndoManager: long firstModified>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        $r9 = r2.<groovy.ui.text.TextUndoManager: groovy.ui.text.TextUndoManager$StructuredEdit compoundEdit>;

        $l3 = virtualinvoke $r9.<groovy.ui.text.TextUndoManager$StructuredEdit: long editedTime()>();

        $l4 = $l0 - $l3;

        $b5 = $l4 cmp 700L;

        $i9 = (int) $b5;

        if $i9 <= 0 goto label2;

     label1:
        $r3 = r2.<groovy.ui.text.TextUndoManager: groovy.ui.text.TextUndoManager$StructuredEdit compoundEdit>;

        virtualinvoke $r3.<groovy.ui.text.TextUndoManager$StructuredEdit: void end()>();

        $r11 = new groovy.ui.text.TextUndoManager$StructuredEdit;

        specialinvoke $r11.<groovy.ui.text.TextUndoManager$StructuredEdit: void <init>(groovy.ui.text.TextUndoManager,groovy.ui.text.TextUndoManager$1)>(r2, null);

        r2.<groovy.ui.text.TextUndoManager: groovy.ui.text.TextUndoManager$StructuredEdit compoundEdit> = $r11;

     label2:
        $r10 = r2.<groovy.ui.text.TextUndoManager: groovy.ui.text.TextUndoManager$StructuredEdit compoundEdit>;

        virtualinvoke $r10.<groovy.ui.text.TextUndoManager$StructuredEdit: boolean addEdit(javax.swing.undo.UndoableEdit)>($r1);

        $l6 = r2.<groovy.ui.text.TextUndoManager: long firstModified>;

        $b7 = $l6 cmp 0L;

        if $b7 != 0 goto label3;

        $r8 = r2.<groovy.ui.text.TextUndoManager: groovy.ui.text.TextUndoManager$StructuredEdit compoundEdit>;

        $l8 = virtualinvoke $r8.<groovy.ui.text.TextUndoManager$StructuredEdit: long editedTime()>();

        goto label4;

     label3:
        $l8 = r2.<groovy.ui.text.TextUndoManager: long firstModified>;

     label4:
        r2.<groovy.ui.text.TextUndoManager: long firstModified> = $l8;

        $r5 = virtualinvoke r2.<groovy.ui.text.TextUndoManager: javax.swing.undo.UndoableEdit lastEdit()>();

        $r6 = r2.<groovy.ui.text.TextUndoManager: groovy.ui.text.TextUndoManager$StructuredEdit compoundEdit>;

        if $r5 == $r6 goto label5;

        virtualinvoke r2.<groovy.ui.text.TextUndoManager: boolean hasChanged()>();

        $r7 = r2.<groovy.ui.text.TextUndoManager: groovy.ui.text.TextUndoManager$StructuredEdit compoundEdit>;

        virtualinvoke r2.<groovy.ui.text.TextUndoManager: boolean addEdit(javax.swing.undo.UndoableEdit)>($r7);

        $z1 = virtualinvoke r2.<groovy.ui.text.TextUndoManager: boolean canUndo()>();

        virtualinvoke r2.<groovy.ui.text.TextUndoManager: void firePropertyChangeEvent(java.lang.String,boolean,boolean)>("Undo", $z0, $z1);

     label5:
        return;
    }
}
