class com.mycila.inject.internal.guava.collect.MapConstraints$2$1 extends java.lang.Object implements com.mycila.inject.internal.guava.collect.Constraint
{
    final com.mycila.inject.internal.guava.collect.MapConstraints$2 this$0;

    void <init>(com.mycila.inject.internal.guava.collect.MapConstraints$2)
    {
        com.mycila.inject.internal.guava.collect.MapConstraints$2$1 r0;
        com.mycila.inject.internal.guava.collect.MapConstraints$2 r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.MapConstraints$2$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.MapConstraints$2;

        r0.<com.mycila.inject.internal.guava.collect.MapConstraints$2$1: com.mycila.inject.internal.guava.collect.MapConstraints$2 this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object checkElement(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.MapConstraints$2$1 r0;
        java.lang.Object $r4, r5;
        com.mycila.inject.internal.guava.collect.MapConstraint $r3;
        com.mycila.inject.internal.guava.collect.MapConstraints$2 $r1, $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.MapConstraints$2$1;

        r5 := @parameter0: java.lang.Object;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.MapConstraints$2$1: com.mycila.inject.internal.guava.collect.MapConstraints$2 this$0>;

        $r3 = $r1.<com.mycila.inject.internal.guava.collect.MapConstraints$2: com.mycila.inject.internal.guava.collect.MapConstraint val$constraint>;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.MapConstraints$2$1: com.mycila.inject.internal.guava.collect.MapConstraints$2 this$0>;

        $r4 = virtualinvoke $r2.<com.mycila.inject.internal.guava.collect.MapConstraints$2: java.lang.Object getKey()>();

        interfaceinvoke $r3.<com.mycila.inject.internal.guava.collect.MapConstraint: void checkKeyValue(java.lang.Object,java.lang.Object)>($r4, r5);

        return r5;
    }
}
