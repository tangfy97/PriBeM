public final class org.apache.poi.xssf.usermodel.XSSFChart extends org.apache.poi.POIXMLDocumentPart implements org.apache.poi.ss.usermodel.Chart, org.apache.poi.ss.usermodel.charts.ChartAxisFactory
{
    private org.apache.poi.xssf.usermodel.XSSFGraphicFrame frame;
    private org.openxmlformats.schemas.drawingml.x2006.chart.CTChartSpace chartSpace;
    private org.openxmlformats.schemas.drawingml.x2006.chart.CTChart chart;
    java.util.List axis;

    protected void <init>()
    {
        org.apache.poi.xssf.usermodel.XSSFChart r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        specialinvoke r0.<org.apache.poi.POIXMLDocumentPart: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xssf.usermodel.XSSFChart: java.util.List axis> = $r1;

        specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFChart: void createChart()>();

        return;
    }

    protected void <init>(org.apache.poi.openxml4j.opc.PackagePart, org.apache.poi.openxml4j.opc.PackageRelationship) throws java.io.IOException, org.apache.xmlbeans.XmlException
    {
        org.apache.poi.openxml4j.opc.PackageRelationship r2;
        org.openxmlformats.schemas.drawingml.x2006.chart.ChartSpaceDocument $r4;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTChartSpace $r5, $r6;
        org.apache.poi.openxml4j.opc.PackagePart r1;
        org.apache.poi.xssf.usermodel.XSSFChart r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTChart $r7;
        java.io.InputStream $r3;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        r1 := @parameter0: org.apache.poi.openxml4j.opc.PackagePart;

        r2 := @parameter1: org.apache.poi.openxml4j.opc.PackageRelationship;

        specialinvoke r0.<org.apache.poi.POIXMLDocumentPart: void <init>(org.apache.poi.openxml4j.opc.PackagePart,org.apache.poi.openxml4j.opc.PackageRelationship)>(r1, r2);

        $r3 = virtualinvoke r1.<org.apache.poi.openxml4j.opc.PackagePart: java.io.InputStream getInputStream()>();

        $r4 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.chart.ChartSpaceDocument$Factory: org.openxmlformats.schemas.drawingml.x2006.chart.ChartSpaceDocument parse(java.io.InputStream)>($r3);

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.chart.ChartSpaceDocument: org.openxmlformats.schemas.drawingml.x2006.chart.CTChartSpace getChartSpace()>();

        r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTChartSpace chartSpace> = $r5;

        $r6 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTChartSpace chartSpace>;

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.chart.CTChartSpace: org.openxmlformats.schemas.drawingml.x2006.chart.CTChart getChart()>();

        r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTChart chart> = $r7;

        return;
    }

    private void createChart()
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTPageMargins $r10;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTPrintSettings $r9;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTPlotArea $r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTChartSpace $r1, $r2, $r8;
        org.apache.poi.xssf.usermodel.XSSFChart r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTChart $r3, $r4, $r6;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean $r7;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        $r1 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.chart.CTChartSpace$Factory: org.openxmlformats.schemas.drawingml.x2006.chart.CTChartSpace newInstance()>();

        r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTChartSpace chartSpace> = $r1;

        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTChartSpace chartSpace>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTChartSpace: org.openxmlformats.schemas.drawingml.x2006.chart.CTChart addNewChart()>();

        r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTChart chart> = $r3;

        $r4 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTChart chart>;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.chart.CTChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTPlotArea addNewPlotArea()>();

        interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.chart.CTPlotArea: org.openxmlformats.schemas.drawingml.x2006.chart.CTLayout addNewLayout()>();

        $r6 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTChart chart>;

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.chart.CTChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean addNewPlotVisOnly()>();

        interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean: void setVal(boolean)>(1);

        $r8 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTChartSpace chartSpace>;

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.drawingml.x2006.chart.CTChartSpace: org.openxmlformats.schemas.drawingml.x2006.chart.CTPrintSettings addNewPrintSettings()>();

        interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.chart.CTPrintSettings: org.openxmlformats.schemas.drawingml.x2006.chart.CTHeaderFooter addNewHeaderFooter()>();

        $r10 = interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.chart.CTPrintSettings: org.openxmlformats.schemas.drawingml.x2006.chart.CTPageMargins addNewPageMargins()>();

        interfaceinvoke $r10.<org.openxmlformats.schemas.drawingml.x2006.chart.CTPageMargins: void setB(double)>(0.75);

        interfaceinvoke $r10.<org.openxmlformats.schemas.drawingml.x2006.chart.CTPageMargins: void setL(double)>(0.7);

        interfaceinvoke $r10.<org.openxmlformats.schemas.drawingml.x2006.chart.CTPageMargins: void setR(double)>(0.7);

        interfaceinvoke $r10.<org.openxmlformats.schemas.drawingml.x2006.chart.CTPageMargins: void setT(double)>(0.75);

        interfaceinvoke $r10.<org.openxmlformats.schemas.drawingml.x2006.chart.CTPageMargins: void setHeader(double)>(0.3);

        interfaceinvoke $r10.<org.openxmlformats.schemas.drawingml.x2006.chart.CTPageMargins: void setFooter(double)>(0.3);

        interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.chart.CTPrintSettings: org.openxmlformats.schemas.drawingml.x2006.chart.CTPageSetup addNewPageSetup()>();

        return;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTChartSpace getCTChartSpace()
    {
        org.apache.poi.xssf.usermodel.XSSFChart r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTChartSpace $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTChartSpace chartSpace>;

        return $r1;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTChart getCTChart()
    {
        org.apache.poi.xssf.usermodel.XSSFChart r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTChart $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTChart chart>;

        return $r1;
    }

    protected void commit() throws java.io.IOException
    {
        java.io.OutputStream $r12;
        java.util.HashMap $r6;
        org.apache.xmlbeans.XmlOptions $r0, $r1;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTChartSpace $r13;
        org.apache.poi.openxml4j.opc.PackagePart $r11;
        javax.xml.namespace.QName $r2, $r4, $r8;
        java.lang.String $r5, $r9;
        org.apache.poi.xssf.usermodel.XSSFChart r10;
        org.apache.xmlbeans.SchemaType $r3, $r7;

        r10 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        $r0 = new org.apache.xmlbeans.XmlOptions;

        $r1 = <org.apache.poi.xssf.usermodel.XSSFChart: org.apache.xmlbeans.XmlOptions DEFAULT_XML_OPTIONS>;

        specialinvoke $r0.<org.apache.xmlbeans.XmlOptions: void <init>(org.apache.xmlbeans.XmlOptions)>($r1);

        $r2 = new javax.xml.namespace.QName;

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.CTChartSpace: org.apache.xmlbeans.SchemaType type>;

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $r5 = virtualinvoke $r4.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        specialinvoke $r2.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r5, "chartSpace", "c");

        virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setSaveSyntheticDocumentElement(javax.xml.namespace.QName)>($r2);

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://schemas.openxmlformats.org/drawingml/2006/main", "a");

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://schemas.openxmlformats.org/drawingml/2006/chart", "c");

        $r7 = <org.openxmlformats.schemas.officeDocument.x2006.relationships.STRelationshipId: org.apache.xmlbeans.SchemaType type>;

        $r8 = interfaceinvoke $r7.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $r9 = virtualinvoke $r8.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, "r");

        virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setSaveSuggestedPrefixes(java.util.Map)>($r6);

        $r11 = virtualinvoke r10.<org.apache.poi.xssf.usermodel.XSSFChart: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r12 = virtualinvoke $r11.<org.apache.poi.openxml4j.opc.PackagePart: java.io.OutputStream getOutputStream()>();

        $r13 = r10.<org.apache.poi.xssf.usermodel.XSSFChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTChartSpace chartSpace>;

        interfaceinvoke $r13.<org.openxmlformats.schemas.drawingml.x2006.chart.CTChartSpace: void save(java.io.OutputStream,org.apache.xmlbeans.XmlOptions)>($r12, $r0);

        virtualinvoke $r12.<java.io.OutputStream: void close()>();

        return;
    }

    public org.apache.poi.xssf.usermodel.XSSFGraphicFrame getGraphicFrame()
    {
        org.apache.poi.xssf.usermodel.XSSFGraphicFrame $r1;
        org.apache.poi.xssf.usermodel.XSSFChart r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.apache.poi.xssf.usermodel.XSSFGraphicFrame frame>;

        return $r1;
    }

    protected void setGraphicFrame(org.apache.poi.xssf.usermodel.XSSFGraphicFrame)
    {
        org.apache.poi.xssf.usermodel.XSSFGraphicFrame r1;
        org.apache.poi.xssf.usermodel.XSSFChart r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        r1 := @parameter0: org.apache.poi.xssf.usermodel.XSSFGraphicFrame;

        r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.apache.poi.xssf.usermodel.XSSFGraphicFrame frame> = r1;

        return;
    }

    public org.apache.poi.xssf.usermodel.charts.XSSFChartDataFactory getChartDataFactory()
    {
        org.apache.poi.xssf.usermodel.XSSFChart r1;
        org.apache.poi.xssf.usermodel.charts.XSSFChartDataFactory $r0;

        r1 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        $r0 = staticinvoke <org.apache.poi.xssf.usermodel.charts.XSSFChartDataFactory: org.apache.poi.xssf.usermodel.charts.XSSFChartDataFactory getInstance()>();

        return $r0;
    }

    public org.apache.poi.xssf.usermodel.XSSFChart getChartAxisFactory()
    {
        org.apache.poi.xssf.usermodel.XSSFChart r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        return r0;
    }

    public transient void plot(org.apache.poi.ss.usermodel.charts.ChartData, org.apache.poi.ss.usermodel.charts.ChartAxis[])
    {
        org.apache.poi.ss.usermodel.charts.ChartAxis[] r2;
        org.apache.poi.xssf.usermodel.XSSFChart r1;
        org.apache.poi.ss.usermodel.charts.ChartData r0;

        r1 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        r0 := @parameter0: org.apache.poi.ss.usermodel.charts.ChartData;

        r2 := @parameter1: org.apache.poi.ss.usermodel.charts.ChartAxis[];

        interfaceinvoke r0.<org.apache.poi.ss.usermodel.charts.ChartData: void fillChart(org.apache.poi.ss.usermodel.Chart,org.apache.poi.ss.usermodel.charts.ChartAxis[])>(r1, r2);

        return;
    }

    public org.apache.poi.xssf.usermodel.charts.XSSFValueAxis createValueAxis(org.apache.poi.ss.usermodel.charts.AxisPosition)
    {
        long l2;
        java.util.List $r1, $r4, $r5, $r6;
        org.apache.poi.xssf.usermodel.charts.XSSFValueAxis $r2;
        int $i0, $i1, $i3;
        org.apache.poi.ss.usermodel.charts.ChartAxis r8;
        java.lang.Object $r7;
        org.apache.poi.xssf.usermodel.XSSFChart r0;
        org.apache.poi.ss.usermodel.charts.AxisPosition r3;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        r3 := @parameter0: org.apache.poi.ss.usermodel.charts.AxisPosition;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: java.util.List axis>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 + 1;

        l2 = (long) $i1;

        $r2 = new org.apache.poi.xssf.usermodel.charts.XSSFValueAxis;

        specialinvoke $r2.<org.apache.poi.xssf.usermodel.charts.XSSFValueAxis: void <init>(org.apache.poi.xssf.usermodel.XSSFChart,long,org.apache.poi.ss.usermodel.charts.AxisPosition)>(r0, l2, r3);

        $r4 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: java.util.List axis>;

        $i3 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i3 != 1 goto label1;

        $r6 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: java.util.List axis>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);

        r8 = (org.apache.poi.ss.usermodel.charts.ChartAxis) $r7;

        interfaceinvoke r8.<org.apache.poi.ss.usermodel.charts.ChartAxis: void crossAxis(org.apache.poi.ss.usermodel.charts.ChartAxis)>($r2);

        virtualinvoke $r2.<org.apache.poi.xssf.usermodel.charts.XSSFValueAxis: void crossAxis(org.apache.poi.ss.usermodel.charts.ChartAxis)>(r8);

     label1:
        $r5 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: java.util.List axis>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        return $r2;
    }

    public org.apache.poi.xssf.usermodel.charts.XSSFCategoryAxis createCategoryAxis(org.apache.poi.ss.usermodel.charts.AxisPosition)
    {
        org.apache.poi.xssf.usermodel.charts.XSSFCategoryAxis $r2;
        long l2;
        java.util.List $r1, $r4, $r5, $r6;
        int $i0, $i1, $i3;
        org.apache.poi.ss.usermodel.charts.ChartAxis r8;
        java.lang.Object $r7;
        org.apache.poi.xssf.usermodel.XSSFChart r0;
        org.apache.poi.ss.usermodel.charts.AxisPosition r3;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        r3 := @parameter0: org.apache.poi.ss.usermodel.charts.AxisPosition;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: java.util.List axis>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 + 1;

        l2 = (long) $i1;

        $r2 = new org.apache.poi.xssf.usermodel.charts.XSSFCategoryAxis;

        specialinvoke $r2.<org.apache.poi.xssf.usermodel.charts.XSSFCategoryAxis: void <init>(org.apache.poi.xssf.usermodel.XSSFChart,long,org.apache.poi.ss.usermodel.charts.AxisPosition)>(r0, l2, r3);

        $r4 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: java.util.List axis>;

        $i3 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i3 != 1 goto label1;

        $r6 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: java.util.List axis>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);

        r8 = (org.apache.poi.ss.usermodel.charts.ChartAxis) $r7;

        interfaceinvoke r8.<org.apache.poi.ss.usermodel.charts.ChartAxis: void crossAxis(org.apache.poi.ss.usermodel.charts.ChartAxis)>($r2);

        virtualinvoke $r2.<org.apache.poi.xssf.usermodel.charts.XSSFCategoryAxis: void crossAxis(org.apache.poi.ss.usermodel.charts.ChartAxis)>(r8);

     label1:
        $r5 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: java.util.List axis>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        return $r2;
    }

    public java.util.List getAxis()
    {
        java.util.List $r1, $r2;
        org.apache.poi.xssf.usermodel.XSSFChart r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: java.util.List axis>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFChart: boolean hasAxis()>();

        if $z1 == 0 goto label1;

        specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFChart: void parseAxis()>();

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: java.util.List axis>;

        return $r2;
    }

    public org.apache.poi.xssf.usermodel.charts.XSSFManualLayout getManualLayout()
    {
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout $r0;
        org.apache.poi.xssf.usermodel.XSSFChart r1;

        r1 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        $r0 = new org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        specialinvoke $r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: void <init>(org.apache.poi.xssf.usermodel.XSSFChart)>(r1);

        return $r0;
    }

    public boolean isPlotOnlyVisibleCells()
    {
        org.apache.poi.xssf.usermodel.XSSFChart r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTChart $r1;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean $r2;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTChart chart>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean getPlotVisOnly()>();

        $z0 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean: boolean getVal()>();

        return $z0;
    }

    public void setPlotOnlyVisibleCells(boolean)
    {
        org.apache.poi.xssf.usermodel.XSSFChart r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTChart $r1;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean $r2;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTChart chart>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean getPlotVisOnly()>();

        interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean: void setVal(boolean)>(z0);

        return;
    }

    public org.apache.poi.xssf.usermodel.XSSFRichTextString getTitle()
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTTitle $r3;
        java.lang.StringBuffer $r4;
        org.apache.poi.xssf.usermodel.XSSFRichTextString $r6;
        org.w3c.dom.Node $r9, $r11, $r12;
        int $i0, $i1, i2, i3;
        org.apache.poi.xssf.usermodel.XSSFChart r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTChart $r1, $r2;
        java.lang.String $r7, $r13;
        org.apache.xmlbeans.XmlObject $r8;
        boolean $z0, $z1;
        org.w3c.dom.NodeList $r10;
        org.apache.xmlbeans.XmlObject[] $r5;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTChart chart>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTChart: boolean isSetTitle()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTChart chart>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTTitle getTitle()>();

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.chart.CTTitle: org.apache.xmlbeans.XmlObject[] selectPath(java.lang.String)>("declare namespace a=\'http://schemas.openxmlformats.org/drawingml/2006/main\' .//a:t");

        i2 = 0;

     label2:
        $i0 = lengthof $r5;

        if i2 >= $i0 goto label6;

        $r8 = $r5[i2];

        $r9 = interfaceinvoke $r8.<org.apache.xmlbeans.XmlObject: org.w3c.dom.Node getDomNode()>();

        $r10 = interfaceinvoke $r9.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        i3 = 0;

     label3:
        $i1 = interfaceinvoke $r10.<org.w3c.dom.NodeList: int getLength()>();

        if i3 >= $i1 goto label5;

        $r11 = interfaceinvoke $r10.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i3);

        $z1 = $r11 instanceof org.w3c.dom.Text;

        if $z1 == 0 goto label4;

        $r12 = interfaceinvoke $r10.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i3);

        $r13 = interfaceinvoke $r12.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        i2 = i2 + 1;

        goto label2;

     label6:
        $r6 = new org.apache.poi.xssf.usermodel.XSSFRichTextString;

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void <init>(java.lang.String)>($r7);

        return $r6;
    }

    public org.apache.poi.xssf.usermodel.charts.XSSFChartLegend getOrCreateLegend()
    {
        org.apache.poi.xssf.usermodel.charts.XSSFChartLegend $r0;
        org.apache.poi.xssf.usermodel.XSSFChart r1;

        r1 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        $r0 = new org.apache.poi.xssf.usermodel.charts.XSSFChartLegend;

        specialinvoke $r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartLegend: void <init>(org.apache.poi.xssf.usermodel.XSSFChart)>(r1);

        return $r0;
    }

    public void deleteLegend()
    {
        org.apache.poi.xssf.usermodel.XSSFChart r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTChart $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTChart chart>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTChart: boolean isSetLegend()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTChart chart>;

        interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTChart: void unsetLegend()>();

     label1:
        return;
    }

    private boolean hasAxis()
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTPlotArea $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        org.apache.poi.xssf.usermodel.XSSFChart r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTChart $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTChart chart>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTPlotArea getPlotArea()>();

        $i0 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTPlotArea: int sizeOfValAxArray()>();

        $i1 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTPlotArea: int sizeOfCatAxArray()>();

        $i2 = $i0 + $i1;

        $i3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTPlotArea: int sizeOfDateAxArray()>();

        $i4 = $i2 + $i3;

        $i5 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTPlotArea: int sizeOfSerAxArray()>();

        i6 = $i4 + $i5;

        if i6 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void parseAxis()
    {
        org.apache.poi.xssf.usermodel.XSSFChart r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFChart: void parseCategoryAxis()>();

        specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFChart: void parseValueAxis()>();

        return;
    }

    private void parseCategoryAxis()
    {
        java.util.Iterator $r4;
        org.apache.poi.xssf.usermodel.charts.XSSFCategoryAxis $r7;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTPlotArea $r2;
        java.util.List $r3, $r8;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTCatAx r6;
        java.lang.Object $r5;
        org.apache.poi.xssf.usermodel.XSSFChart r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTChart $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTChart chart>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTPlotArea getPlotArea()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTPlotArea: java.util.List getCatAxList()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTCatAx) $r5;

        $r8 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: java.util.List axis>;

        $r7 = new org.apache.poi.xssf.usermodel.charts.XSSFCategoryAxis;

        specialinvoke $r7.<org.apache.poi.xssf.usermodel.charts.XSSFCategoryAxis: void <init>(org.apache.poi.xssf.usermodel.XSSFChart,org.openxmlformats.schemas.drawingml.x2006.chart.CTCatAx)>(r0, r6);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        return;
    }

    private void parseValueAxis()
    {
        java.util.Iterator $r4;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTPlotArea $r2;
        java.util.List $r3, $r8;
        org.apache.poi.xssf.usermodel.charts.XSSFValueAxis $r7;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTValAx r6;
        java.lang.Object $r5;
        org.apache.poi.xssf.usermodel.XSSFChart r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTChart $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTChart chart>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTPlotArea getPlotArea()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTPlotArea: java.util.List getValAxList()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTValAx) $r5;

        $r8 = r0.<org.apache.poi.xssf.usermodel.XSSFChart: java.util.List axis>;

        $r7 = new org.apache.poi.xssf.usermodel.charts.XSSFValueAxis;

        specialinvoke $r7.<org.apache.poi.xssf.usermodel.charts.XSSFValueAxis: void <init>(org.apache.poi.xssf.usermodel.XSSFChart,org.openxmlformats.schemas.drawingml.x2006.chart.CTValAx)>(r0, r6);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        return;
    }

    public volatile org.apache.poi.ss.usermodel.charts.ChartLegend getOrCreateLegend()
    {
        org.apache.poi.xssf.usermodel.charts.XSSFChartLegend $r1;
        org.apache.poi.xssf.usermodel.XSSFChart r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.apache.poi.xssf.usermodel.charts.XSSFChartLegend getOrCreateLegend()>();

        return $r1;
    }

    public volatile org.apache.poi.ss.usermodel.charts.ChartAxisFactory getChartAxisFactory()
    {
        org.apache.poi.xssf.usermodel.XSSFChart r0, $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.apache.poi.xssf.usermodel.XSSFChart getChartAxisFactory()>();

        return $r1;
    }

    public volatile org.apache.poi.ss.usermodel.charts.ChartDataFactory getChartDataFactory()
    {
        org.apache.poi.xssf.usermodel.XSSFChart r0;
        org.apache.poi.xssf.usermodel.charts.XSSFChartDataFactory $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.apache.poi.xssf.usermodel.charts.XSSFChartDataFactory getChartDataFactory()>();

        return $r1;
    }

    public volatile org.apache.poi.ss.usermodel.charts.ManualLayout getManualLayout()
    {
        org.apache.poi.xssf.usermodel.XSSFChart r0;
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout getManualLayout()>();

        return $r1;
    }

    public volatile org.apache.poi.ss.usermodel.charts.ChartAxis createCategoryAxis(org.apache.poi.ss.usermodel.charts.AxisPosition)
    {
        org.apache.poi.xssf.usermodel.XSSFChart r0;
        org.apache.poi.xssf.usermodel.charts.XSSFCategoryAxis $r2;
        org.apache.poi.ss.usermodel.charts.AxisPosition r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        r1 := @parameter0: org.apache.poi.ss.usermodel.charts.AxisPosition;

        $r2 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.apache.poi.xssf.usermodel.charts.XSSFCategoryAxis createCategoryAxis(org.apache.poi.ss.usermodel.charts.AxisPosition)>(r1);

        return $r2;
    }

    public volatile org.apache.poi.ss.usermodel.charts.ValueAxis createValueAxis(org.apache.poi.ss.usermodel.charts.AxisPosition)
    {
        org.apache.poi.xssf.usermodel.XSSFChart r0;
        org.apache.poi.ss.usermodel.charts.AxisPosition r1;
        org.apache.poi.xssf.usermodel.charts.XSSFValueAxis $r2;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChart;

        r1 := @parameter0: org.apache.poi.ss.usermodel.charts.AxisPosition;

        $r2 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFChart: org.apache.poi.xssf.usermodel.charts.XSSFValueAxis createValueAxis(org.apache.poi.ss.usermodel.charts.AxisPosition)>(r1);

        return $r2;
    }
}
