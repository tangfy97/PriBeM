public final class org.wiztools.restclient.bean.ResponseBean extends java.lang.Object implements org.wiztools.restclient.bean.Response
{
    private int statusCode;
    private java.lang.String statusLine;
    private org.wiztools.commons.MultiValueMap headers;
    private byte[] responseBody;
    private org.wiztools.restclient.bean.TestResult testResult;
    private long executionTime;

    public long getExecutionTime()
    {
        org.wiztools.restclient.bean.ResponseBean r0;
        long $l0;

        r0 := @this: org.wiztools.restclient.bean.ResponseBean;

        $l0 = r0.<org.wiztools.restclient.bean.ResponseBean: long executionTime>;

        return $l0;
    }

    public void setExecutionTime(long)
    {
        org.wiztools.restclient.bean.ResponseBean r0;
        long l0;

        r0 := @this: org.wiztools.restclient.bean.ResponseBean;

        l0 := @parameter0: long;

        r0.<org.wiztools.restclient.bean.ResponseBean: long executionTime> = l0;

        return;
    }

    public int getStatusCode()
    {
        org.wiztools.restclient.bean.ResponseBean r0;
        int $i0;

        r0 := @this: org.wiztools.restclient.bean.ResponseBean;

        $i0 = r0.<org.wiztools.restclient.bean.ResponseBean: int statusCode>;

        return $i0;
    }

    public void setStatusCode(int)
    {
        org.wiztools.restclient.bean.ResponseBean r0;
        int i0;

        r0 := @this: org.wiztools.restclient.bean.ResponseBean;

        i0 := @parameter0: int;

        r0.<org.wiztools.restclient.bean.ResponseBean: int statusCode> = i0;

        return;
    }

    public org.wiztools.commons.MultiValueMap getHeaders()
    {
        org.wiztools.restclient.bean.ResponseBean r0;
        org.wiztools.commons.MultiValueMap $r1, $r2;

        r0 := @this: org.wiztools.restclient.bean.ResponseBean;

        $r1 = r0.<org.wiztools.restclient.bean.ResponseBean: org.wiztools.commons.MultiValueMap headers>;

        $r2 = staticinvoke <org.wiztools.commons.CollectionsUtil: org.wiztools.commons.MultiValueMap unmodifiableMultiValueMap(org.wiztools.commons.MultiValueMap)>($r1);

        return $r2;
    }

    public void addHeader(java.lang.String, java.lang.String)
    {
        org.wiztools.restclient.bean.ResponseBean r0;
        java.lang.String r1, r2;
        org.wiztools.commons.MultiValueMap $r3;

        r0 := @this: org.wiztools.restclient.bean.ResponseBean;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.wiztools.restclient.bean.ResponseBean: org.wiztools.commons.MultiValueMap headers>;

        interfaceinvoke $r3.<org.wiztools.commons.MultiValueMap: java.util.Collection put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public org.wiztools.restclient.bean.ContentType getContentType()
    {
        org.wiztools.restclient.bean.ResponseBean r0;
        org.wiztools.restclient.bean.ContentType $r3;
        org.wiztools.commons.MultiValueMap $r1, $r2;

        r0 := @this: org.wiztools.restclient.bean.ResponseBean;

        $r1 = r0.<org.wiztools.restclient.bean.ResponseBean: org.wiztools.commons.MultiValueMap headers>;

        if $r1 == null goto label1;

        $r2 = r0.<org.wiztools.restclient.bean.ResponseBean: org.wiztools.commons.MultiValueMap headers>;

        $r3 = staticinvoke <org.wiztools.restclient.util.HttpUtil: org.wiztools.restclient.bean.ContentType getContentType(org.wiztools.commons.MultiValueMap)>($r2);

        return $r3;

     label1:
        return null;
    }

    public byte[] getResponseBody()
    {
        org.wiztools.restclient.bean.ResponseBean r0;
        byte[] $r1;

        r0 := @this: org.wiztools.restclient.bean.ResponseBean;

        $r1 = r0.<org.wiztools.restclient.bean.ResponseBean: byte[] responseBody>;

        return $r1;
    }

    public void setResponseBody(byte[])
    {
        org.wiztools.restclient.bean.ResponseBean r0;
        byte[] r1;

        r0 := @this: org.wiztools.restclient.bean.ResponseBean;

        r1 := @parameter0: byte[];

        r0.<org.wiztools.restclient.bean.ResponseBean: byte[] responseBody> = r1;

        return;
    }

    public java.lang.String getStatusLine()
    {
        org.wiztools.restclient.bean.ResponseBean r0;
        java.lang.String $r1;

        r0 := @this: org.wiztools.restclient.bean.ResponseBean;

        $r1 = r0.<org.wiztools.restclient.bean.ResponseBean: java.lang.String statusLine>;

        return $r1;
    }

    public void setStatusLine(java.lang.String)
    {
        org.wiztools.restclient.bean.ResponseBean r0;
        java.lang.String r1;

        r0 := @this: org.wiztools.restclient.bean.ResponseBean;

        r1 := @parameter0: java.lang.String;

        r0.<org.wiztools.restclient.bean.ResponseBean: java.lang.String statusLine> = r1;

        return;
    }

    public org.wiztools.restclient.bean.TestResult getTestResult()
    {
        org.wiztools.restclient.bean.ResponseBean r0;
        org.wiztools.restclient.bean.TestResult $r1;

        r0 := @this: org.wiztools.restclient.bean.ResponseBean;

        $r1 = r0.<org.wiztools.restclient.bean.ResponseBean: org.wiztools.restclient.bean.TestResult testResult>;

        return $r1;
    }

    public void setTestResult(org.wiztools.restclient.bean.TestResult)
    {
        org.wiztools.restclient.bean.ResponseBean r0;
        org.wiztools.restclient.bean.TestResult r1;

        r0 := @this: org.wiztools.restclient.bean.ResponseBean;

        r1 := @parameter0: org.wiztools.restclient.bean.TestResult;

        r0.<org.wiztools.restclient.bean.ResponseBean: org.wiztools.restclient.bean.TestResult testResult> = r1;

        return;
    }

    public void <init>()
    {
        org.wiztools.restclient.bean.ResponseBean r0;
        org.wiztools.commons.MultiValueMapArrayList $r1;

        r0 := @this: org.wiztools.restclient.bean.ResponseBean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.wiztools.commons.MultiValueMapArrayList;

        specialinvoke $r1.<org.wiztools.commons.MultiValueMapArrayList: void <init>()>();

        r0.<org.wiztools.restclient.bean.ResponseBean: org.wiztools.commons.MultiValueMap headers> = $r1;

        return;
    }

    public java.lang.Object clone()
    {
        byte[] $r3;
        long $l0;
        int $i1;
        java.lang.String $r2, r9, r14;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r7, $r12;
        java.util.Collection $r11;
        org.wiztools.restclient.bean.ResponseBean $r0, r1;
        java.util.Set $r6;
        java.lang.Object $r8, $r13;
        org.wiztools.commons.MultiValueMap $r4, $r5, $r10;

        r1 := @this: org.wiztools.restclient.bean.ResponseBean;

        $r0 = new org.wiztools.restclient.bean.ResponseBean;

        specialinvoke $r0.<org.wiztools.restclient.bean.ResponseBean: void <init>()>();

        $l0 = r1.<org.wiztools.restclient.bean.ResponseBean: long executionTime>;

        $r0.<org.wiztools.restclient.bean.ResponseBean: long executionTime> = $l0;

        $i1 = r1.<org.wiztools.restclient.bean.ResponseBean: int statusCode>;

        $r0.<org.wiztools.restclient.bean.ResponseBean: int statusCode> = $i1;

        $r2 = r1.<org.wiztools.restclient.bean.ResponseBean: java.lang.String statusLine>;

        $r0.<org.wiztools.restclient.bean.ResponseBean: java.lang.String statusLine> = $r2;

        $r3 = r1.<org.wiztools.restclient.bean.ResponseBean: byte[] responseBody>;

        $r0.<org.wiztools.restclient.bean.ResponseBean: byte[] responseBody> = $r3;

        $r4 = r1.<org.wiztools.restclient.bean.ResponseBean: org.wiztools.commons.MultiValueMap headers>;

        $z0 = interfaceinvoke $r4.<org.wiztools.commons.MultiValueMap: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r5 = r1.<org.wiztools.restclient.bean.ResponseBean: org.wiztools.commons.MultiValueMap headers>;

        $r6 = interfaceinvoke $r5.<org.wiztools.commons.MultiValueMap: java.util.Set keySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r8;

        $r10 = r1.<org.wiztools.restclient.bean.ResponseBean: org.wiztools.commons.MultiValueMap headers>;

        $r11 = interfaceinvoke $r10.<org.wiztools.commons.MultiValueMap: java.util.Collection get(java.lang.Object)>(r9);

        $r12 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (java.lang.String) $r13;

        virtualinvoke $r0.<org.wiztools.restclient.bean.ResponseBean: void addHeader(java.lang.String,java.lang.String)>(r9, r14);

        goto label2;

     label3:
        goto label1;

     label4:
        return $r0;
    }

    public boolean equals(java.lang.Object)
    {
        byte[] $r7, $r8, $r9, $r10;
        int $i0, $i1;
        java.lang.String $r15, $r16, $r17, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.wiztools.restclient.bean.ResponseBean r0;
        java.lang.Object r1;
        org.wiztools.restclient.bean.Response r2;
        org.wiztools.restclient.bean.TestResult $r3, $r4, $r5, $r6;
        org.wiztools.commons.MultiValueMap $r11, $r12, $r13, $r14;

        r0 := @this: org.wiztools.restclient.bean.ResponseBean;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        $z0 = r1 instanceof org.wiztools.restclient.bean.Response;

        if $z0 == 0 goto label20;

        r2 = (org.wiztools.restclient.bean.Response) r1;

        if 1 == 0 goto label02;

        $i0 = r0.<org.wiztools.restclient.bean.ResponseBean: int statusCode>;

        $i1 = interfaceinvoke r2.<org.wiztools.restclient.bean.Response: int getStatusCode()>();

        if $i0 != $i1 goto label02;

        $z5 = 1;

        goto label03;

     label02:
        $z5 = 0;

     label03:
        if $z5 == 0 goto label06;

        $r15 = r0.<org.wiztools.restclient.bean.ResponseBean: java.lang.String statusLine>;

        if $r15 != null goto label04;

        $r18 = interfaceinvoke r2.<org.wiztools.restclient.bean.Response: java.lang.String getStatusLine()>();

        if $r18 != null goto label06;

        goto label05;

     label04:
        $r16 = r0.<org.wiztools.restclient.bean.ResponseBean: java.lang.String statusLine>;

        $r17 = interfaceinvoke r2.<org.wiztools.restclient.bean.Response: java.lang.String getStatusLine()>();

        $z4 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z4 == 0 goto label06;

     label05:
        $z6 = 1;

        goto label07;

     label06:
        $z6 = 0;

     label07:
        if $z6 == 0 goto label10;

        $r11 = r0.<org.wiztools.restclient.bean.ResponseBean: org.wiztools.commons.MultiValueMap headers>;

        if $r11 != null goto label08;

        $r14 = interfaceinvoke r2.<org.wiztools.restclient.bean.Response: org.wiztools.commons.MultiValueMap getHeaders()>();

        if $r14 != null goto label10;

        goto label09;

     label08:
        $r12 = r0.<org.wiztools.restclient.bean.ResponseBean: org.wiztools.commons.MultiValueMap headers>;

        $r13 = interfaceinvoke r2.<org.wiztools.restclient.bean.Response: org.wiztools.commons.MultiValueMap getHeaders()>();

        $z3 = virtualinvoke $r12.<java.lang.Object: boolean equals(java.lang.Object)>($r13);

        if $z3 == 0 goto label10;

     label09:
        $z7 = 1;

        goto label11;

     label10:
        $z7 = 0;

     label11:
        if $z7 == 0 goto label14;

        $r7 = r0.<org.wiztools.restclient.bean.ResponseBean: byte[] responseBody>;

        if $r7 != null goto label12;

        $r10 = interfaceinvoke r2.<org.wiztools.restclient.bean.Response: byte[] getResponseBody()>();

        if $r10 != null goto label14;

        goto label13;

     label12:
        $r8 = r0.<org.wiztools.restclient.bean.ResponseBean: byte[] responseBody>;

        $r9 = interfaceinvoke r2.<org.wiztools.restclient.bean.Response: byte[] getResponseBody()>();

        $z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r8, $r9);

        if $z2 == 0 goto label14;

     label13:
        $z8 = 1;

        goto label15;

     label14:
        $z8 = 0;

     label15:
        if $z8 == 0 goto label18;

        $r3 = r0.<org.wiztools.restclient.bean.ResponseBean: org.wiztools.restclient.bean.TestResult testResult>;

        if $r3 != null goto label16;

        $r6 = interfaceinvoke r2.<org.wiztools.restclient.bean.Response: org.wiztools.restclient.bean.TestResult getTestResult()>();

        if $r6 != null goto label18;

        goto label17;

     label16:
        $r4 = r0.<org.wiztools.restclient.bean.ResponseBean: org.wiztools.restclient.bean.TestResult testResult>;

        $r5 = interfaceinvoke r2.<org.wiztools.restclient.bean.Response: org.wiztools.restclient.bean.TestResult getTestResult()>();

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label18;

     label17:
        $z9 = 1;

        goto label19;

     label18:
        $z9 = 0;

     label19:
        return $z9;

     label20:
        return 0;
    }

    public int hashCode()
    {
        byte[] $r3, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, $i13;
        java.lang.String $r1, $r8;
        org.wiztools.restclient.bean.ResponseBean r0;
        org.wiztools.restclient.bean.TestResult $r4, $r5;
        org.wiztools.commons.MultiValueMap $r2, $r7;

        r0 := @this: org.wiztools.restclient.bean.ResponseBean;

        $i0 = r0.<org.wiztools.restclient.bean.ResponseBean: int statusCode>;

        i9 = 371 + $i0;

        $i1 = 53 * i9;

        $r1 = r0.<org.wiztools.restclient.bean.ResponseBean: java.lang.String statusLine>;

        if $r1 == null goto label1;

        $r8 = r0.<org.wiztools.restclient.bean.ResponseBean: java.lang.String statusLine>;

        $i10 = virtualinvoke $r8.<java.lang.String: int hashCode()>();

        goto label2;

     label1:
        $i10 = 0;

     label2:
        $i8 = $i1 + $i10;

        $i2 = 53 * $i8;

        $r2 = r0.<org.wiztools.restclient.bean.ResponseBean: org.wiztools.commons.MultiValueMap headers>;

        if $r2 == null goto label3;

        $r7 = r0.<org.wiztools.restclient.bean.ResponseBean: org.wiztools.commons.MultiValueMap headers>;

        $i11 = virtualinvoke $r7.<java.lang.Object: int hashCode()>();

        goto label4;

     label3:
        $i11 = 0;

     label4:
        $i7 = $i2 + $i11;

        $i3 = 53 * $i7;

        $r3 = r0.<org.wiztools.restclient.bean.ResponseBean: byte[] responseBody>;

        if $r3 == null goto label5;

        $r6 = r0.<org.wiztools.restclient.bean.ResponseBean: byte[] responseBody>;

        $i12 = virtualinvoke $r6.<java.lang.Object: int hashCode()>();

        goto label6;

     label5:
        $i12 = 0;

     label6:
        $i6 = $i3 + $i12;

        $i4 = 53 * $i6;

        $r4 = r0.<org.wiztools.restclient.bean.ResponseBean: org.wiztools.restclient.bean.TestResult testResult>;

        if $r4 == null goto label7;

        $r5 = r0.<org.wiztools.restclient.bean.ResponseBean: org.wiztools.restclient.bean.TestResult testResult>;

        $i13 = virtualinvoke $r5.<java.lang.Object: int hashCode()>();

        goto label8;

     label7:
        $i13 = 0;

     label8:
        $i5 = $i4 + $i13;

        return $i5;
    }

    public java.lang.String toString()
    {
        byte[] $r8;
        org.wiztools.restclient.bean.ResponseBean r1;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7, $r10, $r11;
        java.lang.String $r2, $r9, $r13;
        org.wiztools.restclient.bean.TestResult $r12;
        org.wiztools.commons.MultiValueMap $r5;

        r1 := @this: org.wiztools.restclient.bean.ResponseBean;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@Response[");

        $r2 = r1.<org.wiztools.restclient.bean.ResponseBean: java.lang.String statusLine>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r5 = r1.<org.wiztools.restclient.bean.ResponseBean: org.wiztools.commons.MultiValueMap headers>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r8 = r1.<org.wiztools.restclient.bean.ResponseBean: byte[] responseBody>;

        $r9 = staticinvoke <org.wiztools.restclient.util.Util: java.lang.String base64encode(byte[])>($r8);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r12 = r1.<org.wiztools.restclient.bean.ResponseBean: org.wiztools.restclient.bean.TestResult testResult>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r13 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }
}
