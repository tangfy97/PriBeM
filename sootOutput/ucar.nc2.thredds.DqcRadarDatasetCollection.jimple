public class ucar.nc2.thredds.DqcRadarDatasetCollection extends ucar.nc2.dt.radial.StationRadarCollectionImpl
{
    private thredds.catalog.query.QueryCapability dqc;
    private thredds.catalog.query.SelectService selService;
    private thredds.catalog.query.SelectStation selStation;
    private thredds.catalog.query.SelectList selTime;
    private thredds.catalog.query.SelectGeoRegion selRegion;
    private thredds.catalog.query.SelectService$ServiceChoice service;
    private java.util.HashMap dqcStations;
    private boolean debugQuery;
    static final boolean $assertionsDisabled;

    public static ucar.nc2.thredds.DqcRadarDatasetCollection factory(thredds.catalog.InvDataset, java.lang.String, java.lang.StringBuffer) throws java.io.IOException
    {
        ucar.nc2.thredds.DqcRadarDatasetCollection $r4;
        java.lang.StringBuffer r3;
        java.lang.String $r1, r2;
        thredds.catalog.InvDataset r0;

        r0 := @parameter0: thredds.catalog.InvDataset;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.StringBuffer;

        $r1 = virtualinvoke r0.<thredds.catalog.InvDataset: java.lang.String getDocumentation(java.lang.String)>("summary");

        $r4 = staticinvoke <ucar.nc2.thredds.DqcRadarDatasetCollection: ucar.nc2.thredds.DqcRadarDatasetCollection factory(java.lang.String,java.lang.String,java.lang.StringBuffer)>($r1, r2, r3);

        return $r4;
    }

    public static ucar.nc2.thredds.DqcRadarDatasetCollection factory(java.lang.String, java.lang.String, java.lang.StringBuffer) throws java.io.IOException
    {
        thredds.catalog.query.Selector r21;
        thredds.catalog.query.QueryCapability $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        thredds.catalog.query.SelectStation r18;
        java.lang.StringBuilder $r1, $r3, $r4;
        thredds.catalog.query.SelectList r19;
        java.util.ArrayList $r7, $r8;
        thredds.catalog.query.SelectService$ServiceChoice r13, r22;
        thredds.catalog.query.SelectService r20;
        ucar.nc2.thredds.DqcRadarDatasetCollection $r9;
        java.lang.StringBuffer r11;
        int $i0, $i1, i2, i3;
        java.lang.String r2, $r5, r10, $r14, $r15, $r17;
        thredds.catalog.query.DqcFactory $r0;
        java.lang.Object $r12, $r16;

        r10 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r11 := @parameter2: java.lang.StringBuffer;

        $r0 = new thredds.catalog.query.DqcFactory;

        specialinvoke $r0.<thredds.catalog.query.DqcFactory: void <init>(boolean)>(1);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?returns=dqc");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r0.<thredds.catalog.query.DqcFactory: thredds.catalog.query.QueryCapability readXML(java.lang.String)>($r5);

        $z0 = virtualinvoke $r6.<thredds.catalog.query.QueryCapability: boolean hasFatalError()>();

        if $z0 == 0 goto label01;

        $r17 = virtualinvoke $r6.<thredds.catalog.query.QueryCapability: java.lang.String getErrorMessages()>();

        virtualinvoke r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        return null;

     label01:
        r18 = null;

        r19 = null;

        r20 = null;

        $r7 = virtualinvoke $r6.<thredds.catalog.query.QueryCapability: java.util.ArrayList getSelectors()>();

        i2 = 0;

     label02:
        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if i2 >= $i0 goto label06;

        $r16 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r21 = (thredds.catalog.query.Selector) $r16;

        $z3 = r21 instanceof thredds.catalog.query.SelectStation;

        if $z3 == 0 goto label03;

        r18 = (thredds.catalog.query.SelectStation) r21;

     label03:
        $z4 = r21 instanceof thredds.catalog.query.SelectList;

        if $z4 == 0 goto label04;

        r19 = (thredds.catalog.query.SelectList) r21;

     label04:
        $z5 = r21 instanceof thredds.catalog.query.SelectService;

        if $z5 == 0 goto label05;

        r20 = (thredds.catalog.query.SelectService) r21;

     label05:
        i2 = i2 + 1;

        goto label02;

     label06:
        if r20 != null goto label07;

        virtualinvoke r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("DqcStationaryRadarDataset must have Service selector");

        return null;

     label07:
        if r18 != null goto label08;

        virtualinvoke r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("DqcStationaryRadarDataset must have Station selector");

        return null;

     label08:
        if r19 != null goto label09;

        virtualinvoke r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("DqcStationaryRadarDataset must have Date selector");

        return null;

     label09:
        r22 = null;

        $r8 = virtualinvoke r20.<thredds.catalog.query.SelectService: java.util.ArrayList getChoices()>();

        i3 = 0;

     label10:
        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

        if i3 >= $i1 goto label12;

        $r12 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i3);

        r13 = (thredds.catalog.query.SelectService$ServiceChoice) $r12;

        $r14 = virtualinvoke r13.<thredds.catalog.query.SelectService$ServiceChoice: java.lang.String getService()>();

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("HTTPServer");

        if $z1 == 0 goto label11;

        $r15 = virtualinvoke r13.<thredds.catalog.query.SelectService$ServiceChoice: java.lang.String getDataFormat()>();

        $z2 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("text/xml");

        if $z2 == 0 goto label11;

        r22 = r13;

     label11:
        i3 = i3 + 1;

        goto label10;

     label12:
        if r22 != null goto label13;

        virtualinvoke r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("DqcStationObsDataset must have HTTPServer Service with DataFormat=text/plain, and returns=data");

        return null;

     label13:
        $r9 = new ucar.nc2.thredds.DqcRadarDatasetCollection;

        specialinvoke $r9.<ucar.nc2.thredds.DqcRadarDatasetCollection: void <init>(java.lang.String,thredds.catalog.query.QueryCapability,thredds.catalog.query.SelectService,thredds.catalog.query.SelectService$ServiceChoice,thredds.catalog.query.SelectStation,thredds.catalog.query.SelectGeoRegion,thredds.catalog.query.SelectList)>(r10, $r6, r20, r22, r18, null, r19);

        return $r9;
    }

    private void <init>(java.lang.String, thredds.catalog.query.QueryCapability, thredds.catalog.query.SelectService, thredds.catalog.query.SelectService$ServiceChoice, thredds.catalog.query.SelectStation, thredds.catalog.query.SelectGeoRegion, thredds.catalog.query.SelectList)
    {
        java.util.Date $r14, $r15;
        thredds.catalog.query.QueryCapability r2;
        thredds.catalog.query.Choice r25;
        java.net.URI $r13;
        thredds.catalog.query.SelectStation r4;
        java.lang.Exception $r23;
        thredds.catalog.query.Query $r12;
        thredds.catalog.query.SelectGeoRegion r5;
        thredds.catalog.query.SelectList r6;
        java.util.HashMap $r9, $r11, $r18, $r21;
        thredds.catalog.query.SelectService$ServiceChoice r7;
        java.util.ArrayList $r8, $r10;
        thredds.catalog.query.SelectService r3;
        ucar.nc2.thredds.DqcRadarDatasetCollection r0;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.String r1, $r19, $r22;
        ucar.nc2.units.DateUnit $r16;
        thredds.catalog.query.Station r24;
        java.lang.Object $r17, $r20;

        r0 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: thredds.catalog.query.QueryCapability;

        r3 := @parameter2: thredds.catalog.query.SelectService;

        r7 := @parameter3: thredds.catalog.query.SelectService$ServiceChoice;

        r4 := @parameter4: thredds.catalog.query.SelectStation;

        r5 := @parameter5: thredds.catalog.query.SelectGeoRegion;

        r6 := @parameter6: thredds.catalog.query.SelectList;

        specialinvoke r0.<ucar.nc2.dt.radial.StationRadarCollectionImpl: void <init>()>();

        r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: boolean debugQuery> = 0;

        r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: java.lang.String desc> = r1;

        r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: thredds.catalog.query.QueryCapability dqc> = r2;

        r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: thredds.catalog.query.SelectService selService> = r3;

        r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: thredds.catalog.query.SelectStation selStation> = r4;

        r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: thredds.catalog.query.SelectGeoRegion selRegion> = r5;

        r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: thredds.catalog.query.SelectList selTime> = r6;

        r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: thredds.catalog.query.SelectService$ServiceChoice service> = r7;

        $r8 = virtualinvoke r4.<thredds.catalog.query.SelectStation: java.util.ArrayList getStations()>();

        $r9 = new java.util.HashMap;

        $i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        specialinvoke $r9.<java.util.HashMap: void <init>(int)>($i0);

        r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: java.util.HashMap stations> = $r9;

        i4 = 0;

     label1:
        $i1 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if i4 >= $i1 goto label2;

        $r20 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r24 = (thredds.catalog.query.Station) $r20;

        $r21 = r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: java.util.HashMap stations>;

        $r22 = virtualinvoke r24.<thredds.catalog.query.Station: java.lang.String getValue()>();

        virtualinvoke $r21.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, r24);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r10 = virtualinvoke r6.<thredds.catalog.query.SelectList: java.util.ArrayList getChoices()>();

        $r11 = new java.util.HashMap;

        $i2 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        specialinvoke $r11.<java.util.HashMap: void <init>(int)>($i2);

        r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: java.util.HashMap relTimesList> = $r11;

        i5 = 0;

     label3:
        $i3 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        if i5 >= $i3 goto label4;

        $r17 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r25 = (thredds.catalog.query.Choice) $r17;

        $r18 = r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: java.util.HashMap relTimesList>;

        $r19 = interfaceinvoke r25.<thredds.catalog.query.Choice: java.lang.String getValue()>();

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, r25);

        i5 = i5 + 1;

        goto label3;

     label4:
        $r12 = virtualinvoke r2.<thredds.catalog.query.QueryCapability: thredds.catalog.query.Query getQuery()>();

        $r13 = virtualinvoke $r12.<thredds.catalog.query.Query: java.net.URI getUriResolved()>();

        virtualinvoke $r13.<java.net.URI: java.lang.String toString()>();

        $r14 = new java.util.Date;

        specialinvoke $r14.<java.util.Date: void <init>()>();

        r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: java.util.Date startDate> = $r14;

        $r15 = new java.util.Date;

        specialinvoke $r15.<java.util.Date: void <init>()>();

        r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: java.util.Date endDate> = $r15;

     label5:
        $r16 = new ucar.nc2.units.DateUnit;

        specialinvoke $r16.<ucar.nc2.units.DateUnit: void <init>(java.lang.String)>("hours since 1991-01-01T00:00");

        r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: ucar.nc2.units.DateUnit timeUnit> = $r16;

     label6:
        goto label8;

     label7:
        $r23 := @caughtexception;

        virtualinvoke $r23.<java.lang.Exception: void printStackTrace()>();

     label8:
        return;

        catch java.lang.Exception from label5 to label6 with label7;
    }

    protected void setTimeUnits()
    {
        ucar.nc2.thredds.DqcRadarDatasetCollection r0;

        r0 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        return;
    }

    protected void setStartDate()
    {
        ucar.nc2.thredds.DqcRadarDatasetCollection r0;

        r0 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        return;
    }

    protected void setEndDate()
    {
        ucar.nc2.thredds.DqcRadarDatasetCollection r0;

        r0 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        return;
    }

    protected void setBoundingBox()
    {
        ucar.nc2.thredds.DqcRadarDatasetCollection r0;

        r0 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        return;
    }

    public java.lang.String getTitle()
    {
        java.lang.String $r2;
        ucar.nc2.thredds.DqcRadarDatasetCollection r0;
        thredds.catalog.query.QueryCapability $r1;

        r0 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        $r1 = r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: thredds.catalog.query.QueryCapability dqc>;

        $r2 = virtualinvoke $r1.<thredds.catalog.query.QueryCapability: java.lang.String getName()>();

        return $r2;
    }

    public java.lang.String getLocation()
    {
        java.lang.String $r2;
        ucar.nc2.thredds.DqcRadarDatasetCollection r0;
        thredds.catalog.query.QueryCapability $r1;

        r0 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        $r1 = r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: thredds.catalog.query.QueryCapability dqc>;

        $r2 = virtualinvoke $r1.<thredds.catalog.query.QueryCapability: java.lang.String getCreateFrom()>();

        return $r2;
    }

    public java.lang.String getDescription()
    {
        java.lang.String $r1;
        ucar.nc2.thredds.DqcRadarDatasetCollection r0;

        r0 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        $r1 = r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: java.lang.String desc>;

        return $r1;
    }

    public boolean checkStationProduct(java.lang.String, ucar.unidata.util.Product)
    {
        thredds.catalog.query.QueryCapability $r1;
        ucar.nc2.thredds.DqcRadarDatasetCollection r0;
        ucar.unidata.util.Product r3;
        java.lang.String $r2, $r4, $r5, $r6, r7;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        r7 := @parameter0: java.lang.String;

        r3 := @parameter1: ucar.unidata.util.Product;

        $r1 = r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: thredds.catalog.query.QueryCapability dqc>;

        $r2 = virtualinvoke $r1.<thredds.catalog.query.QueryCapability: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("Level2");

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r3.<ucar.unidata.util.Product: java.lang.String getID()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("Reflectivity");

        if $z1 != 0 goto label1;

        $r5 = virtualinvoke r3.<ucar.unidata.util.Product: java.lang.String getID()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("RadialVelocity");

        if $z2 != 0 goto label1;

        $r6 = virtualinvoke r3.<ucar.unidata.util.Product: java.lang.String getID()>();

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("SpectrumWidth");

        if $z3 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean checkStationProduct(ucar.unidata.util.Product)
    {
        ucar.nc2.thredds.DqcRadarDatasetCollection r0;
        ucar.unidata.util.Product r1;
        boolean $z0;

        r0 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        r1 := @parameter0: ucar.unidata.util.Product;

        $z0 = virtualinvoke r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: boolean checkStationProduct(java.lang.String,ucar.unidata.util.Product)>(null, r1);

        return $z0;
    }

    public int getStationProductCount(java.lang.String)
    {
        ucar.nc2.thredds.DqcRadarDatasetCollection r0;
        java.lang.String $r2, r3;
        thredds.catalog.query.QueryCapability $r1;
        boolean $z0;

        r0 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: thredds.catalog.query.QueryCapability dqc>;

        $r2 = virtualinvoke $r1.<thredds.catalog.query.QueryCapability: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("Level2");

        if $z0 == 0 goto label1;

        return 3;

     label1:
        return 0;
    }

    public java.util.List getStations() throws java.io.IOException
    {
        java.util.List $r1;
        ucar.nc2.thredds.DqcRadarDatasetCollection r0;

        r0 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        $r1 = virtualinvoke r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: java.util.List getRadarStations()>();

        return $r1;
    }

    public java.util.List getRadarStations()
    {
        java.util.Iterator $r4;
        thredds.catalog.query.SelectStation $r1;
        java.util.ArrayList $r2, $r3;
        thredds.catalog.query.Station r6;
        ucar.nc2.thredds.DqcRadarDatasetCollection r0;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        $r1 = r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: thredds.catalog.query.SelectStation selStation>;

        $r2 = virtualinvoke $r1.<thredds.catalog.query.SelectStation: java.util.ArrayList getStations()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (thredds.catalog.query.Station) $r5;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        goto label1;

     label2:
        return $r3;
    }

    public java.util.List getStations(ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.util.List $r2;
        ucar.nc2.util.CancelTask r1;
        ucar.nc2.thredds.DqcRadarDatasetCollection r0;

        r0 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        r1 := @parameter0: ucar.nc2.util.CancelTask;

        $r2 = virtualinvoke r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: java.util.List getStations(ucar.unidata.geoloc.LatLonRect,ucar.nc2.util.CancelTask)>(null, r1);

        return $r2;
    }

    public java.util.List getStations(ucar.unidata.geoloc.LatLonRect) throws java.io.IOException
    {
        ucar.unidata.geoloc.LatLonRect r1;
        java.util.List $r2;
        ucar.nc2.thredds.DqcRadarDatasetCollection r0;

        r0 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        r1 := @parameter0: ucar.unidata.geoloc.LatLonRect;

        $r2 = virtualinvoke r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: java.util.List getStations(ucar.unidata.geoloc.LatLonRect,ucar.nc2.util.CancelTask)>(r1, null);

        return $r2;
    }

    public java.util.List getStations(ucar.unidata.geoloc.LatLonRect, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.util.ArrayList $r2, $r3;
        ucar.nc2.util.CancelTask r11;
        ucar.nc2.thredds.DqcRadarDatasetCollection r0;
        thredds.catalog.query.Location $r8, $r9;
        boolean $z0, $z1, $z2;
        double $d0, $d1;
        java.util.Iterator $r4;
        thredds.catalog.query.SelectStation $r1;
        thredds.catalog.query.Station r6;
        ucar.unidata.geoloc.LatLonRect r10;
        java.lang.Object $r5;
        ucar.unidata.geoloc.LatLonPointImpl $r7;

        r0 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        r10 := @parameter0: ucar.unidata.geoloc.LatLonRect;

        r11 := @parameter1: ucar.nc2.util.CancelTask;

        $r1 = r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: thredds.catalog.query.SelectStation selStation>;

        $r2 = virtualinvoke $r1.<thredds.catalog.query.SelectStation: java.util.ArrayList getStations()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (thredds.catalog.query.Station) $r5;

        $r7 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r7.<ucar.unidata.geoloc.LatLonPointImpl: void <init>()>();

        $r8 = virtualinvoke r6.<thredds.catalog.query.Station: thredds.catalog.query.Location getLocation()>();

        $d0 = virtualinvoke $r8.<thredds.catalog.query.Location: double getLatitude()>();

        $r9 = virtualinvoke r6.<thredds.catalog.query.Station: thredds.catalog.query.Location getLocation()>();

        $d1 = virtualinvoke $r9.<thredds.catalog.query.Location: double getLongitude()>();

        virtualinvoke $r7.<ucar.unidata.geoloc.LatLonPointImpl: void set(double,double)>($d0, $d1);

        $z1 = virtualinvoke r10.<ucar.unidata.geoloc.LatLonRect: boolean contains(ucar.unidata.geoloc.LatLonPoint)>($r7);

        if $z1 == 0 goto label2;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label2:
        if r11 == null goto label3;

        $z2 = interfaceinvoke r11.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z2 == 0 goto label3;

        return null;

     label3:
        goto label1;

     label4:
        return $r3;
    }

    public ucar.nc2.dt.RadialDatasetSweep getRadarDataset(java.lang.String, java.util.Date) throws java.io.IOException
    {
        ucar.nc2.dt.RadialDatasetSweep $r7;
        java.util.Date r2;
        ucar.nc2.thredds.ThreddsDataFactory$Result $r5;
        ucar.nc2.thredds.ThreddsDataFactory $r4;
        java.io.IOException $r8;
        ucar.nc2.thredds.DqcRadarDatasetCollection r0;
        java.lang.StringBuilder $r9, $r10, $r12, $r13;
        java.lang.String r1, $r11, $r14;
        thredds.catalog.InvDataset $r3;
        ucar.nc2.ft.FeatureDataset $r6;

        r0 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Date;

        $r3 = specialinvoke r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: thredds.catalog.InvDataset queryRadarStation(java.lang.String,java.util.Date)>(r1, r2);

        if $r3 != null goto label1;

        $r8 = new java.io.IOException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid time selected: ");

        $r11 = virtualinvoke r2.<java.util.Date: java.lang.String toString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r8;

     label1:
        $r4 = new ucar.nc2.thredds.ThreddsDataFactory;

        specialinvoke $r4.<ucar.nc2.thredds.ThreddsDataFactory: void <init>()>();

        $r5 = virtualinvoke $r4.<ucar.nc2.thredds.ThreddsDataFactory: ucar.nc2.thredds.ThreddsDataFactory$Result openFeatureDataset(thredds.catalog.InvDataset,ucar.nc2.util.CancelTask)>($r3, null);

        $r6 = $r5.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.ft.FeatureDataset featureDataset>;

        $r7 = (ucar.nc2.dt.RadialDatasetSweep) $r6;

        return $r7;
    }

    public java.net.URI getRadarDatasetURI(java.lang.String, java.util.Date) throws java.io.IOException
    {
        java.util.Date r2;
        thredds.catalog.InvAccess r6;
        java.io.IOException $r8;
        java.util.List $r4;
        ucar.nc2.thredds.DqcRadarDatasetCollection r0;
        java.lang.Object $r5;
        java.lang.StringBuilder $r9, $r10, $r12, $r13;
        java.lang.String r1, $r11, $r14;
        java.net.URI $r7;
        thredds.catalog.InvDataset $r3;

        r0 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Date;

        $r3 = specialinvoke r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: thredds.catalog.InvDataset queryRadarStation(java.lang.String,java.util.Date)>(r1, r2);

        $r4 = virtualinvoke $r3.<thredds.catalog.InvDataset: java.util.List getAccess()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        r6 = (thredds.catalog.InvAccess) $r5;

        $r7 = virtualinvoke r6.<thredds.catalog.InvAccess: java.net.URI getStandardUri()>();

        if $r7 != null goto label1;

        $r8 = new java.io.IOException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid time selected: ");

        $r11 = virtualinvoke r2.<java.util.Date: java.lang.String toString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r8;

     label1:
        return $r7;
    }

    private thredds.catalog.InvDataset queryRadarStation(java.lang.String, java.util.Date) throws java.io.IOException
    {
        java.util.Date r0;
        java.net.URISyntaxException $r37;
        thredds.catalog.query.QueryCapability $r4;
        java.net.URI $r6, $r17;
        thredds.catalog.InvCatalogFactory $r19;
        boolean $z0;
        thredds.catalog.InvDataset r24, r28;
        thredds.catalog.query.Query $r5;
        java.util.List $r22, $r25;
        thredds.catalog.InvCatalogImpl $r20;
        java.lang.StringBuilder $r8, $r9, $r11, $r13, $r14, $r15, $r21, $r30, $r31, $r32, $r33, $r35, $r39, $r40, $r42, $r43;
        java.util.ArrayList r26;
        ucar.nc2.thredds.DqcRadarDatasetCollection r3;
        java.lang.StringBuffer $r2;
        java.lang.String $r1, $r7, r10, $r12, $r16, $r18, $r34, $r36, $r41, $r44;
        java.io.IOException $r29, $r38;
        java.lang.Object $r23, $r27;

        r3 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        r10 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.Date;

        $r1 = staticinvoke <ucar.unidata.util.DateUtil: java.lang.String getTimeAsISO8601(java.util.Date)>(r0);

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r4 = r3.<ucar.nc2.thredds.DqcRadarDatasetCollection: thredds.catalog.query.QueryCapability dqc>;

        $r5 = virtualinvoke $r4.<thredds.catalog.query.QueryCapability: thredds.catalog.query.Query getQuery()>();

        $r6 = virtualinvoke $r5.<thredds.catalog.query.Query: java.net.URI getUriResolved()>();

        $r7 = virtualinvoke $r6.<java.net.URI: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("serviceType=OPENDAP");

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&stn=");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&dtime=");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

     label1:
        $r17 = new java.net.URI;

        $r18 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r17.<java.net.URI: void <init>(java.lang.String)>($r18);

     label2:
        goto label4;

     label3:
        $r37 := @caughtexception;

        $r38 = new java.io.IOException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** MalformedURLException on URL <>\n");

        $r41 = virtualinvoke $r37.<java.net.URISyntaxException: java.lang.String getMessage()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<java.io.IOException: void <init>(java.lang.String)>($r44);

        throw $r38;

     label4:
        $r19 = new thredds.catalog.InvCatalogFactory;

        specialinvoke $r19.<thredds.catalog.InvCatalogFactory: void <init>(java.lang.String,boolean)>("default", 0);

        $r20 = virtualinvoke $r19.<thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogImpl readXML(java.net.URI)>($r17);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $z0 = virtualinvoke $r20.<thredds.catalog.InvCatalogImpl: boolean check(java.lang.StringBuilder)>($r21);

        if $z0 != 0 goto label5;

        $r29 = new java.io.IOException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid catalog <");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r34 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.io.IOException: void <init>(java.lang.String)>($r36);

        throw $r29;

     label5:
        $r22 = virtualinvoke $r20.<thredds.catalog.InvCatalogImpl: java.util.List getDatasets()>();

        $r23 = interfaceinvoke $r22.<java.util.List: java.lang.Object get(int)>(0);

        r24 = (thredds.catalog.InvDataset) $r23;

        $r25 = virtualinvoke r24.<thredds.catalog.InvDataset: java.util.List getDatasets()>();

        r26 = (java.util.ArrayList) $r25;

        $r27 = virtualinvoke r26.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r28 = (thredds.catalog.InvDataset) $r27;

        return r28;

        catch java.net.URISyntaxException from label1 to label2 with label3;
    }

    private ucar.nc2.thredds.DqcRadarDatasetCollection$DqcRadarDatasetInfo queryRadarStation(java.lang.String, java.util.Date, java.util.Date) throws java.io.IOException
    {
        ucar.nc2.thredds.DqcRadarDatasetCollection$DatasetURIInfo $r45;
        thredds.catalog.InvCatalogFactory $r23;
        thredds.catalog.InvCatalogImpl $r24;
        ucar.nc2.thredds.DqcRadarDatasetCollection$DqcRadarDatasetInfo $r34;
        java.lang.StringBuilder $r6, $r7, $r9, $r15, $r16, $r17, $r19, $r20, $r21, $r25, $r48, $r49, $r50, $r51, $r53, $r57, $r58, $r60, $r61;
        java.util.ArrayList r30, $r31, $r32, $r33;
        java.lang.StringBuffer $r0;
        java.lang.String $r5, r8, $r10, $r12, $r14, $r18, $r22, $r43, $r52, $r54, $r59, $r62, $r64;
        java.io.IOException $r47, $r56;
        java.util.Date r11, r13, $r44;
        java.net.URISyntaxException $r55;
        thredds.catalog.InvAccess r40;
        thredds.catalog.query.QueryCapability $r2;
        java.net.URI $r4, $r41, $r63;
        boolean $z0;
        thredds.catalog.InvDataset r28, r36;
        ucar.nc2.thredds.DqcRadarDatasetCollection$InvDatasetInfo $r46;
        thredds.catalog.query.Query $r3;
        java.util.List $r26, $r29, $r37, $r38;
        ucar.nc2.thredds.DqcRadarDatasetCollection r1;
        int $i0, i1;
        java.lang.Object $r27, $r35, $r39, $r42;

        r1 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        r8 := @parameter0: java.lang.String;

        r11 := @parameter1: java.util.Date;

        r13 := @parameter2: java.util.Date;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<ucar.nc2.thredds.DqcRadarDatasetCollection: thredds.catalog.query.QueryCapability dqc>;

        $r3 = virtualinvoke $r2.<thredds.catalog.query.QueryCapability: thredds.catalog.query.Query getQuery()>();

        $r4 = virtualinvoke $r3.<thredds.catalog.query.Query: java.net.URI getUriResolved()>();

        $r5 = virtualinvoke $r4.<java.net.URI: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("serviceType=OPENDAP");

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&stn=");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        if r11 != null goto label1;

        if r13 != null goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&dtime=all");

        goto label2;

     label1:
        $r12 = staticinvoke <ucar.unidata.util.DateUtil: java.lang.String getTimeAsISO8601(java.util.Date)>(r11);

        $r14 = staticinvoke <ucar.unidata.util.DateUtil: java.lang.String getTimeAsISO8601(java.util.Date)>(r13);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&dateStart=");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&dateEnd=");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

     label2:
        $r63 = new java.net.URI;

        $r64 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r63.<java.net.URI: void <init>(java.lang.String)>($r64);

     label3:
        goto label5;

     label4:
        $r55 := @caughtexception;

        $r56 = new java.io.IOException;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** MalformedURLException on URL <>\n");

        $r59 = virtualinvoke $r55.<java.net.URISyntaxException: java.lang.String getMessage()>();

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r56.<java.io.IOException: void <init>(java.lang.String)>($r62);

        throw $r56;

     label5:
        $r23 = new thredds.catalog.InvCatalogFactory;

        specialinvoke $r23.<thredds.catalog.InvCatalogFactory: void <init>(java.lang.String,boolean)>("default", 0);

        $r24 = virtualinvoke $r23.<thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogImpl readXML(java.net.URI)>($r63);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $z0 = virtualinvoke $r24.<thredds.catalog.InvCatalogImpl: boolean check(java.lang.StringBuilder)>($r25);

        if $z0 != 0 goto label6;

        $r47 = new java.io.IOException;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid catalog <");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r63);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r52 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r47.<java.io.IOException: void <init>(java.lang.String)>($r54);

        throw $r47;

     label6:
        $r26 = virtualinvoke $r24.<thredds.catalog.InvCatalogImpl: java.util.List getDatasets()>();

        $r27 = interfaceinvoke $r26.<java.util.List: java.lang.Object get(int)>(0);

        r28 = (thredds.catalog.InvDataset) $r27;

        $r29 = virtualinvoke r28.<thredds.catalog.InvDataset: java.util.List getDatasets()>();

        r30 = (java.util.ArrayList) $r29;

        $r31 = new java.util.ArrayList;

        specialinvoke $r31.<java.util.ArrayList: void <init>()>();

        $r32 = new java.util.ArrayList;

        specialinvoke $r32.<java.util.ArrayList: void <init>()>();

        $r33 = new java.util.ArrayList;

        specialinvoke $r33.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label7:
        $i0 = virtualinvoke r30.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label8;

        $r35 = virtualinvoke r30.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r36 = (thredds.catalog.InvDataset) $r35;

        $r37 = virtualinvoke r36.<thredds.catalog.InvDataset: java.util.List getAccess()>();

        $r38 = virtualinvoke r36.<thredds.catalog.InvDataset: java.util.List getDates()>();

        $r39 = interfaceinvoke $r37.<java.util.List: java.lang.Object get(int)>(0);

        r40 = (thredds.catalog.InvAccess) $r39;

        $r41 = virtualinvoke r40.<thredds.catalog.InvAccess: java.net.URI getStandardUri()>();

        $r42 = interfaceinvoke $r38.<java.util.List: java.lang.Object get(int)>(0);

        $r43 = virtualinvoke $r42.<java.lang.Object: java.lang.String toString()>();

        $r44 = staticinvoke <ucar.nc2.units.DateUnit: java.util.Date getStandardOrISO(java.lang.String)>($r43);

        virtualinvoke $r31.<java.util.ArrayList: boolean add(java.lang.Object)>($r44);

        $r45 = new ucar.nc2.thredds.DqcRadarDatasetCollection$DatasetURIInfo;

        specialinvoke $r45.<ucar.nc2.thredds.DqcRadarDatasetCollection$DatasetURIInfo: void <init>(ucar.nc2.thredds.DqcRadarDatasetCollection,java.net.URI,java.util.Date)>(r1, $r41, $r44);

        virtualinvoke $r32.<java.util.ArrayList: boolean add(java.lang.Object)>($r45);

        $r46 = new ucar.nc2.thredds.DqcRadarDatasetCollection$InvDatasetInfo;

        specialinvoke $r46.<ucar.nc2.thredds.DqcRadarDatasetCollection$InvDatasetInfo: void <init>(ucar.nc2.thredds.DqcRadarDatasetCollection,thredds.catalog.InvDataset,java.util.Date)>(r1, r36, $r44);

        virtualinvoke $r33.<java.util.ArrayList: boolean add(java.lang.Object)>($r46);

        i1 = i1 + 1;

        goto label7;

     label8:
        $r34 = new ucar.nc2.thredds.DqcRadarDatasetCollection$DqcRadarDatasetInfo;

        specialinvoke $r34.<ucar.nc2.thredds.DqcRadarDatasetCollection$DqcRadarDatasetInfo: void <init>(ucar.nc2.thredds.DqcRadarDatasetCollection,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>(r1, $r31, $r32, $r33);

        return $r34;

        catch java.net.URISyntaxException from label2 to label3 with label4;
    }

    public java.util.ArrayList getRadarStationURIs(java.lang.String, java.util.Date, java.util.Date) throws java.io.IOException
    {
        java.util.Date r2, r3;
        ucar.nc2.thredds.DqcRadarDatasetCollection$DatasetURIInfo r8;
        java.util.ArrayList $r5, $r6;
        ucar.nc2.thredds.DqcRadarDatasetCollection r0;
        ucar.nc2.thredds.DqcRadarDatasetCollection$DqcRadarDatasetInfo $r4;
        int $i0, i1;
        java.lang.Object $r7;
        java.lang.String r1;
        java.net.URI $r9;

        r0 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Date;

        r3 := @parameter2: java.util.Date;

        $r4 = specialinvoke r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: ucar.nc2.thredds.DqcRadarDatasetCollection$DqcRadarDatasetInfo queryRadarStation(java.lang.String,java.util.Date,java.util.Date)>(r1, r2, r3);

        $r5 = virtualinvoke $r4.<ucar.nc2.thredds.DqcRadarDatasetCollection$DqcRadarDatasetInfo: java.util.ArrayList getURIList()>();

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r7 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r8 = (ucar.nc2.thredds.DqcRadarDatasetCollection$DatasetURIInfo) $r7;

        $r9 = staticinvoke <ucar.nc2.thredds.DqcRadarDatasetCollection$DatasetURIInfo: java.net.URI access$000(ucar.nc2.thredds.DqcRadarDatasetCollection$DatasetURIInfo)>(r8);

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r6;
    }

    public java.util.ArrayList getRadarStationDatasets(java.lang.String, java.util.Date, java.util.Date) throws java.io.IOException
    {
        java.util.Date r3, r4;
        ucar.nc2.thredds.ThreddsDataFactory$Result $r11;
        ucar.nc2.thredds.ThreddsDataFactory $r10;
        java.util.ArrayList $r0, $r6;
        ucar.nc2.thredds.DqcRadarDatasetCollection r1;
        ucar.nc2.thredds.DqcRadarDatasetCollection$DqcRadarDatasetInfo $r5;
        int $i0, i1;
        java.lang.Object $r7;
        java.lang.String r2;
        ucar.nc2.thredds.DqcRadarDatasetCollection$InvDatasetInfo r8;
        thredds.catalog.InvDataset $r9;
        ucar.nc2.ft.FeatureDataset $r12;

        r1 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.Date;

        r4 := @parameter2: java.util.Date;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r5 = specialinvoke r1.<ucar.nc2.thredds.DqcRadarDatasetCollection: ucar.nc2.thredds.DqcRadarDatasetCollection$DqcRadarDatasetInfo queryRadarStation(java.lang.String,java.util.Date,java.util.Date)>(r2, r3, r4);

        $r6 = virtualinvoke $r5.<ucar.nc2.thredds.DqcRadarDatasetCollection$DqcRadarDatasetInfo: java.util.ArrayList getInvList()>();

        $i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r8 = (ucar.nc2.thredds.DqcRadarDatasetCollection$InvDatasetInfo) $r7;

        $r9 = staticinvoke <ucar.nc2.thredds.DqcRadarDatasetCollection$InvDatasetInfo: thredds.catalog.InvDataset access$100(ucar.nc2.thredds.DqcRadarDatasetCollection$InvDatasetInfo)>(r8);

        $r10 = new ucar.nc2.thredds.ThreddsDataFactory;

        specialinvoke $r10.<ucar.nc2.thredds.ThreddsDataFactory: void <init>()>();

        $r11 = virtualinvoke $r10.<ucar.nc2.thredds.ThreddsDataFactory: ucar.nc2.thredds.ThreddsDataFactory$Result openFeatureDataset(thredds.catalog.InvDataset,ucar.nc2.util.CancelTask)>($r9, null);

        $r12 = $r11.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.ft.FeatureDataset featureDataset>;

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public java.util.ArrayList getRadarStationTimes(java.lang.String, java.util.Date, java.util.Date) throws java.io.IOException
    {
        ucar.nc2.thredds.DqcRadarDatasetCollection r0;
        java.util.Date r2, r3;
        ucar.nc2.thredds.DqcRadarDatasetCollection$DqcRadarDatasetInfo $r4;
        java.lang.String r1;
        java.util.ArrayList $r5;

        r0 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Date;

        r3 := @parameter2: java.util.Date;

        $r4 = specialinvoke r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: ucar.nc2.thredds.DqcRadarDatasetCollection$DqcRadarDatasetInfo queryRadarStation(java.lang.String,java.util.Date,java.util.Date)>(r1, r2, r3);

        $r5 = staticinvoke <ucar.nc2.thredds.DqcRadarDatasetCollection$DqcRadarDatasetInfo: java.util.ArrayList access$200(ucar.nc2.thredds.DqcRadarDatasetCollection$DqcRadarDatasetInfo)>($r4);

        return $r5;
    }

    public ucar.nc2.dt.DataIterator getDataIterator(int) throws java.io.IOException
    {
        int i0;
        ucar.nc2.thredds.DqcRadarDatasetCollection r0;

        r0 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        i0 := @parameter0: int;

        return null;
    }

    private java.util.List queryRadarStationRTimes(java.lang.String) throws java.io.IOException
    {
        thredds.catalog.query.SelectList $r1;
        ucar.nc2.thredds.DqcRadarDatasetCollection r0;
        java.lang.String r3;
        java.util.ArrayList $r2;

        r0 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: thredds.catalog.query.SelectList selTime>;

        $r2 = virtualinvoke $r1.<thredds.catalog.query.SelectList: java.util.ArrayList getChoices()>();

        return $r2;
    }

    public java.util.ArrayList getDataURIs(java.lang.String, ucar.unidata.util.DateSelection) throws java.io.IOException
    {
        ucar.nc2.thredds.DqcRadarDatasetCollection r0;
        java.lang.String r1;
        ucar.unidata.util.DateSelection r2;
        java.util.ArrayList $r3;

        r0 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: ucar.unidata.util.DateSelection;

        $r3 = virtualinvoke r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: java.util.ArrayList getDataURIs(java.lang.String,ucar.unidata.util.DateSelection,ucar.nc2.util.CancelTask)>(r1, r2, null);

        return $r3;
    }

    public java.util.ArrayList getData(java.lang.String, ucar.unidata.util.DateSelection) throws java.io.IOException
    {
        ucar.nc2.thredds.DqcRadarDatasetCollection r0;
        java.lang.String r1;
        ucar.unidata.util.DateSelection r2;
        java.util.ArrayList $r3;

        r0 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: ucar.unidata.util.DateSelection;

        $r3 = virtualinvoke r0.<ucar.nc2.thredds.DqcRadarDatasetCollection: java.util.ArrayList getData(java.lang.String,ucar.unidata.util.DateSelection,ucar.nc2.util.CancelTask)>(r1, r2, null);

        return $r3;
    }

    public java.util.ArrayList getData(java.lang.String, ucar.unidata.util.DateSelection, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.util.Date $r4, $r5;
        ucar.nc2.thredds.ThreddsDataFactory$Result $r15;
        ucar.nc2.thredds.ThreddsDataFactory $r14;
        ucar.unidata.util.DateSelection r3;
        java.util.ArrayList $r7, $r8;
        ucar.nc2.util.CancelTask r0;
        ucar.nc2.thredds.DqcRadarDatasetCollection r1;
        java.lang.String r2;
        ucar.nc2.thredds.DqcRadarDatasetCollection$InvDatasetInfo r12;
        thredds.catalog.InvDataset $r13;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r10;
        java.util.List $r9;
        ucar.nc2.thredds.DqcRadarDatasetCollection$DqcRadarDatasetInfo $r6;
        java.lang.Object $r11;
        ucar.nc2.ft.FeatureDataset $r16;

        r1 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: ucar.unidata.util.DateSelection;

        r0 := @parameter2: ucar.nc2.util.CancelTask;

        if r0 == null goto label1;

        $z1 = interfaceinvoke r0.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z1 == 0 goto label1;

        return null;

     label1:
        $r4 = virtualinvoke r3.<ucar.unidata.util.DateSelection: java.util.Date getStartFixedDate()>();

        $r5 = virtualinvoke r3.<ucar.unidata.util.DateSelection: java.util.Date getEndFixedDate()>();

        $r6 = specialinvoke r1.<ucar.nc2.thredds.DqcRadarDatasetCollection: ucar.nc2.thredds.DqcRadarDatasetCollection$DqcRadarDatasetInfo queryRadarStation(java.lang.String,java.util.Date,java.util.Date)>(r2, $r4, $r5);

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = virtualinvoke $r6.<ucar.nc2.thredds.DqcRadarDatasetCollection$DqcRadarDatasetInfo: java.util.ArrayList getInvList()>();

        $r9 = virtualinvoke r3.<ucar.unidata.util.DateSelection: java.util.List apply(java.util.List)>($r8);

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (ucar.nc2.thredds.DqcRadarDatasetCollection$InvDatasetInfo) $r11;

        $r13 = staticinvoke <ucar.nc2.thredds.DqcRadarDatasetCollection$InvDatasetInfo: thredds.catalog.InvDataset access$100(ucar.nc2.thredds.DqcRadarDatasetCollection$InvDatasetInfo)>(r12);

        $r14 = new ucar.nc2.thredds.ThreddsDataFactory;

        specialinvoke $r14.<ucar.nc2.thredds.ThreddsDataFactory: void <init>()>();

        $r15 = virtualinvoke $r14.<ucar.nc2.thredds.ThreddsDataFactory: ucar.nc2.thredds.ThreddsDataFactory$Result openFeatureDataset(thredds.catalog.InvDataset,ucar.nc2.util.CancelTask)>($r13, null);

        $r16 = $r15.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.ft.FeatureDataset featureDataset>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

        if r0 == null goto label3;

        $z0 = interfaceinvoke r0.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z0 == 0 goto label3;

        return null;

     label3:
        goto label2;

     label4:
        return $r7;
    }

    public java.util.ArrayList getDataURIs(java.lang.String, ucar.unidata.util.DateSelection, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.util.Date $r4, $r5;
        ucar.nc2.thredds.DqcRadarDatasetCollection$DatasetURIInfo r12;
        ucar.unidata.util.DateSelection r3;
        java.util.ArrayList $r7, $r9;
        ucar.nc2.util.CancelTask r0;
        ucar.nc2.thredds.DqcRadarDatasetCollection r1;
        java.lang.String r2;
        java.net.URI $r13;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r10;
        java.util.List $r8;
        ucar.nc2.thredds.DqcRadarDatasetCollection$DqcRadarDatasetInfo $r6;
        java.lang.Object $r11;

        r1 := @this: ucar.nc2.thredds.DqcRadarDatasetCollection;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: ucar.unidata.util.DateSelection;

        r0 := @parameter2: ucar.nc2.util.CancelTask;

        if r0 == null goto label1;

        $z1 = interfaceinvoke r0.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z1 == 0 goto label1;

        return null;

     label1:
        $r4 = virtualinvoke r3.<ucar.unidata.util.DateSelection: java.util.Date getStartFixedDate()>();

        $r5 = virtualinvoke r3.<ucar.unidata.util.DateSelection: java.util.Date getEndFixedDate()>();

        $r6 = specialinvoke r1.<ucar.nc2.thredds.DqcRadarDatasetCollection: ucar.nc2.thredds.DqcRadarDatasetCollection$DqcRadarDatasetInfo queryRadarStation(java.lang.String,java.util.Date,java.util.Date)>(r2, $r4, $r5);

        $r7 = virtualinvoke $r6.<ucar.nc2.thredds.DqcRadarDatasetCollection$DqcRadarDatasetInfo: java.util.ArrayList getURIList()>();

        $r8 = virtualinvoke r3.<ucar.unidata.util.DateSelection: java.util.List apply(java.util.List)>($r7);

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        $r10 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (ucar.nc2.thredds.DqcRadarDatasetCollection$DatasetURIInfo) $r11;

        $r13 = staticinvoke <ucar.nc2.thredds.DqcRadarDatasetCollection$DatasetURIInfo: java.net.URI access$000(ucar.nc2.thredds.DqcRadarDatasetCollection$DatasetURIInfo)>(r12);

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

        if r0 == null goto label3;

        $z0 = interfaceinvoke r0.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z0 == 0 goto label3;

        return null;

     label3:
        goto label2;

     label4:
        return $r9;
    }

    public static long roundTo(long, long)
    {
        int i1, $i3, $i4;
        long l0, l2, $l5, $l6;

        l0 := @parameter0: long;

        l2 := @parameter1: long;

        i1 = (int) l0;

        if i1 != 0 goto label1;

        return l2;

     label1:
        $i3 = (int) l2;

        $i4 = $i3 % i1;

        $l5 = (long) $i4;

        $l6 = l2 - $l5;

        return $l6;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.StringBuilder $r2, $r4, $r5, $r8, $r10, $r11, $r40, $r42, $r43, $r45, $r47, $r48, $r49, $r50, $r52, $r53, $r55;
        java.text.SimpleDateFormat $r31;
        long $l2, $l3, $l4;
        java.lang.AssertionError $r33, $r34, $r57, $r58;
        java.util.ArrayList $r18, $r26, $r27, $r39;
        java.lang.StringBuffer $r0;
        java.lang.String $r6, $r12, $r17, $r20, $r22, $r23, $r29, $r36, $r44, $r56;
        java.util.Date $r15, $r16, $r21, $r30, $r37, $r38;
        ucar.unidata.util.DateSelection $r25;
        java.net.URI $r24;
        boolean $z0, $z1, $z2, $z3;
        java.util.TimeZone $r32;
        java.util.List $r7;
        java.lang.String[] r59;
        ucar.nc2.thredds.DqcRadarDatasetCollection $r1;
        int $i0, $i1, $i5, $i6, $i7, $i8, i9, $i10;
        java.io.PrintStream $r3, $r9, $r41, $r46;
        thredds.catalog.query.Station $r14, r60, r61;
        java.lang.Object $r13, $r19, $r28, $r35, $r51, $r54;

        r59 := @parameter0: java.lang.String[];

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = staticinvoke <ucar.nc2.thredds.DqcRadarDatasetCollection: ucar.nc2.thredds.DqcRadarDatasetCollection factory(java.lang.String,java.lang.String,java.lang.StringBuffer)>("test", "http://motherlode.ucar.edu:8080/thredds/idd/radarLevel2", $r0);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" errs= ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r7 = virtualinvoke $r1.<ucar.nc2.thredds.DqcRadarDatasetCollection: java.util.List getStations()>();

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nstns= ");

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);

        $r13 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(2);

        $r14 = (thredds.catalog.query.Station) $r13;

        r60 = (thredds.catalog.query.Station) $r14;

        $r15 = staticinvoke <ucar.nc2.units.DateUnit: java.util.Date getStandardOrISO(java.lang.String)>("2007-06-9T12:12:00");

        $r16 = staticinvoke <ucar.nc2.units.DateUnit: java.util.Date getStandardOrISO(java.lang.String)>("2007-06-9T23:12:00");

        $r17 = virtualinvoke r60.<thredds.catalog.query.Station: java.lang.String getValue()>();

        $r18 = virtualinvoke $r1.<ucar.nc2.thredds.DqcRadarDatasetCollection: java.util.ArrayList getRadarStationTimes(java.lang.String,java.util.Date,java.util.Date)>($r17, $r15, $r16);

        $i1 = interfaceinvoke $r18.<java.util.List: int size()>();

        $r19 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>(1);

        $r20 = (java.lang.String) $r19;

        $r21 = staticinvoke <ucar.nc2.units.DateUnit: java.util.Date getStandardOrISO(java.lang.String)>($r20);

        $r22 = virtualinvoke r60.<thredds.catalog.query.Station: java.lang.String getValue()>();

        virtualinvoke $r1.<ucar.nc2.thredds.DqcRadarDatasetCollection: ucar.nc2.dt.RadialDatasetSweep getRadarDataset(java.lang.String,java.util.Date)>($r22, $r21);

        $r23 = virtualinvoke r60.<thredds.catalog.query.Station: java.lang.String getValue()>();

        $r24 = virtualinvoke $r1.<ucar.nc2.thredds.DqcRadarDatasetCollection: java.net.URI getRadarDatasetURI(java.lang.String,java.util.Date)>($r23, $r21);

        $z0 = <ucar.nc2.thredds.DqcRadarDatasetCollection: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if null != $r24 goto label1;

        $r58 = new java.lang.AssertionError;

        specialinvoke $r58.<java.lang.AssertionError: void <init>()>();

        throw $r58;

     label1:
        $z1 = <ucar.nc2.thredds.DqcRadarDatasetCollection: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        if 0 != $i1 goto label2;

        $r57 = new java.lang.AssertionError;

        specialinvoke $r57.<java.lang.AssertionError: void <init>()>();

        throw $r57;

     label2:
        $r25 = new ucar.unidata.util.DateSelection;

        specialinvoke $r25.<ucar.unidata.util.DateSelection: void <init>(java.util.Date,java.util.Date)>($r15, $r16);

        virtualinvoke $r25.<ucar.unidata.util.DateSelection: void setInterval(double)>(3600000.0);

        virtualinvoke $r25.<ucar.unidata.util.DateSelection: void setRoundTo(double)>(3600000.0);

        virtualinvoke $r25.<ucar.unidata.util.DateSelection: void setPreRange(double)>(500000.0);

        virtualinvoke $r25.<ucar.unidata.util.DateSelection: void setPostRange(double)>(500000.0);

        i9 = 0;

     label3:
        $i10 = interfaceinvoke $r7.<java.util.List: int size()>();

        if i9 >= $i10 goto label6;

        $r35 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i9);

        r61 = (thredds.catalog.query.Station) $r35;

        $r36 = virtualinvoke r61.<thredds.catalog.query.Station: java.lang.String getValue()>();

        $r37 = new java.util.Date;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = $l2 - 50065408L;

        specialinvoke $r37.<java.util.Date: void <init>(long)>($l3);

        $r38 = new java.util.Date;

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r38.<java.util.Date: void <init>(long)>($l4);

        $r39 = virtualinvoke $r1.<ucar.nc2.thredds.DqcRadarDatasetCollection: java.util.ArrayList getRadarStationTimes(java.lang.String,java.util.Date,java.util.Date)>($r36, $r37, $r38);

        $i5 = interfaceinvoke $r39.<java.util.List: int size()>();

        if $i5 <= 0 goto label4;

        $r46 = <java.lang.System: java.io.PrintStream err>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r61);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" times:");

        $i6 = interfaceinvoke $r39.<java.util.List: int size()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r51 = interfaceinvoke $r39.<java.util.List: java.lang.Object get(int)>(0);

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r51);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $i7 = interfaceinvoke $r39.<java.util.List: int size()>();

        $i8 = $i7 - 1;

        $r54 = interfaceinvoke $r39.<java.util.List: java.lang.Object get(int)>($i8);

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>($r56);

        goto label5;

     label4:
        $r41 = <java.lang.System: java.io.PrintStream err>;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r61);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" no times");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>($r44);

     label5:
        i9 = i9 + 1;

        goto label3;

     label6:
        staticinvoke <java.lang.System: void exit(int)>(0);

        $r26 = virtualinvoke $r1.<ucar.nc2.thredds.DqcRadarDatasetCollection: java.util.ArrayList getDataURIs(java.lang.String,ucar.unidata.util.DateSelection)>("KABX", $r25);

        $z2 = <ucar.nc2.thredds.DqcRadarDatasetCollection: boolean $assertionsDisabled>;

        if $z2 != 0 goto label7;

        if null != $r26 goto label7;

        $r34 = new java.lang.AssertionError;

        specialinvoke $r34.<java.lang.AssertionError: void <init>()>();

        throw $r34;

     label7:
        $r27 = virtualinvoke $r1.<ucar.nc2.thredds.DqcRadarDatasetCollection: java.util.ArrayList getData(java.lang.String,ucar.unidata.util.DateSelection,ucar.nc2.util.CancelTask)>("KABX", $r25, null);

        $z3 = <ucar.nc2.thredds.DqcRadarDatasetCollection: boolean $assertionsDisabled>;

        if $z3 != 0 goto label8;

        if null != $r27 goto label8;

        $r33 = new java.lang.AssertionError;

        specialinvoke $r33.<java.lang.AssertionError: void <init>()>();

        throw $r33;

     label8:
        $r28 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>(1);

        $r29 = (java.lang.String) $r28;

        $r30 = staticinvoke <ucar.nc2.units.DateUnit: java.util.Date getStandardOrISO(java.lang.String)>($r29);

        $r31 = new java.text.SimpleDateFormat;

        specialinvoke $r31.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd\'T\'HH:mm:ss");

        $r32 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke $r31.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r32);

        virtualinvoke $r31.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r30);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lucar/nc2/thredds/DqcRadarDatasetCollection;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <ucar.nc2.thredds.DqcRadarDatasetCollection: boolean $assertionsDisabled> = $z1;

        return;
    }
}
