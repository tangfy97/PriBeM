public class org.eclipse.jetty.client.HttpDestination extends java.lang.Object implements org.eclipse.jetty.util.component.Dumpable
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    private final java.util.List _queue;
    private final java.util.List _connections;
    private final java.util.concurrent.BlockingQueue _newQueue;
    private final java.util.List _idle;
    private final org.eclipse.jetty.client.HttpClient _client;
    private final org.eclipse.jetty.client.Address _address;
    private final boolean _ssl;
    private final org.eclipse.jetty.io.ByteArrayBuffer _hostHeader;
    private volatile int _maxConnections;
    private volatile int _maxQueueSize;
    private int _pendingConnections;
    private int _newConnection;
    private volatile org.eclipse.jetty.client.Address _proxy;
    private org.eclipse.jetty.client.security.Authentication _proxyAuthentication;
    private org.eclipse.jetty.http.PathMap _authorizations;
    private java.util.List _cookies;

    void <init>(org.eclipse.jetty.client.HttpClient, org.eclipse.jetty.client.Address, boolean)
    {
        org.eclipse.jetty.client.Address r6;
        java.util.ArrayList $r4;
        org.eclipse.jetty.client.HttpClient r5, $r7, $r8;
        org.eclipse.jetty.io.ByteArrayBuffer $r10;
        short $s4;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r9, r15;
        java.util.LinkedList $r1, $r2;
        org.eclipse.jetty.client.HttpDestination r0;
        boolean z0, $z1;
        java.util.concurrent.ArrayBlockingQueue $r3;
        java.lang.StringBuilder $r11, $r12, $r13, $r14;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        r5 := @parameter0: org.eclipse.jetty.client.HttpClient;

        r6 := @parameter1: org.eclipse.jetty.client.Address;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _queue> = $r1;

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _connections> = $r2;

        $r3 = new java.util.concurrent.ArrayBlockingQueue;

        specialinvoke $r3.<java.util.concurrent.ArrayBlockingQueue: void <init>(int,boolean)>(10, 1);

        r0.<org.eclipse.jetty.client.HttpDestination: java.util.concurrent.BlockingQueue _newQueue> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _idle> = $r4;

        r0.<org.eclipse.jetty.client.HttpDestination: int _pendingConnections> = 0;

        r0.<org.eclipse.jetty.client.HttpDestination: int _newConnection> = 0;

        r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.client.HttpClient _client> = r5;

        r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.client.Address _address> = r6;

        r0.<org.eclipse.jetty.client.HttpDestination: boolean _ssl> = z0;

        $r7 = r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.client.HttpClient _client>;

        $i0 = virtualinvoke $r7.<org.eclipse.jetty.client.HttpClient: int getMaxConnectionsPerAddress()>();

        r0.<org.eclipse.jetty.client.HttpDestination: int _maxConnections> = $i0;

        $r8 = r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.client.HttpClient _client>;

        $i1 = virtualinvoke $r8.<org.eclipse.jetty.client.HttpClient: int getMaxQueueSizePerAddress()>();

        r0.<org.eclipse.jetty.client.HttpDestination: int _maxQueueSize> = $i1;

        $r9 = virtualinvoke r6.<org.eclipse.jetty.client.Address: java.lang.String getHost()>();

        r15 = $r9;

        $i2 = virtualinvoke r6.<org.eclipse.jetty.client.Address: int getPort()>();

        $z1 = r0.<org.eclipse.jetty.client.HttpDestination: boolean _ssl>;

        if $z1 == 0 goto label1;

        $s4 = 443;

        goto label2;

     label1:
        $s4 = 80;

     label2:
        if $i2 == $s4 goto label3;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i3 = virtualinvoke r6.<org.eclipse.jetty.client.Address: int getPort()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r10 = new org.eclipse.jetty.io.ByteArrayBuffer;

        specialinvoke $r10.<org.eclipse.jetty.io.ByteArrayBuffer: void <init>(java.lang.String)>(r15);

        r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.io.ByteArrayBuffer _hostHeader> = $r10;

        return;
    }

    public org.eclipse.jetty.client.HttpClient getHttpClient()
    {
        org.eclipse.jetty.client.HttpClient $r1;
        org.eclipse.jetty.client.HttpDestination r0;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        $r1 = r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.client.HttpClient _client>;

        return $r1;
    }

    public org.eclipse.jetty.client.Address getAddress()
    {
        org.eclipse.jetty.client.HttpDestination r0;
        org.eclipse.jetty.client.Address $r1;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        $r1 = r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.client.Address _address>;

        return $r1;
    }

    public boolean isSecure()
    {
        org.eclipse.jetty.client.HttpDestination r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        $z0 = r0.<org.eclipse.jetty.client.HttpDestination: boolean _ssl>;

        return $z0;
    }

    public org.eclipse.jetty.io.Buffer getHostHeader()
    {
        org.eclipse.jetty.io.ByteArrayBuffer $r1;
        org.eclipse.jetty.client.HttpDestination r0;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        $r1 = r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.io.ByteArrayBuffer _hostHeader>;

        return $r1;
    }

    public int getMaxConnections()
    {
        int $i0;
        org.eclipse.jetty.client.HttpDestination r0;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        $i0 = r0.<org.eclipse.jetty.client.HttpDestination: int _maxConnections>;

        return $i0;
    }

    public void setMaxConnections(int)
    {
        int i0;
        org.eclipse.jetty.client.HttpDestination r0;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        i0 := @parameter0: int;

        r0.<org.eclipse.jetty.client.HttpDestination: int _maxConnections> = i0;

        return;
    }

    public int getMaxQueueSize()
    {
        int $i0;
        org.eclipse.jetty.client.HttpDestination r0;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        $i0 = r0.<org.eclipse.jetty.client.HttpDestination: int _maxQueueSize>;

        return $i0;
    }

    public void setMaxQueueSize(int)
    {
        int i0;
        org.eclipse.jetty.client.HttpDestination r0;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        i0 := @parameter0: int;

        r0.<org.eclipse.jetty.client.HttpDestination: int _maxQueueSize> = i0;

        return;
    }

    public int getConnections()
    {
        java.lang.Throwable $r2;
        java.util.List $r1;
        int $i0;
        org.eclipse.jetty.client.HttpDestination r0;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        entermonitor r0;

     label1:
        $r1 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _connections>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        exitmonitor r0;

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getIdleConnections()
    {
        java.lang.Throwable $r2;
        java.util.List $r1;
        int $i0;
        org.eclipse.jetty.client.HttpDestination r0;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        entermonitor r0;

     label1:
        $r1 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _idle>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        exitmonitor r0;

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void addAuthorization(java.lang.String, org.eclipse.jetty.client.security.Authentication)
    {
        java.lang.Throwable $r6;
        java.lang.String r2;
        org.eclipse.jetty.http.PathMap $r1, $r4, $r5;
        org.eclipse.jetty.client.security.Authentication r3;
        org.eclipse.jetty.client.HttpDestination r0;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.eclipse.jetty.client.security.Authentication;

        entermonitor r0;

     label1:
        $r1 = r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.http.PathMap _authorizations>;

        if $r1 != null goto label2;

        $r5 = new org.eclipse.jetty.http.PathMap;

        specialinvoke $r5.<org.eclipse.jetty.http.PathMap: void <init>()>();

        r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.http.PathMap _authorizations> = $r5;

     label2:
        $r4 = r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.http.PathMap _authorizations>;

        virtualinvoke $r4.<org.eclipse.jetty.http.PathMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r6;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void addCookie(org.eclipse.jetty.http.HttpCookie)
    {
        java.lang.Throwable $r5;
        java.util.List $r1, $r3;
        org.eclipse.jetty.http.HttpCookie r2;
        org.eclipse.jetty.client.HttpDestination r0;
        java.util.ArrayList $r4;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        r2 := @parameter0: org.eclipse.jetty.http.HttpCookie;

        entermonitor r0;

     label1:
        $r1 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _cookies>;

        if $r1 != null goto label2;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _cookies> = $r4;

     label2:
        $r3 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _cookies>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private org.eclipse.jetty.client.AbstractHttpConnection getConnection(long) throws java.io.IOException
    {
        java.lang.Throwable $r10;
        org.eclipse.jetty.client.AbstractHttpConnection $r1, r11;
        long l7;
        byte $b0;
        int $i1, $i2, i3, $i4, $i5, $i6, $i8;
        org.eclipse.jetty.client.HttpDestination r0;
        boolean $z0, z1;
        java.util.concurrent.BlockingQueue $r3;
        java.io.IOException $r5;
        java.util.List $r2;
        java.lang.InterruptedException $r6, $r8;
        java.lang.Object $r4;
        org.eclipse.jetty.util.log.Logger $r7, $r9;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        l7 := @parameter0: long;

        r11 = null;

     label01:
        if r11 != null goto label16;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.client.AbstractHttpConnection getIdleConnection()>();

        r11 = $r1;

        if $r1 != null goto label16;

        $b0 = l7 cmp 0L;

        $i8 = (int) $b0;

        if $i8 <= 0 goto label16;

        z1 = 0;

        entermonitor r0;

     label02:
        $r2 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _connections>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i2 = r0.<org.eclipse.jetty.client.HttpDestination: int _pendingConnections>;

        i3 = $i1 + $i2;

        $i4 = r0.<org.eclipse.jetty.client.HttpDestination: int _maxConnections>;

        if i3 >= $i4 goto label03;

        $i5 = r0.<org.eclipse.jetty.client.HttpDestination: int _newConnection>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jetty.client.HttpDestination: int _newConnection> = $i6;

        z1 = 1;

     label03:
        exitmonitor r0;

     label04:
        goto label07;

     label05:
        $r10 := @caughtexception;

        exitmonitor r0;

     label06:
        throw $r10;

     label07:
        if z1 == 0 goto label12;

        virtualinvoke r0.<org.eclipse.jetty.client.HttpDestination: void startNewConnection()>();

     label08:
        $r3 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.concurrent.BlockingQueue _newQueue>;

        $r4 = interfaceinvoke $r3.<java.util.concurrent.BlockingQueue: java.lang.Object take()>();

        $z0 = $r4 instanceof org.eclipse.jetty.client.AbstractHttpConnection;

        if $z0 == 0 goto label09;

        r11 = (org.eclipse.jetty.client.AbstractHttpConnection) $r4;

        goto label10;

     label09:
        $r5 = (java.io.IOException) $r4;

        throw $r5;

     label10:
        goto label15;

     label11:
        $r8 := @caughtexception;

        $r9 = <org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r9.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r8);

        goto label15;

     label12:
        staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        staticinvoke <java.lang.Thread: void sleep(long)>(200L);

        l7 = l7 - 200L;

     label13:
        goto label15;

     label14:
        $r6 := @caughtexception;

        $r7 = <org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r7.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r6);

     label15:
        goto label01;

     label16:
        return r11;

        catch java.lang.Throwable from label02 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.InterruptedException from label08 to label10 with label11;
        catch java.lang.InterruptedException from label12 to label13 with label14;
    }

    public org.eclipse.jetty.client.AbstractHttpConnection reserveConnection(long) throws java.io.IOException
    {
        long l0;
        org.eclipse.jetty.client.AbstractHttpConnection $r1;
        org.eclipse.jetty.client.HttpDestination r0;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        l0 := @parameter0: long;

        $r1 = specialinvoke r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.client.AbstractHttpConnection getConnection(long)>(l0);

        if $r1 == null goto label1;

        virtualinvoke $r1.<org.eclipse.jetty.client.AbstractHttpConnection: void setReserved(boolean)>(1);

     label1:
        return $r1;
    }

    public org.eclipse.jetty.client.AbstractHttpConnection getIdleConnection() throws java.io.IOException
    {
        java.lang.Throwable $r6;
        org.eclipse.jetty.client.AbstractHttpConnection r7;
        java.util.List $r1, $r2, $r3, $r5;
        int $i0, $i1, $i2;
        java.lang.Object $r4;
        org.eclipse.jetty.client.HttpDestination r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        r7 = null;

     label1:
        entermonitor r0;

     label2:
        if r7 == null goto label3;

        $r5 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _connections>;

        interfaceinvoke $r5.<java.util.List: boolean remove(java.lang.Object)>(r7);

        virtualinvoke r7.<org.eclipse.jetty.client.AbstractHttpConnection: void close()>();

        r7 = null;

     label3:
        $r1 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _idle>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 <= 0 goto label4;

        $r3 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _idle>;

        $r2 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _idle>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object remove(int)>($i2);

        r7 = (org.eclipse.jetty.client.AbstractHttpConnection) $r4;

     label4:
        exitmonitor r0;

     label5:
        goto label8;

     label6:
        $r6 := @caughtexception;

        exitmonitor r0;

     label7:
        throw $r6;

     label8:
        if r7 != null goto label9;

        return null;

     label9:
        $z0 = virtualinvoke r7.<org.eclipse.jetty.client.AbstractHttpConnection: boolean cancelIdleTimeout()>();

        if $z0 == 0 goto label1;

        return r7;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    protected void startNewConnection()
    {
        java.lang.Throwable $r4;
        org.eclipse.jetty.client.HttpClient$Connector r5;
        java.lang.Exception $r2;
        org.eclipse.jetty.client.HttpClient $r1;
        int $i0, $i1;
        org.eclipse.jetty.util.log.Logger $r3;
        org.eclipse.jetty.client.HttpDestination r0;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

     label1:
        entermonitor r0;

     label2:
        $i0 = r0.<org.eclipse.jetty.client.HttpDestination: int _pendingConnections>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jetty.client.HttpDestination: int _pendingConnections> = $i1;

        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r4 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r4;

     label6:
        $r1 = r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.client.HttpClient _client>;

        r5 = $r1.<org.eclipse.jetty.client.HttpClient: org.eclipse.jetty.client.HttpClient$Connector _connector>;

        if r5 == null goto label7;

        interfaceinvoke r5.<org.eclipse.jetty.client.HttpClient$Connector: void startConnection(org.eclipse.jetty.client.HttpDestination)>(r0);

     label7:
        goto label9;

     label8:
        $r2 := @caughtexception;

        $r3 = <org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r3.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r2);

        virtualinvoke r0.<org.eclipse.jetty.client.HttpDestination: void onConnectionFailed(java.lang.Throwable)>($r2);

     label9:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
        catch java.lang.Exception from label1 to label7 with label8;
    }

    public void onConnectionFailed(java.lang.Throwable)
    {
        java.lang.Throwable r9, $r12, r13;
        org.eclipse.jetty.client.HttpClient $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.eclipse.jetty.client.HttpDestination r0;
        boolean $z0, $z1, $z2, z3;
        java.util.concurrent.BlockingQueue $r2;
        java.util.List $r1, $r3, $r6;
        java.lang.InterruptedException $r10;
        java.lang.Object $r4;
        org.eclipse.jetty.client.HttpEventListener $r8;
        org.eclipse.jetty.util.log.Logger $r11;
        org.eclipse.jetty.client.HttpExchange r5;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        r9 := @parameter0: java.lang.Throwable;

        r13 = null;

        z3 = 0;

        entermonitor r0;

     label01:
        $i0 = r0.<org.eclipse.jetty.client.HttpDestination: int _pendingConnections>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jetty.client.HttpDestination: int _pendingConnections> = $i1;

        $i2 = r0.<org.eclipse.jetty.client.HttpDestination: int _newConnection>;

        if $i2 <= 0 goto label02;

        r13 = r9;

        $i4 = r0.<org.eclipse.jetty.client.HttpDestination: int _newConnection>;

        $i5 = $i4 - 1;

        r0.<org.eclipse.jetty.client.HttpDestination: int _newConnection> = $i5;

        goto label04;

     label02:
        $r1 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _queue>;

        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i3 <= 0 goto label04;

        $r3 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _queue>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object remove(int)>(0);

        r5 = (org.eclipse.jetty.client.HttpExchange) $r4;

        $z0 = virtualinvoke r5.<org.eclipse.jetty.client.HttpExchange: boolean setStatus(int)>(9);

        if $z0 == 0 goto label03;

        $r8 = virtualinvoke r5.<org.eclipse.jetty.client.HttpExchange: org.eclipse.jetty.client.HttpEventListener getEventListener()>();

        interfaceinvoke $r8.<org.eclipse.jetty.client.HttpEventListener: void onConnectionFailed(java.lang.Throwable)>(r9);

     label03:
        $r6 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _queue>;

        $z1 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label04;

        $r7 = r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.client.HttpClient _client>;

        $z2 = virtualinvoke $r7.<org.eclipse.jetty.client.HttpClient: boolean isStarted()>();

        if $z2 == 0 goto label04;

        z3 = 1;

     label04:
        exitmonitor r0;

     label05:
        goto label08;

     label06:
        $r12 := @caughtexception;

        exitmonitor r0;

     label07:
        throw $r12;

     label08:
        if z3 == 0 goto label09;

        virtualinvoke r0.<org.eclipse.jetty.client.HttpDestination: void startNewConnection()>();

     label09:
        if r13 == null goto label13;

     label10:
        $r2 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.concurrent.BlockingQueue _newQueue>;

        interfaceinvoke $r2.<java.util.concurrent.BlockingQueue: void put(java.lang.Object)>(r13);

     label11:
        goto label13;

     label12:
        $r10 := @caughtexception;

        $r11 = <org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r11.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r10);

     label13:
        return;

        catch java.lang.Throwable from label01 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.InterruptedException from label10 to label11 with label12;
    }

    public void onException(java.lang.Throwable)
    {
        java.lang.Throwable r6, $r7;
        java.util.List $r1, $r2;
        int $i0, $i1, $i2;
        java.lang.Object $r3;
        org.eclipse.jetty.client.HttpEventListener $r5;
        org.eclipse.jetty.client.HttpDestination r0;
        org.eclipse.jetty.client.HttpExchange r4;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        r6 := @parameter0: java.lang.Throwable;

        entermonitor r0;

     label1:
        $i0 = r0.<org.eclipse.jetty.client.HttpDestination: int _pendingConnections>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jetty.client.HttpDestination: int _pendingConnections> = $i1;

        $r1 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _queue>;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i2 <= 0 goto label2;

        $r2 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _queue>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>(0);

        r4 = (org.eclipse.jetty.client.HttpExchange) $r3;

        $z0 = virtualinvoke r4.<org.eclipse.jetty.client.HttpExchange: boolean setStatus(int)>(9);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r4.<org.eclipse.jetty.client.HttpExchange: org.eclipse.jetty.client.HttpEventListener getEventListener()>();

        interfaceinvoke $r5.<org.eclipse.jetty.client.HttpEventListener: void onException(java.lang.Throwable)>(r6);

     label2:
        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void onNewConnection(org.eclipse.jetty.client.AbstractHttpConnection) throws java.io.IOException
    {
        java.lang.Throwable $r18;
        org.eclipse.jetty.io.EndPoint $r4;
        org.eclipse.jetty.client.Address $r13, $r14;
        org.eclipse.jetty.client.AbstractHttpConnection r1, r19;
        org.eclipse.jetty.client.HttpDestination$ConnectExchange $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.eclipse.jetty.client.HttpDestination r0;
        boolean $z0, $z1;
        java.util.concurrent.BlockingQueue $r7;
        org.eclipse.jetty.client.SelectConnector$UpgradableEndPoint r20;
        java.util.List $r2, $r3, $r5, $r9, $r15;
        java.lang.InterruptedException $r16;
        java.lang.Object $r6, $r10;
        org.eclipse.jetty.util.log.Logger $r17;
        org.eclipse.jetty.client.HttpExchange $r8, r11;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        r1 := @parameter0: org.eclipse.jetty.client.AbstractHttpConnection;

        r19 = null;

        entermonitor r0;

     label01:
        $i0 = r0.<org.eclipse.jetty.client.HttpDestination: int _pendingConnections>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jetty.client.HttpDestination: int _pendingConnections> = $i1;

        $r2 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _connections>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        $i2 = r0.<org.eclipse.jetty.client.HttpDestination: int _newConnection>;

        if $i2 <= 0 goto label02;

        r19 = r1;

        $i4 = r0.<org.eclipse.jetty.client.HttpDestination: int _newConnection>;

        $i5 = $i4 - 1;

        r0.<org.eclipse.jetty.client.HttpDestination: int _newConnection> = $i5;

        goto label05;

     label02:
        $r3 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _queue>;

        $i3 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i3 != 0 goto label03;

        virtualinvoke r1.<org.eclipse.jetty.client.AbstractHttpConnection: void setIdleTimeout()>();

        $r15 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _idle>;

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(r1);

        goto label05;

     label03:
        $r4 = virtualinvoke r1.<org.eclipse.jetty.client.AbstractHttpConnection: org.eclipse.jetty.io.EndPoint getEndPoint()>();

        $z0 = virtualinvoke r0.<org.eclipse.jetty.client.HttpDestination: boolean isProxied()>();

        if $z0 == 0 goto label04;

        $z1 = $r4 instanceof org.eclipse.jetty.client.SelectConnector$UpgradableEndPoint;

        if $z1 == 0 goto label04;

        r20 = (org.eclipse.jetty.client.SelectConnector$UpgradableEndPoint) $r4;

        $r9 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _queue>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0);

        r11 = (org.eclipse.jetty.client.HttpExchange) $r10;

        $r12 = new org.eclipse.jetty.client.HttpDestination$ConnectExchange;

        $r13 = virtualinvoke r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.client.Address getAddress()>();

        specialinvoke $r12.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: void <init>(org.eclipse.jetty.client.HttpDestination,org.eclipse.jetty.client.Address,org.eclipse.jetty.client.SelectConnector$UpgradableEndPoint,org.eclipse.jetty.client.HttpExchange)>(r0, $r13, r20, r11);

        $r14 = virtualinvoke r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.client.Address getProxy()>();

        virtualinvoke $r12.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: void setAddress(org.eclipse.jetty.client.Address)>($r14);

        virtualinvoke r0.<org.eclipse.jetty.client.HttpDestination: void send(org.eclipse.jetty.client.AbstractHttpConnection,org.eclipse.jetty.client.HttpExchange)>(r1, $r12);

        goto label05;

     label04:
        $r5 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _queue>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object remove(int)>(0);

        $r8 = (org.eclipse.jetty.client.HttpExchange) $r6;

        virtualinvoke r0.<org.eclipse.jetty.client.HttpDestination: void send(org.eclipse.jetty.client.AbstractHttpConnection,org.eclipse.jetty.client.HttpExchange)>(r1, $r8);

     label05:
        exitmonitor r0;

     label06:
        goto label09;

     label07:
        $r18 := @caughtexception;

        exitmonitor r0;

     label08:
        throw $r18;

     label09:
        if r19 == null goto label13;

     label10:
        $r7 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.concurrent.BlockingQueue _newQueue>;

        interfaceinvoke $r7.<java.util.concurrent.BlockingQueue: void put(java.lang.Object)>(r19);

     label11:
        goto label13;

     label12:
        $r16 := @caughtexception;

        $r17 = <org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r17.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r16);

     label13:
        return;

        catch java.lang.Throwable from label01 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.InterruptedException from label10 to label11 with label12;
    }

    public void returnConnection(org.eclipse.jetty.client.AbstractHttpConnection, boolean) throws java.io.IOException
    {
        java.lang.Throwable $r9, $r10;
        org.eclipse.jetty.io.EndPoint $r4;
        org.eclipse.jetty.client.AbstractHttpConnection r0;
        org.eclipse.jetty.client.HttpClient $r13;
        int $i0;
        boolean $z0, z1, $z2, $z3, $z4, z5;
        org.eclipse.jetty.client.HttpDestination r1;
        java.io.IOException $r11;
        java.util.List $r2, $r3, $r5, $r6, $r8;
        java.lang.Object $r7;
        org.eclipse.jetty.util.log.Logger $r12;
        org.eclipse.jetty.client.HttpExchange r14;

        r1 := @this: org.eclipse.jetty.client.HttpDestination;

        r0 := @parameter0: org.eclipse.jetty.client.AbstractHttpConnection;

        z1 := @parameter1: boolean;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.client.AbstractHttpConnection: boolean isReserved()>();

        if $z0 == 0 goto label01;

        virtualinvoke r0.<org.eclipse.jetty.client.AbstractHttpConnection: void setReserved(boolean)>(0);

     label01:
        if z1 == 0 goto label05;

     label02:
        virtualinvoke r0.<org.eclipse.jetty.client.AbstractHttpConnection: void close()>();

     label03:
        goto label05;

     label04:
        $r11 := @caughtexception;

        $r12 = <org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r12.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r11);

     label05:
        $r13 = r1.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.client.HttpClient _client>;

        $z4 = virtualinvoke $r13.<org.eclipse.jetty.client.HttpClient: boolean isStarted()>();

        if $z4 != 0 goto label06;

        return;

     label06:
        if z1 != 0 goto label14;

        $r4 = virtualinvoke r0.<org.eclipse.jetty.client.AbstractHttpConnection: org.eclipse.jetty.io.EndPoint getEndPoint()>();

        $z3 = interfaceinvoke $r4.<org.eclipse.jetty.io.EndPoint: boolean isOpen()>();

        if $z3 == 0 goto label14;

        entermonitor r1;

     label07:
        $r5 = r1.<org.eclipse.jetty.client.HttpDestination: java.util.List _queue>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 != 0 goto label08;

        virtualinvoke r0.<org.eclipse.jetty.client.AbstractHttpConnection: void setIdleTimeout()>();

        $r8 = r1.<org.eclipse.jetty.client.HttpDestination: java.util.List _idle>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r0);

        goto label09;

     label08:
        $r6 = r1.<org.eclipse.jetty.client.HttpDestination: java.util.List _queue>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object remove(int)>(0);

        r14 = (org.eclipse.jetty.client.HttpExchange) $r7;

        virtualinvoke r1.<org.eclipse.jetty.client.HttpDestination: void send(org.eclipse.jetty.client.AbstractHttpConnection,org.eclipse.jetty.client.HttpExchange)>(r0, r14);

     label09:
        virtualinvoke r1.<java.lang.Object: void notifyAll()>();

        exitmonitor r1;

     label10:
        goto label13;

     label11:
        $r10 := @caughtexception;

        exitmonitor r1;

     label12:
        throw $r10;

     label13:
        goto label21;

     label14:
        z5 = 0;

        entermonitor r1;

     label15:
        $r2 = r1.<org.eclipse.jetty.client.HttpDestination: java.util.List _connections>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r0);

        $r3 = r1.<org.eclipse.jetty.client.HttpDestination: java.util.List _queue>;

        $z2 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label16;

        z5 = 1;

     label16:
        exitmonitor r1;

     label17:
        goto label20;

     label18:
        $r9 := @caughtexception;

        exitmonitor r1;

     label19:
        throw $r9;

     label20:
        if z5 == 0 goto label21;

        virtualinvoke r1.<org.eclipse.jetty.client.HttpDestination: void startNewConnection()>();

     label21:
        return;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Throwable from label07 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label15 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    public void returnIdleConnection(org.eclipse.jetty.client.AbstractHttpConnection)
    {
        java.lang.Throwable $r5;
        org.eclipse.jetty.io.EndPoint $r3, $r4;
        org.eclipse.jetty.client.AbstractHttpConnection r0;
        long $l1;
        org.eclipse.jetty.client.HttpClient $r2;
        java.util.List $r6, $r7, $r8;
        int $i0;
        org.eclipse.jetty.client.HttpDestination r1;
        boolean $z0, z1, $z2;

        r1 := @this: org.eclipse.jetty.client.HttpDestination;

        r0 := @parameter0: org.eclipse.jetty.client.AbstractHttpConnection;

        if r0 == null goto label1;

        $r3 = virtualinvoke r0.<org.eclipse.jetty.client.AbstractHttpConnection: org.eclipse.jetty.io.EndPoint getEndPoint()>();

        if $r3 == null goto label1;

        $r4 = virtualinvoke r0.<org.eclipse.jetty.client.AbstractHttpConnection: org.eclipse.jetty.io.EndPoint getEndPoint()>();

        $i0 = interfaceinvoke $r4.<org.eclipse.jetty.io.EndPoint: int getMaxIdleTime()>();

        $l1 = (long) $i0;

        goto label2;

     label1:
        $l1 = -1L;

     label2:
        virtualinvoke r0.<org.eclipse.jetty.client.AbstractHttpConnection: void onIdleExpired(long)>($l1);

        z1 = 0;

        entermonitor r1;

     label3:
        $r6 = r1.<org.eclipse.jetty.client.HttpDestination: java.util.List _idle>;

        interfaceinvoke $r6.<java.util.List: boolean remove(java.lang.Object)>(r0);

        $r7 = r1.<org.eclipse.jetty.client.HttpDestination: java.util.List _connections>;

        interfaceinvoke $r7.<java.util.List: boolean remove(java.lang.Object)>(r0);

        $r8 = r1.<org.eclipse.jetty.client.HttpDestination: java.util.List _queue>;

        $z2 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label4;

        $r2 = r1.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.client.HttpClient _client>;

        $z0 = virtualinvoke $r2.<org.eclipse.jetty.client.HttpClient: boolean isStarted()>();

        if $z0 == 0 goto label4;

        z1 = 1;

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r5 := @caughtexception;

        exitmonitor r1;

     label7:
        throw $r5;

     label8:
        if z1 == 0 goto label9;

        virtualinvoke r1.<org.eclipse.jetty.client.HttpDestination: void startNewConnection()>();

     label9:
        return;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void send(org.eclipse.jetty.client.HttpExchange) throws java.io.IOException
    {
        java.lang.Object[] $r11;
        java.lang.reflect.Constructor $r10;
        org.eclipse.jetty.client.HttpClient $r1, $r3;
        int $i0, i1, $i3;
        org.eclipse.jetty.client.security.SecurityListener $r22;
        java.lang.String r7, $r19;
        java.util.LinkedList $r2;
        org.eclipse.jetty.client.HttpDestination r0;
        boolean $z0;
        java.lang.Class[] $r9;
        java.lang.Exception $r14;
        java.lang.Object $r6, $r12;
        java.lang.Class $r8;
        java.lang.StringBuilder $r17, $r18, $r20;
        org.eclipse.jetty.client.HttpEventListener r13;
        org.eclipse.jetty.client.HttpExchange r4;
        org.eclipse.jetty.client.HttpDestination$1 $r21;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        r4 := @parameter0: org.eclipse.jetty.client.HttpExchange;

        $r1 = r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.client.HttpClient _client>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.client.HttpClient: java.util.LinkedList getRegisteredListeners()>();

        if $r2 == null goto label6;

        i1 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

     label1:
        if i1 <= 0 goto label6;

        $i0 = i1 - 1;

        $r6 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object get(int)>($i0);

        r7 = (java.lang.String) $r6;

     label2:
        $r8 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r7);

        $r9 = newarray (java.lang.Class)[2];

        $r9[0] = class "Lorg/eclipse/jetty/client/HttpDestination;";

        $r9[1] = class "Lorg/eclipse/jetty/client/HttpExchange;";

        $r10 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r9);

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = r0;

        $r11[1] = r4;

        $r12 = virtualinvoke $r10.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r11);

        r13 = (org.eclipse.jetty.client.HttpEventListener) $r12;

        virtualinvoke r4.<org.eclipse.jetty.client.HttpExchange: void setEventListener(org.eclipse.jetty.client.HttpEventListener)>(r13);

     label3:
        goto label5;

     label4:
        $r14 := @caughtexception;

        $r21 = new org.eclipse.jetty.client.HttpDestination$1;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate registered listener for destination: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<org.eclipse.jetty.client.HttpDestination$1: void <init>(org.eclipse.jetty.client.HttpDestination,java.lang.String,java.lang.Exception)>(r0, $r19, $r14);

        throw $r21;

     label5:
        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label1;

     label6:
        $r3 = r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.client.HttpClient _client>;

        $z0 = virtualinvoke $r3.<org.eclipse.jetty.client.HttpClient: boolean hasRealms()>();

        if $z0 == 0 goto label7;

        $r22 = new org.eclipse.jetty.client.security.SecurityListener;

        specialinvoke $r22.<org.eclipse.jetty.client.security.SecurityListener: void <init>(org.eclipse.jetty.client.HttpDestination,org.eclipse.jetty.client.HttpExchange)>(r0, r4);

        virtualinvoke r4.<org.eclipse.jetty.client.HttpExchange: void setEventListener(org.eclipse.jetty.client.HttpEventListener)>($r22);

     label7:
        virtualinvoke r0.<org.eclipse.jetty.client.HttpDestination: void doSend(org.eclipse.jetty.client.HttpExchange)>(r4);

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void resend(org.eclipse.jetty.client.HttpExchange) throws java.io.IOException
    {
        org.eclipse.jetty.client.HttpEventListener $r1;
        org.eclipse.jetty.client.HttpExchange r0;
        org.eclipse.jetty.client.HttpDestination r2;

        r2 := @this: org.eclipse.jetty.client.HttpDestination;

        r0 := @parameter0: org.eclipse.jetty.client.HttpExchange;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.client.HttpExchange: org.eclipse.jetty.client.HttpEventListener getEventListener()>();

        interfaceinvoke $r1.<org.eclipse.jetty.client.HttpEventListener: void onRetry()>();

        virtualinvoke r0.<org.eclipse.jetty.client.HttpExchange: void reset()>();

        virtualinvoke r2.<org.eclipse.jetty.client.HttpDestination: void doSend(org.eclipse.jetty.client.HttpExchange)>(r0);

        return;
    }

    protected void doSend(org.eclipse.jetty.client.HttpExchange) throws java.io.IOException
    {
        org.eclipse.jetty.client.AbstractHttpConnection $r27;
        org.eclipse.jetty.client.HttpDestination r0;
        boolean $z0, z1;
        java.util.List $r1, $r3, $r4, $r5, $r15;
        java.lang.StringBuilder $r7, $r8, $r10, $r21, r23;
        java.lang.Throwable $r22;
        org.eclipse.jetty.client.Address $r9;
        java.util.concurrent.RejectedExecutionException $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r11, $r13, $r17, $r19, $r20;
        org.eclipse.jetty.http.PathMap $r12, $r25;
        org.eclipse.jetty.client.security.Authentication r26;
        java.util.Iterator $r16;
        org.eclipse.jetty.http.HttpCookie r24;
        java.lang.Object $r14, $r18;
        org.eclipse.jetty.client.HttpExchange r2;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        r2 := @parameter0: org.eclipse.jetty.client.HttpExchange;

        $r1 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _cookies>;

        if $r1 == null goto label05;

        r23 = null;

        $r15 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _cookies>;

        $r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r18 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r24 = (org.eclipse.jetty.http.HttpCookie) $r18;

        if r23 != null goto label02;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        r23 = $r21;

        goto label03;

     label02:
        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

     label03:
        $r19 = virtualinvoke r24.<org.eclipse.jetty.http.HttpCookie: java.lang.String getName()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r20 = virtualinvoke r24.<org.eclipse.jetty.http.HttpCookie: java.lang.String getValue()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        goto label01;

     label04:
        if r23 == null goto label05;

        $r17 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<org.eclipse.jetty.client.HttpExchange: void addRequestHeader(java.lang.String,java.lang.String)>("Cookie", $r17);

     label05:
        $r25 = r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.http.PathMap _authorizations>;

        if $r25 == null goto label06;

        $r12 = r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.http.PathMap _authorizations>;

        $r13 = virtualinvoke r2.<org.eclipse.jetty.client.HttpExchange: java.lang.String getRequestURI()>();

        $r14 = virtualinvoke $r12.<org.eclipse.jetty.http.PathMap: java.lang.Object match(java.lang.String)>($r13);

        r26 = (org.eclipse.jetty.client.security.Authentication) $r14;

        if r26 == null goto label06;

        interfaceinvoke r26.<org.eclipse.jetty.client.security.Authentication: void setCredentials(org.eclipse.jetty.client.HttpExchange)>(r2);

     label06:
        virtualinvoke r2.<org.eclipse.jetty.client.HttpExchange: void scheduleTimeout(org.eclipse.jetty.client.HttpDestination)>(r0);

        $r27 = virtualinvoke r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.client.AbstractHttpConnection getIdleConnection()>();

        if $r27 == null goto label07;

        virtualinvoke r0.<org.eclipse.jetty.client.HttpDestination: void send(org.eclipse.jetty.client.AbstractHttpConnection,org.eclipse.jetty.client.HttpExchange)>($r27, r2);

        goto label15;

     label07:
        z1 = 0;

        entermonitor r0;

     label08:
        $r3 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _queue>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i1 = r0.<org.eclipse.jetty.client.HttpDestination: int _maxQueueSize>;

        if $i0 != $i1 goto label09;

        $r6 = new java.util.concurrent.RejectedExecutionException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Queue full for address ");

        $r9 = r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.client.Address _address>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.util.concurrent.RejectedExecutionException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label09:
        $r4 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _queue>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r2);

        $r5 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _connections>;

        $i2 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i3 = r0.<org.eclipse.jetty.client.HttpDestination: int _pendingConnections>;

        $i5 = $i2 + $i3;

        $i4 = r0.<org.eclipse.jetty.client.HttpDestination: int _maxConnections>;

        if $i5 >= $i4 goto label10;

        z1 = 1;

     label10:
        exitmonitor r0;

     label11:
        goto label14;

     label12:
        $r22 := @caughtexception;

        exitmonitor r0;

     label13:
        throw $r22;

     label14:
        if z1 == 0 goto label15;

        virtualinvoke r0.<org.eclipse.jetty.client.HttpDestination: void startNewConnection()>();

     label15:
        return;

        catch java.lang.Throwable from label08 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    protected void exchangeExpired(org.eclipse.jetty.client.HttpExchange)
    {
        java.lang.Throwable $r3;
        java.util.List $r2;
        org.eclipse.jetty.client.HttpDestination r0;
        org.eclipse.jetty.client.HttpExchange r1;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        r1 := @parameter0: org.eclipse.jetty.client.HttpExchange;

        entermonitor r0;

     label1:
        $r2 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _queue>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        exitmonitor r0;

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected void send(org.eclipse.jetty.client.AbstractHttpConnection, org.eclipse.jetty.client.HttpExchange) throws java.io.IOException
    {
        java.lang.Throwable $r4;
        java.util.List $r3;
        int $i0;
        org.eclipse.jetty.client.AbstractHttpConnection r1;
        org.eclipse.jetty.client.HttpDestination r0;
        org.eclipse.jetty.client.HttpExchange r2;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        r1 := @parameter0: org.eclipse.jetty.client.AbstractHttpConnection;

        r2 := @parameter1: org.eclipse.jetty.client.HttpExchange;

        entermonitor r0;

     label1:
        $z0 = virtualinvoke r1.<org.eclipse.jetty.client.AbstractHttpConnection: boolean send(org.eclipse.jetty.client.HttpExchange)>(r2);

        if $z0 != 0 goto label3;

        $i0 = virtualinvoke r2.<org.eclipse.jetty.client.HttpExchange: int getStatus()>();

        if $i0 > 1 goto label2;

        $r3 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _queue>;

        interfaceinvoke $r3.<java.util.List: void add(int,java.lang.Object)>(0, r2);

     label2:
        virtualinvoke r0.<org.eclipse.jetty.client.HttpDestination: void returnIdleConnection(org.eclipse.jetty.client.AbstractHttpConnection)>(r1);

     label3:
        exitmonitor r0;

     label4:
        goto label7;

     label5:
        $r4 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public synchronized java.lang.String toString()
    {
        java.lang.Object[] $r0;
        org.eclipse.jetty.client.Address $r3, $r5;
        java.lang.Integer $r2, $r6, $r8, $r9, $r11, $r13, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r4, $r15;
        org.eclipse.jetty.client.HttpDestination r1;
        java.util.List $r7, $r10, $r12;

        r1 := @this: org.eclipse.jetty.client.HttpDestination;

        $r0 = newarray (java.lang.Object)[8];

        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r0[0] = $r2;

        $r3 = r1.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.client.Address _address>;

        $r4 = virtualinvoke $r3.<org.eclipse.jetty.client.Address: java.lang.String getHost()>();

        $r0[1] = $r4;

        $r5 = r1.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.client.Address _address>;

        $i1 = virtualinvoke $r5.<org.eclipse.jetty.client.Address: int getPort()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r0[2] = $r6;

        $r7 = r1.<org.eclipse.jetty.client.HttpDestination: java.util.List _connections>;

        $i2 = interfaceinvoke $r7.<java.util.List: int size()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r0[3] = $r8;

        $i3 = r1.<org.eclipse.jetty.client.HttpDestination: int _maxConnections>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r0[4] = $r9;

        $r10 = r1.<org.eclipse.jetty.client.HttpDestination: java.util.List _idle>;

        $i4 = interfaceinvoke $r10.<java.util.List: int size()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r0[5] = $r11;

        $r12 = r1.<org.eclipse.jetty.client.HttpDestination: java.util.List _queue>;

        $i5 = interfaceinvoke $r12.<java.util.List: int size()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r0[6] = $r13;

        $i6 = r1.<org.eclipse.jetty.client.HttpDestination: int _maxQueueSize>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r0[7] = $r14;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("HttpDestination@%x//%s:%d(%d/%d,%d,%d/%d)%n", $r0);

        return $r15;
    }

    public synchronized java.lang.String toDetailString()
    {
        java.lang.Throwable $r10;
        java.util.Iterator $r4;
        org.eclipse.jetty.client.AbstractHttpConnection r7;
        java.util.List $r3, $r9;
        java.lang.StringBuilder $r0;
        java.lang.Object $r6;
        java.lang.String $r2, $r5, $r8;
        org.eclipse.jetty.client.HttpDestination r1;
        boolean $z0, $z1;

        r1 := @this: org.eclipse.jetty.client.HttpDestination;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<org.eclipse.jetty.client.HttpDestination: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        entermonitor r1;

     label1:
        $r3 = r1.<org.eclipse.jetty.client.HttpDestination: java.util.List _connections>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.eclipse.jetty.client.AbstractHttpConnection) $r6;

        $r8 = virtualinvoke r7.<org.eclipse.jetty.client.AbstractHttpConnection: java.lang.String toDetailString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = r1.<org.eclipse.jetty.client.HttpDestination: java.util.List _idle>;

        $z1 = interfaceinvoke $r9.<java.util.List: boolean contains(java.lang.Object)>(r7);

        if $z1 == 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" IDLE");

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        goto label2;

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r10 := @caughtexception;

        exitmonitor r1;

     label7:
        throw $r10;

     label8:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void setProxy(org.eclipse.jetty.client.Address)
    {
        org.eclipse.jetty.client.HttpDestination r0;
        org.eclipse.jetty.client.Address r1;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        r1 := @parameter0: org.eclipse.jetty.client.Address;

        r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.client.Address _proxy> = r1;

        return;
    }

    public org.eclipse.jetty.client.Address getProxy()
    {
        org.eclipse.jetty.client.HttpDestination r0;
        org.eclipse.jetty.client.Address $r1;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        $r1 = r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.client.Address _proxy>;

        return $r1;
    }

    public org.eclipse.jetty.client.security.Authentication getProxyAuthentication()
    {
        org.eclipse.jetty.client.security.Authentication $r1;
        org.eclipse.jetty.client.HttpDestination r0;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        $r1 = r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.client.security.Authentication _proxyAuthentication>;

        return $r1;
    }

    public void setProxyAuthentication(org.eclipse.jetty.client.security.Authentication)
    {
        org.eclipse.jetty.client.security.Authentication r1;
        org.eclipse.jetty.client.HttpDestination r0;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        r1 := @parameter0: org.eclipse.jetty.client.security.Authentication;

        r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.client.security.Authentication _proxyAuthentication> = r1;

        return;
    }

    public boolean isProxied()
    {
        org.eclipse.jetty.client.HttpDestination r0;
        org.eclipse.jetty.client.Address $r1;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        $r1 = r0.<org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.client.Address _proxy>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void close() throws java.io.IOException
    {
        java.lang.Throwable $r5;
        java.util.List $r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        org.eclipse.jetty.client.AbstractHttpConnection r4;
        org.eclipse.jetty.client.HttpDestination r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        entermonitor r0;

     label1:
        $r1 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _connections>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.eclipse.jetty.client.AbstractHttpConnection) $r3;

        virtualinvoke r4.<org.eclipse.jetty.client.AbstractHttpConnection: void close()>();

        goto label2;

     label3:
        exitmonitor r0;

     label4:
        goto label7;

     label5:
        $r5 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.lang.String dump()
    {
        java.lang.String $r1;
        org.eclipse.jetty.client.HttpDestination r0;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        $r1 = staticinvoke <org.eclipse.jetty.util.component.AggregateLifeCycle: java.lang.String dump(org.eclipse.jetty.util.component.Dumpable)>(r0);

        return $r1;
    }

    public void dump(java.lang.Appendable, java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r15;
        int $i0, $i1;
        java.lang.String $r3, $r10, r12;
        org.eclipse.jetty.client.HttpDestination r0;
        java.lang.Appendable r1, $r11;
        java.util.List $r6, $r14;
        java.util.Collection[] $r13;
        java.lang.StringBuilder $r2, $r4, $r5, $r7, $r8, $r9;

        r0 := @this: org.eclipse.jetty.client.HttpDestination;

        r1 := @parameter0: java.lang.Appendable;

        r12 := @parameter1: java.lang.String;

        entermonitor r0;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("idle=");

        $r6 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _idle>;

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pending=");

        $i1 = r0.<org.eclipse.jetty.client.HttpDestination: int _pendingConnections>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r10);

        interfaceinvoke $r11.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\n");

        $r13 = newarray (java.util.Collection)[1];

        $r14 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _connections>;

        $r13[0] = $r14;

        staticinvoke <org.eclipse.jetty.util.component.AggregateLifeCycle: void dump(java.lang.Appendable,java.lang.String,java.util.Collection[])>(r1, r12, $r13);

        exitmonitor r0;

     label2:
        goto label5;

     label3:
        $r15 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r15;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static java.util.List access$000(org.eclipse.jetty.client.HttpDestination)
    {
        java.util.List $r1;
        org.eclipse.jetty.client.HttpDestination r0;

        r0 := @parameter0: org.eclipse.jetty.client.HttpDestination;

        $r1 = r0.<org.eclipse.jetty.client.HttpDestination: java.util.List _queue>;

        return $r1;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/client/HttpDestination;");

        <org.eclipse.jetty.client.HttpDestination: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
