public class org.eclipse.jdt.internal.core.util.ASTNodeFinder extends java.lang.Object
{
    private org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration unit;

    public void <init>(org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration)
    {
        org.eclipse.jdt.internal.core.util.ASTNodeFinder r0;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.ASTNodeFinder;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jdt.internal.core.util.ASTNodeFinder: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration unit> = r1;

        return;
    }

    public org.eclipse.jdt.internal.compiler.ast.FieldDeclaration findField(org.eclipse.jdt.core.IField)
    {
        org.eclipse.jdt.core.IField r1;
        org.eclipse.jdt.internal.core.util.ASTNodeFinder r0;
        org.eclipse.jdt.core.IType $r3;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] r5;
        org.eclipse.jdt.core.IJavaElement $r2;
        int i0, i1;
        char[] $r7, $r9;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r4;
        java.lang.String $r6;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r8;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.core.util.ASTNodeFinder;

        r1 := @parameter0: org.eclipse.jdt.core.IField;

        $r2 = interfaceinvoke r1.<org.eclipse.jdt.core.IField: org.eclipse.jdt.core.IJavaElement getParent()>();

        $r3 = (org.eclipse.jdt.core.IType) $r2;

        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.ASTNodeFinder: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration findType(org.eclipse.jdt.core.IType)>($r3);

        if $r4 != null goto label1;

        return null;

     label1:
        r5 = $r4.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        if r5 == null goto label5;

        $r6 = interfaceinvoke r1.<org.eclipse.jdt.core.IField: java.lang.String getElementName()>();

        $r7 = virtualinvoke $r6.<java.lang.String: char[] toCharArray()>();

        i1 = 0;

        i0 = lengthof r5;

        goto label4;

     label2:
        r8 = r5[i1];

        $r9 = r8.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: char[] name>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r7, $r9);

        if $z0 == 0 goto label3;

        return r8;

     label3:
        i1 = i1 + 1;

     label4:
        if i1 < i0 goto label2;

     label5:
        return null;
    }

    public org.eclipse.jdt.internal.compiler.ast.Initializer findInitializer(org.eclipse.jdt.core.IInitializer)
    {
        org.eclipse.jdt.internal.core.util.ASTNodeFinder r0;
        org.eclipse.jdt.core.IType $r3;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] r5;
        org.eclipse.jdt.core.IJavaElement $r2;
        int i0, i1, i2, $i4;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r4;
        org.eclipse.jdt.internal.core.SourceRefElement $r6;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r7;
        org.eclipse.jdt.core.IInitializer r1;
        org.eclipse.jdt.internal.compiler.ast.Initializer $r8;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.core.util.ASTNodeFinder;

        r1 := @parameter0: org.eclipse.jdt.core.IInitializer;

        $r2 = interfaceinvoke r1.<org.eclipse.jdt.core.IInitializer: org.eclipse.jdt.core.IJavaElement getParent()>();

        $r3 = (org.eclipse.jdt.core.IType) $r2;

        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.ASTNodeFinder: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration findType(org.eclipse.jdt.core.IType)>($r3);

        if $r4 != null goto label1;

        return null;

     label1:
        r5 = $r4.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        if r5 == null goto label5;

        $r6 = (org.eclipse.jdt.internal.core.SourceRefElement) r1;

        i1 = $r6.<org.eclipse.jdt.internal.core.SourceRefElement: int occurrenceCount>;

        i2 = 0;

        i0 = lengthof r5;

        goto label4;

     label2:
        r7 = r5[i2];

        $z0 = r7 instanceof org.eclipse.jdt.internal.compiler.ast.Initializer;

        if $z0 == 0 goto label3;

        $i4 = (int) -1;

        i1 = i1 + $i4;

        if i1 != 0 goto label3;

        $r8 = (org.eclipse.jdt.internal.compiler.ast.Initializer) r7;

        return $r8;

     label3:
        i2 = i2 + 1;

     label4:
        if i2 < i0 goto label2;

     label5:
        return null;
    }

    public org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration findMethod(org.eclipse.jdt.core.IMethod)
    {
        java.lang.String[] $r8;
        int i0, i1, i2, $i3, i4;
        org.eclipse.jdt.internal.compiler.ast.Argument[] r11;
        java.lang.String $r6, $r14, $r15;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.ast.Argument $r12;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] r5;
        org.eclipse.jdt.internal.core.util.ASTNodeFinder r0;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r13;
        org.eclipse.jdt.core.IType $r3;
        org.eclipse.jdt.core.IJavaElement $r2;
        org.eclipse.jdt.core.IMethod r1;
        char[] $r7, $r10;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r9;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r4;

        r0 := @this: org.eclipse.jdt.internal.core.util.ASTNodeFinder;

        r1 := @parameter0: org.eclipse.jdt.core.IMethod;

        $r2 = interfaceinvoke r1.<org.eclipse.jdt.core.IMethod: org.eclipse.jdt.core.IJavaElement getParent()>();

        $r3 = (org.eclipse.jdt.core.IType) $r2;

        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.ASTNodeFinder: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration findType(org.eclipse.jdt.core.IType)>($r3);

        if $r4 != null goto label01;

        return null;

     label01:
        r5 = $r4.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        if r5 == null goto label10;

        $r6 = interfaceinvoke r1.<org.eclipse.jdt.core.IMethod: java.lang.String getElementName()>();

        $r7 = virtualinvoke $r6.<java.lang.String: char[] toCharArray()>();

        $r8 = interfaceinvoke r1.<org.eclipse.jdt.core.IMethod: java.lang.String[] getParameterTypes()>();

        i0 = lengthof $r8;

        i2 = 0;

        i1 = lengthof r5;

        goto label09;

     label02:
        r9 = r5[i2];

        $r10 = r9.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r7, $r10);

        if $z0 == 0 goto label08;

        r11 = r9.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        if r11 != null goto label03;

        $i3 = 0;

        goto label04;

     label03:
        $i3 = lengthof r11;

     label04:
        if $i3 != i0 goto label08;

        i4 = 0;

        goto label07;

     label05:
        $r12 = r11[i4];

        r13 = $r12.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $r14 = staticinvoke <org.eclipse.jdt.internal.core.util.Util: java.lang.String typeSignature(org.eclipse.jdt.internal.compiler.ast.TypeReference)>(r13);

        $r15 = $r8[i4];

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z1 != 0 goto label06;

        goto label08;

     label06:
        i4 = i4 + 1;

     label07:
        if i4 < i0 goto label05;

        return r9;

     label08:
        i2 = i2 + 1;

     label09:
        if i2 < i1 goto label02;

     label10:
        return null;
    }

    public org.eclipse.jdt.internal.compiler.ast.TypeDeclaration findType(org.eclipse.jdt.core.IType)
    {
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r15;
        boolean $z0, $z1, $z3, $z4, $z5;
        org.eclipse.jdt.internal.core.util.ASTNodeFinder r5;
        org.eclipse.jdt.core.IType r0, $r18;
        org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor $r8, $r12, $r16;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r9, $r13, $r17, $r19, r24, r26;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration $r21;
        org.eclipse.jdt.core.IField $r14;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] r23, r25;
        int i0, $i1, $i2, i3, i4, i5, i6;
        java.lang.String $r2;
        org.eclipse.jdt.core.IJavaElement $r1;
        org.eclipse.jdt.internal.core.SourceType $r4;
        org.eclipse.jdt.core.IMethod $r10;
        char[] $r3, $r20, $r22;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r11;
        org.eclipse.jdt.core.IInitializer $r6;
        org.eclipse.jdt.internal.compiler.ast.Initializer $r7;

        r5 := @this: org.eclipse.jdt.internal.core.util.ASTNodeFinder;

        r0 := @parameter0: org.eclipse.jdt.core.IType;

        $r1 = interfaceinvoke r0.<org.eclipse.jdt.core.IType: org.eclipse.jdt.core.IJavaElement getParent()>();

        $r2 = interfaceinvoke r0.<org.eclipse.jdt.core.IType: java.lang.String getElementName()>();

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        $r4 = (org.eclipse.jdt.internal.core.SourceType) r0;

        i0 = $r4.<org.eclipse.jdt.internal.core.SourceType: int occurrenceCount>;

        $i1 = lengthof $r3;

        if $i1 != 0 goto label01;

        $z5 = 1;

        $z4 = 1;

        $z3 = 1;

        goto label02;

     label01:
        $z5 = 0;

        $z4 = 0;

        $z3 = 0;

     label02:
        $i2 = interfaceinvoke $r1.<org.eclipse.jdt.core.IJavaElement: int getElementType()>();

        tableswitch($i2)
        {
            case 5: goto label03;
            case 6: goto label18;
            case 7: goto label07;
            case 8: goto label12;
            case 9: goto label16;
            case 10: goto label14;
            default: goto label18;
        };

     label03:
        $r21 = r5.<org.eclipse.jdt.internal.core.util.ASTNodeFinder: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration unit>;

        r23 = $r21.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        if r23 == null goto label18;

        i3 = 0;

        i4 = lengthof r23;

        goto label06;

     label04:
        r24 = r23[i3];

        $r22 = r24.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        $z1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r3, $r22);

        if $z1 == 0 goto label05;

        return r24;

     label05:
        i3 = i3 + 1;

     label06:
        if i3 < i4 goto label04;

        goto label18;

     label07:
        $r18 = (org.eclipse.jdt.core.IType) $r1;

        $r19 = virtualinvoke r5.<org.eclipse.jdt.internal.core.util.ASTNodeFinder: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration findType(org.eclipse.jdt.core.IType)>($r18);

        if $r19 != null goto label08;

        return null;

     label08:
        r25 = $r19.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        if r25 == null goto label18;

        i5 = 0;

        i6 = lengthof r25;

        goto label11;

     label09:
        r26 = r25[i5];

        $r20 = r26.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r3, $r20);

        if $z0 == 0 goto label10;

        return r26;

     label10:
        i5 = i5 + 1;

     label11:
        if i5 < i6 goto label09;

        goto label18;

     label12:
        $r14 = (org.eclipse.jdt.core.IField) $r1;

        $r15 = virtualinvoke r5.<org.eclipse.jdt.internal.core.util.ASTNodeFinder: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration findField(org.eclipse.jdt.core.IField)>($r14);

        if $r15 != null goto label13;

        return null;

     label13:
        $r16 = new org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor;

        specialinvoke $r16.<org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor: void <init>(org.eclipse.jdt.internal.core.util.ASTNodeFinder,boolean,int,char[])>(r5, $z3, i0, $r3);

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.MethodScope)>($r16, null);

        $r17 = $r16.<org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration result>;

        return $r17;

     label14:
        $r6 = (org.eclipse.jdt.core.IInitializer) $r1;

        $r7 = virtualinvoke r5.<org.eclipse.jdt.internal.core.util.ASTNodeFinder: org.eclipse.jdt.internal.compiler.ast.Initializer findInitializer(org.eclipse.jdt.core.IInitializer)>($r6);

        if $r7 != null goto label15;

        return null;

     label15:
        $r8 = new org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor;

        specialinvoke $r8.<org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor: void <init>(org.eclipse.jdt.internal.core.util.ASTNodeFinder,boolean,int,char[])>(r5, $z4, i0, $r3);

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.ast.Initializer: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.MethodScope)>($r8, null);

        $r9 = $r8.<org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration result>;

        return $r9;

     label16:
        $r10 = (org.eclipse.jdt.core.IMethod) $r1;

        $r11 = virtualinvoke r5.<org.eclipse.jdt.internal.core.util.ASTNodeFinder: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration findMethod(org.eclipse.jdt.core.IMethod)>($r10);

        if $r11 != null goto label17;

        return null;

     label17:
        $r12 = new org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor;

        specialinvoke $r12.<org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor: void <init>(org.eclipse.jdt.internal.core.util.ASTNodeFinder,boolean,int,char[])>(r5, $z5, i0, $r3);

        virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>($r12, null);

        $r13 = $r12.<org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration result>;

        return $r13;

     label18:
        return null;
    }
}
