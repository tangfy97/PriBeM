public class com.google.gxp.compiler.dot.DotWriter extends java.lang.Object implements com.google.gxp.compiler.dot.GraphSink
{
    private final com.google.gxp.compiler.io.CIndenter out;
    private static com.google.gxp.com.google.common.base.CharEscaper DOT_ESCAPER;

    public void <init>(java.lang.Appendable)
    {
        com.google.gxp.compiler.dot.DotWriter r0;
        java.lang.Appendable r2;
        java.lang.String[] $r3;
        com.google.gxp.compiler.io.CIndenter $r1;

        r0 := @this: com.google.gxp.compiler.dot.DotWriter;

        r2 := @parameter0: java.lang.Appendable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.google.gxp.compiler.io.CIndenter;

        $r3 = newarray (java.lang.String)[0];

        specialinvoke $r1.<com.google.gxp.compiler.io.CIndenter: void <init>(java.lang.Appendable,java.lang.String[])>(r2, $r3);

        r0.<com.google.gxp.compiler.dot.DotWriter: com.google.gxp.compiler.io.CIndenter out> = $r1;

        return;
    }

    public void digraphStart(java.lang.String)
    {
        java.lang.Object[] $r1;
        com.google.gxp.compiler.dot.DotWriter r0;
        java.lang.String r2, $r4;
        com.google.gxp.compiler.io.CIndenter $r3;

        r0 := @this: com.google.gxp.compiler.dot.DotWriter;

        r2 := @parameter0: java.lang.String;

        $r3 = r0.<com.google.gxp.compiler.dot.DotWriter: com.google.gxp.compiler.io.CIndenter out>;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r2;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("digraph %s {", $r1);

        virtualinvoke $r3.<com.google.gxp.compiler.io.CIndenter: void appendLine(java.lang.CharSequence)>($r4);

        return;
    }

    public void digraphEnd()
    {
        com.google.gxp.compiler.dot.DotWriter r0;
        com.google.gxp.compiler.io.CIndenter $r1;

        r0 := @this: com.google.gxp.compiler.dot.DotWriter;

        $r1 = r0.<com.google.gxp.compiler.dot.DotWriter: com.google.gxp.compiler.io.CIndenter out>;

        virtualinvoke $r1.<com.google.gxp.compiler.io.CIndenter: void appendLine(java.lang.CharSequence)>("}");

        return;
    }

    public void simpleNode(java.lang.String, com.google.gxp.compiler.dot.NodeShape, java.lang.String)
    {
        java.lang.Object[] $r1;
        com.google.gxp.compiler.dot.NodeShape r6;
        com.google.gxp.compiler.io.CIndenter $r4;
        com.google.gxp.compiler.dot.DotWriter r0;
        java.lang.String r2, r3, $r5, $r7;

        r0 := @this: com.google.gxp.compiler.dot.DotWriter;

        r2 := @parameter0: java.lang.String;

        r6 := @parameter1: com.google.gxp.compiler.dot.NodeShape;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<com.google.gxp.compiler.dot.DotWriter: com.google.gxp.compiler.io.CIndenter out>;

        $r1 = newarray (java.lang.Object)[3];

        $r1[0] = r2;

        $r5 = staticinvoke <com.google.gxp.compiler.dot.DotWriter: java.lang.String dotEscape(java.lang.String)>(r3);

        $r1[1] = $r5;

        $r1[2] = r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("node%s [label=\"%s\",shape=%s];", $r1);

        virtualinvoke $r4.<com.google.gxp.compiler.io.CIndenter: void appendLine(java.lang.CharSequence)>($r7);

        return;
    }

    public void recordNode(java.lang.String, java.util.Map)
    {
        java.lang.Object[] $r6;
        java.util.ArrayList $r1, $r2;
        com.google.gxp.compiler.io.CIndenter $r8;
        com.google.gxp.compiler.dot.DotWriter r5;
        java.util.Map r0;
        int $i0, $i1;
        java.lang.String r7, $r9, $r10, $r11, $r15, $r16, $r18, $r19;
        boolean $z0;
        java.util.Map$Entry r13;
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.lang.Object $r12, $r14, $r17;

        r5 := @this: com.google.gxp.compiler.dot.DotWriter;

        r7 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.Map;

        $i0 = interfaceinvoke r0.<java.util.Map: int size()>();

        $r1 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayListWithExpectedSize(int)>($i0);

        $i1 = interfaceinvoke r0.<java.util.Map: int size()>();

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayListWithExpectedSize(int)>($i1);

        $r3 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.util.Map$Entry) $r12;

        $r14 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r15 = (java.lang.String) $r14;

        $r16 = staticinvoke <com.google.gxp.compiler.dot.DotWriter: java.lang.String dotEscape(java.lang.String)>($r15);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r16);

        $r17 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18 = (java.lang.String) $r17;

        $r19 = staticinvoke <com.google.gxp.compiler.dot.DotWriter: java.lang.String dotEscape(java.lang.String)>($r18);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r19);

        goto label1;

     label2:
        $r8 = r5.<com.google.gxp.compiler.dot.DotWriter: com.google.gxp.compiler.io.CIndenter out>;

        $r6 = newarray (java.lang.Object)[3];

        $r6[0] = r7;

        $r9 = staticinvoke <com.google.gxp.com.google.common.base.Join: java.lang.String join(java.lang.String,java.lang.Iterable)>(" | ", $r1);

        $r6[1] = $r9;

        $r10 = staticinvoke <com.google.gxp.com.google.common.base.Join: java.lang.String join(java.lang.String,java.lang.Iterable)>(" | ", $r2);

        $r6[2] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("node%s [label=\"{%s} | {%s}\",shape=Mrecord];", $r6);

        virtualinvoke $r8.<com.google.gxp.compiler.io.CIndenter: void appendLine(java.lang.CharSequence)>($r11);

        return;
    }

    public void edge(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.Object[] $r1, $r4;
        com.google.gxp.compiler.io.CIndenter $r7;
        com.google.gxp.compiler.dot.DotWriter r3;
        java.lang.String r0, $r2, r5, r6, $r8, $r9;

        r3 := @this: com.google.gxp.compiler.dot.DotWriter;

        r5 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        $r9 = "";

        goto label2;

     label1:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <com.google.gxp.compiler.dot.DotWriter: java.lang.String dotEscape(java.lang.String)>(r0);

        $r1[0] = $r2;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" [label=\"%s\"]", $r1);

     label2:
        $r7 = r3.<com.google.gxp.compiler.dot.DotWriter: com.google.gxp.compiler.io.CIndenter out>;

        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = r5;

        $r4[1] = r6;

        $r4[2] = $r9;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("node%s -> node%s%s;\n", $r4);

        virtualinvoke $r7.<com.google.gxp.compiler.io.CIndenter: void appendLine(java.lang.CharSequence)>($r8);

        return;
    }

    private static java.lang.String dotEscape(java.lang.String)
    {
        com.google.gxp.com.google.common.base.CharEscaper $r1;
        java.lang.String r0, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.google.gxp.compiler.dot.DotWriter: com.google.gxp.com.google.common.base.CharEscaper DOT_ESCAPER>;

        $r2 = virtualinvoke $r1.<com.google.gxp.com.google.common.base.CharEscaper: java.lang.String escape(java.lang.String)>(r0);

        return $r2;
    }

    static void <clinit>()
    {
        com.google.gxp.com.google.common.base.CharEscaper $r12;
        com.google.gxp.com.google.common.base.CharEscaperBuilder $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        $r0 = new com.google.gxp.com.google.common.base.CharEscaperBuilder;

        specialinvoke $r0.<com.google.gxp.com.google.common.base.CharEscaperBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<com.google.gxp.com.google.common.base.CharEscaperBuilder: com.google.gxp.com.google.common.base.CharEscaperBuilder addEscape(char,java.lang.String)>(10, "\\n");

        $r2 = virtualinvoke $r1.<com.google.gxp.com.google.common.base.CharEscaperBuilder: com.google.gxp.com.google.common.base.CharEscaperBuilder addEscape(char,java.lang.String)>(13, "\\r");

        $r3 = virtualinvoke $r2.<com.google.gxp.com.google.common.base.CharEscaperBuilder: com.google.gxp.com.google.common.base.CharEscaperBuilder addEscape(char,java.lang.String)>(9, "\\t");

        $r4 = virtualinvoke $r3.<com.google.gxp.com.google.common.base.CharEscaperBuilder: com.google.gxp.com.google.common.base.CharEscaperBuilder addEscape(char,java.lang.String)>(92, "\\\\");

        $r5 = virtualinvoke $r4.<com.google.gxp.com.google.common.base.CharEscaperBuilder: com.google.gxp.com.google.common.base.CharEscaperBuilder addEscape(char,java.lang.String)>(34, "\\\"");

        $r6 = virtualinvoke $r5.<com.google.gxp.com.google.common.base.CharEscaperBuilder: com.google.gxp.com.google.common.base.CharEscaperBuilder addEscape(char,java.lang.String)>(123, "\\{");

        $r7 = virtualinvoke $r6.<com.google.gxp.com.google.common.base.CharEscaperBuilder: com.google.gxp.com.google.common.base.CharEscaperBuilder addEscape(char,java.lang.String)>(125, "\\}");

        $r8 = virtualinvoke $r7.<com.google.gxp.com.google.common.base.CharEscaperBuilder: com.google.gxp.com.google.common.base.CharEscaperBuilder addEscape(char,java.lang.String)>(60, "\\<");

        $r9 = virtualinvoke $r8.<com.google.gxp.com.google.common.base.CharEscaperBuilder: com.google.gxp.com.google.common.base.CharEscaperBuilder addEscape(char,java.lang.String)>(62, "\\>");

        $r10 = virtualinvoke $r9.<com.google.gxp.com.google.common.base.CharEscaperBuilder: com.google.gxp.com.google.common.base.CharEscaperBuilder addEscape(char,java.lang.String)>(124, "\\|");

        $r11 = virtualinvoke $r10.<com.google.gxp.com.google.common.base.CharEscaperBuilder: com.google.gxp.com.google.common.base.CharEscaperBuilder addEscape(char,java.lang.String)>(32, "\\ ");

        $r12 = virtualinvoke $r11.<com.google.gxp.com.google.common.base.CharEscaperBuilder: com.google.gxp.com.google.common.base.CharEscaper toEscaper()>();

        <com.google.gxp.compiler.dot.DotWriter: com.google.gxp.com.google.common.base.CharEscaper DOT_ESCAPER> = $r12;

        return;
    }
}
