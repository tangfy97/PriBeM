public class com.google.inject.internal.util.$FinalizableReferenceQueue extends java.lang.Object
{
    private static final java.util.logging.Logger logger;
    private static final java.lang.String FINALIZER_CLASS_NAME;
    private static final java.lang.reflect.Method startFinalizer;
    final java.lang.ref.ReferenceQueue queue;
    final boolean threadStarted;

    public void <init>()
    {
        java.lang.Throwable $r4;
        java.lang.IllegalAccessException $r8;
        java.lang.Object[] $r1;
        java.lang.AssertionError $r9;
        java.util.logging.Logger $r6;
        com.google.inject.internal.util.$FinalizableReferenceQueue r0;
        java.lang.ref.ReferenceQueue $r7, r10;
        java.util.logging.Level $r5;
        java.lang.Object $r3;
        java.lang.reflect.Method $r2;
        boolean z0;

        r0 := @this: com.google.inject.internal.util.$FinalizableReferenceQueue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        z0 = 0;

     label1:
        $r2 = <com.google.inject.internal.util.$FinalizableReferenceQueue: java.lang.reflect.Method startFinalizer>;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = class "Lcom/google/inject/internal/util/$FinalizableReference;";

        $r1[1] = r0;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r1);

        r10 = (java.lang.ref.ReferenceQueue) $r3;

        z0 = 1;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r9;

     label4:
        $r4 := @caughtexception;

        $r6 = <com.google.inject.internal.util.$FinalizableReferenceQueue: java.util.logging.Logger logger>;

        $r5 = <java.util.logging.Level: java.util.logging.Level INFO>;

        virtualinvoke $r6.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r5, "Failed to start reference finalizer thread. Reference cleanup will only occur when new references are created.", $r4);

        $r7 = new java.lang.ref.ReferenceQueue;

        specialinvoke $r7.<java.lang.ref.ReferenceQueue: void <init>()>();

        r10 = $r7;

     label5:
        r0.<com.google.inject.internal.util.$FinalizableReferenceQueue: java.lang.ref.ReferenceQueue queue> = r10;

        r0.<com.google.inject.internal.util.$FinalizableReferenceQueue: boolean threadStarted> = z0;

        return;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
    }

    void cleanUp()
    {
        java.lang.Throwable $r2;
        java.util.logging.Logger $r4;
        com.google.inject.internal.util.$FinalizableReferenceQueue r0;
        java.lang.ref.ReferenceQueue $r5;
        java.util.logging.Level $r3;
        java.lang.ref.Reference $r6;
        com.google.inject.internal.util.$FinalizableReference $r1;
        boolean $z0;

        r0 := @this: com.google.inject.internal.util.$FinalizableReferenceQueue;

        $z0 = r0.<com.google.inject.internal.util.$FinalizableReferenceQueue: boolean threadStarted>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r5 = r0.<com.google.inject.internal.util.$FinalizableReferenceQueue: java.lang.ref.ReferenceQueue queue>;

        $r6 = virtualinvoke $r5.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>();

        if $r6 == null goto label5;

        virtualinvoke $r6.<java.lang.ref.Reference: void clear()>();

     label2:
        $r1 = (com.google.inject.internal.util.$FinalizableReference) $r6;

        interfaceinvoke $r1.<com.google.inject.internal.util.$FinalizableReference: void finalizeReferent()>();

     label3:
        goto label1;

     label4:
        $r2 := @caughtexception;

        $r4 = <com.google.inject.internal.util.$FinalizableReferenceQueue: java.util.logging.Logger logger>;

        $r3 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r4.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r3, "Error cleaning up after reference.", $r2);

        goto label1;

     label5:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private static transient java.lang.Class loadFinalizer(com.google.inject.internal.util.$FinalizableReferenceQueue$FinalizerLoader[])
    {
        int i0, i1;
        com.google.inject.internal.util.$FinalizableReferenceQueue$FinalizerLoader r2;
        com.google.inject.internal.util.$FinalizableReferenceQueue$FinalizerLoader[] r0;
        java.lang.Class $r3;
        java.lang.AssertionError $r1;

        r0 := @parameter0: com.google.inject.internal.util.$FinalizableReferenceQueue$FinalizerLoader[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = r0[i1];

        $r3 = interfaceinvoke r2.<com.google.inject.internal.util.$FinalizableReferenceQueue$FinalizerLoader: java.lang.Class loadFinalizer()>();

        if $r3 == null goto label2;

        return $r3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;
    }

    static java.lang.reflect.Method getStartFinalizer(java.lang.Class)
    {
        java.lang.NoSuchMethodException $r3;
        java.lang.Class[] $r1;
        java.lang.Class r0;
        java.lang.AssertionError $r4;
        java.lang.reflect.Method $r2;

        r0 := @parameter0: java.lang.Class;

     label1:
        $r1 = newarray (java.lang.Class)[2];

        $r1[0] = class "Ljava/lang/Class;";

        $r1[1] = class "Ljava/lang/Object;";

        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("startFinalizer", $r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>($r3);

        throw $r4;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    static java.util.logging.Logger access$000()
    {
        java.util.logging.Logger $r0;

        $r0 = <com.google.inject.internal.util.$FinalizableReferenceQueue: java.util.logging.Logger logger>;

        return $r0;
    }

    static void <clinit>()
    {
        com.google.inject.internal.util.$FinalizableReferenceQueue$DirectLoader $r6;
        com.google.inject.internal.util.$FinalizableReferenceQueue$FinalizerLoader[] $r3;
        com.google.inject.internal.util.$FinalizableReferenceQueue$DecoupledLoader $r5;
        java.util.logging.Logger $r2;
        com.google.inject.internal.util.$FinalizableReferenceQueue$SystemLoader $r4;
        java.lang.Class $r0, $r7;
        java.lang.String $r1;
        java.lang.reflect.Method $r8;

        <com.google.inject.internal.util.$FinalizableReferenceQueue: java.lang.String FINALIZER_CLASS_NAME> = "com.google.inject.internal.util.$Finalizer";

        $r0 = class "Lcom/google/inject/internal/util/$FinalizableReferenceQueue;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.google.inject.internal.util.$FinalizableReferenceQueue: java.util.logging.Logger logger> = $r2;

        $r3 = newarray (com.google.inject.internal.util.$FinalizableReferenceQueue$FinalizerLoader)[3];

        $r4 = new com.google.inject.internal.util.$FinalizableReferenceQueue$SystemLoader;

        specialinvoke $r4.<com.google.inject.internal.util.$FinalizableReferenceQueue$SystemLoader: void <init>()>();

        $r3[0] = $r4;

        $r5 = new com.google.inject.internal.util.$FinalizableReferenceQueue$DecoupledLoader;

        specialinvoke $r5.<com.google.inject.internal.util.$FinalizableReferenceQueue$DecoupledLoader: void <init>()>();

        $r3[1] = $r5;

        $r6 = new com.google.inject.internal.util.$FinalizableReferenceQueue$DirectLoader;

        specialinvoke $r6.<com.google.inject.internal.util.$FinalizableReferenceQueue$DirectLoader: void <init>()>();

        $r3[2] = $r6;

        $r7 = staticinvoke <com.google.inject.internal.util.$FinalizableReferenceQueue: java.lang.Class loadFinalizer(com.google.inject.internal.util.$FinalizableReferenceQueue$FinalizerLoader[])>($r3);

        $r8 = staticinvoke <com.google.inject.internal.util.$FinalizableReferenceQueue: java.lang.reflect.Method getStartFinalizer(java.lang.Class)>($r7);

        <com.google.inject.internal.util.$FinalizableReferenceQueue: java.lang.reflect.Method startFinalizer> = $r8;

        return;
    }
}
