class org.waveprotocol.box.server.waveserver.MemoryPerUserWaveViewHandlerImpl$1 extends java.lang.Object implements com.google.common.base.Function
{
    final org.waveprotocol.box.server.waveserver.WaveMap val$waveMap;
    final org.waveprotocol.box.server.waveserver.MemoryPerUserWaveViewHandlerImpl this$0;

    void <init>(org.waveprotocol.box.server.waveserver.MemoryPerUserWaveViewHandlerImpl, org.waveprotocol.box.server.waveserver.WaveMap)
    {
        org.waveprotocol.box.server.waveserver.MemoryPerUserWaveViewHandlerImpl$1 r0;
        org.waveprotocol.box.server.waveserver.MemoryPerUserWaveViewHandlerImpl r1;
        org.waveprotocol.box.server.waveserver.WaveMap r2;

        r0 := @this: org.waveprotocol.box.server.waveserver.MemoryPerUserWaveViewHandlerImpl$1;

        r1 := @parameter0: org.waveprotocol.box.server.waveserver.MemoryPerUserWaveViewHandlerImpl;

        r2 := @parameter1: org.waveprotocol.box.server.waveserver.WaveMap;

        r0.<org.waveprotocol.box.server.waveserver.MemoryPerUserWaveViewHandlerImpl$1: org.waveprotocol.box.server.waveserver.MemoryPerUserWaveViewHandlerImpl this$0> = r1;

        r0.<org.waveprotocol.box.server.waveserver.MemoryPerUserWaveViewHandlerImpl$1: org.waveprotocol.box.server.waveserver.WaveMap val$waveMap> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.google.common.collect.Multimap apply(org.waveprotocol.wave.model.wave.ParticipantId)
    {
        org.waveprotocol.box.server.waveserver.WaveletContainer r21;
        org.waveprotocol.wave.model.wave.ParticipantId r9;
        com.google.common.collect.HashMultimap $r0;
        java.util.Map $r3;
        org.waveprotocol.box.server.waveserver.MemoryPerUserWaveViewHandlerImpl$1 r1;
        org.waveprotocol.wave.util.logging.Log $r6, $r26;
        org.waveprotocol.box.server.waveserver.Wave r18;
        boolean $z0, $z1, $z2;
        org.waveprotocol.wave.model.id.WaveletName $r22, $r29;
        java.util.Set $r4;
        java.lang.StringBuilder $r7, $r8, $r11, $r12, $r13, $r27, $r28, $r30;
        org.waveprotocol.wave.model.id.WaveletId r23;
        int $i0;
        java.lang.String $r10, $r14, $r31;
        java.util.Map$Entry r16;
        java.util.Iterator $r5, $r19;
        org.waveprotocol.box.server.waveserver.WaveletStateException $r25;
        java.lang.Object $r15, $r17, $r20, $r24;
        org.waveprotocol.box.server.waveserver.WaveMap $r2;

        r1 := @this: org.waveprotocol.box.server.waveserver.MemoryPerUserWaveViewHandlerImpl$1;

        r9 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        $r0 = staticinvoke <com.google.common.collect.HashMultimap: com.google.common.collect.HashMultimap create()>();

        $r2 = r1.<org.waveprotocol.box.server.waveserver.MemoryPerUserWaveViewHandlerImpl$1: org.waveprotocol.box.server.waveserver.WaveMap val$waveMap>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.box.server.waveserver.WaveMap: java.util.Map getWaves()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r15 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.util.Map$Entry) $r15;

        $r17 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getValue()>();

        r18 = (org.waveprotocol.box.server.waveserver.Wave) $r17;

        $r19 = virtualinvoke r18.<org.waveprotocol.box.server.waveserver.Wave: java.util.Iterator iterator()>();

     label02:
        $z2 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r21 = (org.waveprotocol.box.server.waveserver.WaveletContainer) $r20;

        $r22 = interfaceinvoke r21.<org.waveprotocol.box.server.waveserver.WaveletContainer: org.waveprotocol.wave.model.id.WaveletName getWaveletName()>();

        r23 = $r22.<org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveletId waveletId>;

     label03:
        $z1 = interfaceinvoke r21.<org.waveprotocol.box.server.waveserver.WaveletContainer: boolean hasParticipant(org.waveprotocol.wave.model.wave.ParticipantId)>(r9);

        if $z1 != 0 goto label05;

     label04:
        goto label02;

     label05:
        $r24 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r0.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>($r24, r23);

     label06:
        goto label08;

     label07:
        $r25 := @caughtexception;

        $r26 = staticinvoke <org.waveprotocol.box.server.waveserver.MemoryPerUserWaveViewHandlerImpl: org.waveprotocol.wave.util.logging.Log access$000()>();

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to access wavelet ");

        $r29 = interfaceinvoke r21.<org.waveprotocol.box.server.waveserver.WaveletContainer: org.waveprotocol.wave.model.id.WaveletName getWaveletName()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<org.waveprotocol.wave.util.logging.Log: void warning(java.lang.String,java.lang.Throwable)>($r31, $r25);

     label08:
        goto label02;

     label09:
        goto label01;

     label10:
        $r6 = staticinvoke <org.waveprotocol.box.server.waveserver.MemoryPerUserWaveViewHandlerImpl: org.waveprotocol.wave.util.logging.Log access$000()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initalized waves view for user: ");

        $r10 = virtualinvoke r9.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", number of waves in view: ");

        $i0 = interfaceinvoke $r0.<com.google.common.collect.Multimap: int size()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<org.waveprotocol.wave.util.logging.Log: void info(java.lang.String)>($r14);

        return $r0;

        catch org.waveprotocol.box.server.waveserver.WaveletStateException from label03 to label04 with label07;
        catch org.waveprotocol.box.server.waveserver.WaveletStateException from label05 to label06 with label07;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        org.waveprotocol.box.server.waveserver.MemoryPerUserWaveViewHandlerImpl$1 r0;
        java.lang.Object r1;
        org.waveprotocol.wave.model.wave.ParticipantId $r2;
        com.google.common.collect.Multimap $r3;

        r0 := @this: org.waveprotocol.box.server.waveserver.MemoryPerUserWaveViewHandlerImpl$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.wave.ParticipantId) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.box.server.waveserver.MemoryPerUserWaveViewHandlerImpl$1: com.google.common.collect.Multimap apply(org.waveprotocol.wave.model.wave.ParticipantId)>($r2);

        return $r3;
    }
}
