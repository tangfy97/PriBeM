class org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor extends org.eclipse.jdt.internal.compiler.ASTVisitor
{
    org.eclipse.jdt.internal.compiler.ast.TypeDeclaration result;
    int count;
    final org.eclipse.jdt.internal.core.util.ASTNodeFinder this$0;
    private final boolean val$findAnonymous;
    private final int val$occurenceCount;
    private final char[] val$typeName;

    void <init>(org.eclipse.jdt.internal.core.util.ASTNodeFinder, boolean, int, char[])
    {
        org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor r0;
        int i0;
        char[] r2;
        org.eclipse.jdt.internal.core.util.ASTNodeFinder r1;
        boolean z0;

        r0 := @this: org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor;

        r1 := @parameter0: org.eclipse.jdt.internal.core.util.ASTNodeFinder;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r2 := @parameter3: char[];

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void <init>()>();

        r0.<org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor: org.eclipse.jdt.internal.core.util.ASTNodeFinder this$0> = r1;

        r0.<org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor: boolean val$findAnonymous> = z0;

        r0.<org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor: int val$occurenceCount> = i0;

        r0.<org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor: char[] val$typeName> = r2;

        r0.<org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor: int count> = 0;

        return;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r5;
        org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor r0;
        int $i0, $i1, $i2, $i3, $i4;
        char[] $r3, $r4;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r1, r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration result>;

        if $r1 == null goto label1;

        return 0;

     label1:
        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits>;

        $i1 = $i0 & 512;

        if $i1 == 0 goto label2;

        $z2 = r0.<org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor: boolean val$findAnonymous>;

        if $z2 == 0 goto label3;

        $i2 = r0.<org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor: int count>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor: int count> = $i3;

        $i4 = r0.<org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor: int val$occurenceCount>;

        if $i3 != $i4 goto label3;

        r0.<org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration result> = r2;

        goto label3;

     label2:
        $z0 = r0.<org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor: boolean val$findAnonymous>;

        if $z0 != 0 goto label3;

        $r4 = r0.<org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor: char[] val$typeName>;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        $z1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r4, $r3);

        if $z1 == 0 goto label3;

        r0.<org.eclipse.jdt.internal.core.util.ASTNodeFinder$1$Visitor: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration result> = r2;

     label3:
        return 0;
    }
}
