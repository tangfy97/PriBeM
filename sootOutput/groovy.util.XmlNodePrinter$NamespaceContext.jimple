class groovy.util.XmlNodePrinter$NamespaceContext extends java.lang.Object
{
    private final java.util.Map namespaceMap;
    private final groovy.util.XmlNodePrinter this$0;

    private void <init>(groovy.util.XmlNodePrinter)
    {
        groovy.util.XmlNodePrinter$NamespaceContext r0;
        java.util.HashMap $r2;
        groovy.util.XmlNodePrinter r1;

        r0 := @this: groovy.util.XmlNodePrinter$NamespaceContext;

        r1 := @parameter0: groovy.util.XmlNodePrinter;

        r0.<groovy.util.XmlNodePrinter$NamespaceContext: groovy.util.XmlNodePrinter this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<groovy.util.XmlNodePrinter$NamespaceContext: java.util.Map namespaceMap> = $r2;

        return;
    }

    private void <init>(groovy.util.XmlNodePrinter, groovy.util.XmlNodePrinter$NamespaceContext)
    {
        groovy.util.XmlNodePrinter r1;
        java.util.Map $r3, $r4;
        groovy.util.XmlNodePrinter$NamespaceContext r0, r2;

        r0 := @this: groovy.util.XmlNodePrinter$NamespaceContext;

        r1 := @parameter0: groovy.util.XmlNodePrinter;

        r2 := @parameter1: groovy.util.XmlNodePrinter$NamespaceContext;

        specialinvoke r0.<groovy.util.XmlNodePrinter$NamespaceContext: void <init>(groovy.util.XmlNodePrinter)>(r1);

        $r4 = r0.<groovy.util.XmlNodePrinter$NamespaceContext: java.util.Map namespaceMap>;

        $r3 = r2.<groovy.util.XmlNodePrinter$NamespaceContext: java.util.Map namespaceMap>;

        interfaceinvoke $r4.<java.util.Map: void putAll(java.util.Map)>($r3);

        return;
    }

    public boolean isPrefixRegistered(java.lang.String, java.lang.String)
    {
        groovy.util.XmlNodePrinter$NamespaceContext r0;
        java.util.Map $r2, $r3;
        java.lang.Object $r4;
        java.lang.String r1, r5;
        boolean $z0, $z1, $z2;

        r0 := @this: groovy.util.XmlNodePrinter$NamespaceContext;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r2 = r0.<groovy.util.XmlNodePrinter$NamespaceContext: java.util.Map namespaceMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<groovy.util.XmlNodePrinter$NamespaceContext: java.util.Map namespaceMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>(r5);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void registerNamespacePrefix(java.lang.String, java.lang.String)
    {
        java.util.Map $r3;
        groovy.util.XmlNodePrinter$NamespaceContext r0;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: groovy.util.XmlNodePrinter$NamespaceContext;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<groovy.util.XmlNodePrinter$NamespaceContext: boolean isPrefixRegistered(java.lang.String,java.lang.String)>(r1, r2);

        if $z0 != 0 goto label1;

        $r3 = r0.<groovy.util.XmlNodePrinter$NamespaceContext: java.util.Map namespaceMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label1:
        return;
    }

    public java.lang.String getNamespace(java.lang.String)
    {
        java.util.Map $r2;
        groovy.util.XmlNodePrinter$NamespaceContext r0;
        java.lang.Object $r3;
        java.lang.String r1, $r4;

        r0 := @this: groovy.util.XmlNodePrinter$NamespaceContext;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<groovy.util.XmlNodePrinter$NamespaceContext: java.util.Map namespaceMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if $r3 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

     label2:
        return $r4;
    }

    void <init>(groovy.util.XmlNodePrinter, groovy.util.XmlNodePrinter$1)
    {
        groovy.util.XmlNodePrinter$NamespaceContext r0;
        groovy.util.XmlNodePrinter$1 r2;
        groovy.util.XmlNodePrinter r1;

        r0 := @this: groovy.util.XmlNodePrinter$NamespaceContext;

        r1 := @parameter0: groovy.util.XmlNodePrinter;

        r2 := @parameter1: groovy.util.XmlNodePrinter$1;

        specialinvoke r0.<groovy.util.XmlNodePrinter$NamespaceContext: void <init>(groovy.util.XmlNodePrinter)>(r1);

        return;
    }

    void <init>(groovy.util.XmlNodePrinter, groovy.util.XmlNodePrinter$NamespaceContext, groovy.util.XmlNodePrinter$1)
    {
        groovy.util.XmlNodePrinter r1;
        groovy.util.XmlNodePrinter$NamespaceContext r0, r2;
        groovy.util.XmlNodePrinter$1 r3;

        r0 := @this: groovy.util.XmlNodePrinter$NamespaceContext;

        r1 := @parameter0: groovy.util.XmlNodePrinter;

        r2 := @parameter1: groovy.util.XmlNodePrinter$NamespaceContext;

        r3 := @parameter2: groovy.util.XmlNodePrinter$1;

        specialinvoke r0.<groovy.util.XmlNodePrinter$NamespaceContext: void <init>(groovy.util.XmlNodePrinter,groovy.util.XmlNodePrinter$NamespaceContext)>(r1, r2);

        return;
    }
}
