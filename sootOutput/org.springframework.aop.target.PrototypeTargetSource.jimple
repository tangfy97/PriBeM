public class org.springframework.aop.target.PrototypeTargetSource extends org.springframework.aop.target.AbstractPrototypeBasedTargetSource
{

    public void <init>()
    {
        org.springframework.aop.target.PrototypeTargetSource r0;

        r0 := @this: org.springframework.aop.target.PrototypeTargetSource;

        specialinvoke r0.<org.springframework.aop.target.AbstractPrototypeBasedTargetSource: void <init>()>();

        return;
    }

    public java.lang.Object getTarget() throws org.springframework.beans.BeansException
    {
        java.lang.Object $r1;
        org.springframework.aop.target.PrototypeTargetSource r0;

        r0 := @this: org.springframework.aop.target.PrototypeTargetSource;

        $r1 = virtualinvoke r0.<org.springframework.aop.target.PrototypeTargetSource: java.lang.Object newPrototypeInstance()>();

        return $r1;
    }

    public void releaseTarget(java.lang.Object)
    {
        java.lang.Object r1;
        org.springframework.aop.target.PrototypeTargetSource r0;

        r0 := @this: org.springframework.aop.target.PrototypeTargetSource;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.springframework.aop.target.PrototypeTargetSource: void destroyPrototypeInstance(java.lang.Object)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r3, $r4;
        java.lang.String $r2, $r5;
        org.springframework.aop.target.PrototypeTargetSource r1;

        r1 := @this: org.springframework.aop.target.PrototypeTargetSource;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("PrototypeTargetSource for target bean with name \'");

        $r2 = virtualinvoke r1.<org.springframework.aop.target.PrototypeTargetSource: java.lang.String getTargetBeanName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
