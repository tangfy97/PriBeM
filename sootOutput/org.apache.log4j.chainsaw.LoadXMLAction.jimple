class org.apache.log4j.chainsaw.LoadXMLAction extends javax.swing.AbstractAction
{
    private static final org.apache.log4j.Logger LOG;
    private final javax.swing.JFrame mParent;
    private final javax.swing.JFileChooser mChooser;
    private final org.xml.sax.XMLReader mParser;
    private final org.apache.log4j.chainsaw.XMLFileHandler mHandler;
    static java.lang.Class class$org$apache$log4j$chainsaw$LoadXMLAction;

    void <init>(javax.swing.JFrame, org.apache.log4j.chainsaw.MyTableModel) throws org.xml.sax.SAXException, javax.xml.parsers.ParserConfigurationException
    {
        org.apache.log4j.chainsaw.MyTableModel r6;
        javax.xml.parsers.SAXParserFactory $r7;
        org.apache.log4j.chainsaw.XMLFileHandler $r5, $r10;
        org.xml.sax.XMLReader $r9, $r11;
        javax.xml.parsers.SAXParser $r8;
        org.apache.log4j.chainsaw.LoadXMLAction r0;
        javax.swing.JFileChooser $r1, $r2, $r3;
        javax.swing.JFrame r4;

        r0 := @this: org.apache.log4j.chainsaw.LoadXMLAction;

        r4 := @parameter0: javax.swing.JFrame;

        r6 := @parameter1: org.apache.log4j.chainsaw.MyTableModel;

        specialinvoke r0.<javax.swing.AbstractAction: void <init>()>();

        $r1 = new javax.swing.JFileChooser;

        specialinvoke $r1.<javax.swing.JFileChooser: void <init>()>();

        r0.<org.apache.log4j.chainsaw.LoadXMLAction: javax.swing.JFileChooser mChooser> = $r1;

        $r2 = r0.<org.apache.log4j.chainsaw.LoadXMLAction: javax.swing.JFileChooser mChooser>;

        virtualinvoke $r2.<javax.swing.JFileChooser: void setMultiSelectionEnabled(boolean)>(0);

        $r3 = r0.<org.apache.log4j.chainsaw.LoadXMLAction: javax.swing.JFileChooser mChooser>;

        virtualinvoke $r3.<javax.swing.JFileChooser: void setFileSelectionMode(int)>(0);

        r0.<org.apache.log4j.chainsaw.LoadXMLAction: javax.swing.JFrame mParent> = r4;

        $r5 = new org.apache.log4j.chainsaw.XMLFileHandler;

        specialinvoke $r5.<org.apache.log4j.chainsaw.XMLFileHandler: void <init>(org.apache.log4j.chainsaw.MyTableModel)>(r6);

        r0.<org.apache.log4j.chainsaw.LoadXMLAction: org.apache.log4j.chainsaw.XMLFileHandler mHandler> = $r5;

        $r7 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        $r8 = virtualinvoke $r7.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        $r9 = virtualinvoke $r8.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

        r0.<org.apache.log4j.chainsaw.LoadXMLAction: org.xml.sax.XMLReader mParser> = $r9;

        $r11 = r0.<org.apache.log4j.chainsaw.LoadXMLAction: org.xml.sax.XMLReader mParser>;

        $r10 = r0.<org.apache.log4j.chainsaw.LoadXMLAction: org.apache.log4j.chainsaw.XMLFileHandler mHandler>;

        interfaceinvoke $r11.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r10);

        return;
    }

    public void actionPerformed(java.awt.event.ActionEvent)
    {
        org.apache.log4j.Logger $r0, $r4, $r8, $r21;
        java.lang.StringBuffer $r7, $r9, $r11, $r14, $r16, $r17, $r18, $r22, $r24, $r26;
        int $i0, $i1;
        javax.swing.JFileChooser $r3, $r5;
        java.lang.String $r10, $r12, $r13, $r19, $r25, $r27;
        javax.swing.JFrame $r2, $r15, $r23;
        java.awt.event.ActionEvent r28;
        java.io.File $r6;
        java.lang.Exception $r20;
        org.apache.log4j.chainsaw.LoadXMLAction r1;

        r1 := @this: org.apache.log4j.chainsaw.LoadXMLAction;

        r28 := @parameter0: java.awt.event.ActionEvent;

        $r0 = <org.apache.log4j.chainsaw.LoadXMLAction: org.apache.log4j.Logger LOG>;

        virtualinvoke $r0.<org.apache.log4j.Category: void info(java.lang.Object)>("load file called");

        $r3 = r1.<org.apache.log4j.chainsaw.LoadXMLAction: javax.swing.JFileChooser mChooser>;

        $r2 = r1.<org.apache.log4j.chainsaw.LoadXMLAction: javax.swing.JFrame mParent>;

        $i0 = virtualinvoke $r3.<javax.swing.JFileChooser: int showOpenDialog(java.awt.Component)>($r2);

        if $i0 != 0 goto label4;

        $r4 = <org.apache.log4j.chainsaw.LoadXMLAction: org.apache.log4j.Logger LOG>;

        virtualinvoke $r4.<org.apache.log4j.Category: void info(java.lang.Object)>("Need to load a file");

        $r5 = r1.<org.apache.log4j.chainsaw.LoadXMLAction: javax.swing.JFileChooser mChooser>;

        $r6 = virtualinvoke $r5.<javax.swing.JFileChooser: java.io.File getSelectedFile()>();

        $r8 = <org.apache.log4j.chainsaw.LoadXMLAction: org.apache.log4j.Logger LOG>;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("loading the contents of ");

        $r10 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r8.<org.apache.log4j.Category: void info(java.lang.Object)>($r12);

     label1:
        $r13 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>();

        $i1 = specialinvoke r1.<org.apache.log4j.chainsaw.LoadXMLAction: int loadFile(java.lang.String)>($r13);

        $r15 = r1.<org.apache.log4j.chainsaw.LoadXMLAction: javax.swing.JFrame mParent>;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Loaded ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" events.");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>($r15, $r19, "CHAINSAW", 1);

     label2:
        goto label4;

     label3:
        $r20 := @caughtexception;

        $r21 = <org.apache.log4j.chainsaw.LoadXMLAction: org.apache.log4j.Logger LOG>;

        virtualinvoke $r21.<org.apache.log4j.Category: void warn(java.lang.Object,java.lang.Throwable)>("caught an exception loading the file", $r20);

        $r23 = r1.<org.apache.log4j.chainsaw.LoadXMLAction: javax.swing.JFrame mParent>;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error parsing file - ");

        $r25 = virtualinvoke $r20.<java.lang.Throwable: java.lang.String getMessage()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>($r23, $r27, "CHAINSAW", 0);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private int loadFile(java.lang.String) throws org.xml.sax.SAXException, java.io.IOException
    {
        java.lang.Throwable $r9;
        org.xml.sax.InputSource $r4;
        org.apache.log4j.chainsaw.XMLFileHandler $r8;
        org.xml.sax.XMLReader $r1, $r7;
        java.io.StringReader $r5;
        java.lang.StringBuffer $r2;
        int $i0;
        org.apache.log4j.chainsaw.LoadXMLAction r0;
        java.lang.String r3, $r6;

        r0 := @this: org.apache.log4j.chainsaw.LoadXMLAction;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.log4j.chainsaw.LoadXMLAction: org.xml.sax.XMLReader mParser>;

        entermonitor $r1;

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<?xml version=\"1.0\" standalone=\"yes\"?>\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<!DOCTYPE log4j:eventSet ");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[<!ENTITY data SYSTEM \"file:///");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\">]>\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<log4j:eventSet xmlns:log4j=\"Claira\">\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&data;\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</log4j:eventSet>\n");

        $r4 = new org.xml.sax.InputSource;

        $r5 = new java.io.StringReader;

        $r6 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<java.io.StringReader: void <init>(java.lang.String)>($r6);

        specialinvoke $r4.<org.xml.sax.InputSource: void <init>(java.io.Reader)>($r5);

        $r7 = r0.<org.apache.log4j.chainsaw.LoadXMLAction: org.xml.sax.XMLReader mParser>;

        interfaceinvoke $r7.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r4);

        $r8 = r0.<org.apache.log4j.chainsaw.LoadXMLAction: org.apache.log4j.chainsaw.XMLFileHandler mHandler>;

        $i0 = virtualinvoke $r8.<org.apache.log4j.chainsaw.XMLFileHandler: int getNumEvents()>();

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.apache.log4j.Logger $r1;
        java.lang.Class $r0, $r2;

        $r0 = <org.apache.log4j.chainsaw.LoadXMLAction: java.lang.Class class$org$apache$log4j$chainsaw$LoadXMLAction>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.apache.log4j.chainsaw.LoadXMLAction: java.lang.Class class$(java.lang.String)>("org.apache.log4j.chainsaw.LoadXMLAction");

        <org.apache.log4j.chainsaw.LoadXMLAction: java.lang.Class class$org$apache$log4j$chainsaw$LoadXMLAction> = $r2;

        goto label2;

     label1:
        $r2 = <org.apache.log4j.chainsaw.LoadXMLAction: java.lang.Class class$org$apache$log4j$chainsaw$LoadXMLAction>;

     label2:
        $r1 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>($r2);

        <org.apache.log4j.chainsaw.LoadXMLAction: org.apache.log4j.Logger LOG> = $r1;

        return;
    }
}
