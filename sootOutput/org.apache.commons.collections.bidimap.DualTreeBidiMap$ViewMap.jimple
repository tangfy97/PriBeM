public class org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap extends org.apache.commons.collections.map.AbstractSortedMapDecorator
{
    final org.apache.commons.collections.bidimap.DualTreeBidiMap bidi;

    protected void <init>(org.apache.commons.collections.bidimap.DualTreeBidiMap, java.util.SortedMap)
    {
        java.util.Map[] $r3;
        java.util.Map $r5, $r8;
        org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap r0;
        org.apache.commons.collections.bidimap.DualTreeBidiMap r1, $r9;
        java.util.SortedMap r2, $r7;
        org.apache.commons.collections.BidiMap $r4, $r6;

        r0 := @this: org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap;

        r1 := @parameter0: org.apache.commons.collections.bidimap.DualTreeBidiMap;

        r2 := @parameter1: java.util.SortedMap;

        $r3 = r1.<org.apache.commons.collections.bidimap.DualTreeBidiMap: java.util.Map[] maps>;

        $r5 = $r3[1];

        $r4 = r1.<org.apache.commons.collections.bidimap.DualTreeBidiMap: org.apache.commons.collections.BidiMap inverseBidiMap>;

        $r6 = virtualinvoke r1.<org.apache.commons.collections.bidimap.DualTreeBidiMap: org.apache.commons.collections.BidiMap createBidiMap(java.util.Map,java.util.Map,org.apache.commons.collections.BidiMap)>(r2, $r5, $r4);

        $r7 = (java.util.SortedMap) $r6;

        specialinvoke r0.<org.apache.commons.collections.map.AbstractSortedMapDecorator: void <init>(java.util.SortedMap)>($r7);

        $r8 = r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap: java.util.Map map>;

        $r9 = (org.apache.commons.collections.bidimap.DualTreeBidiMap) $r8;

        r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap: org.apache.commons.collections.bidimap.DualTreeBidiMap bidi> = $r9;

        return;
    }

    public boolean containsValue(java.lang.Object)
    {
        java.util.Map[] $r2;
        java.util.Map $r4;
        org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap r0;
        org.apache.commons.collections.bidimap.DualTreeBidiMap $r1;
        java.lang.Object r3;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap;

        r3 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap: org.apache.commons.collections.bidimap.DualTreeBidiMap bidi>;

        $r2 = $r1.<org.apache.commons.collections.bidimap.DualTreeBidiMap: java.util.Map[] maps>;

        $r4 = $r2[0];

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsValue(java.lang.Object)>(r3);

        return $z0;
    }

    public void clear()
    {
        java.util.Iterator $r2;
        org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap r0;
        java.util.Set $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap: java.util.Set keySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        return;
    }

    public java.util.SortedMap headMap(java.lang.Object)
    {
        org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap $r0, r1;
        org.apache.commons.collections.bidimap.DualTreeBidiMap $r3;
        java.lang.Object r2;
        java.util.SortedMap $r4;

        r1 := @this: org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap;

        r2 := @parameter0: java.lang.Object;

        $r0 = new org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap;

        $r3 = r1.<org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap: org.apache.commons.collections.bidimap.DualTreeBidiMap bidi>;

        $r4 = specialinvoke r1.<org.apache.commons.collections.map.AbstractSortedMapDecorator: java.util.SortedMap headMap(java.lang.Object)>(r2);

        specialinvoke $r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap: void <init>(org.apache.commons.collections.bidimap.DualTreeBidiMap,java.util.SortedMap)>($r3, $r4);

        return $r0;
    }

    public java.util.SortedMap tailMap(java.lang.Object)
    {
        org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap $r0, r1;
        org.apache.commons.collections.bidimap.DualTreeBidiMap $r3;
        java.lang.Object r2;
        java.util.SortedMap $r4;

        r1 := @this: org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap;

        r2 := @parameter0: java.lang.Object;

        $r0 = new org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap;

        $r3 = r1.<org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap: org.apache.commons.collections.bidimap.DualTreeBidiMap bidi>;

        $r4 = specialinvoke r1.<org.apache.commons.collections.map.AbstractSortedMapDecorator: java.util.SortedMap tailMap(java.lang.Object)>(r2);

        specialinvoke $r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap: void <init>(org.apache.commons.collections.bidimap.DualTreeBidiMap,java.util.SortedMap)>($r3, $r4);

        return $r0;
    }

    public java.util.SortedMap subMap(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap $r0, r1;
        org.apache.commons.collections.bidimap.DualTreeBidiMap $r4;
        java.lang.Object r2, r3;
        java.util.SortedMap $r5;

        r1 := @this: org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r0 = new org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap;

        $r4 = r1.<org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap: org.apache.commons.collections.bidimap.DualTreeBidiMap bidi>;

        $r5 = specialinvoke r1.<org.apache.commons.collections.map.AbstractSortedMapDecorator: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>(r2, r3);

        specialinvoke $r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap: void <init>(org.apache.commons.collections.bidimap.DualTreeBidiMap,java.util.SortedMap)>($r4, $r5);

        return $r0;
    }
}
