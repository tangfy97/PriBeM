public class org.mortbay.io.BufferCache extends java.lang.Object
{
    private java.util.HashMap _bufferMap;
    private org.mortbay.util.StringMap _stringMap;
    private java.util.ArrayList _index;

    public void <init>()
    {
        org.mortbay.util.StringMap $r2;
        org.mortbay.io.BufferCache r0;
        java.util.HashMap $r1;
        java.util.ArrayList $r3;

        r0 := @this: org.mortbay.io.BufferCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.mortbay.io.BufferCache: java.util.HashMap _bufferMap> = $r1;

        $r2 = new org.mortbay.util.StringMap;

        specialinvoke $r2.<org.mortbay.util.StringMap: void <init>(boolean)>(1);

        r0.<org.mortbay.io.BufferCache: org.mortbay.util.StringMap _stringMap> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.mortbay.io.BufferCache: java.util.ArrayList _index> = $r3;

        return;
    }

    public org.mortbay.io.BufferCache$CachedBuffer add(java.lang.String, int)
    {
        org.mortbay.io.BufferCache r2;
        java.util.HashMap $r3;
        org.mortbay.io.BufferCache$CachedBuffer $r0;
        java.util.ArrayList $r5, $r6, $r7;
        org.mortbay.util.StringMap $r4;
        int i0, $i1, $i2;
        java.lang.String r1;

        r2 := @this: org.mortbay.io.BufferCache;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = new org.mortbay.io.BufferCache$CachedBuffer;

        specialinvoke $r0.<org.mortbay.io.BufferCache$CachedBuffer: void <init>(java.lang.String,int)>(r1, i0);

        $r3 = r2.<org.mortbay.io.BufferCache: java.util.HashMap _bufferMap>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r0);

        $r4 = r2.<org.mortbay.io.BufferCache: org.mortbay.util.StringMap _stringMap>;

        virtualinvoke $r4.<org.mortbay.util.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>(r1, $r0);

     label1:
        $r5 = r2.<org.mortbay.io.BufferCache: java.util.ArrayList _index>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $i2 = i0 - $i1;

        if $i2 <= 0 goto label2;

        $r7 = r2.<org.mortbay.io.BufferCache: java.util.ArrayList _index>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        goto label1;

     label2:
        $r6 = r2.<org.mortbay.io.BufferCache: java.util.ArrayList _index>;

        virtualinvoke $r6.<java.util.ArrayList: void add(int,java.lang.Object)>(i0, $r0);

        return $r0;
    }

    public org.mortbay.io.BufferCache$CachedBuffer get(int)
    {
        int i0, $i1;
        org.mortbay.io.BufferCache r0;
        java.lang.Object $r3;
        org.mortbay.io.BufferCache$CachedBuffer $r4;
        java.util.ArrayList $r1, $r2;

        r0 := @this: org.mortbay.io.BufferCache;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r1 = r0.<org.mortbay.io.BufferCache: java.util.ArrayList _index>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i0 < $i1 goto label2;

     label1:
        return null;

     label2:
        $r2 = r0.<org.mortbay.io.BufferCache: java.util.ArrayList _index>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r4 = (org.mortbay.io.BufferCache$CachedBuffer) $r3;

        return $r4;
    }

    public org.mortbay.io.BufferCache$CachedBuffer get(org.mortbay.io.Buffer)
    {
        org.mortbay.io.Buffer r1;
        org.mortbay.io.BufferCache r0;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        org.mortbay.io.BufferCache$CachedBuffer $r4;

        r0 := @this: org.mortbay.io.BufferCache;

        r1 := @parameter0: org.mortbay.io.Buffer;

        $r2 = r0.<org.mortbay.io.BufferCache: java.util.HashMap _bufferMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.mortbay.io.BufferCache$CachedBuffer) $r3;

        return $r4;
    }

    public org.mortbay.io.BufferCache$CachedBuffer get(java.lang.String)
    {
        org.mortbay.util.StringMap $r2;
        org.mortbay.io.BufferCache r0;
        java.lang.Object $r3;
        java.lang.String r1;
        org.mortbay.io.BufferCache$CachedBuffer $r4;

        r0 := @this: org.mortbay.io.BufferCache;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.mortbay.io.BufferCache: org.mortbay.util.StringMap _stringMap>;

        $r3 = virtualinvoke $r2.<org.mortbay.util.StringMap: java.lang.Object get(java.lang.String)>(r1);

        $r4 = (org.mortbay.io.BufferCache$CachedBuffer) $r3;

        return $r4;
    }

    public org.mortbay.io.Buffer lookup(org.mortbay.io.Buffer)
    {
        org.mortbay.io.Buffer r1;
        org.mortbay.io.View$CaseInsensitive $r3;
        org.mortbay.io.BufferCache r0;
        org.mortbay.io.BufferCache$CachedBuffer $r2;
        boolean $z0;

        r0 := @this: org.mortbay.io.BufferCache;

        r1 := @parameter0: org.mortbay.io.Buffer;

        $r2 = virtualinvoke r0.<org.mortbay.io.BufferCache: org.mortbay.io.BufferCache$CachedBuffer get(org.mortbay.io.Buffer)>(r1);

        if $r2 != null goto label2;

        $z0 = r1 instanceof org.mortbay.io.Buffer$CaseInsensitve;

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $r3 = new org.mortbay.io.View$CaseInsensitive;

        specialinvoke $r3.<org.mortbay.io.View$CaseInsensitive: void <init>(org.mortbay.io.Buffer)>(r1);

        return $r3;

     label2:
        return $r2;
    }

    public org.mortbay.io.BufferCache$CachedBuffer getBest(byte[], int, int)
    {
        byte[] r1;
        java.util.Map$Entry $r3;
        org.mortbay.io.BufferCache r0;
        org.mortbay.io.BufferCache$CachedBuffer $r5;
        org.mortbay.util.StringMap $r2;
        int i0, i1;
        java.lang.Object $r4;

        r0 := @this: org.mortbay.io.BufferCache;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.mortbay.io.BufferCache: org.mortbay.util.StringMap _stringMap>;

        $r3 = virtualinvoke $r2.<org.mortbay.util.StringMap: java.util.Map$Entry getBestEntry(byte[],int,int)>(r1, i0, i1);

        if $r3 == null goto label1;

        $r4 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r5 = (org.mortbay.io.BufferCache$CachedBuffer) $r4;

        return $r5;

     label1:
        return null;
    }

    public org.mortbay.io.Buffer lookup(java.lang.String)
    {
        int $i1;
        org.mortbay.io.BufferCache r0;
        java.lang.String r1;
        org.mortbay.io.BufferCache$CachedBuffer $r2, $r4;

        r0 := @this: org.mortbay.io.BufferCache;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.mortbay.io.BufferCache: org.mortbay.io.BufferCache$CachedBuffer get(java.lang.String)>(r1);

        if $r2 != null goto label1;

        $r4 = new org.mortbay.io.BufferCache$CachedBuffer;

        $i1 = (int) -1;

        specialinvoke $r4.<org.mortbay.io.BufferCache$CachedBuffer: void <init>(java.lang.String,int)>(r1, $i1);

        return $r4;

     label1:
        return $r2;
    }

    public java.lang.String toString(org.mortbay.io.Buffer)
    {
        org.mortbay.io.Buffer r1, $r2;
        org.mortbay.io.BufferCache r0;
        java.lang.String $r3;

        r0 := @this: org.mortbay.io.BufferCache;

        r1 := @parameter0: org.mortbay.io.Buffer;

        $r2 = virtualinvoke r0.<org.mortbay.io.BufferCache: org.mortbay.io.Buffer lookup(org.mortbay.io.Buffer)>(r1);

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }

    public int getOrdinal(org.mortbay.io.Buffer)
    {
        org.mortbay.io.Buffer $r1, r4;
        org.mortbay.io.BufferCache r0;
        org.mortbay.io.BufferCache$CachedBuffer $r2, $r3;
        int $i0, $i1, $i3;
        boolean $z0, $z1;

        r0 := @this: org.mortbay.io.BufferCache;

        r4 := @parameter0: org.mortbay.io.Buffer;

        $z0 = r4 instanceof org.mortbay.io.BufferCache$CachedBuffer;

        if $z0 == 0 goto label1;

        $r3 = (org.mortbay.io.BufferCache$CachedBuffer) r4;

        $i1 = virtualinvoke $r3.<org.mortbay.io.BufferCache$CachedBuffer: int getOrdinal()>();

        return $i1;

     label1:
        $r1 = virtualinvoke r0.<org.mortbay.io.BufferCache: org.mortbay.io.Buffer lookup(org.mortbay.io.Buffer)>(r4);

        if $r1 == null goto label2;

        $z1 = $r1 instanceof org.mortbay.io.BufferCache$CachedBuffer;

        if $z1 == 0 goto label2;

        $r2 = (org.mortbay.io.BufferCache$CachedBuffer) $r1;

        $i0 = virtualinvoke $r2.<org.mortbay.io.BufferCache$CachedBuffer: int getOrdinal()>();

        return $i0;

     label2:
        $i3 = (int) -1;

        return $i3;
    }

    public java.lang.String toString()
    {
        org.mortbay.io.BufferCache r2;
        java.util.HashMap $r3;
        java.util.ArrayList $r9;
        org.mortbay.util.StringMap $r6;
        java.lang.StringBuffer $r0, $r1, $r4, $r5, $r7, $r8, $r10, $r11;
        java.lang.String $r12;

        r2 := @this: org.mortbay.io.BufferCache;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("CACHE[bufferMap=");

        $r3 = r2.<org.mortbay.io.BufferCache: java.util.HashMap _bufferMap>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",stringMap=");

        $r6 = r2.<org.mortbay.io.BufferCache: org.mortbay.util.StringMap _stringMap>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",index=");

        $r9 = r2.<org.mortbay.io.BufferCache: java.util.ArrayList _index>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r12;
    }
}
