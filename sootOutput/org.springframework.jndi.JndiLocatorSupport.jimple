public abstract class org.springframework.jndi.JndiLocatorSupport extends org.springframework.jndi.JndiAccessor
{
    public static final java.lang.String CONTAINER_PREFIX;
    private boolean resourceRef;

    public void <init>()
    {
        org.springframework.jndi.JndiLocatorSupport r0;

        r0 := @this: org.springframework.jndi.JndiLocatorSupport;

        specialinvoke r0.<org.springframework.jndi.JndiAccessor: void <init>()>();

        r0.<org.springframework.jndi.JndiLocatorSupport: boolean resourceRef> = 0;

        return;
    }

    public void setResourceRef(boolean)
    {
        org.springframework.jndi.JndiLocatorSupport r0;
        boolean z0;

        r0 := @this: org.springframework.jndi.JndiLocatorSupport;

        z0 := @parameter0: boolean;

        r0.<org.springframework.jndi.JndiLocatorSupport: boolean resourceRef> = z0;

        return;
    }

    public boolean isResourceRef()
    {
        org.springframework.jndi.JndiLocatorSupport r0;
        boolean $z0;

        r0 := @this: org.springframework.jndi.JndiLocatorSupport;

        $z0 = r0.<org.springframework.jndi.JndiLocatorSupport: boolean resourceRef>;

        return $z0;
    }

    protected java.lang.Object lookup(java.lang.String) throws javax.naming.NamingException
    {
        org.springframework.jndi.JndiLocatorSupport r0;
        java.lang.Object $r2;
        java.lang.String r1;

        r0 := @this: org.springframework.jndi.JndiLocatorSupport;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.springframework.jndi.JndiLocatorSupport: java.lang.Object lookup(java.lang.String,java.lang.Class)>(r1, null);

        return $r2;
    }

    protected java.lang.Object lookup(java.lang.String, java.lang.Class) throws javax.naming.NamingException
    {
        javax.naming.NamingException $r11;
        java.lang.String r0, $r2, $r10, $r21;
        boolean $z0, $z1, $z2;
        org.springframework.jndi.JndiTemplate $r3, $r13;
        org.springframework.jndi.JndiLocatorSupport r1;
        java.lang.Class r4;
        org.apache.commons.logging.Log $r5, $r7, $r12, $r15;
        java.lang.StringBuilder $r6, $r8, $r9, $r14, $r16, $r17, $r18, $r19, $r20;
        java.lang.Object r22;

        r1 := @this: org.springframework.jndi.JndiLocatorSupport;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Class;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "\'jndiName\' must not be null");

        $r2 = virtualinvoke r1.<org.springframework.jndi.JndiLocatorSupport: java.lang.String convertJndiName(java.lang.String)>(r0);

     label1:
        $r3 = virtualinvoke r1.<org.springframework.jndi.JndiLocatorSupport: org.springframework.jndi.JndiTemplate getJndiTemplate()>();

        r22 = virtualinvoke $r3.<org.springframework.jndi.JndiTemplate: java.lang.Object lookup(java.lang.String,java.lang.Class)>($r2, r4);

     label2:
        goto label6;

     label3:
        $r11 := @caughtexception;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 != 0 goto label5;

        $r12 = r1.<org.springframework.jndi.JndiLocatorSupport: org.apache.commons.logging.Log logger>;

        $z2 = interfaceinvoke $r12.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z2 == 0 goto label4;

        $r15 = r1.<org.springframework.jndi.JndiLocatorSupport: org.apache.commons.logging.Log logger>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("Converted JNDI name [");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] not found - trying original name [");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]. ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r21);

     label4:
        $r13 = virtualinvoke r1.<org.springframework.jndi.JndiLocatorSupport: org.springframework.jndi.JndiTemplate getJndiTemplate()>();

        r22 = virtualinvoke $r13.<org.springframework.jndi.JndiTemplate: java.lang.Object lookup(java.lang.String,java.lang.Class)>(r0, r4);

        goto label6;

     label5:
        throw $r11;

     label6:
        $r5 = r1.<org.springframework.jndi.JndiLocatorSupport: org.apache.commons.logging.Log logger>;

        $z0 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label7;

        $r7 = r1.<org.springframework.jndi.JndiLocatorSupport: org.apache.commons.logging.Log logger>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Located object with JNDI name [");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r10);

     label7:
        return r22;

        catch javax.naming.NamingException from label1 to label2 with label3;
    }

    protected java.lang.String convertJndiName(java.lang.String)
    {
        org.springframework.jndi.JndiLocatorSupport r0;
        int $i0, $i2;
        java.lang.StringBuilder $r2, $r4;
        java.lang.String r3;
        boolean $z0, $z1;

        r0 := @this: org.springframework.jndi.JndiLocatorSupport;

        r3 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.springframework.jndi.JndiLocatorSupport: boolean isResourceRef()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("java:comp/env/");

        if $z1 != 0 goto label1;

        $i0 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(58);

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("java:comp/env/");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        return r3;
    }

    public static void <clinit>()
    {
        <org.springframework.jndi.JndiLocatorSupport: java.lang.String CONTAINER_PREFIX> = "java:comp/env/";

        return;
    }
}
