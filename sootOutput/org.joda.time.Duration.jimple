public final class org.joda.time.Duration extends org.joda.time.base.BaseDuration implements org.joda.time.ReadableDuration, java.io.Serializable
{
    public static final org.joda.time.Duration ZERO;
    private static final long serialVersionUID;

    public static org.joda.time.Duration standardDays(long)
    {
        byte $b1;
        org.joda.time.Duration $r0, $r1;
        long l0, $l2;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r1 = <org.joda.time.Duration: org.joda.time.Duration ZERO>;

        return $r1;

     label1:
        $r0 = new org.joda.time.Duration;

        $l2 = staticinvoke <org.joda.time.field.FieldUtils: long safeMultiply(long,int)>(l0, 86400000);

        specialinvoke $r0.<org.joda.time.Duration: void <init>(long)>($l2);

        return $r0;
    }

    public static org.joda.time.Duration standardHours(long)
    {
        byte $b1;
        org.joda.time.Duration $r0, $r1;
        long l0, $l2;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r1 = <org.joda.time.Duration: org.joda.time.Duration ZERO>;

        return $r1;

     label1:
        $r0 = new org.joda.time.Duration;

        $l2 = staticinvoke <org.joda.time.field.FieldUtils: long safeMultiply(long,int)>(l0, 3600000);

        specialinvoke $r0.<org.joda.time.Duration: void <init>(long)>($l2);

        return $r0;
    }

    public static org.joda.time.Duration standardMinutes(long)
    {
        byte $b1;
        org.joda.time.Duration $r1, $r2;
        int $i4;
        long l0, $l2;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r1 = <org.joda.time.Duration: org.joda.time.Duration ZERO>;

        return $r1;

     label1:
        $r2 = new org.joda.time.Duration;

        $i4 = (int) 60000;

        $l2 = staticinvoke <org.joda.time.field.FieldUtils: long safeMultiply(long,int)>(l0, $i4);

        specialinvoke $r2.<org.joda.time.Duration: void <init>(long)>($l2);

        return $r2;
    }

    public static org.joda.time.Duration standardSeconds(long)
    {
        byte $b1;
        org.joda.time.Duration $r0, $r1;
        long l0, $l2;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r1 = <org.joda.time.Duration: org.joda.time.Duration ZERO>;

        return $r1;

     label1:
        $r0 = new org.joda.time.Duration;

        $l2 = staticinvoke <org.joda.time.field.FieldUtils: long safeMultiply(long,int)>(l0, 1000);

        specialinvoke $r0.<org.joda.time.Duration: void <init>(long)>($l2);

        return $r0;
    }

    public void <init>(long)
    {
        org.joda.time.Duration r0;
        long l0;

        r0 := @this: org.joda.time.Duration;

        l0 := @parameter0: long;

        specialinvoke r0.<org.joda.time.base.BaseDuration: void <init>(long)>(l0);

        return;
    }

    public void <init>(long, long)
    {
        org.joda.time.Duration r0;
        long l0, l1;

        r0 := @this: org.joda.time.Duration;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        specialinvoke r0.<org.joda.time.base.BaseDuration: void <init>(long,long)>(l0, l1);

        return;
    }

    public void <init>(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant)
    {
        org.joda.time.Duration r0;
        org.joda.time.ReadableInstant r1, r2;

        r0 := @this: org.joda.time.Duration;

        r1 := @parameter0: org.joda.time.ReadableInstant;

        r2 := @parameter1: org.joda.time.ReadableInstant;

        specialinvoke r0.<org.joda.time.base.BaseDuration: void <init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)>(r1, r2);

        return;
    }

    public void <init>(java.lang.Object)
    {
        org.joda.time.Duration r0;
        java.lang.Object r1;

        r0 := @this: org.joda.time.Duration;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.joda.time.base.BaseDuration: void <init>(java.lang.Object)>(r1);

        return;
    }

    public long getStandardSeconds()
    {
        org.joda.time.Duration r0;
        long $l0, $l1;

        r0 := @this: org.joda.time.Duration;

        $l0 = virtualinvoke r0.<org.joda.time.Duration: long getMillis()>();

        $l1 = $l0 / 1000L;

        return $l1;
    }

    public org.joda.time.Duration toDuration()
    {
        org.joda.time.Duration r0;

        r0 := @this: org.joda.time.Duration;

        return r0;
    }

    public org.joda.time.Seconds toStandardSeconds()
    {
        org.joda.time.Seconds $r1;
        org.joda.time.Duration r0;
        int $i1;
        long $l0;

        r0 := @this: org.joda.time.Duration;

        $l0 = virtualinvoke r0.<org.joda.time.Duration: long getStandardSeconds()>();

        $i1 = staticinvoke <org.joda.time.field.FieldUtils: int safeToInt(long)>($l0);

        $r1 = staticinvoke <org.joda.time.Seconds: org.joda.time.Seconds seconds(int)>($i1);

        return $r1;
    }

    public org.joda.time.Duration withMillis(long)
    {
        byte $b2;
        org.joda.time.Duration r0, $r1;
        long l0, $l1;

        r0 := @this: org.joda.time.Duration;

        l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<org.joda.time.Duration: long getMillis()>();

        $b2 = l0 cmp $l1;

        if $b2 != 0 goto label1;

        return r0;

     label1:
        $r1 = new org.joda.time.Duration;

        specialinvoke $r1.<org.joda.time.Duration: void <init>(long)>(l0);

        return $r1;
    }

    public org.joda.time.Duration withDurationAdded(long, int)
    {
        org.joda.time.Duration r0, $r1;
        long l0, $l3, $l4, $l5;
        byte $b1;
        int i2;

        r0 := @this: org.joda.time.Duration;

        l0 := @parameter0: long;

        i2 := @parameter1: int;

        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label1;

        if i2 != 0 goto label2;

     label1:
        return r0;

     label2:
        $l3 = staticinvoke <org.joda.time.field.FieldUtils: long safeMultiply(long,int)>(l0, i2);

        $l4 = virtualinvoke r0.<org.joda.time.Duration: long getMillis()>();

        $l5 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>($l4, $l3);

        $r1 = new org.joda.time.Duration;

        specialinvoke $r1.<org.joda.time.Duration: void <init>(long)>($l5);

        return $r1;
    }

    public org.joda.time.Duration withDurationAdded(org.joda.time.ReadableDuration, int)
    {
        org.joda.time.ReadableDuration r0;
        org.joda.time.Duration r1, $r2;
        int i0;
        long $l1;

        r1 := @this: org.joda.time.Duration;

        r0 := @parameter0: org.joda.time.ReadableDuration;

        i0 := @parameter1: int;

        if r0 == null goto label1;

        if i0 != 0 goto label2;

     label1:
        return r1;

     label2:
        $l1 = interfaceinvoke r0.<org.joda.time.ReadableDuration: long getMillis()>();

        $r2 = virtualinvoke r1.<org.joda.time.Duration: org.joda.time.Duration withDurationAdded(long,int)>($l1, i0);

        return $r2;
    }

    public org.joda.time.Duration plus(long)
    {
        org.joda.time.Duration r0, $r1;
        long l0;

        r0 := @this: org.joda.time.Duration;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<org.joda.time.Duration: org.joda.time.Duration withDurationAdded(long,int)>(l0, 1);

        return $r1;
    }

    public org.joda.time.Duration plus(org.joda.time.ReadableDuration)
    {
        org.joda.time.ReadableDuration r0;
        org.joda.time.Duration r1, $r2;
        long $l0;

        r1 := @this: org.joda.time.Duration;

        r0 := @parameter0: org.joda.time.ReadableDuration;

        if r0 != null goto label1;

        return r1;

     label1:
        $l0 = interfaceinvoke r0.<org.joda.time.ReadableDuration: long getMillis()>();

        $r2 = virtualinvoke r1.<org.joda.time.Duration: org.joda.time.Duration withDurationAdded(long,int)>($l0, 1);

        return $r2;
    }

    public org.joda.time.Duration minus(long)
    {
        org.joda.time.Duration r0, $r1;
        int $i2;
        long l0;

        r0 := @this: org.joda.time.Duration;

        l0 := @parameter0: long;

        $i2 = (int) -1;

        $r1 = virtualinvoke r0.<org.joda.time.Duration: org.joda.time.Duration withDurationAdded(long,int)>(l0, $i2);

        return $r1;
    }

    public org.joda.time.Duration minus(org.joda.time.ReadableDuration)
    {
        org.joda.time.ReadableDuration r0;
        org.joda.time.Duration r1, $r2;
        int $i2;
        long $l0;

        r1 := @this: org.joda.time.Duration;

        r0 := @parameter0: org.joda.time.ReadableDuration;

        if r0 != null goto label1;

        return r1;

     label1:
        $l0 = interfaceinvoke r0.<org.joda.time.ReadableDuration: long getMillis()>();

        $i2 = (int) -1;

        $r2 = virtualinvoke r1.<org.joda.time.Duration: org.joda.time.Duration withDurationAdded(long,int)>($l0, $i2);

        return $r2;
    }

    static void <clinit>()
    {
        org.joda.time.Duration $r0;

        <org.joda.time.Duration: long serialVersionUID> = 2471658376918L;

        $r0 = new org.joda.time.Duration;

        specialinvoke $r0.<org.joda.time.Duration: void <init>(long)>(0L);

        <org.joda.time.Duration: org.joda.time.Duration ZERO> = $r0;

        return;
    }
}
