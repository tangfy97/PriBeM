public abstract class org.tukaani.xz.FilterOptions extends java.lang.Object implements java.lang.Cloneable
{

    public static int getEncoderMemoryUsage(org.tukaani.xz.FilterOptions[])
    {
        org.tukaani.xz.FilterOptions[] r0;
        org.tukaani.xz.FilterOptions $r1;
        int $i0, $i1, i2, i3;

        r0 := @parameter0: org.tukaani.xz.FilterOptions[];

        i2 = 0;

        i3 = 0;

     label1:
        $i0 = lengthof r0;

        if i3 >= $i0 goto label2;

        $r1 = r0[i3];

        $i1 = virtualinvoke $r1.<org.tukaani.xz.FilterOptions: int getEncoderMemoryUsage()>();

        i2 = i2 + $i1;

        i3 = i3 + 1;

        goto label1;

     label2:
        return i2;
    }

    public static int getDecoderMemoryUsage(org.tukaani.xz.FilterOptions[])
    {
        org.tukaani.xz.FilterOptions[] r0;
        org.tukaani.xz.FilterOptions $r1;
        int $i0, $i1, i2, i3;

        r0 := @parameter0: org.tukaani.xz.FilterOptions[];

        i2 = 0;

        i3 = 0;

     label1:
        $i0 = lengthof r0;

        if i3 >= $i0 goto label2;

        $r1 = r0[i3];

        $i1 = virtualinvoke $r1.<org.tukaani.xz.FilterOptions: int getDecoderMemoryUsage()>();

        i2 = i2 + $i1;

        i3 = i3 + 1;

        goto label1;

     label2:
        return i2;
    }

    public abstract int getEncoderMemoryUsage();

    public abstract org.tukaani.xz.FinishableOutputStream getOutputStream(org.tukaani.xz.FinishableOutputStream);

    public abstract int getDecoderMemoryUsage();

    public abstract java.io.InputStream getInputStream(java.io.InputStream) throws java.io.IOException;

    abstract org.tukaani.xz.FilterEncoder getFilterEncoder();

    void <init>()
    {
        org.tukaani.xz.FilterOptions r0;

        r0 := @this: org.tukaani.xz.FilterOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
}
