public abstract class com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl extends java.lang.Object implements com.sun.xml.bind.v2.model.'annotation'.AnnotationReader
{
    private com.sun.xml.bind.v2.model.core.ErrorHandler errorHandler;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setErrorHandler(com.sun.xml.bind.v2.model.core.ErrorHandler)
    {
        com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl r1;
        java.lang.IllegalArgumentException $r2;
        com.sun.xml.bind.v2.model.core.ErrorHandler r0;

        r1 := @this: com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl;

        r0 := @parameter0: com.sun.xml.bind.v2.model.core.ErrorHandler;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r1.<com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl: com.sun.xml.bind.v2.model.core.ErrorHandler errorHandler> = r0;

        return;
    }

    public final com.sun.xml.bind.v2.model.core.ErrorHandler getErrorHandler()
    {
        com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl r0;
        java.lang.AssertionError $r3;
        boolean $z0;
        com.sun.xml.bind.v2.model.core.ErrorHandler $r1, $r2;

        r0 := @this: com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl;

        $z0 = <com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r2 = r0.<com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl: com.sun.xml.bind.v2.model.core.ErrorHandler errorHandler>;

        if $r2 != null goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>("error handler must be set before use");

        throw $r3;

     label1:
        $r1 = r0.<com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl: com.sun.xml.bind.v2.model.core.ErrorHandler errorHandler>;

        return $r1;
    }

    public final java.lang.'annotation'.Annotation getMethodAnnotation(java.lang.Class, java.lang.Object, java.lang.Object, com.sun.xml.bind.v2.model.'annotation'.Locatable)
    {
        java.lang.Object[] $r8;
        java.lang.String $r10, $r11, $r12, $r13;
        com.sun.xml.bind.v2.model.core.ErrorHandler $r6;
        com.sun.xml.bind.v2.model.'annotation'.Locatable r3;
        com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl r1;
        java.lang.'annotation'.Annotation r4, $r14, $r15;
        com.sun.xml.bind.v2.runtime.IllegalAnnotationException $r7;
        java.lang.Object r0, r5;
        java.lang.Class r2;
        com.sun.xml.bind.v2.model.'annotation'.Messages $r9;

        r1 := @this: com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl;

        r2 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Object;

        r5 := @parameter2: java.lang.Object;

        r3 := @parameter3: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        if r0 != null goto label1;

        $r14 = null;

        goto label2;

     label1:
        $r14 = virtualinvoke r1.<com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl: java.lang.'annotation'.Annotation getMethodAnnotation(java.lang.Class,java.lang.Object,com.sun.xml.bind.v2.model.'annotation'.Locatable)>(r2, r0, r3);

     label2:
        r4 = $r14;

        if r5 != null goto label3;

        $r15 = null;

        goto label4;

     label3:
        $r15 = virtualinvoke r1.<com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl: java.lang.'annotation'.Annotation getMethodAnnotation(java.lang.Class,java.lang.Object,com.sun.xml.bind.v2.model.'annotation'.Locatable)>(r2, r5, r3);

     label4:
        if r4 != null goto label6;

        if $r15 != null goto label5;

        return null;

     label5:
        return $r15;

     label6:
        if $r15 != null goto label7;

        return r4;

     label7:
        $r6 = virtualinvoke r1.<com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl: com.sun.xml.bind.v2.model.core.ErrorHandler getErrorHandler()>();

        $r7 = new com.sun.xml.bind.v2.runtime.IllegalAnnotationException;

        $r9 = <com.sun.xml.bind.v2.model.'annotation'.Messages: com.sun.xml.bind.v2.model.'annotation'.Messages DUPLICATE_ANNOTATIONS>;

        $r8 = newarray (java.lang.Object)[3];

        $r10 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r8[0] = $r10;

        $r11 = virtualinvoke r1.<com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl: java.lang.String fullName(java.lang.Object)>(r0);

        $r8[1] = $r11;

        $r12 = virtualinvoke r1.<com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl: java.lang.String fullName(java.lang.Object)>(r5);

        $r8[2] = $r12;

        $r13 = virtualinvoke $r9.<com.sun.xml.bind.v2.model.'annotation'.Messages: java.lang.String format(java.lang.Object[])>($r8);

        specialinvoke $r7.<com.sun.xml.bind.v2.runtime.IllegalAnnotationException: void <init>(java.lang.String,java.lang.'annotation'.Annotation,java.lang.'annotation'.Annotation)>($r13, r4, $r15);

        interfaceinvoke $r6.<com.sun.xml.bind.v2.model.core.ErrorHandler: void error(com.sun.xml.bind.v2.runtime.IllegalAnnotationException)>($r7);

        return r4;
    }

    public boolean hasMethodAnnotation(java.lang.Class, java.lang.String, java.lang.Object, java.lang.Object, com.sun.xml.bind.v2.model.'annotation'.Locatable)
    {
        com.sun.xml.bind.v2.model.'annotation'.Locatable r4;
        com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl r2;
        java.lang.Object r0, r1;
        java.lang.Class r3;
        java.lang.String r5;
        boolean z0, z1, $z2, $z3, $z4, $z6, $z7, $z8;

        r2 := @this: com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl;

        r3 := @parameter0: java.lang.Class;

        r5 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.Object;

        r1 := @parameter3: java.lang.Object;

        r4 := @parameter4: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        if r0 == null goto label1;

        $z3 = virtualinvoke r2.<com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl: boolean hasMethodAnnotation(java.lang.Class,java.lang.Object)>(r3, r0);

        if $z3 == 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z0 = $z4;

        if r1 == null goto label3;

        $z2 = virtualinvoke r2.<com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl: boolean hasMethodAnnotation(java.lang.Class,java.lang.Object)>(r3, r1);

        if $z2 == 0 goto label3;

        $z8 = 1;

        $z7 = 1;

        goto label4;

     label3:
        $z8 = 0;

        $z7 = 0;

     label4:
        z1 = $z7;

        if z0 == 0 goto label5;

        if $z8 == 0 goto label5;

        virtualinvoke r2.<com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl: java.lang.'annotation'.Annotation getMethodAnnotation(java.lang.Class,java.lang.Object,java.lang.Object,com.sun.xml.bind.v2.model.'annotation'.Locatable)>(r3, r0, r1, r4);

     label5:
        if z0 != 0 goto label6;

        if z1 == 0 goto label7;

     label6:
        $z6 = 1;

        goto label8;

     label7:
        $z6 = 0;

     label8:
        return $z6;
    }

    protected abstract java.lang.String fullName(java.lang.Object);

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/sun/xml/bind/v2/model/annotation/AbstractInlineAnnotationReaderImpl;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl: boolean $assertionsDisabled> = $z1;

        return;
    }
}
