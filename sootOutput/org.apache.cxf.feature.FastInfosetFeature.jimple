public class org.apache.cxf.feature.FastInfosetFeature extends org.apache.cxf.feature.AbstractFeature
{
    boolean force;
    private java.lang.Integer serializerAttributeValueMapMemoryLimit;
    private java.lang.Integer serializerMinAttributeValueSize;
    private java.lang.Integer serializerMaxAttributeValueSize;
    private java.lang.Integer serializerCharacterContentChunkMapMemoryLimit;
    private java.lang.Integer serializerMinCharacterContentChunkSize;
    private java.lang.Integer serializerMaxCharacterContentChunkSize;

    public void <init>()
    {
        org.apache.cxf.feature.FastInfosetFeature r0;

        r0 := @this: org.apache.cxf.feature.FastInfosetFeature;

        specialinvoke r0.<org.apache.cxf.feature.AbstractFeature: void <init>()>();

        return;
    }

    protected void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider, org.apache.cxf.Bus)
    {
        org.apache.cxf.interceptor.FIStaxInInterceptor $r0;
        java.lang.Integer $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r24, $r25, $r26, $r27, $r28;
        boolean $z0;
        java.util.List $r29, $r30, $r31, $r32;
        org.apache.cxf.feature.FastInfosetFeature r2;
        org.apache.cxf.Bus r23;
        org.apache.cxf.interceptor.FIStaxOutInterceptor $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        org.apache.cxf.interceptor.InterceptorProvider r4;

        r2 := @this: org.apache.cxf.feature.FastInfosetFeature;

        r4 := @parameter0: org.apache.cxf.interceptor.InterceptorProvider;

        r23 := @parameter1: org.apache.cxf.Bus;

        $r0 = new org.apache.cxf.interceptor.FIStaxInInterceptor;

        specialinvoke $r0.<org.apache.cxf.interceptor.FIStaxInInterceptor: void <init>()>();

        $r1 = new org.apache.cxf.interceptor.FIStaxOutInterceptor;

        $z0 = r2.<org.apache.cxf.feature.FastInfosetFeature: boolean force>;

        specialinvoke $r1.<org.apache.cxf.interceptor.FIStaxOutInterceptor: void <init>(boolean)>($z0);

        $r3 = r2.<org.apache.cxf.feature.FastInfosetFeature: java.lang.Integer serializerAttributeValueMapMemoryLimit>;

        if $r3 == null goto label1;

        $r20 = r2.<org.apache.cxf.feature.FastInfosetFeature: java.lang.Integer serializerAttributeValueMapMemoryLimit>;

        $i10 = virtualinvoke $r20.<java.lang.Integer: int intValue()>();

        if $i10 <= 0 goto label1;

        $r21 = r2.<org.apache.cxf.feature.FastInfosetFeature: java.lang.Integer serializerAttributeValueMapMemoryLimit>;

        $i11 = virtualinvoke $r21.<java.lang.Integer: int intValue()>();

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        virtualinvoke $r1.<org.apache.cxf.interceptor.FIStaxOutInterceptor: void setSerializerAttributeValueMapMemoryLimit(java.lang.Integer)>($r22);

     label1:
        $r24 = r2.<org.apache.cxf.feature.FastInfosetFeature: java.lang.Integer serializerMinAttributeValueSize>;

        if $r24 == null goto label2;

        $r17 = r2.<org.apache.cxf.feature.FastInfosetFeature: java.lang.Integer serializerMinAttributeValueSize>;

        $i8 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        if $i8 <= 0 goto label2;

        $r18 = r2.<org.apache.cxf.feature.FastInfosetFeature: java.lang.Integer serializerMinAttributeValueSize>;

        $i9 = virtualinvoke $r18.<java.lang.Integer: int intValue()>();

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        virtualinvoke $r1.<org.apache.cxf.interceptor.FIStaxOutInterceptor: void setSerializerMinAttributeValueSize(java.lang.Integer)>($r19);

     label2:
        $r25 = r2.<org.apache.cxf.feature.FastInfosetFeature: java.lang.Integer serializerMaxAttributeValueSize>;

        if $r25 == null goto label3;

        $r14 = r2.<org.apache.cxf.feature.FastInfosetFeature: java.lang.Integer serializerMaxAttributeValueSize>;

        $i6 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        if $i6 <= 0 goto label3;

        $r15 = r2.<org.apache.cxf.feature.FastInfosetFeature: java.lang.Integer serializerMaxAttributeValueSize>;

        $i7 = virtualinvoke $r15.<java.lang.Integer: int intValue()>();

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        virtualinvoke $r1.<org.apache.cxf.interceptor.FIStaxOutInterceptor: void setSerializerMaxAttributeValueSize(java.lang.Integer)>($r16);

     label3:
        $r26 = r2.<org.apache.cxf.feature.FastInfosetFeature: java.lang.Integer serializerCharacterContentChunkMapMemoryLimit>;

        if $r26 == null goto label4;

        $r11 = r2.<org.apache.cxf.feature.FastInfosetFeature: java.lang.Integer serializerCharacterContentChunkMapMemoryLimit>;

        $i4 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        if $i4 <= 0 goto label4;

        $r12 = r2.<org.apache.cxf.feature.FastInfosetFeature: java.lang.Integer serializerCharacterContentChunkMapMemoryLimit>;

        $i5 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        virtualinvoke $r1.<org.apache.cxf.interceptor.FIStaxOutInterceptor: void setSerializerCharacterContentChunkMapMemoryLimit(java.lang.Integer)>($r13);

     label4:
        $r27 = r2.<org.apache.cxf.feature.FastInfosetFeature: java.lang.Integer serializerMinCharacterContentChunkSize>;

        if $r27 == null goto label5;

        $r8 = r2.<org.apache.cxf.feature.FastInfosetFeature: java.lang.Integer serializerMinCharacterContentChunkSize>;

        $i2 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        if $i2 <= 0 goto label5;

        $r9 = r2.<org.apache.cxf.feature.FastInfosetFeature: java.lang.Integer serializerMinCharacterContentChunkSize>;

        $i3 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke $r1.<org.apache.cxf.interceptor.FIStaxOutInterceptor: void setSerializerMinCharacterContentChunkSize(java.lang.Integer)>($r10);

     label5:
        $r28 = r2.<org.apache.cxf.feature.FastInfosetFeature: java.lang.Integer serializerMaxCharacterContentChunkSize>;

        if $r28 == null goto label6;

        $r5 = r2.<org.apache.cxf.feature.FastInfosetFeature: java.lang.Integer serializerMaxCharacterContentChunkSize>;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        if $i0 <= 0 goto label6;

        $r6 = r2.<org.apache.cxf.feature.FastInfosetFeature: java.lang.Integer serializerMaxCharacterContentChunkSize>;

        $i1 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r1.<org.apache.cxf.interceptor.FIStaxOutInterceptor: void setSerializerMaxCharacterContentChunkSize(java.lang.Integer)>($r7);

     label6:
        $r29 = interfaceinvoke r4.<org.apache.cxf.interceptor.InterceptorProvider: java.util.List getInInterceptors()>();

        interfaceinvoke $r29.<java.util.List: boolean add(java.lang.Object)>($r0);

        $r30 = interfaceinvoke r4.<org.apache.cxf.interceptor.InterceptorProvider: java.util.List getInFaultInterceptors()>();

        interfaceinvoke $r30.<java.util.List: boolean add(java.lang.Object)>($r0);

        $r31 = interfaceinvoke r4.<org.apache.cxf.interceptor.InterceptorProvider: java.util.List getOutInterceptors()>();

        interfaceinvoke $r31.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r32 = interfaceinvoke r4.<org.apache.cxf.interceptor.InterceptorProvider: java.util.List getOutFaultInterceptors()>();

        interfaceinvoke $r32.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void setForce(boolean)
    {
        org.apache.cxf.feature.FastInfosetFeature r0;
        boolean z0;

        r0 := @this: org.apache.cxf.feature.FastInfosetFeature;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.feature.FastInfosetFeature: boolean force> = z0;

        return;
    }

    public boolean getForce()
    {
        org.apache.cxf.feature.FastInfosetFeature r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.feature.FastInfosetFeature;

        $z0 = r0.<org.apache.cxf.feature.FastInfosetFeature: boolean force>;

        return $z0;
    }
}
