public class com.jhlabs.image.WarpGrid extends java.lang.Object implements java.io.Serializable
{
    static final long serialVersionUID;
    public float[] xGrid;
    public float[] yGrid;
    public int rows;
    public int cols;
    private static final float m00;
    private static final float m01;
    private static final float m02;
    private static final float m03;
    private static final float m10;
    private static final float m11;
    private static final float m12;
    private static final float m13;
    private static final float m20;
    private static final float m22;
    private static final float m31;

    public void <init>(int, int, int, int)
    {
        float[] $r1, $r2, $r3, $r4;
        com.jhlabs.image.WarpGrid r0;
        int i0, i1, $i2, $i3, i4, $i5, $i6, i7, $i8, $i9, i10, i11, i12;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;

        r0 := @this: com.jhlabs.image.WarpGrid;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i4 := @parameter2: int;

        i7 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jhlabs.image.WarpGrid: float[] xGrid> = null;

        r0.<com.jhlabs.image.WarpGrid: float[] yGrid> = null;

        r0.<com.jhlabs.image.WarpGrid: int rows> = i0;

        r0.<com.jhlabs.image.WarpGrid: int cols> = i1;

        $i2 = i0 * i1;

        $r1 = newarray (float)[$i2];

        r0.<com.jhlabs.image.WarpGrid: float[] xGrid> = $r1;

        $i3 = i0 * i1;

        $r2 = newarray (float)[$i3];

        r0.<com.jhlabs.image.WarpGrid: float[] yGrid> = $r2;

        i10 = 0;

        i11 = 0;

     label1:
        if i11 >= i0 goto label4;

        i12 = 0;

     label2:
        if i12 >= i1 goto label3;

        $r3 = r0.<com.jhlabs.image.WarpGrid: float[] xGrid>;

        $f1 = (float) i12;

        $i5 = i4 - 1;

        $f0 = (float) $i5;

        $f3 = $f1 * $f0;

        $i6 = i1 - 1;

        $f2 = (float) $i6;

        $f4 = $f3 / $f2;

        $r3[i10] = $f4;

        $r4 = r0.<com.jhlabs.image.WarpGrid: float[] yGrid>;

        $f6 = (float) i11;

        $i8 = i7 - 1;

        $f5 = (float) $i8;

        $f8 = $f6 * $f5;

        $i9 = i0 - 1;

        $f7 = (float) $i9;

        $f9 = $f8 / $f7;

        $r4[i10] = $f9;

        i10 = i10 + 1;

        i12 = i12 + 1;

        goto label2;

     label3:
        i11 = i11 + 1;

        goto label1;

     label4:
        return;
    }

    public void addRow(int)
    {
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        float[] r1, r2, $r3, $r4, $r5, $r6, $r7, $r8;
        com.jhlabs.image.WarpGrid r0;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, i12, i13, i14, i15, i16, i17;

        r0 := @this: com.jhlabs.image.WarpGrid;

        i8 := @parameter0: int;

        $i0 = r0.<com.jhlabs.image.WarpGrid: int rows>;

        $i2 = $i0 + 1;

        $i1 = r0.<com.jhlabs.image.WarpGrid: int cols>;

        i3 = $i2 * $i1;

        r1 = newarray (float)[i3];

        r2 = newarray (float)[i3];

        $i4 = r0.<com.jhlabs.image.WarpGrid: int rows>;

        $i5 = $i4 + 1;

        r0.<com.jhlabs.image.WarpGrid: int rows> = $i5;

        i14 = 0;

        i15 = 0;

        i16 = 0;

     label1:
        $i6 = r0.<com.jhlabs.image.WarpGrid: int rows>;

        if i16 >= $i6 goto label7;

        i17 = 0;

     label2:
        $i7 = r0.<com.jhlabs.image.WarpGrid: int cols>;

        if i17 >= $i7 goto label5;

        i12 = i15 + i17;

        i13 = i14 + i17;

        if i16 != i8 goto label3;

        $r5 = r0.<com.jhlabs.image.WarpGrid: float[] xGrid>;

        $f3 = $r5[i13];

        $r6 = r0.<com.jhlabs.image.WarpGrid: float[] xGrid>;

        $f2 = $r6[i12];

        $f4 = $f3 + $f2;

        $f5 = $f4 / 2.0F;

        r1[i12] = $f5;

        $r7 = r0.<com.jhlabs.image.WarpGrid: float[] yGrid>;

        $f7 = $r7[i13];

        $r8 = r0.<com.jhlabs.image.WarpGrid: float[] yGrid>;

        $f6 = $r8[i12];

        $f8 = $f7 + $f6;

        $f9 = $f8 / 2.0F;

        r2[i12] = $f9;

        goto label4;

     label3:
        $r3 = r0.<com.jhlabs.image.WarpGrid: float[] xGrid>;

        $f0 = $r3[i13];

        r1[i12] = $f0;

        $r4 = r0.<com.jhlabs.image.WarpGrid: float[] yGrid>;

        $f1 = $r4[i13];

        r2[i12] = $f1;

     label4:
        i17 = i17 + 1;

        goto label2;

     label5:
        $i9 = i8 - 1;

        if i16 == $i9 goto label6;

        $i11 = r0.<com.jhlabs.image.WarpGrid: int cols>;

        i14 = i14 + $i11;

     label6:
        $i10 = r0.<com.jhlabs.image.WarpGrid: int cols>;

        i15 = i15 + $i10;

        i16 = i16 + 1;

        goto label1;

     label7:
        r0.<com.jhlabs.image.WarpGrid: float[] xGrid> = r1;

        r0.<com.jhlabs.image.WarpGrid: float[] yGrid> = r2;

        return;
    }

    public void addCol(int)
    {
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        float[] r1, r2, $r3, $r4, $r5, $r6, $r7, $r8;
        com.jhlabs.image.WarpGrid r0;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, i11, i12, i13, i14;

        r0 := @this: com.jhlabs.image.WarpGrid;

        i8 := @parameter0: int;

        $i2 = r0.<com.jhlabs.image.WarpGrid: int rows>;

        $i0 = r0.<com.jhlabs.image.WarpGrid: int cols>;

        $i1 = $i0 + 1;

        i3 = $i2 * $i1;

        r1 = newarray (float)[i3];

        r2 = newarray (float)[i3];

        $i4 = r0.<com.jhlabs.image.WarpGrid: int cols>;

        $i5 = $i4 + 1;

        r0.<com.jhlabs.image.WarpGrid: int cols> = $i5;

        i11 = 0;

        i12 = 0;

        i13 = 0;

     label1:
        $i6 = r0.<com.jhlabs.image.WarpGrid: int rows>;

        if i13 >= $i6 goto label6;

        i14 = 0;

     label2:
        $i7 = r0.<com.jhlabs.image.WarpGrid: int cols>;

        if i14 >= $i7 goto label5;

        if i14 != i8 goto label3;

        $r5 = r0.<com.jhlabs.image.WarpGrid: float[] xGrid>;

        $f3 = $r5[i11];

        $r6 = r0.<com.jhlabs.image.WarpGrid: float[] xGrid>;

        $i9 = i11 - 1;

        $f2 = $r6[$i9];

        $f4 = $f3 + $f2;

        $f5 = $f4 / 2.0F;

        r1[i12] = $f5;

        $r7 = r0.<com.jhlabs.image.WarpGrid: float[] yGrid>;

        $f7 = $r7[i11];

        $r8 = r0.<com.jhlabs.image.WarpGrid: float[] yGrid>;

        $i10 = i11 - 1;

        $f6 = $r8[$i10];

        $f8 = $f7 + $f6;

        $f9 = $f8 / 2.0F;

        r2[i12] = $f9;

        goto label4;

     label3:
        $r3 = r0.<com.jhlabs.image.WarpGrid: float[] xGrid>;

        $f0 = $r3[i11];

        r1[i12] = $f0;

        $r4 = r0.<com.jhlabs.image.WarpGrid: float[] yGrid>;

        $f1 = $r4[i11];

        r2[i12] = $f1;

        i11 = i11 + 1;

     label4:
        i12 = i12 + 1;

        i14 = i14 + 1;

        goto label2;

     label5:
        i13 = i13 + 1;

        goto label1;

     label6:
        r0.<com.jhlabs.image.WarpGrid: float[] xGrid> = r1;

        r0.<com.jhlabs.image.WarpGrid: float[] yGrid> = r2;

        return;
    }

    public void removeRow(int)
    {
        float[] r1, r2, $r3, $r4;
        com.jhlabs.image.WarpGrid r0;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16, i17, i18;
        float $f0, $f1;

        r0 := @this: com.jhlabs.image.WarpGrid;

        i8 := @parameter0: int;

        $i0 = r0.<com.jhlabs.image.WarpGrid: int rows>;

        $i2 = $i0 - 1;

        $i1 = r0.<com.jhlabs.image.WarpGrid: int cols>;

        i3 = $i2 * $i1;

        r1 = newarray (float)[i3];

        r2 = newarray (float)[i3];

        $i4 = r0.<com.jhlabs.image.WarpGrid: int rows>;

        $i5 = $i4 - 1;

        r0.<com.jhlabs.image.WarpGrid: int rows> = $i5;

        i15 = 0;

        i16 = 0;

        i17 = 0;

     label1:
        $i6 = r0.<com.jhlabs.image.WarpGrid: int rows>;

        if i17 >= $i6 goto label5;

        i18 = 0;

     label2:
        $i7 = r0.<com.jhlabs.image.WarpGrid: int cols>;

        if i18 >= $i7 goto label3;

        i13 = i16 + i18;

        i14 = i15 + i18;

        $r3 = r0.<com.jhlabs.image.WarpGrid: float[] xGrid>;

        $f0 = $r3[i14];

        r1[i13] = $f0;

        $r4 = r0.<com.jhlabs.image.WarpGrid: float[] yGrid>;

        $f1 = $r4[i14];

        r2[i13] = $f1;

        i18 = i18 + 1;

        goto label2;

     label3:
        $i9 = i8 - 1;

        if i17 != $i9 goto label4;

        $i12 = r0.<com.jhlabs.image.WarpGrid: int cols>;

        i15 = i15 + $i12;

     label4:
        $i10 = r0.<com.jhlabs.image.WarpGrid: int cols>;

        i15 = i15 + $i10;

        $i11 = r0.<com.jhlabs.image.WarpGrid: int cols>;

        i16 = i16 + $i11;

        i17 = i17 + 1;

        goto label1;

     label5:
        r0.<com.jhlabs.image.WarpGrid: float[] xGrid> = r1;

        r0.<com.jhlabs.image.WarpGrid: float[] yGrid> = r2;

        return;
    }

    public void removeCol(int)
    {
        float[] r1, r2, $r3, $r4;
        com.jhlabs.image.WarpGrid r0;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, i13, i14, i15, i16;
        float $f0, $f1;

        r0 := @this: com.jhlabs.image.WarpGrid;

        i11 := @parameter0: int;

        $i2 = r0.<com.jhlabs.image.WarpGrid: int rows>;

        $i0 = r0.<com.jhlabs.image.WarpGrid: int cols>;

        $i1 = $i0 + 1;

        i3 = $i2 * $i1;

        r1 = newarray (float)[i3];

        r2 = newarray (float)[i3];

        $i4 = r0.<com.jhlabs.image.WarpGrid: int cols>;

        $i5 = $i4 - 1;

        r0.<com.jhlabs.image.WarpGrid: int cols> = $i5;

        i13 = 0;

     label1:
        $i6 = r0.<com.jhlabs.image.WarpGrid: int rows>;

        if i13 >= $i6 goto label5;

        $i7 = r0.<com.jhlabs.image.WarpGrid: int cols>;

        $i8 = $i7 + 1;

        i14 = i13 * $i8;

        $i9 = r0.<com.jhlabs.image.WarpGrid: int cols>;

        i15 = i13 * $i9;

        i16 = 0;

     label2:
        $i10 = r0.<com.jhlabs.image.WarpGrid: int cols>;

        if i16 >= $i10 goto label4;

        $r3 = r0.<com.jhlabs.image.WarpGrid: float[] xGrid>;

        $f0 = $r3[i14];

        r1[i15] = $f0;

        $r4 = r0.<com.jhlabs.image.WarpGrid: float[] yGrid>;

        $f1 = $r4[i14];

        r2[i15] = $f1;

        $i12 = i11 - 1;

        if i16 != $i12 goto label3;

        i14 = i14 + 1;

     label3:
        i14 = i14 + 1;

        i15 = i15 + 1;

        i16 = i16 + 1;

        goto label2;

     label4:
        i13 = i13 + 1;

        goto label1;

     label5:
        r0.<com.jhlabs.image.WarpGrid: float[] xGrid> = r1;

        r0.<com.jhlabs.image.WarpGrid: float[] yGrid> = r2;

        return;
    }

    public void lerp(float, com.jhlabs.image.WarpGrid, com.jhlabs.image.WarpGrid)
    {
        float[] $r5, $r6, $r7, $r8, $r9, $r10;
        com.jhlabs.image.WarpGrid r0, r1, r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12;
        java.lang.IllegalArgumentException $r2, $r4;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;

        r0 := @this: com.jhlabs.image.WarpGrid;

        f0 := @parameter0: float;

        r1 := @parameter1: com.jhlabs.image.WarpGrid;

        r3 := @parameter2: com.jhlabs.image.WarpGrid;

        $i1 = r0.<com.jhlabs.image.WarpGrid: int rows>;

        $i0 = r1.<com.jhlabs.image.WarpGrid: int rows>;

        if $i1 != $i0 goto label1;

        $i3 = r0.<com.jhlabs.image.WarpGrid: int cols>;

        $i2 = r1.<com.jhlabs.image.WarpGrid: int cols>;

        if $i3 == $i2 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("source and destination are different sizes");

        throw $r2;

     label2:
        $i5 = r0.<com.jhlabs.image.WarpGrid: int rows>;

        $i4 = r3.<com.jhlabs.image.WarpGrid: int rows>;

        if $i5 != $i4 goto label3;

        $i7 = r0.<com.jhlabs.image.WarpGrid: int cols>;

        $i6 = r3.<com.jhlabs.image.WarpGrid: int cols>;

        if $i7 == $i6 goto label4;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("source and intermediate are different sizes");

        throw $r4;

     label4:
        i10 = 0;

        i11 = 0;

     label5:
        $i8 = r0.<com.jhlabs.image.WarpGrid: int rows>;

        if i11 >= $i8 goto label8;

        i12 = 0;

     label6:
        $i9 = r0.<com.jhlabs.image.WarpGrid: int cols>;

        if i12 >= $i9 goto label7;

        $r7 = r3.<com.jhlabs.image.WarpGrid: float[] xGrid>;

        $r5 = r0.<com.jhlabs.image.WarpGrid: float[] xGrid>;

        $f2 = $r5[i10];

        $r6 = r1.<com.jhlabs.image.WarpGrid: float[] xGrid>;

        $f1 = $r6[i10];

        $f3 = staticinvoke <com.jhlabs.image.ImageMath: float lerp(float,float,float)>(f0, $f2, $f1);

        $r7[i10] = $f3;

        $r10 = r3.<com.jhlabs.image.WarpGrid: float[] yGrid>;

        $r8 = r0.<com.jhlabs.image.WarpGrid: float[] yGrid>;

        $f5 = $r8[i10];

        $r9 = r1.<com.jhlabs.image.WarpGrid: float[] yGrid>;

        $f4 = $r9[i10];

        $f6 = staticinvoke <com.jhlabs.image.ImageMath: float lerp(float,float,float)>(f0, $f5, $f4);

        $r10[i10] = $f6;

        i10 = i10 + 1;

        i12 = i12 + 1;

        goto label6;

     label7:
        i11 = i11 + 1;

        goto label5;

     label8:
        return;
    }

    public void warp(int[], int, int, com.jhlabs.image.WarpGrid, com.jhlabs.image.WarpGrid, int[])
    {
        java.lang.Exception $r29;
        float[] r3, r4, r5, r6, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r27, $r28;
        com.jhlabs.image.WarpGrid r0, r1, $r7, $r9, r10;
        int[] r8, r11, r22;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        int $i0, $i1, $i2, $i3, i4, i5, $i6, $i7, $i8, i9, i10, $i11, $i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33;
        java.lang.IllegalArgumentException $r2;

        r10 := @this: com.jhlabs.image.WarpGrid;

        r22 := @parameter0: int[];

        i4 := @parameter1: int;

        i5 := @parameter2: int;

        r0 := @parameter3: com.jhlabs.image.WarpGrid;

        r1 := @parameter4: com.jhlabs.image.WarpGrid;

        r11 := @parameter5: int[];

     label01:
        $i1 = r0.<com.jhlabs.image.WarpGrid: int rows>;

        $i0 = r1.<com.jhlabs.image.WarpGrid: int rows>;

        if $i1 != $i0 goto label02;

        $i3 = r0.<com.jhlabs.image.WarpGrid: int cols>;

        $i2 = r1.<com.jhlabs.image.WarpGrid: int cols>;

        if $i3 == $i2 goto label03;

     label02:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("source and destination grids are different sizes");

        throw $r2;

     label03:
        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(i4, i5);

        r3 = newarray (float)[$i6];

        r4 = newarray (float)[$i6];

        $i7 = $i6 + 1;

        r5 = newarray (float)[$i7];

        $i8 = $i6 + 1;

        r6 = newarray (float)[$i8];

        i9 = r0.<com.jhlabs.image.WarpGrid: int cols>;

        i10 = r0.<com.jhlabs.image.WarpGrid: int rows>;

        $r7 = new com.jhlabs.image.WarpGrid;

        specialinvoke $r7.<com.jhlabs.image.WarpGrid: void <init>(int,int,int,int)>(i5, i9, 1, 1);

        i13 = 0;

     label04:
        if i13 >= i9 goto label09;

        i14 = i13;

        i15 = 0;

     label05:
        if i15 >= i10 goto label06;

        $r27 = r0.<com.jhlabs.image.WarpGrid: float[] xGrid>;

        $f8 = $r27[i14];

        r3[i15] = $f8;

        $r28 = r0.<com.jhlabs.image.WarpGrid: float[] yGrid>;

        $f9 = $r28[i14];

        r4[i15] = $f9;

        i14 = i14 + i9;

        i15 = i15 + 1;

        goto label05;

     label06:
        virtualinvoke r10.<com.jhlabs.image.WarpGrid: void interpolateSpline(float[],float[],int,int,float[],int,int)>(r4, r3, 0, i10, r6, 0, i5);

        i16 = i13;

        i17 = 0;

     label07:
        if i17 >= i5 goto label08;

        $r26 = $r7.<com.jhlabs.image.WarpGrid: float[] xGrid>;

        $f7 = r6[i17];

        $r26[i16] = $f7;

        i16 = i16 + i9;

        i17 = i17 + 1;

        goto label07;

     label08:
        i13 = i13 + 1;

        goto label04;

     label09:
        i18 = 0;

     label10:
        if i18 >= i9 goto label15;

        i19 = i18;

        i20 = 0;

     label11:
        if i20 >= i10 goto label12;

        $r24 = r1.<com.jhlabs.image.WarpGrid: float[] xGrid>;

        $f5 = $r24[i19];

        r3[i20] = $f5;

        $r25 = r1.<com.jhlabs.image.WarpGrid: float[] yGrid>;

        $f6 = $r25[i19];

        r4[i20] = $f6;

        i19 = i19 + i9;

        i20 = i20 + 1;

        goto label11;

     label12:
        virtualinvoke r10.<com.jhlabs.image.WarpGrid: void interpolateSpline(float[],float[],int,int,float[],int,int)>(r4, r3, 0, i10, r6, 0, i5);

        i21 = i18;

        i22 = 0;

     label13:
        if i22 >= i5 goto label14;

        $r23 = $r7.<com.jhlabs.image.WarpGrid: float[] yGrid>;

        $f4 = r6[i22];

        $r23[i21] = $f4;

        i21 = i21 + i9;

        i22 = i22 + 1;

        goto label13;

     label14:
        i18 = i18 + 1;

        goto label10;

     label15:
        $i11 = i5 * i4;

        r8 = newarray (int)[$i11];

        i23 = 0;

        i24 = 0;

     label16:
        if i24 >= i5 goto label17;

        $r21 = $r7.<com.jhlabs.image.WarpGrid: float[] xGrid>;

        $r20 = $r7.<com.jhlabs.image.WarpGrid: float[] yGrid>;

        virtualinvoke r10.<com.jhlabs.image.WarpGrid: void interpolateSpline(float[],float[],int,int,float[],int,int)>($r21, $r20, i23, i9, r5, 0, i4);

        $f3 = (float) i4;

        r5[i4] = $f3;

        $i12 = i24 * i4;

        staticinvoke <com.jhlabs.image.ImageMath: void resample(int[],int[],int,int,int,float[])>(r22, r8, i4, $i12, 1, r5);

        i23 = i23 + i9;

        i24 = i24 + 1;

        goto label16;

     label17:
        $r9 = new com.jhlabs.image.WarpGrid;

        specialinvoke $r9.<com.jhlabs.image.WarpGrid: void <init>(int,int,int,int)>(i10, i4, 1, 1);

        i25 = 0;

        i26 = 0;

        i27 = 0;

     label18:
        if i27 >= i10 goto label19;

        $r19 = r0.<com.jhlabs.image.WarpGrid: float[] xGrid>;

        $r18 = r0.<com.jhlabs.image.WarpGrid: float[] yGrid>;

        $r17 = $r9.<com.jhlabs.image.WarpGrid: float[] xGrid>;

        virtualinvoke r10.<com.jhlabs.image.WarpGrid: void interpolateSpline(float[],float[],int,int,float[],int,int)>($r19, $r18, i25, i9, $r17, i26, i4);

        i25 = i25 + i9;

        i26 = i26 + i4;

        i27 = i27 + 1;

        goto label18;

     label19:
        i28 = 0;

        i29 = 0;

        i30 = 0;

     label20:
        if i30 >= i10 goto label21;

        $r16 = r1.<com.jhlabs.image.WarpGrid: float[] xGrid>;

        $r15 = r1.<com.jhlabs.image.WarpGrid: float[] yGrid>;

        $r14 = $r9.<com.jhlabs.image.WarpGrid: float[] yGrid>;

        virtualinvoke r10.<com.jhlabs.image.WarpGrid: void interpolateSpline(float[],float[],int,int,float[],int,int)>($r16, $r15, i28, i9, $r14, i29, i4);

        i28 = i28 + i9;

        i29 = i29 + i4;

        i30 = i30 + 1;

        goto label20;

     label21:
        i31 = 0;

     label22:
        if i31 >= i4 goto label25;

        i32 = i31;

        i33 = 0;

     label23:
        if i33 >= i10 goto label24;

        $r12 = $r9.<com.jhlabs.image.WarpGrid: float[] xGrid>;

        $f1 = $r12[i32];

        r3[i33] = $f1;

        $r13 = $r9.<com.jhlabs.image.WarpGrid: float[] yGrid>;

        $f2 = $r13[i32];

        r4[i33] = $f2;

        i32 = i32 + i4;

        i33 = i33 + 1;

        goto label23;

     label24:
        virtualinvoke r10.<com.jhlabs.image.WarpGrid: void interpolateSpline(float[],float[],int,int,float[],int,int)>(r3, r4, 0, i10, r5, 0, i5);

        $f0 = (float) i5;

        r5[i5] = $f0;

        staticinvoke <com.jhlabs.image.ImageMath: void resample(int[],int[],int,int,int,float[])>(r8, r11, i5, i31, i4, r5);

        i31 = i31 + 1;

        goto label22;

     label25:
        goto label27;

     label26:
        $r29 := @caughtexception;

        virtualinvoke $r29.<java.lang.Throwable: void printStackTrace()>();

     label27:
        return;

        catch java.lang.Exception from label01 to label25 with label26;
    }

    protected void interpolateSpline(float[], float[], int, int, float[], int, int)
    {
        byte $b8;
        float $f0, $f1, $f2, f3, f4, f5, f6, f7, f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36;
        float[] r0, r1, r2;
        com.jhlabs.image.WarpGrid r3;
        int i0, i1, $i2, i3, $i4, $i5, i6, i7, $i9, i10, i11, $i12, $i13;

        r3 := @this: com.jhlabs.image.WarpGrid;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: float[];

        i7 := @parameter5: int;

        i6 := @parameter6: int;

        i10 = i0;

        $i2 = i0 + i1;

        i3 = $i2 - 1;

        f3 = r0[i0];

        $f0 = r1[i0];

        f4 = $f0;

        f5 = $f0;

        f6 = $f0;

        $i4 = i0 + 1;

        f7 = r0[$i4];

        $i5 = i0 + 1;

        f8 = r1[$i5];

        i11 = 0;

     label1:
        if i11 >= i6 goto label5;

        if i10 > i3 goto label4;

        $f2 = (float) i11;

        $f1 = r0[i10];

        $b8 = $f2 cmpl $f1;

        $i13 = (int) $b8;

        if $i13 <= 0 goto label4;

        f6 = f5;

        f5 = f4;

        f4 = f8;

        f3 = r0[i10];

        i10 = i10 + 1;

        if i10 > i3 goto label2;

        f7 = r0[i10];

     label2:
        if i10 >= i3 goto label3;

        $i9 = i10 + 1;

        f8 = r1[$i9];

        goto label4;

     label3:
        f8 = f4;

     label4:
        $f9 = (float) i11;

        $f10 = $f9 - f3;

        $f11 = f7 - f3;

        $f12 = $f10 / $f11;

        $f13 = -0.5F * f6;

        $f14 = 1.5F * f5;

        $f15 = $f13 + $f14;

        $f16 = -1.5F * f4;

        $f17 = $f15 + $f16;

        $f18 = 0.5F * f8;

        $f19 = $f17 + $f18;

        $f20 = 1.0F * f6;

        $f21 = -2.5F * f5;

        $f22 = $f20 + $f21;

        $f23 = 2.0F * f4;

        $f24 = $f22 + $f23;

        $f25 = -0.5F * f8;

        $f26 = $f24 + $f25;

        $f27 = -0.5F * f6;

        $f28 = 0.5F * f4;

        $f29 = $f27 + $f28;

        $f30 = 1.0F * f5;

        $i12 = i7 + i11;

        $f31 = $f19 * $f12;

        $f32 = $f31 + $f26;

        $f33 = $f32 * $f12;

        $f34 = $f33 + $f29;

        $f35 = $f34 * $f12;

        $f36 = $f35 + $f30;

        r2[$i12] = $f36;

        i11 = i11 + 1;

        goto label1;

     label5:
        return;
    }

    protected void interpolateSpline2(float[], float[], int, float[], int, int)
    {
        float[] r0, r1, r2;
        byte $b4;
        com.jhlabs.image.WarpGrid r3;
        int i0, $i1, $i2, i3, i5, $i6, i7, i8, $i9;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, f9, f10, f11, f12;

        r3 := @this: com.jhlabs.image.WarpGrid;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        i0 := @parameter2: int;

        r2 := @parameter3: float[];

        i5 := @parameter4: int;

        i3 := @parameter5: int;

        i7 = i0;

        f9 = r0[i0];

        f10 = r1[i0];

        $i1 = i0 + 1;

        f11 = r0[$i1];

        $i2 = i0 + 1;

        f12 = r1[$i2];

        i8 = 0;

     label1:
        if i8 >= i3 goto label3;

        $f1 = (float) i8;

        $f0 = r0[i7];

        $b4 = $f1 cmpl $f0;

        $i9 = (int) $b4;

        if $i9 <= 0 goto label2;

        f9 = r0[i7];

        f10 = r1[i7];

        i7 = i7 + 1;

        f11 = r0[i7];

        f12 = r1[i7];

     label2:
        $f2 = (float) i8;

        $f4 = $f2 - f9;

        $f3 = f11 - f9;

        $f8 = $f4 / $f3;

        $i6 = i5 + i8;

        $f5 = f12 - f10;

        $f6 = $f8 * $f5;

        $f7 = f10 + $f6;

        r2[$i6] = $f7;

        i8 = i8 + 1;

        goto label1;

     label3:
        return;
    }

    public static void <clinit>()
    {
        <com.jhlabs.image.WarpGrid: float m31> = 1.0F;

        <com.jhlabs.image.WarpGrid: float m22> = 0.5F;

        <com.jhlabs.image.WarpGrid: float m20> = -0.5F;

        <com.jhlabs.image.WarpGrid: float m13> = -0.5F;

        <com.jhlabs.image.WarpGrid: float m12> = 2.0F;

        <com.jhlabs.image.WarpGrid: float m11> = -2.5F;

        <com.jhlabs.image.WarpGrid: float m10> = 1.0F;

        <com.jhlabs.image.WarpGrid: float m03> = 0.5F;

        <com.jhlabs.image.WarpGrid: float m02> = -1.5F;

        <com.jhlabs.image.WarpGrid: float m01> = 1.5F;

        <com.jhlabs.image.WarpGrid: float m00> = -0.5F;

        <com.jhlabs.image.WarpGrid: long serialVersionUID> = 4312410199770201968L;

        return;
    }
}
