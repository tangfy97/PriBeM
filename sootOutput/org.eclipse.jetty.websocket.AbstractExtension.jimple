public class org.eclipse.jetty.websocket.AbstractExtension extends java.lang.Object implements org.eclipse.jetty.websocket.Extension
{
    private static final int[] __mask;
    private final java.lang.String _name;
    private final java.util.Map _parameters;
    private org.eclipse.jetty.websocket.WebSocketParser$FrameHandler _inbound;
    private org.eclipse.jetty.websocket.WebSocketGenerator _outbound;
    private org.eclipse.jetty.websocket.WebSocket$FrameConnection _connection;

    public void <init>(java.lang.String)
    {
        java.util.HashMap $r1;
        java.lang.String r2;
        org.eclipse.jetty.websocket.AbstractExtension r0;

        r0 := @this: org.eclipse.jetty.websocket.AbstractExtension;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.eclipse.jetty.websocket.AbstractExtension: java.util.Map _parameters> = $r1;

        r0.<org.eclipse.jetty.websocket.AbstractExtension: java.lang.String _name> = r2;

        return;
    }

    public org.eclipse.jetty.websocket.WebSocket$FrameConnection getConnection()
    {
        org.eclipse.jetty.websocket.AbstractExtension r0;
        org.eclipse.jetty.websocket.WebSocket$FrameConnection $r1;

        r0 := @this: org.eclipse.jetty.websocket.AbstractExtension;

        $r1 = r0.<org.eclipse.jetty.websocket.AbstractExtension: org.eclipse.jetty.websocket.WebSocket$FrameConnection _connection>;

        return $r1;
    }

    public boolean init(java.util.Map)
    {
        org.eclipse.jetty.websocket.AbstractExtension r0;
        java.util.Map r1, $r2;

        r0 := @this: org.eclipse.jetty.websocket.AbstractExtension;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<org.eclipse.jetty.websocket.AbstractExtension: java.util.Map _parameters>;

        interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r1);

        return 1;
    }

    public java.lang.String getInitParameter(java.lang.String)
    {
        org.eclipse.jetty.websocket.AbstractExtension r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1, $r4;

        r0 := @this: org.eclipse.jetty.websocket.AbstractExtension;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.eclipse.jetty.websocket.AbstractExtension: java.util.Map _parameters>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public java.lang.String getInitParameter(java.lang.String, java.lang.String)
    {
        org.eclipse.jetty.websocket.AbstractExtension r0;
        java.util.Map $r2, $r3;
        java.lang.Object $r4;
        java.lang.String r1, $r5, r6;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.websocket.AbstractExtension;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $r2 = r0.<org.eclipse.jetty.websocket.AbstractExtension: java.util.Map _parameters>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return r6;

     label1:
        $r3 = r0.<org.eclipse.jetty.websocket.AbstractExtension: java.util.Map _parameters>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    public int getInitParameter(java.lang.String, int)
    {
        java.lang.Integer $r5;
        org.eclipse.jetty.websocket.AbstractExtension r0;
        java.util.Map $r2;
        int $i0, i1;
        java.lang.Object $r3;
        java.lang.String r1, r4;

        r0 := @this: org.eclipse.jetty.websocket.AbstractExtension;

        r1 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        $r2 = r0.<org.eclipse.jetty.websocket.AbstractExtension: java.util.Map _parameters>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.String) $r3;

        if r4 != null goto label1;

        return i1;

     label1:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(r4);

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public void bind(org.eclipse.jetty.websocket.WebSocket$FrameConnection, org.eclipse.jetty.websocket.WebSocketParser$FrameHandler, org.eclipse.jetty.websocket.WebSocketGenerator)
    {
        org.eclipse.jetty.websocket.WebSocketParser$FrameHandler r2;
        org.eclipse.jetty.websocket.WebSocketGenerator r3;
        org.eclipse.jetty.websocket.AbstractExtension r0;
        org.eclipse.jetty.websocket.WebSocket$FrameConnection r1;

        r0 := @this: org.eclipse.jetty.websocket.AbstractExtension;

        r1 := @parameter0: org.eclipse.jetty.websocket.WebSocket$FrameConnection;

        r2 := @parameter1: org.eclipse.jetty.websocket.WebSocketParser$FrameHandler;

        r3 := @parameter2: org.eclipse.jetty.websocket.WebSocketGenerator;

        r0.<org.eclipse.jetty.websocket.AbstractExtension: org.eclipse.jetty.websocket.WebSocket$FrameConnection _connection> = r1;

        r0.<org.eclipse.jetty.websocket.AbstractExtension: org.eclipse.jetty.websocket.WebSocketParser$FrameHandler _inbound> = r2;

        r0.<org.eclipse.jetty.websocket.AbstractExtension: org.eclipse.jetty.websocket.WebSocketGenerator _outbound> = r3;

        return;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        org.eclipse.jetty.websocket.AbstractExtension r0;

        r0 := @this: org.eclipse.jetty.websocket.AbstractExtension;

        $r1 = r0.<org.eclipse.jetty.websocket.AbstractExtension: java.lang.String _name>;

        return $r1;
    }

    public java.lang.String getParameterizedName()
    {
        org.eclipse.jetty.websocket.AbstractExtension r1;
        java.util.Map $r3, $r12;
        java.lang.String $r2, $r6, r8, $r14, $r15;
        boolean $z0;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.lang.StringBuilder $r0, $r9, $r10, $r11;
        java.lang.Object $r7, $r13;

        r1 := @this: org.eclipse.jetty.websocket.AbstractExtension;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.eclipse.jetty.websocket.AbstractExtension: java.lang.String _name>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = r1.<org.eclipse.jetty.websocket.AbstractExtension: java.util.Map _parameters>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r7;

        $r9 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r12 = r1.<org.eclipse.jetty.websocket.AbstractExtension: java.util.Map _parameters>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

        $r14 = (java.lang.String) $r13;

        $r15 = staticinvoke <org.eclipse.jetty.util.QuotedStringTokenizer: java.lang.String quoteIfNeeded(java.lang.String,java.lang.String)>($r14, ";=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        goto label1;

     label2:
        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public void onFrame(byte, byte, org.eclipse.jetty.io.Buffer)
    {
        org.eclipse.jetty.websocket.WebSocketParser$FrameHandler $r2;
        byte b0, b1;
        org.eclipse.jetty.websocket.AbstractExtension r0;
        org.eclipse.jetty.io.Buffer r1;

        r0 := @this: org.eclipse.jetty.websocket.AbstractExtension;

        b0 := @parameter0: byte;

        b1 := @parameter1: byte;

        r1 := @parameter2: org.eclipse.jetty.io.Buffer;

        $r2 = r0.<org.eclipse.jetty.websocket.AbstractExtension: org.eclipse.jetty.websocket.WebSocketParser$FrameHandler _inbound>;

        interfaceinvoke $r2.<org.eclipse.jetty.websocket.WebSocketParser$FrameHandler: void onFrame(byte,byte,org.eclipse.jetty.io.Buffer)>(b0, b1, r1);

        return;
    }

    public void close(int, java.lang.String)
    {
        org.eclipse.jetty.websocket.WebSocketParser$FrameHandler $r2;
        org.eclipse.jetty.websocket.AbstractExtension r0;
        int i0;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.websocket.AbstractExtension;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.eclipse.jetty.websocket.AbstractExtension: org.eclipse.jetty.websocket.WebSocketParser$FrameHandler _inbound>;

        interfaceinvoke $r2.<org.eclipse.jetty.websocket.WebSocketParser$FrameHandler: void close(int,java.lang.String)>(i0, r1);

        return;
    }

    public int flush() throws java.io.IOException
    {
        int $i0;
        org.eclipse.jetty.websocket.WebSocketGenerator $r1;
        org.eclipse.jetty.websocket.AbstractExtension r0;

        r0 := @this: org.eclipse.jetty.websocket.AbstractExtension;

        $r1 = r0.<org.eclipse.jetty.websocket.AbstractExtension: org.eclipse.jetty.websocket.WebSocketGenerator _outbound>;

        $i0 = interfaceinvoke $r1.<org.eclipse.jetty.websocket.WebSocketGenerator: int flush()>();

        return $i0;
    }

    public boolean isBufferEmpty()
    {
        org.eclipse.jetty.websocket.WebSocketGenerator $r1;
        org.eclipse.jetty.websocket.AbstractExtension r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.websocket.AbstractExtension;

        $r1 = r0.<org.eclipse.jetty.websocket.AbstractExtension: org.eclipse.jetty.websocket.WebSocketGenerator _outbound>;

        $z0 = interfaceinvoke $r1.<org.eclipse.jetty.websocket.WebSocketGenerator: boolean isBufferEmpty()>();

        return $z0;
    }

    public void addFrame(byte, byte, byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        byte b0, b1;
        org.eclipse.jetty.websocket.WebSocketGenerator $r2;
        org.eclipse.jetty.websocket.AbstractExtension r0;
        int i2, i3;

        r0 := @this: org.eclipse.jetty.websocket.AbstractExtension;

        b0 := @parameter0: byte;

        b1 := @parameter1: byte;

        r1 := @parameter2: byte[];

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r2 = r0.<org.eclipse.jetty.websocket.AbstractExtension: org.eclipse.jetty.websocket.WebSocketGenerator _outbound>;

        interfaceinvoke $r2.<org.eclipse.jetty.websocket.WebSocketGenerator: void addFrame(byte,byte,byte[],int,int)>(b0, b1, r1, i2, i3);

        return;
    }

    public byte setFlag(byte, int)
    {
        java.lang.IllegalArgumentException $r8;
        byte b1, b4;
        int[] $r5;
        org.eclipse.jetty.websocket.AbstractExtension r6;
        int i0, $i2, $i3, $i5;
        java.lang.StringBuilder $r2, $r3, $r7;
        java.lang.String $r4;

        r6 := @this: org.eclipse.jetty.websocket.AbstractExtension;

        b1 := @parameter0: byte;

        i0 := @parameter1: int;

        if i0 < 1 goto label1;

        if i0 <= 3 goto label2;

     label1:
        $r8 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rsv");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r8;

     label2:
        $r5 = <org.eclipse.jetty.websocket.AbstractExtension: int[] __mask>;

        $i2 = $r5[i0];

        $i5 = (int) b1;

        $i3 = $i5 | $i2;

        b4 = (byte) $i3;

        return b4;
    }

    public byte clearFlag(byte, int)
    {
        java.lang.IllegalArgumentException $r8;
        byte b1, $b5;
        int[] $r5;
        org.eclipse.jetty.websocket.AbstractExtension r6;
        int i0, $i2, $i3, $i4, $i7, $i8;
        java.lang.StringBuilder $r2, $r3, $r7;
        java.lang.String $r4;

        r6 := @this: org.eclipse.jetty.websocket.AbstractExtension;

        b1 := @parameter0: byte;

        i0 := @parameter1: int;

        if i0 < 1 goto label1;

        if i0 <= 3 goto label2;

     label1:
        $r8 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rsv");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r8;

     label2:
        $r5 = <org.eclipse.jetty.websocket.AbstractExtension: int[] __mask>;

        $i2 = $r5[i0];

        $i7 = (int) -1;

        $i3 = $i2 ^ $i7;

        $i8 = (int) b1;

        $i4 = $i8 & $i3;

        $b5 = (byte) $i4;

        return $b5;
    }

    public boolean isFlag(byte, int)
    {
        java.lang.IllegalArgumentException $r8;
        byte b1;
        int[] $r5;
        org.eclipse.jetty.websocket.AbstractExtension r6;
        int i0, $i2, $i3, $i4;
        java.lang.StringBuilder $r2, $r3, $r7;
        java.lang.String $r4;
        boolean $z0;

        r6 := @this: org.eclipse.jetty.websocket.AbstractExtension;

        b1 := @parameter0: byte;

        i0 := @parameter1: int;

        if i0 < 1 goto label1;

        if i0 <= 3 goto label2;

     label1:
        $r8 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rsv");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r8;

     label2:
        $r5 = <org.eclipse.jetty.websocket.AbstractExtension: int[] __mask>;

        $i2 = $r5[i0];

        $i4 = (int) b1;

        $i3 = $i4 & $i2;

        if $i3 == 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        org.eclipse.jetty.websocket.AbstractExtension r0;

        r0 := @this: org.eclipse.jetty.websocket.AbstractExtension;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.websocket.AbstractExtension: java.lang.String getParameterizedName()>();

        return $r1;
    }

    static void <clinit>()
    {
        int $i1;
        int[] $r0;

        $r0 = newarray (int)[4];

        $i1 = (int) -1;

        $r0[0] = $i1;

        $r0[1] = 4;

        $r0[2] = 2;

        $r0[3] = 1;

        <org.eclipse.jetty.websocket.AbstractExtension: int[] __mask> = $r0;

        return;
    }
}
