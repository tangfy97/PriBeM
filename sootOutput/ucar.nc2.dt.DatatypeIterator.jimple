public abstract class ucar.nc2.dt.DatatypeIterator extends java.lang.Object implements ucar.nc2.dt.DataIterator
{
    private ucar.ma2.StructureDataIterator structIter;
    private int recnum;

    protected abstract java.lang.Object makeDatatypeWithData(int, ucar.ma2.StructureData) throws java.io.IOException;

    protected void <init>(ucar.nc2.Structure, int)
    {
        java.lang.IllegalStateException $r4;
        ucar.nc2.dt.DatatypeIterator r0;
        ucar.ma2.StructureDataIterator $r2;
        int i0;
        java.io.IOException $r3;
        java.lang.String $r5;
        ucar.nc2.Structure r1;

        r0 := @this: ucar.nc2.dt.DatatypeIterator;

        r1 := @parameter0: ucar.nc2.Structure;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.dt.DatatypeIterator: int recnum> = 0;

     label1:
        $r2 = virtualinvoke r1.<ucar.nc2.Structure: ucar.ma2.StructureDataIterator getStructureIterator(int)>(i0);

        r0.<ucar.nc2.dt.DatatypeIterator: ucar.ma2.StructureDataIterator structIter> = $r2;

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.IllegalStateException;

        $r5 = virtualinvoke $r3.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean hasNext()
    {
        java.lang.IllegalStateException $r3;
        ucar.nc2.dt.DatatypeIterator r0;
        ucar.ma2.StructureDataIterator $r1;
        java.io.IOException $r2;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: ucar.nc2.dt.DatatypeIterator;

     label1:
        $r1 = r0.<ucar.nc2.dt.DatatypeIterator: ucar.ma2.StructureDataIterator structIter>;

        $z0 = interfaceinvoke $r1.<ucar.ma2.StructureDataIterator: boolean hasNext()>();

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.IllegalStateException;

        $r4 = virtualinvoke $r2.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.Object nextData() throws java.io.IOException
    {
        ucar.ma2.StructureData $r2;
        ucar.nc2.dt.DatatypeIterator r0;
        ucar.ma2.StructureDataIterator $r1;
        int $i0, $i1;
        java.lang.Object $r3;

        r0 := @this: ucar.nc2.dt.DatatypeIterator;

        $r1 = r0.<ucar.nc2.dt.DatatypeIterator: ucar.ma2.StructureDataIterator structIter>;

        $r2 = interfaceinvoke $r1.<ucar.ma2.StructureDataIterator: ucar.ma2.StructureData next()>();

        $i0 = r0.<ucar.nc2.dt.DatatypeIterator: int recnum>;

        $i1 = $i0 + 1;

        r0.<ucar.nc2.dt.DatatypeIterator: int recnum> = $i1;

        $r3 = virtualinvoke r0.<ucar.nc2.dt.DatatypeIterator: java.lang.Object makeDatatypeWithData(int,ucar.ma2.StructureData)>($i0, $r2);

        return $r3;
    }

    public java.lang.Object next()
    {
        ucar.ma2.StructureDataIterator $r1;
        java.io.IOException $r4, $r7;
        java.lang.RuntimeException $r5, $r8;
        ucar.ma2.StructureData $r2;
        ucar.nc2.dt.DatatypeIterator r0;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.String $r6;

        r0 := @this: ucar.nc2.dt.DatatypeIterator;

     label1:
        $r1 = r0.<ucar.nc2.dt.DatatypeIterator: ucar.ma2.StructureDataIterator structIter>;

        $r2 = interfaceinvoke $r1.<ucar.ma2.StructureDataIterator: ucar.ma2.StructureData next()>();

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label4:
        $i0 = r0.<ucar.nc2.dt.DatatypeIterator: int recnum>;

        $i1 = $i0 + 1;

        r0.<ucar.nc2.dt.DatatypeIterator: int recnum> = $i1;

        $r3 = virtualinvoke r0.<ucar.nc2.dt.DatatypeIterator: java.lang.Object makeDatatypeWithData(int,ucar.ma2.StructureData)>($i0, $r2);

     label5:
        return $r3;

     label6:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        $r6 = virtualinvoke $r4.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label4 to label5 with label6;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        ucar.nc2.dt.DatatypeIterator r1;

        r1 := @this: ucar.nc2.dt.DatatypeIterator;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }
}
