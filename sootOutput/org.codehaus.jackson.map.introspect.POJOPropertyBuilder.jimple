public class org.codehaus.jackson.map.introspect.POJOPropertyBuilder extends org.codehaus.jackson.map.BeanPropertyDefinition implements java.lang.Comparable
{
    protected final java.lang.String _name;
    protected final java.lang.String _internalName;
    protected org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields;
    protected org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters;
    protected org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters;
    protected org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters;

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.codehaus.jackson.map.BeanPropertyDefinition: void <init>()>();

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: java.lang.String _internalName> = r1;

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: java.lang.String _name> = r1;

        return;
    }

    public void <init>(org.codehaus.jackson.map.introspect.POJOPropertyBuilder, java.lang.String)
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r4, $r5, $r6, $r7;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0, r1;
        java.lang.String $r2, r3;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        r1 := @parameter0: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        r3 := @parameter1: java.lang.String;

        specialinvoke r0.<org.codehaus.jackson.map.BeanPropertyDefinition: void <init>()>();

        $r2 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: java.lang.String _internalName>;

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: java.lang.String _internalName> = $r2;

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: java.lang.String _name> = r3;

        $r4 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields> = $r4;

        $r5 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters> = $r5;

        $r6 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters> = $r6;

        $r7 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters>;

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters> = $r7;

        return;
    }

    public org.codehaus.jackson.map.introspect.POJOPropertyBuilder withName(java.lang.String)
    {
        java.lang.String r2;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder $r0, r1;

        r1 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        specialinvoke $r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: void <init>(org.codehaus.jackson.map.introspect.POJOPropertyBuilder,java.lang.String)>(r1, r2);

        return $r0;
    }

    public int compareTo(org.codehaus.jackson.map.introspect.POJOPropertyBuilder)
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r1, $r3, $r6;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0, r2;
        int $i0, $i2;
        java.lang.String $r4, $r5;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        r2 := @parameter0: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

        if $r1 == null goto label1;

        $r6 = r2.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

        if $r6 != null goto label2;

        $i2 = (int) -1;

        return $i2;

     label1:
        $r3 = r2.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

        if $r3 == null goto label2;

        return 1;

     label2:
        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: java.lang.String getName()>();

        $r5 = virtualinvoke r2.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: java.lang.String getName()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int compareTo(java.lang.String)>($r5);

        return $i0;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: java.lang.String _name>;

        return $r1;
    }

    public java.lang.String getInternalName()
    {
        java.lang.String $r1;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: java.lang.String _internalName>;

        return $r1;
    }

    public boolean isExplicitlyIncluded()
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean anyExplicitNames()>();

        return $z0;
    }

    public boolean hasGetter()
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r1;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasSetter()
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r1;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasField()
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r1;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasConstructorParameter()
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r1;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.codehaus.jackson.map.introspect.AnnotatedMember getAccessor()
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r1;
        org.codehaus.jackson.map.introspect.AnnotatedMember r2;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.AnnotatedMethod getGetter()>();

        r2 = $r1;

        if $r1 != null goto label1;

        r2 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.AnnotatedField getField()>();

     label1:
        return r2;
    }

    public org.codehaus.jackson.map.introspect.AnnotatedMember getMutator()
    {
        org.codehaus.jackson.map.introspect.AnnotatedMember r3;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r2;
        org.codehaus.jackson.map.introspect.AnnotatedParameter $r1;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.AnnotatedParameter getConstructorParameter()>();

        r3 = $r1;

        if $r1 != null goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.AnnotatedMethod getSetter()>();

        r3 = $r2;

        if $r2 != null goto label1;

        r3 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.AnnotatedField getField()>();

     label1:
        return r3;
    }

    public boolean couldSerialize()
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r1, $r2;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        if $r1 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        if $r2 == null goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public org.codehaus.jackson.map.introspect.AnnotatedMethod getGetter()
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r1, $r2, $r4, r22;
        java.lang.String $r12, $r15, $r18, $r20;
        boolean $z0, $z1;
        org.codehaus.jackson.map.introspect.AnnotatedMethod r6, r21;
        java.lang.IllegalArgumentException $r9;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;
        java.lang.Object $r3, $r5;
        java.lang.Class $r7, $r8;
        java.lang.StringBuilder $r10, $r11, $r13, $r14, $r16, $r17, $r19;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        $r3 = $r2.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.Object value>;

        r21 = (org.codehaus.jackson.map.introspect.AnnotatedMethod) $r3;

        $r4 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        r22 = $r4.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

     label2:
        if r22 == null goto label6;

        $r5 = r22.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.Object value>;

        r6 = (org.codehaus.jackson.map.introspect.AnnotatedMethod) $r5;

        $r7 = virtualinvoke r21.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class getDeclaringClass()>();

        $r8 = virtualinvoke r6.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class getDeclaringClass()>();

        if $r7 == $r8 goto label4;

        $z0 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r8);

        if $z0 == 0 goto label3;

        r21 = r6;

        goto label5;

     label3:
        $z1 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r7);

        if $z1 == 0 goto label4;

        goto label5;

     label4:
        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting getter definitions for property \"");

        $r12 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: java.lang.String getName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ");

        $r15 = virtualinvoke r21.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.String getFullName()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        $r18 = virtualinvoke r6.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.String getFullName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r9;

     label5:
        r22 = r22.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

        goto label2;

     label6:
        return r21;
    }

    public org.codehaus.jackson.map.introspect.AnnotatedMethod getSetter()
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r1, $r2, $r4, r22;
        java.lang.String $r12, $r15, $r18, $r20;
        boolean $z0, $z1;
        org.codehaus.jackson.map.introspect.AnnotatedMethod r6, r21;
        java.lang.IllegalArgumentException $r9;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;
        java.lang.Object $r3, $r5;
        java.lang.Class $r7, $r8;
        java.lang.StringBuilder $r10, $r11, $r13, $r14, $r16, $r17, $r19;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters>;

        $r3 = $r2.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.Object value>;

        r21 = (org.codehaus.jackson.map.introspect.AnnotatedMethod) $r3;

        $r4 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters>;

        r22 = $r4.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

     label2:
        if r22 == null goto label6;

        $r5 = r22.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.Object value>;

        r6 = (org.codehaus.jackson.map.introspect.AnnotatedMethod) $r5;

        $r7 = virtualinvoke r21.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class getDeclaringClass()>();

        $r8 = virtualinvoke r6.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class getDeclaringClass()>();

        if $r7 == $r8 goto label4;

        $z0 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r8);

        if $z0 == 0 goto label3;

        r21 = r6;

        goto label5;

     label3:
        $z1 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r7);

        if $z1 == 0 goto label4;

        goto label5;

     label4:
        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting setter definitions for property \"");

        $r12 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: java.lang.String getName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ");

        $r15 = virtualinvoke r21.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.String getFullName()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        $r18 = virtualinvoke r6.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.String getFullName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r9;

     label5:
        r22 = r22.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

        goto label2;

     label6:
        return r21;
    }

    public org.codehaus.jackson.map.introspect.AnnotatedField getField()
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r1, $r2, $r4, r22;
        java.lang.String $r12, $r15, $r18, $r20;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r9;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;
        java.lang.Object $r3, $r5;
        org.codehaus.jackson.map.introspect.AnnotatedField r6, r21;
        java.lang.Class $r7, $r8;
        java.lang.StringBuilder $r10, $r11, $r13, $r14, $r16, $r17, $r19;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        $r3 = $r2.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.Object value>;

        r21 = (org.codehaus.jackson.map.introspect.AnnotatedField) $r3;

        $r4 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        r22 = $r4.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

     label2:
        if r22 == null goto label6;

        $r5 = r22.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.Object value>;

        r6 = (org.codehaus.jackson.map.introspect.AnnotatedField) $r5;

        $r7 = virtualinvoke r21.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.Class getDeclaringClass()>();

        $r8 = virtualinvoke r6.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.Class getDeclaringClass()>();

        if $r7 == $r8 goto label4;

        $z0 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r8);

        if $z0 == 0 goto label3;

        r21 = r6;

        goto label5;

     label3:
        $z1 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r7);

        if $z1 == 0 goto label4;

        goto label5;

     label4:
        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multiple fields representing property \"");

        $r12 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: java.lang.String getName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ");

        $r15 = virtualinvoke r21.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.String getFullName()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        $r18 = virtualinvoke r6.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.String getFullName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r9;

     label5:
        r22 = r22.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

        goto label2;

     label6:
        return r21;
    }

    public org.codehaus.jackson.map.introspect.AnnotatedParameter getConstructorParameter()
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r1, $r5, r10;
        org.codehaus.jackson.map.introspect.AnnotatedParameter $r3, $r7, $r9;
        org.codehaus.jackson.map.introspect.AnnotatedWithParams $r4;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;
        java.lang.Object $r2, $r6, $r8;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

        if $r1 != null goto label1;

        return null;

     label1:
        r10 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

     label2:
        $r2 = r10.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.Object value>;

        $r3 = (org.codehaus.jackson.map.introspect.AnnotatedParameter) $r2;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.introspect.AnnotatedParameter: org.codehaus.jackson.map.introspect.AnnotatedWithParams getOwner()>();

        $z0 = $r4 instanceof org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        if $z0 == 0 goto label3;

        $r8 = r10.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.Object value>;

        $r9 = (org.codehaus.jackson.map.introspect.AnnotatedParameter) $r8;

        return $r9;

     label3:
        r10 = r10.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

        if r10 != null goto label2;

        $r5 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

        $r6 = $r5.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.Object value>;

        $r7 = (org.codehaus.jackson.map.introspect.AnnotatedParameter) $r6;

        return $r7;
    }

    public void addField(org.codehaus.jackson.map.introspect.AnnotatedField, java.lang.String, boolean, boolean)
    {
        org.codehaus.jackson.map.introspect.AnnotatedField r2;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r1, $r4;
        java.lang.String r3;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;
        boolean z0, z1;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        r2 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedField;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r1 = new org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

        $r4 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        specialinvoke $r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: void <init>(java.lang.Object,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,java.lang.String,boolean,boolean)>(r2, $r4, r3, z0, z1);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields> = $r1;

        return;
    }

    public void addCtor(org.codehaus.jackson.map.introspect.AnnotatedParameter, java.lang.String, boolean, boolean)
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r1, $r4;
        java.lang.String r3;
        org.codehaus.jackson.map.introspect.AnnotatedParameter r2;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;
        boolean z0, z1;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        r2 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedParameter;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r1 = new org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

        $r4 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

        specialinvoke $r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: void <init>(java.lang.Object,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,java.lang.String,boolean,boolean)>(r2, $r4, r3, z0, z1);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters> = $r1;

        return;
    }

    public void addGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod, java.lang.String, boolean, boolean)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r2;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r1, $r4;
        java.lang.String r3;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;
        boolean z0, z1;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        r2 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r1 = new org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

        $r4 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        specialinvoke $r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: void <init>(java.lang.Object,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,java.lang.String,boolean,boolean)>(r2, $r4, r3, z0, z1);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters> = $r1;

        return;
    }

    public void addSetter(org.codehaus.jackson.map.introspect.AnnotatedMethod, java.lang.String, boolean, boolean)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r2;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r1, $r4;
        java.lang.String r3;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;
        boolean z0, z1;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        r2 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r1 = new org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

        $r4 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters>;

        specialinvoke $r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: void <init>(java.lang.Object,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,java.lang.String,boolean,boolean)>(r2, $r4, r3, z0, z1);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters> = $r1;

        return;
    }

    public void addAll(org.codehaus.jackson.map.introspect.POJOPropertyBuilder)
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0, r1;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        r1 := @parameter0: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $r3 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        $r2 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        $r4 = staticinvoke <org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node merge(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r3, $r2);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields> = $r4;

        $r6 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

        $r5 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

        $r7 = staticinvoke <org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node merge(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r6, $r5);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters> = $r7;

        $r9 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        $r8 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        $r10 = staticinvoke <org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node merge(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r9, $r8);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters> = $r10;

        $r12 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters>;

        $r11 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters>;

        $r13 = staticinvoke <org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node merge(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r12, $r11);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters> = $r13;

        return;
    }

    private static org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node merge(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node, org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node r0, r1, $r2;

        r0 := @parameter0: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

        r1 := @parameter1: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

        if r0 != null goto label1;

        return r1;

     label1:
        if r1 != null goto label2;

        return r0;

     label2:
        $r2 = staticinvoke <org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node access$000(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>(r0, r1);

        return $r2;
    }

    public void removeIgnored()
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        $r2 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _removeIgnored(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r1);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields> = $r2;

        $r3 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        $r4 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _removeIgnored(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r3);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters> = $r4;

        $r5 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters>;

        $r6 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _removeIgnored(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r5);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters> = $r6;

        $r7 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

        $r8 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _removeIgnored(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r7);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters> = $r8;

        return;
    }

    public void removeNonVisible()
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        $r2 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _removeNonVisible(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r1);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters> = $r2;

        $r3 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

        $r4 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _removeNonVisible(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r3);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters> = $r4;

        $r5 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        if $r5 != null goto label1;

        $r6 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        $r7 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _removeNonVisible(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r6);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields> = $r7;

        $r8 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters>;

        $r9 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _removeNonVisible(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r8);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters> = $r9;

     label1:
        return;
    }

    public void trimByVisibility()
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        $r2 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _trimByVisibility(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r1);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields> = $r2;

        $r3 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        $r4 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _trimByVisibility(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r3);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters> = $r4;

        $r5 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters>;

        $r6 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _trimByVisibility(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r5);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters> = $r6;

        $r7 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

        $r8 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _trimByVisibility(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r7);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters> = $r8;

        return;
    }

    public void mergeAnnotations(boolean)
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r1, $r2, $r3, $r5, $r6, $r8, $r11, $r13, $r15, $r16, $r17, $r19, $r22, $r24, $r26, $r27, $r28, $r29, $r31, $r34, $r36, $r37, $r38, $r40, $r41, $r42, $r44, $r47, $r49, $r51, $r52, $r53, $r54, $r56, $r59, $r61;
        org.codehaus.jackson.map.introspect.AnnotationMap $r7, $r18, $r30, $r43, $r55;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node[] $r4, $r14, $r25, $r39, $r50;
        boolean z0;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r21, $r23, $r58, $r60;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;
        org.codehaus.jackson.map.introspect.AnnotatedParameter $r33, $r35;
        java.lang.Object $r9, $r20, $r32, $r45, $r57;
        org.codehaus.jackson.map.introspect.AnnotatedField $r10, $r12, $r46, $r48;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        $r37 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        if $r37 == null goto label1;

        $r50 = newarray (org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)[4];

        $r51 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        $r50[0] = $r51;

        $r52 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        $r50[1] = $r52;

        $r53 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

        $r50[2] = $r53;

        $r54 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters>;

        $r50[3] = $r54;

        $r55 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.AnnotationMap _mergeAnnotations(int,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node[])>(0, $r50);

        $r59 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        $r56 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        $r57 = $r56.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.Object value>;

        $r58 = (org.codehaus.jackson.map.introspect.AnnotatedMethod) $r57;

        $r60 = virtualinvoke $r58.<org.codehaus.jackson.map.introspect.AnnotatedMethod: org.codehaus.jackson.map.introspect.AnnotatedMethod withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap)>($r55);

        $r61 = virtualinvoke $r59.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withValue(java.lang.Object)>($r60);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters> = $r61;

        goto label5;

     label1:
        $r38 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        if $r38 == null goto label5;

        $r39 = newarray (org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)[3];

        $r40 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        $r39[0] = $r40;

        $r41 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

        $r39[1] = $r41;

        $r42 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters>;

        $r39[2] = $r42;

        $r43 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.AnnotationMap _mergeAnnotations(int,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node[])>(0, $r39);

        $r47 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        $r44 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        $r45 = $r44.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.Object value>;

        $r46 = (org.codehaus.jackson.map.introspect.AnnotatedField) $r45;

        $r48 = virtualinvoke $r46.<org.codehaus.jackson.map.introspect.AnnotatedField: org.codehaus.jackson.map.introspect.AnnotatedField withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap)>($r43);

        $r49 = virtualinvoke $r47.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withValue(java.lang.Object)>($r48);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields> = $r49;

        goto label5;

     label2:
        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

        if $r1 == null goto label3;

        $r25 = newarray (org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)[4];

        $r26 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

        $r25[0] = $r26;

        $r27 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters>;

        $r25[1] = $r27;

        $r28 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        $r25[2] = $r28;

        $r29 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        $r25[3] = $r29;

        $r30 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.AnnotationMap _mergeAnnotations(int,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node[])>(0, $r25);

        $r34 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

        $r31 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

        $r32 = $r31.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.Object value>;

        $r33 = (org.codehaus.jackson.map.introspect.AnnotatedParameter) $r32;

        $r35 = virtualinvoke $r33.<org.codehaus.jackson.map.introspect.AnnotatedParameter: org.codehaus.jackson.map.introspect.AnnotatedParameter withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap)>($r30);

        $r36 = virtualinvoke $r34.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withValue(java.lang.Object)>($r35);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters> = $r36;

        goto label5;

     label3:
        $r2 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters>;

        if $r2 == null goto label4;

        $r14 = newarray (org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)[3];

        $r15 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters>;

        $r14[0] = $r15;

        $r16 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        $r14[1] = $r16;

        $r17 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        $r14[2] = $r17;

        $r18 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.AnnotationMap _mergeAnnotations(int,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node[])>(0, $r14);

        $r22 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters>;

        $r19 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters>;

        $r20 = $r19.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.Object value>;

        $r21 = (org.codehaus.jackson.map.introspect.AnnotatedMethod) $r20;

        $r23 = virtualinvoke $r21.<org.codehaus.jackson.map.introspect.AnnotatedMethod: org.codehaus.jackson.map.introspect.AnnotatedMethod withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap)>($r18);

        $r24 = virtualinvoke $r22.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withValue(java.lang.Object)>($r23);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters> = $r24;

        goto label5;

     label4:
        $r3 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        if $r3 == null goto label5;

        $r4 = newarray (org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)[2];

        $r5 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        $r4[0] = $r5;

        $r6 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        $r4[1] = $r6;

        $r7 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.AnnotationMap _mergeAnnotations(int,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node[])>(0, $r4);

        $r11 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        $r8 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        $r9 = $r8.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.Object value>;

        $r10 = (org.codehaus.jackson.map.introspect.AnnotatedField) $r9;

        $r12 = virtualinvoke $r10.<org.codehaus.jackson.map.introspect.AnnotatedField: org.codehaus.jackson.map.introspect.AnnotatedField withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap)>($r7);

        $r13 = virtualinvoke $r11.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withValue(java.lang.Object)>($r12);

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields> = $r13;

     label5:
        return;
    }

    private transient org.codehaus.jackson.map.introspect.AnnotationMap _mergeAnnotations(int, org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node[])
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r1, $r5;
        org.codehaus.jackson.map.introspect.AnnotationMap $r4, $r7, $r8;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r6;
        org.codehaus.jackson.map.introspect.AnnotatedMember $r3;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node[] r0;
        int $i0, i1, i2;
        java.lang.Object $r2;

        r6 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        i1 := @parameter0: int;

        r0 := @parameter1: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node[];

        $r1 = r0[i1];

        $r2 = $r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.Object value>;

        $r3 = (org.codehaus.jackson.map.introspect.AnnotatedMember) $r2;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.introspect.AnnotatedMember: org.codehaus.jackson.map.introspect.AnnotationMap getAllAnnotations()>();

        i2 = i1 + 1;

     label1:
        $i0 = lengthof r0;

        if i2 >= $i0 goto label3;

        $r5 = r0[i2];

        if $r5 == null goto label2;

        $r7 = specialinvoke r6.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.AnnotationMap _mergeAnnotations(int,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node[])>(i2, r0);

        $r8 = staticinvoke <org.codehaus.jackson.map.introspect.AnnotationMap: org.codehaus.jackson.map.introspect.AnnotationMap merge(org.codehaus.jackson.map.introspect.AnnotationMap,org.codehaus.jackson.map.introspect.AnnotationMap)>($r4, $r7);

        return $r8;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return $r4;
    }

    private org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _removeIgnored(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node r0, $r1;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r2;

        r2 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        r0 := @parameter0: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

        if r0 != null goto label1;

        return r0;

     label1:
        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withoutIgnored()>();

        return $r1;
    }

    private org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _removeNonVisible(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node r0, $r1;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r2;

        r2 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        r0 := @parameter0: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

        if r0 != null goto label1;

        return r0;

     label1:
        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withoutNonVisible()>();

        return $r1;
    }

    private org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _trimByVisibility(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node r0, $r1;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r2;

        r2 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        r0 := @parameter0: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

        if r0 != null goto label1;

        return r0;

     label1:
        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node trimByVisibility()>();

        return $r1;
    }

    public boolean anyExplicitNames()
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r1, $r2, $r3, $r4;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        $z0 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean _anyExplicitNames(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r1);

        if $z0 != 0 goto label1;

        $r2 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        $z1 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean _anyExplicitNames(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r2);

        if $z1 != 0 goto label1;

        $r3 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters>;

        $z2 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean _anyExplicitNames(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r3);

        if $z2 != 0 goto label1;

        $r4 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

        $z3 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean _anyExplicitNames(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r4);

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    private boolean _anyExplicitNames(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)
    {
        int $i0;
        java.lang.String $r0, $r1;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node r3;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r2;

        r2 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        r3 := @parameter0: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

     label1:
        if r3 == null goto label3;

        $r0 = r3.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.String explicitName>;

        if $r0 == null goto label2;

        $r1 = r3.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.String explicitName>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        return 1;

     label2:
        r3 = r3.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

        goto label1;

     label3:
        return 0;
    }

    public boolean anyVisible()
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r1, $r2, $r3, $r4;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        $z0 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean _anyVisible(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r1);

        if $z0 != 0 goto label1;

        $r2 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        $z1 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean _anyVisible(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r2);

        if $z1 != 0 goto label1;

        $r3 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters>;

        $z2 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean _anyVisible(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r3);

        if $z2 != 0 goto label1;

        $r4 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

        $z3 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean _anyVisible(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r4);

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    private boolean _anyVisible(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node r1;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        r1 := @parameter0: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

     label1:
        if r1 == null goto label3;

        $z0 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: boolean isVisible>;

        if $z0 == 0 goto label2;

        return 1;

     label2:
        r1 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

        goto label1;

     label3:
        return 0;
    }

    public boolean anyIgnorals()
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r1, $r2, $r3, $r4;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        $z0 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean _anyIgnorals(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r1);

        if $z0 != 0 goto label1;

        $r2 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        $z1 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean _anyIgnorals(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r2);

        if $z1 != 0 goto label1;

        $r3 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters>;

        $z2 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean _anyIgnorals(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r3);

        if $z2 != 0 goto label1;

        $r4 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

        $z3 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean _anyIgnorals(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r4);

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    public boolean anyDeserializeIgnorals()
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r1, $r2, $r3;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        $z0 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean _anyIgnorals(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r1);

        if $z0 != 0 goto label1;

        $r2 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters>;

        $z1 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean _anyIgnorals(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r2);

        if $z1 != 0 goto label1;

        $r3 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

        $z2 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean _anyIgnorals(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r3);

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public boolean anySerializeIgnorals()
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r1, $r2;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        $z0 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean _anyIgnorals(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r1);

        if $z0 != 0 goto label1;

        $r2 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        $z1 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: boolean _anyIgnorals(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r2);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private boolean _anyIgnorals(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node r1;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        r1 := @parameter0: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

     label1:
        if r1 == null goto label3;

        $z0 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: boolean isMarkedIgnored>;

        if $z0 == 0 goto label2;

        return 1;

     label2:
        r1 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

        goto label1;

     label3:
        return 0;
    }

    public java.lang.String findNewName()
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0;
        java.lang.String $r9;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        $r2 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node findRenamed(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r1, null);

        $r3 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        $r4 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node findRenamed(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r3, $r2);

        $r5 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters>;

        $r6 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node findRenamed(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r5, $r4);

        $r7 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

        $r8 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node findRenamed(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r7, $r6);

        if $r8 != null goto label1;

        $r9 = null;

        goto label2;

     label1:
        $r9 = $r8.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.String explicitName>;

     label2:
        return $r9;
    }

    private org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node findRenamed(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node, org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)
    {
        java.lang.IllegalStateException $r4;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node r20, r21;
        java.lang.String r0, $r2, $r3, $r7, $r13, $r19;
        boolean $z0, $z1;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r1;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r18;
        java.lang.Object $r10, $r16;

        r1 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        r20 := @parameter0: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

        r21 := @parameter1: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

     label1:
        if r20 == null goto label6;

        r0 = r20.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.String explicitName>;

        if r0 != null goto label2;

        goto label5;

     label2:
        $r2 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: java.lang.String _name>;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

        goto label5;

     label3:
        if r21 != null goto label4;

        r21 = r20;

        goto label5;

     label4:
        $r3 = r21.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.String explicitName>;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label5;

        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting property name definitions: \'");

        $r7 = r21.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.String explicitName>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' (for ");

        $r10 = r21.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.Object value>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") vs \'");

        $r13 = r20.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.String explicitName>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' (for ");

        $r16 = r20.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.Object value>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r19);

        throw $r4;

     label5:
        r20 = r20.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

        goto label1;

     label6:
        return r21;
    }

    public java.lang.String toString()
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node $r6, $r9, $r12, $r15;
        java.lang.String $r3, $r16;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14;

        r2 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[Property \'");

        $r3 = r2.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: java.lang.String _name>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'; ctors: ");

        $r6 = r2.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", field(s): ");

        $r9 = r2.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", getter(s): ");

        $r12 = r2.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", setter(s): ");

        $r15 = r2.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r16 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }

    public volatile int compareTo(java.lang.Object)
    {
        int $i0;
        java.lang.Object r1;
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder r0, $r2;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.codehaus.jackson.map.introspect.POJOPropertyBuilder) r1;

        $i0 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder: int compareTo(org.codehaus.jackson.map.introspect.POJOPropertyBuilder)>($r2);

        return $i0;
    }
}
