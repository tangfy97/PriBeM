class org.waveprotocol.box.server.rpc.ServerRpcProvider$1 extends com.google.inject.servlet.GuiceServletContextListener
{
    private final com.google.inject.Injector childInjector;
    final com.google.inject.Injector val$parentInjector;
    final com.google.inject.servlet.ServletModule val$servletModule;
    final org.waveprotocol.box.server.rpc.ServerRpcProvider this$0;

    void <init>(org.waveprotocol.box.server.rpc.ServerRpcProvider, com.google.inject.Injector, com.google.inject.servlet.ServletModule)
    {
        org.waveprotocol.box.server.rpc.ServerRpcProvider$1 r0;
        com.google.inject.Module[] $r4;
        com.google.inject.servlet.ServletModule r3, $r5;
        com.google.inject.Injector r2, $r6, $r7;
        org.waveprotocol.box.server.rpc.ServerRpcProvider r1;

        r0 := @this: org.waveprotocol.box.server.rpc.ServerRpcProvider$1;

        r1 := @parameter0: org.waveprotocol.box.server.rpc.ServerRpcProvider;

        r2 := @parameter1: com.google.inject.Injector;

        r3 := @parameter2: com.google.inject.servlet.ServletModule;

        r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$1: org.waveprotocol.box.server.rpc.ServerRpcProvider this$0> = r1;

        r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$1: com.google.inject.Injector val$parentInjector> = r2;

        r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$1: com.google.inject.servlet.ServletModule val$servletModule> = r3;

        specialinvoke r0.<com.google.inject.servlet.GuiceServletContextListener: void <init>()>();

        $r6 = r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$1: com.google.inject.Injector val$parentInjector>;

        $r4 = newarray (com.google.inject.Module)[1];

        $r5 = r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$1: com.google.inject.servlet.ServletModule val$servletModule>;

        $r4[0] = $r5;

        $r7 = interfaceinvoke $r6.<com.google.inject.Injector: com.google.inject.Injector createChildInjector(com.google.inject.Module[])>($r4);

        r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$1: com.google.inject.Injector childInjector> = $r7;

        return;
    }

    protected com.google.inject.Injector getInjector()
    {
        com.google.inject.Injector $r1;
        org.waveprotocol.box.server.rpc.ServerRpcProvider$1 r0;

        r0 := @this: org.waveprotocol.box.server.rpc.ServerRpcProvider$1;

        $r1 = r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$1: com.google.inject.Injector childInjector>;

        return $r1;
    }
}
