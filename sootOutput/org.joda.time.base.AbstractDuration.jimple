public abstract class org.joda.time.base.AbstractDuration extends java.lang.Object implements org.joda.time.ReadableDuration
{

    protected void <init>()
    {
        org.joda.time.base.AbstractDuration r0;

        r0 := @this: org.joda.time.base.AbstractDuration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.joda.time.Duration toDuration()
    {
        org.joda.time.Duration $r0;
        long $l0;
        org.joda.time.base.AbstractDuration r1;

        r1 := @this: org.joda.time.base.AbstractDuration;

        $r0 = new org.joda.time.Duration;

        $l0 = virtualinvoke r1.<org.joda.time.base.AbstractDuration: long getMillis()>();

        specialinvoke $r0.<org.joda.time.Duration: void <init>(long)>($l0);

        return $r0;
    }

    public org.joda.time.Period toPeriod()
    {
        org.joda.time.Period $r0;
        long $l0;
        org.joda.time.base.AbstractDuration r1;

        r1 := @this: org.joda.time.base.AbstractDuration;

        $r0 = new org.joda.time.Period;

        $l0 = virtualinvoke r1.<org.joda.time.base.AbstractDuration: long getMillis()>();

        specialinvoke $r0.<org.joda.time.Period: void <init>(long)>($l0);

        return $r0;
    }

    public int compareTo(java.lang.Object)
    {
        org.joda.time.ReadableDuration r2;
        org.joda.time.base.AbstractDuration r0;
        long $l0, $l1;
        byte $b2, $b3;
        int $i4, $i6, $i7;
        java.lang.Object r1;

        r0 := @this: org.joda.time.base.AbstractDuration;

        r1 := @parameter0: java.lang.Object;

        r2 = (org.joda.time.ReadableDuration) r1;

        $l0 = interfaceinvoke r0.<org.joda.time.ReadableDuration: long getMillis()>();

        $l1 = interfaceinvoke r2.<org.joda.time.ReadableDuration: long getMillis()>();

        $b2 = $l0 cmp $l1;

        $i4 = (int) $b2;

        if $i4 >= 0 goto label1;

        $i6 = (int) -1;

        return $i6;

     label1:
        $b3 = $l0 cmp $l1;

        $i7 = (int) $b3;

        if $i7 <= 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public boolean isEqual(org.joda.time.ReadableDuration)
    {
        org.joda.time.ReadableDuration r1;
        org.joda.time.base.AbstractDuration r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.joda.time.base.AbstractDuration;

        r1 := @parameter0: org.joda.time.ReadableDuration;

        if r1 != null goto label1;

        r1 = <org.joda.time.Duration: org.joda.time.Duration ZERO>;

     label1:
        $i0 = virtualinvoke r0.<org.joda.time.base.AbstractDuration: int compareTo(java.lang.Object)>(r1);

        if $i0 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean isLongerThan(org.joda.time.ReadableDuration)
    {
        org.joda.time.ReadableDuration r1;
        org.joda.time.base.AbstractDuration r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.joda.time.base.AbstractDuration;

        r1 := @parameter0: org.joda.time.ReadableDuration;

        if r1 != null goto label1;

        r1 = <org.joda.time.Duration: org.joda.time.Duration ZERO>;

     label1:
        $i0 = virtualinvoke r0.<org.joda.time.base.AbstractDuration: int compareTo(java.lang.Object)>(r1);

        if $i0 <= 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean isShorterThan(org.joda.time.ReadableDuration)
    {
        org.joda.time.ReadableDuration r1;
        org.joda.time.base.AbstractDuration r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.joda.time.base.AbstractDuration;

        r1 := @parameter0: org.joda.time.ReadableDuration;

        if r1 != null goto label1;

        r1 = <org.joda.time.Duration: org.joda.time.Duration ZERO>;

     label1:
        $i0 = virtualinvoke r0.<org.joda.time.base.AbstractDuration: int compareTo(java.lang.Object)>(r1);

        if $i0 >= 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        org.joda.time.ReadableDuration r2;
        org.joda.time.base.AbstractDuration r0;
        long $l0, $l1;
        byte $b2;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: org.joda.time.base.AbstractDuration;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.joda.time.ReadableDuration;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.joda.time.ReadableDuration) r1;

        $l0 = virtualinvoke r0.<org.joda.time.base.AbstractDuration: long getMillis()>();

        $l1 = interfaceinvoke r2.<org.joda.time.ReadableDuration: long getMillis()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public int hashCode()
    {
        org.joda.time.base.AbstractDuration r0;
        int $i3;
        long $l0, $l1, $l2;

        r0 := @this: org.joda.time.base.AbstractDuration;

        $l0 = virtualinvoke r0.<org.joda.time.base.AbstractDuration: long getMillis()>();

        $l1 = $l0 >>> 32;

        $l2 = $l0 ^ $l1;

        $i3 = (int) $l2;

        return $i3;
    }

    public java.lang.String toString()
    {
        org.joda.time.base.AbstractDuration r0;
        long $l0, $l1, $l2, $l3;
        byte $b4;
        java.lang.StringBuffer $r3;
        int $i5;
        java.lang.String $r2;

        r0 := @this: org.joda.time.base.AbstractDuration;

        $l0 = virtualinvoke r0.<org.joda.time.base.AbstractDuration: long getMillis()>();

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("PT");

        $l1 = $l0 / 1000L;

        staticinvoke <org.joda.time.format.FormatUtils: void appendUnpaddedInteger(java.lang.StringBuffer,long)>($r3, $l1);

        $l2 = $l0 % 1000L;

        $l3 = staticinvoke <java.lang.Math: long abs(long)>($l2);

        $b4 = $l3 cmp 0L;

        $i5 = (int) $b4;

        if $i5 <= 0 goto label1;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        staticinvoke <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.StringBuffer,long,int)>($r3, $l3, 3);

     label1:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(83);

        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }
}
