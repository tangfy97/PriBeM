public class org.jdom.input.DOMBuilder extends java.lang.Object
{
    private static final java.lang.String CVS_ID;
    private java.lang.String adapterClass;
    private org.jdom.JDOMFactory factory;

    public void <init>()
    {
        org.jdom.DefaultJDOMFactory $r1;
        org.jdom.input.DOMBuilder r0;

        r0 := @this: org.jdom.input.DOMBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.jdom.DefaultJDOMFactory;

        specialinvoke $r1.<org.jdom.DefaultJDOMFactory: void <init>()>();

        r0.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory> = $r1;

        return;
    }

    public void <init>(java.lang.String)
    {
        org.jdom.DefaultJDOMFactory $r1;
        java.lang.String r2;
        org.jdom.input.DOMBuilder r0;

        r0 := @this: org.jdom.input.DOMBuilder;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.jdom.DefaultJDOMFactory;

        specialinvoke $r1.<org.jdom.DefaultJDOMFactory: void <init>()>();

        r0.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory> = $r1;

        r0.<org.jdom.input.DOMBuilder: java.lang.String adapterClass> = r2;

        return;
    }

    public org.jdom.Document build(org.w3c.dom.Document)
    {
        org.jdom.Document $r2;
        org.w3c.dom.Document r3;
        org.jdom.input.DOMBuilder r0;
        org.jdom.JDOMFactory $r1;

        r0 := @this: org.jdom.input.DOMBuilder;

        r3 := @parameter0: org.w3c.dom.Document;

        $r1 = r0.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory>;

        $r2 = interfaceinvoke $r1.<org.jdom.JDOMFactory: org.jdom.Document document(org.jdom.Element)>(null);

        specialinvoke r0.<org.jdom.input.DOMBuilder: void buildTree(org.w3c.dom.Node,org.jdom.Document,org.jdom.Element,boolean)>(r3, $r2, null, 1);

        return $r2;
    }

    public org.jdom.Element build(org.w3c.dom.Element)
    {
        org.jdom.Document $r2;
        org.w3c.dom.Element r3;
        org.jdom.input.DOMBuilder r0;
        org.jdom.Element $r4;
        org.jdom.JDOMFactory $r1;

        r0 := @this: org.jdom.input.DOMBuilder;

        r3 := @parameter0: org.w3c.dom.Element;

        $r1 = r0.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory>;

        $r2 = interfaceinvoke $r1.<org.jdom.JDOMFactory: org.jdom.Document document(org.jdom.Element)>(null);

        specialinvoke r0.<org.jdom.input.DOMBuilder: void buildTree(org.w3c.dom.Node,org.jdom.Document,org.jdom.Element,boolean)>(r3, $r2, null, 1);

        $r4 = virtualinvoke $r2.<org.jdom.Document: org.jdom.Element getRootElement()>();

        return $r4;
    }

    private void buildTree(org.w3c.dom.Node, org.jdom.Document, org.jdom.Element, boolean)
    {
        org.jdom.Document r8;
        org.jdom.Namespace $r52, $r65, r66, r72;
        org.jdom.JDOMFactory $r5, $r9, $r13, $r14, $r17, $r18, $r21, $r22, $r26, $r27, $r31, $r34, $r36, $r37, $r40, $r41, $r45, $r47, $r53, $r58, $r60;
        org.jdom.Attribute $r59;
        org.jdom.Comment $r16, $r20;
        short $s0;
        java.lang.String $r1, $r2, $r3, $r6, $r15, $r19, $r23, $r24, $r28, $r29, $r32, $r35, $r39, $r43, $r44, $r50, $r51, $r55, $r56, $r57, r63, r64, r68, r70, r71;
        org.jdom.input.DOMBuilder r4;
        org.jdom.Element r12, $r46;
        boolean z0, $z1, $z2, $z3, $z4;
        org.jdom.Text $r42;
        org.w3c.dom.Attr r67, r69;
        org.jdom.CDATA $r38;
        org.w3c.dom.Node r0, $r11, $r49, $r54, $r62;
        org.jdom.DocType $r7;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, $i14;
        org.w3c.dom.NamedNodeMap $r48;
        org.jdom.ProcessingInstruction $r25, $r30;
        org.w3c.dom.NodeList $r10, $r61;
        org.jdom.EntityRef $r33;
        org.w3c.dom.DocumentType r73;

        r4 := @this: org.jdom.input.DOMBuilder;

        r0 := @parameter0: org.w3c.dom.Node;

        r8 := @parameter1: org.jdom.Document;

        r12 := @parameter2: org.jdom.Element;

        z0 := @parameter3: boolean;

        $s0 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        $i14 = (int) $s0;

        tableswitch($i14)
        {
            case 1: goto label04;
            case 2: goto label34;
            case 3: goto label26;
            case 4: goto label27;
            case 5: goto label32;
            case 6: goto label34;
            case 7: goto label28;
            case 8: goto label30;
            case 9: goto label01;
            case 10: goto label33;
            default: goto label34;
        };

     label01:
        $r10 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        i10 = 0;

        $i1 = interfaceinvoke $r10.<org.w3c.dom.NodeList: int getLength()>();

        goto label03;

     label02:
        $r11 = interfaceinvoke $r10.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i10);

        specialinvoke r4.<org.jdom.input.DOMBuilder: void buildTree(org.w3c.dom.Node,org.jdom.Document,org.jdom.Element,boolean)>($r11, r8, r12, 1);

        i10 = i10 + 1;

     label03:
        if i10 < $i1 goto label02;

        goto label34;

     label04:
        $r43 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        r63 = "";

        r64 = $r43;

        $i2 = virtualinvoke $r43.<java.lang.String: int indexOf(int)>(58);

        if $i2 < 0 goto label05;

        r63 = virtualinvoke $r43.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $i9 = $i2 + 1;

        r64 = virtualinvoke $r43.<java.lang.String: java.lang.String substring(int)>($i9);

     label05:
        $r44 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        if $r44 != null goto label08;

        if r12 != null goto label06;

        $r65 = <org.jdom.Namespace: org.jdom.Namespace NO_NAMESPACE>;

        goto label07;

     label06:
        $r65 = virtualinvoke r12.<org.jdom.Element: org.jdom.Namespace getNamespace(java.lang.String)>(r63);

     label07:
        r66 = $r65;

        goto label09;

     label08:
        r66 = staticinvoke <org.jdom.Namespace: org.jdom.Namespace getNamespace(java.lang.String,java.lang.String)>(r63, $r44);

     label09:
        $r45 = r4.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory>;

        $r46 = interfaceinvoke $r45.<org.jdom.JDOMFactory: org.jdom.Element element(java.lang.String,org.jdom.Namespace)>(r64, r66);

        if z0 == 0 goto label10;

        virtualinvoke r8.<org.jdom.Document: org.jdom.Document setRootElement(org.jdom.Element)>($r46);

        goto label11;

     label10:
        $r47 = r4.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory>;

        interfaceinvoke $r47.<org.jdom.JDOMFactory: void addContent(org.jdom.Parent,org.jdom.Content)>(r12, $r46);

     label11:
        $r48 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        $i3 = interfaceinvoke $r48.<org.w3c.dom.NamedNodeMap: int getLength()>();

        i11 = 0;

        goto label16;

     label12:
        $r49 = interfaceinvoke $r48.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i11);

        r67 = (org.w3c.dom.Attr) $r49;

        $r50 = interfaceinvoke r67.<org.w3c.dom.Attr: java.lang.String getName()>();

        $z1 = virtualinvoke $r50.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns");

        if $z1 == 0 goto label15;

        r68 = "";

        $i4 = virtualinvoke $r50.<java.lang.String: int indexOf(int)>(58);

        if $i4 < 0 goto label13;

        $i5 = $i4 + 1;

        r68 = virtualinvoke $r50.<java.lang.String: java.lang.String substring(int)>($i5);

     label13:
        $r51 = interfaceinvoke r67.<org.w3c.dom.Attr: java.lang.String getValue()>();

        $r52 = staticinvoke <org.jdom.Namespace: org.jdom.Namespace getNamespace(java.lang.String,java.lang.String)>(r68, $r51);

        $z2 = virtualinvoke r63.<java.lang.String: boolean equals(java.lang.Object)>(r68);

        if $z2 == 0 goto label14;

        virtualinvoke $r46.<org.jdom.Element: org.jdom.Element setNamespace(org.jdom.Namespace)>($r52);

        goto label15;

     label14:
        $r53 = r4.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory>;

        interfaceinvoke $r53.<org.jdom.JDOMFactory: void addNamespaceDeclaration(org.jdom.Element,org.jdom.Namespace)>($r46, $r52);

     label15:
        i11 = i11 + 1;

     label16:
        if i11 < $i3 goto label12;

        i12 = 0;

        goto label22;

     label17:
        $r54 = interfaceinvoke $r48.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i12);

        r69 = (org.w3c.dom.Attr) $r54;

        $r55 = interfaceinvoke r69.<org.w3c.dom.Attr: java.lang.String getName()>();

        $z3 = virtualinvoke $r55.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns");

        if $z3 != 0 goto label21;

        r70 = "";

        r71 = $r55;

        $i6 = virtualinvoke $r55.<java.lang.String: int indexOf(int)>(58);

        if $i6 < 0 goto label18;

        r70 = virtualinvoke $r55.<java.lang.String: java.lang.String substring(int,int)>(0, $i6);

        $i7 = $i6 + 1;

        r71 = virtualinvoke $r55.<java.lang.String: java.lang.String substring(int)>($i7);

     label18:
        $r56 = interfaceinvoke r69.<org.w3c.dom.Attr: java.lang.String getValue()>();

        $r57 = "";

        $z4 = virtualinvoke $r57.<java.lang.String: boolean equals(java.lang.Object)>(r70);

        if $z4 == 0 goto label19;

        r72 = <org.jdom.Namespace: org.jdom.Namespace NO_NAMESPACE>;

        goto label20;

     label19:
        r72 = virtualinvoke $r46.<org.jdom.Element: org.jdom.Namespace getNamespace(java.lang.String)>(r70);

     label20:
        $r58 = r4.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory>;

        $r59 = interfaceinvoke $r58.<org.jdom.JDOMFactory: org.jdom.Attribute attribute(java.lang.String,java.lang.String,org.jdom.Namespace)>(r71, $r56, r72);

        $r60 = r4.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory>;

        interfaceinvoke $r60.<org.jdom.JDOMFactory: void setAttribute(org.jdom.Element,org.jdom.Attribute)>($r46, $r59);

     label21:
        i12 = i12 + 1;

     label22:
        if i12 < $i3 goto label17;

        $r61 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        if $r61 == null goto label34;

        $i8 = interfaceinvoke $r61.<org.w3c.dom.NodeList: int getLength()>();

        i13 = 0;

        goto label25;

     label23:
        $r62 = interfaceinvoke $r61.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i13);

        if $r62 == null goto label24;

        specialinvoke r4.<org.jdom.input.DOMBuilder: void buildTree(org.w3c.dom.Node,org.jdom.Document,org.jdom.Element,boolean)>($r62, r8, $r46, 0);

     label24:
        i13 = i13 + 1;

     label25:
        if i13 < $i8 goto label23;

        goto label34;

     label26:
        $r39 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r41 = r4.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory>;

        $r40 = r4.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory>;

        $r42 = interfaceinvoke $r40.<org.jdom.JDOMFactory: org.jdom.Text text(java.lang.String)>($r39);

        interfaceinvoke $r41.<org.jdom.JDOMFactory: void addContent(org.jdom.Parent,org.jdom.Content)>(r12, $r42);

        goto label34;

     label27:
        $r35 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r37 = r4.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory>;

        $r36 = r4.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory>;

        $r38 = interfaceinvoke $r36.<org.jdom.JDOMFactory: org.jdom.CDATA cdata(java.lang.String)>($r35);

        interfaceinvoke $r37.<org.jdom.JDOMFactory: void addContent(org.jdom.Parent,org.jdom.Content)>(r12, $r38);

        goto label34;

     label28:
        if z0 == 0 goto label29;

        $r26 = r4.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory>;

        $r27 = r4.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory>;

        $r28 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r29 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r30 = interfaceinvoke $r27.<org.jdom.JDOMFactory: org.jdom.ProcessingInstruction processingInstruction(java.lang.String,java.lang.String)>($r28, $r29);

        interfaceinvoke $r26.<org.jdom.JDOMFactory: void addContent(org.jdom.Parent,org.jdom.Content)>(r8, $r30);

        goto label34;

     label29:
        $r21 = r4.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory>;

        $r22 = r4.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory>;

        $r23 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r24 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r25 = interfaceinvoke $r22.<org.jdom.JDOMFactory: org.jdom.ProcessingInstruction processingInstruction(java.lang.String,java.lang.String)>($r23, $r24);

        interfaceinvoke $r21.<org.jdom.JDOMFactory: void addContent(org.jdom.Parent,org.jdom.Content)>(r12, $r25);

        goto label34;

     label30:
        if z0 == 0 goto label31;

        $r17 = r4.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory>;

        $r18 = r4.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory>;

        $r19 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r20 = interfaceinvoke $r18.<org.jdom.JDOMFactory: org.jdom.Comment comment(java.lang.String)>($r19);

        interfaceinvoke $r17.<org.jdom.JDOMFactory: void addContent(org.jdom.Parent,org.jdom.Content)>(r8, $r20);

        goto label34;

     label31:
        $r13 = r4.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory>;

        $r14 = r4.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory>;

        $r15 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r16 = interfaceinvoke $r14.<org.jdom.JDOMFactory: org.jdom.Comment comment(java.lang.String)>($r15);

        interfaceinvoke $r13.<org.jdom.JDOMFactory: void addContent(org.jdom.Parent,org.jdom.Content)>(r12, $r16);

        goto label34;

     label32:
        $r31 = r4.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory>;

        $r32 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r33 = interfaceinvoke $r31.<org.jdom.JDOMFactory: org.jdom.EntityRef entityRef(java.lang.String)>($r32);

        $r34 = r4.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory>;

        interfaceinvoke $r34.<org.jdom.JDOMFactory: void addContent(org.jdom.Parent,org.jdom.Content)>(r12, $r33);

        goto label34;

     label33:
        r73 = (org.w3c.dom.DocumentType) r0;

        $r1 = interfaceinvoke r73.<org.w3c.dom.DocumentType: java.lang.String getPublicId()>();

        $r2 = interfaceinvoke r73.<org.w3c.dom.DocumentType: java.lang.String getSystemId()>();

        $r3 = interfaceinvoke r73.<org.w3c.dom.DocumentType: java.lang.String getInternalSubset()>();

        $r5 = r4.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory>;

        $r6 = interfaceinvoke r73.<org.w3c.dom.DocumentType: java.lang.String getName()>();

        $r7 = interfaceinvoke $r5.<org.jdom.JDOMFactory: org.jdom.DocType docType(java.lang.String)>($r6);

        virtualinvoke $r7.<org.jdom.DocType: org.jdom.DocType setPublicID(java.lang.String)>($r1);

        virtualinvoke $r7.<org.jdom.DocType: org.jdom.DocType setSystemID(java.lang.String)>($r2);

        virtualinvoke $r7.<org.jdom.DocType: void setInternalSubset(java.lang.String)>($r3);

        $r9 = r4.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory>;

        interfaceinvoke $r9.<org.jdom.JDOMFactory: void addContent(org.jdom.Parent,org.jdom.Content)>(r8, $r7);

        goto label34;

     label34:
        return;
    }

    public org.jdom.JDOMFactory getFactory()
    {
        org.jdom.input.DOMBuilder r0;
        org.jdom.JDOMFactory $r1;

        r0 := @this: org.jdom.input.DOMBuilder;

        $r1 = r0.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory>;

        return $r1;
    }

    public void setFactory(org.jdom.JDOMFactory)
    {
        org.jdom.input.DOMBuilder r0;
        org.jdom.JDOMFactory r1;

        r0 := @this: org.jdom.input.DOMBuilder;

        r1 := @parameter0: org.jdom.JDOMFactory;

        r0.<org.jdom.input.DOMBuilder: org.jdom.JDOMFactory factory> = r1;

        return;
    }

    public static void <clinit>()
    {
        <org.jdom.input.DOMBuilder: java.lang.String CVS_ID> = "@(#) $RCSfile: DOMBuilder.java,v $ $Revision: 1.59 $ $Date: 2004/09/03 06:03:41 $ $Name: jdom_1_0 $";

        return;
    }
}
