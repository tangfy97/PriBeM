public abstract class org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor extends org.apache.cxf.phase.AbstractPhaseInterceptor
{
    public static final java.lang.String DISABLE_OUTPUTSTREAM_OPTIMIZATION;
    public static final java.lang.String OUT_BUFFERING;

    public void <init>(java.lang.String)
    {
        org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.cxf.phase.AbstractPhaseInterceptor: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.cxf.phase.AbstractPhaseInterceptor: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    protected boolean isRequestor(org.apache.cxf.message.Message)
    {
        org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor r3;
        org.apache.cxf.message.Message r0;
        java.lang.Boolean $r1, $r2;
        boolean $z0, $z1;

        r3 := @this: org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $z0 = interfaceinvoke r0.<org.apache.cxf.message.Message: boolean containsKey(java.lang.Object)>("org.apache.cxf.client");

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke $r1.<java.lang.Boolean: boolean equals(java.lang.Object)>($r2);

        return $z1;
    }

    protected void writeParts(org.apache.cxf.message.Message, org.apache.cxf.message.Exchange, org.apache.cxf.service.model.BindingOperationInfo, org.apache.cxf.message.MessageContentsList, java.util.List)
    {
        org.apache.cxf.message.MessageContentsList r17;
        org.apache.cxf.service.Service $r5;
        javax.xml.stream.events.XMLEvent r41;
        javax.xml.stream.XMLStreamException $r29, $r31, $r33;
        javax.xml.stream.XMLStreamWriter r3, r35;
        javax.xml.namespace.NamespaceContext $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, z12, $z13, $z14, $z15, $z16;
        org.apache.cxf.service.model.OperationInfo $r8;
        java.util.List r12, $r13;
        org.apache.cxf.service.model.BindingOperationInfo r7;
        org.apache.cxf.interceptor.Fault $r30, $r32;
        java.lang.Boolean $r25, $r26;
        java.lang.String $r27, $r28;
        org.apache.cxf.service.model.MessagePartInfo r37, r40;
        java.io.OutputStream r34;
        org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor r6;
        java.util.Iterator $r14, $r22, $r39;
        org.apache.cxf.message.Message r0;
        org.apache.cxf.staxutils.CachingXmlEventWriter $r10, r36;
        org.apache.cxf.service.model.BindingInfo $r19;
        org.apache.cxf.message.Exchange r4;
        org.apache.cxf.databinding.DataWriter $r21, $r38;
        java.lang.Object $r1, $r2, $r9, $r15, $r16, $r18, $r20, $r23, $r24;

        r6 := @this: org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r4 := @parameter1: org.apache.cxf.message.Exchange;

        r7 := @parameter2: org.apache.cxf.service.model.BindingOperationInfo;

        r17 := @parameter3: org.apache.cxf.message.MessageContentsList;

        r12 := @parameter4: java.util.List;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/io/OutputStream;");

        r34 = (java.io.OutputStream) $r1;

        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamWriter;");

        r3 = (javax.xml.stream.XMLStreamWriter) $r2;

        $r5 = interfaceinvoke r4.<org.apache.cxf.message.Exchange: org.apache.cxf.service.Service getService()>();

        r35 = r3;

        r36 = null;

        $r8 = virtualinvoke r7.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo getOperationInfo()>();

        specialinvoke r6.<org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor: void setOperationSchemaValidation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.message.Message)>($r8, r0);

        $r9 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("org.apache.cxf.output.buffering");

        z11 = 1;

        z12 = 0;

        if $r9 == null goto label06;

        $r25 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $z7 = virtualinvoke $r25.<java.lang.Boolean: boolean equals(java.lang.Object)>($r9);

        if $z7 != 0 goto label01;

        $r28 = "true";

        $z10 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z10 == 0 goto label02;

     label01:
        $z13 = 1;

        goto label03;

     label02:
        $z13 = 0;

     label03:
        z12 = $z13;

        $r26 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $z8 = virtualinvoke $r26.<java.lang.Boolean: boolean equals(java.lang.Object)>($r9);

        if $z8 != 0 goto label04;

        $r27 = "false";

        $z9 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z9 != 0 goto label04;

        $z14 = 1;

        goto label05;

     label04:
        $z14 = 0;

     label05:
        z11 = $z14;

     label06:
        if z12 != 0 goto label07;

        if z11 == 0 goto label12;

        $z5 = virtualinvoke r6.<org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor: boolean shouldValidate(org.apache.cxf.message.Message)>(r0);

        if $z5 == 0 goto label12;

        $z6 = virtualinvoke r6.<org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor: boolean isRequestor(org.apache.cxf.message.Message)>(r0);

        if $z6 != 0 goto label12;

     label07:
        $r10 = new org.apache.cxf.staxutils.CachingXmlEventWriter;

        specialinvoke $r10.<org.apache.cxf.staxutils.CachingXmlEventWriter: void <init>()>();

        r36 = $r10;

     label08:
        $r11 = interfaceinvoke r3.<javax.xml.stream.XMLStreamWriter: javax.xml.namespace.NamespaceContext getNamespaceContext()>();

        virtualinvoke $r10.<org.apache.cxf.staxutils.CachingXmlEventWriter: void setNamespaceContext(javax.xml.namespace.NamespaceContext)>($r11);

     label09:
        goto label11;

     label10:
        $r33 := @caughtexception;

     label11:
        r35 = $r10;

        r34 = null;

     label12:
        if r34 == null goto label20;

        $r19 = virtualinvoke r7.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingInfo getBinding()>();

        $z2 = virtualinvoke r6.<org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor: boolean writeToOutputStream(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.Service)>(r0, $r19, $r5);

        if $z2 == 0 goto label20;

        $r20 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("disable.outputstream.optimization");

        $z3 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isTrue(java.lang.Object)>($r20);

        if $z3 != 0 goto label20;

        if r35 == null goto label16;

     label13:
        interfaceinvoke r35.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>("");

        interfaceinvoke r35.<javax.xml.stream.XMLStreamWriter: void flush()>();

     label14:
        goto label16;

     label15:
        $r31 := @caughtexception;

        $r32 = new org.apache.cxf.interceptor.Fault;

        specialinvoke $r32.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.Throwable)>($r31);

        throw $r32;

     label16:
        $r21 = virtualinvoke r6.<org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor: org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)>(r0, $r5, class "Ljava/io/OutputStream;");

        $r22 = interfaceinvoke r12.<java.util.List: java.util.Iterator iterator()>();

     label17:
        $z15 = interfaceinvoke $r22.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label19;

        $r23 = interfaceinvoke $r22.<java.util.Iterator: java.lang.Object next()>();

        r37 = (org.apache.cxf.service.model.MessagePartInfo) $r23;

        $z4 = virtualinvoke r17.<org.apache.cxf.message.MessageContentsList: boolean hasValue(org.apache.cxf.service.model.MessagePartInfo)>(r37);

        if $z4 == 0 goto label18;

        $r24 = virtualinvoke r17.<org.apache.cxf.message.MessageContentsList: java.lang.Object get(org.apache.cxf.service.model.MessagePartInfo)>(r37);

        interfaceinvoke $r21.<org.apache.cxf.databinding.DataWriter: void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)>($r24, r37, r34);

     label18:
        goto label17;

     label19:
        goto label23;

     label20:
        $r38 = virtualinvoke r6.<org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor: org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)>(r0, $r5, class "Ljavax/xml/stream/XMLStreamWriter;");

        $r39 = interfaceinvoke r12.<java.util.List: java.util.Iterator iterator()>();

     label21:
        $z16 = interfaceinvoke $r39.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label23;

        $r16 = interfaceinvoke $r39.<java.util.Iterator: java.lang.Object next()>();

        r40 = (org.apache.cxf.service.model.MessagePartInfo) $r16;

        $z1 = virtualinvoke r17.<org.apache.cxf.message.MessageContentsList: boolean hasValue(org.apache.cxf.service.model.MessagePartInfo)>(r40);

        if $z1 == 0 goto label22;

        $r18 = virtualinvoke r17.<org.apache.cxf.message.MessageContentsList: java.lang.Object get(org.apache.cxf.service.model.MessagePartInfo)>(r40);

        interfaceinvoke $r38.<org.apache.cxf.databinding.DataWriter: void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)>($r18, r40, r35);

     label22:
        goto label21;

     label23:
        if r36 == null goto label28;

     label24:
        $r13 = virtualinvoke r36.<org.apache.cxf.staxutils.CachingXmlEventWriter: java.util.List getEvents()>();

        $r14 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label25:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label26;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r41 = (javax.xml.stream.events.XMLEvent) $r15;

        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)>(r41, r3);

        goto label25;

     label26:
        goto label28;

     label27:
        $r29 := @caughtexception;

        $r30 = new org.apache.cxf.interceptor.Fault;

        specialinvoke $r30.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.Throwable)>($r29);

        throw $r30;

     label28:
        return;

        catch javax.xml.stream.XMLStreamException from label08 to label09 with label10;
        catch javax.xml.stream.XMLStreamException from label13 to label14 with label15;
        catch javax.xml.stream.XMLStreamException from label24 to label26 with label27;
    }

    private void setOperationSchemaValidation(org.apache.cxf.service.model.OperationInfo, org.apache.cxf.message.Message)
    {
        org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor r4;
        org.apache.cxf.annotations.SchemaValidation$SchemaValidationType r2;
        org.apache.cxf.message.Message r3;
        org.apache.cxf.service.model.OperationInfo r0;
        java.lang.Object $r1;

        r4 := @this: org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor;

        r0 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        r3 := @parameter1: org.apache.cxf.message.Message;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.model.OperationInfo: java.lang.Object getProperty(java.lang.String)>("schema-validation-enabled");

        r2 = (org.apache.cxf.annotations.SchemaValidation$SchemaValidationType) $r1;

        if r2 == null goto label1;

        interfaceinvoke r3.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("schema-validation-enabled", r2);

     label1:
        return;
    }

    protected boolean shouldValidate(org.apache.cxf.message.Message)
    {
        org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor r2;
        org.apache.cxf.annotations.SchemaValidation$SchemaValidationType $r1;
        org.apache.cxf.message.Message r0;
        boolean $z0;

        r2 := @this: org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = <org.apache.cxf.annotations.SchemaValidation$SchemaValidationType: org.apache.cxf.annotations.SchemaValidation$SchemaValidationType OUT>;

        $z0 = staticinvoke <org.apache.cxf.helpers.ServiceUtils: boolean isSchemaValidationEnabled(org.apache.cxf.annotations.SchemaValidation$SchemaValidationType,org.apache.cxf.message.Message)>($r1, r0);

        return $z0;
    }

    protected boolean writeToOutputStream(org.apache.cxf.message.Message, org.apache.cxf.service.model.BindingInfo, org.apache.cxf.service.Service)
    {
        org.apache.cxf.service.Service r0;
        java.lang.String $r2, r4, $r7, $r10, $r11;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor r12;
        org.apache.cxf.message.Message r1;
        org.apache.cxf.databinding.DataBinding $r8;
        org.apache.cxf.service.model.BindingInfo r5;
        java.lang.Object $r3;
        java.lang.Class $r6, $r9;

        r12 := @this: org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor;

        r1 := @parameter0: org.apache.cxf.message.Message;

        r5 := @parameter1: org.apache.cxf.service.model.BindingInfo;

        r0 := @parameter2: org.apache.cxf.service.Service;

        if r0 != null goto label1;

        return 0;

     label1:
        $r2 = <org.apache.cxf.message.Message: java.lang.String ENCODING>;

        $r3 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (java.lang.String) $r3;

        $r6 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("org.apache.cxf.binding.soap.model.SoapBindingInfo");

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r0.<org.apache.cxf.service.Service: org.apache.cxf.databinding.DataBinding getDataBinding()>();

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("org.apache.cxf.jaxb.JAXBDataBinding");

        if $z1 == 0 goto label3;

        $z2 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isDOMPresent(org.apache.cxf.message.Message)>(r1);

        if $z2 != 0 goto label3;

        if r4 == null goto label2;

        $r11 = "UTF-8";

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z3 == 0 goto label3;

     label2:
        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;
    }

    protected org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message, org.apache.cxf.service.Service, java.lang.Class)
    {
        java.util.ArrayList $r8;
        org.apache.cxf.service.Service r0;
        java.lang.String $r10, $r14;
        boolean $z0;
        org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor r7;
        org.apache.cxf.message.Message r4;
        org.apache.cxf.databinding.DataBinding $r1;
        java.util.Collection $r5, r9;
        org.apache.cxf.message.Exchange $r11;
        org.apache.cxf.endpoint.Endpoint $r12;
        org.apache.cxf.databinding.DataWriter $r3;
        java.lang.Class r2, $r13;
        java.lang.Object $r6;

        r7 := @this: org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor;

        r4 := @parameter0: org.apache.cxf.message.Message;

        r0 := @parameter1: org.apache.cxf.service.Service;

        r2 := @parameter2: java.lang.Class;

        $r1 = interfaceinvoke r0.<org.apache.cxf.service.Service: org.apache.cxf.databinding.DataBinding getDataBinding()>();

        $r3 = interfaceinvoke $r1.<org.apache.cxf.databinding.DataBinding: org.apache.cxf.databinding.DataWriter createWriter(java.lang.Class)>(r2);

        $r5 = interfaceinvoke r4.<org.apache.cxf.message.Message: java.util.Collection getAttachments()>();

        r9 = $r5;

        $r6 = interfaceinvoke r4.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("mtom-enabled");

        $z0 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isTrue(java.lang.Object)>($r6);

        if $z0 == 0 goto label1;

        if $r5 != null goto label1;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r9 = $r8;

        interfaceinvoke r4.<org.apache.cxf.message.Message: void setAttachments(java.util.Collection)>($r8);

     label1:
        interfaceinvoke $r3.<org.apache.cxf.databinding.DataWriter: void setAttachments(java.util.Collection)>(r9);

        $r10 = <org.apache.cxf.databinding.DataWriter: java.lang.String ENDPOINT>;

        $r11 = interfaceinvoke r4.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r12 = interfaceinvoke $r11.<org.apache.cxf.message.Exchange: org.apache.cxf.endpoint.Endpoint getEndpoint()>();

        interfaceinvoke $r3.<org.apache.cxf.databinding.DataWriter: void setProperty(java.lang.String,java.lang.Object)>($r10, $r12);

        $r13 = class "Lorg/apache/cxf/message/Message;";

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r3.<org.apache.cxf.databinding.DataWriter: void setProperty(java.lang.String,java.lang.Object)>($r14, r4);

        specialinvoke r7.<org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor: void setDataWriterValidation(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataWriter)>(r0, r4, $r3);

        return $r3;
    }

    private void setDataWriterValidation(org.apache.cxf.service.Service, org.apache.cxf.message.Message, org.apache.cxf.databinding.DataWriter)
    {
        org.apache.cxf.Bus $r7;
        org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor r0;
        org.apache.cxf.message.Message r1;
        org.apache.cxf.service.model.ServiceInfo $r5;
        org.apache.cxf.message.Exchange $r6;
        javax.xml.validation.Schema $r8;
        java.util.List $r3;
        org.apache.cxf.service.Service r2;
        org.apache.cxf.databinding.DataWriter r9;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor;

        r2 := @parameter0: org.apache.cxf.service.Service;

        r1 := @parameter1: org.apache.cxf.message.Message;

        r9 := @parameter2: org.apache.cxf.databinding.DataWriter;

        $z0 = virtualinvoke r0.<org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor: boolean shouldValidate(org.apache.cxf.message.Message)>(r1);

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke r2.<org.apache.cxf.service.Service: java.util.List getServiceInfos()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (org.apache.cxf.service.model.ServiceInfo) $r4;

        $r6 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r7 = interfaceinvoke $r6.<org.apache.cxf.message.Exchange: org.apache.cxf.Bus getBus()>();

        $r8 = staticinvoke <org.apache.cxf.wsdl.EndpointReferenceUtils: javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)>($r5, $r7);

        interfaceinvoke r9.<org.apache.cxf.databinding.DataWriter: void setSchema(javax.xml.validation.Schema)>($r8);

     label1:
        return;
    }

    protected javax.xml.stream.XMLStreamWriter getXMLStreamWriter(org.apache.cxf.message.Message)
    {
        org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor r3;
        org.apache.cxf.message.Message r0;
        java.lang.Object $r1;
        javax.xml.stream.XMLStreamWriter $r2;

        r3 := @this: org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamWriter;");

        $r2 = (javax.xml.stream.XMLStreamWriter) $r1;

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor: java.lang.String OUT_BUFFERING> = "org.apache.cxf.output.buffering";

        <org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor: java.lang.String DISABLE_OUTPUTSTREAM_OPTIMIZATION> = "disable.outputstream.optimization";

        return;
    }
}
