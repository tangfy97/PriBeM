public class org.apache.lucene.util.mutable.MutableValueInt extends org.apache.lucene.util.mutable.MutableValue
{
    public int value;

    public void <init>()
    {
        org.apache.lucene.util.mutable.MutableValueInt r0;

        r0 := @this: org.apache.lucene.util.mutable.MutableValueInt;

        specialinvoke r0.<org.apache.lucene.util.mutable.MutableValue: void <init>()>();

        return;
    }

    public java.lang.Object toObject()
    {
        int $i0;
        org.apache.lucene.util.mutable.MutableValueInt r0;
        java.lang.Integer $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.util.mutable.MutableValueInt;

        $z0 = r0.<org.apache.lucene.util.mutable.MutableValueInt: boolean exists>;

        if $z0 == 0 goto label1;

        $i0 = r0.<org.apache.lucene.util.mutable.MutableValueInt: int value>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

    public void copy(org.apache.lucene.util.mutable.MutableValue)
    {
        int $i0;
        org.apache.lucene.util.mutable.MutableValueInt r1, r2;
        org.apache.lucene.util.mutable.MutableValue r0;
        boolean $z0;

        r2 := @this: org.apache.lucene.util.mutable.MutableValueInt;

        r0 := @parameter0: org.apache.lucene.util.mutable.MutableValue;

        r1 = (org.apache.lucene.util.mutable.MutableValueInt) r0;

        $i0 = r1.<org.apache.lucene.util.mutable.MutableValueInt: int value>;

        r2.<org.apache.lucene.util.mutable.MutableValueInt: int value> = $i0;

        $z0 = r1.<org.apache.lucene.util.mutable.MutableValueInt: boolean exists>;

        r2.<org.apache.lucene.util.mutable.MutableValueInt: boolean exists> = $z0;

        return;
    }

    public org.apache.lucene.util.mutable.MutableValue duplicate()
    {
        int $i0;
        org.apache.lucene.util.mutable.MutableValueInt $r0, r1;
        boolean $z0;

        r1 := @this: org.apache.lucene.util.mutable.MutableValueInt;

        $r0 = new org.apache.lucene.util.mutable.MutableValueInt;

        specialinvoke $r0.<org.apache.lucene.util.mutable.MutableValueInt: void <init>()>();

        $i0 = r1.<org.apache.lucene.util.mutable.MutableValueInt: int value>;

        $r0.<org.apache.lucene.util.mutable.MutableValueInt: int value> = $i0;

        $z0 = r1.<org.apache.lucene.util.mutable.MutableValueInt: boolean exists>;

        $r0.<org.apache.lucene.util.mutable.MutableValueInt: boolean exists> = $z0;

        return $r0;
    }

    public boolean equalsSameType(java.lang.Object)
    {
        org.apache.lucene.util.mutable.MutableValueInt r1, r2;
        int $i0, $i1;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r2 := @this: org.apache.lucene.util.mutable.MutableValueInt;

        r0 := @parameter0: java.lang.Object;

        r1 = (org.apache.lucene.util.mutable.MutableValueInt) r0;

        $i1 = r2.<org.apache.lucene.util.mutable.MutableValueInt: int value>;

        $i0 = r1.<org.apache.lucene.util.mutable.MutableValueInt: int value>;

        if $i1 != $i0 goto label1;

        $z1 = r2.<org.apache.lucene.util.mutable.MutableValueInt: boolean exists>;

        $z0 = r1.<org.apache.lucene.util.mutable.MutableValueInt: boolean exists>;

        if $z1 != $z0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public int compareSameType(java.lang.Object)
    {
        org.apache.lucene.util.mutable.MutableValueInt r1, r2;
        byte $b2;
        int i0, i1, $i4;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r2 := @this: org.apache.lucene.util.mutable.MutableValueInt;

        r0 := @parameter0: java.lang.Object;

        r1 = (org.apache.lucene.util.mutable.MutableValueInt) r0;

        i0 = r2.<org.apache.lucene.util.mutable.MutableValueInt: int value>;

        i1 = r1.<org.apache.lucene.util.mutable.MutableValueInt: int value>;

        if i0 >= i1 goto label1;

        $i4 = (int) -1;

        return $i4;

     label1:
        if i0 <= i1 goto label2;

        return 1;

     label2:
        $z1 = r2.<org.apache.lucene.util.mutable.MutableValueInt: boolean exists>;

        $z0 = r1.<org.apache.lucene.util.mutable.MutableValueInt: boolean exists>;

        if $z1 != $z0 goto label3;

        return 0;

     label3:
        $z2 = r2.<org.apache.lucene.util.mutable.MutableValueInt: boolean exists>;

        if $z2 == 0 goto label4;

        $b2 = 1;

        goto label5;

     label4:
        $b2 = -1;

     label5:
        return $b2;
    }

    public int hashCode()
    {
        int $i0, $i1, $i2, $i3, $i4;
        org.apache.lucene.util.mutable.MutableValueInt r0;

        r0 := @this: org.apache.lucene.util.mutable.MutableValueInt;

        $i0 = r0.<org.apache.lucene.util.mutable.MutableValueInt: int value>;

        $i3 = $i0 >> 8;

        $i1 = r0.<org.apache.lucene.util.mutable.MutableValueInt: int value>;

        $i2 = $i1 >> 16;

        $i4 = $i3 + $i2;

        return $i4;
    }
}
