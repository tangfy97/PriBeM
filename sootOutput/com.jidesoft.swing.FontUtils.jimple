public class com.jidesoft.swing.FontUtils extends java.lang.Object
{
    private static java.util.Map _fontCache;

    public void <init>()
    {
        com.jidesoft.swing.FontUtils r0;

        r0 := @this: com.jidesoft.swing.FontUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int getDerivedFontCacheSize()
    {
        int $i0;
        java.util.Map $r0, $r1;

        $r0 = <com.jidesoft.swing.FontUtils: java.util.Map _fontCache>;

        if $r0 == null goto label1;

        $r1 = <com.jidesoft.swing.FontUtils: java.util.Map _fontCache>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public static void clearDerivedFontCache()
    {
        java.util.Map $r0, $r1;

        $r0 = <com.jidesoft.swing.FontUtils: java.util.Map _fontCache>;

        if $r0 == null goto label1;

        $r1 = <com.jidesoft.swing.FontUtils: java.util.Map _fontCache>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        <com.jidesoft.swing.FontUtils: java.util.Map _fontCache> = null;

     label1:
        return;
    }

    public static java.awt.Font getCachedDerivedFont(java.awt.Font, int, int)
    {
        java.awt.Font r2, $r5, $r8, r9;
        com.jidesoft.swing.FontUtils$FontAttribute $r1;
        java.util.Map $r0, $r3, $r6;
        int i0, i1;
        float $f0, $f1;
        java.lang.Object $r4;
        com.jidesoft.swing.SoftHashMap $r7;

        r2 := @parameter0: java.awt.Font;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = <com.jidesoft.swing.FontUtils: java.util.Map _fontCache>;

        if $r0 != null goto label1;

        $r7 = new com.jidesoft.swing.SoftHashMap;

        specialinvoke $r7.<com.jidesoft.swing.SoftHashMap: void <init>()>();

        <com.jidesoft.swing.FontUtils: java.util.Map _fontCache> = $r7;

     label1:
        $r1 = new com.jidesoft.swing.FontUtils$FontAttribute;

        $f0 = (float) i1;

        specialinvoke $r1.<com.jidesoft.swing.FontUtils$FontAttribute: void <init>(java.awt.Font,int,float)>(r2, i0, $f0);

        $r3 = <com.jidesoft.swing.FontUtils: java.util.Map _fontCache>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r8 = (java.awt.Font) $r4;

        r9 = $r8;

        if $r8 != null goto label2;

        $f1 = (float) i1;

        $r5 = virtualinvoke r2.<java.awt.Font: java.awt.Font deriveFont(int,float)>(i0, $f1);

        r9 = $r5;

        $r6 = <com.jidesoft.swing.FontUtils: java.util.Map _fontCache>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r5);

     label2:
        return r9;
    }
}
