public class com.jidesoft.range.CategoryRange extends com.jidesoft.range.AbstractRange implements java.lang.Iterable
{
    public static final java.lang.String PROPERTY_VALUES;
    public static final java.lang.String PROPERTY_COMPARATOR;
    public static final java.lang.String PROPERTY_SORTED;
    private java.util.List _possibleValues;
    private java.util.List _categoryValues;
    private java.lang.Double minimum;
    private java.lang.Double maximum;
    private java.util.Comparator comparator;
    private boolean sorted;
    private boolean alreadySorted;

    public void <init>()
    {
        com.jidesoft.range.CategoryRange r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: com.jidesoft.range.CategoryRange;

        specialinvoke r0.<com.jidesoft.range.AbstractRange: void <init>()>();

        r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues> = null;

        r0.<com.jidesoft.range.CategoryRange: java.util.List _categoryValues> = null;

        r0.<com.jidesoft.range.CategoryRange: java.util.Comparator comparator> = null;

        r0.<com.jidesoft.range.CategoryRange: boolean sorted> = 0;

        r0.<com.jidesoft.range.CategoryRange: boolean alreadySorted> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.jidesoft.range.CategoryRange: java.util.List _categoryValues> = $r2;

        r0.<com.jidesoft.range.CategoryRange: boolean alreadySorted> = 0;

        return;
    }

    public transient void <init>(java.lang.Object[])
    {
        java.util.List $r3, $r4;
        java.lang.Object[] r2;
        com.jidesoft.range.CategoryRange r0;
        java.util.ArrayList $r1;

        r0 := @this: com.jidesoft.range.CategoryRange;

        r2 := @parameter0: java.lang.Object[];

        specialinvoke r0.<com.jidesoft.range.AbstractRange: void <init>()>();

        r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues> = null;

        r0.<com.jidesoft.range.CategoryRange: java.util.List _categoryValues> = null;

        r0.<com.jidesoft.range.CategoryRange: java.util.Comparator comparator> = null;

        r0.<com.jidesoft.range.CategoryRange: boolean sorted> = 0;

        r0.<com.jidesoft.range.CategoryRange: boolean alreadySorted> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues> = $r1;

        $r3 = r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues>;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        r0.<com.jidesoft.range.CategoryRange: boolean alreadySorted> = 0;

        return;
    }

    public void <init>(java.util.Set)
    {
        java.util.Set r2;
        com.jidesoft.range.CategoryRange r0;
        java.util.ArrayList $r1;

        r0 := @this: com.jidesoft.range.CategoryRange;

        r2 := @parameter0: java.util.Set;

        specialinvoke r0.<com.jidesoft.range.AbstractRange: void <init>()>();

        r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues> = null;

        r0.<com.jidesoft.range.CategoryRange: java.util.List _categoryValues> = null;

        r0.<com.jidesoft.range.CategoryRange: java.util.Comparator comparator> = null;

        r0.<com.jidesoft.range.CategoryRange: boolean sorted> = 0;

        r0.<com.jidesoft.range.CategoryRange: boolean alreadySorted> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>(r2);

        r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues> = $r1;

        r0.<com.jidesoft.range.CategoryRange: boolean alreadySorted> = 0;

        return;
    }

    public void <init>(com.jidesoft.range.CategoryRange)
    {
        java.util.ArrayList $r1, $r4;
        java.util.List $r3, $r5;
        java.util.Comparator $r6;
        com.jidesoft.range.CategoryRange r0, r2;
        double $d0, $d1;

        r0 := @this: com.jidesoft.range.CategoryRange;

        r2 := @parameter0: com.jidesoft.range.CategoryRange;

        specialinvoke r0.<com.jidesoft.range.AbstractRange: void <init>()>();

        r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues> = null;

        r0.<com.jidesoft.range.CategoryRange: java.util.List _categoryValues> = null;

        r0.<com.jidesoft.range.CategoryRange: java.util.Comparator comparator> = null;

        r0.<com.jidesoft.range.CategoryRange: boolean sorted> = 0;

        r0.<com.jidesoft.range.CategoryRange: boolean alreadySorted> = 0;

        $r1 = new java.util.ArrayList;

        $r3 = virtualinvoke r2.<com.jidesoft.range.CategoryRange: java.util.List getCategoryValues()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        r0.<com.jidesoft.range.CategoryRange: java.util.List _categoryValues> = $r1;

        $r4 = new java.util.ArrayList;

        $r5 = virtualinvoke r2.<com.jidesoft.range.CategoryRange: java.util.List getPossibleValues()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues> = $r4;

        $r6 = virtualinvoke r2.<com.jidesoft.range.CategoryRange: java.util.Comparator getComparator()>();

        r0.<com.jidesoft.range.CategoryRange: java.util.Comparator comparator> = $r6;

        $d0 = virtualinvoke r2.<com.jidesoft.range.CategoryRange: double minimum()>();

        virtualinvoke r0.<com.jidesoft.range.CategoryRange: void setMinimum(double)>($d0);

        $d1 = virtualinvoke r2.<com.jidesoft.range.CategoryRange: double maximum()>();

        virtualinvoke r0.<com.jidesoft.range.CategoryRange: void setMaximum(double)>($d1);

        r0.<com.jidesoft.range.CategoryRange: boolean alreadySorted> = 0;

        return;
    }

    public java.util.List getPossibleValues()
    {
        com.jidesoft.range.CategoryRange$1 $r4;
        java.util.List $r3, $r5, $r6;
        java.util.Comparator $r1, $r2;
        com.jidesoft.range.CategoryRange r0;
        boolean $z0, $z1;

        r0 := @this: com.jidesoft.range.CategoryRange;

        $z0 = r0.<com.jidesoft.range.CategoryRange: boolean sorted>;

        if $z0 == 0 goto label2;

        $z1 = r0.<com.jidesoft.range.CategoryRange: boolean alreadySorted>;

        if $z1 != 0 goto label2;

        $r1 = r0.<com.jidesoft.range.CategoryRange: java.util.Comparator comparator>;

        if $r1 != null goto label1;

        $r4 = new com.jidesoft.range.CategoryRange$1;

        specialinvoke $r4.<com.jidesoft.range.CategoryRange$1: void <init>(com.jidesoft.range.CategoryRange)>(r0);

        $r5 = r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r5, $r4);

        goto label2;

     label1:
        $r3 = r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues>;

        $r2 = r0.<com.jidesoft.range.CategoryRange: java.util.Comparator comparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r3, $r2);

     label2:
        $r6 = r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues>;

        return $r6;
    }

    public com.jidesoft.range.Category getCategory(int)
    {
        com.jidesoft.range.Category $r3;
        java.lang.IllegalArgumentException $r4;
        java.util.List $r1;
        int i0, $i1;
        java.lang.Object $r2;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;
        com.jidesoft.range.CategoryRange r0;

        r0 := @this: com.jidesoft.range.CategoryRange;

        i0 := @parameter0: int;

        if i0 >= 1 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Supplied category index was ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but it should be >= 1");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        $r1 = virtualinvoke r0.<com.jidesoft.range.CategoryRange: java.util.List getCategoryValues()>();

        $i1 = i0 - 1;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r3 = (com.jidesoft.range.Category) $r2;

        return $r3;
    }

    public com.jidesoft.range.CategoryRange add(com.jidesoft.range.Category)
    {
        com.jidesoft.range.Category r1;
        java.util.List $r3, $r5, $r6, $r8;
        java.lang.Object $r4, $r7;
        java.util.Comparator $r2;
        com.jidesoft.range.CategoryRange r0;
        boolean $z0;

        r0 := @this: com.jidesoft.range.CategoryRange;

        r1 := @parameter0: com.jidesoft.range.Category;

        $z0 = virtualinvoke r0.<com.jidesoft.range.CategoryRange: boolean contains(com.jidesoft.range.Category)>(r1);

        if $z0 != 0 goto label3;

        $r2 = r0.<com.jidesoft.range.CategoryRange: java.util.Comparator comparator>;

        if $r2 != null goto label1;

        $r6 = r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues>;

        $r7 = virtualinvoke r1.<com.jidesoft.range.Category: java.lang.Object getValue()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = r0.<com.jidesoft.range.CategoryRange: java.util.List _categoryValues>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r1);

        goto label2;

     label1:
        $r3 = r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues>;

        $r4 = virtualinvoke r1.<com.jidesoft.range.Category: java.lang.Object getValue()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        r0.<com.jidesoft.range.CategoryRange: boolean alreadySorted> = 0;

        r0.<com.jidesoft.range.CategoryRange: java.util.List _categoryValues> = null;

     label2:
        virtualinvoke r1.<com.jidesoft.range.Category: void setRange(com.jidesoft.range.CategoryRange)>(r0);

        $r5 = r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues>;

        virtualinvoke r0.<com.jidesoft.range.CategoryRange: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("values", null, $r5);

     label3:
        return r0;
    }

    public void setSorted(boolean)
    {
        com.jidesoft.range.CategoryRange r0;
        boolean z0, z1;

        r0 := @this: com.jidesoft.range.CategoryRange;

        z1 := @parameter0: boolean;

        z0 = r0.<com.jidesoft.range.CategoryRange: boolean sorted>;

        r0.<com.jidesoft.range.CategoryRange: boolean sorted> = z1;

        if z1 == 0 goto label1;

        r0.<com.jidesoft.range.CategoryRange: java.util.List _categoryValues> = null;

     label1:
        virtualinvoke r0.<com.jidesoft.range.CategoryRange: void firePropertyChange(java.lang.String,boolean,boolean)>("sorted", z0, z1);

        return;
    }

    public boolean isSorted()
    {
        com.jidesoft.range.CategoryRange r0;
        boolean $z0;

        r0 := @this: com.jidesoft.range.CategoryRange;

        $z0 = r0.<com.jidesoft.range.CategoryRange: boolean sorted>;

        return $z0;
    }

    public java.util.Comparator getComparator()
    {
        java.util.Comparator $r1;
        com.jidesoft.range.CategoryRange r0;

        r0 := @this: com.jidesoft.range.CategoryRange;

        $r1 = r0.<com.jidesoft.range.CategoryRange: java.util.Comparator comparator>;

        return $r1;
    }

    public void setComparator(java.util.Comparator)
    {
        java.util.Comparator r1, r2;
        com.jidesoft.range.CategoryRange r0;
        boolean $z0;

        r0 := @this: com.jidesoft.range.CategoryRange;

        r2 := @parameter0: java.util.Comparator;

        r1 = r0.<com.jidesoft.range.CategoryRange: java.util.Comparator comparator>;

        r0.<com.jidesoft.range.CategoryRange: java.util.Comparator comparator> = r2;

        if r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        virtualinvoke r0.<com.jidesoft.range.CategoryRange: void setSorted(boolean)>($z0);

        virtualinvoke r0.<com.jidesoft.range.CategoryRange: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("comparator", r1, r2);

        return;
    }

    public com.jidesoft.range.Range copy()
    {
        com.jidesoft.range.CategoryRange $r0, r1;

        r1 := @this: com.jidesoft.range.CategoryRange;

        $r0 = new com.jidesoft.range.CategoryRange;

        specialinvoke $r0.<com.jidesoft.range.CategoryRange: void <init>(com.jidesoft.range.CategoryRange)>(r1);

        return $r0;
    }

    public java.lang.Object lower()
    {
        java.util.List $r1, $r2, $r3;
        int $i0;
        java.lang.Object $r4;
        com.jidesoft.range.CategoryRange r0;

        r0 := @this: com.jidesoft.range.CategoryRange;

        $r1 = r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues>;

        if $r1 == null goto label1;

        $r2 = r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r3 = r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        return $r4;
    }

    public java.lang.Object upper()
    {
        java.util.List $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2;
        java.lang.Object $r5;
        com.jidesoft.range.CategoryRange r0;

        r0 := @this: com.jidesoft.range.CategoryRange;

        $r1 = r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues>;

        if $r1 == null goto label1;

        $r2 = r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r3 = r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r4 = r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues>;

        $i2 = $i1 - 1;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i2);

        return $r5;
    }

    public void adjust(java.lang.Object, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object r2, r3;
        com.jidesoft.range.CategoryRange r1;

        r1 := @this: com.jidesoft.range.CategoryRange;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public double maximum()
    {
        java.lang.Double $r1, $r2, $r4;
        int $i0;
        java.lang.Object $r3;
        com.jidesoft.range.CategoryRange r0;
        double $d0, $d1, $d2;

        r0 := @this: com.jidesoft.range.CategoryRange;

        $r1 = r0.<com.jidesoft.range.CategoryRange: java.lang.Double maximum>;

        if $r1 != null goto label2;

        $r3 = virtualinvoke r0.<com.jidesoft.range.CategoryRange: java.lang.Object upper()>();

        if $r3 != null goto label1;

        return 1.0;

     label1:
        $i0 = virtualinvoke r0.<com.jidesoft.range.CategoryRange: int position(java.lang.Object)>($r3);

        $d1 = (double) $i0;

        $d2 = $d1 + 1.0;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        r0.<com.jidesoft.range.CategoryRange: java.lang.Double maximum> = $r4;

     label2:
        $r2 = r0.<com.jidesoft.range.CategoryRange: java.lang.Double maximum>;

        $d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        return $d0;
    }

    public double minimum()
    {
        java.lang.Double $r1, $r2, $r4;
        int $i0;
        java.lang.Object $r3;
        com.jidesoft.range.CategoryRange r0;
        double $d0, $d1, $d2;

        r0 := @this: com.jidesoft.range.CategoryRange;

        $r1 = r0.<com.jidesoft.range.CategoryRange: java.lang.Double minimum>;

        if $r1 != null goto label2;

        $r3 = virtualinvoke r0.<com.jidesoft.range.CategoryRange: java.lang.Object lower()>();

        if $r3 != null goto label1;

        return 0.0;

     label1:
        $i0 = virtualinvoke r0.<com.jidesoft.range.CategoryRange: int position(java.lang.Object)>($r3);

        $d1 = (double) $i0;

        $d2 = $d1 - 1.0;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        r0.<com.jidesoft.range.CategoryRange: java.lang.Double minimum> = $r4;

     label2:
        $r2 = r0.<com.jidesoft.range.CategoryRange: java.lang.Double minimum>;

        $d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        return $d0;
    }

    public void reset()
    {
        com.jidesoft.range.CategoryRange r0;

        r0 := @this: com.jidesoft.range.CategoryRange;

        r0.<com.jidesoft.range.CategoryRange: java.lang.Double maximum> = null;

        r0.<com.jidesoft.range.CategoryRange: java.lang.Double minimum> = null;

        return;
    }

    public void setMinimum(double)
    {
        java.lang.Double r1, $r2, $r3;
        com.jidesoft.range.CategoryRange r0;
        double d0;

        r0 := @this: com.jidesoft.range.CategoryRange;

        d0 := @parameter0: double;

        r1 = r0.<com.jidesoft.range.CategoryRange: java.lang.Double minimum>;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        r0.<com.jidesoft.range.CategoryRange: java.lang.Double minimum> = $r2;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        virtualinvoke r0.<com.jidesoft.range.CategoryRange: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("min", r1, $r3);

        return;
    }

    public void setMaximum(double)
    {
        java.lang.Double r1, $r2, $r3;
        com.jidesoft.range.CategoryRange r0;
        double d0;

        r0 := @this: com.jidesoft.range.CategoryRange;

        d0 := @parameter0: double;

        r1 = r0.<com.jidesoft.range.CategoryRange: java.lang.Double maximum>;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        r0.<com.jidesoft.range.CategoryRange: java.lang.Double maximum> = $r2;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        virtualinvoke r0.<com.jidesoft.range.CategoryRange: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("max", r1, $r3);

        return;
    }

    public double size()
    {
        java.util.List $r1, $r2;
        int $i0;
        com.jidesoft.range.CategoryRange r0;
        double $d0, $d1, $d2;

        r0 := @this: com.jidesoft.range.CategoryRange;

        $r1 = r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues>;

        if $r1 != null goto label1;

        return 0.0;

     label1:
        $r2 = r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 0 goto label2;

        return 0.0;

     label2:
        $d0 = virtualinvoke r0.<com.jidesoft.range.CategoryRange: double maximum()>();

        $d1 = virtualinvoke r0.<com.jidesoft.range.CategoryRange: double minimum()>();

        $d2 = $d0 - $d1;

        return $d2;
    }

    public int position(java.lang.Object)
    {
        java.lang.IllegalArgumentException $r3;
        java.util.List $r2;
        int $i0, $i1;
        java.lang.Object r1;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        com.jidesoft.range.CategoryRange r0;

        r0 := @this: com.jidesoft.range.CategoryRange;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues>;

        $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1);

        if $i0 >= 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Value ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not known");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label1:
        $i1 = 1 + $i0;

        return $i1;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.List $r2;
        java.util.Iterator $r3;
        java.lang.Object r0, $r4;
        com.jidesoft.range.CategoryRange r1;
        boolean $z0, $z1;

        r1 := @this: com.jidesoft.range.CategoryRange;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $r2 = r1.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $z1 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        goto label2;

     label4:
        return 0;
    }

    public boolean contains(com.jidesoft.range.Category)
    {
        java.util.Iterator $r3;
        com.jidesoft.range.Category r0, r5;
        java.util.List $r2;
        java.lang.Object $r4;
        com.jidesoft.range.CategoryRange r1;
        boolean $z0, $z1;

        r1 := @this: com.jidesoft.range.CategoryRange;

        r0 := @parameter0: com.jidesoft.range.Category;

        if r0 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r1.<com.jidesoft.range.CategoryRange: java.util.List getCategoryValues()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.jidesoft.range.Category) $r4;

        $z1 = virtualinvoke r0.<com.jidesoft.range.Category: boolean equals(java.lang.Object)>(r5);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        goto label2;

     label4:
        return 0;
    }

    public java.util.Iterator iterator()
    {
        java.util.List $r1;
        java.util.Iterator $r2;
        com.jidesoft.range.CategoryRange r0;

        r0 := @this: com.jidesoft.range.CategoryRange;

        $r1 = virtualinvoke r0.<com.jidesoft.range.CategoryRange: java.util.List getCategoryValues()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    public java.util.List getCategoryValues()
    {
        java.util.Iterator $r5;
        com.jidesoft.range.Category $r7;
        java.util.ArrayList $r3;
        java.util.List $r1, $r2, $r4, $r8;
        java.lang.Object $r6;
        com.jidesoft.range.CategoryRange r0;
        boolean $z0;

        r0 := @this: com.jidesoft.range.CategoryRange;

        $r1 = r0.<com.jidesoft.range.CategoryRange: java.util.List _categoryValues>;

        if $r1 != null goto label2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.jidesoft.range.CategoryRange: java.util.List _categoryValues> = $r3;

        $r4 = virtualinvoke r0.<com.jidesoft.range.CategoryRange: java.util.List getPossibleValues()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r8 = r0.<com.jidesoft.range.CategoryRange: java.util.List _categoryValues>;

        $r7 = new com.jidesoft.range.Category;

        specialinvoke $r7.<com.jidesoft.range.Category: void <init>(java.lang.Object,com.jidesoft.range.CategoryRange)>($r6, r0);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        $r2 = r0.<com.jidesoft.range.CategoryRange: java.util.List _categoryValues>;

        return $r2;
    }

    public int hashCode()
    {
        java.lang.Double $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.util.List $r1, $r2, $r3, $r4;
        com.jidesoft.range.CategoryRange r0;

        r0 := @this: com.jidesoft.range.CategoryRange;

        $r1 = r0.<com.jidesoft.range.CategoryRange: java.util.List _categoryValues>;

        if $r1 != null goto label1;

        $i7 = 0;

        goto label2;

     label1:
        $r2 = r0.<com.jidesoft.range.CategoryRange: java.util.List _categoryValues>;

        $i7 = interfaceinvoke $r2.<java.util.List: int hashCode()>();

     label2:
        $i6 = 31 + $i7;

        $i0 = 31 * $i6;

        $r3 = r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues>;

        if $r3 != null goto label3;

        $i8 = 0;

        goto label4;

     label3:
        $r4 = r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues>;

        $i8 = interfaceinvoke $r4.<java.util.List: int hashCode()>();

     label4:
        $i5 = $i0 + $i8;

        $i1 = 31 * $i5;

        $r5 = r0.<com.jidesoft.range.CategoryRange: java.lang.Double maximum>;

        if $r5 != null goto label5;

        $i9 = 0;

        goto label6;

     label5:
        $r6 = r0.<com.jidesoft.range.CategoryRange: java.lang.Double maximum>;

        $i9 = virtualinvoke $r6.<java.lang.Double: int hashCode()>();

     label6:
        $i4 = $i1 + $i9;

        $i2 = 31 * $i4;

        $r7 = r0.<com.jidesoft.range.CategoryRange: java.lang.Double minimum>;

        if $r7 != null goto label7;

        $i10 = 0;

        goto label8;

     label7:
        $r8 = r0.<com.jidesoft.range.CategoryRange: java.lang.Double minimum>;

        $i10 = virtualinvoke $r8.<java.lang.Double: int hashCode()>();

     label8:
        $i3 = $i2 + $i10;

        return $i3;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Double $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r5, $r6, $r7, $r8, $r9, $r10, $r19, $r20;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        com.jidesoft.range.CategoryRange r0, r4;

        r0 := @this: com.jidesoft.range.CategoryRange;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        if r1 != null goto label02;

        return 0;

     label02:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label03;

        return 0;

     label03:
        r4 = (com.jidesoft.range.CategoryRange) r1;

        $r5 = r0.<com.jidesoft.range.CategoryRange: java.util.List _categoryValues>;

        if $r5 != null goto label04;

        $r20 = r4.<com.jidesoft.range.CategoryRange: java.util.List _categoryValues>;

        if $r20 == null goto label05;

        return 0;

     label04:
        $r7 = r0.<com.jidesoft.range.CategoryRange: java.util.List _categoryValues>;

        $r6 = r4.<com.jidesoft.range.CategoryRange: java.util.List _categoryValues>;

        $z0 = interfaceinvoke $r7.<java.util.List: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label05;

        return 0;

     label05:
        $r8 = r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues>;

        if $r8 != null goto label06;

        $r19 = r4.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues>;

        if $r19 == null goto label07;

        return 0;

     label06:
        $r10 = r0.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues>;

        $r9 = r4.<com.jidesoft.range.CategoryRange: java.util.List _possibleValues>;

        $z1 = interfaceinvoke $r10.<java.util.List: boolean equals(java.lang.Object)>($r9);

        if $z1 != 0 goto label07;

        return 0;

     label07:
        $r11 = r0.<com.jidesoft.range.CategoryRange: java.lang.Double maximum>;

        if $r11 != null goto label08;

        $r18 = r4.<com.jidesoft.range.CategoryRange: java.lang.Double maximum>;

        if $r18 == null goto label09;

        return 0;

     label08:
        $r13 = r0.<com.jidesoft.range.CategoryRange: java.lang.Double maximum>;

        $r12 = r4.<com.jidesoft.range.CategoryRange: java.lang.Double maximum>;

        $z2 = virtualinvoke $r13.<java.lang.Double: boolean equals(java.lang.Object)>($r12);

        if $z2 != 0 goto label09;

        return 0;

     label09:
        $r14 = r0.<com.jidesoft.range.CategoryRange: java.lang.Double minimum>;

        if $r14 != null goto label10;

        $r17 = r4.<com.jidesoft.range.CategoryRange: java.lang.Double minimum>;

        if $r17 == null goto label11;

        return 0;

     label10:
        $r16 = r0.<com.jidesoft.range.CategoryRange: java.lang.Double minimum>;

        $r15 = r4.<com.jidesoft.range.CategoryRange: java.lang.Double minimum>;

        $z3 = virtualinvoke $r16.<java.lang.Double: boolean equals(java.lang.Object)>($r15);

        if $z3 != 0 goto label11;

        return 0;

     label11:
        return 1;
    }

    public java.lang.String toString()
    {
        java.lang.Double $r2, $r3;
        java.lang.StringBuilder $r0;
        java.lang.String $r4;
        com.jidesoft.range.CategoryRange r1;

        r1 := @this: com.jidesoft.range.CategoryRange;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("#<CategoryRange ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("minimum=");

        $r2 = r1.<com.jidesoft.range.CategoryRange: java.lang.Double minimum>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" maximum=");

        $r3 = r1.<com.jidesoft.range.CategoryRange: java.lang.Double maximum>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static void <clinit>()
    {
        <com.jidesoft.range.CategoryRange: java.lang.String PROPERTY_SORTED> = "sorted";

        <com.jidesoft.range.CategoryRange: java.lang.String PROPERTY_COMPARATOR> = "comparator";

        <com.jidesoft.range.CategoryRange: java.lang.String PROPERTY_VALUES> = "values";

        return;
    }
}
