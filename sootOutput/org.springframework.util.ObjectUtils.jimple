public abstract class org.springframework.util.ObjectUtils extends java.lang.Object
{
    private static final int INITIAL_HASH;
    private static final int MULTIPLIER;
    private static final java.lang.String EMPTY_STRING;
    private static final java.lang.String NULL_STRING;
    private static final java.lang.String ARRAY_START;
    private static final java.lang.String ARRAY_END;
    private static final java.lang.String EMPTY_ARRAY;
    private static final java.lang.String ARRAY_ELEMENT_SEPARATOR;

    public void <init>()
    {
        org.springframework.util.ObjectUtils r0;

        r0 := @this: org.springframework.util.ObjectUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isCheckedException(java.lang.Throwable)
    {
        java.lang.Throwable r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.Throwable;

        $z0 = r0 instanceof java.lang.RuntimeException;

        if $z0 != 0 goto label1;

        $z1 = r0 instanceof java.lang.Error;

        if $z1 == 0 goto label2;

     label1:
        $z2 = 0;

        goto label3;

     label2:
        $z2 = 1;

     label3:
        return $z2;
    }

    public static boolean isCompatibleWithThrowsClause(java.lang.Throwable, java.lang.Class[])
    {
        java.lang.Throwable r0;
        java.lang.Class[] r1;
        int $i0, i1;
        java.lang.Class $r2, $r3;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Throwable;

        r1 := @parameter1: java.lang.Class[];

        $z0 = staticinvoke <org.springframework.util.ObjectUtils: boolean isCheckedException(java.lang.Throwable)>(r0);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        if r1 == null goto label5;

        i1 = 0;

        goto label4;

     label2:
        $r2 = r1[i1];

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r3);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

     label4:
        $i0 = lengthof r1;

        if i1 < $i0 goto label2;

     label5:
        return 0;
    }

    public static boolean isArray(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Class $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isEmpty(java.lang.Object[])
    {
        int $i0;
        java.lang.Object[] r0;

        r0 := @parameter0: java.lang.Object[];

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 == 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public static boolean containsElement(java.lang.Object[], java.lang.Object)
    {
        java.lang.Object[] r0;
        int i0, i1;
        java.lang.Object r1, r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Object[];

        r2 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        i0 = lengthof r0;

        i1 = 0;

        goto label4;

     label2:
        r1 = r0[i1];

        $z0 = staticinvoke <org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>(r1, r2);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

     label4:
        if i1 < i0 goto label2;

        return 0;
    }

    public static java.lang.Object[] addObjectToArray(java.lang.Object[], java.lang.Object)
    {
        java.lang.Object[] r0, $r3;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object r1, $r2;
        java.lang.Class $r4, r5;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Object;

        r5 = class "Ljava/lang/Object;";

        if r0 == null goto label1;

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Class getComponentType()>();

        goto label2;

     label1:
        if r1 == null goto label2;

        r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

     label2:
        if r0 == null goto label3;

        $i3 = lengthof r0;

        $i4 = $i3 + 1;

        goto label4;

     label3:
        $i4 = 1;

     label4:
        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r5, $i4);

        $r3 = (java.lang.Object[]) $r2;

        if r0 == null goto label5;

        $i2 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, $r3, 0, $i2);

     label5:
        $i0 = lengthof $r3;

        $i1 = $i0 - 1;

        $r3[$i1] = r1;

        return $r3;
    }

    public static java.lang.Object[] toObjectArray(java.lang.Object)
    {
        java.lang.Object[] r5, $r7, $r12, $r13;
        int $i0, i1;
        java.lang.String $r11;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r8;
        java.lang.Object r0, $r2, $r4, $r6;
        java.lang.Class $r1, $r3;
        java.lang.StringBuilder $r9, $r10;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Object[];

        if $z0 == 0 goto label1;

        $r13 = (java.lang.Object[]) r0;

        return $r13;

     label1:
        if r0 != null goto label2;

        $r12 = newarray (java.lang.Object)[0];

        return $r12;

     label2:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z1 != 0 goto label3;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Source is not an array: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r8;

     label3:
        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r0);

        if $i0 != 0 goto label4;

        $r7 = newarray (java.lang.Object)[0];

        return $r7;

     label4:
        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(r0, 0);

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r3, $i0);

        r5 = (java.lang.Object[]) $r4;

        i1 = 0;

        goto label6;

     label5:
        $r6 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(r0, i1);

        r5[i1] = $r6;

        i1 = i1 + 1;

     label6:
        if i1 < $i0 goto label5;

        return r5;
    }

    public static boolean nullSafeEquals(java.lang.Object, java.lang.Object)
    {
        byte[] $r16, $r17;
        int[] $r8, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29;
        short[] $r4, $r5;
        java.lang.Object[] $r20, $r21;
        double[] $r12, $r13;
        float[] $r10, $r11;
        long[] $r6, $r7;
        boolean[] $r18, $r19;
        char[] $r14, $r15;
        java.lang.Object r0, r1;
        java.lang.Class $r2, $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        if r0 == null goto label02;

        if r1 != null goto label03;

     label02:
        return 0;

     label03:
        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label04;

        return 1;

     label04:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r2.<java.lang.Class: boolean isArray()>();

        if $z1 == 0 goto label13;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z2 = virtualinvoke $r3.<java.lang.Class: boolean isArray()>();

        if $z2 == 0 goto label13;

        $z3 = r0 instanceof java.lang.Object[];

        if $z3 == 0 goto label05;

        $z28 = r1 instanceof java.lang.Object[];

        if $z28 == 0 goto label05;

        $r21 = (java.lang.Object[]) r0;

        $r20 = (java.lang.Object[]) r1;

        $z29 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r21, $r20);

        return $z29;

     label05:
        $z4 = r0 instanceof boolean[];

        if $z4 == 0 goto label06;

        $z26 = r1 instanceof boolean[];

        if $z26 == 0 goto label06;

        $r19 = (boolean[]) r0;

        $r18 = (boolean[]) r1;

        $z27 = staticinvoke <java.util.Arrays: boolean equals(boolean[],boolean[])>($r19, $r18);

        return $z27;

     label06:
        $z5 = r0 instanceof byte[];

        if $z5 == 0 goto label07;

        $z24 = r1 instanceof byte[];

        if $z24 == 0 goto label07;

        $r17 = (byte[]) r0;

        $r16 = (byte[]) r1;

        $z25 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r17, $r16);

        return $z25;

     label07:
        $z6 = r0 instanceof char[];

        if $z6 == 0 goto label08;

        $z22 = r1 instanceof char[];

        if $z22 == 0 goto label08;

        $r15 = (char[]) r0;

        $r14 = (char[]) r1;

        $z23 = staticinvoke <java.util.Arrays: boolean equals(char[],char[])>($r15, $r14);

        return $z23;

     label08:
        $z7 = r0 instanceof double[];

        if $z7 == 0 goto label09;

        $z20 = r1 instanceof double[];

        if $z20 == 0 goto label09;

        $r13 = (double[]) r0;

        $r12 = (double[]) r1;

        $z21 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r13, $r12);

        return $z21;

     label09:
        $z8 = r0 instanceof float[];

        if $z8 == 0 goto label10;

        $z18 = r1 instanceof float[];

        if $z18 == 0 goto label10;

        $r11 = (float[]) r0;

        $r10 = (float[]) r1;

        $z19 = staticinvoke <java.util.Arrays: boolean equals(float[],float[])>($r11, $r10);

        return $z19;

     label10:
        $z9 = r0 instanceof int[];

        if $z9 == 0 goto label11;

        $z16 = r1 instanceof int[];

        if $z16 == 0 goto label11;

        $r9 = (int[]) r0;

        $r8 = (int[]) r1;

        $z17 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r9, $r8);

        return $z17;

     label11:
        $z10 = r0 instanceof long[];

        if $z10 == 0 goto label12;

        $z14 = r1 instanceof long[];

        if $z14 == 0 goto label12;

        $r7 = (long[]) r0;

        $r6 = (long[]) r1;

        $z15 = staticinvoke <java.util.Arrays: boolean equals(long[],long[])>($r7, $r6);

        return $z15;

     label12:
        $z11 = r0 instanceof short[];

        if $z11 == 0 goto label13;

        $z12 = r1 instanceof short[];

        if $z12 == 0 goto label13;

        $r5 = (short[]) r0;

        $r4 = (short[]) r1;

        $z13 = staticinvoke <java.util.Arrays: boolean equals(short[],short[])>($r5, $r4);

        return $z13;

     label13:
        return 0;
    }

    public static int nullSafeHashCode(java.lang.Object)
    {
        byte[] $r8;
        java.lang.Object[] $r10;
        double[] $r6;
        float[] $r5;
        long[] $r3;
        int[] $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        boolean[] $r9;
        char[] $r7;
        java.lang.Object r0;
        java.lang.Class $r1;
        short[] $r2;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label01;

        return 0;

     label01:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label10;

        $z1 = r0 instanceof java.lang.Object[];

        if $z1 == 0 goto label02;

        $r10 = (java.lang.Object[]) r0;

        $i9 = staticinvoke <org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object[])>($r10);

        return $i9;

     label02:
        $z2 = r0 instanceof boolean[];

        if $z2 == 0 goto label03;

        $r9 = (boolean[]) r0;

        $i8 = staticinvoke <org.springframework.util.ObjectUtils: int nullSafeHashCode(boolean[])>($r9);

        return $i8;

     label03:
        $z3 = r0 instanceof byte[];

        if $z3 == 0 goto label04;

        $r8 = (byte[]) r0;

        $i7 = staticinvoke <org.springframework.util.ObjectUtils: int nullSafeHashCode(byte[])>($r8);

        return $i7;

     label04:
        $z4 = r0 instanceof char[];

        if $z4 == 0 goto label05;

        $r7 = (char[]) r0;

        $i6 = staticinvoke <org.springframework.util.ObjectUtils: int nullSafeHashCode(char[])>($r7);

        return $i6;

     label05:
        $z5 = r0 instanceof double[];

        if $z5 == 0 goto label06;

        $r6 = (double[]) r0;

        $i5 = staticinvoke <org.springframework.util.ObjectUtils: int nullSafeHashCode(double[])>($r6);

        return $i5;

     label06:
        $z6 = r0 instanceof float[];

        if $z6 == 0 goto label07;

        $r5 = (float[]) r0;

        $i4 = staticinvoke <org.springframework.util.ObjectUtils: int nullSafeHashCode(float[])>($r5);

        return $i4;

     label07:
        $z7 = r0 instanceof int[];

        if $z7 == 0 goto label08;

        $r4 = (int[]) r0;

        $i3 = staticinvoke <org.springframework.util.ObjectUtils: int nullSafeHashCode(int[])>($r4);

        return $i3;

     label08:
        $z8 = r0 instanceof long[];

        if $z8 == 0 goto label09;

        $r3 = (long[]) r0;

        $i2 = staticinvoke <org.springframework.util.ObjectUtils: int nullSafeHashCode(long[])>($r3);

        return $i2;

     label09:
        $z9 = r0 instanceof short[];

        if $z9 == 0 goto label10;

        $r2 = (short[]) r0;

        $i1 = staticinvoke <org.springframework.util.ObjectUtils: int nullSafeHashCode(short[])>($r2);

        return $i1;

     label10:
        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public static int nullSafeHashCode(java.lang.Object[])
    {
        java.lang.Object[] r0;
        int i0, $i1, $i2, i3, i4;
        java.lang.Object $r1;

        r0 := @parameter0: java.lang.Object[];

        if r0 != null goto label1;

        return 0;

     label1:
        i3 = 7;

        i0 = lengthof r0;

        i4 = 0;

        goto label3;

     label2:
        $i1 = 31 * i3;

        $r1 = r0[i4];

        $i2 = staticinvoke <org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>($r1);

        i3 = $i1 + $i2;

        i4 = i4 + 1;

     label3:
        if i4 < i0 goto label2;

        return i3;
    }

    public static int nullSafeHashCode(boolean[])
    {
        boolean[] r0;
        int i0, $i1, $i2, i3, i4;
        boolean $z0;

        r0 := @parameter0: boolean[];

        if r0 != null goto label1;

        return 0;

     label1:
        i3 = 7;

        i0 = lengthof r0;

        i4 = 0;

        goto label3;

     label2:
        $i1 = 31 * i3;

        $z0 = r0[i4];

        $i2 = staticinvoke <org.springframework.util.ObjectUtils: int hashCode(boolean)>($z0);

        i3 = $i1 + $i2;

        i4 = i4 + 1;

     label3:
        if i4 < i0 goto label2;

        return i3;
    }

    public static int nullSafeHashCode(byte[])
    {
        byte[] r0;
        byte $b1;
        int i0, $i2, i3, i4, $i5;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        return 0;

     label1:
        i3 = 7;

        i0 = lengthof r0;

        i4 = 0;

        goto label3;

     label2:
        $i2 = 31 * i3;

        $b1 = r0[i4];

        $i5 = (int) $b1;

        i3 = $i2 + $i5;

        i4 = i4 + 1;

     label3:
        if i4 < i0 goto label2;

        return i3;
    }

    public static int nullSafeHashCode(char[])
    {
        int i0, $i2, i3, i4, $i5;
        char[] r0;
        char $c1;

        r0 := @parameter0: char[];

        if r0 != null goto label1;

        return 0;

     label1:
        i3 = 7;

        i0 = lengthof r0;

        i4 = 0;

        goto label3;

     label2:
        $i2 = 31 * i3;

        $c1 = r0[i4];

        $i5 = (int) $c1;

        i3 = $i2 + $i5;

        i4 = i4 + 1;

     label3:
        if i4 < i0 goto label2;

        return i3;
    }

    public static int nullSafeHashCode(double[])
    {
        double[] r0;
        int i0, $i1, $i2, i3, i4;
        double $d0;

        r0 := @parameter0: double[];

        if r0 != null goto label1;

        return 0;

     label1:
        i3 = 7;

        i0 = lengthof r0;

        i4 = 0;

        goto label3;

     label2:
        $i1 = 31 * i3;

        $d0 = r0[i4];

        $i2 = staticinvoke <org.springframework.util.ObjectUtils: int hashCode(double)>($d0);

        i3 = $i1 + $i2;

        i4 = i4 + 1;

     label3:
        if i4 < i0 goto label2;

        return i3;
    }

    public static int nullSafeHashCode(float[])
    {
        int i0, $i1, $i2, i3, i4;
        float $f0;
        float[] r0;

        r0 := @parameter0: float[];

        if r0 != null goto label1;

        return 0;

     label1:
        i3 = 7;

        i0 = lengthof r0;

        i4 = 0;

        goto label3;

     label2:
        $i1 = 31 * i3;

        $f0 = r0[i4];

        $i2 = staticinvoke <org.springframework.util.ObjectUtils: int hashCode(float)>($f0);

        i3 = $i1 + $i2;

        i4 = i4 + 1;

     label3:
        if i4 < i0 goto label2;

        return i3;
    }

    public static int nullSafeHashCode(int[])
    {
        int[] r0;
        int i0, $i1, $i2, i3, i4;

        r0 := @parameter0: int[];

        if r0 != null goto label1;

        return 0;

     label1:
        i3 = 7;

        i0 = lengthof r0;

        i4 = 0;

        goto label3;

     label2:
        $i2 = 31 * i3;

        $i1 = r0[i4];

        i3 = $i2 + $i1;

        i4 = i4 + 1;

     label3:
        if i4 < i0 goto label2;

        return i3;
    }

    public static int nullSafeHashCode(long[])
    {
        long[] r0;
        int i0, $i2, $i3, i4, i5;
        long $l1;

        r0 := @parameter0: long[];

        if r0 != null goto label1;

        return 0;

     label1:
        i4 = 7;

        i0 = lengthof r0;

        i5 = 0;

        goto label3;

     label2:
        $i2 = 31 * i4;

        $l1 = r0[i5];

        $i3 = staticinvoke <org.springframework.util.ObjectUtils: int hashCode(long)>($l1);

        i4 = $i2 + $i3;

        i5 = i5 + 1;

     label3:
        if i5 < i0 goto label2;

        return i4;
    }

    public static int nullSafeHashCode(short[])
    {
        short $s1;
        int i0, $i2, i3, i4, $i5;
        short[] r0;

        r0 := @parameter0: short[];

        if r0 != null goto label1;

        return 0;

     label1:
        i3 = 7;

        i0 = lengthof r0;

        i4 = 0;

        goto label3;

     label2:
        $i2 = 31 * i3;

        $s1 = r0[i4];

        $i5 = (int) $s1;

        i3 = $i2 + $i5;

        i4 = i4 + 1;

     label3:
        if i4 < i0 goto label2;

        return i3;
    }

    public static int hashCode(boolean)
    {
        short $s0;
        boolean z0;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $s0 = 1231;

        goto label2;

     label1:
        $s0 = 1237;

     label2:
        return $s0;
    }

    public static int hashCode(double)
    {
        int $i1;
        long $l0;
        double d0;

        d0 := @parameter0: double;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        $i1 = staticinvoke <org.springframework.util.ObjectUtils: int hashCode(long)>($l0);

        return $i1;
    }

    public static int hashCode(float)
    {
        int $i0;
        float f0;

        f0 := @parameter0: float;

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        return $i0;
    }

    public static int hashCode(long)
    {
        int $i3;
        long l0, $l1, $l2;

        l0 := @parameter0: long;

        $l1 = l0 >>> 32;

        $l2 = l0 ^ $l1;

        $i3 = (int) $l2;

        return $i3;
    }

    public static java.lang.String identityToString(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.StringBuilder $r1, $r5, $r7;
        java.lang.Class $r2;
        java.lang.String $r3, $r4, $r6, $r8;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return "";

     label1:
        $r1 = new java.lang.StringBuilder;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r6 = staticinvoke <org.springframework.util.ObjectUtils: java.lang.String getIdentityHexString(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static java.lang.String getIdentityHexString(java.lang.Object)
    {
        int $i0;
        java.lang.Object r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Object;

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        return $r1;
    }

    public static java.lang.String getDisplayString(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return "";

     label1:
        $r1 = staticinvoke <org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>(r0);

        return $r1;
    }

    public static java.lang.String nullSafeClassName(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        goto label2;

     label1:
        $r2 = "null";

     label2:
        return $r2;
    }

    public static java.lang.String nullSafeToString(java.lang.Object)
    {
        byte[] $r14;
        int[] $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        short[] $r2;
        java.lang.Object[] $r18;
        double[] $r10;
        float[] $r8;
        long[] $r4;
        java.lang.String $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r20, $r21;
        boolean[] $r16;
        char[] $r12;
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label01;

        return "null";

     label01:
        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label02;

        $r20 = (java.lang.String) r0;

        return $r20;

     label02:
        $z1 = r0 instanceof java.lang.Object[];

        if $z1 == 0 goto label03;

        $r18 = (java.lang.Object[]) r0;

        $r19 = staticinvoke <org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object[])>($r18);

        return $r19;

     label03:
        $z2 = r0 instanceof boolean[];

        if $z2 == 0 goto label04;

        $r16 = (boolean[]) r0;

        $r17 = staticinvoke <org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(boolean[])>($r16);

        return $r17;

     label04:
        $z3 = r0 instanceof byte[];

        if $z3 == 0 goto label05;

        $r14 = (byte[]) r0;

        $r15 = staticinvoke <org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(byte[])>($r14);

        return $r15;

     label05:
        $z4 = r0 instanceof char[];

        if $z4 == 0 goto label06;

        $r12 = (char[]) r0;

        $r13 = staticinvoke <org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(char[])>($r12);

        return $r13;

     label06:
        $z5 = r0 instanceof double[];

        if $z5 == 0 goto label07;

        $r10 = (double[]) r0;

        $r11 = staticinvoke <org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(double[])>($r10);

        return $r11;

     label07:
        $z6 = r0 instanceof float[];

        if $z6 == 0 goto label08;

        $r8 = (float[]) r0;

        $r9 = staticinvoke <org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(float[])>($r8);

        return $r9;

     label08:
        $z7 = r0 instanceof int[];

        if $z7 == 0 goto label09;

        $r6 = (int[]) r0;

        $r7 = staticinvoke <org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(int[])>($r6);

        return $r7;

     label09:
        $z8 = r0 instanceof long[];

        if $z8 == 0 goto label10;

        $r4 = (long[]) r0;

        $r5 = staticinvoke <org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(long[])>($r4);

        return $r5;

     label10:
        $z9 = r0 instanceof short[];

        if $z9 == 0 goto label11;

        $r2 = (short[]) r0;

        $r3 = staticinvoke <org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(short[])>($r2);

        return $r3;

     label11:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        if $r1 == null goto label12;

        $r21 = $r1;

        goto label13;

     label12:
        $r21 = "";

     label13:
        return $r21;
    }

    public static java.lang.String nullSafeToString(java.lang.Object[])
    {
        java.lang.Object[] r0;
        int i0, i1;
        java.lang.StringBuilder $r1;
        java.lang.Object $r2;
        java.lang.String $r3, $r4;

        r0 := @parameter0: java.lang.Object[];

        if r0 != null goto label1;

        return "null";

     label1:
        i0 = lengthof r0;

        if i0 != 0 goto label2;

        return "{}";

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        i1 = 0;

        goto label6;

     label3:
        if i1 != 0 goto label4;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        goto label5;

     label4:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label5:
        $r2 = r0[i1];

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        i1 = i1 + 1;

     label6:
        if i1 < i0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static java.lang.String nullSafeToString(boolean[])
    {
        boolean[] r0;
        int i0, i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @parameter0: boolean[];

        if r0 != null goto label1;

        return "null";

     label1:
        i0 = lengthof r0;

        if i0 != 0 goto label2;

        return "{}";

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        i1 = 0;

        goto label6;

     label3:
        if i1 != 0 goto label4;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        goto label5;

     label4:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label5:
        $z0 = r0[i1];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        i1 = i1 + 1;

     label6:
        if i1 < i0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String nullSafeToString(byte[])
    {
        byte[] r0;
        byte $b1;
        int i0, i2, $i3;
        java.lang.StringBuilder $r3;
        java.lang.String $r2;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        return "null";

     label1:
        i0 = lengthof r0;

        if i0 != 0 goto label2;

        return "{}";

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        i2 = 0;

        goto label6;

     label3:
        if i2 != 0 goto label4;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        goto label5;

     label4:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label5:
        $b1 = r0[i2];

        $i3 = (int) $b1;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        i2 = i2 + 1;

     label6:
        if i2 < i0 goto label3;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String nullSafeToString(char[])
    {
        char $c1;
        int i0, i2;
        char[] r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @parameter0: char[];

        if r0 != null goto label1;

        return "null";

     label1:
        i0 = lengthof r0;

        if i0 != 0 goto label2;

        return "{}";

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        i2 = 0;

        goto label6;

     label3:
        if i2 != 0 goto label4;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        goto label5;

     label4:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label5:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $c1 = r0[i2];

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        i2 = i2 + 1;

     label6:
        if i2 < i0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static java.lang.String nullSafeToString(double[])
    {
        double[] r0;
        int i0, i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        double $d0;

        r0 := @parameter0: double[];

        if r0 != null goto label1;

        return "null";

     label1:
        i0 = lengthof r0;

        if i0 != 0 goto label2;

        return "{}";

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        i1 = 0;

        goto label6;

     label3:
        if i1 != 0 goto label4;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        goto label5;

     label4:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label5:
        $d0 = r0[i1];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        i1 = i1 + 1;

     label6:
        if i1 < i0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String nullSafeToString(float[])
    {
        int i0, i1;
        float $f0;
        float[] r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @parameter0: float[];

        if r0 != null goto label1;

        return "null";

     label1:
        i0 = lengthof r0;

        if i0 != 0 goto label2;

        return "{}";

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        i1 = 0;

        goto label6;

     label3:
        if i1 != 0 goto label4;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        goto label5;

     label4:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label5:
        $f0 = r0[i1];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        i1 = i1 + 1;

     label6:
        if i1 < i0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String nullSafeToString(int[])
    {
        int[] r0;
        int i0, $i1, i2;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @parameter0: int[];

        if r0 != null goto label1;

        return "null";

     label1:
        i0 = lengthof r0;

        if i0 != 0 goto label2;

        return "{}";

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        i2 = 0;

        goto label6;

     label3:
        if i2 != 0 goto label4;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        goto label5;

     label4:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label5:
        $i1 = r0[i2];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        i2 = i2 + 1;

     label6:
        if i2 < i0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String nullSafeToString(long[])
    {
        long[] r0;
        int i0, i2;
        java.lang.StringBuilder $r1;
        long $l1;
        java.lang.String $r2;

        r0 := @parameter0: long[];

        if r0 != null goto label1;

        return "null";

     label1:
        i0 = lengthof r0;

        if i0 != 0 goto label2;

        return "{}";

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        i2 = 0;

        goto label6;

     label3:
        if i2 != 0 goto label4;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        goto label5;

     label4:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label5:
        $l1 = r0[i2];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        i2 = i2 + 1;

     label6:
        if i2 < i0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String nullSafeToString(short[])
    {
        short $s1;
        int i0, i2, $i3;
        java.lang.StringBuilder $r3;
        short[] r0;
        java.lang.String $r2;

        r0 := @parameter0: short[];

        if r0 != null goto label1;

        return "null";

     label1:
        i0 = lengthof r0;

        if i0 != 0 goto label2;

        return "{}";

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        i2 = 0;

        goto label6;

     label3:
        if i2 != 0 goto label4;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        goto label5;

     label4:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label5:
        $s1 = r0[i2];

        $i3 = (int) $s1;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        i2 = i2 + 1;

     label6:
        if i2 < i0 goto label3;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <org.springframework.util.ObjectUtils: java.lang.String ARRAY_ELEMENT_SEPARATOR> = ", ";

        <org.springframework.util.ObjectUtils: java.lang.String EMPTY_ARRAY> = "{}";

        <org.springframework.util.ObjectUtils: java.lang.String ARRAY_END> = "}";

        <org.springframework.util.ObjectUtils: java.lang.String ARRAY_START> = "{";

        <org.springframework.util.ObjectUtils: java.lang.String NULL_STRING> = "null";

        <org.springframework.util.ObjectUtils: java.lang.String EMPTY_STRING> = "";

        <org.springframework.util.ObjectUtils: int MULTIPLIER> = 31;

        <org.springframework.util.ObjectUtils: int INITIAL_HASH> = 7;

        return;
    }
}
