public final class org.waveprotocol.wave.model.util.Preconditions extends java.lang.Object
{
    static final boolean $assertionsDisabled;

    private void <init>()
    {
        org.waveprotocol.wave.model.util.Preconditions r0;

        r0 := @this: org.waveprotocol.wave.model.util.Preconditions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void checkElementIndex(int, int)
    {
        java.lang.IndexOutOfBoundsException $r0, $r8;
        java.lang.AssertionError $r14;
        int i0, i1;
        java.lang.String $r7, $r13;
        boolean $z0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r9, $r10, $r11, $r12;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = <org.waveprotocol.wave.model.util.Preconditions: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i1 >= 0 goto label1;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label1:
        if i0 >= 0 goto label2;

        $r8 = new java.lang.IndexOutOfBoundsException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index (");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") must not be negative");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label2:
        if i0 < i1 goto label3;

        $r0 = new java.lang.IndexOutOfBoundsException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index (");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") must be less than size (");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r0;

     label3:
        return;
    }

    public static void checkPositionIndex(int, int)
    {
        java.lang.IndexOutOfBoundsException $r0, $r8;
        java.lang.AssertionError $r14;
        int i0, i1;
        java.lang.String $r7, $r13;
        boolean $z0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r9, $r10, $r11, $r12;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = <org.waveprotocol.wave.model.util.Preconditions: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i1 >= 0 goto label1;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label1:
        if i0 >= 0 goto label2;

        $r8 = new java.lang.IndexOutOfBoundsException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index (");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") must not be negative");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label2:
        if i0 <= i1 goto label3;

        $r0 = new java.lang.IndexOutOfBoundsException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index (");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") must not be greater than size (");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r0;

     label3:
        return;
    }

    public static void checkPositionIndexesInRange(int, int, int, int)
    {
        java.lang.IndexOutOfBoundsException $r0, $r8, $r16;
        boolean $z0, $z1;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r9, $r10, $r11, $r12, $r13, $r14, $r17, $r18, $r19, $r20, $r21, $r22, $r23;
        java.lang.AssertionError $r25, $r26;
        int i0, i1, i2, i3;
        java.lang.String $r7, $r15, $r24;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $z0 = <org.waveprotocol.wave.model.util.Preconditions: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i1 >= 0 goto label1;

        $r26 = new java.lang.AssertionError;

        specialinvoke $r26.<java.lang.AssertionError: void <init>()>();

        throw $r26;

     label1:
        $z1 = <org.waveprotocol.wave.model.util.Preconditions: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        if i3 >= i1 goto label2;

        $r25 = new java.lang.AssertionError;

        specialinvoke $r25.<java.lang.AssertionError: void <init>()>();

        throw $r25;

     label2:
        if i0 >= i1 goto label3;

        $r16 = new java.lang.IndexOutOfBoundsException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start index (");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("must not be less than start of range (");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r24);

        throw $r16;

     label3:
        if i2 >= i0 goto label4;

        $r8 = new java.lang.IndexOutOfBoundsException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("end index (");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") must not be less than start index (");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r15);

        throw $r8;

     label4:
        if i2 <= i3 goto label5;

        $r0 = new java.lang.IndexOutOfBoundsException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("end index (");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") must not be greater than end of range (");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r0;

     label5:
        return;
    }

    public static void checkPositionIndexes(int, int, int)
    {
        int i0, i1, i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void checkPositionIndexesInRange(int,int,int,int)>(0, i0, i1, i2);

        return;
    }

    public static void nullPointer(java.lang.Object)
    {
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.Object r3;
        java.lang.String $r5;
        java.lang.NullPointerException $r0;

        r3 := @parameter0: java.lang.Object;

        $r0 = new java.lang.NullPointerException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.NullPointerException: void <init>(java.lang.String)>($r5);

        throw $r0;
    }

    public static transient void nullPointer(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r2;
        java.lang.String r1, $r3;
        java.lang.NullPointerException $r0;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r0 = new java.lang.NullPointerException;

        $r3 = staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        specialinvoke $r0.<java.lang.NullPointerException: void <init>(java.lang.String)>($r3);

        throw $r0;
    }

    public static java.lang.Object checkNotNull(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r4;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r6;
        java.lang.NullPointerException $r1;

        r0 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $r1 = new java.lang.NullPointerException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label1:
        return r0;
    }

    public static transient java.lang.Object checkNotNull(java.lang.Object, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r3;
        java.lang.Object r0;
        java.lang.String r2, $r4;
        java.lang.NullPointerException $r1;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        if r0 != null goto label1;

        $r1 = new java.lang.NullPointerException;

        $r4 = staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, r3);

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>($r4);

        throw $r1;

     label1:
        return r0;
    }

    public static void illegalArgument(java.lang.Object)
    {
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.Object r3;
        java.lang.String $r5;
        java.lang.IllegalArgumentException $r0;

        r3 := @parameter0: java.lang.Object;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r0;
    }

    public static transient void illegalArgument(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r2;
        java.lang.String r1, $r3;
        java.lang.IllegalArgumentException $r0;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r0 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r0;
    }

    public static void checkArgument(boolean, java.lang.Object)
    {
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.Object r3;
        java.lang.String $r5;
        java.lang.IllegalArgumentException $r0;
        boolean z0;

        z0 := @parameter0: boolean;

        r3 := @parameter1: java.lang.Object;

        if z0 != 0 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r0;

     label1:
        return;
    }

    public static transient void checkArgument(boolean, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r2;
        java.lang.String r1, $r3;
        java.lang.IllegalArgumentException $r0;
        boolean z0;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        if z0 != 0 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r0;

     label1:
        return;
    }

    public static void illegalState(java.lang.Object)
    {
        java.lang.IllegalStateException $r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.Object r3;
        java.lang.String $r5;

        r3 := @parameter0: java.lang.Object;

        $r0 = new java.lang.IllegalStateException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r0;
    }

    public static transient void illegalState(java.lang.String, java.lang.Object[])
    {
        java.lang.IllegalStateException $r0;
        java.lang.Object[] r2;
        java.lang.String r1, $r3;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r0 = new java.lang.IllegalStateException;

        $r3 = staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r0;
    }

    public static void checkState(boolean, java.lang.Object)
    {
        java.lang.IllegalStateException $r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.Object r3;
        java.lang.String $r5;
        boolean z0;

        z0 := @parameter0: boolean;

        r3 := @parameter1: java.lang.Object;

        if z0 != 0 goto label1;

        $r0 = new java.lang.IllegalStateException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r0;

     label1:
        return;
    }

    public static transient void checkState(boolean, java.lang.String, java.lang.Object[])
    {
        java.lang.IllegalStateException $r0;
        java.lang.Object[] r2;
        java.lang.String r1, $r3;
        boolean z0;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        if z0 != 0 goto label1;

        $r0 = new java.lang.IllegalStateException;

        $r3 = staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r0;

     label1:
        return;
    }

    static transient java.lang.String format(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, $i14;
        java.lang.String $r0, $r3, $r4, $r7, r9;
        java.lang.Object $r5, $r6, $r8;
        java.lang.StringBuilder $r10;

        r9 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r9);

        $r10 = new java.lang.StringBuilder;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = lengthof r2;

        $i2 = 16 * $i1;

        $i3 = $i0 + $i2;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(int)>($i3);

        i10 = 0;

        i11 = 0;

     label1:
        $i4 = lengthof r2;

        if i11 >= $i4 goto label3;

        $i8 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String,int)>("%s", i10);

        $i14 = (int) -1;

        if $i8 != $i14 goto label2;

        goto label3;

     label2:
        $r7 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(i10, $i8);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $i9 = i11;

        i11 = i11 + 1;

        $r8 = r2[$i9];

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        i10 = $i8 + 2;

        goto label1;

     label3:
        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(i10);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $i5 = lengthof r2;

        if i11 >= $i5 goto label6;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        i12 = i11 + 1;

        $r5 = r2[i11];

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

     label4:
        $i6 = lengthof r2;

        if i12 >= $i6 goto label5;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i7 = i12;

        i12 = i12 + 1;

        $r6 = r2[$i7];

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        goto label4;

     label5:
        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

     label6:
        $r4 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/model/util/Preconditions;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.model.util.Preconditions: boolean $assertionsDisabled> = $z1;

        return;
    }
}
