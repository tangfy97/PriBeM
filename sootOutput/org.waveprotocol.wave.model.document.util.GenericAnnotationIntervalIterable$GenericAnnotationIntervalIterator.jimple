class org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator extends java.lang.Object implements java.util.Iterator
{
    private final org.waveprotocol.wave.model.document.ReadableAnnotationSet set;
    private final int end;
    private final java.util.Queue entries;
    private org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl interval;
    private int intervalStart;
    private final org.waveprotocol.wave.model.util.StringMap annotationsHere;
    private final org.waveprotocol.wave.model.util.StringMap diffFromLeft;
    boolean first;
    static final boolean $assertionsDisabled;

    private boolean valuesEqual(java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator r2;
        java.lang.Object r0, r1;
        boolean $z0, $z1;

        r2 := @this: org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label3;

        if r1 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public void <init>(org.waveprotocol.wave.model.document.ReadableAnnotationSet, int, int, org.waveprotocol.wave.model.util.ReadableStringSet)
    {
        org.waveprotocol.wave.model.document.ReadableAnnotationSet r2;
        org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator r0;
        java.util.PriorityQueue $r1;
        org.waveprotocol.wave.model.util.StringMap $r4, $r5;
        org.waveprotocol.wave.model.util.ReadableStringSet r3;
        int i0, i1, $i2;
        org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator$1 $r6;

        r0 := @this: org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator;

        r2 := @parameter0: org.waveprotocol.wave.model.document.ReadableAnnotationSet;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r3 := @parameter3: org.waveprotocol.wave.model.util.ReadableStringSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.PriorityQueue;

        specialinvoke $r1.<java.util.PriorityQueue: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: java.util.Queue entries> = $r1;

        r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl interval> = null;

        r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: boolean first> = 1;

        $i2 = interfaceinvoke r2.<org.waveprotocol.wave.model.document.ReadableAnnotationSet: int size()>();

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void checkPositionIndexes(int,int,int)>(i0, i1, $i2);

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r3, "GenericAnnotationIntervalIterator: Key set must not be null");

        r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: org.waveprotocol.wave.model.document.ReadableAnnotationSet set> = r2;

        r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: int end> = i1;

        $r4 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: org.waveprotocol.wave.model.util.StringMap createStringMap()>();

        r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: org.waveprotocol.wave.model.util.StringMap annotationsHere> = $r4;

        $r5 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: org.waveprotocol.wave.model.util.StringMap createStringMap()>();

        r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: org.waveprotocol.wave.model.util.StringMap diffFromLeft> = $r5;

        r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: int intervalStart> = i0;

        if i0 < i1 goto label1;

        r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: boolean first> = 0;

        return;

     label1:
        $r6 = new org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator$1;

        specialinvoke $r6.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator$1: void <init>(org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator,org.waveprotocol.wave.model.document.ReadableAnnotationSet,int,int)>(r0, r2, i0, i1);

        interfaceinvoke r3.<org.waveprotocol.wave.model.util.ReadableStringSet: void each(org.waveprotocol.wave.model.util.ReadableStringSet$Proc)>($r6);

        return;
    }

    public boolean hasNext()
    {
        org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator r0;
        java.util.Queue $r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator;

        $z0 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: boolean first>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: java.util.Queue entries>;

        $z1 = interfaceinvoke $r1.<java.util.Queue: boolean isEmpty()>();

        if $z1 != 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public org.waveprotocol.wave.model.document.AnnotationInterval next()
    {
        org.waveprotocol.wave.model.document.ReadableAnnotationSet $r4, $r8;
        org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator r0;
        org.waveprotocol.wave.model.util.StringMap $r1, $r6, $r7, $r11, $r12, $r16, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl $r13, $r14, $r34, $r38;
        org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator$KeyEntry $r20, $r23, $r24, $r31;
        java.util.Queue $r2, $r9, $r10, $r18, $r21, $r25, $r28, $r29;
        java.lang.AssertionError $r36, $r37;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i10;
        java.lang.String $r26;
        java.util.NoSuchElementException $r35;
        java.lang.Object $r3, $r5, $r19, $r22, $r30;

        r0 := @this: org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator;

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: boolean hasNext()>();

        if $z0 != 0 goto label01;

        $r35 = new java.util.NoSuchElementException;

        specialinvoke $r35.<java.util.NoSuchElementException: void <init>(java.lang.String)>("No more intervals");

        throw $r35;

     label01:
        i0 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: int intervalStart>;

        $z1 = <org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $i7 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: int end>;

        if i0 < $i7 goto label02;

        $r36 = new java.lang.AssertionError;

        specialinvoke $r36.<java.lang.AssertionError: void <init>()>();

        throw $r36;

     label02:
        $z2 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: boolean first>;

        if $z2 != 1 goto label05;

        $r28 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: java.util.Queue entries>;

        $z6 = interfaceinvoke $r28.<java.util.Queue: boolean isEmpty()>();

        if $z6 == 0 goto label03;

        i8 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: int end>;

        goto label04;

     label03:
        $r29 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: java.util.Queue entries>;

        $r30 = interfaceinvoke $r29.<java.util.Queue: java.lang.Object peek()>();

        $r31 = (org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator$KeyEntry) $r30;

        i8 = $r31.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator$KeyEntry: int nextChange>;

     label04:
        r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: boolean first> = 0;

        goto label11;

     label05:
        $r1 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: org.waveprotocol.wave.model.util.StringMap diffFromLeft>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.util.StringMap: void clear()>();

     label06:
        $r2 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: java.util.Queue entries>;

        $r3 = interfaceinvoke $r2.<java.util.Queue: java.lang.Object remove()>();

        $r24 = (org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator$KeyEntry) $r3;

        $z3 = <org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: boolean $assertionsDisabled>;

        if $z3 != 0 goto label07;

        $i6 = $r24.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator$KeyEntry: int nextChange>;

        if i0 == $i6 goto label07;

        $r37 = new java.lang.AssertionError;

        specialinvoke $r37.<java.lang.AssertionError: void <init>()>();

        throw $r37;

     label07:
        $r26 = $r24.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator$KeyEntry: java.lang.String key>;

        $r4 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: org.waveprotocol.wave.model.document.ReadableAnnotationSet set>;

        $r5 = interfaceinvoke $r4.<org.waveprotocol.wave.model.document.ReadableAnnotationSet: java.lang.Object getAnnotation(int,java.lang.String)>(i0, $r26);

        $r6 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: org.waveprotocol.wave.model.util.StringMap diffFromLeft>;

        interfaceinvoke $r6.<org.waveprotocol.wave.model.util.StringMap: void put(java.lang.String,java.lang.Object)>($r26, $r5);

        $r7 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: org.waveprotocol.wave.model.util.StringMap annotationsHere>;

        interfaceinvoke $r7.<org.waveprotocol.wave.model.util.StringMap: void put(java.lang.String,java.lang.Object)>($r26, $r5);

        $r8 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: org.waveprotocol.wave.model.document.ReadableAnnotationSet set>;

        $i2 = i0 + 1;

        $i1 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: int end>;

        $i3 = interfaceinvoke $r8.<org.waveprotocol.wave.model.document.ReadableAnnotationSet: int firstAnnotationChange(int,int,java.lang.String,java.lang.Object)>($i2, $i1, $r26, $r5);

        $r24.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator$KeyEntry: int nextChange> = $i3;

        $i4 = $r24.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator$KeyEntry: int nextChange>;

        $i10 = (int) -1;

        if $i4 == $i10 goto label08;

        $r25 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: java.util.Queue entries>;

        interfaceinvoke $r25.<java.util.Queue: boolean add(java.lang.Object)>($r24);

     label08:
        $r9 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: java.util.Queue entries>;

        $z4 = interfaceinvoke $r9.<java.util.Queue: boolean isEmpty()>();

        if $z4 != 0 goto label09;

        $r21 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: java.util.Queue entries>;

        $r22 = interfaceinvoke $r21.<java.util.Queue: java.lang.Object peek()>();

        $r23 = (org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator$KeyEntry) $r22;

        $i5 = $r23.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator$KeyEntry: int nextChange>;

        if $i5 == i0 goto label06;

     label09:
        $r10 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: java.util.Queue entries>;

        $z5 = interfaceinvoke $r10.<java.util.Queue: boolean isEmpty()>();

        if $z5 != 0 goto label10;

        $r18 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: java.util.Queue entries>;

        $r19 = interfaceinvoke $r18.<java.util.Queue: java.lang.Object peek()>();

        $r20 = (org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator$KeyEntry) $r19;

        i8 = $r20.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator$KeyEntry: int nextChange>;

        goto label11;

     label10:
        i8 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: int end>;

     label11:
        $r34 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl interval>;

        if $r34 != null goto label12;

        $r38 = new org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl;

        $r17 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: org.waveprotocol.wave.model.util.StringMap annotationsHere>;

        $r16 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: org.waveprotocol.wave.model.util.StringMap diffFromLeft>;

        specialinvoke $r38.<org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl: void <init>(int,int,org.waveprotocol.wave.model.util.ReadableStringMap,org.waveprotocol.wave.model.util.ReadableStringMap)>(i0, i8, $r17, $r16);

        r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl interval> = $r38;

        goto label13;

     label12:
        $r13 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl interval>;

        $r12 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: org.waveprotocol.wave.model.util.StringMap annotationsHere>;

        $r11 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: org.waveprotocol.wave.model.util.StringMap diffFromLeft>;

        virtualinvoke $r13.<org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl: void set(int,int,org.waveprotocol.wave.model.util.ReadableStringMap,org.waveprotocol.wave.model.util.ReadableStringMap)>(i0, i8, $r12, $r11);

     label13:
        r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: int intervalStart> = i8;

        $r14 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl interval>;

        return $r14;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator r1;

        r1 := @this: org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Removing an annotation interval is not supported");

        throw $r0;
    }

    public volatile java.lang.Object next()
    {
        org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator r0;
        org.waveprotocol.wave.model.document.AnnotationInterval $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: org.waveprotocol.wave.model.document.AnnotationInterval next()>();

        return $r1;
    }

    static boolean access$000(org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator, java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator r0;
        java.lang.Object r1, r2;
        boolean $z0;

        r0 := @parameter0: org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $z0 = specialinvoke r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: boolean valuesEqual(java.lang.Object,java.lang.Object)>(r1, r2);

        return $z0;
    }

    static org.waveprotocol.wave.model.util.StringMap access$100(org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator)
    {
        org.waveprotocol.wave.model.util.StringMap $r1;
        org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator r0;

        r0 := @parameter0: org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator;

        $r1 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: org.waveprotocol.wave.model.util.StringMap diffFromLeft>;

        return $r1;
    }

    static org.waveprotocol.wave.model.util.StringMap access$200(org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator)
    {
        org.waveprotocol.wave.model.util.StringMap $r1;
        org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator r0;

        r0 := @parameter0: org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator;

        $r1 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: org.waveprotocol.wave.model.util.StringMap annotationsHere>;

        return $r1;
    }

    static java.util.Queue access$400(org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator)
    {
        java.util.Queue $r1;
        org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator r0;

        r0 := @parameter0: org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator;

        $r1 = r0.<org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: java.util.Queue entries>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/model/document/util/GenericAnnotationIntervalIterable;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.model.document.util.GenericAnnotationIntervalIterable$GenericAnnotationIntervalIterator: boolean $assertionsDisabled> = $z1;

        return;
    }
}
