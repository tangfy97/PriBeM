final class com.mycila.inject.internal.asm.xml.ASMContentHandler$FieldRule extends com.mycila.inject.internal.asm.xml.ASMContentHandler$Rule
{
    private final com.mycila.inject.internal.asm.xml.ASMContentHandler this$0;

    void <init>(com.mycila.inject.internal.asm.xml.ASMContentHandler)
    {
        com.mycila.inject.internal.asm.xml.ASMContentHandler$FieldRule r0;
        com.mycila.inject.internal.asm.xml.ASMContentHandler r1;

        r0 := @this: com.mycila.inject.internal.asm.xml.ASMContentHandler$FieldRule;

        r1 := @parameter0: com.mycila.inject.internal.asm.xml.ASMContentHandler;

        specialinvoke r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$Rule: void <init>(com.mycila.inject.internal.asm.xml.ASMContentHandler)>(r1);

        r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$FieldRule: com.mycila.inject.internal.asm.xml.ASMContentHandler this$0> = r1;

        return;
    }

    public final void begin(java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.mycila.inject.internal.asm.xml.ASMContentHandler $r8, $r10;
        com.mycila.inject.internal.asm.FieldVisitor $r11;
        com.mycila.inject.internal.asm.xml.ASMContentHandler$FieldRule r0;
        org.xml.sax.Attributes r1;
        int $i0;
        java.lang.Object $r7;
        java.lang.String $r2, $r3, $r4, $r5, $r6, r12;
        com.mycila.inject.internal.asm.ClassWriter $r9;

        r0 := @this: com.mycila.inject.internal.asm.xml.ASMContentHandler$FieldRule;

        r12 := @parameter0: java.lang.String;

        r1 := @parameter1: org.xml.sax.Attributes;

        $r2 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("access");

        $i0 = virtualinvoke r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$FieldRule: int getAccess(java.lang.String)>($r2);

        $r3 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("name");

        $r4 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("signature");

        $r5 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("desc");

        $r6 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("value");

        $r7 = virtualinvoke r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$FieldRule: java.lang.Object getValue(java.lang.String,java.lang.String)>($r5, $r6);

        $r10 = r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$FieldRule: com.mycila.inject.internal.asm.xml.ASMContentHandler this$0>;

        $r8 = r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$FieldRule: com.mycila.inject.internal.asm.xml.ASMContentHandler this$0>;

        $r9 = $r8.<com.mycila.inject.internal.asm.xml.ASMContentHandler: com.mycila.inject.internal.asm.ClassWriter cw>;

        $r11 = virtualinvoke $r9.<com.mycila.inject.internal.asm.ClassWriter: com.mycila.inject.internal.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>($i0, $r3, $r5, $r4, $r7);

        virtualinvoke $r10.<com.mycila.inject.internal.asm.xml.ASMContentHandler: void push(java.lang.Object)>($r11);

        return;
    }

    public void end(java.lang.String)
    {
        com.mycila.inject.internal.asm.FieldVisitor $r3;
        com.mycila.inject.internal.asm.xml.ASMContentHandler$FieldRule r0;
        java.lang.Object $r2;
        java.lang.String r4;
        com.mycila.inject.internal.asm.xml.ASMContentHandler $r1;

        r0 := @this: com.mycila.inject.internal.asm.xml.ASMContentHandler$FieldRule;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$FieldRule: com.mycila.inject.internal.asm.xml.ASMContentHandler this$0>;

        $r2 = virtualinvoke $r1.<com.mycila.inject.internal.asm.xml.ASMContentHandler: java.lang.Object pop()>();

        $r3 = (com.mycila.inject.internal.asm.FieldVisitor) $r2;

        interfaceinvoke $r3.<com.mycila.inject.internal.asm.FieldVisitor: void visitEnd()>();

        return;
    }
}
