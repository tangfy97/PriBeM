public class org.gagravarr.speex.SpeexTags extends org.gagravarr.vorbis.VorbisStyleComments implements org.gagravarr.speex.SpeexPacket
{

    public void <init>(org.gagravarr.ogg.OggPacket)
    {
        byte $b2;
        org.gagravarr.speex.SpeexTags r0;
        org.gagravarr.ogg.OggPacket r1;
        int $i0;
        long $l1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.gagravarr.speex.SpeexTags;

        r1 := @parameter0: org.gagravarr.ogg.OggPacket;

        specialinvoke r0.<org.gagravarr.vorbis.VorbisStyleComments: void <init>(org.gagravarr.ogg.OggPacket,int)>(r1, 0);

        $i0 = virtualinvoke r1.<org.gagravarr.ogg.OggPacket: int getSequenceNumber()>();

        if $i0 == 1 goto label1;

        $l1 = virtualinvoke r1.<org.gagravarr.ogg.OggPacket: long getGranulePosition()>();

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid packet details, not Speex Tags");

        throw $r2;

     label1:
        return;
    }

    public void <init>()
    {
        org.gagravarr.speex.SpeexTags r0;

        r0 := @this: org.gagravarr.speex.SpeexTags;

        specialinvoke r0.<org.gagravarr.vorbis.VorbisStyleComments: void <init>()>();

        return;
    }

    protected int getHeaderSize()
    {
        org.gagravarr.speex.SpeexTags r0;

        r0 := @this: org.gagravarr.speex.SpeexTags;

        return 0;
    }

    protected void populateMetadataHeader(byte[], int)
    {
        int i0;
        byte[] r1;
        org.gagravarr.speex.SpeexTags r0;

        r0 := @this: org.gagravarr.speex.SpeexTags;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        return;
    }

    protected void populateMetadataFooter(java.io.OutputStream)
    {
        java.io.OutputStream r1;
        org.gagravarr.speex.SpeexTags r0;

        r0 := @this: org.gagravarr.speex.SpeexTags;

        r1 := @parameter0: java.io.OutputStream;

        return;
    }
}
