final class com.google.inject.internal.DefaultConstructionProxyFactory extends java.lang.Object implements com.google.inject.internal.ConstructionProxyFactory
{
    private final com.google.inject.spi.InjectionPoint injectionPoint;

    void <init>(com.google.inject.spi.InjectionPoint)
    {
        com.google.inject.internal.DefaultConstructionProxyFactory r0;
        com.google.inject.spi.InjectionPoint r1;

        r0 := @this: com.google.inject.internal.DefaultConstructionProxyFactory;

        r1 := @parameter0: com.google.inject.spi.InjectionPoint;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.inject.internal.DefaultConstructionProxyFactory: com.google.inject.spi.InjectionPoint injectionPoint> = r1;

        return;
    }

    public com.google.inject.internal.ConstructionProxy create()
    {
        com.google.inject.internal.cglib.reflect.$FastClass $r7;
        java.lang.reflect.Member $r2;
        com.google.inject.internal.DefaultConstructionProxyFactory$2 $r4;
        com.google.inject.internal.DefaultConstructionProxyFactory r0;
        java.lang.reflect.Constructor r3;
        com.google.inject.internal.cglib.reflect.$FastConstructor $r8;
        com.google.inject.internal.cglib.core.$CodeGenerationException $r10;
        com.google.inject.spi.InjectionPoint $r1;
        int $i0, $i1;
        com.google.inject.internal.DefaultConstructionProxyFactory$1 $r9;
        java.lang.Class $r5;
        com.google.inject.internal.BytecodeGen$Visibility $r6;
        boolean $z0, $z1;

        r0 := @this: com.google.inject.internal.DefaultConstructionProxyFactory;

        $r1 = r0.<com.google.inject.internal.DefaultConstructionProxyFactory: com.google.inject.spi.InjectionPoint injectionPoint>;

        $r2 = virtualinvoke $r1.<com.google.inject.spi.InjectionPoint: java.lang.reflect.Member getMember()>();

        r3 = (java.lang.reflect.Constructor) $r2;

        $i0 = virtualinvoke r3.<java.lang.reflect.Constructor: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i0);

        if $z0 == 0 goto label5;

        $r5 = virtualinvoke r3.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>();

     label1:
        $r6 = staticinvoke <com.google.inject.internal.BytecodeGen$Visibility: com.google.inject.internal.BytecodeGen$Visibility forMember(java.lang.reflect.Member)>(r3);

        $r7 = staticinvoke <com.google.inject.internal.BytecodeGen: com.google.inject.internal.cglib.reflect.$FastClass newFastClass(java.lang.Class,com.google.inject.internal.BytecodeGen$Visibility)>($r5, $r6);

        $r8 = virtualinvoke $r7.<com.google.inject.internal.cglib.reflect.$FastClass: com.google.inject.internal.cglib.reflect.$FastConstructor getConstructor(java.lang.reflect.Constructor)>(r3);

        $r9 = new com.google.inject.internal.DefaultConstructionProxyFactory$1;

        specialinvoke $r9.<com.google.inject.internal.DefaultConstructionProxyFactory$1: void <init>(com.google.inject.internal.DefaultConstructionProxyFactory,com.google.inject.internal.cglib.reflect.$FastConstructor,java.lang.reflect.Constructor)>(r0, $r8, r3);

     label2:
        return $r9;

     label3:
        $r10 := @caughtexception;

        $i1 = virtualinvoke $r5.<java.lang.Class: int getModifiers()>();

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i1);

        if $z1 != 0 goto label4;

        virtualinvoke r3.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

     label4:
        goto label6;

     label5:
        virtualinvoke r3.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

     label6:
        $r4 = new com.google.inject.internal.DefaultConstructionProxyFactory$2;

        specialinvoke $r4.<com.google.inject.internal.DefaultConstructionProxyFactory$2: void <init>(com.google.inject.internal.DefaultConstructionProxyFactory,java.lang.reflect.Constructor)>(r0, r3);

        return $r4;

        catch com.google.inject.internal.cglib.core.$CodeGenerationException from label1 to label2 with label3;
    }

    static com.google.inject.spi.InjectionPoint access$000(com.google.inject.internal.DefaultConstructionProxyFactory)
    {
        com.google.inject.internal.DefaultConstructionProxyFactory r0;
        com.google.inject.spi.InjectionPoint $r1;

        r0 := @parameter0: com.google.inject.internal.DefaultConstructionProxyFactory;

        $r1 = r0.<com.google.inject.internal.DefaultConstructionProxyFactory: com.google.inject.spi.InjectionPoint injectionPoint>;

        return $r1;
    }
}
