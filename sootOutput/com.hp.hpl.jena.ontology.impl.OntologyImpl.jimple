public class com.hp.hpl.jena.ontology.impl.OntologyImpl extends com.hp.hpl.jena.ontology.impl.OntResourceImpl implements com.hp.hpl.jena.ontology.Ontology
{
    public static com.hp.hpl.jena.enhanced.Implementation factory;

    public void <init>(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.enhanced.EnhGraph)
    {
        com.hp.hpl.jena.ontology.impl.OntologyImpl r0;
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.enhanced.EnhGraph r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntologyImpl;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.enhanced.EnhGraph;

        specialinvoke r0.<com.hp.hpl.jena.ontology.impl.OntResourceImpl: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.enhanced.EnhGraph)>(r1, r2);

        return;
    }

    public void setImport(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.impl.OntologyImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntologyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property IMPORTS()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: void setPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "IMPORTS", r3);

        return;
    }

    public void addImport(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.impl.OntologyImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntologyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property IMPORTS()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: void addPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "IMPORTS", r3);

        return;
    }

    public com.hp.hpl.jena.ontology.OntResource getImport()
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.impl.OntologyImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.OntResource $r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntologyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property IMPORTS()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.OntResource objectAsResource(com.hp.hpl.jena.rdf.model.Property,java.lang.String)>($r2, "IMPORTS");

        return $r3;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listImports()
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r3;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.impl.OntologyImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntologyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property IMPORTS()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listAs(com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.Class)>($r2, "IMPORTS", class "Lcom/hp/hpl/jena/ontology/OntResource;");

        return $r3;
    }

    public boolean imports(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.impl.OntologyImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntologyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property IMPORTS()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: boolean hasPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "IMPORTS", r3);

        return $z0;
    }

    public void removeImport(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.impl.OntologyImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntologyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property IMPORTS()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: void removePropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "IMPORTS", r3);

        return;
    }

    public void setBackwardCompatibleWith(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.impl.OntologyImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntologyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property BACKWARD_COMPATIBLE_WITH()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: void setPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "BACKWARD_COMPATIBLE_WITH", r3);

        return;
    }

    public void addBackwardCompatibleWith(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.impl.OntologyImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntologyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property BACKWARD_COMPATIBLE_WITH()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: void addPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "BACKWARD_COMPATIBLE_WITH", r3);

        return;
    }

    public com.hp.hpl.jena.ontology.OntResource getBackwardCompatibleWith()
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.impl.OntologyImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.OntResource $r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntologyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property BACKWARD_COMPATIBLE_WITH()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.OntResource objectAsResource(com.hp.hpl.jena.rdf.model.Property,java.lang.String)>($r2, "BACKWARD_COMPATIBLE_WITH");

        return $r3;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listBackwardCompatibleWith()
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r3;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.impl.OntologyImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntologyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property BACKWARD_COMPATIBLE_WITH()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listAs(com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.Class)>($r2, "BACKWARD_COMPATIBLE_WITH", class "Lcom/hp/hpl/jena/ontology/OntResource;");

        return $r3;
    }

    public boolean isBackwardCompatibleWith(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.impl.OntologyImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntologyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property BACKWARD_COMPATIBLE_WITH()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: boolean hasPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "BACKWARD_COMPATIBLE_WITH", r3);

        return $z0;
    }

    public void removeBackwardCompatibleWith(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.impl.OntologyImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntologyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property BACKWARD_COMPATIBLE_WITH()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: void removePropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "BACKWARD_COMPATIBLE_WITH", r3);

        return;
    }

    public void setPriorVersion(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.impl.OntologyImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntologyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property PRIOR_VERSION()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: void setPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "PRIOR_VERSION", r3);

        return;
    }

    public void addPriorVersion(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.impl.OntologyImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntologyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property PRIOR_VERSION()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: void addPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "PRIOR_VERSION", r3);

        return;
    }

    public com.hp.hpl.jena.ontology.OntResource getPriorVersion()
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.impl.OntologyImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.OntResource $r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntologyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property PRIOR_VERSION()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.OntResource objectAsResource(com.hp.hpl.jena.rdf.model.Property,java.lang.String)>($r2, "PRIOR_VERSION");

        return $r3;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listPriorVersion()
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r3;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.impl.OntologyImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntologyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property PRIOR_VERSION()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listAs(com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.Class)>($r2, "PRIOR_VERSION", class "Lcom/hp/hpl/jena/ontology/OntResource;");

        return $r3;
    }

    public boolean hasPriorVersion(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.impl.OntologyImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntologyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property PRIOR_VERSION()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: boolean hasPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "PRIOR_VERSION", r3);

        return $z0;
    }

    public void removePriorVersion(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.impl.OntologyImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntologyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property PRIOR_VERSION()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: void removePropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "PRIOR_VERSION", r3);

        return;
    }

    public void setIncompatibleWith(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.impl.OntologyImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntologyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property INCOMPATIBLE_WITH()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: void setPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "INCOMPATIBLE_WITH", r3);

        return;
    }

    public void addIncompatibleWith(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.impl.OntologyImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntologyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property INCOMPATIBLE_WITH()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: void addPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "INCOMPATIBLE_WITH", r3);

        return;
    }

    public com.hp.hpl.jena.ontology.OntResource getIncompatibleWith()
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.impl.OntologyImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.OntResource $r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntologyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property INCOMPATIBLE_WITH()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.OntResource objectAsResource(com.hp.hpl.jena.rdf.model.Property,java.lang.String)>($r2, "INCOMPATIBLE_WITH");

        return $r3;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listIncompatibleWith()
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r3;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.impl.OntologyImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntologyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property INCOMPATIBLE_WITH()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listAs(com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.Class)>($r2, "INCOMPATIBLE_WITH", class "Lcom/hp/hpl/jena/ontology/OntResource;");

        return $r3;
    }

    public boolean isIncompatibleWith(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.impl.OntologyImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntologyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property INCOMPATIBLE_WITH()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: boolean hasPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "INCOMPATIBLE_WITH", r3);

        return $z0;
    }

    public void removeIncompatibleWith(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.impl.OntologyImpl r0;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntologyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property INCOMPATIBLE_WITH()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl: void removePropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "INCOMPATIBLE_WITH", r3);

        return;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.ontology.impl.OntologyImpl$1 $r0;

        $r0 = new com.hp.hpl.jena.ontology.impl.OntologyImpl$1;

        specialinvoke $r0.<com.hp.hpl.jena.ontology.impl.OntologyImpl$1: void <init>()>();

        <com.hp.hpl.jena.ontology.impl.OntologyImpl: com.hp.hpl.jena.enhanced.Implementation factory> = $r0;

        return;
    }
}
