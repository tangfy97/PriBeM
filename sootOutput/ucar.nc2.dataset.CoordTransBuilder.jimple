public class ucar.nc2.dataset.CoordTransBuilder extends java.lang.Object
{
    private static org.slf4j.Logger log;
    private static java.util.List transformList;
    private static boolean userMode;
    private static boolean loadWarnings;

    public void <init>()
    {
        ucar.nc2.dataset.CoordTransBuilder r0;

        r0 := @this: ucar.nc2.dataset.CoordTransBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void registerTransform(java.lang.String, java.lang.Class)
    {
        java.lang.InstantiationException $r22;
        boolean $z0, $z1;
        java.lang.IllegalAccessException $r14;
        java.util.List $r4, $r6;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r16, $r17, $r19, $r20, $r24, $r25, $r27, $r28;
        ucar.nc2.dataset.CoordTransBuilder$Transform $r2, $r5;
        java.lang.String r3, $r10, $r13, $r18, $r21, $r26, $r29;
        java.lang.IllegalArgumentException $r7, $r15, $r23;
        java.lang.Class r0, $r1;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Class;

        $r1 = class "Lucar/nc2/dataset/CoordTransBuilderIF;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 != 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class ");

        $r10 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must implement CoordTransBuilderIF");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r7;

     label1:
        virtualinvoke r0.<java.lang.Class: java.lang.Object newInstance()>();

     label2:
        goto label5;

     label3:
        $r22 := @caughtexception;

        $r23 = new java.lang.IllegalArgumentException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CoordTransBuilderIF Class ");

        $r26 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot instantiate, probably need default Constructor");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r29);

        throw $r23;

     label4:
        $r14 := @caughtexception;

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CoordTransBuilderIF Class ");

        $r18 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not accessible");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r15;

     label5:
        $z1 = <ucar.nc2.dataset.CoordTransBuilder: boolean userMode>;

        if $z1 == 0 goto label6;

        $r6 = <ucar.nc2.dataset.CoordTransBuilder: java.util.List transformList>;

        $r5 = new ucar.nc2.dataset.CoordTransBuilder$Transform;

        specialinvoke $r5.<ucar.nc2.dataset.CoordTransBuilder$Transform: void <init>(java.lang.String,java.lang.Class)>(r3, r0);

        interfaceinvoke $r6.<java.util.List: void add(int,java.lang.Object)>(0, $r5);

        goto label7;

     label6:
        $r4 = <ucar.nc2.dataset.CoordTransBuilder: java.util.List transformList>;

        $r2 = new ucar.nc2.dataset.CoordTransBuilder$Transform;

        specialinvoke $r2.<ucar.nc2.dataset.CoordTransBuilder$Transform: void <init>(java.lang.String,java.lang.Class)>(r3, r0);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r2);

     label7:
        return;

        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
    }

    public static void registerTransform(java.lang.String, java.lang.String) throws java.lang.ClassNotFoundException
    {
        java.lang.Class $r1;
        java.lang.String r0, r2;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.Class)>(r2, $r1);

        return;
    }

    public static void registerTransformMaybe(java.lang.String, java.lang.String)
    {
        org.slf4j.Logger $r4;
        java.lang.ClassNotFoundException $r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r7;
        java.lang.Class r9;
        java.lang.String r0, r1, $r8;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r9 = null;

     label1:
        r9 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r4 = <ucar.nc2.dataset.CoordTransBuilder: org.slf4j.Logger log>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Coordinate Transform Class ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void warn(java.lang.String)>($r8);

     label4:
        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.Class)>(r1, r9);

        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static ucar.nc2.dataset.CoordinateTransform makeCoordinateTransform(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Variable, java.util.Formatter, java.util.Formatter)
    {
        java.util.Formatter r7, r9;
        java.lang.InstantiationException $r25;
        boolean $z0, $z1;
        java.lang.IllegalAccessException $r18;
        java.util.List $r4;
        java.lang.StringBuilder $r19, $r21, $r23, $r26, $r28, $r30;
        ucar.nc2.dataset.CoordTransBuilder$Transform r34;
        java.lang.Object[] $r10, $r12, $r14, $r17;
        ucar.nc2.dataset.CoordinateTransform $r8;
        ucar.nc2.Variable r1;
        java.lang.String $r2, $r3, $r11, $r13, $r16, $r22, $r24, $r29, $r31, r32;
        ucar.nc2.dataset.CoordTransBuilderIF r35;
        org.slf4j.Logger $r20, $r27;
        java.util.Iterator $r5;
        java.lang.Object $r6, $r15;
        java.lang.Class r33;
        ucar.nc2.dataset.NetcdfDataset r0;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: ucar.nc2.Variable;

        r9 := @parameter2: java.util.Formatter;

        r7 := @parameter3: java.util.Formatter;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r1, "transform_name", null);

        r32 = $r2;

        if null != $r2 goto label01;

        r32 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r1, "Projection_Name", null);

     label01:
        if null != r32 goto label02;

        r32 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r1, "grid_mapping_name", null);

     label02:
        if null != r32 goto label03;

        r32 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r1, "standard_name", null);

     label03:
        if null != r32 goto label04;

        $r17 = newarray (java.lang.Object)[1];

        $r17[0] = r1;

        virtualinvoke r9.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("**Failed to find Coordinate Transform name from Variable= %s\n", $r17);

        return null;

     label04:
        $r3 = virtualinvoke r32.<java.lang.String: java.lang.String trim()>();

        r33 = null;

        $r4 = <ucar.nc2.dataset.CoordTransBuilder: java.util.List transformList>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r15 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r34 = (ucar.nc2.dataset.CoordTransBuilder$Transform) $r15;

        $r16 = r34.<ucar.nc2.dataset.CoordTransBuilder$Transform: java.lang.String transName>;

        $z1 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label06;

        r33 = r34.<ucar.nc2.dataset.CoordTransBuilder$Transform: java.lang.Class transClass>;

        goto label07;

     label06:
        goto label05;

     label07:
        if null != r33 goto label08;

        $r14 = newarray (java.lang.Object)[2];

        $r14[0] = $r3;

        $r14[1] = r1;

        virtualinvoke r9.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("**Failed to find CoordTransBuilder name= %s from Variable= %s\n", $r14);

        return null;

     label08:
        r35 = null;

     label09:
        $r6 = virtualinvoke r33.<java.lang.Class: java.lang.Object newInstance()>();

        r35 = (ucar.nc2.dataset.CoordTransBuilderIF) $r6;

     label10:
        goto label13;

     label11:
        $r25 := @caughtexception;

        $r27 = <ucar.nc2.dataset.CoordTransBuilder: org.slf4j.Logger log>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cant instantiate ");

        $r29 = virtualinvoke r33.<java.lang.Class: java.lang.String getName()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r27.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r31, $r25);

        goto label13;

     label12:
        $r18 := @caughtexception;

        $r20 = <ucar.nc2.dataset.CoordTransBuilder: org.slf4j.Logger log>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cant access ");

        $r22 = virtualinvoke r33.<java.lang.Class: java.lang.String getName()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r24, $r18);

     label13:
        if null != r35 goto label14;

        $r12 = newarray (java.lang.Object)[2];

        $r13 = virtualinvoke r33.<java.lang.Class: java.lang.String getName()>();

        $r12[0] = $r13;

        $r12[1] = r1;

        virtualinvoke r9.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("**Failed to build CoordTransBuilder object from class= %s for Variable= %s\n", $r12);

        return null;

     label14:
        interfaceinvoke r35.<ucar.nc2.dataset.CoordTransBuilderIF: void setErrorBuffer(java.util.Formatter)>(r7);

        $r8 = interfaceinvoke r35.<ucar.nc2.dataset.CoordTransBuilderIF: ucar.nc2.dataset.CoordinateTransform makeCoordinateTransform(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>(r0, r1);

        if $r8 == null goto label15;

        $r10 = newarray (java.lang.Object)[3];

        $r10[0] = $r3;

        $r11 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $r10[1] = $r11;

        $r10[2] = r35;

        virtualinvoke r9.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" Made Coordinate transform %s from variable %s: %s\n", $r10);

     label15:
        return $r8;

        catch java.lang.InstantiationException from label09 to label10 with label11;
        catch java.lang.IllegalAccessException from label09 to label10 with label12;
    }

    public static ucar.nc2.dataset.VariableDS makeDummyTransformVariable(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.dataset.CoordinateTransform)
    {
        ucar.nc2.dataset.TransformType $r8;
        double[] $r17;
        int[] $r13, $r18;
        ucar.nc2.dataset.CoordinateTransform r2;
        int $i0;
        java.lang.String $r3, $r9, $r22, $r24, $r25;
        boolean $z0, $z1;
        ucar.nc2.dataset.VariableDS $r0;
        java.util.Iterator $r6;
        ucar.ma2.DataType $r4, $r10;
        ucar.ma2.Array $r14, $r20;
        ucar.unidata.util.Parameter r16;
        java.util.List $r5;
        ucar.nc2.Attribute $r7, $r21, $r23;
        char[] $r12;
        java.lang.Class $r11, $r19;
        java.lang.Object $r15;
        ucar.nc2.dataset.NetcdfDataset r1;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: ucar.nc2.dataset.CoordinateTransform;

        $r0 = new ucar.nc2.dataset.VariableDS;

        $r3 = virtualinvoke r2.<ucar.nc2.dataset.CoordinateTransform: java.lang.String getName()>();

        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        specialinvoke $r0.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r1, null, null, $r3, $r4, "", null, null);

        $r5 = virtualinvoke r2.<ucar.nc2.dataset.CoordinateTransform: java.util.List getParameters()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r15 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r16 = (ucar.unidata.util.Parameter) $r15;

        $z1 = virtualinvoke r16.<ucar.unidata.util.Parameter: boolean isString()>();

        if $z1 == 0 goto label2;

        $r23 = new ucar.nc2.Attribute;

        $r24 = virtualinvoke r16.<ucar.unidata.util.Parameter: java.lang.String getName()>();

        $r25 = virtualinvoke r16.<ucar.unidata.util.Parameter: java.lang.String getStringValue()>();

        specialinvoke $r23.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>($r24, $r25);

        virtualinvoke $r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r23);

        goto label3;

     label2:
        $r17 = virtualinvoke r16.<ucar.unidata.util.Parameter: double[] getNumericValues()>();

        $r19 = <java.lang.Double: java.lang.Class TYPE>;

        $r18 = newarray (int)[1];

        $i0 = lengthof $r17;

        $r18[0] = $i0;

        $r20 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r19, $r18, $r17);

        $r21 = new ucar.nc2.Attribute;

        $r22 = virtualinvoke r16.<ucar.unidata.util.Parameter: java.lang.String getName()>();

        specialinvoke $r21.<ucar.nc2.Attribute: void <init>(java.lang.String,ucar.ma2.Array)>($r22, $r20);

        virtualinvoke $r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r21);

     label3:
        goto label1;

     label4:
        $r7 = new ucar.nc2.Attribute;

        $r8 = virtualinvoke r2.<ucar.nc2.dataset.CoordinateTransform: ucar.nc2.dataset.TransformType getTransformType()>();

        $r9 = virtualinvoke $r8.<ucar.nc2.dataset.TransformType: java.lang.String toString()>();

        specialinvoke $r7.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateTransformType", $r9);

        virtualinvoke $r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r7);

        $r10 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        $r11 = virtualinvoke $r10.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r13 = newarray (int)[0];

        $r12 = newarray (char)[1];

        $r12[0] = 32;

        $r14 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r11, $r13, $r12);

        virtualinvoke $r0.<ucar.nc2.dataset.VariableDS: void setCachedData(ucar.ma2.Array,boolean)>($r14, 1);

        return $r0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;
        java.util.ArrayList $r1;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/dataset/CoordTransBuilder;");

        <ucar.nc2.dataset.CoordTransBuilder: org.slf4j.Logger log> = $r0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        <ucar.nc2.dataset.CoordTransBuilder: java.util.List transformList> = $r1;

        <ucar.nc2.dataset.CoordTransBuilder: boolean userMode> = 0;

        <ucar.nc2.dataset.CoordTransBuilder: boolean loadWarnings> = 0;

        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.Class)>("albers_conical_equal_area", class "Lucar/nc2/dataset/transform/AlbersEqualArea;");

        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.Class)>("flat_earth", class "Lucar/nc2/dataset/transform/FlatEarth;");

        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.Class)>("lambert_azimuthal_equal_area", class "Lucar/nc2/dataset/transform/LambertAzimuthal;");

        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.Class)>("lambert_conformal_conic", class "Lucar/nc2/dataset/transform/LambertConformalConic;");

        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransformMaybe(java.lang.String,java.lang.String)>("mcidas_area", "ucar.nc2.iosp.mcidas.McIDASAreaTransformBuilder");

        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.Class)>("mercator", class "Lucar/nc2/dataset/transform/Mercator;");

        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.Class)>("MSGnavigation", class "Lucar/nc2/dataset/transform/MSGnavigation;");

        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.Class)>("orthographic", class "Lucar/nc2/dataset/transform/Orthographic;");

        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.Class)>("polar_stereographic", class "Lucar/nc2/dataset/transform/PolarStereographic;");

        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.Class)>("rotated_latitude_longitude", class "Lucar/nc2/dataset/transform/RotatedPole;");

        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.Class)>("rotated_latlon_grib", class "Lucar/nc2/dataset/transform/RotatedLatLon;");

        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.Class)>("stereographic", class "Lucar/nc2/dataset/transform/Stereographic;");

        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.Class)>("transverse_mercator", class "Lucar/nc2/dataset/transform/TransverseMercator;");

        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.Class)>("vertical_perspective", class "Lucar/nc2/dataset/transform/VerticalPerspective;");

        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.Class)>("UTM", class "Lucar/nc2/dataset/transform/UTM;");

        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.Class)>("atmosphere_hybrid_height_coordinate", class "Lucar/nc2/dataset/transform/VAtmHybridHeight;");

        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.Class)>("atmosphere_hybrid_sigma_pressure_coordinate", class "Lucar/nc2/dataset/transform/VAtmHybridSigmaPressure;");

        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.Class)>("atmosphere_sigma_coordinate", class "Lucar/nc2/dataset/transform/VAtmSigma;");

        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.Class)>("ocean_s_coordinate", class "Lucar/nc2/dataset/transform/VOceanS;");

        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.Class)>("ocean_sigma_coordinate", class "Lucar/nc2/dataset/transform/VOceanSigma;");

        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.Class)>("explicit_field", class "Lucar/nc2/dataset/transform/VExplicitField;");

        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.Class)>("existing3DField", class "Lucar/nc2/dataset/transform/VExplicitField;");

        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.Class)>("ocean_s_coordinate_g1", class "Lucar/nc2/dataset/transform/VOceanSG1;");

        staticinvoke <ucar.nc2.dataset.CoordTransBuilder: void registerTransform(java.lang.String,java.lang.Class)>("ocean_s_coordinate_g2", class "Lucar/nc2/dataset/transform/VOceanSG2;");

        <ucar.nc2.dataset.CoordTransBuilder: boolean userMode> = 1;

        return;
    }
}
