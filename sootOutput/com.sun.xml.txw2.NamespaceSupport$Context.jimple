final class com.sun.xml.txw2.NamespaceSupport$Context extends java.lang.Object
{
    java.util.Hashtable prefixTable;
    java.util.Hashtable uriTable;
    java.util.Hashtable elementNameTable;
    java.util.Hashtable attributeNameTable;
    java.lang.String defaultNS;
    private java.util.Vector declarations;
    private boolean declSeen;
    private com.sun.xml.txw2.NamespaceSupport$Context parent;
    final com.sun.xml.txw2.NamespaceSupport this$0;

    void <init>(com.sun.xml.txw2.NamespaceSupport)
    {
        com.sun.xml.txw2.NamespaceSupport$Context r0;
        com.sun.xml.txw2.NamespaceSupport r1;

        r0 := @this: com.sun.xml.txw2.NamespaceSupport$Context;

        r1 := @parameter0: com.sun.xml.txw2.NamespaceSupport;

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: com.sun.xml.txw2.NamespaceSupport this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.lang.String defaultNS> = "";

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Vector declarations> = null;

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: boolean declSeen> = 0;

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: com.sun.xml.txw2.NamespaceSupport$Context parent> = null;

        specialinvoke r0.<com.sun.xml.txw2.NamespaceSupport$Context: void copyTables()>();

        return;
    }

    void setParent(com.sun.xml.txw2.NamespaceSupport$Context)
    {
        com.sun.xml.txw2.NamespaceSupport$Context r0, r1;
        java.lang.String $r6;
        java.util.Hashtable $r2, $r3, $r4, $r5;

        r0 := @this: com.sun.xml.txw2.NamespaceSupport$Context;

        r1 := @parameter0: com.sun.xml.txw2.NamespaceSupport$Context;

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: com.sun.xml.txw2.NamespaceSupport$Context parent> = r1;

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Vector declarations> = null;

        $r2 = r1.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable prefixTable>;

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable prefixTable> = $r2;

        $r3 = r1.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable uriTable>;

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable uriTable> = $r3;

        $r4 = r1.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable elementNameTable>;

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable elementNameTable> = $r4;

        $r5 = r1.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable attributeNameTable>;

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable attributeNameTable> = $r5;

        $r6 = r1.<com.sun.xml.txw2.NamespaceSupport$Context: java.lang.String defaultNS>;

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.lang.String defaultNS> = $r6;

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: boolean declSeen> = 0;

        return;
    }

    void clear()
    {
        com.sun.xml.txw2.NamespaceSupport$Context r0;

        r0 := @this: com.sun.xml.txw2.NamespaceSupport$Context;

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: com.sun.xml.txw2.NamespaceSupport$Context parent> = null;

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable prefixTable> = null;

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable uriTable> = null;

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable elementNameTable> = null;

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable attributeNameTable> = null;

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.lang.String defaultNS> = "";

        return;
    }

    void declarePrefix(java.lang.String, java.lang.String)
    {
        com.sun.xml.txw2.NamespaceSupport$Context r0;
        java.util.Vector $r1, $r7, $r8;
        java.lang.String $r2, $r3, $r4, r9, r10;
        java.util.Hashtable $r5, $r6;
        boolean $z0, $z1;

        r0 := @this: com.sun.xml.txw2.NamespaceSupport$Context;

        r9 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.String;

        $z0 = r0.<com.sun.xml.txw2.NamespaceSupport$Context: boolean declSeen>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.sun.xml.txw2.NamespaceSupport$Context: void copyTables()>();

     label1:
        $r1 = r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Vector declarations>;

        if $r1 != null goto label2;

        $r8 = new java.util.Vector;

        specialinvoke $r8.<java.util.Vector: void <init>()>();

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Vector declarations> = $r8;

     label2:
        $r2 = virtualinvoke r9.<java.lang.String: java.lang.String intern()>();

        $r3 = virtualinvoke r10.<java.lang.String: java.lang.String intern()>();

        $r4 = "";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label3;

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.lang.String defaultNS> = $r3;

        goto label4;

     label3:
        $r5 = r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable prefixTable>;

        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r6 = r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable uriTable>;

        virtualinvoke $r6.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r2);

     label4:
        $r7 = r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Vector declarations>;

        virtualinvoke $r7.<java.util.Vector: void addElement(java.lang.Object)>($r2);

        return;
    }

    java.lang.String[] processName(java.lang.String, boolean)
    {
        com.sun.xml.txw2.NamespaceSupport$Context r0;
        java.lang.String[] $r3, $r14, r16;
        com.sun.xml.txw2.NamespaceSupport $r13;
        int $i0, $i1, $i3;
        java.lang.String r1, $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r17, r18, $r19;
        java.util.Hashtable $r8, r15;
        boolean z0, $z1, $z2, $z3;
        java.lang.Object $r2, $r9;

        r0 := @this: com.sun.xml.txw2.NamespaceSupport$Context;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label01;

        r15 = r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable attributeNameTable>;

        goto label02;

     label01:
        r15 = r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable elementNameTable>;

     label02:
        $r2 = virtualinvoke r15.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = (java.lang.String[]) $r2;

        $r14 = (java.lang.String[]) $r3;

        if $r14 == null goto label03;

        return $r14;

     label03:
        r16 = newarray (java.lang.String)[3];

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String intern()>();

        r16[2] = $r4;

        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(58);

        $i3 = (int) -1;

        if $i0 != $i3 goto label07;

        if z0 == 0 goto label05;

        if r1 != "xmlns" goto label04;

        $r13 = r0.<com.sun.xml.txw2.NamespaceSupport$Context: com.sun.xml.txw2.NamespaceSupport this$0>;

        $z3 = staticinvoke <com.sun.xml.txw2.NamespaceSupport: boolean access$000(com.sun.xml.txw2.NamespaceSupport)>($r13);

        if $z3 == 0 goto label04;

        r16[0] = "http://www.w3.org/xmlns/2000/";

        goto label06;

     label04:
        r16[0] = "";

        goto label06;

     label05:
        $r12 = r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.lang.String defaultNS>;

        r16[0] = $r12;

     label06:
        $r17 = r16[2];

        r16[1] = $r17;

        goto label12;

     label07:
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i1 = $i0 + 1;

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

        $r7 = "";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label08;

        r18 = r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.lang.String defaultNS>;

        goto label09;

     label08:
        $r8 = r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable prefixTable>;

        $r9 = virtualinvoke $r8.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r5);

        r18 = (java.lang.String) $r9;

     label09:
        if r18 == null goto label10;

        if z0 != 0 goto label11;

        $r11 = "xmlns";

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label11;

     label10:
        return null;

     label11:
        r16[0] = r18;

        $r10 = virtualinvoke $r6.<java.lang.String: java.lang.String intern()>();

        r16[1] = $r10;

     label12:
        $r19 = r16[2];

        virtualinvoke r15.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, r16);

        return r16;
    }

    java.lang.String getURI(java.lang.String)
    {
        com.sun.xml.txw2.NamespaceSupport$Context r2;
        java.lang.Object $r5;
        java.lang.String r0, $r1, $r6, $r7;
        java.util.Hashtable $r3, $r4;
        boolean $z0;

        r2 := @this: com.sun.xml.txw2.NamespaceSupport$Context;

        r0 := @parameter0: java.lang.String;

        $r1 = "";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r7 = r2.<com.sun.xml.txw2.NamespaceSupport$Context: java.lang.String defaultNS>;

        return $r7;

     label1:
        $r3 = r2.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable prefixTable>;

        if $r3 != null goto label2;

        return null;

     label2:
        $r4 = r2.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable prefixTable>;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0);

        $r6 = (java.lang.String) $r5;

        return $r6;
    }

    java.lang.String getPrefix(java.lang.String)
    {
        com.sun.xml.txw2.NamespaceSupport$Context r0;
        java.lang.Object $r4, $r7;
        java.lang.String r2, r5, r8;
        java.util.Hashtable $r1, $r3, $r6;
        boolean $z0;

        r0 := @this: com.sun.xml.txw2.NamespaceSupport$Context;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable uriTable>;

        if $r1 == null goto label2;

        $r3 = r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable uriTable>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (java.lang.String) $r4;

        if r5 != null goto label1;

        return null;

     label1:
        $r6 = r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable prefixTable>;

        $r7 = virtualinvoke $r6.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r5);

        r8 = (java.lang.String) $r7;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z0 == 0 goto label2;

        return r5;

     label2:
        return null;
    }

    java.util.Enumeration getDeclaredPrefixes()
    {
        com.sun.xml.txw2.NamespaceSupport$Context r0;
        java.util.Vector $r1, $r2;
        java.util.Enumeration $r3, $r4;

        r0 := @this: com.sun.xml.txw2.NamespaceSupport$Context;

        $r1 = r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Vector declarations>;

        if $r1 != null goto label1;

        $r4 = staticinvoke <com.sun.xml.txw2.NamespaceSupport: java.util.Enumeration access$100()>();

        return $r4;

     label1:
        $r2 = r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Vector declarations>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.util.Enumeration elements()>();

        return $r3;
    }

    java.util.Enumeration getPrefixes()
    {
        com.sun.xml.txw2.NamespaceSupport$Context r0;
        java.util.Enumeration $r3, $r4;
        java.util.Hashtable $r1, $r2;

        r0 := @this: com.sun.xml.txw2.NamespaceSupport$Context;

        $r1 = r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable prefixTable>;

        if $r1 != null goto label1;

        $r4 = staticinvoke <com.sun.xml.txw2.NamespaceSupport: java.util.Enumeration access$100()>();

        return $r4;

     label1:
        $r2 = r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable prefixTable>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.util.Enumeration keys()>();

        return $r3;
    }

    private void copyTables()
    {
        com.sun.xml.txw2.NamespaceSupport$Context r0;
        java.lang.Object $r8, $r11;
        java.util.Hashtable $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r12;

        r0 := @this: com.sun.xml.txw2.NamespaceSupport$Context;

        $r1 = r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable prefixTable>;

        if $r1 == null goto label1;

        $r10 = r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable prefixTable>;

        $r11 = virtualinvoke $r10.<java.util.Hashtable: java.lang.Object clone()>();

        $r12 = (java.util.Hashtable) $r11;

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable prefixTable> = $r12;

        goto label2;

     label1:
        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable prefixTable> = $r2;

     label2:
        $r3 = r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable uriTable>;

        if $r3 == null goto label3;

        $r7 = r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable uriTable>;

        $r8 = virtualinvoke $r7.<java.util.Hashtable: java.lang.Object clone()>();

        $r9 = (java.util.Hashtable) $r8;

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable uriTable> = $r9;

        goto label4;

     label3:
        $r4 = new java.util.Hashtable;

        specialinvoke $r4.<java.util.Hashtable: void <init>()>();

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable uriTable> = $r4;

     label4:
        $r5 = new java.util.Hashtable;

        specialinvoke $r5.<java.util.Hashtable: void <init>()>();

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable elementNameTable> = $r5;

        $r6 = new java.util.Hashtable;

        specialinvoke $r6.<java.util.Hashtable: void <init>()>();

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: java.util.Hashtable attributeNameTable> = $r6;

        r0.<com.sun.xml.txw2.NamespaceSupport$Context: boolean declSeen> = 1;

        return;
    }
}
