class com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict extends java.lang.Object
{
    java.util.ArrayList objectTable;
    int[] keyref;
    int[] objref;

    private void <init>()
    {
        com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict r0;

        r0 := @this: com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String getKey(int)
    {
        int[] $r1;
        int i0, $i1;
        com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict r0;
        java.lang.Object $r3;
        java.lang.String $r4;
        java.util.ArrayList $r2;

        r0 := @this: com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict;

        i0 := @parameter0: int;

        $r2 = r0.<com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict: java.util.ArrayList objectTable>;

        $r1 = r0.<com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict: int[] keyref>;

        $i1 = $r1[i0];

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.Object getValue(int)
    {
        int[] $r1;
        int i0, $i1;
        com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict r0;
        java.lang.Object $r3;
        java.util.ArrayList $r2;

        r0 := @this: com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict;

        i0 := @parameter0: int;

        $r2 = r0.<com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict: java.util.ArrayList objectTable>;

        $r1 = r0.<com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict: int[] objref>;

        $i1 = $r1[i0];

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        return $r3;
    }

    public java.lang.String toString()
    {
        int[] $r2, $r4, $r7, $r12, $r15, $r17, $r20, $r25, $r28, $r30, $r33, $r38, $r41;
        java.lang.StringBuilder $r5, $r6, $r8, $r10, $r11, $r13, $r23, $r24, $r26, $r36, $r37, $r39;
        java.util.ArrayList $r16, $r18, $r21, $r29, $r31, $r34;
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15;
        java.lang.String $r3, $r9, $r14, $r27, $r40;
        com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict r1;
        java.lang.Object $r19, $r22, $r32, $r35;

        r1 := @this: com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>("BPLDict{");

        i14 = 0;

     label01:
        $r2 = r1.<com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict: int[] keyref>;

        $i0 = lengthof $r2;

        if i14 >= $i0 goto label11;

        if i14 <= 0 goto label02;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

     label02:
        $r4 = r1.<com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict: int[] keyref>;

        $i1 = $r4[i14];

        if $i1 < 0 goto label03;

        $r28 = r1.<com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict: int[] keyref>;

        $i9 = $r28[i14];

        $r29 = r1.<com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict: java.util.ArrayList objectTable>;

        $i10 = virtualinvoke $r29.<java.util.ArrayList: int size()>();

        if $i9 < $i10 goto label04;

     label03:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r7 = r1.<com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict: int[] keyref>;

        $i2 = $r7[i14];

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        goto label06;

     label04:
        $r31 = r1.<com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict: java.util.ArrayList objectTable>;

        $r30 = r1.<com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict: int[] keyref>;

        $i11 = $r30[i14];

        $r32 = virtualinvoke $r31.<java.util.ArrayList: java.lang.Object get(int)>($i11);

        if $r32 != r1 goto label05;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        $r38 = r1.<com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict: int[] keyref>;

        $i13 = $r38[i14];

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        goto label06;

     label05:
        $r34 = r1.<com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict: java.util.ArrayList objectTable>;

        $r33 = r1.<com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict: int[] keyref>;

        $i12 = $r33[i14];

        $r35 = virtualinvoke $r34.<java.util.ArrayList: java.lang.Object get(int)>($i12);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r35);

     label06:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r41 = r1.<com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict: int[] objref>;

        $i15 = $r41[i14];

        if $i15 < 0 goto label07;

        $r15 = r1.<com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict: int[] objref>;

        $i4 = $r15[i14];

        $r16 = r1.<com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict: java.util.ArrayList objectTable>;

        $i5 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        if $i4 < $i5 goto label08;

     label07:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r12 = r1.<com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict: int[] objref>;

        $i3 = $r12[i14];

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        goto label10;

     label08:
        $r18 = r1.<com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict: java.util.ArrayList objectTable>;

        $r17 = r1.<com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict: int[] objref>;

        $i6 = $r17[i14];

        $r19 = virtualinvoke $r18.<java.util.ArrayList: java.lang.Object get(int)>($i6);

        if $r19 != r1 goto label09;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        $r25 = r1.<com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict: int[] objref>;

        $i8 = $r25[i14];

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        goto label10;

     label09:
        $r21 = r1.<com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict: java.util.ArrayList objectTable>;

        $r20 = r1.<com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict: int[] objref>;

        $i7 = $r20[i14];

        $r22 = virtualinvoke $r21.<java.util.ArrayList: java.lang.Object get(int)>($i7);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r22);

     label10:
        i14 = i14 + 1;

        goto label01;

     label11:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    void <init>(com.jidesoft.plaf.aqua.BinaryPListParser$1)
    {
        com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict r0;
        com.jidesoft.plaf.aqua.BinaryPListParser$1 r1;

        r0 := @this: com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict;

        r1 := @parameter0: com.jidesoft.plaf.aqua.BinaryPListParser$1;

        specialinvoke r0.<com.jidesoft.plaf.aqua.BinaryPListParser$BPLDict: void <init>()>();

        return;
    }
}
