public class org.springframework.beans.factory.xml.DelegatingEntityResolver extends java.lang.Object implements org.xml.sax.EntityResolver
{
    public static final java.lang.String DTD_SUFFIX;
    public static final java.lang.String XSD_SUFFIX;
    private final org.xml.sax.EntityResolver dtdResolver;
    private final org.xml.sax.EntityResolver schemaResolver;

    public void <init>(java.lang.ClassLoader)
    {
        org.springframework.beans.factory.xml.PluggableSchemaResolver $r2;
        org.springframework.beans.factory.xml.DelegatingEntityResolver r0;
        org.springframework.beans.factory.xml.BeansDtdResolver $r1;
        java.lang.ClassLoader r3;

        r0 := @this: org.springframework.beans.factory.xml.DelegatingEntityResolver;

        r3 := @parameter0: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.springframework.beans.factory.xml.BeansDtdResolver;

        specialinvoke $r1.<org.springframework.beans.factory.xml.BeansDtdResolver: void <init>()>();

        r0.<org.springframework.beans.factory.xml.DelegatingEntityResolver: org.xml.sax.EntityResolver dtdResolver> = $r1;

        $r2 = new org.springframework.beans.factory.xml.PluggableSchemaResolver;

        specialinvoke $r2.<org.springframework.beans.factory.xml.PluggableSchemaResolver: void <init>(java.lang.ClassLoader)>(r3);

        r0.<org.springframework.beans.factory.xml.DelegatingEntityResolver: org.xml.sax.EntityResolver schemaResolver> = $r2;

        return;
    }

    public void <init>(org.xml.sax.EntityResolver, org.xml.sax.EntityResolver)
    {
        org.springframework.beans.factory.xml.DelegatingEntityResolver r0;
        org.xml.sax.EntityResolver r1, r2;

        r0 := @this: org.springframework.beans.factory.xml.DelegatingEntityResolver;

        r1 := @parameter0: org.xml.sax.EntityResolver;

        r2 := @parameter1: org.xml.sax.EntityResolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "\'dtdResolver\' is required");

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r2, "\'schemaResolver\' is required");

        r0.<org.springframework.beans.factory.xml.DelegatingEntityResolver: org.xml.sax.EntityResolver dtdResolver> = r1;

        r0.<org.springframework.beans.factory.xml.DelegatingEntityResolver: org.xml.sax.EntityResolver schemaResolver> = r2;

        return;
    }

    public org.xml.sax.InputSource resolveEntity(java.lang.String, java.lang.String) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.xml.sax.InputSource $r4, $r6;
        org.springframework.beans.factory.xml.DelegatingEntityResolver r1;
        java.lang.String r0, r2;
        org.xml.sax.EntityResolver $r3, $r5;
        boolean $z0, $z1;

        r1 := @this: org.springframework.beans.factory.xml.DelegatingEntityResolver;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        if r0 == null goto label2;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".dtd");

        if $z0 == 0 goto label1;

        $r5 = r1.<org.springframework.beans.factory.xml.DelegatingEntityResolver: org.xml.sax.EntityResolver dtdResolver>;

        $r6 = interfaceinvoke $r5.<org.xml.sax.EntityResolver: org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)>(r2, r0);

        return $r6;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".xsd");

        if $z1 == 0 goto label2;

        $r3 = r1.<org.springframework.beans.factory.xml.DelegatingEntityResolver: org.xml.sax.EntityResolver schemaResolver>;

        $r4 = interfaceinvoke $r3.<org.xml.sax.EntityResolver: org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)>(r2, r0);

        return $r4;

     label2:
        return null;
    }

    public java.lang.String toString()
    {
        org.springframework.beans.factory.xml.DelegatingEntityResolver r1;
        java.lang.StringBuilder $r0, $r3, $r4, $r5, $r6, $r8;
        java.lang.String $r9;
        org.xml.sax.EntityResolver $r2, $r7;

        r1 := @this: org.springframework.beans.factory.xml.DelegatingEntityResolver;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("EntityResolver delegating .xsd to ");

        $r2 = r1.<org.springframework.beans.factory.xml.DelegatingEntityResolver: org.xml.sax.EntityResolver schemaResolver>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".dtd");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r7 = r1.<org.springframework.beans.factory.xml.DelegatingEntityResolver: org.xml.sax.EntityResolver dtdResolver>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public static void <clinit>()
    {
        <org.springframework.beans.factory.xml.DelegatingEntityResolver: java.lang.String XSD_SUFFIX> = ".xsd";

        <org.springframework.beans.factory.xml.DelegatingEntityResolver: java.lang.String DTD_SUFFIX> = ".dtd";

        return;
    }
}
