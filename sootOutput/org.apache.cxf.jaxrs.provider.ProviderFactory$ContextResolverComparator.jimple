class org.apache.cxf.jaxrs.provider.ProviderFactory$ContextResolverComparator extends java.lang.Object implements java.util.Comparator
{

    private void <init>()
    {
        org.apache.cxf.jaxrs.provider.ProviderFactory$ContextResolverComparator r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$ContextResolverComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(org.apache.cxf.jaxrs.model.ProviderInfo, org.apache.cxf.jaxrs.model.ProviderInfo)
    {
        javax.ws.rs.Produces $r8, $r13;
        org.apache.cxf.jaxrs.provider.ProviderFactory$ContextResolverComparator r16;
        javax.ws.rs.ext.ContextResolver r2, r5;
        org.apache.cxf.jaxrs.model.ProviderInfo r0, r3;
        int $i0;
        java.util.List $r9, $r10, $r14, $r15;
        java.lang.'annotation'.Annotation $r7, $r12;
        java.lang.Object $r1, $r4;
        java.lang.Class $r6, $r11;

        r16 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$ContextResolverComparator;

        r0 := @parameter0: org.apache.cxf.jaxrs.model.ProviderInfo;

        r3 := @parameter1: org.apache.cxf.jaxrs.model.ProviderInfo;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.ProviderInfo: java.lang.Object getProvider()>();

        r2 = (javax.ws.rs.ext.ContextResolver) $r1;

        $r4 = virtualinvoke r3.<org.apache.cxf.jaxrs.model.ProviderInfo: java.lang.Object getProvider()>();

        r5 = (javax.ws.rs.ext.ContextResolver) $r4;

        $r6 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljavax/ws/rs/Produces;");

        $r8 = (javax.ws.rs.Produces) $r7;

        $r9 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List getProduceTypes(javax.ws.rs.Produces)>($r8);

        $r10 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List sortMediaTypes(java.util.List,java.lang.String)>($r9, "qs");

        $r11 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljavax/ws/rs/Produces;");

        $r13 = (javax.ws.rs.Produces) $r12;

        $r14 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List getProduceTypes(javax.ws.rs.Produces)>($r13);

        $r15 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List sortMediaTypes(java.util.List,java.lang.String)>($r14, "qs");

        $i0 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: int compareSortedMediaTypes(java.util.List,java.util.List,java.lang.String)>($r10, $r15, "qs");

        return $i0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.cxf.jaxrs.model.ProviderInfo $r3, $r4;
        int $i0;
        java.lang.Object r1, r2;
        org.apache.cxf.jaxrs.provider.ProviderFactory$ContextResolverComparator r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$ContextResolverComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.apache.cxf.jaxrs.model.ProviderInfo) r1;

        $r3 = (org.apache.cxf.jaxrs.model.ProviderInfo) r2;

        $i0 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.ProviderFactory$ContextResolverComparator: int compare(org.apache.cxf.jaxrs.model.ProviderInfo,org.apache.cxf.jaxrs.model.ProviderInfo)>($r4, $r3);

        return $i0;
    }

    void <init>(org.apache.cxf.jaxrs.provider.ProviderFactory$1)
    {
        org.apache.cxf.jaxrs.provider.ProviderFactory$1 r1;
        org.apache.cxf.jaxrs.provider.ProviderFactory$ContextResolverComparator r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$ContextResolverComparator;

        r1 := @parameter0: org.apache.cxf.jaxrs.provider.ProviderFactory$1;

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.ProviderFactory$ContextResolverComparator: void <init>()>();

        return;
    }
}
