class org.fife.ui.rsyntaxtextarea.CodeTemplateManager$TemplateComparator extends java.lang.Object implements java.util.Comparator, java.io.Serializable
{

    private void <init>()
    {
        org.fife.ui.rsyntaxtextarea.CodeTemplateManager$TemplateComparator r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.CodeTemplateManager$TemplateComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        boolean $z0;
        org.fife.ui.rsyntaxtextarea.templates.CodeTemplate r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i10, $i12, $i13, i14, i15, i16, i17, i18, $i19, $i21, $i22, $i23, $i24, $i25;
        java.lang.String $r2;
        char c7, c9, $c11;
        char[] $r3, r6;
        java.lang.Object r0, r4;
        org.fife.ui.rsyntaxtextarea.CodeTemplateManager$TemplateComparator r7;
        javax.swing.text.Segment r5;

        r7 := @this: org.fife.ui.rsyntaxtextarea.CodeTemplateManager$TemplateComparator;

        r0 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        r1 = (org.fife.ui.rsyntaxtextarea.templates.CodeTemplate) r0;

        $r2 = interfaceinvoke r1.<org.fife.ui.rsyntaxtextarea.templates.CodeTemplate: java.lang.String getID()>();

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        i14 = 0;

        i0 = lengthof $r3;

        r5 = (javax.swing.text.Segment) r4;

        r6 = r5.<javax.swing.text.Segment: char[] array>;

        i15 = r5.<javax.swing.text.Segment: int count>;

        $i1 = r5.<javax.swing.text.Segment: int offset>;

        $i2 = $i1 + i15;

        i16 = $i2 - 1;

     label1:
        $i3 = r5.<javax.swing.text.Segment: int offset>;

        if i16 < $i3 goto label2;

        $c11 = r6[i16];

        $z0 = staticinvoke <org.fife.ui.rsyntaxtextarea.CodeTemplateManager: boolean isValidChar(char)>($c11);

        if $z0 == 0 goto label2;

        $i21 = (int) -1;

        i16 = i16 + $i21;

        goto label1;

     label2:
        i17 = i16 + 1;

        $i4 = r5.<javax.swing.text.Segment: int offset>;

        $i12 = i17 - $i4;

        $i13 = i15 - $i12;

        i18 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i13);

     label3:
        $i19 = i18;

        i18 = i18 - 1;

        if $i19 == 0 goto label5;

        $i6 = i14;

        i14 = i14 + 1;

        c7 = $r3[$i6];

        $i8 = i17;

        i17 = i17 + 1;

        c9 = r6[$i8];

        $i22 = (int) c7;

        $i23 = (int) c9;

        if $i22 == $i23 goto label4;

        $i24 = (int) c7;

        $i25 = (int) c9;

        $i10 = $i24 - $i25;

        return $i10;

     label4:
        goto label3;

     label5:
        $i5 = i0 - $i13;

        return $i5;
    }

    void <init>(org.fife.ui.rsyntaxtextarea.CodeTemplateManager$1)
    {
        org.fife.ui.rsyntaxtextarea.CodeTemplateManager$1 r1;
        org.fife.ui.rsyntaxtextarea.CodeTemplateManager$TemplateComparator r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.CodeTemplateManager$TemplateComparator;

        r1 := @parameter0: org.fife.ui.rsyntaxtextarea.CodeTemplateManager$1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.CodeTemplateManager$TemplateComparator: void <init>()>();

        return;
    }
}
