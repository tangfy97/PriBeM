final class com.hp.hpl.jena.ontology.impl.OWLLiteProfile$3 extends com.hp.hpl.jena.ontology.impl.OWLProfile$SupportsCheck
{

    void <init>()
    {
        com.hp.hpl.jena.ontology.impl.OWLLiteProfile$3 r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OWLLiteProfile$3;

        specialinvoke r0.<com.hp.hpl.jena.ontology.impl.OWLProfile$SupportsCheck: void <init>()>();

        return;
    }

    public boolean doCheck(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.enhanced.EnhGraph)
    {
        com.hp.hpl.jena.graph.Node r4, $r11, $r13, $r14, $r16, $r17, $r19, $r20;
        com.hp.hpl.jena.enhanced.EnhGraph r0;
        com.hp.hpl.jena.rdf.model.Property $r2, $r12, $r15, $r18;
        com.hp.hpl.jena.rdf.model.Resource[] $r5;
        com.hp.hpl.jena.graph.Graph $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.hp.hpl.jena.rdf.model.Resource $r6, $r7, $r8, $r9, $r10;
        com.hp.hpl.jena.ontology.impl.OWLLiteProfile$3 r3;

        r3 := @this: com.hp.hpl.jena.ontology.impl.OWLLiteProfile$3;

        r4 := @parameter0: com.hp.hpl.jena.graph.Node;

        r0 := @parameter1: com.hp.hpl.jena.enhanced.EnhGraph;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.enhanced.EnhGraph: com.hp.hpl.jena.graph.Graph asGraph()>();

        $r2 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.graph.Node asNode()>();

        $r5 = newarray (com.hp.hpl.jena.rdf.model.Resource)[4];

        $r6 = <com.hp.hpl.jena.vocabulary.OWL: com.hp.hpl.jena.rdf.model.Resource Class>;

        $r5[0] = $r6;

        $r7 = <com.hp.hpl.jena.vocabulary.OWL: com.hp.hpl.jena.rdf.model.Resource Restriction>;

        $r5[1] = $r7;

        $r8 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Resource Class>;

        $r5[2] = $r8;

        $r9 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Resource Datatype>;

        $r5[3] = $r9;

        $z0 = virtualinvoke r3.<com.hp.hpl.jena.ontology.impl.OWLLiteProfile$3: boolean hasType(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.enhanced.EnhGraph,com.hp.hpl.jena.rdf.model.Resource[])>(r4, r0, $r5);

        if $z0 != 0 goto label1;

        $r10 = <com.hp.hpl.jena.vocabulary.OWL: com.hp.hpl.jena.rdf.model.Resource Thing>;

        $r11 = interfaceinvoke $r10.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.graph.Node asNode()>();

        $z1 = virtualinvoke r4.<com.hp.hpl.jena.graph.Node: boolean equals(java.lang.Object)>($r11);

        if $z1 != 0 goto label1;

        $r13 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r12 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property domain>;

        $r14 = interfaceinvoke $r12.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.graph.Node asNode()>();

        $z2 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: boolean contains(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r13, $r14, r4);

        if $z2 != 0 goto label1;

        $r16 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r15 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property range>;

        $r17 = interfaceinvoke $r15.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.graph.Node asNode()>();

        $z3 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: boolean contains(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r16, $r17, r4);

        if $z3 != 0 goto label1;

        $r18 = <com.hp.hpl.jena.vocabulary.OWL: com.hp.hpl.jena.rdf.model.Property intersectionOf>;

        $r19 = interfaceinvoke $r18.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.graph.Node asNode()>();

        $r20 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $z4 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: boolean contains(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r4, $r19, $r20);

        if $z4 == 0 goto label2;

     label1:
        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        return $z5;
    }
}
