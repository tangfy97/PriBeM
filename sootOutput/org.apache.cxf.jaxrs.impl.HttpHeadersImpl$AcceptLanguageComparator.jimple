class org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator extends java.lang.Object implements java.util.Comparator
{
    private java.util.Map prefs;

    public void <init>(java.util.Map)
    {
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator: java.util.Map prefs> = r1;

        return;
    }

    public int compare(java.util.Locale, java.util.Locale)
    {
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator r0;
        java.lang.Float $r4, $r8;
        java.util.Locale r1, r5;
        java.util.Map $r2, $r6;
        int $i0, $i1, $i3;
        float $f0, $f1;
        java.lang.Object $r3, $r7;

        r0 := @this: org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator;

        r1 := @parameter0: java.util.Locale;

        r5 := @parameter1: java.util.Locale;

        $r2 = r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator: java.util.Map prefs>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.Float) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Float: float floatValue()>();

        $r6 = r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator: java.util.Map prefs>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r8 = (java.lang.Float) $r7;

        $f1 = virtualinvoke $r8.<java.lang.Float: float floatValue()>();

        $i0 = staticinvoke <java.lang.Float: int compare(float,float)>($f0, $f1);

        $i3 = (int) -1;

        $i1 = $i0 * $i3;

        return $i1;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator r0;
        java.util.Locale $r3, $r4;
        int $i0;
        java.lang.Object r1, r2;

        r0 := @this: org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.util.Locale) r1;

        $r3 = (java.util.Locale) r2;

        $i0 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator: int compare(java.util.Locale,java.util.Locale)>($r4, $r3);

        return $i0;
    }
}
