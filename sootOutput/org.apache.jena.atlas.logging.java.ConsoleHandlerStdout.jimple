public class org.apache.jena.atlas.logging.java.ConsoleHandlerStdout extends java.util.logging.Handler
{

    private void configure()
    {
        java.util.logging.LogManager $r0;
        java.util.logging.Formatter r14;
        java.lang.Exception $r13;
        org.apache.jena.atlas.logging.java.ConsoleHandlerStdout r1;
        org.apache.jena.atlas.logging.java.TextFormatter $r9;
        java.lang.Class $r2, $r11;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.Object $r12;
        java.lang.String $r3, $r7, $r8;
        java.lang.ClassLoader $r10;

        r1 := @this: org.apache.jena.atlas.logging.java.ConsoleHandlerStdout;

        $r0 = staticinvoke <java.util.logging.LogManager: java.util.logging.LogManager getLogManager()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".formatter");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke $r0.<java.util.logging.LogManager: java.lang.String getProperty(java.lang.String)>($r7);

        r14 = null;

     label1:
        if $r8 == null goto label2;

        $r10 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

        $r11 = virtualinvoke $r10.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r8);

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>();

        r14 = (java.util.logging.Formatter) $r12;

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

     label4:
        if r14 != null goto label5;

        $r9 = new org.apache.jena.atlas.logging.java.TextFormatter;

        specialinvoke $r9.<org.apache.jena.atlas.logging.java.TextFormatter: void <init>()>();

        r14 = $r9;

     label5:
        virtualinvoke r1.<org.apache.jena.atlas.logging.java.ConsoleHandlerStdout: void setFormatter(java.util.logging.Formatter)>(r14);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void <init>()
    {
        org.apache.jena.atlas.logging.java.ConsoleHandlerStdout r0;

        r0 := @this: org.apache.jena.atlas.logging.java.ConsoleHandlerStdout;

        specialinvoke r0.<java.util.logging.Handler: void <init>()>();

        specialinvoke r0.<org.apache.jena.atlas.logging.java.ConsoleHandlerStdout: void configure()>();

        return;
    }

    public void close() throws java.lang.SecurityException
    {
        org.apache.jena.atlas.logging.java.ConsoleHandlerStdout r0;

        r0 := @this: org.apache.jena.atlas.logging.java.ConsoleHandlerStdout;

        return;
    }

    public void flush()
    {
        java.io.PrintStream $r0;
        org.apache.jena.atlas.logging.java.ConsoleHandlerStdout r1;

        r1 := @this: org.apache.jena.atlas.logging.java.ConsoleHandlerStdout;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void flush()>();

        return;
    }

    public void publish(java.util.logging.LogRecord)
    {
        org.apache.jena.atlas.logging.java.ConsoleHandlerStdout r0;
        java.io.PrintStream $r4;
        java.lang.String $r3;
        java.util.logging.LogRecord r1;
        java.util.logging.Formatter $r2;
        boolean $z0;

        r0 := @this: org.apache.jena.atlas.logging.java.ConsoleHandlerStdout;

        r1 := @parameter0: java.util.logging.LogRecord;

        $z0 = specialinvoke r0.<java.util.logging.Handler: boolean isLoggable(java.util.logging.LogRecord)>(r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<org.apache.jena.atlas.logging.java.ConsoleHandlerStdout: java.util.logging.Formatter getFormatter()>();

        $r3 = virtualinvoke $r2.<java.util.logging.Formatter: java.lang.String format(java.util.logging.LogRecord)>(r1);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void print(java.lang.String)>($r3);

        return;
    }
}
