public class org.springframework.context.support.StaticMessageSource extends org.springframework.context.support.AbstractMessageSource
{
    private final java.util.Map messages;
    private final java.util.Map cachedMessageFormats;

    public void <init>()
    {
        java.util.HashMap $r1, $r2;
        org.springframework.context.support.StaticMessageSource r0;

        r0 := @this: org.springframework.context.support.StaticMessageSource;

        specialinvoke r0.<org.springframework.context.support.AbstractMessageSource: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.springframework.context.support.StaticMessageSource: java.util.Map messages> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.springframework.context.support.StaticMessageSource: java.util.Map cachedMessageFormats> = $r2;

        return;
    }

    protected java.lang.String resolveCodeWithoutArguments(java.lang.String, java.util.Locale)
    {
        org.springframework.context.support.StaticMessageSource r0;
        java.util.Locale r6;
        java.util.Map $r3;
        java.lang.StringBuilder $r1, $r5, $r8;
        java.lang.Object $r10;
        java.lang.String r2, $r4, $r7, $r9, $r11;

        r0 := @this: org.springframework.context.support.StaticMessageSource;

        r2 := @parameter0: java.lang.String;

        r6 := @parameter1: java.util.Locale;

        $r3 = r0.<org.springframework.context.support.StaticMessageSource: java.util.Map messages>;

        $r1 = new java.lang.StringBuilder;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r7 = virtualinvoke r6.<java.util.Locale: java.lang.String toString()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r11 = (java.lang.String) $r10;

        return $r11;
    }

    protected java.text.MessageFormat resolveCode(java.lang.String, java.util.Locale)
    {
        java.lang.Throwable $r17;
        java.text.MessageFormat $r15, r18;
        java.util.Locale r4;
        java.util.Map $r9, $r12, $r13, $r16;
        java.lang.String r1, $r2, $r5, $r7, r11;
        org.springframework.context.support.StaticMessageSource r8;
        java.lang.StringBuilder $r0, $r3, $r6;
        java.lang.Object $r10, $r14;

        r8 := @this: org.springframework.context.support.StaticMessageSource;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.util.Locale;

        $r0 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r5 = virtualinvoke r4.<java.util.Locale: java.lang.String toString()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = r8.<org.springframework.context.support.StaticMessageSource: java.util.Map messages>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        r11 = (java.lang.String) $r10;

        if r11 != null goto label1;

        return null;

     label1:
        $r12 = r8.<org.springframework.context.support.StaticMessageSource: java.util.Map cachedMessageFormats>;

        entermonitor $r12;

     label2:
        $r13 = r8.<org.springframework.context.support.StaticMessageSource: java.util.Map cachedMessageFormats>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        r18 = (java.text.MessageFormat) $r14;

        if r18 != null goto label3;

        $r15 = virtualinvoke r8.<org.springframework.context.support.StaticMessageSource: java.text.MessageFormat createMessageFormat(java.lang.String,java.util.Locale)>(r11, r4);

        r18 = $r15;

        $r16 = r8.<org.springframework.context.support.StaticMessageSource: java.util.Map cachedMessageFormats>;

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r15);

     label3:
        exitmonitor $r12;

     label4:
        return r18;

     label5:
        $r17 := @caughtexception;

        exitmonitor $r12;

     label6:
        throw $r17;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void addMessage(java.lang.String, java.util.Locale, java.lang.String)
    {
        java.util.Locale r1;
        java.util.Map $r5;
        java.lang.String r0, r2, $r6, $r8, $r10, $r20;
        boolean $z0;
        org.springframework.context.support.StaticMessageSource r3;
        java.lang.StringBuilder $r4, $r7, $r9, $r12, $r14, $r15, $r16, $r17, $r18, $r19;
        org.apache.commons.logging.Log $r11, $r13;

        r3 := @this: org.springframework.context.support.StaticMessageSource;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Locale;

        r2 := @parameter2: java.lang.String;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "Code must not be null");

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Locale must not be null");

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r2, "Message must not be null");

        $r5 = r3.<org.springframework.context.support.StaticMessageSource: java.util.Map messages>;

        $r4 = new java.lang.StringBuilder;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r8 = virtualinvoke r1.<java.util.Locale: java.lang.String toString()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r2);

        $r11 = r3.<org.springframework.context.support.StaticMessageSource: org.apache.commons.logging.Log logger>;

        $z0 = interfaceinvoke $r11.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r13 = r3.<org.springframework.context.support.StaticMessageSource: org.apache.commons.logging.Log logger>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Added message [");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] for code [");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] and Locale [");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r20);

     label1:
        return;
    }

    public void addMessages(java.util.Map, java.util.Locale)
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.Set $r1;
        org.springframework.context.support.StaticMessageSource r5;
        java.util.Locale r7;
        java.util.Map r0;
        java.lang.Object $r3, $r6, $r9;
        java.lang.String $r8, $r10;
        boolean $z0;

        r5 := @this: org.springframework.context.support.StaticMessageSource;

        r0 := @parameter0: java.util.Map;

        r7 := @parameter1: java.util.Locale;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "Messages Map must not be null");

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r6;

        $r9 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (java.lang.String) $r9;

        virtualinvoke r5.<org.springframework.context.support.StaticMessageSource: void addMessage(java.lang.String,java.util.Locale,java.lang.String)>($r8, r7, $r10);

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return;
    }

    public java.lang.String toString()
    {
        org.springframework.context.support.StaticMessageSource r1;
        java.util.Map $r6;
        java.lang.StringBuilder $r0, $r5, $r7;
        java.lang.Class $r2;
        java.lang.String $r3, $r4, $r8;

        r1 := @this: org.springframework.context.support.StaticMessageSource;

        $r0 = new java.lang.StringBuilder;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r6 = r1.<org.springframework.context.support.StaticMessageSource: java.util.Map messages>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
