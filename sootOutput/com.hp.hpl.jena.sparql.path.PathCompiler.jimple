public class com.hp.hpl.jena.sparql.path.PathCompiler extends java.lang.Object
{
    private static com.hp.hpl.jena.sparql.core.VarAlloc varAlloc;

    public void <init>()
    {
        com.hp.hpl.jena.sparql.path.PathCompiler r0;

        r0 := @this: com.hp.hpl.jena.sparql.path.PathCompiler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.hp.hpl.jena.sparql.core.PathBlock reduce(com.hp.hpl.jena.sparql.core.PathBlock)
    {
        com.hp.hpl.jena.sparql.core.VarAlloc $r3;
        com.hp.hpl.jena.sparql.core.PathBlock $r0, r2;
        com.hp.hpl.jena.sparql.path.PathCompiler r1;

        r1 := @this: com.hp.hpl.jena.sparql.path.PathCompiler;

        r2 := @parameter0: com.hp.hpl.jena.sparql.core.PathBlock;

        $r0 = new com.hp.hpl.jena.sparql.core.PathBlock;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.core.PathBlock: void <init>()>();

        $r3 = <com.hp.hpl.jena.sparql.path.PathCompiler: com.hp.hpl.jena.sparql.core.VarAlloc varAlloc>;

        virtualinvoke r1.<com.hp.hpl.jena.sparql.path.PathCompiler: void reduce(com.hp.hpl.jena.sparql.core.PathBlock,com.hp.hpl.jena.sparql.core.PathBlock,com.hp.hpl.jena.sparql.core.VarAlloc)>($r0, r2, $r3);

        return $r0;
    }

    void reduce(com.hp.hpl.jena.sparql.core.PathBlock, com.hp.hpl.jena.sparql.core.PathBlock, com.hp.hpl.jena.sparql.core.VarAlloc)
    {
        java.util.Iterator $r1;
        com.hp.hpl.jena.sparql.core.TriplePath r3;
        com.hp.hpl.jena.sparql.path.PathCompiler r9;
        com.hp.hpl.jena.graph.Node $r6, $r8;
        com.hp.hpl.jena.sparql.core.VarAlloc r5;
        com.hp.hpl.jena.sparql.core.PathBlock r0, r4;
        com.hp.hpl.jena.sparql.path.Path $r7;
        java.lang.Object $r2;
        boolean $z0, $z1;

        r9 := @this: com.hp.hpl.jena.sparql.path.PathCompiler;

        r4 := @parameter0: com.hp.hpl.jena.sparql.core.PathBlock;

        r0 := @parameter1: com.hp.hpl.jena.sparql.core.PathBlock;

        r5 := @parameter2: com.hp.hpl.jena.sparql.core.VarAlloc;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.PathBlock: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.hp.hpl.jena.sparql.core.TriplePath) $r2;

        $z0 = virtualinvoke r3.<com.hp.hpl.jena.sparql.core.TriplePath: boolean isTriple()>();

        if $z0 == 0 goto label2;

        virtualinvoke r4.<com.hp.hpl.jena.sparql.core.PathBlock: void add(com.hp.hpl.jena.sparql.core.TriplePath)>(r3);

        goto label1;

     label2:
        $r6 = virtualinvoke r3.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node getSubject()>();

        $r7 = virtualinvoke r3.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.sparql.path.Path getPath()>();

        $r8 = virtualinvoke r3.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node getObject()>();

        staticinvoke <com.hp.hpl.jena.sparql.path.PathCompiler: void reduce(com.hp.hpl.jena.sparql.core.PathBlock,com.hp.hpl.jena.sparql.core.VarAlloc,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node)>(r4, r5, $r6, $r7, $r8);

        goto label1;

     label3:
        return;
    }

    public com.hp.hpl.jena.sparql.core.PathBlock reduce(com.hp.hpl.jena.sparql.core.TriplePath)
    {
        com.hp.hpl.jena.sparql.core.VarAlloc $r2;
        com.hp.hpl.jena.sparql.core.PathBlock $r0;
        com.hp.hpl.jena.sparql.path.Path $r4;
        com.hp.hpl.jena.sparql.core.TriplePath r1;
        com.hp.hpl.jena.sparql.path.PathCompiler r6;
        com.hp.hpl.jena.graph.Node $r3, $r5;

        r6 := @this: com.hp.hpl.jena.sparql.path.PathCompiler;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.TriplePath;

        $r0 = new com.hp.hpl.jena.sparql.core.PathBlock;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.core.PathBlock: void <init>()>();

        $r2 = <com.hp.hpl.jena.sparql.path.PathCompiler: com.hp.hpl.jena.sparql.core.VarAlloc varAlloc>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node getSubject()>();

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.sparql.path.Path getPath()>();

        $r5 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.TriplePath: com.hp.hpl.jena.graph.Node getObject()>();

        staticinvoke <com.hp.hpl.jena.sparql.path.PathCompiler: void reduce(com.hp.hpl.jena.sparql.core.PathBlock,com.hp.hpl.jena.sparql.core.VarAlloc,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node)>($r0, $r2, $r3, $r4, $r5);

        return $r0;
    }

    public com.hp.hpl.jena.sparql.core.PathBlock reduce(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.path.Path, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.core.VarAlloc $r4;
        com.hp.hpl.jena.sparql.core.PathBlock $r0;
        com.hp.hpl.jena.sparql.path.Path r2;
        com.hp.hpl.jena.sparql.path.PathCompiler r5;
        com.hp.hpl.jena.graph.Node r1, r3;

        r5 := @this: com.hp.hpl.jena.sparql.path.PathCompiler;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.sparql.path.Path;

        r3 := @parameter2: com.hp.hpl.jena.graph.Node;

        $r0 = new com.hp.hpl.jena.sparql.core.PathBlock;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.core.PathBlock: void <init>()>();

        $r4 = <com.hp.hpl.jena.sparql.path.PathCompiler: com.hp.hpl.jena.sparql.core.VarAlloc varAlloc>;

        staticinvoke <com.hp.hpl.jena.sparql.path.PathCompiler: void reduce(com.hp.hpl.jena.sparql.core.PathBlock,com.hp.hpl.jena.sparql.core.VarAlloc,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node)>($r0, $r4, r1, r2, r3);

        return $r0;
    }

    private static void reduce(com.hp.hpl.jena.sparql.core.PathBlock, com.hp.hpl.jena.sparql.core.VarAlloc, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.path.Path, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.path.P_Mod r28;
        com.hp.hpl.jena.graph.Node r3, r4, $r22, r27, r29;
        byte $b2, $b5, $b7, $b9, $b11, $b13, $b15, $b19;
        com.hp.hpl.jena.graph.Triple $r32;
        com.hp.hpl.jena.sparql.path.P_Inverse $r16;
        long $l0, $l1, $l3, $l4, $l6, $l8, $l10, $l12, $l14, l16, l17, $l18, l20;
        com.hp.hpl.jena.sparql.path.P_FixedLength r26;
        com.hp.hpl.jena.sparql.core.PathBlock r1;
        com.hp.hpl.jena.sparql.path.Path r0, $r5, $r6, $r7, $r9, $r10, $r12, $r13, $r15, $r17, $r19, $r20, r30;
        com.hp.hpl.jena.sparql.path.P_Link $r21;
        com.hp.hpl.jena.sparql.core.TriplePath $r33, $r34;
        com.hp.hpl.jena.sparql.path.P_Seq r25;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.hp.hpl.jena.sparql.core.VarAlloc r8;
        int $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;
        com.hp.hpl.jena.sparql.core.Var $r11, $r14, $r18, $r31;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.PathBlock;

        r8 := @parameter1: com.hp.hpl.jena.sparql.core.VarAlloc;

        r3 := @parameter2: com.hp.hpl.jena.graph.Node;

        r0 := @parameter3: com.hp.hpl.jena.sparql.path.Path;

        r4 := @parameter4: com.hp.hpl.jena.graph.Node;

        $z0 = r0 instanceof com.hp.hpl.jena.sparql.path.P_Link;

        if $z0 == 0 goto label01;

        $r21 = (com.hp.hpl.jena.sparql.path.P_Link) r0;

        $r22 = virtualinvoke $r21.<com.hp.hpl.jena.sparql.path.P_Link: com.hp.hpl.jena.graph.Node getNode()>();

        $r32 = new com.hp.hpl.jena.graph.Triple;

        specialinvoke $r32.<com.hp.hpl.jena.graph.Triple: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r3, $r22, r4);

        $r33 = new com.hp.hpl.jena.sparql.core.TriplePath;

        specialinvoke $r33.<com.hp.hpl.jena.sparql.core.TriplePath: void <init>(com.hp.hpl.jena.graph.Triple)>($r32);

        virtualinvoke r1.<com.hp.hpl.jena.sparql.core.PathBlock: void add(com.hp.hpl.jena.sparql.core.TriplePath)>($r33);

        return;

     label01:
        $z1 = r0 instanceof com.hp.hpl.jena.sparql.path.P_Seq;

        if $z1 == 0 goto label02;

        r25 = (com.hp.hpl.jena.sparql.path.P_Seq) r0;

        $r18 = virtualinvoke r8.<com.hp.hpl.jena.sparql.core.VarAlloc: com.hp.hpl.jena.sparql.core.Var allocVar()>();

        $r19 = virtualinvoke r25.<com.hp.hpl.jena.sparql.path.P_Seq: com.hp.hpl.jena.sparql.path.Path getLeft()>();

        staticinvoke <com.hp.hpl.jena.sparql.path.PathCompiler: void reduce(com.hp.hpl.jena.sparql.core.PathBlock,com.hp.hpl.jena.sparql.core.VarAlloc,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node)>(r1, r8, r3, $r19, $r18);

        $r20 = virtualinvoke r25.<com.hp.hpl.jena.sparql.path.P_Seq: com.hp.hpl.jena.sparql.path.Path getRight()>();

        staticinvoke <com.hp.hpl.jena.sparql.path.PathCompiler: void reduce(com.hp.hpl.jena.sparql.core.PathBlock,com.hp.hpl.jena.sparql.core.VarAlloc,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node)>(r1, r8, $r18, $r20, r4);

        return;

     label02:
        $z2 = r0 instanceof com.hp.hpl.jena.sparql.path.P_Inverse;

        if $z2 == 0 goto label03;

        $r16 = (com.hp.hpl.jena.sparql.path.P_Inverse) r0;

        $r17 = virtualinvoke $r16.<com.hp.hpl.jena.sparql.path.P_Inverse: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        staticinvoke <com.hp.hpl.jena.sparql.path.PathCompiler: void reduce(com.hp.hpl.jena.sparql.core.PathBlock,com.hp.hpl.jena.sparql.core.VarAlloc,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node)>(r1, r8, r4, $r17, r3);

        return;

     label03:
        $z3 = r0 instanceof com.hp.hpl.jena.sparql.path.P_FixedLength;

        if $z3 == 0 goto label06;

        r26 = (com.hp.hpl.jena.sparql.path.P_FixedLength) r0;

        $l12 = virtualinvoke r26.<com.hp.hpl.jena.sparql.path.P_FixedLength: long getCount()>();

        $b13 = $l12 cmp 0L;

        $i21 = (int) $b13;

        if $i21 <= 0 goto label06;

        r27 = r3;

        l16 = 0L;

     label04:
        $l14 = $l12 - 1L;

        $b15 = l16 cmp $l14;

        $i22 = (int) $b15;

        if $i22 >= 0 goto label05;

        $r14 = virtualinvoke r8.<com.hp.hpl.jena.sparql.core.VarAlloc: com.hp.hpl.jena.sparql.core.Var allocVar()>();

        $r15 = virtualinvoke r26.<com.hp.hpl.jena.sparql.path.P_FixedLength: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        staticinvoke <com.hp.hpl.jena.sparql.path.PathCompiler: void reduce(com.hp.hpl.jena.sparql.core.PathBlock,com.hp.hpl.jena.sparql.core.VarAlloc,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node)>(r1, r8, r27, $r15, $r14);

        r27 = $r14;

        l16 = l16 + 1L;

        goto label04;

     label05:
        $r13 = virtualinvoke r26.<com.hp.hpl.jena.sparql.path.P_FixedLength: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        staticinvoke <com.hp.hpl.jena.sparql.path.PathCompiler: void reduce(com.hp.hpl.jena.sparql.core.PathBlock,com.hp.hpl.jena.sparql.core.VarAlloc,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node)>(r1, r8, r27, $r13, r4);

        return;

     label06:
        $z4 = r0 instanceof com.hp.hpl.jena.sparql.path.P_Mod;

        if $z4 == 0 goto label16;

        r28 = (com.hp.hpl.jena.sparql.path.P_Mod) r0;

        $z5 = virtualinvoke r28.<com.hp.hpl.jena.sparql.path.P_Mod: boolean isFixedLength()>();

        if $z5 == 0 goto label09;

        $l6 = virtualinvoke r28.<com.hp.hpl.jena.sparql.path.P_Mod: long getFixedLength()>();

        $b7 = $l6 cmp 0L;

        $i23 = (int) $b7;

        if $i23 <= 0 goto label09;

        $l8 = virtualinvoke r28.<com.hp.hpl.jena.sparql.path.P_Mod: long getFixedLength()>();

        $b9 = $l8 cmp 0L;

        $i24 = (int) $b9;

        if $i24 <= 0 goto label09;

        r29 = r3;

        l17 = 0L;

     label07:
        $l10 = $l8 - 1L;

        $b11 = l17 cmp $l10;

        $i25 = (int) $b11;

        if $i25 >= 0 goto label08;

        $r11 = virtualinvoke r8.<com.hp.hpl.jena.sparql.core.VarAlloc: com.hp.hpl.jena.sparql.core.Var allocVar()>();

        $r12 = virtualinvoke r28.<com.hp.hpl.jena.sparql.path.P_Mod: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        staticinvoke <com.hp.hpl.jena.sparql.path.PathCompiler: void reduce(com.hp.hpl.jena.sparql.core.PathBlock,com.hp.hpl.jena.sparql.core.VarAlloc,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node)>(r1, r8, r29, $r12, $r11);

        r29 = $r11;

        l17 = l17 + 1L;

        goto label07;

     label08:
        $r10 = virtualinvoke r28.<com.hp.hpl.jena.sparql.path.P_Mod: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        staticinvoke <com.hp.hpl.jena.sparql.path.PathCompiler: void reduce(com.hp.hpl.jena.sparql.core.PathBlock,com.hp.hpl.jena.sparql.core.VarAlloc,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node)>(r1, r8, r29, $r10, r4);

        return;

     label09:
        $l18 = virtualinvoke r28.<com.hp.hpl.jena.sparql.path.P_Mod: long getMin()>();

        $b19 = $l18 cmp 0L;

        $i26 = (int) $b19;

        if $i26 <= 0 goto label16;

        $r5 = virtualinvoke r28.<com.hp.hpl.jena.sparql.path.P_Mod: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        $l0 = virtualinvoke r28.<com.hp.hpl.jena.sparql.path.P_Mod: long getMin()>();

        $r6 = staticinvoke <com.hp.hpl.jena.sparql.path.PathFactory: com.hp.hpl.jena.sparql.path.Path pathFixedLength(com.hp.hpl.jena.sparql.path.Path,long)>($r5, $l0);

        $l1 = virtualinvoke r28.<com.hp.hpl.jena.sparql.path.P_Mod: long getMax()>();

        $b2 = $l1 cmp 0L;

        $i27 = (int) $b2;

        if $i27 >= 0 goto label10;

        $r9 = virtualinvoke r28.<com.hp.hpl.jena.sparql.path.P_Mod: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        r30 = staticinvoke <com.hp.hpl.jena.sparql.path.PathFactory: com.hp.hpl.jena.sparql.path.Path pathZeroOrMoreN(com.hp.hpl.jena.sparql.path.Path)>($r9);

        goto label12;

     label10:
        $l3 = virtualinvoke r28.<com.hp.hpl.jena.sparql.path.P_Mod: long getMax()>();

        $l4 = virtualinvoke r28.<com.hp.hpl.jena.sparql.path.P_Mod: long getMin()>();

        l20 = $l3 - $l4;

        $b5 = l20 cmp 0L;

        $i28 = (int) $b5;

        if $i28 >= 0 goto label11;

        l20 = 0L;

     label11:
        $r7 = virtualinvoke r28.<com.hp.hpl.jena.sparql.path.P_Mod: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        r30 = staticinvoke <com.hp.hpl.jena.sparql.path.PathFactory: com.hp.hpl.jena.sparql.path.Path pathMod(com.hp.hpl.jena.sparql.path.Path,long,long)>($r7, 0L, l20);

     label12:
        $r31 = virtualinvoke r8.<com.hp.hpl.jena.sparql.core.VarAlloc: com.hp.hpl.jena.sparql.core.Var allocVar()>();

        $z7 = virtualinvoke r3.<com.hp.hpl.jena.graph.Node: boolean isVariable()>();

        if $z7 == 0 goto label13;

        $z6 = virtualinvoke r4.<com.hp.hpl.jena.graph.Node: boolean isVariable()>();

        if $z6 == 0 goto label14;

     label13:
        staticinvoke <com.hp.hpl.jena.sparql.path.PathCompiler: void reduce(com.hp.hpl.jena.sparql.core.PathBlock,com.hp.hpl.jena.sparql.core.VarAlloc,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node)>(r1, r8, r3, $r6, $r31);

        staticinvoke <com.hp.hpl.jena.sparql.path.PathCompiler: void reduce(com.hp.hpl.jena.sparql.core.PathBlock,com.hp.hpl.jena.sparql.core.VarAlloc,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node)>(r1, r8, $r31, r30, r4);

        goto label15;

     label14:
        staticinvoke <com.hp.hpl.jena.sparql.path.PathCompiler: void reduce(com.hp.hpl.jena.sparql.core.PathBlock,com.hp.hpl.jena.sparql.core.VarAlloc,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node)>(r1, r8, $r31, r30, r4);

        staticinvoke <com.hp.hpl.jena.sparql.path.PathCompiler: void reduce(com.hp.hpl.jena.sparql.core.PathBlock,com.hp.hpl.jena.sparql.core.VarAlloc,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node)>(r1, r8, r3, $r6, $r31);

     label15:
        return;

     label16:
        $r34 = new com.hp.hpl.jena.sparql.core.TriplePath;

        specialinvoke $r34.<com.hp.hpl.jena.sparql.core.TriplePath: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node)>(r3, r0, r4);

        virtualinvoke r1.<com.hp.hpl.jena.sparql.core.PathBlock: void add(com.hp.hpl.jena.sparql.core.TriplePath)>($r34);

        return;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.sparql.core.VarAlloc $r0;

        $r0 = new com.hp.hpl.jena.sparql.core.VarAlloc;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.core.VarAlloc: void <init>(java.lang.String)>("?P");

        <com.hp.hpl.jena.sparql.path.PathCompiler: com.hp.hpl.jena.sparql.core.VarAlloc varAlloc> = $r0;

        return;
    }
}
