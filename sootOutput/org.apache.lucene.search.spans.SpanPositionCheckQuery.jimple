public abstract class org.apache.lucene.search.spans.SpanPositionCheckQuery extends org.apache.lucene.search.spans.SpanQuery implements java.lang.Cloneable
{
    protected org.apache.lucene.search.spans.SpanQuery match;

    public void <init>(org.apache.lucene.search.spans.SpanQuery)
    {
        org.apache.lucene.search.spans.SpanQuery r1;
        org.apache.lucene.search.spans.SpanPositionCheckQuery r0;

        r0 := @this: org.apache.lucene.search.spans.SpanPositionCheckQuery;

        r1 := @parameter0: org.apache.lucene.search.spans.SpanQuery;

        specialinvoke r0.<org.apache.lucene.search.spans.SpanQuery: void <init>()>();

        r0.<org.apache.lucene.search.spans.SpanPositionCheckQuery: org.apache.lucene.search.spans.SpanQuery match> = r1;

        return;
    }

    public org.apache.lucene.search.spans.SpanQuery getMatch()
    {
        org.apache.lucene.search.spans.SpanQuery $r1;
        org.apache.lucene.search.spans.SpanPositionCheckQuery r0;

        r0 := @this: org.apache.lucene.search.spans.SpanPositionCheckQuery;

        $r1 = r0.<org.apache.lucene.search.spans.SpanPositionCheckQuery: org.apache.lucene.search.spans.SpanQuery match>;

        return $r1;
    }

    public java.lang.String getField()
    {
        java.lang.String $r2;
        org.apache.lucene.search.spans.SpanQuery $r1;
        org.apache.lucene.search.spans.SpanPositionCheckQuery r0;

        r0 := @this: org.apache.lucene.search.spans.SpanPositionCheckQuery;

        $r1 = r0.<org.apache.lucene.search.spans.SpanPositionCheckQuery: org.apache.lucene.search.spans.SpanQuery match>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.search.spans.SpanQuery: java.lang.String getField()>();

        return $r2;
    }

    public void extractTerms(java.util.Set)
    {
        java.util.Set r1;
        org.apache.lucene.search.spans.SpanQuery $r2;
        org.apache.lucene.search.spans.SpanPositionCheckQuery r0;

        r0 := @this: org.apache.lucene.search.spans.SpanPositionCheckQuery;

        r1 := @parameter0: java.util.Set;

        $r2 = r0.<org.apache.lucene.search.spans.SpanPositionCheckQuery: org.apache.lucene.search.spans.SpanQuery match>;

        virtualinvoke $r2.<org.apache.lucene.search.spans.SpanQuery: void extractTerms(java.util.Set)>(r1);

        return;
    }

    protected abstract org.apache.lucene.search.spans.SpanPositionCheckQuery$AcceptStatus acceptPosition(org.apache.lucene.search.spans.Spans) throws java.io.IOException;

    public org.apache.lucene.search.spans.Spans getSpans(org.apache.lucene.index.AtomicReaderContext, org.apache.lucene.util.Bits, java.util.Map) throws java.io.IOException
    {
        org.apache.lucene.search.spans.SpanPositionCheckQuery r1;
        java.util.Map r4;
        org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan $r0;
        org.apache.lucene.util.Bits r3;
        org.apache.lucene.index.AtomicReaderContext r2;

        r1 := @this: org.apache.lucene.search.spans.SpanPositionCheckQuery;

        r2 := @parameter0: org.apache.lucene.index.AtomicReaderContext;

        r3 := @parameter1: org.apache.lucene.util.Bits;

        r4 := @parameter2: java.util.Map;

        $r0 = new org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan;

        specialinvoke $r0.<org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan: void <init>(org.apache.lucene.search.spans.SpanPositionCheckQuery,org.apache.lucene.index.AtomicReaderContext,org.apache.lucene.util.Bits,java.util.Map)>(r1, r2, r3, r4);

        return $r0;
    }

    public org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader) throws java.io.IOException
    {
        org.apache.lucene.search.Query $r3, $r6;
        org.apache.lucene.search.spans.SpanPositionCheckQuery r0, r7;
        org.apache.lucene.search.spans.SpanQuery $r2, r4, $r5;
        org.apache.lucene.index.IndexReader r1;

        r0 := @this: org.apache.lucene.search.spans.SpanPositionCheckQuery;

        r1 := @parameter0: org.apache.lucene.index.IndexReader;

        r7 = null;

        $r2 = r0.<org.apache.lucene.search.spans.SpanPositionCheckQuery: org.apache.lucene.search.spans.SpanQuery match>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.search.spans.SpanQuery: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)>(r1);

        r4 = (org.apache.lucene.search.spans.SpanQuery) $r3;

        $r5 = r0.<org.apache.lucene.search.spans.SpanPositionCheckQuery: org.apache.lucene.search.spans.SpanQuery match>;

        if r4 == $r5 goto label1;

        $r6 = virtualinvoke r0.<org.apache.lucene.search.spans.SpanPositionCheckQuery: org.apache.lucene.search.Query clone()>();

        r7 = (org.apache.lucene.search.spans.SpanPositionCheckQuery) $r6;

        r7.<org.apache.lucene.search.spans.SpanPositionCheckQuery: org.apache.lucene.search.spans.SpanQuery match> = r4;

     label1:
        if r7 == null goto label2;

        return r7;

     label2:
        return r0;
    }
}
