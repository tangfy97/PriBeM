final class org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap extends java.lang.Object
{
    private static int CHUNK_SHIFT;
    private static int CHUNK_SIZE;
    private static int CHUNK_MASK;
    private static int INITIAL_CHUNK_COUNT;
    private static int[][][] caseInsensitiveMap;
    private static int LOWER_CASE_MATCH;
    private static int UPPER_CASE_MATCH;

    void <init>()
    {
        org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap r0;

        r0 := @this: org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int[] get(int)
    {
        int i0;
        int[] $r0;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = staticinvoke <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int[] getMapping(int)>(i0);

        goto label2;

     label1:
        $r0 = null;

     label2:
        return $r0;
    }

    private static int[] getMapping(int)
    {
        int[][] $r1;
        int[][][] $r0;
        int[] $r2;
        int i0, $i1, i2, $i3, i4;

        i0 := @parameter0: int;

        $i1 = <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int CHUNK_SHIFT>;

        i2 = i0 >>> $i1;

        $i3 = <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int CHUNK_MASK>;

        i4 = i0 & $i3;

        $r0 = <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int[][][] caseInsensitiveMap>;

        $r1 = $r0[i2];

        $r2 = $r1[i4];

        return $r2;
    }

    private static void buildCaseInsensitiveMap()
    {
        byte b12, b14, b15, b16;
        int[] $r1, $r2, $r3, r4;
        int[][][] $r0;
        int $i0, $i1, $i6, $i7, $i8, $i9, $i10, i11, i13, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        char $c2, $c3, $c4, $c5;

        $i1 = <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int INITIAL_CHUNK_COUNT>;

        $i0 = <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int CHUNK_SIZE>;

        $r0 = newmultiarray (int)[$i1][$i0][];

        <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int[][][] caseInsensitiveMap> = $r0;

        i11 = 0;

        goto label7;

     label1:
        $c2 = (char) i11;

        $c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c2);

        $c4 = (char) i11;

        $c5 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c4);

        $i17 = (int) $c3;

        $i18 = (int) $c5;

        if $i17 != $i18 goto label2;

        $i19 = (int) $c3;

        if $i19 == i11 goto label6;

     label2:
        $r3 = newarray (int)[2];

        r4 = $r3;

        b12 = 0;

        b16 = 0;

        b15 = 0;

        b14 = 0;

        $i20 = (int) $c3;

        if $i20 == i11 goto label3;

        $i21 = (int) $c3;

        $r3[0] = $i21;

        b12 = 2;

        b16 = 2;

        b15 = 2;

        b14 = 2;

        $i9 = <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int LOWER_CASE_MATCH>;

        $r3[1] = $i9;

        $i22 = (int) $c3;

        $r2 = staticinvoke <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int[] getMapping(int)>($i22);

        if $r2 == null goto label3;

        $i10 = <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int LOWER_CASE_MATCH>;

        $i23 = (int) $c3;

        r4 = staticinvoke <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int[] updateMap(int,int[],int,int[],int)>(i11, $r3, $i23, $r2, $i10);

     label3:
        $i24 = (int) $c5;

        if $i24 == i11 goto label5;

        $i6 = lengthof r4;

        if b15 != $i6 goto label4;

        r4 = staticinvoke <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int[] expandMap(int[],int)>(r4, 2);

     label4:
        i13 = b16 + 1;

        $i25 = (int) $c5;

        r4[b14] = $i25;

        $i7 = <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int UPPER_CASE_MATCH>;

        r4[i13] = $i7;

        $i26 = (int) $c5;

        $r1 = staticinvoke <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int[] getMapping(int)>($i26);

        if $r1 == null goto label5;

        $i8 = <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int UPPER_CASE_MATCH>;

        $i27 = (int) $c5;

        r4 = staticinvoke <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int[] updateMap(int,int[],int,int[],int)>(i11, r4, $i27, $r1, $i8);

     label5:
        staticinvoke <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: void set(int,int[])>(i11, r4);

     label6:
        i11 = i11 + 1;

     label7:
        if i11 < 65536 goto label1;

        return;
    }

    private static int[] expandMap(int[], int)
    {
        int[] r0, r1;
        int i0, i1, $i2;

        r0 := @parameter0: int[];

        i1 := @parameter1: int;

        i0 = lengthof r0;

        $i2 = i0 + i1;

        r1 = newarray (int)[$i2];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, i0);

        return r1;
    }

    private static void set(int, int[])
    {
        int[][] $r2;
        int[][][] $r0;
        int[] r1;
        int i0, $i1, i2, $i3, i4;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        $i1 = <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int CHUNK_SHIFT>;

        i2 = i0 >>> $i1;

        $i3 = <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int CHUNK_MASK>;

        i4 = i0 & $i3;

        $r0 = <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int[][][] caseInsensitiveMap>;

        $r2 = $r0[i2];

        $r2[i4] = r1;

        return;
    }

    private static int[] updateMap(int, int[], int, int[], int)
    {
        int[] $r0, $r1, $r2, r3, r4;
        int i0, i1, i2, i3, i4, $i5;
        boolean $z0, $z1, $z2, $z3;

        i3 := @parameter0: int;

        r3 := @parameter1: int[];

        i1 := @parameter2: int;

        r4 := @parameter3: int[];

        i2 := @parameter4: int;

        i4 = 0;

        goto label4;

     label1:
        i0 = r4[i4];

        $r0 = staticinvoke <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int[] getMapping(int)>(i0);

        if $r0 == null goto label3;

        $z0 = staticinvoke <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: boolean contains(int[],int,int)>($r0, i1, i2);

        if $z0 == 0 goto label3;

        $z1 = staticinvoke <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: boolean contains(int[],int)>($r0, i3);

        if $z1 != 0 goto label2;

        $r1 = staticinvoke <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int[] expandAndAdd(int[],int,int)>($r0, i3, i2);

        staticinvoke <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: void set(int,int[])>(i0, $r1);

     label2:
        $z2 = staticinvoke <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: boolean contains(int[],int)>(r3, i0);

        if $z2 != 0 goto label3;

        r3 = staticinvoke <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int[] expandAndAdd(int[],int,int)>(r3, i0, i2);

     label3:
        i4 = i4 + 2;

     label4:
        $i5 = lengthof r4;

        if i4 < $i5 goto label1;

        $z3 = staticinvoke <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: boolean contains(int[],int)>(r4, i3);

        if $z3 != 0 goto label5;

        $r2 = staticinvoke <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int[] expandAndAdd(int[],int,int)>(r4, i3, i2);

        staticinvoke <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: void set(int,int[])>(i1, $r2);

     label5:
        return r3;
    }

    private static boolean contains(int[], int)
    {
        int[] r0;
        int $i0, i1, $i2, i3;

        r0 := @parameter0: int[];

        i1 := @parameter1: int;

        i3 = 0;

        goto label3;

     label1:
        $i2 = r0[i3];

        if $i2 != i1 goto label2;

        return 1;

     label2:
        i3 = i3 + 2;

     label3:
        $i0 = lengthof r0;

        if i3 < $i0 goto label1;

        return 0;
    }

    private static boolean contains(int[], int, int)
    {
        int[] r0;
        int i0, $i1, $i2, i3, $i4, i5, $i6;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i3 := @parameter2: int;

        i5 = 0;

        goto label3;

     label1:
        $i1 = r0[i5];

        if $i1 != i0 goto label2;

        $i2 = i5 + 1;

        $i4 = r0[$i2];

        if $i4 != i3 goto label2;

        return 1;

     label2:
        i5 = i5 + 2;

     label3:
        $i6 = lengthof r0;

        if i5 < $i6 goto label1;

        return 0;
    }

    private static int[] expandAndAdd(int[], int, int)
    {
        int[] r0, r1;
        int i0, $i1, i2, i3, $i4;

        r0 := @parameter0: int[];

        i2 := @parameter1: int;

        i3 := @parameter2: int;

        i0 = lengthof r0;

        $i1 = i0 + 2;

        r1 = newarray (int)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, i0);

        r1[i0] = i2;

        $i4 = i0 + 1;

        r1[$i4] = i3;

        return r1;
    }

    static void <clinit>()
    {
        int $i0, $i1, $i2, $i3;

        <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int CHUNK_SHIFT> = 10;

        $i0 = <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int CHUNK_SHIFT>;

        $i1 = 1 << $i0;

        <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int CHUNK_SIZE> = $i1;

        $i2 = <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int CHUNK_SIZE>;

        $i3 = $i2 - 1;

        <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int CHUNK_MASK> = $i3;

        <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int INITIAL_CHUNK_COUNT> = 64;

        <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int LOWER_CASE_MATCH> = 1;

        <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: int UPPER_CASE_MATCH> = 2;

        staticinvoke <org.apache.xerces.impl.xpath.regex.CaseInsensitiveMap: void buildCaseInsensitiveMap()>();

        return;
    }
}
