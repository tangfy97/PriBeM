public class com.jidesoft.swing.HeaderBox extends com.jidesoft.swing.JideButton
{
    private static final java.lang.String uiClassID;
    public static final java.lang.String CLIENT_PROPERTY_TABLE_CELL_EDITOR;

    public void <init>()
    {
        com.jidesoft.swing.HeaderBox r0;

        r0 := @this: com.jidesoft.swing.HeaderBox;

        specialinvoke r0.<com.jidesoft.swing.JideButton: void <init>()>();

        virtualinvoke r0.<com.jidesoft.swing.HeaderBox: void setOpaque(boolean)>(0);

        virtualinvoke r0.<com.jidesoft.swing.HeaderBox: void setRolloverEnabled(boolean)>(1);

        virtualinvoke r0.<com.jidesoft.swing.HeaderBox: void setRequestFocusEnabled(boolean)>(1);

        return;
    }

    public void updateUI()
    {
        java.lang.Object $r0;
        com.jidesoft.swing.HeaderBox r1;
        javax.swing.plaf.ComponentUI $r2;

        r1 := @this: com.jidesoft.swing.HeaderBox;

        $r0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("HeaderBoxUI");

        if $r0 != null goto label1;

        staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: void installJideExtension()>();

     label1:
        $r2 = staticinvoke <javax.swing.UIManager: javax.swing.plaf.ComponentUI getUI(javax.swing.JComponent)>(r1);

        virtualinvoke r1.<com.jidesoft.swing.HeaderBox: void setUI(javax.swing.plaf.ComponentUI)>($r2);

        return;
    }

    public java.lang.String getUIClassID()
    {
        com.jidesoft.swing.HeaderBox r0;

        r0 := @this: com.jidesoft.swing.HeaderBox;

        return "HeaderBoxUI";
    }

    public static void <clinit>()
    {
        <com.jidesoft.swing.HeaderBox: java.lang.String CLIENT_PROPERTY_TABLE_CELL_EDITOR> = "HeaderBox.isTableCellEditor";

        <com.jidesoft.swing.HeaderBox: java.lang.String uiClassID> = "HeaderBoxUI";

        return;
    }
}
