public class org.apache.poi.xssf.model.SingleXmlCells extends org.apache.poi.POIXMLDocumentPart
{
    private org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSingleXmlCells singleXMLCells;

    public void <init>()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSingleXmlCells $r1;
        org.apache.poi.xssf.model.SingleXmlCells r0;

        r0 := @this: org.apache.poi.xssf.model.SingleXmlCells;

        specialinvoke r0.<org.apache.poi.POIXMLDocumentPart: void <init>()>();

        $r1 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSingleXmlCells$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSingleXmlCells newInstance()>();

        r0.<org.apache.poi.xssf.model.SingleXmlCells: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSingleXmlCells singleXMLCells> = $r1;

        return;
    }

    public void <init>(org.apache.poi.openxml4j.opc.PackagePart, org.apache.poi.openxml4j.opc.PackageRelationship) throws java.io.IOException
    {
        org.apache.poi.openxml4j.opc.PackagePart r1;
        org.apache.poi.xssf.model.SingleXmlCells r0;
        org.apache.poi.openxml4j.opc.PackageRelationship r2;
        java.io.InputStream $r3;

        r0 := @this: org.apache.poi.xssf.model.SingleXmlCells;

        r1 := @parameter0: org.apache.poi.openxml4j.opc.PackagePart;

        r2 := @parameter1: org.apache.poi.openxml4j.opc.PackageRelationship;

        specialinvoke r0.<org.apache.poi.POIXMLDocumentPart: void <init>(org.apache.poi.openxml4j.opc.PackagePart,org.apache.poi.openxml4j.opc.PackageRelationship)>(r1, r2);

        $r3 = virtualinvoke r1.<org.apache.poi.openxml4j.opc.PackagePart: java.io.InputStream getInputStream()>();

        virtualinvoke r0.<org.apache.poi.xssf.model.SingleXmlCells: void readFrom(java.io.InputStream)>($r3);

        return;
    }

    public void readFrom(java.io.InputStream) throws java.io.IOException
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.SingleXmlCellsDocument $r1;
        org.apache.xmlbeans.XmlException $r4;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSingleXmlCells $r3;
        java.io.IOException $r5;
        java.lang.String $r6;
        org.apache.poi.xssf.model.SingleXmlCells r2;
        java.io.InputStream r0;

        r2 := @this: org.apache.poi.xssf.model.SingleXmlCells;

        r0 := @parameter0: java.io.InputStream;

     label1:
        $r1 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.SingleXmlCellsDocument$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.SingleXmlCellsDocument parse(java.io.InputStream)>(r0);

        $r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.SingleXmlCellsDocument: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSingleXmlCells getSingleXmlCells()>();

        r2.<org.apache.poi.xssf.model.SingleXmlCells: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSingleXmlCells singleXMLCells> = $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.io.IOException;

        $r6 = virtualinvoke $r4.<org.apache.xmlbeans.XmlException: java.lang.String getLocalizedMessage()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label4:
        return;

        catch org.apache.xmlbeans.XmlException from label1 to label2 with label3;
    }

    public org.apache.poi.xssf.usermodel.XSSFSheet getXSSFSheet()
    {
        org.apache.poi.xssf.usermodel.XSSFSheet $r2;
        org.apache.poi.POIXMLDocumentPart $r1;
        org.apache.poi.xssf.model.SingleXmlCells r0;

        r0 := @this: org.apache.poi.xssf.model.SingleXmlCells;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.model.SingleXmlCells: org.apache.poi.POIXMLDocumentPart getParent()>();

        $r2 = (org.apache.poi.xssf.usermodel.XSSFSheet) $r1;

        return $r2;
    }

    protected void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.SingleXmlCellsDocument $r0;
        java.io.OutputStream r3;
        org.apache.xmlbeans.XmlOptions $r4;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSingleXmlCells $r2;
        org.apache.poi.xssf.model.SingleXmlCells r1;

        r1 := @this: org.apache.poi.xssf.model.SingleXmlCells;

        r3 := @parameter0: java.io.OutputStream;

        $r0 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.SingleXmlCellsDocument$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.SingleXmlCellsDocument newInstance()>();

        $r2 = r1.<org.apache.poi.xssf.model.SingleXmlCells: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSingleXmlCells singleXMLCells>;

        interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.SingleXmlCellsDocument: void setSingleXmlCells(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSingleXmlCells)>($r2);

        $r4 = <org.apache.poi.xssf.model.SingleXmlCells: org.apache.xmlbeans.XmlOptions DEFAULT_XML_OPTIONS>;

        interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.SingleXmlCellsDocument: void save(java.io.OutputStream,org.apache.xmlbeans.XmlOptions)>(r3, $r4);

        return;
    }

    protected void commit() throws java.io.IOException
    {
        java.io.OutputStream $r2;
        org.apache.poi.openxml4j.opc.PackagePart $r1;
        org.apache.poi.xssf.model.SingleXmlCells r0;

        r0 := @this: org.apache.poi.xssf.model.SingleXmlCells;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.model.SingleXmlCells: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.openxml4j.opc.PackagePart: java.io.OutputStream getOutputStream()>();

        virtualinvoke r0.<org.apache.poi.xssf.model.SingleXmlCells: void writeTo(java.io.OutputStream)>($r2);

        virtualinvoke $r2.<java.io.OutputStream: void close()>();

        return;
    }

    public org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSingleXmlCells getCTSingleXMLCells()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSingleXmlCells $r1;
        org.apache.poi.xssf.model.SingleXmlCells r0;

        r0 := @this: org.apache.poi.xssf.model.SingleXmlCells;

        $r1 = r0.<org.apache.poi.xssf.model.SingleXmlCells: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSingleXmlCells singleXMLCells>;

        return $r1;
    }

    public java.util.List getAllSimpleXmlCell()
    {
        java.util.Iterator $r4;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSingleXmlCell r6;
        org.apache.poi.xssf.model.SingleXmlCells r1;
        org.apache.poi.xssf.usermodel.helpers.XSSFSingleXmlCell $r7;
        java.util.List $r3;
        java.util.Vector $r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSingleXmlCells $r2;
        java.lang.Object $r5;
        boolean $z0;

        r1 := @this: org.apache.poi.xssf.model.SingleXmlCells;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        $r2 = r1.<org.apache.poi.xssf.model.SingleXmlCells: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSingleXmlCells singleXMLCells>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSingleXmlCells: java.util.List getSingleXmlCellList()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSingleXmlCell) $r5;

        $r7 = new org.apache.poi.xssf.usermodel.helpers.XSSFSingleXmlCell;

        specialinvoke $r7.<org.apache.poi.xssf.usermodel.helpers.XSSFSingleXmlCell: void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSingleXmlCell,org.apache.poi.xssf.model.SingleXmlCells)>(r6, r1);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        return $r0;
    }
}
