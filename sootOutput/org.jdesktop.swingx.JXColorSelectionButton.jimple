public class org.jdesktop.swingx.JXColorSelectionButton extends javax.swing.JButton
{
    private java.awt.image.BufferedImage colorwell;
    private javax.swing.JDialog dialog;
    private javax.swing.JColorChooser chooser;

    public void <init>()
    {
        java.awt.Color $r1;
        org.jdesktop.swingx.JXColorSelectionButton r0;

        r0 := @this: org.jdesktop.swingx.JXColorSelectionButton;

        $r1 = <java.awt.Color: java.awt.Color red>;

        specialinvoke r0.<org.jdesktop.swingx.JXColorSelectionButton: void <init>(java.awt.Color)>($r1);

        return;
    }

    public void <init>(java.awt.Color)
    {
        java.awt.Color r1;
        org.jdesktop.swingx.JXColorSelectionButton$1 $r6;
        java.awt.image.BufferedImage $r5;
        org.jdesktop.swingx.JXColorSelectionButton$ActionHandler $r2;
        java.lang.Exception $r7;
        java.lang.Class $r3;
        org.jdesktop.swingx.JXColorSelectionButton r0;
        java.io.InputStream $r4;

        r0 := @this: org.jdesktop.swingx.JXColorSelectionButton;

        r1 := @parameter0: java.awt.Color;

        specialinvoke r0.<javax.swing.JButton: void <init>()>();

        r0.<org.jdesktop.swingx.JXColorSelectionButton: javax.swing.JDialog dialog> = null;

        r0.<org.jdesktop.swingx.JXColorSelectionButton: javax.swing.JColorChooser chooser> = null;

        virtualinvoke r0.<org.jdesktop.swingx.JXColorSelectionButton: void setBackground(java.awt.Color)>(r1);

        $r2 = new org.jdesktop.swingx.JXColorSelectionButton$ActionHandler;

        specialinvoke $r2.<org.jdesktop.swingx.JXColorSelectionButton$ActionHandler: void <init>(org.jdesktop.swingx.JXColorSelectionButton,org.jdesktop.swingx.JXColorSelectionButton$1)>(r0, null);

        virtualinvoke r0.<org.jdesktop.swingx.JXColorSelectionButton: void addActionListener(java.awt.event.ActionListener)>($r2);

        virtualinvoke r0.<org.jdesktop.swingx.JXColorSelectionButton: void setContentAreaFilled(boolean)>(0);

        virtualinvoke r0.<org.jdesktop.swingx.JXColorSelectionButton: void setOpaque(boolean)>(0);

     label1:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("color/colorwell.png");

        $r5 = staticinvoke <javax.imageio.ImageIO: java.awt.image.BufferedImage read(java.io.InputStream)>($r4);

        r0.<org.jdesktop.swingx.JXColorSelectionButton: java.awt.image.BufferedImage colorwell> = $r5;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

     label4:
        $r6 = new org.jdesktop.swingx.JXColorSelectionButton$1;

        specialinvoke $r6.<org.jdesktop.swingx.JXColorSelectionButton$1: void <init>(org.jdesktop.swingx.JXColorSelectionButton)>(r0);

        virtualinvoke r0.<org.jdesktop.swingx.JXColorSelectionButton: void addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>("background", $r6);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void paintComponent(java.awt.Graphics)
    {
        java.awt.Color $r1, r2, $r7, $r14, $r15, $r17;
        org.jdesktop.swingx.JXColorSelectionButton r0;
        java.lang.Throwable $r16;
        java.awt.RenderingHints$Key $r6;
        boolean $z0, $z1;
        java.awt.image.BufferedImage $r10, $r13;
        java.awt.Graphics r3, $r4;
        float $f0, $f1, $f2, $f3;
        java.awt.geom.Ellipse2D$Float $r8, $r9;
        java.awt.Insets $r12;
        java.awt.Graphics2D $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50;
        java.lang.Object $r5;

        r0 := @this: org.jdesktop.swingx.JXColorSelectionButton;

        r3 := @parameter0: java.awt.Graphics;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXColorSelectionButton: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $r15 = virtualinvoke r0.<org.jdesktop.swingx.JXColorSelectionButton: java.awt.Color getBackground()>();

        $r17 = staticinvoke <org.jdesktop.swingx.color.ColorUtil: java.awt.Color removeAlpha(java.awt.Color)>($r15);

        goto label2;

     label1:
        $r1 = <java.awt.Color: java.awt.Color LIGHT_GRAY>;

        $r17 = staticinvoke <org.jdesktop.swingx.plaf.UIManagerExt: java.awt.Color getSafeColor(java.lang.Object,java.awt.Color)>("Button.disabledForeground", $r1);

     label2:
        r2 = $r17;

        $z1 = staticinvoke <org.jdesktop.swingx.util.OS: boolean isMacOSX()>();

        if $z1 == 0 goto label3;

        $r10 = r0.<org.jdesktop.swingx.JXColorSelectionButton: java.awt.image.BufferedImage colorwell>;

        if $r10 == null goto label3;

        $r12 = new java.awt.Insets;

        specialinvoke $r12.<java.awt.Insets: void <init>(int,int,int,int)>(5, 5, 5, 5);

        $r13 = r0.<org.jdesktop.swingx.JXColorSelectionButton: java.awt.image.BufferedImage colorwell>;

        staticinvoke <org.jdesktop.swingx.color.ColorUtil: void tileStretchPaint(java.awt.Graphics,javax.swing.JComponent,java.awt.image.BufferedImage,java.awt.Insets)>(r3, r0, $r13, $r12);

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r17);

        $i9 = $r12.<java.awt.Insets: int left>;

        $i10 = $r12.<java.awt.Insets: int top>;

        $i11 = virtualinvoke r0.<org.jdesktop.swingx.JXColorSelectionButton: int getWidth()>();

        $i12 = $r12.<java.awt.Insets: int left>;

        $i14 = $i11 - $i12;

        $i13 = $r12.<java.awt.Insets: int right>;

        $i15 = $i14 - $i13;

        $i16 = virtualinvoke r0.<org.jdesktop.swingx.JXColorSelectionButton: int getHeight()>();

        $i17 = $r12.<java.awt.Insets: int top>;

        $i19 = $i16 - $i17;

        $i18 = $r12.<java.awt.Insets: int bottom>;

        $i20 = $i19 - $i18;

        virtualinvoke r3.<java.awt.Graphics: void fillRect(int,int,int,int)>($i9, $i10, $i15, $i20);

        $r14 = staticinvoke <org.jdesktop.swingx.color.ColorUtil: java.awt.Color setBrightness(java.awt.Color,float)>($r17, 0.85F);

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r14);

        $i21 = $r12.<java.awt.Insets: int left>;

        $i22 = $r12.<java.awt.Insets: int top>;

        $i23 = virtualinvoke r0.<org.jdesktop.swingx.JXColorSelectionButton: int getWidth()>();

        $i24 = $r12.<java.awt.Insets: int left>;

        $i26 = $i23 - $i24;

        $i25 = $r12.<java.awt.Insets: int right>;

        $i27 = $i26 - $i25;

        $i28 = $i27 - 1;

        $i29 = virtualinvoke r0.<org.jdesktop.swingx.JXColorSelectionButton: int getHeight()>();

        $i30 = $r12.<java.awt.Insets: int top>;

        $i32 = $i29 - $i30;

        $i31 = $r12.<java.awt.Insets: int bottom>;

        $i33 = $i32 - $i31;

        $i34 = $i33 - 1;

        virtualinvoke r3.<java.awt.Graphics: void drawRect(int,int,int,int)>($i21, $i22, $i28, $i34);

        $i35 = $r12.<java.awt.Insets: int left>;

        $i37 = $i35 + 1;

        $i36 = $r12.<java.awt.Insets: int top>;

        $i38 = $i36 + 1;

        $i39 = virtualinvoke r0.<org.jdesktop.swingx.JXColorSelectionButton: int getWidth()>();

        $i40 = $r12.<java.awt.Insets: int left>;

        $i42 = $i39 - $i40;

        $i41 = $r12.<java.awt.Insets: int right>;

        $i43 = $i42 - $i41;

        $i44 = $i43 - 3;

        $i45 = virtualinvoke r0.<org.jdesktop.swingx.JXColorSelectionButton: int getHeight()>();

        $i46 = $r12.<java.awt.Insets: int top>;

        $i48 = $i45 - $i46;

        $i47 = $r12.<java.awt.Insets: int bottom>;

        $i49 = $i48 - $i47;

        $i50 = $i49 - 3;

        virtualinvoke r3.<java.awt.Graphics: void drawRect(int,int,int,int)>($i37, $i38, $i44, $i50);

        goto label8;

     label3:
        $r4 = virtualinvoke r3.<java.awt.Graphics: java.awt.Graphics create()>();

        $r11 = (java.awt.Graphics2D) $r4;

     label4:
        $r6 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_ANTIALIASING>;

        $r5 = <java.awt.RenderingHints: java.lang.Object VALUE_ANTIALIAS_ON>;

        virtualinvoke $r11.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r6, $r5);

        $r7 = <java.awt.Color: java.awt.Color LIGHT_GRAY>;

        virtualinvoke $r11.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r7);

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.JXColorSelectionButton: int getWidth()>();

        $i1 = virtualinvoke r0.<org.jdesktop.swingx.JXColorSelectionButton: int getHeight()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $r8 = new java.awt.geom.Ellipse2D$Float;

        $i3 = $i2 - 6;

        $f1 = (float) $i3;

        $i4 = $i2 - 6;

        $f0 = (float) $i4;

        specialinvoke $r8.<java.awt.geom.Ellipse2D$Float: void <init>(float,float,float,float)>(3.0F, 3.0F, $f1, $f0);

        virtualinvoke $r11.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r8);

        virtualinvoke $r11.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r2);

        $r9 = new java.awt.geom.Ellipse2D$Float;

        $i5 = $i2 - 6;

        $i6 = $i5 - 2;

        $f3 = (float) $i6;

        $i7 = $i2 - 6;

        $i8 = $i7 - 2;

        $f2 = (float) $i8;

        specialinvoke $r9.<java.awt.geom.Ellipse2D$Float: void <init>(float,float,float,float)>(4.0F, 4.0F, $f3, $f2);

        virtualinvoke $r11.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r9);

     label5:
        virtualinvoke $r11.<java.awt.Graphics2D: void dispose()>();

        goto label8;

     label6:
        $r16 := @caughtexception;

     label7:
        virtualinvoke $r11.<java.awt.Graphics2D: void dispose()>();

        throw $r16;

     label8:
        return;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private void showDialog()
    {
        java.awt.Color $r1;
        javax.swing.JColorChooser $r4, $r10, $r11;
        javax.swing.JDialog $r2, $r3, $r7, $r8;
        org.jdesktop.swingx.JXColorSelectionButton$2 $r5;
        org.jdesktop.swingx.JXColorSelectionButton$3 $r6;
        javax.swing.colorchooser.ColorSelectionModel $r12;
        java.awt.Container $r9;
        org.jdesktop.swingx.JXColorSelectionButton r0;
        org.jdesktop.swingx.JXColorSelectionButton$ColorChangeListener $r13;

        r0 := @this: org.jdesktop.swingx.JXColorSelectionButton;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXColorSelectionButton: java.awt.Color getBackground()>();

        $r2 = r0.<org.jdesktop.swingx.JXColorSelectionButton: javax.swing.JDialog dialog>;

        if $r2 != null goto label1;

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.JXColorSelectionButton: javax.swing.JColorChooser getChooser()>();

        $r5 = new org.jdesktop.swingx.JXColorSelectionButton$2;

        specialinvoke $r5.<org.jdesktop.swingx.JXColorSelectionButton$2: void <init>(org.jdesktop.swingx.JXColorSelectionButton)>(r0);

        $r6 = new org.jdesktop.swingx.JXColorSelectionButton$3;

        specialinvoke $r6.<org.jdesktop.swingx.JXColorSelectionButton$3: void <init>(org.jdesktop.swingx.JXColorSelectionButton,java.awt.Color)>(r0, $r1);

        $r7 = staticinvoke <javax.swing.JColorChooser: javax.swing.JDialog createDialog(java.awt.Component,java.lang.String,boolean,javax.swing.JColorChooser,java.awt.event.ActionListener,java.awt.event.ActionListener)>(r0, "Choose a color", 1, $r4, $r5, $r6);

        r0.<org.jdesktop.swingx.JXColorSelectionButton: javax.swing.JDialog dialog> = $r7;

        $r8 = r0.<org.jdesktop.swingx.JXColorSelectionButton: javax.swing.JDialog dialog>;

        $r9 = virtualinvoke $r8.<javax.swing.JDialog: java.awt.Container getContentPane()>();

        $r10 = virtualinvoke r0.<org.jdesktop.swingx.JXColorSelectionButton: javax.swing.JColorChooser getChooser()>();

        virtualinvoke $r9.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r10);

        $r11 = virtualinvoke r0.<org.jdesktop.swingx.JXColorSelectionButton: javax.swing.JColorChooser getChooser()>();

        $r12 = virtualinvoke $r11.<javax.swing.JColorChooser: javax.swing.colorchooser.ColorSelectionModel getSelectionModel()>();

        $r13 = new org.jdesktop.swingx.JXColorSelectionButton$ColorChangeListener;

        specialinvoke $r13.<org.jdesktop.swingx.JXColorSelectionButton$ColorChangeListener: void <init>(org.jdesktop.swingx.JXColorSelectionButton,org.jdesktop.swingx.JXColorSelectionButton)>(r0, r0);

        interfaceinvoke $r12.<javax.swing.colorchooser.ColorSelectionModel: void addChangeListener(javax.swing.event.ChangeListener)>($r13);

     label1:
        $r3 = r0.<org.jdesktop.swingx.JXColorSelectionButton: javax.swing.JDialog dialog>;

        virtualinvoke $r3.<javax.swing.JDialog: void setVisible(boolean)>(1);

        return;
    }

    public javax.swing.JColorChooser getChooser()
    {
        javax.swing.JColorChooser $r1, $r2, $r3, $r5;
        org.jdesktop.swingx.color.EyeDropperColorChooserPanel $r4;
        org.jdesktop.swingx.JXColorSelectionButton r0;

        r0 := @this: org.jdesktop.swingx.JXColorSelectionButton;

        $r1 = r0.<org.jdesktop.swingx.JXColorSelectionButton: javax.swing.JColorChooser chooser>;

        if $r1 != null goto label1;

        $r3 = new javax.swing.JColorChooser;

        specialinvoke $r3.<javax.swing.JColorChooser: void <init>()>();

        r0.<org.jdesktop.swingx.JXColorSelectionButton: javax.swing.JColorChooser chooser> = $r3;

        $r5 = r0.<org.jdesktop.swingx.JXColorSelectionButton: javax.swing.JColorChooser chooser>;

        $r4 = new org.jdesktop.swingx.color.EyeDropperColorChooserPanel;

        specialinvoke $r4.<org.jdesktop.swingx.color.EyeDropperColorChooserPanel: void <init>()>();

        virtualinvoke $r5.<javax.swing.JColorChooser: void addChooserPanel(javax.swing.colorchooser.AbstractColorChooserPanel)>($r4);

     label1:
        $r2 = r0.<org.jdesktop.swingx.JXColorSelectionButton: javax.swing.JColorChooser chooser>;

        return $r2;
    }

    public void setChooser(javax.swing.JColorChooser)
    {
        javax.swing.JColorChooser $r1, r2;
        org.jdesktop.swingx.JXColorSelectionButton r0;

        r0 := @this: org.jdesktop.swingx.JXColorSelectionButton;

        r2 := @parameter0: javax.swing.JColorChooser;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXColorSelectionButton: javax.swing.JColorChooser getChooser()>();

        r0.<org.jdesktop.swingx.JXColorSelectionButton: javax.swing.JColorChooser chooser> = r2;

        virtualinvoke r0.<org.jdesktop.swingx.JXColorSelectionButton: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("chooser", $r1, r2);

        return;
    }

    public java.awt.Dimension getPreferredSize()
    {
        java.awt.image.BufferedImage $r2, $r4, $r5;
        java.awt.Dimension $r1, $r3;
        int $i0, $i1;
        org.jdesktop.swingx.JXColorSelectionButton r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXColorSelectionButton;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXColorSelectionButton: boolean isPreferredSizeSet()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<org.jdesktop.swingx.JXColorSelectionButton: java.awt.image.BufferedImage colorwell>;

        if $r2 != null goto label2;

     label1:
        $r1 = specialinvoke r0.<javax.swing.JButton: java.awt.Dimension getPreferredSize()>();

        return $r1;

     label2:
        $r3 = new java.awt.Dimension;

        $r4 = r0.<org.jdesktop.swingx.JXColorSelectionButton: java.awt.image.BufferedImage colorwell>;

        $i0 = virtualinvoke $r4.<java.awt.image.BufferedImage: int getWidth()>();

        $r5 = r0.<org.jdesktop.swingx.JXColorSelectionButton: java.awt.image.BufferedImage colorwell>;

        $i1 = virtualinvoke $r5.<java.awt.image.BufferedImage: int getHeight()>();

        specialinvoke $r3.<java.awt.Dimension: void <init>(int,int)>($i0, $i1);

        return $r3;
    }

    static void access$100(org.jdesktop.swingx.JXColorSelectionButton)
    {
        org.jdesktop.swingx.JXColorSelectionButton r0;

        r0 := @parameter0: org.jdesktop.swingx.JXColorSelectionButton;

        specialinvoke r0.<org.jdesktop.swingx.JXColorSelectionButton: void showDialog()>();

        return;
    }
}
