final class org.apache.cxf.transport.https.CertificateHostnameVerifier$2 extends org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier
{

    void <init>()
    {
        org.apache.cxf.transport.https.CertificateHostnameVerifier$2 r0;

        r0 := @this: org.apache.cxf.transport.https.CertificateHostnameVerifier$2;

        specialinvoke r0.<org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier: void <init>()>();

        return;
    }

    public final void check(java.lang.String[], java.lang.String[], java.lang.String[]) throws javax.net.ssl.SSLException
    {
        org.apache.cxf.transport.https.CertificateHostnameVerifier$2 r2;
        java.lang.String[] r0, r3, r4;
        java.lang.String $r1;
        boolean $z0;

        r2 := @this: org.apache.cxf.transport.https.CertificateHostnameVerifier$2;

        r0 := @parameter0: java.lang.String[];

        r3 := @parameter1: java.lang.String[];

        r4 := @parameter2: java.lang.String[];

        $r1 = r0[0];

        $z0 = staticinvoke <org.apache.cxf.transport.https.CertificateHostnameVerifier$2: boolean isLocalhost(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r2.<org.apache.cxf.transport.https.CertificateHostnameVerifier$2: void check(java.lang.String[],java.lang.String[],java.lang.String[],boolean,boolean)>(r0, r3, r4, 0, 0);

        return;
    }

    public final java.lang.String toString()
    {
        org.apache.cxf.transport.https.CertificateHostnameVerifier$2 r0;

        r0 := @this: org.apache.cxf.transport.https.CertificateHostnameVerifier$2;

        return "DEFAULT_AND_LOCALHOST";
    }
}
