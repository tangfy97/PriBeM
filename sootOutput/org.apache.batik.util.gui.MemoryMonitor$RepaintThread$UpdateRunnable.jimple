public class org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable extends java.lang.Object implements java.lang.Runnable
{
    public boolean inEventQueue;
    private final org.apache.batik.util.gui.MemoryMonitor$RepaintThread this$0;

    protected void <init>(org.apache.batik.util.gui.MemoryMonitor$RepaintThread)
    {
        org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable r0;
        org.apache.batik.util.gui.MemoryMonitor$RepaintThread r1;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable;

        r1 := @parameter0: org.apache.batik.util.gui.MemoryMonitor$RepaintThread;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable: org.apache.batik.util.gui.MemoryMonitor$RepaintThread this$0> = r1;

        r0.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable: boolean inEventQueue> = 0;

        return;
    }

    public void run()
    {
        java.lang.Throwable $r10;
        org.apache.batik.util.gui.MemoryMonitor$MemoryChangeListener $r9;
        java.util.Iterator $r7;
        java.lang.Runtime $r2, $r4;
        org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable r0;
        long $l0, $l1;
        java.awt.Component r11;
        java.util.List $r6;
        org.apache.batik.util.gui.MemoryMonitor$RepaintThread $r1, $r3, $r5;
        java.lang.Object $r8;
        boolean $z0;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable;

        $r1 = r0.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable: org.apache.batik.util.gui.MemoryMonitor$RepaintThread this$0>;

        $r2 = $r1.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread: java.lang.Runtime runtime>;

        $l0 = virtualinvoke $r2.<java.lang.Runtime: long freeMemory()>();

        $r3 = r0.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable: org.apache.batik.util.gui.MemoryMonitor$RepaintThread this$0>;

        $r4 = $r3.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread: java.lang.Runtime runtime>;

        $l1 = virtualinvoke $r4.<java.lang.Runtime: long totalMemory()>();

        $r5 = r0.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable: org.apache.batik.util.gui.MemoryMonitor$RepaintThread this$0>;

        $r6 = $r5.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread: java.util.List components>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.awt.Component) $r8;

        $r9 = (org.apache.batik.util.gui.MemoryMonitor$MemoryChangeListener) r11;

        interfaceinvoke $r9.<org.apache.batik.util.gui.MemoryMonitor$MemoryChangeListener: void memoryStateChanged(long,long)>($l1, $l0);

        virtualinvoke r11.<java.awt.Component: void repaint()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        entermonitor r0;

     label3:
        r0.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable: boolean inEventQueue> = 0;

        exitmonitor r0;

        goto label5;

     label4:
        $r10 := @caughtexception;

        exitmonitor r0;

        throw $r10;

     label5:
        return;

        catch java.lang.Throwable from label3 to label4 with label4;
    }
}
