public class org.apache.batik.css.engine.value.css2.FontWeightManager extends org.apache.batik.css.engine.value.IdentifierManager
{
    protected static final org.apache.batik.css.engine.value.StringMap values;

    public void <init>()
    {
        org.apache.batik.css.engine.value.css2.FontWeightManager r0;

        r0 := @this: org.apache.batik.css.engine.value.css2.FontWeightManager;

        specialinvoke r0.<org.apache.batik.css.engine.value.IdentifierManager: void <init>()>();

        return;
    }

    public boolean isInheritedProperty()
    {
        org.apache.batik.css.engine.value.css2.FontWeightManager r0;

        r0 := @this: org.apache.batik.css.engine.value.css2.FontWeightManager;

        return 1;
    }

    public boolean isAnimatableProperty()
    {
        org.apache.batik.css.engine.value.css2.FontWeightManager r0;

        r0 := @this: org.apache.batik.css.engine.value.css2.FontWeightManager;

        return 1;
    }

    public boolean isAdditiveProperty()
    {
        org.apache.batik.css.engine.value.css2.FontWeightManager r0;

        r0 := @this: org.apache.batik.css.engine.value.css2.FontWeightManager;

        return 0;
    }

    public int getPropertyType()
    {
        org.apache.batik.css.engine.value.css2.FontWeightManager r0;

        r0 := @this: org.apache.batik.css.engine.value.css2.FontWeightManager;

        return 28;
    }

    public java.lang.String getPropertyName()
    {
        org.apache.batik.css.engine.value.css2.FontWeightManager r0;

        r0 := @this: org.apache.batik.css.engine.value.css2.FontWeightManager;

        return "font-weight";
    }

    public org.apache.batik.css.engine.value.Value getDefaultValue()
    {
        org.apache.batik.css.engine.value.css2.FontWeightManager r1;
        org.apache.batik.css.engine.value.Value $r0;

        r1 := @this: org.apache.batik.css.engine.value.css2.FontWeightManager;

        $r0 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NORMAL_VALUE>;

        return $r0;
    }

    public org.apache.batik.css.engine.value.Value createValue(org.w3c.css.sac.LexicalUnit, org.apache.batik.css.engine.CSSEngine) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.CSSEngine r2;
        short $s0;
        org.w3c.dom.DOMException $r13;
        org.w3c.css.sac.LexicalUnit r0;
        int $i1, $i2;
        org.apache.batik.css.engine.value.css2.FontWeightManager r1;
        org.apache.batik.css.engine.value.Value $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        float $f0;

        r1 := @this: org.apache.batik.css.engine.value.css2.FontWeightManager;

        r0 := @parameter0: org.w3c.css.sac.LexicalUnit;

        r2 := @parameter1: org.apache.batik.css.engine.CSSEngine;

        $s0 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $i2 = (int) $s0;

        if $i2 != 13 goto label11;

        $i1 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: int getIntegerValue()>();

        lookupswitch($i1)
        {
            case 100: goto label01;
            case 200: goto label02;
            case 300: goto label03;
            case 400: goto label04;
            case 500: goto label05;
            case 600: goto label06;
            case 700: goto label07;
            case 800: goto label08;
            case 900: goto label09;
            default: goto label10;
        };

     label01:
        $r12 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_100>;

        return $r12;

     label02:
        $r11 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_200>;

        return $r11;

     label03:
        $r10 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_300>;

        return $r10;

     label04:
        $r9 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_400>;

        return $r9;

     label05:
        $r8 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_500>;

        return $r8;

     label06:
        $r7 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_600>;

        return $r7;

     label07:
        $r6 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_700>;

        return $r6;

     label08:
        $r5 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_800>;

        return $r5;

     label09:
        $r4 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_900>;

        return $r4;

     label10:
        $f0 = (float) $i1;

        $r13 = virtualinvoke r1.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createInvalidFloatValueDOMException(float)>($f0);

        throw $r13;

     label11:
        $r3 = specialinvoke r1.<org.apache.batik.css.engine.value.IdentifierManager: org.apache.batik.css.engine.value.Value createValue(org.w3c.css.sac.LexicalUnit,org.apache.batik.css.engine.CSSEngine)>(r0, r2);

        return $r3;
    }

    public org.apache.batik.css.engine.value.Value createFloatValue(short, float) throws org.w3c.dom.DOMException
    {
        short s0;
        byte $b2;
        org.w3c.dom.DOMException $r10;
        int i1;
        org.apache.batik.css.engine.value.css2.FontWeightManager r0;
        org.apache.batik.css.engine.value.Value $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        float f0, $f1;

        r0 := @this: org.apache.batik.css.engine.value.css2.FontWeightManager;

        s0 := @parameter0: short;

        f0 := @parameter1: float;

        if s0 != 1 goto label10;

        i1 = (int) f0;

        $f1 = (float) i1;

        $b2 = f0 cmpl $f1;

        if $b2 != 0 goto label10;

        lookupswitch(i1)
        {
            case 100: goto label01;
            case 200: goto label02;
            case 300: goto label03;
            case 400: goto label04;
            case 500: goto label05;
            case 600: goto label06;
            case 700: goto label07;
            case 800: goto label08;
            case 900: goto label09;
            default: goto label10;
        };

     label01:
        $r9 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_100>;

        return $r9;

     label02:
        $r8 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_200>;

        return $r8;

     label03:
        $r7 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_300>;

        return $r7;

     label04:
        $r6 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_400>;

        return $r6;

     label05:
        $r5 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_500>;

        return $r5;

     label06:
        $r4 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_600>;

        return $r4;

     label07:
        $r3 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_700>;

        return $r3;

     label08:
        $r2 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_800>;

        return $r2;

     label09:
        $r1 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_900>;

        return $r1;

     label10:
        $r10 = virtualinvoke r0.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createInvalidFloatValueDOMException(float)>(f0);

        throw $r10;
    }

    public org.apache.batik.css.engine.value.Value computeValue(org.apache.batik.css.engine.CSSStylableElement, java.lang.String, org.apache.batik.css.engine.CSSEngine, int, org.apache.batik.css.engine.StyleMap, org.apache.batik.css.engine.value.Value)
    {
        org.apache.batik.css.engine.CSSStylableElement r10, $r11, $r17;
        org.apache.batik.css.engine.CSSEngine r8;
        org.apache.batik.css.engine.StyleMap r7;
        int i0;
        java.lang.String r12;
        org.apache.batik.css.engine.value.css2.FontWeightManager r14;
        org.apache.batik.css.engine.value.Value r0, $r1, $r2, $r3, $r4, $r5, $r6, $r13, $r15, $r18, $r19;
        org.apache.batik.css.engine.CSSContext $r9, $r16;
        float $f0, $f1, f2, f3;

        r14 := @this: org.apache.batik.css.engine.value.css2.FontWeightManager;

        r10 := @parameter0: org.apache.batik.css.engine.CSSStylableElement;

        r12 := @parameter1: java.lang.String;

        r8 := @parameter2: org.apache.batik.css.engine.CSSEngine;

        i0 := @parameter3: int;

        r7 := @parameter4: org.apache.batik.css.engine.StyleMap;

        r0 := @parameter5: org.apache.batik.css.engine.value.Value;

        $r1 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value BOLDER_VALUE>;

        if r0 != $r1 goto label3;

        virtualinvoke r7.<org.apache.batik.css.engine.StyleMap: void putParentRelative(int,boolean)>(i0, 1);

        $r16 = virtualinvoke r8.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSContext getCSSContext()>();

        $r17 = staticinvoke <org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement getParentCSSStylableElement(org.w3c.dom.Element)>(r10);

        if $r17 != null goto label1;

        f2 = 400.0F;

        goto label2;

     label1:
        $r18 = virtualinvoke r8.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.value.Value getComputedStyle(org.apache.batik.css.engine.CSSStylableElement,java.lang.String,int)>($r17, r12, i0);

        f2 = interfaceinvoke $r18.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

     label2:
        $f1 = interfaceinvoke $r16.<org.apache.batik.css.engine.CSSContext: float getBolderFontWeight(float)>(f2);

        $r19 = virtualinvoke r14.<org.apache.batik.css.engine.value.css2.FontWeightManager: org.apache.batik.css.engine.value.Value createFontWeight(float)>($f1);

        return $r19;

     label3:
        $r2 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value LIGHTER_VALUE>;

        if r0 != $r2 goto label6;

        virtualinvoke r7.<org.apache.batik.css.engine.StyleMap: void putParentRelative(int,boolean)>(i0, 1);

        $r9 = virtualinvoke r8.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSContext getCSSContext()>();

        $r11 = staticinvoke <org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement getParentCSSStylableElement(org.w3c.dom.Element)>(r10);

        if $r11 != null goto label4;

        f3 = 400.0F;

        goto label5;

     label4:
        $r13 = virtualinvoke r8.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.value.Value getComputedStyle(org.apache.batik.css.engine.CSSStylableElement,java.lang.String,int)>($r11, r12, i0);

        f3 = interfaceinvoke $r13.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

     label5:
        $f0 = interfaceinvoke $r9.<org.apache.batik.css.engine.CSSContext: float getLighterFontWeight(float)>(f3);

        $r15 = virtualinvoke r14.<org.apache.batik.css.engine.value.css2.FontWeightManager: org.apache.batik.css.engine.value.Value createFontWeight(float)>($f0);

        return $r15;

     label6:
        $r3 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NORMAL_VALUE>;

        if r0 != $r3 goto label7;

        $r6 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_400>;

        return $r6;

     label7:
        $r4 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value BOLD_VALUE>;

        if r0 != $r4 goto label8;

        $r5 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_700>;

        return $r5;

     label8:
        return r0;
    }

    protected org.apache.batik.css.engine.value.Value createFontWeight(float)
    {
        org.apache.batik.css.engine.value.css2.FontWeightManager r9;
        org.apache.batik.css.engine.value.Value $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int $i0;
        float f0;

        r9 := @this: org.apache.batik.css.engine.value.css2.FontWeightManager;

        f0 := @parameter0: float;

        $i0 = (int) f0;

        lookupswitch($i0)
        {
            case 100: goto label1;
            case 200: goto label2;
            case 300: goto label3;
            case 400: goto label4;
            case 500: goto label5;
            case 600: goto label6;
            case 700: goto label7;
            case 800: goto label8;
            default: goto label9;
        };

     label1:
        $r7 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_100>;

        return $r7;

     label2:
        $r6 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_200>;

        return $r6;

     label3:
        $r5 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_300>;

        return $r5;

     label4:
        $r4 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_400>;

        return $r4;

     label5:
        $r3 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_500>;

        return $r3;

     label6:
        $r2 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_600>;

        return $r2;

     label7:
        $r1 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_700>;

        return $r1;

     label8:
        $r0 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_800>;

        return $r0;

     label9:
        $r8 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NUMBER_900>;

        return $r8;
    }

    public org.apache.batik.css.engine.value.StringMap getIdentifiers()
    {
        org.apache.batik.css.engine.value.StringMap $r0;
        org.apache.batik.css.engine.value.css2.FontWeightManager r1;

        r1 := @this: org.apache.batik.css.engine.value.css2.FontWeightManager;

        $r0 = <org.apache.batik.css.engine.value.css2.FontWeightManager: org.apache.batik.css.engine.value.StringMap values>;

        return $r0;
    }

    static void <clinit>()
    {
        org.apache.batik.css.engine.value.Value $r1, $r3, $r5, $r7, $r9;
        org.apache.batik.css.engine.value.StringMap $r0, $r2, $r4, $r6, $r8, $r10;

        $r0 = new org.apache.batik.css.engine.value.StringMap;

        specialinvoke $r0.<org.apache.batik.css.engine.value.StringMap: void <init>()>();

        <org.apache.batik.css.engine.value.css2.FontWeightManager: org.apache.batik.css.engine.value.StringMap values> = $r0;

        $r2 = <org.apache.batik.css.engine.value.css2.FontWeightManager: org.apache.batik.css.engine.value.StringMap values>;

        $r1 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value ALL_VALUE>;

        virtualinvoke $r2.<org.apache.batik.css.engine.value.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("all", $r1);

        $r4 = <org.apache.batik.css.engine.value.css2.FontWeightManager: org.apache.batik.css.engine.value.StringMap values>;

        $r3 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value BOLD_VALUE>;

        virtualinvoke $r4.<org.apache.batik.css.engine.value.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("bold", $r3);

        $r6 = <org.apache.batik.css.engine.value.css2.FontWeightManager: org.apache.batik.css.engine.value.StringMap values>;

        $r5 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value BOLDER_VALUE>;

        virtualinvoke $r6.<org.apache.batik.css.engine.value.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("bolder", $r5);

        $r8 = <org.apache.batik.css.engine.value.css2.FontWeightManager: org.apache.batik.css.engine.value.StringMap values>;

        $r7 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value LIGHTER_VALUE>;

        virtualinvoke $r8.<org.apache.batik.css.engine.value.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("lighter", $r7);

        $r10 = <org.apache.batik.css.engine.value.css2.FontWeightManager: org.apache.batik.css.engine.value.StringMap values>;

        $r9 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NORMAL_VALUE>;

        virtualinvoke $r10.<org.apache.batik.css.engine.value.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("normal", $r9);

        return;
    }
}
