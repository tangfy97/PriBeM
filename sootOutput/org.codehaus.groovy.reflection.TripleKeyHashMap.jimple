public class org.codehaus.groovy.reflection.TripleKeyHashMap extends org.codehaus.groovy.reflection.ComplexKeyHashMap
{

    public void <init>()
    {
        org.codehaus.groovy.reflection.TripleKeyHashMap r0;

        r0 := @this: org.codehaus.groovy.reflection.TripleKeyHashMap;

        specialinvoke r0.<org.codehaus.groovy.reflection.ComplexKeyHashMap: void <init>()>();

        return;
    }

    public final java.lang.Object get(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] $r4, $r5;
        org.codehaus.groovy.reflection.TripleKeyHashMap r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry r7;
        boolean $z0;
        org.codehaus.groovy.reflection.TripleKeyHashMap$Entry $r6;
        java.lang.Object r0, r1, r2;

        r3 := @this: org.codehaus.groovy.reflection.TripleKeyHashMap;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $i1 = 31 * $i0;

        $i2 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $i3 = $i1 + $i2;

        $i4 = 31 * $i3;

        $i5 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

        $i6 = $i4 + $i5;

        $i7 = staticinvoke <org.codehaus.groovy.reflection.TripleKeyHashMap: int hash(int)>($i6);

        $r5 = r3.<org.codehaus.groovy.reflection.TripleKeyHashMap: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] table>;

        $r4 = r3.<org.codehaus.groovy.reflection.TripleKeyHashMap: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] table>;

        $i8 = lengthof $r4;

        $i9 = $i8 - 1;

        $i10 = $i7 & $i9;

        r7 = $r5[$i10];

     label1:
        if r7 == null goto label3;

        $i11 = r7.<org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry: int hash>;

        if $i11 != $i7 goto label2;

        $r6 = (org.codehaus.groovy.reflection.TripleKeyHashMap$Entry) r7;

        $z0 = virtualinvoke r3.<org.codehaus.groovy.reflection.TripleKeyHashMap: boolean checkEquals(org.codehaus.groovy.reflection.TripleKeyHashMap$Entry,java.lang.Object,java.lang.Object,java.lang.Object)>($r6, r0, r1, r2);

        if $z0 == 0 goto label2;

        return r7;

     label2:
        r7 = r7.<org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry next>;

        goto label1;

     label3:
        return null;
    }

    public boolean checkEquals(org.codehaus.groovy.reflection.TripleKeyHashMap$Entry, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.codehaus.groovy.reflection.TripleKeyHashMap r7;
        org.codehaus.groovy.reflection.TripleKeyHashMap$Entry r0;
        java.lang.Object r1, $r2, r3, $r4, r5, $r6;
        boolean $z0, $z1, $z2, $z3;

        r7 := @this: org.codehaus.groovy.reflection.TripleKeyHashMap;

        r0 := @parameter0: org.codehaus.groovy.reflection.TripleKeyHashMap$Entry;

        r1 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r5 := @parameter3: java.lang.Object;

        $r2 = r0.<org.codehaus.groovy.reflection.TripleKeyHashMap$Entry: java.lang.Object key1>;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r4 = r0.<org.codehaus.groovy.reflection.TripleKeyHashMap$Entry: java.lang.Object key2>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label1;

        $r6 = r0.<org.codehaus.groovy.reflection.TripleKeyHashMap$Entry: java.lang.Object key3>;

        $z2 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(r5);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public org.codehaus.groovy.reflection.TripleKeyHashMap$Entry getOrPut(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] $r4, $r5, $r7, $r9, $r10;
        org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry $r8, r13;
        boolean $z0;
        org.codehaus.groovy.reflection.TripleKeyHashMap$Entry $r6, $r11, $r12;
        org.codehaus.groovy.reflection.TripleKeyHashMap r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i12, $i13, $i14, $i15, $i16;
        java.lang.Object r0, r1, r2;

        r3 := @this: org.codehaus.groovy.reflection.TripleKeyHashMap;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $i1 = 31 * $i0;

        $i2 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $i3 = $i1 + $i2;

        $i4 = 31 * $i3;

        $i5 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

        $i6 = $i4 + $i5;

        $i7 = staticinvoke <org.codehaus.groovy.reflection.TripleKeyHashMap: int hash(int)>($i6);

        $r4 = r3.<org.codehaus.groovy.reflection.TripleKeyHashMap: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] table>;

        $i8 = lengthof $r4;

        $i9 = $i8 - 1;

        i10 = $i7 & $i9;

        $r5 = r3.<org.codehaus.groovy.reflection.TripleKeyHashMap: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] table>;

        r13 = $r5[i10];

     label1:
        if r13 == null goto label3;

        $i16 = r13.<org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry: int hash>;

        if $i16 != $i7 goto label2;

        $r11 = (org.codehaus.groovy.reflection.TripleKeyHashMap$Entry) r13;

        $z0 = virtualinvoke r3.<org.codehaus.groovy.reflection.TripleKeyHashMap: boolean checkEquals(org.codehaus.groovy.reflection.TripleKeyHashMap$Entry,java.lang.Object,java.lang.Object,java.lang.Object)>($r11, r0, r1, r2);

        if $z0 == 0 goto label2;

        $r12 = (org.codehaus.groovy.reflection.TripleKeyHashMap$Entry) r13;

        return $r12;

     label2:
        r13 = r13.<org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry next>;

        goto label1;

     label3:
        $r6 = virtualinvoke r3.<org.codehaus.groovy.reflection.TripleKeyHashMap: org.codehaus.groovy.reflection.TripleKeyHashMap$Entry createEntry()>();

        $r7 = r3.<org.codehaus.groovy.reflection.TripleKeyHashMap: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] table>;

        $r8 = $r7[i10];

        $r6.<org.codehaus.groovy.reflection.TripleKeyHashMap$Entry: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry next> = $r8;

        $r6.<org.codehaus.groovy.reflection.TripleKeyHashMap$Entry: int hash> = $i7;

        $r6.<org.codehaus.groovy.reflection.TripleKeyHashMap$Entry: java.lang.Object key1> = r0;

        $r6.<org.codehaus.groovy.reflection.TripleKeyHashMap$Entry: java.lang.Object key2> = r1;

        $r6.<org.codehaus.groovy.reflection.TripleKeyHashMap$Entry: java.lang.Object key3> = r2;

        $r9 = r3.<org.codehaus.groovy.reflection.TripleKeyHashMap: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] table>;

        $r9[i10] = $r6;

        $i11 = r3.<org.codehaus.groovy.reflection.TripleKeyHashMap: int size>;

        $i12 = $i11 + 1;

        r3.<org.codehaus.groovy.reflection.TripleKeyHashMap: int size> = $i12;

        $i13 = r3.<org.codehaus.groovy.reflection.TripleKeyHashMap: int threshold>;

        if $i12 != $i13 goto label4;

        $r10 = r3.<org.codehaus.groovy.reflection.TripleKeyHashMap: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] table>;

        $i14 = lengthof $r10;

        $i15 = 2 * $i14;

        virtualinvoke r3.<org.codehaus.groovy.reflection.TripleKeyHashMap: void resize(int)>($i15);

     label4:
        return $r6;
    }

    public org.codehaus.groovy.reflection.TripleKeyHashMap$Entry createEntry()
    {
        org.codehaus.groovy.reflection.TripleKeyHashMap r1;
        org.codehaus.groovy.reflection.TripleKeyHashMap$Entry $r0;

        r1 := @this: org.codehaus.groovy.reflection.TripleKeyHashMap;

        $r0 = new org.codehaus.groovy.reflection.TripleKeyHashMap$Entry;

        specialinvoke $r0.<org.codehaus.groovy.reflection.TripleKeyHashMap$Entry: void <init>()>();

        return $r0;
    }

    public final org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry remove(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] $r4, $r5, $r9;
        org.codehaus.groovy.reflection.TripleKeyHashMap r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i12, $i13;
        org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry $r7, $r8, r10, r11;
        boolean $z0;
        org.codehaus.groovy.reflection.TripleKeyHashMap$Entry $r6;
        java.lang.Object r0, r1, r2;

        r3 := @this: org.codehaus.groovy.reflection.TripleKeyHashMap;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $i1 = 31 * $i0;

        $i2 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $i3 = $i1 + $i2;

        $i4 = 31 * $i3;

        $i5 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

        $i6 = $i4 + $i5;

        $i7 = staticinvoke <org.codehaus.groovy.reflection.TripleKeyHashMap: int hash(int)>($i6);

        $r4 = r3.<org.codehaus.groovy.reflection.TripleKeyHashMap: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] table>;

        $i8 = lengthof $r4;

        $i9 = $i8 - 1;

        i10 = $i7 & $i9;

        $r5 = r3.<org.codehaus.groovy.reflection.TripleKeyHashMap: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] table>;

        r10 = $r5[i10];

        r11 = null;

     label1:
        if r10 == null goto label5;

        $i11 = r10.<org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry: int hash>;

        if $i11 != $i7 goto label4;

        $r6 = (org.codehaus.groovy.reflection.TripleKeyHashMap$Entry) r10;

        $z0 = virtualinvoke r3.<org.codehaus.groovy.reflection.TripleKeyHashMap: boolean checkEquals(org.codehaus.groovy.reflection.TripleKeyHashMap$Entry,java.lang.Object,java.lang.Object,java.lang.Object)>($r6, r0, r1, r2);

        if $z0 == 0 goto label4;

        if r11 != null goto label2;

        $r9 = r3.<org.codehaus.groovy.reflection.TripleKeyHashMap: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] table>;

        $r8 = r10.<org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry next>;

        $r9[i10] = $r8;

        goto label3;

     label2:
        $r7 = r10.<org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry next>;

        r11.<org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry next> = $r7;

     label3:
        $i12 = r3.<org.codehaus.groovy.reflection.TripleKeyHashMap: int size>;

        $i13 = $i12 - 1;

        r3.<org.codehaus.groovy.reflection.TripleKeyHashMap: int size> = $i13;

        r10.<org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry next> = null;

        return r10;

     label4:
        r11 = r10;

        r10 = r10.<org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry next>;

        goto label1;

     label5:
        return null;
    }
}
