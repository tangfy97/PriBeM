public class org.apache.batik.ext.awt.geom.ExtendedGeneralPath extends java.lang.Object implements org.apache.batik.ext.awt.geom.ExtendedShape, java.lang.Cloneable
{
    protected java.awt.geom.GeneralPath path;
    int numVals;
    int numSeg;
    float[] values;
    int[] types;
    float mx;
    float my;
    float cx;
    float cy;

    public void <init>()
    {
        java.awt.geom.GeneralPath $r1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = 0;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg> = 0;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values> = null;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types> = null;

        $r1 = new java.awt.geom.GeneralPath;

        specialinvoke $r1.<java.awt.geom.GeneralPath: void <init>()>();

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path> = $r1;

        return;
    }

    public void <init>(int)
    {
        int i0;
        java.awt.geom.GeneralPath $r1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = 0;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg> = 0;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values> = null;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types> = null;

        $r1 = new java.awt.geom.GeneralPath;

        specialinvoke $r1.<java.awt.geom.GeneralPath: void <init>(int)>(i0);

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path> = $r1;

        return;
    }

    public void <init>(int, int)
    {
        int i0, i1;
        java.awt.geom.GeneralPath $r1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = 0;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg> = 0;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values> = null;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types> = null;

        $r1 = new java.awt.geom.GeneralPath;

        specialinvoke $r1.<java.awt.geom.GeneralPath: void <init>(int,int)>(i0, i1);

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path> = $r1;

        return;
    }

    public void <init>(java.awt.Shape)
    {
        java.awt.Shape r1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        r1 := @parameter0: java.awt.Shape;

        specialinvoke r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void <init>()>();

        virtualinvoke r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void append(java.awt.Shape,boolean)>(r1, 0);

        return;
    }

    public synchronized void arcTo(float, float, float, boolean, boolean, float, float)
    {
        byte $b0, $b1, $b2, $b19;
        int[] $r5;
        boolean z0, z1;
        java.awt.Shape $r3;
        java.awt.geom.AffineTransform $r2;
        float f0, f1, f2, f3, $f4, $f5, f6, $f7, $f8;
        java.awt.geom.GeneralPath $r4;
        float[] $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        java.awt.geom.Arc2D $r1;
        int $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        f0 := @parameter0: float;

        f3 := @parameter1: float;

        f6 := @parameter2: float;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        f1 := @parameter5: float;

        f2 := @parameter6: float;

        $b0 = f0 cmpl 0.0F;

        if $b0 == 0 goto label1;

        $b1 = f3 cmpl 0.0F;

        if $b1 != 0 goto label2;

     label1:
        virtualinvoke r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void lineTo(float,float)>(f1, f2);

        return;

     label2:
        virtualinvoke r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void checkMoveTo()>();

        $f4 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float cx>;

        d0 = (double) $f4;

        $f5 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float cy>;

        d1 = (double) $f5;

        $d2 = (double) f1;

        $b2 = d0 cmpl $d2;

        if $b2 != 0 goto label3;

        $d12 = (double) f2;

        $b19 = d1 cmpl $d12;

        if $b19 != 0 goto label3;

        return;

     label3:
        $d7 = (double) f0;

        $d6 = (double) f3;

        $d5 = (double) f6;

        $d4 = (double) f1;

        $d3 = (double) f2;

        $r1 = staticinvoke <org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.Arc2D computeArc(double,double,double,double,double,boolean,boolean,double,double)>(d0, d1, $d7, $d6, $d5, z0, z1, $d4, $d3);

        if $r1 != null goto label4;

        return;

     label4:
        $d8 = (double) f6;

        $d9 = staticinvoke <java.lang.Math: double toRadians(double)>($d8);

        $d10 = virtualinvoke $r1.<java.awt.geom.RectangularShape: double getCenterX()>();

        $d11 = virtualinvoke $r1.<java.awt.geom.RectangularShape: double getCenterY()>();

        $r2 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double,double,double)>($d9, $d10, $d11);

        $r3 = virtualinvoke $r2.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>($r1);

        $r4 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        virtualinvoke $r4.<java.awt.geom.GeneralPath: void append(java.awt.Shape,boolean)>($r3, 1);

        specialinvoke r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void makeRoom(int)>(7);

        $r5 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types>;

        $i3 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg>;

        $i4 = $i3 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg> = $i4;

        $r5[$i3] = 4321;

        $r6 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i5 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        $i6 = $i5 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = $i6;

        $r6[$i5] = f0;

        $r7 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i7 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        $i8 = $i7 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = $i8;

        $r7[$i7] = f3;

        $r8 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i9 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        $i10 = $i9 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = $i10;

        $r8[$i9] = f6;

        $r9 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i11 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        $i12 = $i11 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = $i12;

        if z0 == 0 goto label5;

        $f7 = 1.0F;

        goto label6;

     label5:
        $f7 = 0.0F;

     label6:
        $r9[$i11] = $f7;

        $r10 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i13 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        $i14 = $i13 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = $i14;

        if z1 == 0 goto label7;

        $f8 = 1.0F;

        goto label8;

     label7:
        $f8 = 0.0F;

     label8:
        $r10[$i13] = $f8;

        $r11 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i15 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        $i16 = $i15 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = $i16;

        $r11[$i15] = f1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float cx> = f1;

        $r12 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i17 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        $i18 = $i17 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = $i18;

        $r12[$i17] = f2;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float cy> = f2;

        return;
    }

    public static java.awt.geom.Arc2D computeArc(double, double, double, double, double, boolean, boolean, double, double)
    {
        byte $b0, $b1, $b2, $b3, $b4, $b5;
        int $i6, $i7, $i8, $i9, $i10, $i11;
        boolean z0, z1;
        double d0, d1, $d2, d3, d4, d5, $d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, d14, $d15, $d16, $d17, d18, $d19, $d20, d21, d22, $d23, $d24, d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, d94, d95, d96, d97, d98, d99, d100, $d101, d102, $d103, $d104, $d105, d106, $d107, $d108, $d109, $d110, $d111, $d112, $d113, $d114;
        java.awt.geom.Arc2D$Double $r1;

        d0 := @parameter0: double;

        d4 := @parameter1: double;

        d94 := @parameter2: double;

        d95 := @parameter3: double;

        d96 := @parameter4: double;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        d1 := @parameter7: double;

        d5 := @parameter8: double;

        $d2 = d0 - d1;

        d3 = $d2 / 2.0;

        $d6 = d4 - d5;

        d7 = $d6 / 2.0;

        $d8 = d96 % 360.0;

        $d9 = staticinvoke <java.lang.Math: double toRadians(double)>($d8);

        $d10 = staticinvoke <java.lang.Math: double cos(double)>($d9);

        $d11 = staticinvoke <java.lang.Math: double sin(double)>($d9);

        $d13 = $d10 * d3;

        $d12 = $d11 * d7;

        d14 = $d13 + $d12;

        $d15 = neg $d11;

        $d17 = $d15 * d3;

        $d16 = $d10 * d7;

        d18 = $d17 + $d16;

        $d19 = staticinvoke <java.lang.Math: double abs(double)>(d94);

        d97 = $d19;

        $d20 = staticinvoke <java.lang.Math: double abs(double)>(d95);

        d98 = $d20;

        d99 = $d19 * $d19;

        d100 = $d20 * $d20;

        d21 = d14 * d14;

        d22 = d18 * d18;

        $d24 = d21 / d99;

        $d23 = d22 / d100;

        d25 = $d24 + $d23;

        $b0 = d25 cmpl 1.0;

        $i6 = (int) $b0;

        if $i6 <= 0 goto label01;

        $d92 = staticinvoke <java.lang.Math: double sqrt(double)>(d25);

        d97 = $d92 * $d19;

        $d93 = staticinvoke <java.lang.Math: double sqrt(double)>(d25);

        d98 = $d93 * $d20;

        d99 = d97 * d97;

        d100 = d98 * d98;

     label01:
        if z0 != z1 goto label02;

        $d101 = -1.0;

        goto label03;

     label02:
        $d101 = 1.0;

     label03:
        d102 = $d101;

        $d27 = d99 * d100;

        $d26 = d99 * d22;

        $d29 = $d27 - $d26;

        $d28 = d100 * d21;

        $d33 = $d29 - $d28;

        $d31 = d99 * d22;

        $d30 = d100 * d21;

        $d32 = $d31 + $d30;

        $d91 = $d33 / $d32;

        $b1 = $d91 cmpg 0.0;

        $i7 = (int) $b1;

        if $i7 >= 0 goto label04;

        $d103 = 0.0;

        goto label05;

     label04:
        $d103 = $d91;

     label05:
        $d34 = staticinvoke <java.lang.Math: double sqrt(double)>($d103);

        $d80 = d102 * $d34;

        $d35 = d97 * d18;

        $d36 = $d35 / d98;

        $d81 = $d80 * $d36;

        $d37 = d98 * d14;

        $d38 = $d37 / d97;

        $d39 = neg $d38;

        $d82 = $d80 * $d39;

        $d40 = d0 + d1;

        $d83 = $d40 / 2.0;

        $d41 = d4 + d5;

        $d84 = $d41 / 2.0;

        $d43 = $d10 * $d81;

        $d42 = $d11 * $d82;

        $d44 = $d43 - $d42;

        $d85 = $d83 + $d44;

        $d46 = $d11 * $d81;

        $d45 = $d10 * $d82;

        $d47 = $d46 + $d45;

        $d86 = $d84 + $d47;

        $d48 = d14 - $d81;

        $d87 = $d48 / d97;

        $d49 = d18 - $d82;

        $d88 = $d49 / d98;

        $d50 = neg d14;

        $d51 = $d50 - $d81;

        $d89 = $d51 / d97;

        $d52 = neg d18;

        $d53 = $d52 - $d82;

        $d90 = $d53 / d98;

        $d55 = $d87 * $d87;

        $d54 = $d88 * $d88;

        $d56 = $d55 + $d54;

        $d57 = staticinvoke <java.lang.Math: double sqrt(double)>($d56);

        $b2 = $d88 cmpg 0.0;

        $i8 = (int) $b2;

        if $i8 >= 0 goto label06;

        $d104 = -1.0;

        goto label07;

     label06:
        $d104 = 1.0;

     label07:
        $d58 = $d87 / $d57;

        $d59 = staticinvoke <java.lang.Math: double acos(double)>($d58);

        $d60 = $d104 * $d59;

        $d61 = staticinvoke <java.lang.Math: double toDegrees(double)>($d60);

        $d63 = $d87 * $d87;

        $d62 = $d88 * $d88;

        $d67 = $d63 + $d62;

        $d65 = $d89 * $d89;

        $d64 = $d90 * $d90;

        $d66 = $d65 + $d64;

        $d68 = $d67 * $d66;

        $d69 = staticinvoke <java.lang.Math: double sqrt(double)>($d68);

        $d71 = $d87 * $d89;

        $d70 = $d88 * $d90;

        $d79 = $d71 + $d70;

        $d73 = $d87 * $d90;

        $d72 = $d88 * $d89;

        $d74 = $d73 - $d72;

        $b3 = $d74 cmpg 0.0;

        $i9 = (int) $b3;

        if $i9 >= 0 goto label08;

        $d105 = -1.0;

        goto label09;

     label08:
        $d105 = 1.0;

     label09:
        $d75 = $d79 / $d69;

        $d76 = staticinvoke <java.lang.Math: double acos(double)>($d75);

        $d77 = $d105 * $d76;

        $d78 = staticinvoke <java.lang.Math: double toDegrees(double)>($d77);

        d106 = $d78;

        if z1 != 0 goto label10;

        $b5 = $d78 cmpl 0.0;

        $i10 = (int) $b5;

        if $i10 <= 0 goto label10;

        d106 = $d78 - 360.0;

        goto label11;

     label10:
        if z1 == 0 goto label11;

        $b4 = $d78 cmpg 0.0;

        $i11 = (int) $b4;

        if $i11 >= 0 goto label11;

        d106 = $d78 + 360.0;

     label11:
        $d107 = d106 % 360.0;

        $d108 = $d61 % 360.0;

        $r1 = new java.awt.geom.Arc2D$Double;

        specialinvoke $r1.<java.awt.geom.Arc2D$Double: void <init>()>();

        $d109 = $d85 - d97;

        $r1.<java.awt.geom.Arc2D$Double: double x> = $d109;

        $d110 = $d86 - d98;

        $r1.<java.awt.geom.Arc2D$Double: double y> = $d110;

        $d111 = d97 * 2.0;

        $r1.<java.awt.geom.Arc2D$Double: double width> = $d111;

        $d112 = d98 * 2.0;

        $r1.<java.awt.geom.Arc2D$Double: double height> = $d112;

        $d113 = neg $d108;

        $r1.<java.awt.geom.Arc2D$Double: double start> = $d113;

        $d114 = neg $d107;

        $r1.<java.awt.geom.Arc2D$Double: double extent> = $d114;

        return $r1;
    }

    public synchronized void moveTo(float, float)
    {
        float[] $r2, $r3;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        float f0, f1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        specialinvoke r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void makeRoom(int)>(2);

        $r1 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types>;

        $i0 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg>;

        $i1 = $i0 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg> = $i1;

        $r1[$i0] = 0;

        $r2 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i2 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        $i3 = $i2 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = $i3;

        $r2[$i2] = f0;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float mx> = f0;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float cx> = f0;

        $r3 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i4 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        $i5 = $i4 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = $i5;

        $r3[$i4] = f1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float my> = f1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float cy> = f1;

        return;
    }

    public synchronized void lineTo(float, float)
    {
        float[] $r3, $r4;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        float f0, f1;
        java.awt.geom.GeneralPath $r1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        virtualinvoke r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void checkMoveTo()>();

        $r1 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        virtualinvoke $r1.<java.awt.geom.GeneralPath: void lineTo(float,float)>(f0, f1);

        specialinvoke r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void makeRoom(int)>(2);

        $r2 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types>;

        $i0 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg>;

        $i1 = $i0 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg> = $i1;

        $r2[$i0] = 1;

        $r3 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i2 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        $i3 = $i2 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = $i3;

        $r3[$i2] = f0;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float cx> = f0;

        $r4 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i4 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        $i5 = $i4 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = $i5;

        $r4[$i4] = f1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float cy> = f1;

        return;
    }

    public synchronized void quadTo(float, float, float, float)
    {
        float[] $r3, $r4, $r5, $r6;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;
        float f0, f1, f2, f3;
        java.awt.geom.GeneralPath $r1;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        virtualinvoke r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void checkMoveTo()>();

        $r1 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        virtualinvoke $r1.<java.awt.geom.GeneralPath: void quadTo(float,float,float,float)>(f0, f1, f2, f3);

        specialinvoke r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void makeRoom(int)>(4);

        $r2 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types>;

        $i0 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg>;

        $i1 = $i0 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg> = $i1;

        $r2[$i0] = 2;

        $r3 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i2 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        $i3 = $i2 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = $i3;

        $r3[$i2] = f0;

        $r4 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i4 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        $i5 = $i4 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = $i5;

        $r4[$i4] = f1;

        $r5 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i6 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        $i7 = $i6 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = $i7;

        $r5[$i6] = f2;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float cx> = f2;

        $r6 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i8 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        $i9 = $i8 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = $i9;

        $r6[$i8] = f3;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float cy> = f3;

        return;
    }

    public synchronized void curveTo(float, float, float, float, float, float)
    {
        float[] $r3, $r4, $r5, $r6, $r7, $r8;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;
        float f0, f1, f2, f3, f4, f5;
        java.awt.geom.GeneralPath $r1;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        f5 := @parameter5: float;

        virtualinvoke r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void checkMoveTo()>();

        $r1 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        virtualinvoke $r1.<java.awt.geom.GeneralPath: void curveTo(float,float,float,float,float,float)>(f0, f1, f2, f3, f4, f5);

        specialinvoke r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void makeRoom(int)>(6);

        $r2 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types>;

        $i0 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg>;

        $i1 = $i0 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg> = $i1;

        $r2[$i0] = 3;

        $r3 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i2 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        $i3 = $i2 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = $i3;

        $r3[$i2] = f0;

        $r4 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i4 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        $i5 = $i4 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = $i5;

        $r4[$i4] = f1;

        $r5 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i6 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        $i7 = $i6 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = $i7;

        $r5[$i6] = f2;

        $r6 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i8 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        $i9 = $i8 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = $i9;

        $r6[$i8] = f3;

        $r7 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i10 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        $i11 = $i10 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = $i11;

        $r7[$i10] = f4;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float cx> = f4;

        $r8 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i12 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        $i13 = $i12 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = $i13;

        $r8[$i12] = f5;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float cy> = f5;

        return;
    }

    public synchronized void closePath()
    {
        int[] $r1, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;
        float $f0, $f1;
        java.awt.geom.GeneralPath $r2;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        $i0 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg>;

        if $i0 == 0 goto label1;

        $r3 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types>;

        $i5 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg>;

        $i6 = $i5 - 1;

        $i7 = $r3[$i6];

        if $i7 != 4 goto label1;

        return;

     label1:
        $i1 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg>;

        if $i1 == 0 goto label2;

        $r1 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types>;

        $i2 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg>;

        $i3 = $i2 - 1;

        $i4 = $r1[$i3];

        if $i4 == 0 goto label2;

        $r2 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        virtualinvoke $r2.<java.awt.geom.GeneralPath: void closePath()>();

     label2:
        specialinvoke r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void makeRoom(int)>(0);

        $r4 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types>;

        $i8 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg>;

        $i9 = $i8 + 1;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg> = $i9;

        $r4[$i8] = 4;

        $f0 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float mx>;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float cx> = $f0;

        $f1 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float my>;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float cy> = $f1;

        return;
    }

    protected void checkMoveTo()
    {
        float[] $r3, $r4, $r6, $r7;
        int[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;
        float $f0, $f1, $f2, $f3;
        java.awt.geom.GeneralPath $r5, $r8;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        $i0 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg>;

        if $i0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types>;

        $i1 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg>;

        $i2 = $i1 - 1;

        $i3 = $r1[$i2];

        lookupswitch($i3)
        {
            case 0: goto label2;
            case 4: goto label3;
            default: goto label5;
        };

     label2:
        $r8 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $r6 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i12 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        $i13 = $i12 - 2;

        $f3 = $r6[$i13];

        $r7 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i14 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        $i15 = $i14 - 1;

        $f2 = $r7[$i15];

        virtualinvoke $r8.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f3, $f2);

        goto label5;

     label3:
        $i4 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg>;

        if $i4 != 1 goto label4;

        return;

     label4:
        $r2 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types>;

        $i5 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg>;

        $i6 = $i5 - 2;

        $i7 = $r2[$i6];

        if $i7 != 0 goto label5;

        $r5 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $r3 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i8 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        $i9 = $i8 - 2;

        $f1 = $r3[$i9];

        $r4 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i10 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        $i11 = $i10 - 1;

        $f0 = $r4[$i11];

        virtualinvoke $r5.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f1, $f0);

        goto label5;

     label5:
        return;
    }

    public void append(java.awt.Shape, boolean)
    {
        java.awt.Shape r1;
        java.awt.geom.AffineTransform $r2;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;
        java.awt.geom.PathIterator $r3;
        boolean z0;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        r1 := @parameter0: java.awt.Shape;

        z0 := @parameter1: boolean;

        $r2 = new java.awt.geom.AffineTransform;

        specialinvoke $r2.<java.awt.geom.AffineTransform: void <init>()>();

        $r3 = interfaceinvoke r1.<java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>($r2);

        virtualinvoke r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void append(java.awt.geom.PathIterator,boolean)>($r3, z0);

        return;
    }

    public void append(java.awt.geom.PathIterator, boolean)
    {
        java.awt.geom.PathIterator r1;
        byte $b2, $b3;
        boolean $z0, z1, $z2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        double[] r0;
        int $i0, $i1, i4;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, d14, d15, $d16, $d17;

        r2 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        r1 := @parameter0: java.awt.geom.PathIterator;

        z1 := @parameter1: boolean;

        r0 = newarray (double)[6];

        goto label12;

     label01:
        staticinvoke <java.util.Arrays: void fill(double[],double)>(r0, 0.0);

        $i0 = interfaceinvoke r1.<java.awt.geom.PathIterator: int currentSegment(double[])>(r0);

        i4 = $i0;

        interfaceinvoke r1.<java.awt.geom.PathIterator: void next()>();

        if z1 == 0 goto label06;

        $i1 = r2.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        if $i1 == 0 goto label06;

        if $i0 != 0 goto label05;

        d14 = r0[0];

        d15 = r0[1];

        $f14 = r2.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float cx>;

        $d16 = (double) $f14;

        $b2 = d14 cmpl $d16;

        if $b2 != 0 goto label02;

        $f15 = r2.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float cy>;

        $d17 = (double) $f15;

        $b3 = d15 cmpl $d17;

        if $b3 == 0 goto label03;

     label02:
        i4 = 1;

        goto label05;

     label03:
        $z0 = interfaceinvoke r1.<java.awt.geom.PathIterator: boolean isDone()>();

        if $z0 == 0 goto label04;

        goto label13;

     label04:
        i4 = interfaceinvoke r1.<java.awt.geom.PathIterator: int currentSegment(double[])>(r0);

        interfaceinvoke r1.<java.awt.geom.PathIterator: void next()>();

     label05:
        z1 = 0;

     label06:
        tableswitch(i4)
        {
            case 0: goto label08;
            case 1: goto label09;
            case 2: goto label10;
            case 3: goto label11;
            case 4: goto label07;
            default: goto label12;
        };

     label07:
        virtualinvoke r2.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void closePath()>();

        goto label12;

     label08:
        $d12 = r0[0];

        $f13 = (float) $d12;

        $d13 = r0[1];

        $f12 = (float) $d13;

        virtualinvoke r2.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void moveTo(float,float)>($f13, $f12);

        goto label12;

     label09:
        $d10 = r0[0];

        $f11 = (float) $d10;

        $d11 = r0[1];

        $f10 = (float) $d11;

        virtualinvoke r2.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void lineTo(float,float)>($f11, $f10);

        goto label12;

     label10:
        $d6 = r0[0];

        $f9 = (float) $d6;

        $d7 = r0[1];

        $f8 = (float) $d7;

        $d8 = r0[2];

        $f7 = (float) $d8;

        $d9 = r0[3];

        $f6 = (float) $d9;

        virtualinvoke r2.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void quadTo(float,float,float,float)>($f9, $f8, $f7, $f6);

        goto label12;

     label11:
        $d0 = r0[0];

        $f5 = (float) $d0;

        $d1 = r0[1];

        $f4 = (float) $d1;

        $d2 = r0[2];

        $f3 = (float) $d2;

        $d3 = r0[3];

        $f2 = (float) $d3;

        $d4 = r0[4];

        $f1 = (float) $d4;

        $d5 = r0[5];

        $f0 = (float) $d5;

        virtualinvoke r2.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void curveTo(float,float,float,float,float,float)>($f5, $f4, $f3, $f2, $f1, $f0);

     label12:
        $z2 = interfaceinvoke r1.<java.awt.geom.PathIterator: boolean isDone()>();

        if $z2 == 0 goto label01;

     label13:
        return;
    }

    public void append(org.apache.batik.ext.awt.geom.ExtendedPathIterator, boolean)
    {
        byte $b1, $b2, $b4, $b5;
        boolean $z0, z1, $z2, $z3, $z4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, f16, f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24;
        org.apache.batik.ext.awt.geom.ExtendedPathIterator r1;
        float[] r0;
        int $i0, $i3, i6;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r2;

        r2 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        r1 := @parameter0: org.apache.batik.ext.awt.geom.ExtendedPathIterator;

        z1 := @parameter1: boolean;

        r0 = newarray (float)[7];

        goto label17;

     label01:
        staticinvoke <java.util.Arrays: void fill(float[],float)>(r0, 0.0F);

        $i0 = interfaceinvoke r1.<org.apache.batik.ext.awt.geom.ExtendedPathIterator: int currentSegment(float[])>(r0);

        i6 = $i0;

        interfaceinvoke r1.<org.apache.batik.ext.awt.geom.ExtendedPathIterator: void next()>();

        if z1 == 0 goto label06;

        $i3 = r2.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        if $i3 == 0 goto label06;

        if $i0 != 0 goto label05;

        f16 = r0[0];

        f17 = r0[1];

        $f18 = r2.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float cx>;

        $b4 = f16 cmpl $f18;

        if $b4 != 0 goto label02;

        $f19 = r2.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float cy>;

        $b5 = f17 cmpl $f19;

        if $b5 == 0 goto label03;

     label02:
        i6 = 1;

        goto label05;

     label03:
        $z0 = interfaceinvoke r1.<org.apache.batik.ext.awt.geom.ExtendedPathIterator: boolean isDone()>();

        if $z0 == 0 goto label04;

        goto label18;

     label04:
        i6 = interfaceinvoke r1.<org.apache.batik.ext.awt.geom.ExtendedPathIterator: int currentSegment(float[])>(r0);

        interfaceinvoke r1.<org.apache.batik.ext.awt.geom.ExtendedPathIterator: void next()>();

     label05:
        z1 = 0;

     label06:
        lookupswitch(i6)
        {
            case 0: goto label08;
            case 1: goto label09;
            case 2: goto label10;
            case 3: goto label11;
            case 4: goto label07;
            case 4321: goto label12;
            default: goto label17;
        };

     label07:
        virtualinvoke r2.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void closePath()>();

        goto label17;

     label08:
        $f15 = r0[0];

        $f14 = r0[1];

        virtualinvoke r2.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void moveTo(float,float)>($f15, $f14);

        goto label17;

     label09:
        $f13 = r0[0];

        $f12 = r0[1];

        virtualinvoke r2.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void lineTo(float,float)>($f13, $f12);

        goto label17;

     label10:
        $f11 = r0[0];

        $f10 = r0[1];

        $f9 = r0[2];

        $f8 = r0[3];

        virtualinvoke r2.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void quadTo(float,float,float,float)>($f11, $f10, $f9, $f8);

        goto label17;

     label11:
        $f7 = r0[0];

        $f6 = r0[1];

        $f5 = r0[2];

        $f4 = r0[3];

        $f3 = r0[4];

        $f2 = r0[5];

        virtualinvoke r2.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void curveTo(float,float,float,float,float,float)>($f7, $f6, $f5, $f4, $f3, $f2);

        goto label17;

     label12:
        $f20 = r0[0];

        $f21 = r0[1];

        $f22 = r0[2];

        $f0 = r0[3];

        $b1 = $f0 cmpl 0.0F;

        if $b1 == 0 goto label13;

        $z2 = 1;

        goto label14;

     label13:
        $z2 = 0;

     label14:
        $f1 = r0[4];

        $b2 = $f1 cmpl 0.0F;

        if $b2 == 0 goto label15;

        $z3 = 1;

        goto label16;

     label15:
        $z3 = 0;

     label16:
        $f23 = r0[5];

        $f24 = r0[6];

        virtualinvoke r2.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: void arcTo(float,float,float,boolean,boolean,float,float)>($f20, $f21, $f22, $z2, $z3, $f23, $f24);

     label17:
        $z4 = interfaceinvoke r1.<org.apache.batik.ext.awt.geom.ExtendedPathIterator: boolean isDone()>();

        if $z4 == 0 goto label01;

     label18:
        return;
    }

    public synchronized int getWindingRule()
    {
        int $i0;
        java.awt.geom.GeneralPath $r1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        $r1 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $i0 = virtualinvoke $r1.<java.awt.geom.GeneralPath: int getWindingRule()>();

        return $i0;
    }

    public void setWindingRule(int)
    {
        int i0;
        java.awt.geom.GeneralPath $r1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        virtualinvoke $r1.<java.awt.geom.GeneralPath: void setWindingRule(int)>(i0);

        return;
    }

    public synchronized java.awt.geom.Point2D getCurrentPoint()
    {
        java.awt.geom.Point2D$Double $r1;
        int $i0;
        float $f0, $f1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;
        double $d0, $d1;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        $i0 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = new java.awt.geom.Point2D$Double;

        $f0 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float cx>;

        $d1 = (double) $f0;

        $f1 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float cy>;

        $d0 = (double) $f1;

        specialinvoke $r1.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d1, $d0);

        return $r1;
    }

    public synchronized void reset()
    {
        java.awt.geom.GeneralPath $r1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        $r1 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        virtualinvoke $r1.<java.awt.geom.GeneralPath: void reset()>();

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg> = 0;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = 0;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values> = null;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types> = null;

        return;
    }

    public void transform(java.awt.geom.AffineTransform)
    {
        int $i0;
        java.awt.geom.AffineTransform r0;
        java.lang.IllegalArgumentException $r1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r2;

        r2 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        r0 := @parameter0: java.awt.geom.AffineTransform;

        $i0 = virtualinvoke r0.<java.awt.geom.AffineTransform: int getType()>();

        if $i0 == 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ExtendedGeneralPaths can not be transformed");

        throw $r1;

     label1:
        return;
    }

    public synchronized java.awt.Shape createTransformedShape(java.awt.geom.AffineTransform)
    {
        java.awt.Shape $r3;
        java.awt.geom.GeneralPath $r2;
        java.awt.geom.AffineTransform r1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        r1 := @parameter0: java.awt.geom.AffineTransform;

        $r2 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $r3 = virtualinvoke $r2.<java.awt.geom.GeneralPath: java.awt.Shape createTransformedShape(java.awt.geom.AffineTransform)>(r1);

        return $r3;
    }

    public synchronized java.awt.Rectangle getBounds()
    {
        java.awt.Rectangle $r2;
        java.awt.geom.GeneralPath $r1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        $r1 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $r2 = virtualinvoke $r1.<java.awt.geom.GeneralPath: java.awt.Rectangle getBounds()>();

        return $r2;
    }

    public synchronized java.awt.geom.Rectangle2D getBounds2D()
    {
        java.awt.geom.GeneralPath $r1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;
        java.awt.geom.Rectangle2D $r2;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        $r1 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $r2 = virtualinvoke $r1.<java.awt.geom.GeneralPath: java.awt.geom.Rectangle2D getBounds2D()>();

        return $r2;
    }

    public boolean contains(double, double)
    {
        java.awt.geom.GeneralPath $r1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;
        double d0, d1;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $z0 = virtualinvoke $r1.<java.awt.geom.GeneralPath: boolean contains(double,double)>(d0, d1);

        return $z0;
    }

    public boolean contains(java.awt.geom.Point2D)
    {
        java.awt.geom.Point2D r1;
        java.awt.geom.GeneralPath $r2;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        r1 := @parameter0: java.awt.geom.Point2D;

        $r2 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $z0 = virtualinvoke $r2.<java.awt.geom.GeneralPath: boolean contains(java.awt.geom.Point2D)>(r1);

        return $z0;
    }

    public boolean contains(double, double, double, double)
    {
        java.awt.geom.GeneralPath $r1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;
        double d0, d1, d2, d3;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        $r1 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $z0 = virtualinvoke $r1.<java.awt.geom.GeneralPath: boolean contains(double,double,double,double)>(d0, d1, d2, d3);

        return $z0;
    }

    public boolean contains(java.awt.geom.Rectangle2D)
    {
        java.awt.geom.Rectangle2D r1;
        java.awt.geom.GeneralPath $r2;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        r1 := @parameter0: java.awt.geom.Rectangle2D;

        $r2 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $z0 = virtualinvoke $r2.<java.awt.geom.GeneralPath: boolean contains(java.awt.geom.Rectangle2D)>(r1);

        return $z0;
    }

    public boolean intersects(double, double, double, double)
    {
        java.awt.geom.GeneralPath $r1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;
        double d0, d1, d2, d3;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        $r1 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $z0 = virtualinvoke $r1.<java.awt.geom.GeneralPath: boolean intersects(double,double,double,double)>(d0, d1, d2, d3);

        return $z0;
    }

    public boolean intersects(java.awt.geom.Rectangle2D)
    {
        java.awt.geom.Rectangle2D r1;
        java.awt.geom.GeneralPath $r2;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        r1 := @parameter0: java.awt.geom.Rectangle2D;

        $r2 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $z0 = virtualinvoke $r2.<java.awt.geom.GeneralPath: boolean intersects(java.awt.geom.Rectangle2D)>(r1);

        return $z0;
    }

    public java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)
    {
        java.awt.geom.GeneralPath $r2;
        java.awt.geom.AffineTransform r1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;
        java.awt.geom.PathIterator $r3;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        r1 := @parameter0: java.awt.geom.AffineTransform;

        $r2 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $r3 = virtualinvoke $r2.<java.awt.geom.GeneralPath: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>(r1);

        return $r3;
    }

    public java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform, double)
    {
        java.awt.geom.GeneralPath $r2;
        java.awt.geom.AffineTransform r1;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;
        double d0;
        java.awt.geom.PathIterator $r3;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        r1 := @parameter0: java.awt.geom.AffineTransform;

        d0 := @parameter1: double;

        $r2 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $r3 = virtualinvoke $r2.<java.awt.geom.GeneralPath: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)>(r1, d0);

        return $r3;
    }

    public org.apache.batik.ext.awt.geom.ExtendedPathIterator getExtendedPathIterator()
    {
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath$EPI $r0;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r1;

        r1 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        $r0 = new org.apache.batik.ext.awt.geom.ExtendedGeneralPath$EPI;

        specialinvoke $r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath$EPI: void <init>(org.apache.batik.ext.awt.geom.ExtendedGeneralPath)>(r1);

        return $r0;
    }

    public java.lang.Object clone()
    {
        float[] $r5, $r12, $r13, $r14, $r15, $r16;
        java.lang.CloneNotSupportedException $r17;
        int[] $r6, $r7, $r8, $r9, $r10, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0, r18;
        java.lang.Object $r1, $r3;
        java.awt.geom.GeneralPath $r2, $r4;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r18 = (org.apache.batik.ext.awt.geom.ExtendedGeneralPath) $r1;

        $r2 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $r3 = virtualinvoke $r2.<java.awt.geom.GeneralPath: java.lang.Object clone()>();

        $r4 = (java.awt.geom.GeneralPath) $r3;

        r18.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: java.awt.geom.GeneralPath path> = $r4;

        $r5 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        if $r5 == null goto label2;

        $r12 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i4 = lengthof $r12;

        $r13 = newarray (float)[$i4];

        r18.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values> = $r13;

        $r16 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $r15 = r18.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $r14 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i5 = lengthof $r14;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r16, 0, $r15, 0, $i5);

     label2:
        $i0 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        r18.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = $i0;

        $r6 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types>;

        if $r6 == null goto label3;

        $r7 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types>;

        $i2 = lengthof $r7;

        $r8 = newarray (int)[$i2];

        r18.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types> = $r8;

        $r11 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types>;

        $r10 = r18.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types>;

        $r9 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types>;

        $i3 = lengthof $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, $r10, 0, $i3);

     label3:
        $i1 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg>;

        r18.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg> = $i1;

        return r18;

     label4:
        $r17 := @caughtexception;

        return null;

        catch java.lang.CloneNotSupportedException from label1 to label4 with label4;
    }

    private void makeRoom(int)
    {
        float[] $r1, $r2, $r6, $r7, $r8, $r9;
        int[] $r3, $r4, $r5, $r10, $r11, r12;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i12;
        org.apache.batik.ext.awt.geom.ExtendedGeneralPath r0;

        r0 := @this: org.apache.batik.ext.awt.geom.ExtendedGeneralPath;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        if $r1 != null goto label1;

        $i9 = 2 * i0;

        $r9 = newarray (float)[$i9];

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values> = $r9;

        $r10 = newarray (int)[2];

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types> = $r10;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals> = 0;

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg> = 0;

        return;

     label1:
        $i1 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        i2 = $i1 + i0;

        $r2 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i3 = lengthof $r2;

        if i2 <= $i3 goto label3;

        $r6 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i7 = lengthof $r6;

        i10 = $i7 * 2;

        if i10 >= i2 goto label2;

        i10 = i2;

     label2:
        $r8 = newarray (float)[i10];

        $r7 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values>;

        $i8 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numVals>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, $r8, 0, $i8);

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: float[] values> = $r8;

     label3:
        $i11 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int numSeg>;

        $r11 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types>;

        $i12 = lengthof $r11;

        if $i11 != $i12 goto label4;

        $r3 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types>;

        $i4 = lengthof $r3;

        $i5 = $i4 * 2;

        r12 = newarray (int)[$i5];

        $r5 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types>;

        $r4 = r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types>;

        $i6 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r12, 0, $i6);

        r0.<org.apache.batik.ext.awt.geom.ExtendedGeneralPath: int[] types> = r12;

     label4:
        return;
    }
}
