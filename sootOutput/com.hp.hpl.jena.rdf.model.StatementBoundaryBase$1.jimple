final class com.hp.hpl.jena.rdf.model.StatementBoundaryBase$1 extends java.lang.Object implements com.hp.hpl.jena.graph.TripleBoundary
{
    final com.hp.hpl.jena.rdf.model.StatementBoundary val$b;
    final com.hp.hpl.jena.rdf.model.Model val$s;

    void <init>(com.hp.hpl.jena.rdf.model.StatementBoundary, com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.StatementBoundary r1;
        com.hp.hpl.jena.rdf.model.Model r2;
        com.hp.hpl.jena.rdf.model.StatementBoundaryBase$1 r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.StatementBoundaryBase$1;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.StatementBoundary;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Model;

        r0.<com.hp.hpl.jena.rdf.model.StatementBoundaryBase$1: com.hp.hpl.jena.rdf.model.StatementBoundary val$b> = r1;

        r0.<com.hp.hpl.jena.rdf.model.StatementBoundaryBase$1: com.hp.hpl.jena.rdf.model.Model val$s> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean stopAt(com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.rdf.model.StatementBoundary $r3;
        com.hp.hpl.jena.rdf.model.Model $r2;
        com.hp.hpl.jena.rdf.model.StatementBoundaryBase$1 r0;
        com.hp.hpl.jena.rdf.model.Statement $r4;
        com.hp.hpl.jena.graph.Triple r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.StatementBoundaryBase$1;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $r3 = r0.<com.hp.hpl.jena.rdf.model.StatementBoundaryBase$1: com.hp.hpl.jena.rdf.model.StatementBoundary val$b>;

        $r2 = r0.<com.hp.hpl.jena.rdf.model.StatementBoundaryBase$1: com.hp.hpl.jena.rdf.model.Model val$s>;

        $r4 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Statement asStatement(com.hp.hpl.jena.graph.Triple)>(r1);

        $z0 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.StatementBoundary: boolean stopAt(com.hp.hpl.jena.rdf.model.Statement)>($r4);

        return $z0;
    }
}
