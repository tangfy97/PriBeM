final class kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer extends java.lang.Object implements kodkod.engine.bool.BooleanVisitor
{
    final kodkod.util.ints.IntSet flattenable;
    final kodkod.util.ints.IntSet visited;

    private void <init>(kodkod.engine.bool.BooleanFormula)
    {
        kodkod.engine.bool.BooleanFormula r1;
        kodkod.util.ints.IntSet $r2, $r3;
        int $i0, $i1, $i2, $i3;
        kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer r0;

        r0 := @this: kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer;

        r1 := @parameter0: kodkod.engine.bool.BooleanFormula;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke r1.<kodkod.engine.bool.BooleanFormula: int label()>();

        $i1 = staticinvoke <java.lang.StrictMath: int abs(int)>($i0);

        $i2 = $i1 + 1;

        $r2 = staticinvoke <kodkod.util.ints.Ints: kodkod.util.ints.IntSet bestSet(int)>($i2);

        r0.<kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer: kodkod.util.ints.IntSet flattenable> = $r2;

        $i3 = $i1 + 1;

        $r3 = staticinvoke <kodkod.util.ints.Ints: kodkod.util.ints.IntSet bestSet(int)>($i3);

        r0.<kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer: kodkod.util.ints.IntSet visited> = $r3;

        return;
    }

    public java.lang.Object visit(kodkod.engine.bool.MultiGate, kodkod.engine.bool.Operator)
    {
        kodkod.engine.bool.Operator$Nary $r5, $r9;
        java.util.Iterator $r6;
        kodkod.engine.bool.BooleanFormula $r8;
        kodkod.util.ints.IntSet $r2, $r3, $r10, $r11;
        kodkod.engine.bool.Operator r4;
        kodkod.engine.bool.MultiGate r0;
        int $i0;
        java.lang.Object $r7;
        kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer r1;
        boolean $z0, $z1;

        r1 := @this: kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer;

        r0 := @parameter0: kodkod.engine.bool.MultiGate;

        r4 := @parameter1: kodkod.engine.bool.Operator;

        $i0 = virtualinvoke r0.<kodkod.engine.bool.MultiGate: int label()>();

        $r2 = r1.<kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer: kodkod.util.ints.IntSet visited>;

        $z0 = interfaceinvoke $r2.<kodkod.util.ints.IntSet: boolean contains(int)>($i0);

        if $z0 == 0 goto label1;

        $r11 = r1.<kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer: kodkod.util.ints.IntSet flattenable>;

        interfaceinvoke $r11.<kodkod.util.ints.IntSet: boolean remove(int)>($i0);

        goto label5;

     label1:
        $r3 = r1.<kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer: kodkod.util.ints.IntSet visited>;

        interfaceinvoke $r3.<kodkod.util.ints.IntSet: boolean add(int)>($i0);

        $r5 = virtualinvoke r0.<kodkod.engine.bool.MultiGate: kodkod.engine.bool.Operator$Nary op()>();

        if r4 != $r5 goto label2;

        $r10 = r1.<kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer: kodkod.util.ints.IntSet flattenable>;

        interfaceinvoke $r10.<kodkod.util.ints.IntSet: boolean add(int)>($i0);

     label2:
        $r6 = virtualinvoke r0.<kodkod.engine.bool.MultiGate: java.util.Iterator iterator()>();

        goto label4;

     label3:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (kodkod.engine.bool.BooleanFormula) $r7;

        $r9 = virtualinvoke r0.<kodkod.engine.bool.MultiGate: kodkod.engine.bool.Operator$Nary op()>();

        virtualinvoke $r8.<kodkod.engine.bool.BooleanFormula: java.lang.Object accept(kodkod.engine.bool.BooleanVisitor,java.lang.Object)>(r1, $r9);

     label4:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label3;

     label5:
        return null;
    }

    public java.lang.Object visit(kodkod.engine.bool.ITEGate, kodkod.engine.bool.Operator)
    {
        kodkod.engine.bool.BooleanFormula $r3, $r4, $r5;
        kodkod.engine.bool.ITEGate r1;
        kodkod.util.ints.IntSet $r2;
        kodkod.engine.bool.Operator r6;
        int $i0;
        kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer r0;
        boolean $z0;

        r0 := @this: kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer;

        r1 := @parameter0: kodkod.engine.bool.ITEGate;

        r6 := @parameter1: kodkod.engine.bool.Operator;

        $r2 = r0.<kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer: kodkod.util.ints.IntSet visited>;

        $i0 = virtualinvoke r1.<kodkod.engine.bool.ITEGate: int label()>();

        $z0 = interfaceinvoke $r2.<kodkod.util.ints.IntSet: boolean add(int)>($i0);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r1.<kodkod.engine.bool.ITEGate: kodkod.engine.bool.BooleanFormula input(int)>(0);

        virtualinvoke $r3.<kodkod.engine.bool.BooleanFormula: java.lang.Object accept(kodkod.engine.bool.BooleanVisitor,java.lang.Object)>(r0, null);

        $r4 = virtualinvoke r1.<kodkod.engine.bool.ITEGate: kodkod.engine.bool.BooleanFormula input(int)>(1);

        virtualinvoke $r4.<kodkod.engine.bool.BooleanFormula: java.lang.Object accept(kodkod.engine.bool.BooleanVisitor,java.lang.Object)>(r0, null);

        $r5 = virtualinvoke r1.<kodkod.engine.bool.ITEGate: kodkod.engine.bool.BooleanFormula input(int)>(2);

        virtualinvoke $r5.<kodkod.engine.bool.BooleanFormula: java.lang.Object accept(kodkod.engine.bool.BooleanVisitor,java.lang.Object)>(r0, null);

     label1:
        return null;
    }

    public java.lang.Object visit(kodkod.engine.bool.NotGate, kodkod.engine.bool.Operator)
    {
        kodkod.engine.bool.BooleanFormula $r1;
        kodkod.engine.bool.NotGate r0;
        kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer r2;
        kodkod.engine.bool.Operator r3;

        r2 := @this: kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer;

        r0 := @parameter0: kodkod.engine.bool.NotGate;

        r3 := @parameter1: kodkod.engine.bool.Operator;

        $r1 = virtualinvoke r0.<kodkod.engine.bool.NotGate: kodkod.engine.bool.BooleanFormula input(int)>(0);

        virtualinvoke $r1.<kodkod.engine.bool.BooleanFormula: java.lang.Object accept(kodkod.engine.bool.BooleanVisitor,java.lang.Object)>(r2, null);

        return null;
    }

    public java.lang.Object visit(kodkod.engine.bool.BooleanVariable, kodkod.engine.bool.Operator)
    {
        kodkod.engine.bool.BooleanVariable r1;
        kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer r0;
        kodkod.engine.bool.Operator r2;

        r0 := @this: kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer;

        r1 := @parameter0: kodkod.engine.bool.BooleanVariable;

        r2 := @parameter1: kodkod.engine.bool.Operator;

        return null;
    }

    public volatile java.lang.Object visit(kodkod.engine.bool.BooleanVariable, java.lang.Object)
    {
        kodkod.engine.bool.BooleanVariable r1;
        java.lang.Object r2, $r4;
        kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer r0;
        kodkod.engine.bool.Operator $r3;

        r0 := @this: kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer;

        r1 := @parameter0: kodkod.engine.bool.BooleanVariable;

        r2 := @parameter1: java.lang.Object;

        $r3 = (kodkod.engine.bool.Operator) r2;

        $r4 = virtualinvoke r0.<kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer: java.lang.Object visit(kodkod.engine.bool.BooleanVariable,kodkod.engine.bool.Operator)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visit(kodkod.engine.bool.NotGate, java.lang.Object)
    {
        kodkod.engine.bool.NotGate r1;
        java.lang.Object r2, $r4;
        kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer r0;
        kodkod.engine.bool.Operator $r3;

        r0 := @this: kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer;

        r1 := @parameter0: kodkod.engine.bool.NotGate;

        r2 := @parameter1: java.lang.Object;

        $r3 = (kodkod.engine.bool.Operator) r2;

        $r4 = virtualinvoke r0.<kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer: java.lang.Object visit(kodkod.engine.bool.NotGate,kodkod.engine.bool.Operator)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visit(kodkod.engine.bool.ITEGate, java.lang.Object)
    {
        kodkod.engine.bool.ITEGate r1;
        java.lang.Object r2, $r4;
        kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer r0;
        kodkod.engine.bool.Operator $r3;

        r0 := @this: kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer;

        r1 := @parameter0: kodkod.engine.bool.ITEGate;

        r2 := @parameter1: java.lang.Object;

        $r3 = (kodkod.engine.bool.Operator) r2;

        $r4 = virtualinvoke r0.<kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer: java.lang.Object visit(kodkod.engine.bool.ITEGate,kodkod.engine.bool.Operator)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visit(kodkod.engine.bool.MultiGate, java.lang.Object)
    {
        java.lang.Object r2, $r4;
        kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer r0;
        kodkod.engine.bool.Operator $r3;
        kodkod.engine.bool.MultiGate r1;

        r0 := @this: kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer;

        r1 := @parameter0: kodkod.engine.bool.MultiGate;

        r2 := @parameter1: java.lang.Object;

        $r3 = (kodkod.engine.bool.Operator) r2;

        $r4 = virtualinvoke r0.<kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer: java.lang.Object visit(kodkod.engine.bool.MultiGate,kodkod.engine.bool.Operator)>(r1, $r3);

        return $r4;
    }

    void <init>(kodkod.engine.bool.BooleanFormula, kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer)
    {
        kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer r0, r2;
        kodkod.engine.bool.BooleanFormula r1;

        r0 := @this: kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer;

        r1 := @parameter0: kodkod.engine.bool.BooleanFormula;

        r2 := @parameter1: kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer;

        specialinvoke r0.<kodkod.engine.fol2sat.BooleanFormulaFlattener$FlatteningDataGatherer: void <init>(kodkod.engine.bool.BooleanFormula)>(r1);

        return;
    }
}
