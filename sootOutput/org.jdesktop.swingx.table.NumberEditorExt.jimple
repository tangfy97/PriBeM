public class org.jdesktop.swingx.table.NumberEditorExt extends javax.swing.DefaultCellEditor
{
    private static java.lang.Class[] argTypes;
    java.lang.reflect.Constructor constructor;
    private boolean useStrictFormatter;

    public void <init>()
    {
        org.jdesktop.swingx.table.NumberEditorExt r0;

        r0 := @this: org.jdesktop.swingx.table.NumberEditorExt;

        specialinvoke r0.<org.jdesktop.swingx.table.NumberEditorExt: void <init>(java.text.NumberFormat)>(null);

        return;
    }

    public void <init>(java.text.NumberFormat)
    {
        org.jdesktop.swingx.table.NumberEditorExt r0;
        java.text.NumberFormat r1;

        r0 := @this: org.jdesktop.swingx.table.NumberEditorExt;

        r1 := @parameter0: java.text.NumberFormat;

        specialinvoke r0.<org.jdesktop.swingx.table.NumberEditorExt: void <init>(java.text.NumberFormat,boolean)>(r1, 0);

        return;
    }

    public void <init>(boolean)
    {
        org.jdesktop.swingx.table.NumberEditorExt r0;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.table.NumberEditorExt;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.jdesktop.swingx.table.NumberEditorExt: void <init>(java.text.NumberFormat,boolean)>(null, z0);

        return;
    }

    public void <init>(java.text.NumberFormat, boolean)
    {
        javax.swing.JFormattedTextField $r2, $r6;
        org.jdesktop.swingx.table.NumberEditorExt r0;
        java.text.NumberFormat r1;
        javax.swing.DefaultCellEditor$EditorDelegate $r3, $r5;
        boolean z0;
        org.jdesktop.swingx.table.NumberEditorExt$1 $r4;

        r0 := @this: org.jdesktop.swingx.table.NumberEditorExt;

        r1 := @parameter0: java.text.NumberFormat;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r6 = staticinvoke <org.jdesktop.swingx.table.NumberEditorExt: javax.swing.JFormattedTextField createFormattedTextFieldX(java.text.NumberFormat)>(r1);

        goto label2;

     label1:
        $r6 = staticinvoke <org.jdesktop.swingx.table.NumberEditorExt: javax.swing.JFormattedTextField createFormattedTextField(java.text.NumberFormat)>(r1);

     label2:
        specialinvoke r0.<javax.swing.DefaultCellEditor: void <init>(javax.swing.JTextField)>($r6);

        r0.<org.jdesktop.swingx.table.NumberEditorExt: boolean useStrictFormatter> = z0;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.table.NumberEditorExt: javax.swing.JFormattedTextField getComponent()>();

        virtualinvoke $r2.<javax.swing.JFormattedTextField: void setName(java.lang.String)>("Table.editor");

        virtualinvoke $r2.<javax.swing.JFormattedTextField: void setHorizontalAlignment(int)>(4);

        $r3 = r0.<org.jdesktop.swingx.table.NumberEditorExt: javax.swing.DefaultCellEditor$EditorDelegate delegate>;

        virtualinvoke $r2.<javax.swing.JFormattedTextField: void removeActionListener(java.awt.event.ActionListener)>($r3);

        $r4 = new org.jdesktop.swingx.table.NumberEditorExt$1;

        specialinvoke $r4.<org.jdesktop.swingx.table.NumberEditorExt$1: void <init>(org.jdesktop.swingx.table.NumberEditorExt)>(r0);

        r0.<org.jdesktop.swingx.table.NumberEditorExt: javax.swing.DefaultCellEditor$EditorDelegate delegate> = $r4;

        $r5 = r0.<org.jdesktop.swingx.table.NumberEditorExt: javax.swing.DefaultCellEditor$EditorDelegate delegate>;

        virtualinvoke $r2.<javax.swing.JFormattedTextField: void addActionListener(java.awt.event.ActionListener)>($r5);

        return;
    }

    public boolean stopCellEditing()
    {
        org.jdesktop.swingx.table.NumberEditorExt r0;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.table.NumberEditorExt;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.table.NumberEditorExt: boolean isValid()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = specialinvoke r0.<javax.swing.DefaultCellEditor: boolean stopCellEditing()>();

        return $z1;
    }

    protected boolean isValid()
    {
        javax.swing.JFormattedTextField $r1;
        org.jdesktop.swingx.table.NumberEditorExt r0;
        java.lang.Exception $r2;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.table.NumberEditorExt;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.table.NumberEditorExt: javax.swing.JFormattedTextField getComponent()>();

        $z0 = virtualinvoke $r1.<javax.swing.JFormattedTextField: boolean isEditValid()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke r0.<org.jdesktop.swingx.table.NumberEditorExt: boolean hasStrictFormatter()>();

        if $z1 != 0 goto label2;

        virtualinvoke r0.<org.jdesktop.swingx.table.NumberEditorExt: java.lang.Number getNumber()>();

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected java.lang.Number getNumber() throws java.lang.Exception
    {
        java.lang.Object[] $r3;
        org.jdesktop.swingx.table.NumberEditorExt r0;
        java.lang.reflect.Constructor $r4;
        java.lang.Object $r1, $r6;
        java.lang.String $r5;
        java.lang.Number r2, $r7;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.table.NumberEditorExt;

        $r1 = specialinvoke r0.<javax.swing.DefaultCellEditor: java.lang.Object getCellEditorValue()>();

        r2 = (java.lang.Number) $r1;

        if r2 != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke r0.<org.jdesktop.swingx.table.NumberEditorExt: boolean hasStrictFormatter()>();

        if $z0 == 0 goto label2;

        $r7 = r2;

        goto label3;

     label2:
        $r4 = r0.<org.jdesktop.swingx.table.NumberEditorExt: java.lang.reflect.Constructor constructor>;

        $r3 = newarray (java.lang.Object)[1];

        $r5 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        $r3[0] = $r5;

        $r6 = virtualinvoke $r4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r3);

        $r7 = (java.lang.Number) $r6;

     label3:
        return $r7;
    }

    protected boolean hasStrictFormatter()
    {
        org.jdesktop.swingx.table.NumberEditorExt r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.table.NumberEditorExt;

        $z0 = r0.<org.jdesktop.swingx.table.NumberEditorExt: boolean useStrictFormatter>;

        return $z0;
    }

    public java.awt.Component getTableCellEditorComponent(javax.swing.JTable, java.lang.Object, boolean, int, int)
    {
        java.awt.Color $r3;
        java.lang.IllegalStateException $r11, $r16;
        javax.swing.border.LineBorder $r2;
        org.jdesktop.swingx.table.NumberEditorExt r0;
        java.lang.reflect.Constructor $r8;
        javax.swing.text.NumberFormatter $r14;
        javax.swing.JFormattedTextField$AbstractFormatter $r13;
        int i0, i1;
        boolean $z0, $z1, z2;
        javax.swing.JFormattedTextField $r1, $r12;
        java.lang.Class[] $r7;
        java.awt.Component $r10;
        java.lang.Exception $r15;
        javax.swing.JTable r4;
        java.lang.Class $r5, $r6;
        java.lang.Object r9;

        r0 := @this: org.jdesktop.swingx.table.NumberEditorExt;

        r4 := @parameter0: javax.swing.JTable;

        r9 := @parameter1: java.lang.Object;

        z2 := @parameter2: boolean;

        i1 := @parameter3: int;

        i0 := @parameter4: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.table.NumberEditorExt: javax.swing.JFormattedTextField getComponent()>();

        $r2 = new javax.swing.border.LineBorder;

        $r3 = <java.awt.Color: java.awt.Color black>;

        specialinvoke $r2.<javax.swing.border.LineBorder: void <init>(java.awt.Color)>($r3);

        virtualinvoke $r1.<javax.swing.JComponent: void setBorder(javax.swing.border.Border)>($r2);

     label1:
        $r5 = virtualinvoke r4.<javax.swing.JTable: java.lang.Class getColumnClass(int)>(i0);

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.table.NumberEditorExt: boolean hasStrictFormatter()>();

        if $z0 == 0 goto label2;

        $r12 = virtualinvoke r0.<org.jdesktop.swingx.table.NumberEditorExt: javax.swing.JFormattedTextField getComponent()>();

        $r13 = virtualinvoke $r12.<javax.swing.JFormattedTextField: javax.swing.JFormattedTextField$AbstractFormatter getFormatter()>();

        $r14 = (javax.swing.text.NumberFormatter) $r13;

        virtualinvoke $r14.<javax.swing.text.NumberFormatter: void setValueClass(java.lang.Class)>($r5);

        goto label4;

     label2:
        $r6 = class "Ljava/lang/Number;";

        $z1 = virtualinvoke $r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r5);

        if $z1 != 0 goto label3;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("NumberEditor can only handle subclasses of java.lang.Number");

        throw $r11;

     label3:
        $r7 = <org.jdesktop.swingx.table.NumberEditorExt: java.lang.Class[] argTypes>;

        $r8 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r7);

        r0.<org.jdesktop.swingx.table.NumberEditorExt: java.lang.reflect.Constructor constructor> = $r8;

     label4:
        $r10 = specialinvoke r0.<javax.swing.DefaultCellEditor: java.awt.Component getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)>(r4, r9, z2, i1, i0);

     label5:
        return $r10;

     label6:
        $r15 := @caughtexception;

        $r16 = new java.lang.IllegalStateException;

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("value/type not compatible with Number", $r15);

        throw $r16;

        catch java.lang.Exception from label1 to label5 with label6;
    }

    public java.lang.Number getCellEditorValue() throws java.lang.IllegalStateException
    {
        java.lang.IllegalStateException $r3;
        javax.swing.JFormattedTextField $r6;
        org.jdesktop.swingx.table.NumberEditorExt r0;
        java.lang.Exception $r2;
        java.lang.StringBuilder $r4, $r5, $r8;
        java.lang.String $r7, $r9;
        java.lang.Number $r1;

        r0 := @this: org.jdesktop.swingx.table.NumberEditorExt;

     label1:
        $r1 = virtualinvoke r0.<org.jdesktop.swingx.table.NumberEditorExt: java.lang.Number getNumber()>();

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Number conversion not possible from current string ");

        $r6 = virtualinvoke r0.<org.jdesktop.swingx.table.NumberEditorExt: javax.swing.JFormattedTextField getComponent()>();

        $r7 = virtualinvoke $r6.<javax.swing.JFormattedTextField: java.lang.String getText()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r3;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public javax.swing.JFormattedTextField getComponent()
    {
        javax.swing.JFormattedTextField $r2;
        org.jdesktop.swingx.table.NumberEditorExt r0;
        java.awt.Component $r1;

        r0 := @this: org.jdesktop.swingx.table.NumberEditorExt;

        $r1 = specialinvoke r0.<javax.swing.DefaultCellEditor: java.awt.Component getComponent()>();

        $r2 = (javax.swing.JFormattedTextField) $r1;

        return $r2;
    }

    private static javax.swing.JFormattedTextField createFormattedTextFieldX(java.text.NumberFormat)
    {
        javax.swing.KeyStroke $r5;
        javax.swing.JFormattedTextField $r3;
        org.jdesktop.swingx.table.NumberFormatExt $r1;
        java.text.NumberFormat r2;
        org.jdesktop.swingx.table.NumberEditorExt$3 $r7;
        org.jdesktop.swingx.table.StrictNumberFormatter $r0;
        javax.swing.InputMap $r4;
        org.jdesktop.swingx.table.NumberEditorExt$2 $r6;

        r2 := @parameter0: java.text.NumberFormat;

        $r0 = new org.jdesktop.swingx.table.StrictNumberFormatter;

        $r1 = new org.jdesktop.swingx.table.NumberFormatExt;

        specialinvoke $r1.<org.jdesktop.swingx.table.NumberFormatExt: void <init>(java.text.NumberFormat)>(r2);

        specialinvoke $r0.<org.jdesktop.swingx.table.StrictNumberFormatter: void <init>(java.text.NumberFormat)>($r1);

        $r3 = new javax.swing.JFormattedTextField;

        specialinvoke $r3.<javax.swing.JFormattedTextField: void <init>(javax.swing.JFormattedTextField$AbstractFormatter)>($r0);

        $r4 = virtualinvoke $r3.<javax.swing.JFormattedTextField: javax.swing.InputMap getInputMap()>();

        $r5 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>("ESCAPE");

        virtualinvoke $r4.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r5, "none");

        $r6 = new org.jdesktop.swingx.table.NumberEditorExt$2;

        specialinvoke $r6.<org.jdesktop.swingx.table.NumberEditorExt$2: void <init>()>();

        virtualinvoke $r3.<javax.swing.JFormattedTextField: void setInputVerifier(javax.swing.InputVerifier)>($r6);

        $r7 = new org.jdesktop.swingx.table.NumberEditorExt$3;

        specialinvoke $r7.<org.jdesktop.swingx.table.NumberEditorExt$3: void <init>()>();

        virtualinvoke $r3.<javax.swing.JFormattedTextField: void addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>("editValid", $r7);

        return $r3;
    }

    private static javax.swing.JFormattedTextField createFormattedTextField(java.text.NumberFormat)
    {
        javax.swing.KeyStroke $r4;
        org.jdesktop.swingx.table.NumberEditorExt$4 $r5;
        javax.swing.JFormattedTextField $r0;
        org.jdesktop.swingx.table.NumberEditorExt$5 $r6;
        org.jdesktop.swingx.table.NumberEditorNumberFormat $r1;
        javax.swing.InputMap $r3;
        java.text.NumberFormat r2;

        r2 := @parameter0: java.text.NumberFormat;

        $r0 = new javax.swing.JFormattedTextField;

        $r1 = new org.jdesktop.swingx.table.NumberEditorNumberFormat;

        specialinvoke $r1.<org.jdesktop.swingx.table.NumberEditorNumberFormat: void <init>(java.text.NumberFormat)>(r2);

        specialinvoke $r0.<javax.swing.JFormattedTextField: void <init>(java.text.Format)>($r1);

        $r3 = virtualinvoke $r0.<javax.swing.JFormattedTextField: javax.swing.InputMap getInputMap()>();

        $r4 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>("ESCAPE");

        virtualinvoke $r3.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r4, "none");

        $r5 = new org.jdesktop.swingx.table.NumberEditorExt$4;

        specialinvoke $r5.<org.jdesktop.swingx.table.NumberEditorExt$4: void <init>()>();

        virtualinvoke $r0.<javax.swing.JFormattedTextField: void setInputVerifier(javax.swing.InputVerifier)>($r5);

        $r6 = new org.jdesktop.swingx.table.NumberEditorExt$5;

        specialinvoke $r6.<org.jdesktop.swingx.table.NumberEditorExt$5: void <init>()>();

        virtualinvoke $r0.<javax.swing.JFormattedTextField: void addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>("editValid", $r6);

        return $r0;
    }

    public volatile java.lang.Object getCellEditorValue()
    {
        org.jdesktop.swingx.table.NumberEditorExt r0;
        java.lang.Number $r1;

        r0 := @this: org.jdesktop.swingx.table.NumberEditorExt;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.table.NumberEditorExt: java.lang.Number getCellEditorValue()>();

        return $r1;
    }

    public volatile java.awt.Component getComponent()
    {
        javax.swing.JFormattedTextField $r1;
        org.jdesktop.swingx.table.NumberEditorExt r0;

        r0 := @this: org.jdesktop.swingx.table.NumberEditorExt;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.table.NumberEditorExt: javax.swing.JFormattedTextField getComponent()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class[] $r0;

        $r0 = newarray (java.lang.Class)[1];

        $r0[0] = class "Ljava/lang/String;";

        <org.jdesktop.swingx.table.NumberEditorExt: java.lang.Class[] argTypes> = $r0;

        return;
    }
}
