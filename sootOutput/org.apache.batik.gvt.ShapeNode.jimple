public class org.apache.batik.gvt.ShapeNode extends org.apache.batik.gvt.AbstractGraphicsNode
{
    protected java.awt.Shape shape;
    protected org.apache.batik.gvt.ShapePainter shapePainter;
    private java.awt.geom.Rectangle2D primitiveBounds;
    private java.awt.geom.Rectangle2D geometryBounds;
    private java.awt.geom.Rectangle2D sensitiveBounds;
    private java.awt.Shape paintedArea;
    private java.awt.Shape sensitiveArea;

    public void <init>()
    {
        org.apache.batik.gvt.ShapeNode r0;

        r0 := @this: org.apache.batik.gvt.ShapeNode;

        specialinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: void <init>()>();

        return;
    }

    public void setShape(java.awt.Shape)
    {
        java.awt.Shape r1;
        org.apache.batik.gvt.ShapePainter $r2, $r3;
        org.apache.batik.gvt.ShapeNode r0;

        r0 := @this: org.apache.batik.gvt.ShapeNode;

        r1 := @parameter0: java.awt.Shape;

        virtualinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: void fireGraphicsNodeChangeStarted()>();

        virtualinvoke r0.<org.apache.batik.gvt.ShapeNode: void invalidateGeometryCache()>();

        r0.<org.apache.batik.gvt.ShapeNode: java.awt.Shape shape> = r1;

        $r2 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        if $r2 == null goto label2;

        if r1 == null goto label1;

        $r3 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        interfaceinvoke $r3.<org.apache.batik.gvt.ShapePainter: void setShape(java.awt.Shape)>(r1);

        goto label2;

     label1:
        r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter> = null;

     label2:
        virtualinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: void fireGraphicsNodeChangeCompleted()>();

        return;
    }

    public java.awt.Shape getShape()
    {
        java.awt.Shape $r1;
        org.apache.batik.gvt.ShapeNode r0;

        r0 := @this: org.apache.batik.gvt.ShapeNode;

        $r1 = r0.<org.apache.batik.gvt.ShapeNode: java.awt.Shape shape>;

        return $r1;
    }

    public void setShapePainter(org.apache.batik.gvt.ShapePainter)
    {
        java.awt.Shape $r1, $r5, $r6, $r7;
        org.apache.batik.gvt.ShapePainter r2, $r3, $r4, $r8;
        org.apache.batik.gvt.ShapeNode r0;

        r0 := @this: org.apache.batik.gvt.ShapeNode;

        r2 := @parameter0: org.apache.batik.gvt.ShapePainter;

        $r1 = r0.<org.apache.batik.gvt.ShapeNode: java.awt.Shape shape>;

        if $r1 != null goto label1;

        return;

     label1:
        virtualinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: void fireGraphicsNodeChangeStarted()>();

        virtualinvoke r0.<org.apache.batik.gvt.ShapeNode: void invalidateGeometryCache()>();

        r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter> = r2;

        $r3 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        if $r3 == null goto label2;

        $r5 = r0.<org.apache.batik.gvt.ShapeNode: java.awt.Shape shape>;

        $r4 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        $r6 = interfaceinvoke $r4.<org.apache.batik.gvt.ShapePainter: java.awt.Shape getShape()>();

        if $r5 == $r6 goto label2;

        $r8 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        $r7 = r0.<org.apache.batik.gvt.ShapeNode: java.awt.Shape shape>;

        interfaceinvoke $r8.<org.apache.batik.gvt.ShapePainter: void setShape(java.awt.Shape)>($r7);

     label2:
        virtualinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: void fireGraphicsNodeChangeCompleted()>();

        return;
    }

    public org.apache.batik.gvt.ShapePainter getShapePainter()
    {
        org.apache.batik.gvt.ShapePainter $r1;
        org.apache.batik.gvt.ShapeNode r0;

        r0 := @this: org.apache.batik.gvt.ShapeNode;

        $r1 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        return $r1;
    }

    public void paint(java.awt.Graphics2D)
    {
        org.apache.batik.gvt.ShapeNode r0;
        java.awt.Graphics2D r1;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.ShapeNode;

        r1 := @parameter0: java.awt.Graphics2D;

        $z0 = r0.<org.apache.batik.gvt.AbstractGraphicsNode: boolean isVisible>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: void paint(java.awt.Graphics2D)>(r1);

     label1:
        return;
    }

    public void primitivePaint(java.awt.Graphics2D)
    {
        org.apache.batik.gvt.ShapePainter $r1, $r3;
        java.awt.Graphics2D r2;
        org.apache.batik.gvt.ShapeNode r0;

        r0 := @this: org.apache.batik.gvt.ShapeNode;

        r2 := @parameter0: java.awt.Graphics2D;

        $r1 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        interfaceinvoke $r3.<org.apache.batik.gvt.ShapePainter: void paint(java.awt.Graphics2D)>(r2);

     label1:
        return;
    }

    protected void invalidateGeometryCache()
    {
        org.apache.batik.gvt.ShapeNode r0;

        r0 := @this: org.apache.batik.gvt.ShapeNode;

        specialinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: void invalidateGeometryCache()>();

        r0.<org.apache.batik.gvt.ShapeNode: java.awt.geom.Rectangle2D primitiveBounds> = null;

        r0.<org.apache.batik.gvt.ShapeNode: java.awt.geom.Rectangle2D geometryBounds> = null;

        r0.<org.apache.batik.gvt.ShapeNode: java.awt.geom.Rectangle2D sensitiveBounds> = null;

        r0.<org.apache.batik.gvt.ShapeNode: java.awt.Shape paintedArea> = null;

        r0.<org.apache.batik.gvt.ShapeNode: java.awt.Shape sensitiveArea> = null;

        return;
    }

    public void setPointerEventType(int)
    {
        int i0;
        org.apache.batik.gvt.ShapeNode r0;

        r0 := @this: org.apache.batik.gvt.ShapeNode;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: void setPointerEventType(int)>(i0);

        r0.<org.apache.batik.gvt.ShapeNode: java.awt.geom.Rectangle2D sensitiveBounds> = null;

        r0.<org.apache.batik.gvt.ShapeNode: java.awt.Shape sensitiveArea> = null;

        return;
    }

    public boolean contains(java.awt.geom.Point2D)
    {
        java.awt.geom.Point2D r2;
        java.awt.geom.Rectangle2D $r1;
        int $i0;
        org.apache.batik.gvt.ShapeNode r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.batik.gvt.ShapeNode;

        r2 := @parameter0: java.awt.geom.Point2D;

        $i0 = r0.<org.apache.batik.gvt.AbstractGraphicsNode: int pointerEventType>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label2;
            case 7: goto label2;
            case 8: goto label5;
            default: goto label5;
        };

     label1:
        $z2 = r0.<org.apache.batik.gvt.AbstractGraphicsNode: boolean isVisible>;

        if $z2 != 0 goto label2;

        return 0;

     label2:
        $r1 = virtualinvoke r0.<org.apache.batik.gvt.ShapeNode: java.awt.geom.Rectangle2D getSensitiveBounds()>();

        if $r1 == null goto label3;

        $z0 = virtualinvoke $r1.<java.awt.geom.RectangularShape: boolean contains(java.awt.geom.Point2D)>(r2);

        if $z0 != 0 goto label4;

     label3:
        return 0;

     label4:
        $z1 = virtualinvoke r0.<org.apache.batik.gvt.ShapeNode: boolean inSensitiveArea(java.awt.geom.Point2D)>(r2);

        return $z1;

     label5:
        return 0;
    }

    public boolean intersects(java.awt.geom.Rectangle2D)
    {
        java.awt.Shape $r3, $r4;
        java.awt.geom.Rectangle2D $r1, r2;
        org.apache.batik.gvt.ShapeNode r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.batik.gvt.ShapeNode;

        r2 := @parameter0: java.awt.geom.Rectangle2D;

        $r1 = virtualinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.Rectangle2D getBounds()>();

        if $r1 == null goto label3;

        $z0 = virtualinvoke $r1.<java.awt.geom.RectangularShape: boolean intersects(java.awt.geom.Rectangle2D)>(r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.batik.gvt.ShapeNode: java.awt.Shape paintedArea>;

        if $r3 == null goto label1;

        $r4 = r0.<org.apache.batik.gvt.ShapeNode: java.awt.Shape paintedArea>;

        $z1 = interfaceinvoke $r4.<java.awt.Shape: boolean intersects(java.awt.geom.Rectangle2D)>(r2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;

     label3:
        return 0;
    }

    public java.awt.geom.Rectangle2D getPrimitiveBounds()
    {
        java.awt.Shape $r1, $r7;
        org.apache.batik.gvt.ShapePainter $r3, $r4;
        java.awt.geom.Rectangle2D $r2, $r5, $r6, $r8, $r9;
        org.apache.batik.gvt.ShapeNode r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.gvt.ShapeNode;

        $z0 = r0.<org.apache.batik.gvt.AbstractGraphicsNode: boolean isVisible>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<org.apache.batik.gvt.ShapeNode: java.awt.Shape shape>;

        if $r1 != null goto label2;

        return null;

     label2:
        $r2 = r0.<org.apache.batik.gvt.ShapeNode: java.awt.geom.Rectangle2D primitiveBounds>;

        if $r2 == null goto label3;

        $r9 = r0.<org.apache.batik.gvt.ShapeNode: java.awt.geom.Rectangle2D primitiveBounds>;

        return $r9;

     label3:
        $r3 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        if $r3 != null goto label4;

        $r7 = r0.<org.apache.batik.gvt.ShapeNode: java.awt.Shape shape>;

        $r8 = interfaceinvoke $r7.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

        r0.<org.apache.batik.gvt.ShapeNode: java.awt.geom.Rectangle2D primitiveBounds> = $r8;

        goto label5;

     label4:
        $r4 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        $r5 = interfaceinvoke $r4.<org.apache.batik.gvt.ShapePainter: java.awt.geom.Rectangle2D getPaintedBounds2D()>();

        r0.<org.apache.batik.gvt.ShapeNode: java.awt.geom.Rectangle2D primitiveBounds> = $r5;

     label5:
        $z1 = staticinvoke <org.apache.batik.util.HaltingThread: boolean hasBeenHalted()>();

        if $z1 == 0 goto label6;

        virtualinvoke r0.<org.apache.batik.gvt.ShapeNode: void invalidateGeometryCache()>();

     label6:
        $r6 = r0.<org.apache.batik.gvt.ShapeNode: java.awt.geom.Rectangle2D primitiveBounds>;

        return $r6;
    }

    public boolean inSensitiveArea(java.awt.geom.Point2D)
    {
        org.apache.batik.gvt.ShapePainter $r1, $r2, $r3, $r4, $r5, $r7, $r9, $r10, r11, r12;
        java.awt.geom.Point2D r8;
        int i0, $i1, $i2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.apache.batik.gvt.ShapeNode r0;
        org.apache.batik.gvt.CompositeShapePainter r6;

        r0 := @this: org.apache.batik.gvt.ShapeNode;

        r8 := @parameter0: java.awt.geom.Point2D;

        $r1 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        if $r1 != null goto label01;

        return 0;

     label01:
        r11 = null;

        r12 = null;

        $r2 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        $z0 = $r2 instanceof org.apache.batik.gvt.StrokeShapePainter;

        if $z0 == 0 goto label02;

        r11 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        goto label09;

     label02:
        $r3 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        $z1 = $r3 instanceof org.apache.batik.gvt.FillShapePainter;

        if $z1 == 0 goto label03;

        r12 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        goto label09;

     label03:
        $r4 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        $z2 = $r4 instanceof org.apache.batik.gvt.CompositeShapePainter;

        if $z2 == 0 goto label08;

        $r5 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        r6 = (org.apache.batik.gvt.CompositeShapePainter) $r5;

        i0 = 0;

        goto label07;

     label04:
        $r7 = virtualinvoke r6.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter getShapePainter(int)>(i0);

        $z3 = $r7 instanceof org.apache.batik.gvt.StrokeShapePainter;

        if $z3 == 0 goto label05;

        r11 = $r7;

        goto label06;

     label05:
        $z4 = $r7 instanceof org.apache.batik.gvt.FillShapePainter;

        if $z4 == 0 goto label06;

        r12 = $r7;

     label06:
        i0 = i0 + 1;

     label07:
        $i1 = virtualinvoke r6.<org.apache.batik.gvt.CompositeShapePainter: int getShapePainterCount()>();

        if i0 < $i1 goto label04;

        goto label09;

     label08:
        return 0;

     label09:
        $i2 = r0.<org.apache.batik.gvt.AbstractGraphicsNode: int pointerEventType>;

        tableswitch($i2)
        {
            case 0: goto label10;
            case 1: goto label12;
            case 2: goto label13;
            case 3: goto label11;
            case 4: goto label10;
            case 5: goto label12;
            case 6: goto label13;
            case 7: goto label11;
            case 8: goto label14;
            default: goto label14;
        };

     label10:
        $r10 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        $z8 = interfaceinvoke $r10.<org.apache.batik.gvt.ShapePainter: boolean inPaintedArea(java.awt.geom.Point2D)>(r8);

        return $z8;

     label11:
        $r9 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        $z5 = interfaceinvoke $r9.<org.apache.batik.gvt.ShapePainter: boolean inSensitiveArea(java.awt.geom.Point2D)>(r8);

        return $z5;

     label12:
        if r12 == null goto label14;

        $z7 = interfaceinvoke r12.<org.apache.batik.gvt.ShapePainter: boolean inSensitiveArea(java.awt.geom.Point2D)>(r8);

        return $z7;

     label13:
        if r11 == null goto label14;

        $z6 = interfaceinvoke r11.<org.apache.batik.gvt.ShapePainter: boolean inSensitiveArea(java.awt.geom.Point2D)>(r8);

        return $z6;

     label14:
        return 0;
    }

    public java.awt.geom.Rectangle2D getSensitiveBounds()
    {
        org.apache.batik.gvt.ShapePainter $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r13, r16, r17;
        java.awt.geom.Rectangle2D $r1, $r10, $r11, $r12, $r14, $r15, $r18;
        int i0, $i1, $i2;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.batik.gvt.ShapeNode r0;
        org.apache.batik.gvt.CompositeShapePainter r7;

        r0 := @this: org.apache.batik.gvt.ShapeNode;

        $r1 = r0.<org.apache.batik.gvt.ShapeNode: java.awt.geom.Rectangle2D sensitiveBounds>;

        if $r1 == null goto label01;

        $r15 = r0.<org.apache.batik.gvt.ShapeNode: java.awt.geom.Rectangle2D sensitiveBounds>;

        return $r15;

     label01:
        $r2 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        if $r2 != null goto label02;

        return null;

     label02:
        r16 = null;

        r17 = null;

        $r3 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        $z0 = $r3 instanceof org.apache.batik.gvt.StrokeShapePainter;

        if $z0 == 0 goto label03;

        r16 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        goto label10;

     label03:
        $r4 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        $z1 = $r4 instanceof org.apache.batik.gvt.FillShapePainter;

        if $z1 == 0 goto label04;

        r17 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        goto label10;

     label04:
        $r5 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        $z2 = $r5 instanceof org.apache.batik.gvt.CompositeShapePainter;

        if $z2 == 0 goto label09;

        $r6 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        r7 = (org.apache.batik.gvt.CompositeShapePainter) $r6;

        i0 = 0;

        goto label08;

     label05:
        $r8 = virtualinvoke r7.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter getShapePainter(int)>(i0);

        $z3 = $r8 instanceof org.apache.batik.gvt.StrokeShapePainter;

        if $z3 == 0 goto label06;

        r16 = $r8;

        goto label07;

     label06:
        $z4 = $r8 instanceof org.apache.batik.gvt.FillShapePainter;

        if $z4 == 0 goto label07;

        r17 = $r8;

     label07:
        i0 = i0 + 1;

     label08:
        $i1 = virtualinvoke r7.<org.apache.batik.gvt.CompositeShapePainter: int getShapePainterCount()>();

        if i0 < $i1 goto label05;

        goto label10;

     label09:
        return null;

     label10:
        $i2 = r0.<org.apache.batik.gvt.AbstractGraphicsNode: int pointerEventType>;

        tableswitch($i2)
        {
            case 0: goto label11;
            case 1: goto label12;
            case 2: goto label13;
            case 3: goto label14;
            case 4: goto label11;
            case 5: goto label12;
            case 6: goto label13;
            case 7: goto label14;
            case 8: goto label15;
            default: goto label15;
        };

     label11:
        $r13 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        $r14 = interfaceinvoke $r13.<org.apache.batik.gvt.ShapePainter: java.awt.geom.Rectangle2D getPaintedBounds2D()>();

        r0.<org.apache.batik.gvt.ShapeNode: java.awt.geom.Rectangle2D sensitiveBounds> = $r14;

        goto label15;

     label12:
        if r17 == null goto label15;

        $r12 = interfaceinvoke r17.<org.apache.batik.gvt.ShapePainter: java.awt.geom.Rectangle2D getSensitiveBounds2D()>();

        r0.<org.apache.batik.gvt.ShapeNode: java.awt.geom.Rectangle2D sensitiveBounds> = $r12;

        goto label15;

     label13:
        if r16 == null goto label15;

        $r11 = interfaceinvoke r16.<org.apache.batik.gvt.ShapePainter: java.awt.geom.Rectangle2D getSensitiveBounds2D()>();

        r0.<org.apache.batik.gvt.ShapeNode: java.awt.geom.Rectangle2D sensitiveBounds> = $r11;

        goto label15;

     label14:
        $r9 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        $r10 = interfaceinvoke $r9.<org.apache.batik.gvt.ShapePainter: java.awt.geom.Rectangle2D getSensitiveBounds2D()>();

        r0.<org.apache.batik.gvt.ShapeNode: java.awt.geom.Rectangle2D sensitiveBounds> = $r10;

        goto label15;

     label15:
        $r18 = r0.<org.apache.batik.gvt.ShapeNode: java.awt.geom.Rectangle2D sensitiveBounds>;

        return $r18;
    }

    public java.awt.Shape getSensitiveArea()
    {
        org.apache.batik.gvt.ShapePainter $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r13, r16, r17;
        int i0, $i1, $i2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.awt.Shape $r1, $r10, $r11, $r12, $r14, $r15, $r18;
        org.apache.batik.gvt.ShapeNode r0;
        org.apache.batik.gvt.CompositeShapePainter r7;

        r0 := @this: org.apache.batik.gvt.ShapeNode;

        $r1 = r0.<org.apache.batik.gvt.ShapeNode: java.awt.Shape sensitiveArea>;

        if $r1 == null goto label01;

        $r15 = r0.<org.apache.batik.gvt.ShapeNode: java.awt.Shape sensitiveArea>;

        return $r15;

     label01:
        $r2 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        if $r2 != null goto label02;

        return null;

     label02:
        r16 = null;

        r17 = null;

        $r3 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        $z0 = $r3 instanceof org.apache.batik.gvt.StrokeShapePainter;

        if $z0 == 0 goto label03;

        r16 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        goto label10;

     label03:
        $r4 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        $z1 = $r4 instanceof org.apache.batik.gvt.FillShapePainter;

        if $z1 == 0 goto label04;

        r17 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        goto label10;

     label04:
        $r5 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        $z2 = $r5 instanceof org.apache.batik.gvt.CompositeShapePainter;

        if $z2 == 0 goto label09;

        $r6 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        r7 = (org.apache.batik.gvt.CompositeShapePainter) $r6;

        i0 = 0;

        goto label08;

     label05:
        $r8 = virtualinvoke r7.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter getShapePainter(int)>(i0);

        $z3 = $r8 instanceof org.apache.batik.gvt.StrokeShapePainter;

        if $z3 == 0 goto label06;

        r16 = $r8;

        goto label07;

     label06:
        $z4 = $r8 instanceof org.apache.batik.gvt.FillShapePainter;

        if $z4 == 0 goto label07;

        r17 = $r8;

     label07:
        i0 = i0 + 1;

     label08:
        $i1 = virtualinvoke r7.<org.apache.batik.gvt.CompositeShapePainter: int getShapePainterCount()>();

        if i0 < $i1 goto label05;

        goto label10;

     label09:
        return null;

     label10:
        $i2 = r0.<org.apache.batik.gvt.AbstractGraphicsNode: int pointerEventType>;

        tableswitch($i2)
        {
            case 0: goto label11;
            case 1: goto label12;
            case 2: goto label13;
            case 3: goto label14;
            case 4: goto label11;
            case 5: goto label12;
            case 6: goto label13;
            case 7: goto label14;
            case 8: goto label15;
            default: goto label15;
        };

     label11:
        $r13 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        $r14 = interfaceinvoke $r13.<org.apache.batik.gvt.ShapePainter: java.awt.Shape getPaintedArea()>();

        r0.<org.apache.batik.gvt.ShapeNode: java.awt.Shape sensitiveArea> = $r14;

        goto label15;

     label12:
        if r17 == null goto label15;

        $r12 = interfaceinvoke r17.<org.apache.batik.gvt.ShapePainter: java.awt.Shape getSensitiveArea()>();

        r0.<org.apache.batik.gvt.ShapeNode: java.awt.Shape sensitiveArea> = $r12;

        goto label15;

     label13:
        if r16 == null goto label15;

        $r11 = interfaceinvoke r16.<org.apache.batik.gvt.ShapePainter: java.awt.Shape getSensitiveArea()>();

        r0.<org.apache.batik.gvt.ShapeNode: java.awt.Shape sensitiveArea> = $r11;

        goto label15;

     label14:
        $r9 = r0.<org.apache.batik.gvt.ShapeNode: org.apache.batik.gvt.ShapePainter shapePainter>;

        $r10 = interfaceinvoke $r9.<org.apache.batik.gvt.ShapePainter: java.awt.Shape getSensitiveArea()>();

        r0.<org.apache.batik.gvt.ShapeNode: java.awt.Shape sensitiveArea> = $r10;

        goto label15;

     label15:
        $r18 = r0.<org.apache.batik.gvt.ShapeNode: java.awt.Shape sensitiveArea>;

        return $r18;
    }

    public java.awt.geom.Rectangle2D getGeometryBounds()
    {
        java.awt.Shape $r3, $r4;
        java.awt.geom.Rectangle2D $r1, $r2, $r5, $r6;
        org.apache.batik.gvt.ShapeNode r0;

        r0 := @this: org.apache.batik.gvt.ShapeNode;

        $r1 = r0.<org.apache.batik.gvt.ShapeNode: java.awt.geom.Rectangle2D geometryBounds>;

        if $r1 != null goto label2;

        $r3 = r0.<org.apache.batik.gvt.ShapeNode: java.awt.Shape shape>;

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = r0.<org.apache.batik.gvt.ShapeNode: java.awt.Shape shape>;

        $r5 = interfaceinvoke $r4.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

        $r6 = virtualinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.Rectangle2D normalizeRectangle(java.awt.geom.Rectangle2D)>($r5);

        r0.<org.apache.batik.gvt.ShapeNode: java.awt.geom.Rectangle2D geometryBounds> = $r6;

     label2:
        $r2 = r0.<org.apache.batik.gvt.ShapeNode: java.awt.geom.Rectangle2D geometryBounds>;

        return $r2;
    }

    public java.awt.Shape getOutline()
    {
        java.awt.Shape $r1;
        org.apache.batik.gvt.ShapeNode r0;

        r0 := @this: org.apache.batik.gvt.ShapeNode;

        $r1 = r0.<org.apache.batik.gvt.ShapeNode: java.awt.Shape shape>;

        return $r1;
    }
}
