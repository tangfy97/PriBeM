public class com.hp.hpl.jena.sparql.sse.builders.BuilderPrefixMapping extends java.lang.Object
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.sse.builders.BuilderPrefixMapping r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.builders.BuilderPrefixMapping;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.hp.hpl.jena.shared.PrefixMapping build(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.sse.Item r1;
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl $r0;

        r1 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        $r0 = new com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        specialinvoke $r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: void <init>()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderPrefixMapping: void build(com.hp.hpl.jena.shared.PrefixMapping,com.hp.hpl.jena.sparql.sse.Item)>($r0, r1);

        return $r0;
    }

    public static void build(com.hp.hpl.jena.shared.PrefixMapping, com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.graph.Node $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        com.hp.hpl.jena.sparql.sse.Item r0, r9, $r33, $r35;
        java.lang.StringBuilder $r3, $r4, $r6, $r12, $r13, $r14, $r17, $r18, $r19, $r21, $r22, $r23, $r25, $r26, $r27;
        com.hp.hpl.jena.shared.PrefixMapping r16;
        int $i0, $i1, $i2;
        java.lang.String $r5, $r7, $r10, $r15, $r20, $r24, $r28, r36, $r37;
        com.hp.hpl.jena.sparql.sse.ItemList $r1, $r2, $r29, r30, $r32, $r34;
        java.util.Iterator $r31;
        java.lang.Object $r8;

        r16 := @parameter0: com.hp.hpl.jena.shared.PrefixMapping;

        r0 := @parameter1: com.hp.hpl.jena.sparql.sse.Item;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isList()>();

        if $z0 != 0 goto label01;

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.ItemLocation,java.lang.String,com.hp.hpl.jena.sparql.sse.Item)>(r0, "Prefix mapping requires a list of pairs", r0);

     label01:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.ItemList getList()>();

        r30 = $r1;

        $z1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isTaggedIgnoreCase(java.lang.String)>("prefixmap");

        if $z1 != 0 goto label02;

        $z6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isTaggedIgnoreCase(java.lang.String)>("prefixmapping");

        if $z6 == 0 goto label03;

     label02:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.ItemList getList()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not of length 2");

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: java.lang.String shortString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void checkLength(int,com.hp.hpl.jena.sparql.sse.ItemList,java.lang.String)>(2, $r2, $r7);

        r30 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.ItemList cdr()>();

     label03:
        $r31 = virtualinvoke r30.<com.hp.hpl.jena.sparql.sse.ItemList: java.util.Iterator iterator()>();

     label04:
        $z7 = interfaceinvoke $r31.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label13;

        $r8 = interfaceinvoke $r31.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.hp.hpl.jena.sparql.sse.Item) $r8;

        $z2 = virtualinvoke r9.<com.hp.hpl.jena.sparql.sse.Item: boolean isList()>();

        if $z2 == 0 goto label05;

        $r29 = virtualinvoke r9.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.ItemList getList()>();

        $i2 = virtualinvoke $r29.<com.hp.hpl.jena.sparql.sse.ItemList: int size()>();

        if $i2 == 2 goto label06;

     label05:
        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.Item,java.lang.String)>(r9, "Not a prefix/IRI pair");

     label06:
        $r32 = virtualinvoke r9.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.ItemList getList()>();

        $r33 = virtualinvoke $r32.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(0);

        $r34 = virtualinvoke r9.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.ItemList getList()>();

        $r35 = virtualinvoke $r34.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(1);

        r36 = null;

        $z8 = virtualinvoke $r33.<com.hp.hpl.jena.sparql.sse.Item: boolean isSymbol()>();

        if $z8 == 0 goto label07;

        r36 = virtualinvoke $r33.<com.hp.hpl.jena.sparql.sse.Item: java.lang.String getSymbol()>();

     label07:
        if r36 != null goto label08;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Prefix part not recognized: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.Item,java.lang.String)>(r9, $r28);

     label08:
        $z3 = virtualinvoke r36.<java.lang.String: boolean endsWith(java.lang.String)>(":");

        if $z3 != 0 goto label09;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Prefix part does not end with a \':\': ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.Item,java.lang.String)>(r9, $r24);

     label09:
        $i0 = virtualinvoke r36.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        $r10 = virtualinvoke r36.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $z4 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: boolean contains(java.lang.String,java.lang.String)>($r10, ":");

        if $z4 == 0 goto label10;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Prefix itself contains a \':\' : ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.Item,java.lang.String)>(r9, $r20);

     label10:
        $r11 = virtualinvoke $r35.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.graph.Node getNode()>();

        if $r11 == null goto label11;

        $z5 = virtualinvoke $r11.<com.hp.hpl.jena.graph.Node: boolean isURI()>();

        if $z5 != 0 goto label12;

     label11:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not an IRI: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r35);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.Item,java.lang.String)>(r9, $r15);

     label12:
        $r37 = virtualinvoke $r11.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        interfaceinvoke r16.<com.hp.hpl.jena.shared.PrefixMapping: com.hp.hpl.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)>($r10, $r37);

        goto label04;

     label13:
        return;
    }
}
