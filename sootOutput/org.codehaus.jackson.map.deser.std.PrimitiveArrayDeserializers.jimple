public class org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers extends java.lang.Object
{
    java.util.HashMap _allDeserializers;
    static final org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers instance;

    protected void <init>()
    {
        org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers r0;
        java.util.HashMap $r1;
        org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$IntDeser $r8;
        org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$LongDeser $r10;
        org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$FloatDeser $r12;
        org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$StringDeser $r16;
        org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ByteDeser $r4;
        org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$BooleanDeser $r2;
        org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$CharDeser $r17;
        org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ShortDeser $r6;
        org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$DoubleDeser $r14;
        java.lang.Class $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r18;

        r0 := @this: org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers: java.util.HashMap _allDeserializers> = $r1;

        $r3 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r2 = new org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$BooleanDeser;

        specialinvoke $r2.<org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$BooleanDeser: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers: void add(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer)>($r3, $r2);

        $r5 = <java.lang.Byte: java.lang.Class TYPE>;

        $r4 = new org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ByteDeser;

        specialinvoke $r4.<org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ByteDeser: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers: void add(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer)>($r5, $r4);

        $r7 = <java.lang.Short: java.lang.Class TYPE>;

        $r6 = new org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ShortDeser;

        specialinvoke $r6.<org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ShortDeser: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers: void add(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer)>($r7, $r6);

        $r9 = <java.lang.Integer: java.lang.Class TYPE>;

        $r8 = new org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$IntDeser;

        specialinvoke $r8.<org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$IntDeser: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers: void add(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer)>($r9, $r8);

        $r11 = <java.lang.Long: java.lang.Class TYPE>;

        $r10 = new org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$LongDeser;

        specialinvoke $r10.<org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$LongDeser: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers: void add(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer)>($r11, $r10);

        $r13 = <java.lang.Float: java.lang.Class TYPE>;

        $r12 = new org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$FloatDeser;

        specialinvoke $r12.<org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$FloatDeser: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers: void add(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer)>($r13, $r12);

        $r15 = <java.lang.Double: java.lang.Class TYPE>;

        $r14 = new org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$DoubleDeser;

        specialinvoke $r14.<org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$DoubleDeser: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers: void add(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer)>($r15, $r14);

        $r16 = new org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$StringDeser;

        specialinvoke $r16.<org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$StringDeser: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers: void add(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer)>(class "Ljava/lang/String;", $r16);

        $r18 = <java.lang.Character: java.lang.Class TYPE>;

        $r17 = new org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$CharDeser;

        specialinvoke $r17.<org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$CharDeser: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers: void add(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer)>($r18, $r17);

        return;
    }

    public static java.util.HashMap getAll()
    {
        org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers $r0;
        java.util.HashMap $r1;

        $r0 = <org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers: org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers instance>;

        $r1 = $r0.<org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers: java.util.HashMap _allDeserializers>;

        return $r1;
    }

    private void add(java.lang.Class, org.codehaus.jackson.map.JsonDeserializer)
    {
        org.codehaus.jackson.map.type.TypeFactory $r2;
        org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers r0;
        org.codehaus.jackson.type.JavaType $r4;
        java.util.HashMap $r1;
        java.lang.Class r3;
        org.codehaus.jackson.map.JsonDeserializer r5;

        r0 := @this: org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers;

        r3 := @parameter0: java.lang.Class;

        r5 := @parameter1: org.codehaus.jackson.map.JsonDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers: java.util.HashMap _allDeserializers>;

        $r2 = staticinvoke <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.map.type.TypeFactory defaultInstance()>();

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>(r3);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r5);

        return;
    }

    public java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, org.codehaus.jackson.map.TypeDeserializer) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.TypeDeserializer r0;
        org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers r4;
        java.lang.Object $r3;
        org.codehaus.jackson.JsonParser r1;
        org.codehaus.jackson.map.DeserializationContext r2;

        r4 := @this: org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        r0 := @parameter2: org.codehaus.jackson.map.TypeDeserializer;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.TypeDeserializer: java.lang.Object deserializeTypedFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r1, r2);

        return $r3;
    }

    static void <clinit>()
    {
        org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers $r0;

        $r0 = new org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers;

        specialinvoke $r0.<org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers: void <init>()>();

        <org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers: org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers instance> = $r0;

        return;
    }
}
