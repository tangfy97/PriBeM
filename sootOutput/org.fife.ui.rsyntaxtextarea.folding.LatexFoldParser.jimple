public class org.fife.ui.rsyntaxtextarea.folding.LatexFoldParser extends java.lang.Object implements org.fife.ui.rsyntaxtextarea.folding.FoldParser
{
    private static final char[] BEGIN;
    private static final char[] END;

    public void <init>()
    {
        org.fife.ui.rsyntaxtextarea.folding.LatexFoldParser r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.LatexFoldParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.List getFolds(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea)
    {
        org.fife.ui.rsyntaxtextarea.folding.LatexFoldParser r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r2;
        javax.swing.text.BadLocationException $r14;
        java.util.Stack $r1;
        java.util.ArrayList $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        java.lang.String $r7, $r12;
        org.fife.ui.rsyntaxtextarea.folding.Fold $r9, $r13, r16;
        char[] $r3, $r4;
        java.lang.Object $r8;
        org.fife.ui.rsyntaxtextarea.Token $r5, $r6, $r10, $r11, r17;

        r15 := @this: org.fife.ui.rsyntaxtextarea.folding.LatexFoldParser;

        r2 := @parameter0: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new java.util.Stack;

        specialinvoke $r1.<java.util.Stack: void <init>()>();

        r16 = null;

        $i0 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLineCount()>();

     label01:
        i8 = 0;

     label02:
        if i8 >= $i0 goto label11;

        r17 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: org.fife.ui.rsyntaxtextarea.Token getTokenListForLine(int)>(i8);

     label03:
        if r17 == null goto label10;

        $z0 = virtualinvoke r17.<org.fife.ui.rsyntaxtextarea.Token: boolean isPaintable()>();

        if $z0 == 0 goto label10;

        $r3 = <org.fife.ui.rsyntaxtextarea.folding.LatexFoldParser: char[] BEGIN>;

        $z1 = virtualinvoke r17.<org.fife.ui.rsyntaxtextarea.Token: boolean is(int,char[])>(6, $r3);

        if $z1 == 0 goto label07;

        $r10 = virtualinvoke r17.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token getNextToken()>();

        if $r10 == null goto label06;

        $z8 = virtualinvoke $r10.<org.fife.ui.rsyntaxtextarea.Token: boolean isLeftCurly()>();

        if $z8 == 0 goto label06;

        $r11 = virtualinvoke $r10.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token getNextToken()>();

        if $r11 == null goto label06;

        $i5 = $r11.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        if $i5 != 6 goto label06;

        if r16 != null goto label04;

        $r13 = new org.fife.ui.rsyntaxtextarea.folding.Fold;

        $i7 = r17.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        specialinvoke $r13.<org.fife.ui.rsyntaxtextarea.folding.Fold: void <init>(int,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,int)>(0, r2, $i7);

        r16 = $r13;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label05;

     label04:
        $i6 = r17.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        r16 = virtualinvoke r16.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold createChild(int,int)>(0, $i6);

     label05:
        $r12 = virtualinvoke $r11.<org.fife.ui.rsyntaxtextarea.Token: java.lang.String getLexeme()>();

        virtualinvoke $r1.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r12);

        r17 = $r11;

     label06:
        goto label09;

     label07:
        $r4 = <org.fife.ui.rsyntaxtextarea.folding.LatexFoldParser: char[] END>;

        $z2 = virtualinvoke r17.<org.fife.ui.rsyntaxtextarea.Token: boolean is(int,char[])>(6, $r4);

        if $z2 == 0 goto label09;

        if r16 == null goto label09;

        $z3 = virtualinvoke $r1.<java.util.Stack: boolean isEmpty()>();

        if $z3 != 0 goto label09;

        $r5 = virtualinvoke r17.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token getNextToken()>();

        if $r5 == null goto label09;

        $z4 = virtualinvoke $r5.<org.fife.ui.rsyntaxtextarea.Token: boolean isLeftCurly()>();

        if $z4 == 0 goto label09;

        $r6 = virtualinvoke $r5.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token getNextToken()>();

        if $r6 == null goto label09;

        $i1 = $r6.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        if $i1 != 6 goto label09;

        $r7 = virtualinvoke $r6.<org.fife.ui.rsyntaxtextarea.Token: java.lang.String getLexeme()>();

        $r8 = virtualinvoke $r1.<java.util.Stack: java.lang.Object peek()>();

        $z5 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z5 == 0 goto label09;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        $i2 = r17.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        virtualinvoke r16.<org.fife.ui.rsyntaxtextarea.folding.Fold: void setEndOffset(int)>($i2);

        $r9 = virtualinvoke r16.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold getParent()>();

        $z6 = virtualinvoke r16.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean isOnSingleLine()>();

        if $z6 == 0 goto label08;

        $z7 = virtualinvoke r16.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean removeFromParent()>();

        if $z7 != 0 goto label08;

        $i3 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i4 = $i3 - 1;

        interfaceinvoke $r0.<java.util.List: java.lang.Object remove(int)>($i4);

     label08:
        r17 = $r6;

        r16 = $r9;

     label09:
        r17 = virtualinvoke r17.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token getNextToken()>();

        goto label03;

     label10:
        i8 = i8 + 1;

        goto label02;

     label11:
        goto label13;

     label12:
        $r14 := @caughtexception;

        virtualinvoke $r14.<javax.swing.text.BadLocationException: void printStackTrace()>();

     label13:
        return $r0;

        catch javax.swing.text.BadLocationException from label01 to label11 with label12;
    }

    static void <clinit>()
    {
        char[] $r1, $r3;
        java.lang.String $r0, $r2;

        $r0 = "\\begin";

        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        <org.fife.ui.rsyntaxtextarea.folding.LatexFoldParser: char[] BEGIN> = $r1;

        $r2 = "\\end";

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        <org.fife.ui.rsyntaxtextarea.folding.LatexFoldParser: char[] END> = $r3;

        return;
    }
}
