public class org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl extends org.apache.xmlbeans.impl.xb.xsdschema.impl.OpenAttrsImpl implements org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema
{
    private static final javax.xml.namespace.QName INCLUDE$0;
    private static final javax.xml.namespace.QName IMPORT$2;
    private static final javax.xml.namespace.QName REDEFINE$4;
    private static final javax.xml.namespace.QName ANNOTATION$6;
    private static final javax.xml.namespace.QName SIMPLETYPE$8;
    private static final javax.xml.namespace.QName COMPLEXTYPE$10;
    private static final javax.xml.namespace.QName GROUP$12;
    private static final javax.xml.namespace.QName ATTRIBUTEGROUP$14;
    private static final javax.xml.namespace.QName ELEMENT$16;
    private static final javax.xml.namespace.QName ATTRIBUTE$18;
    private static final javax.xml.namespace.QName NOTATION$20;
    private static final javax.xml.namespace.QName TARGETNAMESPACE$22;
    private static final javax.xml.namespace.QName VERSION$24;
    private static final javax.xml.namespace.QName FINALDEFAULT$26;
    private static final javax.xml.namespace.QName BLOCKDEFAULT$28;
    private static final javax.xml.namespace.QName ATTRIBUTEFORMDEFAULT$30;
    private static final javax.xml.namespace.QName ELEMENTFORMDEFAULT$32;
    private static final javax.xml.namespace.QName ID$34;
    private static final javax.xml.namespace.QName LANG$36;

    public void <init>(org.apache.xmlbeans.SchemaType)
    {
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.SchemaType r1;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType;

        specialinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.OpenAttrsImpl: void <init>(org.apache.xmlbeans.SchemaType)>(r1);

        return;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.IncludeDocument$Include[] getIncludeArray()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.xb.xsdschema.IncludeDocument$Include[] r5;
        org.apache.xmlbeans.impl.values.TypeStore $r3;
        java.util.ArrayList $r2;
        int $i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r4 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName INCLUDE$0>;

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.values.TypeStore: void find_all_element_users(javax.xml.namespace.QName,java.util.List)>($r4, $r2);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r5 = newarray (org.apache.xmlbeans.impl.xb.xsdschema.IncludeDocument$Include)[$i0];

        interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        exitmonitor $r1;

     label2:
        return r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.IncludeDocument$Include getIncludeArray(int)
    {
        java.lang.Throwable $r6;
        java.lang.IndexOutOfBoundsException $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.IncludeDocument$Include r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName INCLUDE$0>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r7 = (org.apache.xmlbeans.impl.xb.xsdschema.IncludeDocument$Include) $r4;

        if r7 != null goto label2;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label2:
        exitmonitor $r1;

     label3:
        return r7;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int sizeOfIncludeArray()
    {
        java.lang.Throwable $r4;
        int $i0;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName INCLUDE$0>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setIncludeArray(org.apache.xmlbeans.impl.xb.xsdschema.IncludeDocument$Include[])
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.xb.xsdschema.IncludeDocument$Include[] r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r2 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.IncludeDocument$Include[];

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName INCLUDE$0>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void arraySetterHelper(org.apache.xmlbeans.XmlObject[],javax.xml.namespace.QName)>(r2, $r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setIncludeArray(int, org.apache.xmlbeans.impl.xb.xsdschema.IncludeDocument$Include)
    {
        java.lang.Throwable $r7;
        java.lang.IndexOutOfBoundsException $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.IncludeDocument$Include r5, r8;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        r5 := @parameter1: org.apache.xmlbeans.impl.xb.xsdschema.IncludeDocument$Include;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName INCLUDE$0>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.IncludeDocument$Include) $r4;

        if r8 != null goto label2;

        $r6 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label2:
        interfaceinvoke r8.<org.apache.xmlbeans.impl.xb.xsdschema.IncludeDocument$Include: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.IncludeDocument$Include insertNewInclude(int)
    {
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.IncludeDocument$Include r6;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName INCLUDE$0>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.IncludeDocument$Include) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.IncludeDocument$Include addNewInclude()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.IncludeDocument$Include r6;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName INCLUDE$0>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.IncludeDocument$Include) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeInclude(int)
    {
        java.lang.Throwable $r4;
        int i0;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName INCLUDE$0>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, i0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.ImportDocument$Import[] getImportArray()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r3;
        java.util.ArrayList $r2;
        org.apache.xmlbeans.impl.xb.xsdschema.ImportDocument$Import[] r5;
        int $i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r4 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName IMPORT$2>;

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.values.TypeStore: void find_all_element_users(javax.xml.namespace.QName,java.util.List)>($r4, $r2);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r5 = newarray (org.apache.xmlbeans.impl.xb.xsdschema.ImportDocument$Import)[$i0];

        interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        exitmonitor $r1;

     label2:
        return r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.ImportDocument$Import getImportArray(int)
    {
        java.lang.Throwable $r6;
        java.lang.IndexOutOfBoundsException $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.ImportDocument$Import r7;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName IMPORT$2>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r7 = (org.apache.xmlbeans.impl.xb.xsdschema.ImportDocument$Import) $r4;

        if r7 != null goto label2;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label2:
        exitmonitor $r1;

     label3:
        return r7;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int sizeOfImportArray()
    {
        java.lang.Throwable $r4;
        int $i0;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName IMPORT$2>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setImportArray(org.apache.xmlbeans.impl.xb.xsdschema.ImportDocument$Import[])
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.ImportDocument$Import[] r2;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r2 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.ImportDocument$Import[];

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName IMPORT$2>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void arraySetterHelper(org.apache.xmlbeans.XmlObject[],javax.xml.namespace.QName)>(r2, $r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setImportArray(int, org.apache.xmlbeans.impl.xb.xsdschema.ImportDocument$Import)
    {
        java.lang.Throwable $r7;
        java.lang.IndexOutOfBoundsException $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.ImportDocument$Import r5, r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        r5 := @parameter1: org.apache.xmlbeans.impl.xb.xsdschema.ImportDocument$Import;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName IMPORT$2>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.ImportDocument$Import) $r4;

        if r8 != null goto label2;

        $r6 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label2:
        interfaceinvoke r8.<org.apache.xmlbeans.impl.xb.xsdschema.ImportDocument$Import: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.ImportDocument$Import insertNewImport(int)
    {
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.ImportDocument$Import r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName IMPORT$2>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.ImportDocument$Import) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.ImportDocument$Import addNewImport()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.ImportDocument$Import r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName IMPORT$2>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.ImportDocument$Import) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeImport(int)
    {
        java.lang.Throwable $r4;
        int i0;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName IMPORT$2>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, i0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine[] getRedefineArray()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r3;
        java.util.ArrayList $r2;
        org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine[] r5;
        int $i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r4 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName REDEFINE$4>;

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.values.TypeStore: void find_all_element_users(javax.xml.namespace.QName,java.util.List)>($r4, $r2);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r5 = newarray (org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine)[$i0];

        interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        exitmonitor $r1;

     label2:
        return r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine getRedefineArray(int)
    {
        java.lang.Throwable $r6;
        java.lang.IndexOutOfBoundsException $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine r7;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName REDEFINE$4>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r7 = (org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine) $r4;

        if r7 != null goto label2;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label2:
        exitmonitor $r1;

     label3:
        return r7;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int sizeOfRedefineArray()
    {
        java.lang.Throwable $r4;
        int $i0;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName REDEFINE$4>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setRedefineArray(org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine[])
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine[] r2;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r2 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine[];

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName REDEFINE$4>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void arraySetterHelper(org.apache.xmlbeans.XmlObject[],javax.xml.namespace.QName)>(r2, $r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setRedefineArray(int, org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine)
    {
        java.lang.Throwable $r7;
        java.lang.IndexOutOfBoundsException $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine r5, r8;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        r5 := @parameter1: org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName REDEFINE$4>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine) $r4;

        if r8 != null goto label2;

        $r6 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label2:
        interfaceinvoke r8.<org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine insertNewRedefine(int)
    {
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName REDEFINE$4>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine addNewRedefine()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName REDEFINE$4>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeRedefine(int)
    {
        java.lang.Throwable $r4;
        int i0;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName REDEFINE$4>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, i0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.AnnotationDocument$Annotation[] getAnnotationArray()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r3;
        java.util.ArrayList $r2;
        int $i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.AnnotationDocument$Annotation[] r5;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r4 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ANNOTATION$6>;

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.values.TypeStore: void find_all_element_users(javax.xml.namespace.QName,java.util.List)>($r4, $r2);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r5 = newarray (org.apache.xmlbeans.impl.xb.xsdschema.AnnotationDocument$Annotation)[$i0];

        interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        exitmonitor $r1;

     label2:
        return r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.AnnotationDocument$Annotation getAnnotationArray(int)
    {
        java.lang.Throwable $r6;
        java.lang.IndexOutOfBoundsException $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.xb.xsdschema.AnnotationDocument$Annotation r7;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ANNOTATION$6>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r7 = (org.apache.xmlbeans.impl.xb.xsdschema.AnnotationDocument$Annotation) $r4;

        if r7 != null goto label2;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label2:
        exitmonitor $r1;

     label3:
        return r7;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int sizeOfAnnotationArray()
    {
        java.lang.Throwable $r4;
        int $i0;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ANNOTATION$6>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setAnnotationArray(org.apache.xmlbeans.impl.xb.xsdschema.AnnotationDocument$Annotation[])
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.AnnotationDocument$Annotation[] r2;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r2 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.AnnotationDocument$Annotation[];

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ANNOTATION$6>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void arraySetterHelper(org.apache.xmlbeans.XmlObject[],javax.xml.namespace.QName)>(r2, $r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setAnnotationArray(int, org.apache.xmlbeans.impl.xb.xsdschema.AnnotationDocument$Annotation)
    {
        java.lang.Throwable $r7;
        java.lang.IndexOutOfBoundsException $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.xb.xsdschema.AnnotationDocument$Annotation r5, r8;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        r5 := @parameter1: org.apache.xmlbeans.impl.xb.xsdschema.AnnotationDocument$Annotation;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ANNOTATION$6>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.AnnotationDocument$Annotation) $r4;

        if r8 != null goto label2;

        $r6 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label2:
        interfaceinvoke r8.<org.apache.xmlbeans.impl.xb.xsdschema.AnnotationDocument$Annotation: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.AnnotationDocument$Annotation insertNewAnnotation(int)
    {
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.xb.xsdschema.AnnotationDocument$Annotation r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ANNOTATION$6>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.AnnotationDocument$Annotation) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.AnnotationDocument$Annotation addNewAnnotation()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.xb.xsdschema.AnnotationDocument$Annotation r6;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ANNOTATION$6>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.AnnotationDocument$Annotation) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeAnnotation(int)
    {
        java.lang.Throwable $r4;
        int i0;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ANNOTATION$6>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, i0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType[] getSimpleTypeArray()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType[] r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r3;
        java.util.ArrayList $r2;
        int $i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r4 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName SIMPLETYPE$8>;

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.values.TypeStore: void find_all_element_users(javax.xml.namespace.QName,java.util.List)>($r4, $r2);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r5 = newarray (org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType)[$i0];

        interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        exitmonitor $r1;

     label2:
        return r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType getSimpleTypeArray(int)
    {
        java.lang.Throwable $r6;
        java.lang.IndexOutOfBoundsException $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType r7;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName SIMPLETYPE$8>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r7 = (org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType) $r4;

        if r7 != null goto label2;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label2:
        exitmonitor $r1;

     label3:
        return r7;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int sizeOfSimpleTypeArray()
    {
        java.lang.Throwable $r4;
        int $i0;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName SIMPLETYPE$8>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setSimpleTypeArray(org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType[])
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType[] r2;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r2 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType[];

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName SIMPLETYPE$8>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void arraySetterHelper(org.apache.xmlbeans.XmlObject[],javax.xml.namespace.QName)>(r2, $r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setSimpleTypeArray(int, org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType)
    {
        java.lang.Throwable $r7;
        java.lang.IndexOutOfBoundsException $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType r5, r8;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        r5 := @parameter1: org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName SIMPLETYPE$8>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType) $r4;

        if r8 != null goto label2;

        $r6 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label2:
        interfaceinvoke r8.<org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType insertNewSimpleType(int)
    {
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType r6;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName SIMPLETYPE$8>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType addNewSimpleType()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName SIMPLETYPE$8>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeSimpleType(int)
    {
        java.lang.Throwable $r4;
        int i0;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName SIMPLETYPE$8>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, i0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType[] getComplexTypeArray()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r3;
        java.util.ArrayList $r2;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType[] r5;
        int $i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r4 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName COMPLEXTYPE$10>;

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.values.TypeStore: void find_all_element_users(javax.xml.namespace.QName,java.util.List)>($r4, $r2);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r5 = newarray (org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType)[$i0];

        interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        exitmonitor $r1;

     label2:
        return r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType getComplexTypeArray(int)
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType r7;
        java.lang.IndexOutOfBoundsException $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName COMPLEXTYPE$10>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r7 = (org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType) $r4;

        if r7 != null goto label2;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label2:
        exitmonitor $r1;

     label3:
        return r7;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int sizeOfComplexTypeArray()
    {
        java.lang.Throwable $r4;
        int $i0;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName COMPLEXTYPE$10>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setComplexTypeArray(org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType[])
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType[] r2;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r2 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType[];

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName COMPLEXTYPE$10>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void arraySetterHelper(org.apache.xmlbeans.XmlObject[],javax.xml.namespace.QName)>(r2, $r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setComplexTypeArray(int, org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType)
    {
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType r5, r8;
        java.lang.Throwable $r7;
        java.lang.IndexOutOfBoundsException $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        r5 := @parameter1: org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName COMPLEXTYPE$10>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType) $r4;

        if r8 != null goto label2;

        $r6 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label2:
        interfaceinvoke r8.<org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType insertNewComplexType(int)
    {
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName COMPLEXTYPE$10>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType addNewComplexType()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName COMPLEXTYPE$10>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeComplexType(int)
    {
        java.lang.Throwable $r4;
        int i0;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName COMPLEXTYPE$10>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, i0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup[] getGroupArray()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r3;
        java.util.ArrayList $r2;
        int $i0;
        org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup[] r5;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r4 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName GROUP$12>;

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.values.TypeStore: void find_all_element_users(javax.xml.namespace.QName,java.util.List)>($r4, $r2);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r5 = newarray (org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup)[$i0];

        interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        exitmonitor $r1;

     label2:
        return r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup getGroupArray(int)
    {
        java.lang.Throwable $r6;
        java.lang.IndexOutOfBoundsException $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup r7;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName GROUP$12>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r7 = (org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup) $r4;

        if r7 != null goto label2;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label2:
        exitmonitor $r1;

     label3:
        return r7;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int sizeOfGroupArray()
    {
        java.lang.Throwable $r4;
        int $i0;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName GROUP$12>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setGroupArray(org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup[])
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup[] r2;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r2 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup[];

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName GROUP$12>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void arraySetterHelper(org.apache.xmlbeans.XmlObject[],javax.xml.namespace.QName)>(r2, $r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setGroupArray(int, org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup)
    {
        java.lang.Throwable $r7;
        java.lang.IndexOutOfBoundsException $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup r5, r8;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        r5 := @parameter1: org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName GROUP$12>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup) $r4;

        if r8 != null goto label2;

        $r6 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label2:
        interfaceinvoke r8.<org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup insertNewGroup(int)
    {
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName GROUP$12>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup addNewGroup()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup r6;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName GROUP$12>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeGroup(int)
    {
        java.lang.Throwable $r4;
        int i0;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName GROUP$12>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, i0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup[] getAttributeGroupArray()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r3;
        java.util.ArrayList $r2;
        org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup[] r5;
        int $i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r4 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTEGROUP$14>;

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.values.TypeStore: void find_all_element_users(javax.xml.namespace.QName,java.util.List)>($r4, $r2);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r5 = newarray (org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup)[$i0];

        interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        exitmonitor $r1;

     label2:
        return r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup getAttributeGroupArray(int)
    {
        java.lang.Throwable $r6;
        java.lang.IndexOutOfBoundsException $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup r7;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTEGROUP$14>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r7 = (org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup) $r4;

        if r7 != null goto label2;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label2:
        exitmonitor $r1;

     label3:
        return r7;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int sizeOfAttributeGroupArray()
    {
        java.lang.Throwable $r4;
        int $i0;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTEGROUP$14>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setAttributeGroupArray(org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup[])
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup[] r2;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r2 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup[];

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTEGROUP$14>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void arraySetterHelper(org.apache.xmlbeans.XmlObject[],javax.xml.namespace.QName)>(r2, $r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setAttributeGroupArray(int, org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup)
    {
        java.lang.Throwable $r7;
        java.lang.IndexOutOfBoundsException $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup r5, r8;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        r5 := @parameter1: org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTEGROUP$14>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup) $r4;

        if r8 != null goto label2;

        $r6 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label2:
        interfaceinvoke r8.<org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup insertNewAttributeGroup(int)
    {
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTEGROUP$14>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup addNewAttributeGroup()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup r6;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTEGROUP$14>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeAttributeGroup(int)
    {
        java.lang.Throwable $r4;
        int i0;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTEGROUP$14>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, i0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement[] getElementArray()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement[] r5;
        java.util.ArrayList $r2;
        int $i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r4 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ELEMENT$16>;

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.values.TypeStore: void find_all_element_users(javax.xml.namespace.QName,java.util.List)>($r4, $r2);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r5 = newarray (org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement)[$i0];

        interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        exitmonitor $r1;

     label2:
        return r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement getElementArray(int)
    {
        java.lang.Throwable $r6;
        java.lang.IndexOutOfBoundsException $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement r7;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ELEMENT$16>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r7 = (org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement) $r4;

        if r7 != null goto label2;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label2:
        exitmonitor $r1;

     label3:
        return r7;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int sizeOfElementArray()
    {
        java.lang.Throwable $r4;
        int $i0;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ELEMENT$16>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setElementArray(org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement[])
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement[] r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r2 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement[];

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ELEMENT$16>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void arraySetterHelper(org.apache.xmlbeans.XmlObject[],javax.xml.namespace.QName)>(r2, $r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setElementArray(int, org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement)
    {
        java.lang.Throwable $r7;
        java.lang.IndexOutOfBoundsException $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement r5, r8;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        r5 := @parameter1: org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ELEMENT$16>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement) $r4;

        if r8 != null goto label2;

        $r6 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label2:
        interfaceinvoke r8.<org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement insertNewElement(int)
    {
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement r6;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ELEMENT$16>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement addNewElement()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ELEMENT$16>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeElement(int)
    {
        java.lang.Throwable $r4;
        int i0;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ELEMENT$16>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, i0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute[] getAttributeArray()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute[] r5;
        java.util.ArrayList $r2;
        int $i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r4 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTE$18>;

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.values.TypeStore: void find_all_element_users(javax.xml.namespace.QName,java.util.List)>($r4, $r2);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r5 = newarray (org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute)[$i0];

        interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        exitmonitor $r1;

     label2:
        return r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute getAttributeArray(int)
    {
        java.lang.Throwable $r6;
        java.lang.IndexOutOfBoundsException $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute r7;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTE$18>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r7 = (org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute) $r4;

        if r7 != null goto label2;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label2:
        exitmonitor $r1;

     label3:
        return r7;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int sizeOfAttributeArray()
    {
        java.lang.Throwable $r4;
        int $i0;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTE$18>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setAttributeArray(org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute[])
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute[] r2;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r2 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute[];

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTE$18>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void arraySetterHelper(org.apache.xmlbeans.XmlObject[],javax.xml.namespace.QName)>(r2, $r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setAttributeArray(int, org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute)
    {
        java.lang.Throwable $r7;
        java.lang.IndexOutOfBoundsException $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute r5, r8;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        r5 := @parameter1: org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTE$18>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute) $r4;

        if r8 != null goto label2;

        $r6 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label2:
        interfaceinvoke r8.<org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute insertNewAttribute(int)
    {
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute r6;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTE$18>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute addNewAttribute()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTE$18>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeAttribute(int)
    {
        java.lang.Throwable $r4;
        int i0;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTE$18>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, i0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.NotationDocument$Notation[] getNotationArray()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.NotationDocument$Notation[] r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r3;
        java.util.ArrayList $r2;
        int $i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r4 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName NOTATION$20>;

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.values.TypeStore: void find_all_element_users(javax.xml.namespace.QName,java.util.List)>($r4, $r2);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r5 = newarray (org.apache.xmlbeans.impl.xb.xsdschema.NotationDocument$Notation)[$i0];

        interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        exitmonitor $r1;

     label2:
        return r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.NotationDocument$Notation getNotationArray(int)
    {
        java.lang.Throwable $r6;
        java.lang.IndexOutOfBoundsException $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.NotationDocument$Notation r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName NOTATION$20>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r7 = (org.apache.xmlbeans.impl.xb.xsdschema.NotationDocument$Notation) $r4;

        if r7 != null goto label2;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label2:
        exitmonitor $r1;

     label3:
        return r7;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int sizeOfNotationArray()
    {
        java.lang.Throwable $r4;
        int $i0;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName NOTATION$20>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setNotationArray(org.apache.xmlbeans.impl.xb.xsdschema.NotationDocument$Notation[])
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.NotationDocument$Notation[] r2;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r2 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.NotationDocument$Notation[];

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName NOTATION$20>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void arraySetterHelper(org.apache.xmlbeans.XmlObject[],javax.xml.namespace.QName)>(r2, $r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setNotationArray(int, org.apache.xmlbeans.impl.xb.xsdschema.NotationDocument$Notation)
    {
        java.lang.Throwable $r7;
        java.lang.IndexOutOfBoundsException $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.NotationDocument$Notation r5, r8;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        r5 := @parameter1: org.apache.xmlbeans.impl.xb.xsdschema.NotationDocument$Notation;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName NOTATION$20>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.NotationDocument$Notation) $r4;

        if r8 != null goto label2;

        $r6 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label2:
        interfaceinvoke r8.<org.apache.xmlbeans.impl.xb.xsdschema.NotationDocument$Notation: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.NotationDocument$Notation insertNewNotation(int)
    {
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.NotationDocument$Notation r6;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName NOTATION$20>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.NotationDocument$Notation) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.NotationDocument$Notation addNewNotation()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.NotationDocument$Notation r6;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName NOTATION$20>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.NotationDocument$Notation) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeNotation(int)
    {
        java.lang.Throwable $r4;
        int i0;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName NOTATION$20>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, i0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String getTargetNamespace()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;
        java.lang.String $r5;
        org.apache.xmlbeans.SimpleValue r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName TARGETNAMESPACE$22>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r7 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r7 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        $r5 = interfaceinvoke r7.<org.apache.xmlbeans.SimpleValue: java.lang.String getStringValue()>();

        exitmonitor $r1;

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.apache.xmlbeans.XmlAnyURI xgetTargetNamespace()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.XmlAnyURI r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName TARGETNAMESPACE$22>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.XmlAnyURI) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isSetTargetNamespace()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName TARGETNAMESPACE$22>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setTargetNamespace(java.lang.String)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        java.lang.String r5;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r5 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName TARGETNAMESPACE$22>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName TARGETNAMESPACE$22>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setStringValue(java.lang.String)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetTargetNamespace(org.apache.xmlbeans.XmlAnyURI)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.XmlAnyURI r5, r10;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r5 := @parameter0: org.apache.xmlbeans.XmlAnyURI;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName TARGETNAMESPACE$22>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.XmlAnyURI) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName TARGETNAMESPACE$22>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.XmlAnyURI) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.XmlAnyURI: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetTargetNamespace()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName TARGETNAMESPACE$22>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String getVersion()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;
        java.lang.String $r5;
        org.apache.xmlbeans.SimpleValue r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName VERSION$24>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r7 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r7 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        $r5 = interfaceinvoke r7.<org.apache.xmlbeans.SimpleValue: java.lang.String getStringValue()>();

        exitmonitor $r1;

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.apache.xmlbeans.XmlToken xgetVersion()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.XmlToken r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName VERSION$24>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.XmlToken) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isSetVersion()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName VERSION$24>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setVersion(java.lang.String)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        java.lang.String r5;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r5 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName VERSION$24>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName VERSION$24>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setStringValue(java.lang.String)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetVersion(org.apache.xmlbeans.XmlToken)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.XmlToken r5, r10;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r5 := @parameter0: org.apache.xmlbeans.XmlToken;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName VERSION$24>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.XmlToken) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName VERSION$24>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.XmlToken) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.XmlToken: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetVersion()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName VERSION$24>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object getFinalDefault()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r7;
        java.lang.Throwable $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Object $r1, $r5;
        javax.xml.namespace.QName $r3, $r6;
        org.apache.xmlbeans.SimpleValue r9;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName FINALDEFAULT$26>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r9 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r9 != null goto label2;

        $r6 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName FINALDEFAULT$26>;

        $r7 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r6);

        r9 = (org.apache.xmlbeans.SimpleValue) $r7;

     label2:
        if r9 != null goto label4;

        exitmonitor $r1;

     label3:
        return null;

     label4:
        $r5 = interfaceinvoke r9.<org.apache.xmlbeans.SimpleValue: java.lang.Object getObjectValue()>();

        exitmonitor $r1;

     label5:
        return $r5;

     label6:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r8;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.FullDerivationSet xgetFinalDefault()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r6;
        java.lang.Throwable $r7;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.FullDerivationSet r8;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r5;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName FINALDEFAULT$26>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.FullDerivationSet) $r4;

        if r8 != null goto label2;

        $r5 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName FINALDEFAULT$26>;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r5);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.FullDerivationSet) $r6;

     label2:
        exitmonitor $r1;

     label3:
        return r8;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean isSetFinalDefault()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName FINALDEFAULT$26>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setFinalDefault(java.lang.Object)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        java.lang.Object $r1, r5;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r5 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName FINALDEFAULT$26>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName FINALDEFAULT$26>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setObjectValue(java.lang.Object)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetFinalDefault(org.apache.xmlbeans.impl.xb.xsdschema.FullDerivationSet)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.FullDerivationSet r5, r10;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r5 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.FullDerivationSet;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName FINALDEFAULT$26>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.FullDerivationSet) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName FINALDEFAULT$26>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.FullDerivationSet) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.impl.xb.xsdschema.FullDerivationSet: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetFinalDefault()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName FINALDEFAULT$26>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object getBlockDefault()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r7;
        java.lang.Throwable $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Object $r1, $r5;
        javax.xml.namespace.QName $r3, $r6;
        org.apache.xmlbeans.SimpleValue r9;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName BLOCKDEFAULT$28>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r9 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r9 != null goto label2;

        $r6 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName BLOCKDEFAULT$28>;

        $r7 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r6);

        r9 = (org.apache.xmlbeans.SimpleValue) $r7;

     label2:
        if r9 != null goto label4;

        exitmonitor $r1;

     label3:
        return null;

     label4:
        $r5 = interfaceinvoke r9.<org.apache.xmlbeans.SimpleValue: java.lang.Object getObjectValue()>();

        exitmonitor $r1;

     label5:
        return $r5;

     label6:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r8;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.BlockSet xgetBlockDefault()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r6;
        java.lang.Throwable $r7;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.BlockSet r8;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r5;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName BLOCKDEFAULT$28>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.BlockSet) $r4;

        if r8 != null goto label2;

        $r5 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName BLOCKDEFAULT$28>;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r5);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.BlockSet) $r6;

     label2:
        exitmonitor $r1;

     label3:
        return r8;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean isSetBlockDefault()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName BLOCKDEFAULT$28>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setBlockDefault(java.lang.Object)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        java.lang.Object $r1, r5;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r5 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName BLOCKDEFAULT$28>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName BLOCKDEFAULT$28>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setObjectValue(java.lang.Object)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetBlockDefault(org.apache.xmlbeans.impl.xb.xsdschema.BlockSet)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.BlockSet r5, r10;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r5 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.BlockSet;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName BLOCKDEFAULT$28>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.BlockSet) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName BLOCKDEFAULT$28>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.BlockSet) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.impl.xb.xsdschema.BlockSet: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetBlockDefault()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName BLOCKDEFAULT$28>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum getAttributeFormDefault()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r8;
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum $r6;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.StringEnumAbstractBase $r5;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTEFORMDEFAULT$30>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTEFORMDEFAULT$30>;

        $r8 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        if r10 != null goto label4;

        exitmonitor $r1;

     label3:
        return null;

     label4:
        $r5 = interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: org.apache.xmlbeans.StringEnumAbstractBase getEnumValue()>();

        $r6 = (org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum) $r5;

        exitmonitor $r1;

     label5:
        return $r6;

     label6:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r9;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.FormChoice xgetAttributeFormDefault()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r6;
        java.lang.Throwable $r7;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.xb.xsdschema.FormChoice r8;
        javax.xml.namespace.QName $r3, $r5;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTEFORMDEFAULT$30>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.FormChoice) $r4;

        if r8 != null goto label2;

        $r5 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTEFORMDEFAULT$30>;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r5);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.FormChoice) $r6;

     label2:
        exitmonitor $r1;

     label3:
        return r8;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean isSetAttributeFormDefault()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTEFORMDEFAULT$30>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setAttributeFormDefault(org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum r5;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r5 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTEFORMDEFAULT$30>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTEFORMDEFAULT$30>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setEnumValue(org.apache.xmlbeans.StringEnumAbstractBase)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetAttributeFormDefault(org.apache.xmlbeans.impl.xb.xsdschema.FormChoice)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.xb.xsdschema.FormChoice r5, r10;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r5 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.FormChoice;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTEFORMDEFAULT$30>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.FormChoice) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTEFORMDEFAULT$30>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.FormChoice) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.impl.xb.xsdschema.FormChoice: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetAttributeFormDefault()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTEFORMDEFAULT$30>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum getElementFormDefault()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r8;
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum $r6;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.StringEnumAbstractBase $r5;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ELEMENTFORMDEFAULT$32>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ELEMENTFORMDEFAULT$32>;

        $r8 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        if r10 != null goto label4;

        exitmonitor $r1;

     label3:
        return null;

     label4:
        $r5 = interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: org.apache.xmlbeans.StringEnumAbstractBase getEnumValue()>();

        $r6 = (org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum) $r5;

        exitmonitor $r1;

     label5:
        return $r6;

     label6:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r9;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.FormChoice xgetElementFormDefault()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r6;
        java.lang.Throwable $r7;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.xb.xsdschema.FormChoice r8;
        javax.xml.namespace.QName $r3, $r5;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ELEMENTFORMDEFAULT$32>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.FormChoice) $r4;

        if r8 != null goto label2;

        $r5 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ELEMENTFORMDEFAULT$32>;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r5);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.FormChoice) $r6;

     label2:
        exitmonitor $r1;

     label3:
        return r8;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean isSetElementFormDefault()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ELEMENTFORMDEFAULT$32>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setElementFormDefault(org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum r5;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r5 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ELEMENTFORMDEFAULT$32>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ELEMENTFORMDEFAULT$32>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setEnumValue(org.apache.xmlbeans.StringEnumAbstractBase)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetElementFormDefault(org.apache.xmlbeans.impl.xb.xsdschema.FormChoice)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.xb.xsdschema.FormChoice r5, r10;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r5 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.FormChoice;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ELEMENTFORMDEFAULT$32>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.FormChoice) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ELEMENTFORMDEFAULT$32>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.FormChoice) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.impl.xb.xsdschema.FormChoice: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetElementFormDefault()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ELEMENTFORMDEFAULT$32>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String getId()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;
        java.lang.String $r5;
        org.apache.xmlbeans.SimpleValue r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ID$34>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r7 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r7 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        $r5 = interfaceinvoke r7.<org.apache.xmlbeans.SimpleValue: java.lang.String getStringValue()>();

        exitmonitor $r1;

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.apache.xmlbeans.XmlID xgetId()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.XmlID r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ID$34>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.XmlID) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isSetId()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ID$34>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setId(java.lang.String)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        java.lang.String r5;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r5 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ID$34>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ID$34>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setStringValue(java.lang.String)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetId(org.apache.xmlbeans.XmlID)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.XmlID r5, r10;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r5 := @parameter0: org.apache.xmlbeans.XmlID;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ID$34>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.XmlID) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ID$34>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.XmlID) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.XmlID: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetId()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ID$34>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String getLang()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;
        java.lang.String $r5;
        org.apache.xmlbeans.SimpleValue r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName LANG$36>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r7 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r7 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        $r5 = interfaceinvoke r7.<org.apache.xmlbeans.SimpleValue: java.lang.String getStringValue()>();

        exitmonitor $r1;

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.apache.xmlbeans.XmlLanguage xgetLang()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.XmlLanguage r6;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName LANG$36>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.XmlLanguage) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isSetLang()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName LANG$36>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setLang(java.lang.String)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        java.lang.String r5;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r5 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName LANG$36>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName LANG$36>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setStringValue(java.lang.String)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetLang(org.apache.xmlbeans.XmlLanguage)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.XmlLanguage r5, r10;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        r5 := @parameter0: org.apache.xmlbeans.XmlLanguage;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName LANG$36>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.XmlLanguage) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName LANG$36>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.XmlLanguage) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.XmlLanguage: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetLang()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName LANG$36>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void <clinit>()
    {
        javax.xml.namespace.QName $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;

        $r0 = new javax.xml.namespace.QName;

        specialinvoke $r0.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema", "include");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName INCLUDE$0> = $r0;

        $r1 = new javax.xml.namespace.QName;

        specialinvoke $r1.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema", "import");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName IMPORT$2> = $r1;

        $r2 = new javax.xml.namespace.QName;

        specialinvoke $r2.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema", "redefine");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName REDEFINE$4> = $r2;

        $r3 = new javax.xml.namespace.QName;

        specialinvoke $r3.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema", "annotation");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ANNOTATION$6> = $r3;

        $r4 = new javax.xml.namespace.QName;

        specialinvoke $r4.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema", "simpleType");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName SIMPLETYPE$8> = $r4;

        $r5 = new javax.xml.namespace.QName;

        specialinvoke $r5.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema", "complexType");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName COMPLEXTYPE$10> = $r5;

        $r6 = new javax.xml.namespace.QName;

        specialinvoke $r6.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema", "group");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName GROUP$12> = $r6;

        $r7 = new javax.xml.namespace.QName;

        specialinvoke $r7.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema", "attributeGroup");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTEGROUP$14> = $r7;

        $r8 = new javax.xml.namespace.QName;

        specialinvoke $r8.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema", "element");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ELEMENT$16> = $r8;

        $r9 = new javax.xml.namespace.QName;

        specialinvoke $r9.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema", "attribute");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTE$18> = $r9;

        $r10 = new javax.xml.namespace.QName;

        specialinvoke $r10.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema", "notation");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName NOTATION$20> = $r10;

        $r11 = new javax.xml.namespace.QName;

        specialinvoke $r11.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "targetNamespace");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName TARGETNAMESPACE$22> = $r11;

        $r12 = new javax.xml.namespace.QName;

        specialinvoke $r12.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "version");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName VERSION$24> = $r12;

        $r13 = new javax.xml.namespace.QName;

        specialinvoke $r13.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "finalDefault");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName FINALDEFAULT$26> = $r13;

        $r14 = new javax.xml.namespace.QName;

        specialinvoke $r14.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "blockDefault");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName BLOCKDEFAULT$28> = $r14;

        $r15 = new javax.xml.namespace.QName;

        specialinvoke $r15.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "attributeFormDefault");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ATTRIBUTEFORMDEFAULT$30> = $r15;

        $r16 = new javax.xml.namespace.QName;

        specialinvoke $r16.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "elementFormDefault");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ELEMENTFORMDEFAULT$32> = $r16;

        $r17 = new javax.xml.namespace.QName;

        specialinvoke $r17.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "id");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName ID$34> = $r17;

        $r18 = new javax.xml.namespace.QName;

        specialinvoke $r18.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/XML/1998/namespace", "lang");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.SchemaDocumentImpl$SchemaImpl: javax.xml.namespace.QName LANG$36> = $r18;

        return;
    }
}
