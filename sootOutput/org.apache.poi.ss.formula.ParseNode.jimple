final class org.apache.poi.ss.formula.ParseNode extends java.lang.Object
{
    public static final org.apache.poi.ss.formula.ParseNode[] EMPTY_ARRAY;
    private final org.apache.poi.ss.formula.ptg.Ptg _token;
    private final org.apache.poi.ss.formula.ParseNode[] _children;
    private boolean _isIf;
    private final int _tokenCount;

    public void <init>(org.apache.poi.ss.formula.ptg.Ptg, org.apache.poi.ss.formula.ParseNode[])
    {
        org.apache.poi.ss.formula.ptg.Ptg r1;
        org.apache.poi.ss.formula.ParseNode r0, $r3;
        java.lang.IllegalArgumentException $r4;
        int $i0, $i1, $i2, i3, i4;
        org.apache.poi.ss.formula.ParseNode[] r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.ss.formula.ParseNode;

        r1 := @parameter0: org.apache.poi.ss.formula.ptg.Ptg;

        r2 := @parameter1: org.apache.poi.ss.formula.ParseNode[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("token must not be null");

        throw $r4;

     label1:
        r0.<org.apache.poi.ss.formula.ParseNode: org.apache.poi.ss.formula.ptg.Ptg _token> = r1;

        r0.<org.apache.poi.ss.formula.ParseNode: org.apache.poi.ss.formula.ParseNode[] _children> = r2;

        $z0 = staticinvoke <org.apache.poi.ss.formula.ParseNode: boolean isIf(org.apache.poi.ss.formula.ptg.Ptg)>(r1);

        r0.<org.apache.poi.ss.formula.ParseNode: boolean _isIf> = $z0;

        i3 = 1;

        i4 = 0;

     label2:
        $i0 = lengthof r2;

        if i4 >= $i0 goto label3;

        $r3 = r2[i4];

        $i2 = specialinvoke $r3.<org.apache.poi.ss.formula.ParseNode: int getTokenCount()>();

        i3 = i3 + $i2;

        i4 = i4 + 1;

        goto label2;

     label3:
        $z1 = r0.<org.apache.poi.ss.formula.ParseNode: boolean _isIf>;

        if $z1 == 0 goto label4;

        $i1 = lengthof r2;

        i3 = i3 + $i1;

     label4:
        r0.<org.apache.poi.ss.formula.ParseNode: int _tokenCount> = i3;

        return;
    }

    public void <init>(org.apache.poi.ss.formula.ptg.Ptg)
    {
        org.apache.poi.ss.formula.ptg.Ptg r1;
        org.apache.poi.ss.formula.ParseNode r0;
        org.apache.poi.ss.formula.ParseNode[] $r2;

        r0 := @this: org.apache.poi.ss.formula.ParseNode;

        r1 := @parameter0: org.apache.poi.ss.formula.ptg.Ptg;

        $r2 = <org.apache.poi.ss.formula.ParseNode: org.apache.poi.ss.formula.ParseNode[] EMPTY_ARRAY>;

        specialinvoke r0.<org.apache.poi.ss.formula.ParseNode: void <init>(org.apache.poi.ss.formula.ptg.Ptg,org.apache.poi.ss.formula.ParseNode[])>(r1, $r2);

        return;
    }

    public void <init>(org.apache.poi.ss.formula.ptg.Ptg, org.apache.poi.ss.formula.ParseNode)
    {
        org.apache.poi.ss.formula.ptg.Ptg r1;
        org.apache.poi.ss.formula.ParseNode r0, r3;
        org.apache.poi.ss.formula.ParseNode[] $r2;

        r0 := @this: org.apache.poi.ss.formula.ParseNode;

        r1 := @parameter0: org.apache.poi.ss.formula.ptg.Ptg;

        r3 := @parameter1: org.apache.poi.ss.formula.ParseNode;

        $r2 = newarray (org.apache.poi.ss.formula.ParseNode)[1];

        $r2[0] = r3;

        specialinvoke r0.<org.apache.poi.ss.formula.ParseNode: void <init>(org.apache.poi.ss.formula.ptg.Ptg,org.apache.poi.ss.formula.ParseNode[])>(r1, $r2);

        return;
    }

    public void <init>(org.apache.poi.ss.formula.ptg.Ptg, org.apache.poi.ss.formula.ParseNode, org.apache.poi.ss.formula.ParseNode)
    {
        org.apache.poi.ss.formula.ptg.Ptg r1;
        org.apache.poi.ss.formula.ParseNode r0, r3, r4;
        org.apache.poi.ss.formula.ParseNode[] $r2;

        r0 := @this: org.apache.poi.ss.formula.ParseNode;

        r1 := @parameter0: org.apache.poi.ss.formula.ptg.Ptg;

        r3 := @parameter1: org.apache.poi.ss.formula.ParseNode;

        r4 := @parameter2: org.apache.poi.ss.formula.ParseNode;

        $r2 = newarray (org.apache.poi.ss.formula.ParseNode)[2];

        $r2[0] = r3;

        $r2[1] = r4;

        specialinvoke r0.<org.apache.poi.ss.formula.ParseNode: void <init>(org.apache.poi.ss.formula.ptg.Ptg,org.apache.poi.ss.formula.ParseNode[])>(r1, $r2);

        return;
    }

    private int getTokenCount()
    {
        int $i0;
        org.apache.poi.ss.formula.ParseNode r0;

        r0 := @this: org.apache.poi.ss.formula.ParseNode;

        $i0 = r0.<org.apache.poi.ss.formula.ParseNode: int _tokenCount>;

        return $i0;
    }

    public int getEncodedSize()
    {
        org.apache.poi.ss.formula.ptg.Ptg $r1, $r2;
        org.apache.poi.ss.formula.ParseNode r0, $r4;
        int $i0, $i1, i2, i3, $i4;
        org.apache.poi.ss.formula.ParseNode[] $r3, $r5;
        boolean $z0;

        r0 := @this: org.apache.poi.ss.formula.ParseNode;

        $r1 = r0.<org.apache.poi.ss.formula.ParseNode: org.apache.poi.ss.formula.ptg.Ptg _token>;

        $z0 = $r1 instanceof org.apache.poi.ss.formula.ptg.ArrayPtg;

        if $z0 == 0 goto label1;

        $i1 = 8;

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.ss.formula.ParseNode: org.apache.poi.ss.formula.ptg.Ptg _token>;

        $i1 = virtualinvoke $r2.<org.apache.poi.ss.formula.ptg.Ptg: int getSize()>();

     label2:
        i2 = $i1;

        i3 = 0;

     label3:
        $r5 = r0.<org.apache.poi.ss.formula.ParseNode: org.apache.poi.ss.formula.ParseNode[] _children>;

        $i4 = lengthof $r5;

        if i3 >= $i4 goto label4;

        $r3 = r0.<org.apache.poi.ss.formula.ParseNode: org.apache.poi.ss.formula.ParseNode[] _children>;

        $r4 = $r3[i3];

        $i0 = virtualinvoke $r4.<org.apache.poi.ss.formula.ParseNode: int getEncodedSize()>();

        i2 = i2 + $i0;

        i3 = i3 + 1;

        goto label3;

     label4:
        return i2;
    }

    public static org.apache.poi.ss.formula.ptg.Ptg[] toTokenArray(org.apache.poi.ss.formula.ParseNode)
    {
        org.apache.poi.ss.formula.ptg.Ptg[] $r2;
        int $i0;
        org.apache.poi.ss.formula.ParseNode r1;
        org.apache.poi.ss.formula.ParseNode$TokenCollector $r0;

        r1 := @parameter0: org.apache.poi.ss.formula.ParseNode;

        $r0 = new org.apache.poi.ss.formula.ParseNode$TokenCollector;

        $i0 = specialinvoke r1.<org.apache.poi.ss.formula.ParseNode: int getTokenCount()>();

        specialinvoke $r0.<org.apache.poi.ss.formula.ParseNode$TokenCollector: void <init>(int)>($i0);

        specialinvoke r1.<org.apache.poi.ss.formula.ParseNode: void collectPtgs(org.apache.poi.ss.formula.ParseNode$TokenCollector)>($r0);

        $r2 = virtualinvoke $r0.<org.apache.poi.ss.formula.ParseNode$TokenCollector: org.apache.poi.ss.formula.ptg.Ptg[] getResult()>();

        return $r2;
    }

    private void collectPtgs(org.apache.poi.ss.formula.ParseNode$TokenCollector)
    {
        org.apache.poi.ss.formula.ptg.Ptg $r1, $r2, $r4, $r7, $r8;
        org.apache.poi.ss.formula.ParseNode$TokenCollector r3;
        int i0, $i1;
        boolean $z0, $z1, z2, $z3, $z5, $z6;
        org.apache.poi.ss.formula.ParseNode r0, $r6;
        org.apache.poi.ss.formula.ParseNode[] $r5, $r9;

        r0 := @this: org.apache.poi.ss.formula.ParseNode;

        r3 := @parameter0: org.apache.poi.ss.formula.ParseNode$TokenCollector;

        $r1 = r0.<org.apache.poi.ss.formula.ParseNode: org.apache.poi.ss.formula.ptg.Ptg _token>;

        $z0 = staticinvoke <org.apache.poi.ss.formula.ParseNode: boolean isIf(org.apache.poi.ss.formula.ptg.Ptg)>($r1);

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.poi.ss.formula.ParseNode: void collectIfPtgs(org.apache.poi.ss.formula.ParseNode$TokenCollector)>(r3);

        return;

     label1:
        $r2 = r0.<org.apache.poi.ss.formula.ParseNode: org.apache.poi.ss.formula.ptg.Ptg _token>;

        $z1 = $r2 instanceof org.apache.poi.ss.formula.ptg.MemFuncPtg;

        if $z1 != 0 goto label2;

        $r8 = r0.<org.apache.poi.ss.formula.ParseNode: org.apache.poi.ss.formula.ptg.Ptg _token>;

        $z3 = $r8 instanceof org.apache.poi.ss.formula.ptg.MemAreaPtg;

        if $z3 == 0 goto label3;

     label2:
        $z6 = 1;

        $z5 = 1;

        goto label4;

     label3:
        $z6 = 0;

        $z5 = 0;

     label4:
        z2 = $z5;

        if $z6 == 0 goto label5;

        $r7 = r0.<org.apache.poi.ss.formula.ParseNode: org.apache.poi.ss.formula.ptg.Ptg _token>;

        virtualinvoke r3.<org.apache.poi.ss.formula.ParseNode$TokenCollector: void add(org.apache.poi.ss.formula.ptg.Ptg)>($r7);

     label5:
        i0 = 0;

     label6:
        $r9 = virtualinvoke r0.<org.apache.poi.ss.formula.ParseNode: org.apache.poi.ss.formula.ParseNode[] getChildren()>();

        $i1 = lengthof $r9;

        if i0 >= $i1 goto label7;

        $r5 = virtualinvoke r0.<org.apache.poi.ss.formula.ParseNode: org.apache.poi.ss.formula.ParseNode[] getChildren()>();

        $r6 = $r5[i0];

        specialinvoke $r6.<org.apache.poi.ss.formula.ParseNode: void collectPtgs(org.apache.poi.ss.formula.ParseNode$TokenCollector)>(r3);

        i0 = i0 + 1;

        goto label6;

     label7:
        if z2 != 0 goto label8;

        $r4 = r0.<org.apache.poi.ss.formula.ParseNode: org.apache.poi.ss.formula.ptg.Ptg _token>;

        virtualinvoke r3.<org.apache.poi.ss.formula.ParseNode$TokenCollector: void add(org.apache.poi.ss.formula.ptg.Ptg)>($r4);

     label8:
        return;
    }

    private void collectIfPtgs(org.apache.poi.ss.formula.ParseNode$TokenCollector)
    {
        org.apache.poi.ss.formula.ptg.Ptg $r9;
        org.apache.poi.ss.formula.ParseNode$TokenCollector r2;
        org.apache.poi.ss.formula.ptg.AttrPtg $r6, $r8, $r12, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        org.apache.poi.ss.formula.ParseNode r0, $r3, $r5, $r11;
        org.apache.poi.ss.formula.ParseNode[] $r1, $r4, $r7, $r10;

        r0 := @this: org.apache.poi.ss.formula.ParseNode;

        r2 := @parameter0: org.apache.poi.ss.formula.ParseNode$TokenCollector;

        $r1 = virtualinvoke r0.<org.apache.poi.ss.formula.ParseNode: org.apache.poi.ss.formula.ParseNode[] getChildren()>();

        $r3 = $r1[0];

        specialinvoke $r3.<org.apache.poi.ss.formula.ParseNode: void collectPtgs(org.apache.poi.ss.formula.ParseNode$TokenCollector)>(r2);

        $i0 = virtualinvoke r2.<org.apache.poi.ss.formula.ParseNode$TokenCollector: int createPlaceholder()>();

        $r4 = virtualinvoke r0.<org.apache.poi.ss.formula.ParseNode: org.apache.poi.ss.formula.ParseNode[] getChildren()>();

        $r5 = $r4[1];

        specialinvoke $r5.<org.apache.poi.ss.formula.ParseNode: void collectPtgs(org.apache.poi.ss.formula.ParseNode$TokenCollector)>(r2);

        $i1 = virtualinvoke r2.<org.apache.poi.ss.formula.ParseNode$TokenCollector: int createPlaceholder()>();

        $i2 = $i0 + 1;

        $i3 = virtualinvoke r2.<org.apache.poi.ss.formula.ParseNode$TokenCollector: int sumTokenSizes(int,int)>($i2, $i1);

        $i4 = $i3 + 4;

        $r6 = staticinvoke <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.ss.formula.ptg.AttrPtg createIf(int)>($i4);

        $r7 = virtualinvoke r0.<org.apache.poi.ss.formula.ParseNode: org.apache.poi.ss.formula.ParseNode[] getChildren()>();

        $i5 = lengthof $r7;

        if $i5 <= 2 goto label1;

        $r10 = virtualinvoke r0.<org.apache.poi.ss.formula.ParseNode: org.apache.poi.ss.formula.ParseNode[] getChildren()>();

        $r11 = $r10[2];

        specialinvoke $r11.<org.apache.poi.ss.formula.ParseNode: void collectPtgs(org.apache.poi.ss.formula.ParseNode$TokenCollector)>(r2);

        $i6 = virtualinvoke r2.<org.apache.poi.ss.formula.ParseNode$TokenCollector: int createPlaceholder()>();

        $i7 = $i1 + 1;

        $i8 = virtualinvoke r2.<org.apache.poi.ss.formula.ParseNode$TokenCollector: int sumTokenSizes(int,int)>($i7, $i6);

        $i9 = $i8 + 4;

        $i10 = $i9 + 4;

        $i11 = $i10 - 1;

        $r12 = staticinvoke <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.ss.formula.ptg.AttrPtg createSkip(int)>($i11);

        $r13 = staticinvoke <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.ss.formula.ptg.AttrPtg createSkip(int)>(3);

        virtualinvoke r2.<org.apache.poi.ss.formula.ParseNode$TokenCollector: void setPlaceholder(int,org.apache.poi.ss.formula.ptg.Ptg)>($i0, $r6);

        virtualinvoke r2.<org.apache.poi.ss.formula.ParseNode$TokenCollector: void setPlaceholder(int,org.apache.poi.ss.formula.ptg.Ptg)>($i1, $r12);

        virtualinvoke r2.<org.apache.poi.ss.formula.ParseNode$TokenCollector: void setPlaceholder(int,org.apache.poi.ss.formula.ptg.Ptg)>($i6, $r13);

        goto label2;

     label1:
        $r8 = staticinvoke <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.ss.formula.ptg.AttrPtg createSkip(int)>(3);

        virtualinvoke r2.<org.apache.poi.ss.formula.ParseNode$TokenCollector: void setPlaceholder(int,org.apache.poi.ss.formula.ptg.Ptg)>($i0, $r6);

        virtualinvoke r2.<org.apache.poi.ss.formula.ParseNode$TokenCollector: void setPlaceholder(int,org.apache.poi.ss.formula.ptg.Ptg)>($i1, $r8);

     label2:
        $r9 = r0.<org.apache.poi.ss.formula.ParseNode: org.apache.poi.ss.formula.ptg.Ptg _token>;

        virtualinvoke r2.<org.apache.poi.ss.formula.ParseNode$TokenCollector: void add(org.apache.poi.ss.formula.ptg.Ptg)>($r9);

        return;
    }

    private static boolean isIf(org.apache.poi.ss.formula.ptg.Ptg)
    {
        org.apache.poi.ss.formula.ptg.Ptg r0;
        org.apache.poi.ss.formula.ptg.FuncVarPtg r1;
        java.lang.String $r2, $r3;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.poi.ss.formula.ptg.Ptg;

        $z0 = r0 instanceof org.apache.poi.ss.formula.ptg.FuncVarPtg;

        if $z0 == 0 goto label1;

        r1 = (org.apache.poi.ss.formula.ptg.FuncVarPtg) r0;

        $r2 = "IF";

        $r3 = virtualinvoke r1.<org.apache.poi.ss.formula.ptg.FuncVarPtg: java.lang.String getName()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public org.apache.poi.ss.formula.ptg.Ptg getToken()
    {
        org.apache.poi.ss.formula.ptg.Ptg $r1;
        org.apache.poi.ss.formula.ParseNode r0;

        r0 := @this: org.apache.poi.ss.formula.ParseNode;

        $r1 = r0.<org.apache.poi.ss.formula.ParseNode: org.apache.poi.ss.formula.ptg.Ptg _token>;

        return $r1;
    }

    public org.apache.poi.ss.formula.ParseNode[] getChildren()
    {
        org.apache.poi.ss.formula.ParseNode r0;
        org.apache.poi.ss.formula.ParseNode[] $r1;

        r0 := @this: org.apache.poi.ss.formula.ParseNode;

        $r1 = r0.<org.apache.poi.ss.formula.ParseNode: org.apache.poi.ss.formula.ParseNode[] _children>;

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.poi.ss.formula.ParseNode[] $r0;

        $r0 = newarray (org.apache.poi.ss.formula.ParseNode)[0];

        <org.apache.poi.ss.formula.ParseNode: org.apache.poi.ss.formula.ParseNode[] EMPTY_ARRAY> = $r0;

        return;
    }
}
