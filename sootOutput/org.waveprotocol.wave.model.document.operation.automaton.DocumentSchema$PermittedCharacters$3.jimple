final enum class org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema$PermittedCharacters$3 extends org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema$PermittedCharacters
{

    void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema$PermittedCharacters$3 r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema$PermittedCharacters$3;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema$PermittedCharacters: void <init>(java.lang.String,int,org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema$1)>(r1, i0, null);

        return;
    }

    public java.lang.String coerceString(java.lang.String)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema$PermittedCharacters$3$1 $r2;
        java.lang.StringBuilder $r0;
        java.lang.String r1, $r4;
        org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema$PermittedCharacters$3 r3;

        r3 := @this: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema$PermittedCharacters$3;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = new org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema$PermittedCharacters$3$1;

        specialinvoke $r2.<org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema$PermittedCharacters$3$1: void <init>(org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema$PermittedCharacters$3,java.lang.StringBuilder)>(r3, $r0);

        staticinvoke <org.waveprotocol.wave.model.util.Utf16Util: java.lang.Object traverseUtf16String(java.lang.String,org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler)>(r1, $r2);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
