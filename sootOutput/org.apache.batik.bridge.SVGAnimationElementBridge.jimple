public abstract class org.apache.batik.bridge.SVGAnimationElementBridge extends org.apache.batik.bridge.AbstractSVGBridge implements org.apache.batik.bridge.GenericBridge, org.apache.batik.bridge.BridgeUpdateHandler, org.apache.batik.dom.svg.SVGAnimationContext, org.apache.batik.dom.anim.AnimatableElement
{
    protected org.apache.batik.dom.svg.SVGOMElement element;
    protected org.apache.batik.bridge.BridgeContext ctx;
    protected org.apache.batik.bridge.SVGAnimationEngine eng;
    protected org.apache.batik.anim.timing.TimedElement timedElement;
    protected org.apache.batik.anim.AbstractAnimation animation;
    protected java.lang.String attributeNamespaceURI;
    protected java.lang.String attributeLocalName;
    protected short animationType;
    protected org.apache.batik.dom.svg.SVGOMElement targetElement;
    protected org.apache.batik.dom.anim.AnimationTarget animationTarget;

    public void <init>()
    {
        org.apache.batik.bridge.SVGAnimationElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.AbstractSVGBridge: void <init>()>();

        return;
    }

    public org.apache.batik.anim.timing.TimedElement getTimedElement()
    {
        org.apache.batik.bridge.SVGAnimationElementBridge r0;
        org.apache.batik.anim.timing.TimedElement $r1;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.timing.TimedElement timedElement>;

        return $r1;
    }

    public org.apache.batik.anim.values.AnimatableValue getUnderlyingValue()
    {
        org.apache.batik.dom.anim.AnimationTarget $r2, $r8;
        short $s0;
        org.apache.batik.bridge.SVGAnimationEngine $r4;
        java.lang.String $r1, $r6, $r7;
        org.apache.batik.bridge.SVGAnimationElementBridge r0;
        org.apache.batik.dom.svg.SVGOMElement $r3;
        org.apache.batik.anim.values.AnimatableValue $r5, $r9;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        $s0 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: short animationType>;

        if $s0 != 0 goto label1;

        $r8 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.anim.AnimationTarget animationTarget>;

        $r7 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: java.lang.String attributeNamespaceURI>;

        $r6 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: java.lang.String attributeLocalName>;

        $r9 = interfaceinvoke $r8.<org.apache.batik.dom.anim.AnimationTarget: org.apache.batik.anim.values.AnimatableValue getUnderlyingValue(java.lang.String,java.lang.String)>($r7, $r6);

        return $r9;

     label1:
        $r4 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.SVGAnimationEngine eng>;

        $r3 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r2 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.anim.AnimationTarget animationTarget>;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: java.lang.String attributeLocalName>;

        $r5 = virtualinvoke $r4.<org.apache.batik.bridge.SVGAnimationEngine: org.apache.batik.anim.values.AnimatableValue getUnderlyingCSSValue(org.w3c.dom.Element,org.apache.batik.dom.anim.AnimationTarget,java.lang.String)>($r3, $r2, $r1);

        return $r5;
    }

    public void handleElement(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element)
    {
        org.apache.batik.bridge.BridgeContext r0;
        org.apache.batik.bridge.Bridge $r4;
        org.w3c.dom.Element r1;
        org.apache.batik.dom.svg.SVGContext $r2;
        org.apache.batik.bridge.SVGAnimationEngine $r7, $r9, $r10;
        org.apache.batik.bridge.SVGAnimationElementBridge r3, r5;
        org.apache.batik.dom.svg.SVGOMElement $r6, $r8;
        boolean $z0, $z1;

        r3 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        r0 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r1 := @parameter1: org.w3c.dom.Element;

        $z0 = virtualinvoke r0.<org.apache.batik.bridge.BridgeContext: boolean isDynamic()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <org.apache.batik.bridge.BridgeContext: org.apache.batik.dom.svg.SVGContext getSVGContext(org.w3c.dom.Node)>(r1);

        if $r2 != null goto label2;

        $r4 = virtualinvoke r3.<org.apache.batik.bridge.AbstractSVGBridge: org.apache.batik.bridge.Bridge getInstance()>();

        r5 = (org.apache.batik.bridge.SVGAnimationElementBridge) $r4;

        $r6 = (org.apache.batik.dom.svg.SVGOMElement) r1;

        r5.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element> = $r6;

        r5.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.BridgeContext ctx> = r0;

        $r7 = virtualinvoke r0.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.SVGAnimationEngine getAnimationEngine()>();

        r5.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.SVGAnimationEngine eng> = $r7;

        $r8 = r5.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        virtualinvoke $r8.<org.apache.batik.dom.svg.SVGOMElement: void setSVGContext(org.apache.batik.dom.svg.SVGContext)>(r5);

        $r9 = r5.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.SVGAnimationEngine eng>;

        $z1 = virtualinvoke $r9.<org.apache.batik.bridge.SVGAnimationEngine: boolean hasStarted()>();

        if $z1 == 0 goto label1;

        virtualinvoke r5.<org.apache.batik.bridge.SVGAnimationElementBridge: void initializeAnimation()>();

        virtualinvoke r5.<org.apache.batik.bridge.SVGAnimationElementBridge: void initializeTimedElement()>();

        goto label2;

     label1:
        $r10 = r5.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.SVGAnimationEngine eng>;

        virtualinvoke $r10.<org.apache.batik.bridge.SVGAnimationEngine: void addInitialBridge(org.apache.batik.bridge.SVGAnimationElementBridge)>(r5);

     label2:
        return;
    }

    protected void initializeAnimation()
    {
        org.apache.batik.anim.AbstractAnimation $r21, $r22;
        org.w3c.dom.Document $r6, $r8;
        org.apache.batik.bridge.SVGAnimationElementBridge r0;
        org.apache.batik.bridge.BridgeException $r61, $r62, $r63, $r64;
        org.apache.batik.bridge.BridgeContext $r4, $r30, $r43, $r52, $r58;
        java.lang.Object[] $r28, $r41, $r50, $r56;
        short $s3, $s4, $s5, $s6;
        java.lang.String $r2, $r11, $r12, $r14, $r15, $r16, $r17, $r23, $r24, $r32, $r34, $r35, $r37, $r38, $r45, $r46;
        org.apache.batik.bridge.SVGAnimationEngine $r26;
        org.apache.batik.anim.timing.TimedElement $r19;
        org.apache.batik.dom.svg.SVGOMElement $r1, $r3, $r7, $r10, $r13, $r18, $r29, $r31, $r33, $r36, $r39, $r42, $r44, $r47, $r48, $r51, $r53, $r54, $r57, $r59;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.batik.dom.anim.AnimationTarget $r9, $r20, $r25;
        org.w3c.dom.Node r60;
        int $i0, $i1, $i2, i7, $i9;
        org.w3c.dom.Element $r5;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r2 = staticinvoke <org.apache.batik.dom.util.XLinkSupport: java.lang.String getXLinkHref(org.w3c.dom.Element)>($r1);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label01;

        $r59 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        r60 = virtualinvoke $r59.<org.apache.batik.dom.AbstractParentChildNode: org.w3c.dom.Node getParentNode()>();

        goto label02;

     label01:
        $r4 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r3 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r5 = virtualinvoke $r4.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.Element getReferencedElement(org.w3c.dom.Element,java.lang.String)>($r3, $r2);

        r60 = $r5;

        $r6 = interfaceinvoke $r5.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        $r7 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r8 = virtualinvoke $r7.<org.apache.batik.dom.AbstractNode: org.w3c.dom.Document getOwnerDocument()>();

        if $r6 == $r8 goto label02;

        $r61 = new org.apache.batik.bridge.BridgeException;

        $r58 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r57 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r56 = newarray (java.lang.Object)[1];

        $r56[0] = $r2;

        specialinvoke $r61.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>($r58, $r57, "uri.badTarget", $r56);

        throw $r61;

     label02:
        r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.anim.AnimationTarget animationTarget> = null;

        $z0 = r60 instanceof org.apache.batik.dom.svg.SVGOMElement;

        if $z0 == 0 goto label03;

        $r53 = (org.apache.batik.dom.svg.SVGOMElement) r60;

        r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement targetElement> = $r53;

        $r54 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement targetElement>;

        r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.anim.AnimationTarget animationTarget> = $r54;

     label03:
        $r9 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.anim.AnimationTarget animationTarget>;

        if $r9 != null goto label04;

        $r62 = new org.apache.batik.bridge.BridgeException;

        $r52 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r51 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r50 = newarray (java.lang.Object)[1];

        $r50[0] = $r2;

        specialinvoke $r62.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>($r52, $r51, "uri.badTarget", $r50);

        throw $r62;

     label04:
        $r10 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r11 = virtualinvoke $r10.<org.apache.batik.dom.AbstractElement: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "attributeName");

        $i1 = virtualinvoke $r11.<java.lang.String: int indexOf(int)>(58);

        $i9 = (int) -1;

        if $i1 != $i9 goto label06;

        $r48 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $z4 = virtualinvoke $r48.<org.apache.batik.dom.svg.SVGOMElement: boolean hasProperty(java.lang.String)>($r11);

        if $z4 == 0 goto label05;

        r0.<org.apache.batik.bridge.SVGAnimationElementBridge: short animationType> = 1;

        r0.<org.apache.batik.bridge.SVGAnimationElementBridge: java.lang.String attributeLocalName> = $r11;

        goto label07;

     label05:
        r0.<org.apache.batik.bridge.SVGAnimationElementBridge: short animationType> = 0;

        r0.<org.apache.batik.bridge.SVGAnimationElementBridge: java.lang.String attributeLocalName> = $r11;

        goto label07;

     label06:
        r0.<org.apache.batik.bridge.SVGAnimationElementBridge: short animationType> = 0;

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r13 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r14 = virtualinvoke $r13.<org.apache.batik.dom.AbstractNode: java.lang.String lookupNamespaceURI(java.lang.String)>($r12);

        r0.<org.apache.batik.bridge.SVGAnimationElementBridge: java.lang.String attributeNamespaceURI> = $r14;

        $i2 = $i1 + 1;

        $r15 = virtualinvoke $r11.<java.lang.String: java.lang.String substring(int)>($i2);

        r0.<org.apache.batik.bridge.SVGAnimationElementBridge: java.lang.String attributeLocalName> = $r15;

     label07:
        $s6 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: short animationType>;

        if $s6 != 1 goto label08;

        $r47 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement targetElement>;

        $r46 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: java.lang.String attributeLocalName>;

        $z3 = virtualinvoke $r47.<org.apache.batik.dom.svg.SVGOMElement: boolean isPropertyAnimatable(java.lang.String)>($r46);

        if $z3 == 0 goto label09;

     label08:
        $s3 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: short animationType>;

        if $s3 != 0 goto label10;

        $r39 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement targetElement>;

        $r38 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: java.lang.String attributeNamespaceURI>;

        $r37 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: java.lang.String attributeLocalName>;

        $z2 = virtualinvoke $r39.<org.apache.batik.dom.svg.SVGOMElement: boolean isAttributeAnimatable(java.lang.String,java.lang.String)>($r38, $r37);

        if $z2 != 0 goto label10;

     label09:
        $r63 = new org.apache.batik.bridge.BridgeException;

        $r43 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r44 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r41 = newarray (java.lang.Object)[2];

        $r42 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement targetElement>;

        $r45 = virtualinvoke $r42.<org.apache.batik.dom.svg.SVGOMElement: java.lang.String getNodeName()>();

        $r41[0] = $r45;

        $r41[1] = $r11;

        specialinvoke $r63.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>($r43, $r44, "attribute.not.animatable", $r41);

        throw $r63;

     label10:
        $s4 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: short animationType>;

        if $s4 != 1 goto label11;

        $r36 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement targetElement>;

        $r35 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: java.lang.String attributeLocalName>;

        i7 = virtualinvoke $r36.<org.apache.batik.dom.svg.SVGOMElement: int getPropertyType(java.lang.String)>($r35);

        goto label12;

     label11:
        $r18 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement targetElement>;

        $r17 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: java.lang.String attributeNamespaceURI>;

        $r16 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: java.lang.String attributeLocalName>;

        i7 = virtualinvoke $r18.<org.apache.batik.dom.svg.SVGOMElement: int getAttributeType(java.lang.String,java.lang.String)>($r17, $r16);

     label12:
        $z1 = virtualinvoke r0.<org.apache.batik.bridge.SVGAnimationElementBridge: boolean canAnimateType(int)>(i7);

        if $z1 != 0 goto label13;

        $r64 = new org.apache.batik.bridge.BridgeException;

        $r30 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r31 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r28 = newarray (java.lang.Object)[3];

        $r29 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement targetElement>;

        $r32 = virtualinvoke $r29.<org.apache.batik.dom.svg.SVGOMElement: java.lang.String getNodeName()>();

        $r28[0] = $r32;

        $r28[1] = $r11;

        $r33 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r34 = virtualinvoke $r33.<org.apache.batik.dom.svg.SVGOMElement: java.lang.String getNodeName()>();

        $r28[2] = $r34;

        specialinvoke $r64.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>($r30, $r31, "type.not.animatable", $r28);

        throw $r64;

     label13:
        $r19 = virtualinvoke r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.timing.TimedElement createTimedElement()>();

        r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.timing.TimedElement timedElement> = $r19;

        $r20 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.anim.AnimationTarget animationTarget>;

        $r21 = virtualinvoke r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.AbstractAnimation createAnimation(org.apache.batik.dom.anim.AnimationTarget)>($r20);

        r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.AbstractAnimation animation> = $r21;

        $r26 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.SVGAnimationEngine eng>;

        $r25 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.anim.AnimationTarget animationTarget>;

        $s5 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: short animationType>;

        $r24 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: java.lang.String attributeNamespaceURI>;

        $r23 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: java.lang.String attributeLocalName>;

        $r22 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.AbstractAnimation animation>;

        virtualinvoke $r26.<org.apache.batik.anim.AnimationEngine: void addAnimation(org.apache.batik.dom.anim.AnimationTarget,short,java.lang.String,java.lang.String,org.apache.batik.anim.AbstractAnimation)>($r25, $s5, $r24, $r23, $r22);

        return;
    }

    protected abstract boolean canAnimateType(int);

    protected boolean checkValueType(org.apache.batik.anim.values.AnimatableValue)
    {
        org.apache.batik.bridge.SVGAnimationElementBridge r0;
        org.apache.batik.anim.values.AnimatableValue r1;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        r1 := @parameter0: org.apache.batik.anim.values.AnimatableValue;

        return 1;
    }

    protected void initializeTimedElement()
    {
        org.apache.batik.bridge.SVGAnimationElementBridge r0;
        org.apache.batik.anim.timing.TimedElement $r1, $r2;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.timing.TimedElement timedElement>;

        virtualinvoke r0.<org.apache.batik.bridge.SVGAnimationElementBridge: void initializeTimedElement(org.apache.batik.anim.timing.TimedElement)>($r1);

        $r2 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.timing.TimedElement timedElement>;

        virtualinvoke $r2.<org.apache.batik.anim.timing.TimedElement: void initialize()>();

        return;
    }

    protected org.apache.batik.anim.timing.TimedElement createTimedElement()
    {
        org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement $r0;
        org.apache.batik.bridge.SVGAnimationElementBridge r1;

        r1 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        $r0 = new org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement;

        specialinvoke $r0.<org.apache.batik.bridge.SVGAnimationElementBridge$SVGTimedElement: void <init>(org.apache.batik.bridge.SVGAnimationElementBridge)>(r1);

        return $r0;
    }

    protected abstract org.apache.batik.anim.AbstractAnimation createAnimation(org.apache.batik.dom.anim.AnimationTarget);

    protected org.apache.batik.anim.values.AnimatableValue parseAnimatableValue(java.lang.String)
    {
        org.apache.batik.dom.anim.AnimationTarget $r7;
        java.lang.Object[] $r12;
        short $s0;
        java.lang.String r1, $r4, $r5, $r6;
        org.apache.batik.bridge.SVGAnimationElementBridge r0;
        org.apache.batik.dom.svg.SVGOMElement $r2, $r3, $r8, $r13;
        boolean $z0, $z1, $z2;
        org.apache.batik.bridge.BridgeException $r11;
        org.apache.batik.bridge.BridgeContext $r14;
        org.apache.batik.bridge.SVGAnimationEngine $r9;
        org.apache.batik.anim.values.AnimatableValue $r10;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $z0 = virtualinvoke $r2.<org.apache.batik.dom.AbstractElement: boolean hasAttributeNS(java.lang.String,java.lang.String)>(null, r1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r4 = virtualinvoke $r3.<org.apache.batik.dom.AbstractElement: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, r1);

        $r9 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.SVGAnimationEngine eng>;

        $r8 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r7 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.anim.AnimationTarget animationTarget>;

        $r6 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: java.lang.String attributeNamespaceURI>;

        $r5 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: java.lang.String attributeLocalName>;

        $s0 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: short animationType>;

        if $s0 != 1 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        $r10 = virtualinvoke $r9.<org.apache.batik.bridge.SVGAnimationEngine: org.apache.batik.anim.values.AnimatableValue parseAnimatableValue(org.w3c.dom.Element,org.apache.batik.dom.anim.AnimationTarget,java.lang.String,java.lang.String,boolean,java.lang.String)>($r8, $r7, $r6, $r5, $z2, $r4);

        $z1 = virtualinvoke r0.<org.apache.batik.bridge.SVGAnimationElementBridge: boolean checkValueType(org.apache.batik.anim.values.AnimatableValue)>($r10);

        if $z1 != 0 goto label4;

        $r11 = new org.apache.batik.bridge.BridgeException;

        $r14 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r13 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r12 = newarray (java.lang.Object)[2];

        $r12[0] = r1;

        $r12[1] = $r4;

        specialinvoke $r11.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>($r14, $r13, "attribute.malformed", $r12);

        throw $r11;

     label4:
        return $r10;
    }

    protected void initializeTimedElement(org.apache.batik.anim.timing.TimedElement)
    {
        java.lang.String $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19;
        org.apache.batik.bridge.SVGAnimationElementBridge r1;
        org.apache.batik.dom.svg.SVGOMElement $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18;
        org.apache.batik.anim.timing.TimedElement r0;

        r1 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        r0 := @parameter0: org.apache.batik.anim.timing.TimedElement;

        $r2 = r1.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractElement: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "begin");

        $r4 = r1.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r5 = virtualinvoke $r4.<org.apache.batik.dom.AbstractElement: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "dur");

        $r6 = r1.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r7 = virtualinvoke $r6.<org.apache.batik.dom.AbstractElement: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "end");

        $r8 = r1.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r9 = virtualinvoke $r8.<org.apache.batik.dom.AbstractElement: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "min");

        $r10 = r1.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r11 = virtualinvoke $r10.<org.apache.batik.dom.AbstractElement: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "max");

        $r12 = r1.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r13 = virtualinvoke $r12.<org.apache.batik.dom.AbstractElement: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "repeatCount");

        $r14 = r1.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r15 = virtualinvoke $r14.<org.apache.batik.dom.AbstractElement: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "repeatDur");

        $r16 = r1.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r17 = virtualinvoke $r16.<org.apache.batik.dom.AbstractElement: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "fill");

        $r18 = r1.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r19 = virtualinvoke $r18.<org.apache.batik.dom.AbstractElement: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "restart");

        virtualinvoke r0.<org.apache.batik.anim.timing.TimedElement: void parseAttributes(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19);

        return;
    }

    public void handleDOMAttrModifiedEvent(org.w3c.dom.events.MutationEvent)
    {
        org.apache.batik.bridge.SVGAnimationElementBridge r0;
        org.w3c.dom.events.MutationEvent r1;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        r1 := @parameter0: org.w3c.dom.events.MutationEvent;

        return;
    }

    public void handleDOMNodeInsertedEvent(org.w3c.dom.events.MutationEvent)
    {
        org.apache.batik.bridge.SVGAnimationElementBridge r0;
        org.w3c.dom.events.MutationEvent r1;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        r1 := @parameter0: org.w3c.dom.events.MutationEvent;

        return;
    }

    public void handleDOMNodeRemovedEvent(org.w3c.dom.events.MutationEvent)
    {
        org.apache.batik.bridge.SVGAnimationElementBridge r0;
        org.apache.batik.dom.svg.SVGOMElement $r1;
        org.w3c.dom.events.MutationEvent r2;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        r2 := @parameter0: org.w3c.dom.events.MutationEvent;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        virtualinvoke $r1.<org.apache.batik.dom.svg.SVGOMElement: void setSVGContext(org.apache.batik.dom.svg.SVGContext)>(null);

        virtualinvoke r0.<org.apache.batik.bridge.SVGAnimationElementBridge: void dispose()>();

        return;
    }

    public void handleDOMCharacterDataModified(org.w3c.dom.events.MutationEvent)
    {
        org.apache.batik.bridge.SVGAnimationElementBridge r0;
        org.w3c.dom.events.MutationEvent r1;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        r1 := @parameter0: org.w3c.dom.events.MutationEvent;

        return;
    }

    public void handleCSSEngineEvent(org.apache.batik.css.engine.CSSEngineEvent)
    {
        org.apache.batik.bridge.SVGAnimationElementBridge r0;
        org.apache.batik.css.engine.CSSEngineEvent r1;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        r1 := @parameter0: org.apache.batik.css.engine.CSSEngineEvent;

        return;
    }

    public void handleAnimatedAttributeChanged(org.apache.batik.dom.svg.AnimatedLiveAttributeValue)
    {
        org.apache.batik.dom.svg.AnimatedLiveAttributeValue r1;
        org.apache.batik.bridge.SVGAnimationElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        r1 := @parameter0: org.apache.batik.dom.svg.AnimatedLiveAttributeValue;

        return;
    }

    public void handleOtherAnimationChanged(java.lang.String)
    {
        java.lang.String r1;
        org.apache.batik.bridge.SVGAnimationElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void dispose()
    {
        org.apache.batik.dom.svg.SVGContext $r2;
        org.apache.batik.bridge.SVGAnimationEngine $r4;
        org.apache.batik.anim.timing.TimedElement $r5;
        org.apache.batik.anim.AbstractAnimation $r3;
        org.apache.batik.bridge.SVGAnimationElementBridge r0;
        org.apache.batik.dom.svg.SVGOMElement $r1;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r2 = virtualinvoke $r1.<org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.dom.svg.SVGContext getSVGContext()>();

        if $r2 != null goto label1;

        $r4 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.SVGAnimationEngine eng>;

        $r3 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.AbstractAnimation animation>;

        virtualinvoke $r4.<org.apache.batik.anim.AnimationEngine: void removeAnimation(org.apache.batik.anim.AbstractAnimation)>($r3);

        $r5 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.timing.TimedElement timedElement>;

        virtualinvoke $r5.<org.apache.batik.anim.timing.TimedElement: void deinitialize()>();

        r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.timing.TimedElement timedElement> = null;

        r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element> = null;

     label1:
        return;
    }

    public float getPixelUnitToMillimeter()
    {
        org.apache.batik.bridge.UserAgent $r2;
        float $f0;
        org.apache.batik.bridge.BridgeContext $r1;
        org.apache.batik.bridge.SVGAnimationElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r2 = virtualinvoke $r1.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UserAgent getUserAgent()>();

        $f0 = interfaceinvoke $r2.<org.apache.batik.bridge.UserAgent: float getPixelUnitToMillimeter()>();

        return $f0;
    }

    public float getPixelToMM()
    {
        float $f0;
        org.apache.batik.bridge.SVGAnimationElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        $f0 = virtualinvoke r0.<org.apache.batik.bridge.SVGAnimationElementBridge: float getPixelUnitToMillimeter()>();

        return $f0;
    }

    public java.awt.geom.Rectangle2D getBBox()
    {
        org.apache.batik.bridge.SVGAnimationElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        return null;
    }

    public java.awt.geom.AffineTransform getScreenTransform()
    {
        org.apache.batik.bridge.UserAgent $r2;
        org.apache.batik.bridge.BridgeContext $r1;
        java.awt.geom.AffineTransform $r3;
        org.apache.batik.bridge.SVGAnimationElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r2 = virtualinvoke $r1.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UserAgent getUserAgent()>();

        $r3 = interfaceinvoke $r2.<org.apache.batik.bridge.UserAgent: java.awt.geom.AffineTransform getTransform()>();

        return $r3;
    }

    public void setScreenTransform(java.awt.geom.AffineTransform)
    {
        org.apache.batik.bridge.UserAgent $r2;
        org.apache.batik.bridge.BridgeContext $r1;
        java.awt.geom.AffineTransform r3;
        org.apache.batik.bridge.SVGAnimationElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        r3 := @parameter0: java.awt.geom.AffineTransform;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r2 = virtualinvoke $r1.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UserAgent getUserAgent()>();

        interfaceinvoke $r2.<org.apache.batik.bridge.UserAgent: void setTransform(java.awt.geom.AffineTransform)>(r3);

        return;
    }

    public java.awt.geom.AffineTransform getCTM()
    {
        org.apache.batik.bridge.SVGAnimationElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        return null;
    }

    public java.awt.geom.AffineTransform getGlobalTransform()
    {
        org.apache.batik.bridge.SVGAnimationElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        return null;
    }

    public float getViewportWidth()
    {
        float $f0;
        org.apache.batik.bridge.BridgeContext $r2;
        org.apache.batik.bridge.SVGAnimationElementBridge r0;
        org.apache.batik.dom.svg.SVGOMElement $r1;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        $r2 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $f0 = virtualinvoke $r2.<org.apache.batik.bridge.BridgeContext: float getBlockWidth(org.w3c.dom.Element)>($r1);

        return $f0;
    }

    public float getViewportHeight()
    {
        float $f0;
        org.apache.batik.bridge.BridgeContext $r2;
        org.apache.batik.bridge.SVGAnimationElementBridge r0;
        org.apache.batik.dom.svg.SVGOMElement $r1;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        $r2 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $f0 = virtualinvoke $r2.<org.apache.batik.bridge.BridgeContext: float getBlockHeight(org.w3c.dom.Element)>($r1);

        return $f0;
    }

    public float getFontSize()
    {
        org.apache.batik.bridge.SVGAnimationElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        return 0.0F;
    }

    public float svgToUserSpace(float, int, int)
    {
        int i0, i1;
        float f0;
        org.apache.batik.bridge.SVGAnimationElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        f0 := @parameter0: float;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        return 0.0F;
    }

    public void addTargetListener(java.lang.String, org.apache.batik.dom.anim.AnimationTargetListener)
    {
        java.lang.String r1;
        org.apache.batik.bridge.SVGAnimationElementBridge r0;
        org.apache.batik.dom.anim.AnimationTargetListener r2;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.batik.dom.anim.AnimationTargetListener;

        return;
    }

    public void removeTargetListener(java.lang.String, org.apache.batik.dom.anim.AnimationTargetListener)
    {
        java.lang.String r1;
        org.apache.batik.bridge.SVGAnimationElementBridge r0;
        org.apache.batik.dom.anim.AnimationTargetListener r2;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.batik.dom.anim.AnimationTargetListener;

        return;
    }

    public org.w3c.dom.svg.SVGElement getTargetElement()
    {
        org.apache.batik.bridge.SVGAnimationElementBridge r0;
        org.apache.batik.dom.svg.SVGOMElement $r1;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement targetElement>;

        return $r1;
    }

    public float getStartTime()
    {
        float $f0;
        org.apache.batik.bridge.SVGAnimationElementBridge r0;
        org.apache.batik.anim.timing.TimedElement $r1;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.timing.TimedElement timedElement>;

        $f0 = virtualinvoke $r1.<org.apache.batik.anim.timing.TimedElement: float getCurrentBeginTime()>();

        return $f0;
    }

    public float getCurrentTime()
    {
        float $f0;
        org.apache.batik.bridge.SVGAnimationElementBridge r0;
        org.apache.batik.anim.timing.TimedElement $r1;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.timing.TimedElement timedElement>;

        $f0 = virtualinvoke $r1.<org.apache.batik.anim.timing.TimedElement: float getLastSampleTime()>();

        return $f0;
    }

    public float getSimpleDuration()
    {
        float $f0;
        org.apache.batik.bridge.SVGAnimationElementBridge r0;
        org.apache.batik.anim.timing.TimedElement $r1;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.timing.TimedElement timedElement>;

        $f0 = virtualinvoke $r1.<org.apache.batik.anim.timing.TimedElement: float getSimpleDur()>();

        return $f0;
    }

    public float getHyperlinkBeginTime()
    {
        float $f0;
        org.apache.batik.bridge.SVGAnimationElementBridge r0;
        org.apache.batik.anim.timing.TimedElement $r1;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.timing.TimedElement timedElement>;

        $f0 = virtualinvoke $r1.<org.apache.batik.anim.timing.TimedElement: float getHyperlinkBeginTime()>();

        return $f0;
    }

    public boolean beginElement() throws org.w3c.dom.DOMException
    {
        org.apache.batik.anim.timing.TimedElement $r1, $r2;
        org.apache.batik.bridge.SVGAnimationElementBridge r0;
        boolean $z0;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.timing.TimedElement timedElement>;

        virtualinvoke $r1.<org.apache.batik.anim.timing.TimedElement: void beginElement()>();

        $r2 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.timing.TimedElement timedElement>;

        $z0 = virtualinvoke $r2.<org.apache.batik.anim.timing.TimedElement: boolean canBegin()>();

        return $z0;
    }

    public boolean beginElementAt(float) throws org.w3c.dom.DOMException
    {
        float f0;
        org.apache.batik.bridge.SVGAnimationElementBridge r0;
        org.apache.batik.anim.timing.TimedElement $r1;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        f0 := @parameter0: float;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.timing.TimedElement timedElement>;

        virtualinvoke $r1.<org.apache.batik.anim.timing.TimedElement: void beginElement(float)>(f0);

        return 1;
    }

    public boolean endElement() throws org.w3c.dom.DOMException
    {
        org.apache.batik.anim.timing.TimedElement $r1, $r2;
        org.apache.batik.bridge.SVGAnimationElementBridge r0;
        boolean $z0;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.timing.TimedElement timedElement>;

        virtualinvoke $r1.<org.apache.batik.anim.timing.TimedElement: void endElement()>();

        $r2 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.timing.TimedElement timedElement>;

        $z0 = virtualinvoke $r2.<org.apache.batik.anim.timing.TimedElement: boolean canEnd()>();

        return $z0;
    }

    public boolean endElementAt(float) throws org.w3c.dom.DOMException
    {
        float f0;
        org.apache.batik.bridge.SVGAnimationElementBridge r0;
        org.apache.batik.anim.timing.TimedElement $r1;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        f0 := @parameter0: float;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.timing.TimedElement timedElement>;

        virtualinvoke $r1.<org.apache.batik.anim.timing.TimedElement: void endElement(float)>(f0);

        return 1;
    }

    protected boolean isConstantAnimation()
    {
        org.apache.batik.bridge.SVGAnimationElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGAnimationElementBridge;

        return 0;
    }
}
