class org.waveprotocol.wave.model.document.operation.Nindo$UpdateAttributes extends org.waveprotocol.wave.model.document.operation.Nindo$MutationComponent
{
    final java.util.Map attributesUpdate;

    void <init>(java.util.Map)
    {
        org.waveprotocol.wave.model.document.operation.Nindo$UpdateAttributes r0;
        java.util.Map r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.Nindo$UpdateAttributes;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.Nindo$MutationComponent: void <init>(org.waveprotocol.wave.model.document.operation.Nindo$1)>(null);

        r0.<org.waveprotocol.wave.model.document.operation.Nindo$UpdateAttributes: java.util.Map attributesUpdate> = r1;

        return;
    }

    void apply(org.waveprotocol.wave.model.document.operation.Nindo$NindoCursor)
    {
        org.waveprotocol.wave.model.document.operation.Nindo$NindoCursor r0;
        org.waveprotocol.wave.model.document.operation.Nindo$UpdateAttributes r1;
        java.util.Map $r2;

        r1 := @this: org.waveprotocol.wave.model.document.operation.Nindo$UpdateAttributes;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.Nindo$NindoCursor;

        $r2 = r1.<org.waveprotocol.wave.model.document.operation.Nindo$UpdateAttributes: java.util.Map attributesUpdate>;

        interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.Nindo$NindoCursor: void updateAttributes(java.util.Map)>($r2);

        return;
    }
}
