public class org.waveprotocol.wave.client.editor.impl.TransparencyUtil extends java.lang.Object
{

    public void <init>()
    {
        org.waveprotocol.wave.client.editor.impl.TransparencyUtil r0;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.TransparencyUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void clear(java.util.List)
    {
        java.util.Iterator $r1;
        java.util.List r0;
        com.google.gwt.dom.client.Element r3, $r4;
        java.lang.Object $r2;
        org.waveprotocol.wave.model.document.util.FilteredView$Skip $r5, $r6;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.google.gwt.dom.client.Element) $r2;

        $r4 = virtualinvoke r3.<com.google.gwt.dom.client.Element: com.google.gwt.dom.client.Element getParentElement()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <org.waveprotocol.wave.client.editor.impl.NodeManager: org.waveprotocol.wave.model.document.util.FilteredView$Skip getTransparency(com.google.gwt.dom.client.Element)>(r3);

        $r6 = <org.waveprotocol.wave.model.document.util.FilteredView$Skip: org.waveprotocol.wave.model.document.util.FilteredView$Skip DEEP>;

        if $r5 != $r6 goto label2;

        virtualinvoke r3.<com.google.gwt.dom.client.Element: void removeFromParent()>();

        goto label3;

     label2:
        staticinvoke <org.waveprotocol.wave.client.common.util.DomHelper: void unwrap(com.google.gwt.dom.client.Element)>(r3);

     label3:
        staticinvoke <org.waveprotocol.wave.client.editor.impl.NodeManager: void setTransparentBackref(com.google.gwt.dom.client.Element,org.waveprotocol.wave.client.editor.content.TransparentManager)>(r3, null);

        goto label1;

     label4:
        interfaceinvoke r0.<java.util.List: void clear()>();

        return;
    }
}
