public class org.bouncycastle.crypto.signers.ECGOST3410Signer extends java.lang.Object implements org.bouncycastle.crypto.DSA
{
    org.bouncycastle.crypto.params.ECKeyParameters key;
    java.security.SecureRandom random;

    public void <init>()
    {
        org.bouncycastle.crypto.signers.ECGOST3410Signer r0;

        r0 := @this: org.bouncycastle.crypto.signers.ECGOST3410Signer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters)
    {
        org.bouncycastle.crypto.params.ECPublicKeyParameters $r2;
        org.bouncycastle.crypto.params.ECPrivateKeyParameters $r4, $r8;
        java.security.SecureRandom $r3, $r6;
        org.bouncycastle.crypto.params.ParametersWithRandom r5;
        org.bouncycastle.crypto.signers.ECGOST3410Signer r0;
        boolean z0, $z1;
        org.bouncycastle.crypto.CipherParameters r1, $r7;

        r0 := @this: org.bouncycastle.crypto.signers.ECGOST3410Signer;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        if z0 == 0 goto label2;

        $z1 = r1 instanceof org.bouncycastle.crypto.params.ParametersWithRandom;

        if $z1 == 0 goto label1;

        r5 = (org.bouncycastle.crypto.params.ParametersWithRandom) r1;

        $r6 = virtualinvoke r5.<org.bouncycastle.crypto.params.ParametersWithRandom: java.security.SecureRandom getRandom()>();

        r0.<org.bouncycastle.crypto.signers.ECGOST3410Signer: java.security.SecureRandom random> = $r6;

        $r7 = virtualinvoke r5.<org.bouncycastle.crypto.params.ParametersWithRandom: org.bouncycastle.crypto.CipherParameters getParameters()>();

        $r8 = (org.bouncycastle.crypto.params.ECPrivateKeyParameters) $r7;

        r0.<org.bouncycastle.crypto.signers.ECGOST3410Signer: org.bouncycastle.crypto.params.ECKeyParameters key> = $r8;

        goto label3;

     label1:
        $r3 = new java.security.SecureRandom;

        specialinvoke $r3.<java.security.SecureRandom: void <init>()>();

        r0.<org.bouncycastle.crypto.signers.ECGOST3410Signer: java.security.SecureRandom random> = $r3;

        $r4 = (org.bouncycastle.crypto.params.ECPrivateKeyParameters) r1;

        r0.<org.bouncycastle.crypto.signers.ECGOST3410Signer: org.bouncycastle.crypto.params.ECKeyParameters key> = $r4;

        goto label3;

     label2:
        $r2 = (org.bouncycastle.crypto.params.ECPublicKeyParameters) r1;

        r0.<org.bouncycastle.crypto.signers.ECGOST3410Signer: org.bouncycastle.crypto.params.ECKeyParameters key> = $r2;

     label3:
        return;
    }

    public java.math.BigInteger[] generateSignature(byte[])
    {
        byte[] r0, r1;
        java.security.SecureRandom $r24;
        byte $b5;
        java.math.BigInteger $r2, $r6, $r12, $r13, $r14, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r25;
        org.bouncycastle.crypto.signers.ECGOST3410Signer r3;
        boolean $z0, $z1, $z2;
        org.bouncycastle.crypto.params.ECKeyParameters $r4, $r7, $r15;
        org.bouncycastle.math.ec.ECFieldElement $r11;
        org.bouncycastle.crypto.params.ECPrivateKeyParameters $r16;
        org.bouncycastle.math.ec.ECPoint $r9, $r10;
        org.bouncycastle.crypto.params.ECDomainParameters $r5, $r8;
        int $i0, $i1, $i2, $i3, $i4, i6, $i7;
        java.math.BigInteger[] r26;

        r3 := @this: org.bouncycastle.crypto.signers.ECGOST3410Signer;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        r1 = newarray (byte)[$i0];

        i6 = 0;

     label1:
        $i1 = lengthof r1;

        if i6 == $i1 goto label2;

        $i2 = lengthof r1;

        $i3 = $i2 - 1;

        $i4 = $i3 - i6;

        $b5 = r0[$i4];

        r1[i6] = $b5;

        i6 = i6 + 1;

        goto label1;

     label2:
        $r2 = new java.math.BigInteger;

        specialinvoke $r2.<java.math.BigInteger: void <init>(int,byte[])>(1, r1);

        $r4 = r3.<org.bouncycastle.crypto.signers.ECGOST3410Signer: org.bouncycastle.crypto.params.ECKeyParameters key>;

        $r5 = virtualinvoke $r4.<org.bouncycastle.crypto.params.ECKeyParameters: org.bouncycastle.crypto.params.ECDomainParameters getParameters()>();

        $r6 = virtualinvoke $r5.<org.bouncycastle.crypto.params.ECDomainParameters: java.math.BigInteger getN()>();

     label3:
        $r23 = new java.math.BigInteger;

        $i7 = virtualinvoke $r6.<java.math.BigInteger: int bitLength()>();

        $r24 = r3.<org.bouncycastle.crypto.signers.ECGOST3410Signer: java.security.SecureRandom random>;

        specialinvoke $r23.<java.math.BigInteger: void <init>(int,java.util.Random)>($i7, $r24);

        $r25 = <org.bouncycastle.math.ec.ECConstants: java.math.BigInteger ZERO>;

        $z2 = virtualinvoke $r23.<java.math.BigInteger: boolean equals(java.lang.Object)>($r25);

        if $z2 != 0 goto label3;

        $r7 = r3.<org.bouncycastle.crypto.signers.ECGOST3410Signer: org.bouncycastle.crypto.params.ECKeyParameters key>;

        $r8 = virtualinvoke $r7.<org.bouncycastle.crypto.params.ECKeyParameters: org.bouncycastle.crypto.params.ECDomainParameters getParameters()>();

        $r9 = virtualinvoke $r8.<org.bouncycastle.crypto.params.ECDomainParameters: org.bouncycastle.math.ec.ECPoint getG()>();

        $r10 = virtualinvoke $r9.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECPoint multiply(java.math.BigInteger)>($r23);

        $r11 = virtualinvoke $r10.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getX()>();

        $r12 = virtualinvoke $r11.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r13 = virtualinvoke $r12.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r6);

        $r14 = <org.bouncycastle.math.ec.ECConstants: java.math.BigInteger ZERO>;

        $z0 = virtualinvoke $r13.<java.math.BigInteger: boolean equals(java.lang.Object)>($r14);

        if $z0 != 0 goto label3;

        $r15 = r3.<org.bouncycastle.crypto.signers.ECGOST3410Signer: org.bouncycastle.crypto.params.ECKeyParameters key>;

        $r16 = (org.bouncycastle.crypto.params.ECPrivateKeyParameters) $r15;

        $r17 = virtualinvoke $r16.<org.bouncycastle.crypto.params.ECPrivateKeyParameters: java.math.BigInteger getD()>();

        $r18 = virtualinvoke $r23.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r2);

        $r19 = virtualinvoke $r17.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r13);

        $r20 = virtualinvoke $r18.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r19);

        $r21 = virtualinvoke $r20.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r6);

        $r22 = <org.bouncycastle.math.ec.ECConstants: java.math.BigInteger ZERO>;

        $z1 = virtualinvoke $r21.<java.math.BigInteger: boolean equals(java.lang.Object)>($r22);

        if $z1 != 0 goto label3;

        r26 = newarray (java.math.BigInteger)[2];

        r26[0] = $r13;

        r26[1] = $r21;

        return r26;
    }

    public boolean verifySignature(byte[], java.math.BigInteger, java.math.BigInteger)
    {
        byte[] r0, r1;
        byte $b9;
        java.math.BigInteger $r2, $r6, r7, $r8, r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r25, $r26;
        org.bouncycastle.crypto.signers.ECGOST3410Signer r3;
        boolean $z0;
        org.bouncycastle.crypto.params.ECKeyParameters $r4, $r17, $r20;
        org.bouncycastle.math.ec.ECFieldElement $r24;
        org.bouncycastle.crypto.params.ECPublicKeyParameters $r21;
        org.bouncycastle.math.ec.ECPoint $r19, $r22, $r23;
        org.bouncycastle.crypto.params.ECDomainParameters $r5, $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i10;

        r3 := @this: org.bouncycastle.crypto.signers.ECGOST3410Signer;

        r0 := @parameter0: byte[];

        r7 := @parameter1: java.math.BigInteger;

        r9 := @parameter2: java.math.BigInteger;

        $i0 = lengthof r0;

        r1 = newarray (byte)[$i0];

        i10 = 0;

     label1:
        $i1 = lengthof r1;

        if i10 == $i1 goto label2;

        $i6 = lengthof r1;

        $i7 = $i6 - 1;

        $i8 = $i7 - i10;

        $b9 = r0[$i8];

        r1[i10] = $b9;

        i10 = i10 + 1;

        goto label1;

     label2:
        $r2 = new java.math.BigInteger;

        specialinvoke $r2.<java.math.BigInteger: void <init>(int,byte[])>(1, r1);

        $r4 = r3.<org.bouncycastle.crypto.signers.ECGOST3410Signer: org.bouncycastle.crypto.params.ECKeyParameters key>;

        $r5 = virtualinvoke $r4.<org.bouncycastle.crypto.params.ECKeyParameters: org.bouncycastle.crypto.params.ECDomainParameters getParameters()>();

        $r6 = virtualinvoke $r5.<org.bouncycastle.crypto.params.ECDomainParameters: java.math.BigInteger getN()>();

        $r8 = <org.bouncycastle.math.ec.ECConstants: java.math.BigInteger ONE>;

        $i2 = virtualinvoke r7.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r8);

        if $i2 < 0 goto label3;

        $i3 = virtualinvoke r7.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r6);

        if $i3 < 0 goto label4;

     label3:
        return 0;

     label4:
        $r10 = <org.bouncycastle.math.ec.ECConstants: java.math.BigInteger ONE>;

        $i4 = virtualinvoke r9.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r10);

        if $i4 < 0 goto label5;

        $i5 = virtualinvoke r9.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r6);

        if $i5 < 0 goto label6;

     label5:
        return 0;

     label6:
        $r11 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger modInverse(java.math.BigInteger)>($r6);

        $r12 = virtualinvoke r9.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r11);

        $r13 = virtualinvoke $r12.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r6);

        $r14 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r7);

        $r15 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r11);

        $r16 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r6);

        $r17 = r3.<org.bouncycastle.crypto.signers.ECGOST3410Signer: org.bouncycastle.crypto.params.ECKeyParameters key>;

        $r18 = virtualinvoke $r17.<org.bouncycastle.crypto.params.ECKeyParameters: org.bouncycastle.crypto.params.ECDomainParameters getParameters()>();

        $r19 = virtualinvoke $r18.<org.bouncycastle.crypto.params.ECDomainParameters: org.bouncycastle.math.ec.ECPoint getG()>();

        $r20 = r3.<org.bouncycastle.crypto.signers.ECGOST3410Signer: org.bouncycastle.crypto.params.ECKeyParameters key>;

        $r21 = (org.bouncycastle.crypto.params.ECPublicKeyParameters) $r20;

        $r22 = virtualinvoke $r21.<org.bouncycastle.crypto.params.ECPublicKeyParameters: org.bouncycastle.math.ec.ECPoint getQ()>();

        $r23 = staticinvoke <org.bouncycastle.math.ec.ECAlgorithms: org.bouncycastle.math.ec.ECPoint sumOfTwoMultiplies(org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger)>($r19, $r13, $r22, $r16);

        $r24 = virtualinvoke $r23.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getX()>();

        $r25 = virtualinvoke $r24.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r26 = virtualinvoke $r25.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r6);

        $z0 = virtualinvoke $r26.<java.math.BigInteger: boolean equals(java.lang.Object)>(r7);

        return $z0;
    }
}
