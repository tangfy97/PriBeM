public class com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph extends com.hp.hpl.jena.sparql.engine.iterator.QueryIterRepeatApply
{
    protected com.hp.hpl.jena.sparql.algebra.op.OpGraph opGraph;

    public void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator, com.hp.hpl.jena.sparql.algebra.op.OpGraph, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpGraph r3;
        com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph r0;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r2;
        com.hp.hpl.jena.sparql.engine.QueryIterator r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryIterator;

        r3 := @parameter1: com.hp.hpl.jena.sparql.algebra.op.OpGraph;

        r2 := @parameter2: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterRepeatApply: void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r1, r2);

        r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph: com.hp.hpl.jena.sparql.algebra.op.OpGraph opGraph> = r3;

        return;
    }

    protected com.hp.hpl.jena.sparql.engine.QueryIterator nextStage(com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        java.util.Iterator $r6;
        com.hp.hpl.jena.sparql.algebra.op.OpGraph $r4, $r8;
        com.hp.hpl.jena.graph.Node $r5;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r2;
        com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner $r7;
        com.hp.hpl.jena.sparql.engine.binding.Binding r3;
        com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph r0;
        com.hp.hpl.jena.sparql.engine.ExecutionContext $r1, $r9;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph;

        r3 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph: com.hp.hpl.jena.sparql.engine.ExecutionContext getExecContext()>();

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.engine.ExecutionContext: com.hp.hpl.jena.sparql.core.DatasetGraph getDataset()>();

        $r4 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph: com.hp.hpl.jena.sparql.algebra.op.OpGraph opGraph>;

        $r5 = virtualinvoke $r4.<com.hp.hpl.jena.sparql.algebra.op.OpGraph: com.hp.hpl.jena.graph.Node getNode()>();

        $r6 = staticinvoke <com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph: java.util.Iterator makeSources(com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.graph.Node)>($r2, r3, $r5);

        $r7 = new com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner;

        $r8 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph: com.hp.hpl.jena.sparql.algebra.op.OpGraph opGraph>;

        $r9 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph: com.hp.hpl.jena.sparql.engine.ExecutionContext getExecContext()>();

        specialinvoke $r7.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph$QueryIterGraphInner: void <init>(com.hp.hpl.jena.sparql.engine.binding.Binding,java.util.Iterator,com.hp.hpl.jena.sparql.algebra.op.OpGraph,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r3, $r6, $r8, $r9);

        return $r7;
    }

    private static com.hp.hpl.jena.graph.Node resolve(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding r1;
        com.hp.hpl.jena.graph.Node r0, $r3;
        com.hp.hpl.jena.sparql.core.Var $r2;
        boolean $z0;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r0 := @parameter1: com.hp.hpl.jena.graph.Node;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: boolean isVariable()>();

        if $z0 != 0 goto label1;

        return r0;

     label1:
        $r2 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: com.hp.hpl.jena.sparql.core.Var alloc(com.hp.hpl.jena.graph.Node)>(r0);

        $r3 = interfaceinvoke r1.<com.hp.hpl.jena.sparql.engine.binding.Binding: com.hp.hpl.jena.graph.Node get(com.hp.hpl.jena.sparql.core.Var)>($r2);

        return $r3;
    }

    protected static java.util.Iterator makeSources(com.hp.hpl.jena.sparql.core.DatasetGraph, com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.graph.Node)
    {
        java.util.Iterator $r5, $r6;
        com.hp.hpl.jena.graph.Node r1, $r2;
        com.hp.hpl.jena.sparql.core.DatasetGraph r4;
        org.apache.jena.atlas.iterator.SingletonIterator $r3;
        com.hp.hpl.jena.sparql.engine.binding.Binding r0;
        boolean $z0;

        r4 := @parameter0: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r0 := @parameter1: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r1 := @parameter2: com.hp.hpl.jena.graph.Node;

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterGraph: com.hp.hpl.jena.graph.Node resolve(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.graph.Node)>(r0, r1);

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<com.hp.hpl.jena.graph.Node: boolean isURI()>();

        if $z0 != 0 goto label1;

        $r6 = staticinvoke <org.apache.jena.atlas.iterator.Iter: java.util.Iterator nullIterator()>();

        return $r6;

     label1:
        if $r2 != null goto label2;

        $r5 = interfaceinvoke r4.<com.hp.hpl.jena.sparql.core.DatasetGraph: java.util.Iterator listGraphNodes()>();

        return $r5;

     label2:
        $r3 = new org.apache.jena.atlas.iterator.SingletonIterator;

        specialinvoke $r3.<org.apache.jena.atlas.iterator.SingletonIterator: void <init>(java.lang.Object)>($r2);

        return $r3;
    }
}
