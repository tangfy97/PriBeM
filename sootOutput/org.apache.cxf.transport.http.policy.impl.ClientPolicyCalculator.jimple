public class org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator extends java.lang.Object implements org.apache.cxf.policy.PolicyCalculator
{

    public void <init>()
    {
        org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator r0;

        r0 := @this: org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean equals(org.apache.cxf.transports.http.configuration.HTTPClientPolicy, org.apache.cxf.transports.http.configuration.HTTPClientPolicy)
    {
        byte $b2, $b7;
        long $l0, $l1, $l5, $l6;
        org.apache.cxf.transports.http.configuration.ConnectionType $r13, $r15;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r8, $r10, $r11, $r12, $r14, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24;
        org.apache.cxf.transports.http.configuration.ProxyServerType $r7, $r9;
        int $i3, $i4;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0, r1;
        org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator r34;

        r34 := @this: org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator;

        r0 := @parameter0: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r1 := @parameter1: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        if r0 != r1 goto label01;

        return 1;

     label01:
        $z0 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isAllowChunking()>();

        $z1 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isAllowChunking()>();

        if $z0 != $z1 goto label02;

        $z13 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isAutoRedirect()>();

        $z14 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isAutoRedirect()>();

        if $z13 != $z14 goto label02;

        $r26 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getAccept()>();

        $r27 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getAccept()>();

        $z15 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r26, $r27);

        if $z15 == 0 goto label02;

        $r28 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getAcceptEncoding()>();

        $r29 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getAcceptEncoding()>();

        $z16 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r28, $r29);

        if $z16 == 0 goto label02;

        $r30 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getAcceptLanguage()>();

        $r31 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getAcceptLanguage()>();

        $z17 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r30, $r31);

        if $z17 == 0 goto label02;

        $r32 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getBrowserType()>();

        $r33 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getBrowserType()>();

        $z18 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r32, $r33);

        if $z18 == 0 goto label02;

        $z19 = 1;

        goto label03;

     label02:
        $z19 = 0;

     label03:
        $z20 = 1 & $z19;

        if $z20 != 0 goto label04;

        return 0;

     label04:
        $r2 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getCacheControl()>();

        if $r2 != null goto label05;

        $r25 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getCacheControl()>();

        if $r25 != null goto label07;

        goto label06;

     label05:
        $r3 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getCacheControl()>();

        $r4 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getCacheControl()>();

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z2 == 0 goto label07;

        $r13 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: org.apache.cxf.transports.http.configuration.ConnectionType getConnection()>();

        $r14 = virtualinvoke $r13.<org.apache.cxf.transports.http.configuration.ConnectionType: java.lang.String value()>();

        $r15 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: org.apache.cxf.transports.http.configuration.ConnectionType getConnection()>();

        $r16 = virtualinvoke $r15.<org.apache.cxf.transports.http.configuration.ConnectionType: java.lang.String value()>();

        $z8 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z8 == 0 goto label07;

     label06:
        $l5 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: long getConnectionTimeout()>();

        $l6 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: long getConnectionTimeout()>();

        $b7 = $l5 cmp $l6;

        if $b7 != 0 goto label07;

        $r17 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getContentType()>();

        $r18 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getContentType()>();

        $z9 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r17, $r18);

        if $z9 == 0 goto label07;

        $r19 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getCookie()>();

        $r20 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getCookie()>();

        $z10 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r19, $r20);

        if $z10 == 0 goto label07;

        $r21 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getDecoupledEndpoint()>();

        $r22 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getDecoupledEndpoint()>();

        $z11 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r21, $r22);

        if $z11 == 0 goto label07;

        $r23 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getHost()>();

        $r24 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getHost()>();

        $z12 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r23, $r24);

        if $z12 == 0 goto label07;

        $z21 = 1;

        goto label08;

     label07:
        $z21 = 0;

     label08:
        $z22 = $z20 & $z21;

        if $z22 != 0 goto label09;

        return 0;

     label09:
        $r5 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getProxyServer()>();

        $r6 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getProxyServer()>();

        $z3 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r5, $r6);

        if $z3 == 0 goto label12;

        $z4 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetProxyServerPort()>();

        if $z4 == 0 goto label10;

        $i3 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: int getProxyServerPort()>();

        $i4 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: int getProxyServerPort()>();

        if $i3 != $i4 goto label12;

        goto label11;

     label10:
        $z5 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetProxyServerPort()>();

        if $z5 != 0 goto label12;

     label11:
        $r7 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: org.apache.cxf.transports.http.configuration.ProxyServerType getProxyServerType()>();

        $r8 = virtualinvoke $r7.<org.apache.cxf.transports.http.configuration.ProxyServerType: java.lang.String value()>();

        $r9 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: org.apache.cxf.transports.http.configuration.ProxyServerType getProxyServerType()>();

        $r10 = virtualinvoke $r9.<org.apache.cxf.transports.http.configuration.ProxyServerType: java.lang.String value()>();

        $z6 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z6 == 0 goto label12;

        $l0 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: long getReceiveTimeout()>();

        $l1 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: long getReceiveTimeout()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label12;

        $r11 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getReferer()>();

        $r12 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getReferer()>();

        $z7 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r11, $r12);

        if $z7 == 0 goto label12;

        $z23 = 1;

        goto label13;

     label12:
        $z23 = 0;

     label13:
        $z24 = $z22 & $z23;

        return $z24;
    }

    public org.apache.cxf.transports.http.configuration.HTTPClientPolicy intersect(org.apache.cxf.transports.http.configuration.HTTPClientPolicy, org.apache.cxf.transports.http.configuration.HTTPClientPolicy)
    {
        long $l0, $l1, $l2, $l3;
        org.apache.cxf.transports.http.configuration.ConnectionType $r17, $r18;
        java.lang.String $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r15, $r16, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22;
        org.apache.cxf.transports.http.configuration.ProxyServerType $r13, $r14;
        int $i4, $i5;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r1, r2, $r3;
        org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator r0;

        r0 := @this: org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator;

        r1 := @parameter0: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r2 := @parameter1: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $z0 = virtualinvoke r0.<org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator: boolean compatible(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)>(r1, r2);

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r3 = new org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        specialinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void <init>()>();

        $r4 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getAccept()>();

        $r5 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getAccept()>();

        $r6 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: java.lang.String combine(java.lang.String,java.lang.String)>($r4, $r5);

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setAccept(java.lang.String)>($r6);

        $r7 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getAcceptEncoding()>();

        $r8 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getAcceptEncoding()>();

        $r9 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: java.lang.String combine(java.lang.String,java.lang.String)>($r7, $r8);

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setAcceptEncoding(java.lang.String)>($r9);

        $r10 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getAcceptLanguage()>();

        $r11 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getAcceptLanguage()>();

        $r12 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: java.lang.String combine(java.lang.String,java.lang.String)>($r10, $r11);

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setAcceptLanguage(java.lang.String)>($r12);

        $z1 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetAllowChunking()>();

        if $z1 == 0 goto label02;

        $z14 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isAllowChunking()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setAllowChunking(boolean)>($z14);

        goto label03;

     label02:
        $z2 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetAllowChunking()>();

        if $z2 == 0 goto label03;

        $z13 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isAllowChunking()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setAllowChunking(boolean)>($z13);

     label03:
        $z15 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetAutoRedirect()>();

        if $z15 == 0 goto label04;

        $z12 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isAutoRedirect()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setAutoRedirect(boolean)>($z12);

        goto label05;

     label04:
        $z3 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetAutoRedirect()>();

        if $z3 == 0 goto label05;

        $z11 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isAutoRedirect()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setAutoRedirect(boolean)>($z11);

     label05:
        $r21 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getBrowserType()>();

        $r22 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getBrowserType()>();

        $r23 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: java.lang.String combine(java.lang.String,java.lang.String)>($r21, $r22);

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setBrowserType(java.lang.String)>($r23);

        $z16 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetCacheControl()>();

        if $z16 == 0 goto label06;

        $r20 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getCacheControl()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setCacheControl(java.lang.String)>($r20);

        goto label07;

     label06:
        $z4 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetCacheControl()>();

        if $z4 == 0 goto label07;

        $r19 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getCacheControl()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setCacheControl(java.lang.String)>($r19);

     label07:
        $z17 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetConnection()>();

        if $z17 == 0 goto label08;

        $r18 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: org.apache.cxf.transports.http.configuration.ConnectionType getConnection()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setConnection(org.apache.cxf.transports.http.configuration.ConnectionType)>($r18);

        goto label09;

     label08:
        $z5 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetConnection()>();

        if $z5 == 0 goto label09;

        $r17 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: org.apache.cxf.transports.http.configuration.ConnectionType getConnection()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setConnection(org.apache.cxf.transports.http.configuration.ConnectionType)>($r17);

     label09:
        $z18 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetContentType()>();

        if $z18 == 0 goto label10;

        $r16 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getContentType()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setContentType(java.lang.String)>($r16);

        goto label11;

     label10:
        $z6 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetContentType()>();

        if $z6 == 0 goto label11;

        $r15 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getContentType()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setContentType(java.lang.String)>($r15);

     label11:
        $r24 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getCookie()>();

        $r25 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getCookie()>();

        $r26 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: java.lang.String combine(java.lang.String,java.lang.String)>($r24, $r25);

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setCookie(java.lang.String)>($r26);

        $r27 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getDecoupledEndpoint()>();

        $r28 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getDecoupledEndpoint()>();

        $r29 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: java.lang.String combine(java.lang.String,java.lang.String)>($r27, $r28);

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setDecoupledEndpoint(java.lang.String)>($r29);

        $r30 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getHost()>();

        $r31 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getHost()>();

        $r32 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: java.lang.String combine(java.lang.String,java.lang.String)>($r30, $r31);

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setHost(java.lang.String)>($r32);

        $r33 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getProxyServer()>();

        $r34 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getProxyServer()>();

        $r35 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: java.lang.String combine(java.lang.String,java.lang.String)>($r33, $r34);

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setProxyServer(java.lang.String)>($r35);

        $z19 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetProxyServerPort()>();

        if $z19 == 0 goto label12;

        $i5 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: int getProxyServerPort()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setProxyServerPort(int)>($i5);

        goto label13;

     label12:
        $z7 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetProxyServerPort()>();

        if $z7 == 0 goto label13;

        $i4 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: int getProxyServerPort()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setProxyServerPort(int)>($i4);

     label13:
        $z20 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetProxyServerType()>();

        if $z20 == 0 goto label14;

        $r14 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: org.apache.cxf.transports.http.configuration.ProxyServerType getProxyServerType()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setProxyServerType(org.apache.cxf.transports.http.configuration.ProxyServerType)>($r14);

        goto label15;

     label14:
        $z8 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetProxyServerType()>();

        if $z8 == 0 goto label15;

        $r13 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: org.apache.cxf.transports.http.configuration.ProxyServerType getProxyServerType()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setProxyServerType(org.apache.cxf.transports.http.configuration.ProxyServerType)>($r13);

     label15:
        $r36 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getReferer()>();

        $r37 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getReferer()>();

        $r38 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: java.lang.String combine(java.lang.String,java.lang.String)>($r36, $r37);

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setReferer(java.lang.String)>($r38);

        $z21 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetConnectionTimeout()>();

        if $z21 == 0 goto label16;

        $l3 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: long getConnectionTimeout()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setConnectionTimeout(long)>($l3);

        goto label17;

     label16:
        $z9 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetConnectionTimeout()>();

        if $z9 == 0 goto label17;

        $l2 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: long getConnectionTimeout()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setConnectionTimeout(long)>($l2);

     label17:
        $z22 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetReceiveTimeout()>();

        if $z22 == 0 goto label18;

        $l1 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: long getReceiveTimeout()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setReceiveTimeout(long)>($l1);

        goto label19;

     label18:
        $z10 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetReceiveTimeout()>();

        if $z10 == 0 goto label19;

        $l0 = virtualinvoke r2.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: long getReceiveTimeout()>();

        virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setReceiveTimeout(long)>($l0);

     label19:
        return $r3;
    }

    public boolean compatible(org.apache.cxf.transports.http.configuration.HTTPClientPolicy, org.apache.cxf.transports.http.configuration.HTTPClientPolicy)
    {
        org.apache.cxf.transports.http.configuration.ConnectionType $r16, $r18;
        java.lang.String $r2, $r3, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40;
        org.apache.cxf.transports.http.configuration.ProxyServerType $r4, $r5;
        int $i0, $i1;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0, r1;
        org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator r30;

        r30 := @this: org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator;

        r0 := @parameter0: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r1 := @parameter1: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        if r0 == r1 goto label01;

        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label02;

     label01:
        return 1;

     label02:
        z33 = 1;

        if 1 == 0 goto label03;

        $r28 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getAccept()>();

        $r29 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getAccept()>();

        $z32 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean compatible(java.lang.String,java.lang.String)>($r28, $r29);

        z33 = 1 & $z32;

     label03:
        if z33 == 0 goto label04;

        $r26 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getAcceptEncoding()>();

        $r27 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getAcceptEncoding()>();

        $z31 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean compatible(java.lang.String,java.lang.String)>($r26, $r27);

        z33 = z33 & $z31;

     label04:
        if z33 == 0 goto label05;

        $r24 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getAcceptLanguage()>();

        $r25 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getAcceptLanguage()>();

        $z30 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean compatible(java.lang.String,java.lang.String)>($r24, $r25);

        z33 = z33 & $z30;

     label05:
        if z33 == 0 goto label06;

        $r22 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getBrowserType()>();

        $r23 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getBrowserType()>();

        $z29 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean compatible(java.lang.String,java.lang.String)>($r22, $r23);

        z33 = z33 & $z29;

     label06:
        if z33 == 0 goto label10;

        $z28 = z33;

        $z25 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetCacheControl()>();

        if $z25 == 0 goto label07;

        $z26 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetCacheControl()>();

        if $z26 == 0 goto label07;

        $r20 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getCacheControl()>();

        $r21 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getCacheControl()>();

        $z27 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        if $z27 == 0 goto label08;

     label07:
        $z34 = 1;

        goto label09;

     label08:
        $z34 = 0;

     label09:
        z33 = $z28 & $z34;

     label10:
        if z33 == 0 goto label14;

        $z22 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetConnection()>();

        if $z22 == 0 goto label11;

        $z23 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetConnection()>();

        if $z23 == 0 goto label11;

        $r16 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: org.apache.cxf.transports.http.configuration.ConnectionType getConnection()>();

        $r17 = virtualinvoke $r16.<org.apache.cxf.transports.http.configuration.ConnectionType: java.lang.String value()>();

        $r18 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: org.apache.cxf.transports.http.configuration.ConnectionType getConnection()>();

        $r19 = virtualinvoke $r18.<org.apache.cxf.transports.http.configuration.ConnectionType: java.lang.String value()>();

        $z24 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z24 == 0 goto label12;

     label11:
        $z35 = 1;

        goto label13;

     label12:
        $z35 = 0;

     label13:
        z33 = $z35;

     label14:
        if z33 == 0 goto label18;

        $z19 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetContentType()>();

        if $z19 == 0 goto label15;

        $z20 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetContentType()>();

        if $z20 == 0 goto label15;

        $r14 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getContentType()>();

        $r15 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getContentType()>();

        $z21 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z21 == 0 goto label16;

     label15:
        $z36 = 1;

        goto label17;

     label16:
        $z36 = 0;

     label17:
        z33 = $z36;

     label18:
        if z33 == 0 goto label19;

        $r12 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getCookie()>();

        $r13 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getCookie()>();

        $z18 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean compatible(java.lang.String,java.lang.String)>($r12, $r13);

        z33 = z33 & $z18;

     label19:
        if z33 == 0 goto label20;

        $r10 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getDecoupledEndpoint()>();

        $r11 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getDecoupledEndpoint()>();

        $z17 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean compatible(java.lang.String,java.lang.String)>($r10, $r11);

        z33 = z33 & $z17;

     label20:
        if z33 == 0 goto label21;

        $r8 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getHost()>();

        $r9 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getHost()>();

        $z16 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean compatible(java.lang.String,java.lang.String)>($r8, $r9);

        z33 = z33 & $z16;

     label21:
        if z33 == 0 goto label22;

        $r6 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getProxyServer()>();

        $r7 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getProxyServer()>();

        $z15 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean compatible(java.lang.String,java.lang.String)>($r6, $r7);

        z33 = z33 & $z15;

     label22:
        if z33 == 0 goto label26;

        $z14 = z33;

        $z12 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetProxyServerPort()>();

        if $z12 == 0 goto label23;

        $z13 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetProxyServerPort()>();

        if $z13 == 0 goto label23;

        $i0 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: int getProxyServerPort()>();

        $i1 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: int getProxyServerPort()>();

        if $i0 != $i1 goto label24;

     label23:
        $z37 = 1;

        goto label25;

     label24:
        $z37 = 0;

     label25:
        z33 = $z14 & $z37;

     label26:
        if z33 == 0 goto label30;

        $z11 = z33;

        $z8 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetProxyServerType()>();

        if $z8 == 0 goto label27;

        $z9 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetProxyServerType()>();

        if $z9 == 0 goto label27;

        $r4 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: org.apache.cxf.transports.http.configuration.ProxyServerType getProxyServerType()>();

        $r5 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: org.apache.cxf.transports.http.configuration.ProxyServerType getProxyServerType()>();

        $z10 = virtualinvoke $r4.<org.apache.cxf.transports.http.configuration.ProxyServerType: boolean equals(java.lang.Object)>($r5);

        if $z10 == 0 goto label28;

     label27:
        $z38 = 1;

        goto label29;

     label28:
        $z38 = 0;

     label29:
        z33 = $z11 & $z38;

     label30:
        if z33 == 0 goto label31;

        $r2 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getReferer()>();

        $r3 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getReferer()>();

        $z7 = staticinvoke <org.apache.cxf.transport.http.policy.impl.StringUtils: boolean compatible(java.lang.String,java.lang.String)>($r2, $r3);

        z33 = z33 & $z7;

     label31:
        if z33 == 0 goto label34;

        $z6 = z33;

        $z4 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isAllowChunking()>();

        $z5 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isAllowChunking()>();

        if $z4 != $z5 goto label32;

        $z39 = 1;

        goto label33;

     label32:
        $z39 = 0;

     label33:
        z33 = $z6 & $z39;

     label34:
        if z33 == 0 goto label37;

        $z3 = z33;

        $z1 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isAutoRedirect()>();

        $z2 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isAutoRedirect()>();

        if $z1 != $z2 goto label35;

        $z40 = 1;

        goto label36;

     label35:
        $z40 = 0;

     label36:
        z33 = $z3 & $z40;

     label37:
        return z33;
    }

    public boolean isAsserted(org.apache.cxf.message.Message, org.apache.cxf.transports.http.configuration.HTTPClientPolicy, org.apache.cxf.transports.http.configuration.HTTPClientPolicy)
    {
        org.apache.cxf.message.Message r0;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r2, r3;
        org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator r1;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r2 := @parameter1: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r3 := @parameter2: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $z0 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isOutbound(org.apache.cxf.message.Message)>(r0);

        $z1 = virtualinvoke r1.<org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator: boolean compatible(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)>(r2, r3);

        if $z0 == 0 goto label1;

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public java.lang.Class getDataClass()
    {
        org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator r0;

        r0 := @this: org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator;

        return class "Lorg/apache/cxf/transports/http/configuration/HTTPClientPolicy;";
    }

    public javax.xml.namespace.QName getDataClassName()
    {
        javax.xml.bind.JAXBElement $r1;
        org.apache.cxf.transports.http.configuration.ObjectFactory $r0;
        javax.xml.namespace.QName $r2;
        org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator r3;

        r3 := @this: org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator;

        $r0 = new org.apache.cxf.transports.http.configuration.ObjectFactory;

        specialinvoke $r0.<org.apache.cxf.transports.http.configuration.ObjectFactory: void <init>()>();

        $r1 = virtualinvoke $r0.<org.apache.cxf.transports.http.configuration.ObjectFactory: javax.xml.bind.JAXBElement createClient(org.apache.cxf.transports.http.configuration.HTTPClientPolicy)>(null);

        $r2 = virtualinvoke $r1.<javax.xml.bind.JAXBElement: javax.xml.namespace.QName getName()>();

        return $r2;
    }

    public static java.lang.String toString(org.apache.cxf.transports.http.configuration.HTTPClientPolicy)
    {
        java.lang.StringBuilder $r0;
        long $l0;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r1;
        java.lang.String $r2, $r3;

        r1 := @parameter0: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[DecoupledEndpoint=\"");

        $r2 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getDecoupledEndpoint()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", ReceiveTimeout=");

        $l0 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: long getReceiveTimeout()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("])");

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public volatile boolean isAsserted(org.apache.cxf.message.Message, java.lang.Object, java.lang.Object)
    {
        org.apache.cxf.message.Message r1;
        java.lang.Object r2, r3;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy $r4, $r5;
        org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator;

        r1 := @parameter0: org.apache.cxf.message.Message;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r5 = (org.apache.cxf.transports.http.configuration.HTTPClientPolicy) r2;

        $r4 = (org.apache.cxf.transports.http.configuration.HTTPClientPolicy) r3;

        $z0 = virtualinvoke r0.<org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator: boolean isAsserted(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)>(r1, $r5, $r4);

        return $z0;
    }

    public volatile java.lang.Object intersect(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r1, r2;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy $r3, $r4, $r5;
        org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator r0;

        r0 := @this: org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.apache.cxf.transports.http.configuration.HTTPClientPolicy) r1;

        $r3 = (org.apache.cxf.transports.http.configuration.HTTPClientPolicy) r2;

        $r5 = virtualinvoke r0.<org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator: org.apache.cxf.transports.http.configuration.HTTPClientPolicy intersect(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)>($r4, $r3);

        return $r5;
    }
}
