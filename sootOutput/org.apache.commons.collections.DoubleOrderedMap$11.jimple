class org.apache.commons.collections.DoubleOrderedMap$11 extends java.util.AbstractSet
{
    private final org.apache.commons.collections.DoubleOrderedMap this$0;

    void <init>(org.apache.commons.collections.DoubleOrderedMap)
    {
        org.apache.commons.collections.DoubleOrderedMap$11 r0;
        org.apache.commons.collections.DoubleOrderedMap r1;

        r0 := @this: org.apache.commons.collections.DoubleOrderedMap$11;

        r1 := @parameter0: org.apache.commons.collections.DoubleOrderedMap;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        r0.<org.apache.commons.collections.DoubleOrderedMap$11: org.apache.commons.collections.DoubleOrderedMap this$0> = r1;

        return;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.collections.DoubleOrderedMap$12 $r0;
        org.apache.commons.collections.DoubleOrderedMap$11 r1;

        r1 := @this: org.apache.commons.collections.DoubleOrderedMap$11;

        $r0 = new org.apache.commons.collections.DoubleOrderedMap$12;

        specialinvoke $r0.<org.apache.commons.collections.DoubleOrderedMap$12: void <init>(org.apache.commons.collections.DoubleOrderedMap$11,int)>(r1, 0);

        return $r0;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.Map$Entry r1;
        org.apache.commons.collections.DoubleOrderedMap$Node $r7;
        org.apache.commons.collections.DoubleOrderedMap$11 r3;
        java.lang.Object r0, $r2, $r5;
        java.lang.Comparable $r6, $r8;
        boolean $z0, $z1, $z2;
        org.apache.commons.collections.DoubleOrderedMap $r4;

        r3 := @this: org.apache.commons.collections.DoubleOrderedMap$11;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.util.Map$Entry;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (java.util.Map$Entry) r0;

        $r2 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r4 = r3.<org.apache.commons.collections.DoubleOrderedMap$11: org.apache.commons.collections.DoubleOrderedMap this$0>;

        $r5 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.Comparable) $r5;

        $r7 = staticinvoke <org.apache.commons.collections.DoubleOrderedMap: org.apache.commons.collections.DoubleOrderedMap$Node access$100(org.apache.commons.collections.DoubleOrderedMap,java.lang.Comparable,int)>($r4, $r6, 0);

        if $r7 == null goto label2;

        $r8 = staticinvoke <org.apache.commons.collections.DoubleOrderedMap$Node: java.lang.Comparable access$200(org.apache.commons.collections.DoubleOrderedMap$Node,int)>($r7, 1);

        $z1 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.Map$Entry r1;
        org.apache.commons.collections.DoubleOrderedMap$Node $r7;
        org.apache.commons.collections.DoubleOrderedMap$11 r3;
        java.lang.Object r0, $r2, $r5;
        java.lang.Comparable $r6, $r8;
        boolean $z0, $z1;
        org.apache.commons.collections.DoubleOrderedMap $r4, $r9;

        r3 := @this: org.apache.commons.collections.DoubleOrderedMap$11;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.util.Map$Entry;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (java.util.Map$Entry) r0;

        $r2 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r4 = r3.<org.apache.commons.collections.DoubleOrderedMap$11: org.apache.commons.collections.DoubleOrderedMap this$0>;

        $r5 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.Comparable) $r5;

        $r7 = staticinvoke <org.apache.commons.collections.DoubleOrderedMap: org.apache.commons.collections.DoubleOrderedMap$Node access$100(org.apache.commons.collections.DoubleOrderedMap,java.lang.Comparable,int)>($r4, $r6, 0);

        if $r7 == null goto label2;

        $r8 = staticinvoke <org.apache.commons.collections.DoubleOrderedMap$Node: java.lang.Comparable access$200(org.apache.commons.collections.DoubleOrderedMap$Node,int)>($r7, 1);

        $z1 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label2;

        $r9 = r3.<org.apache.commons.collections.DoubleOrderedMap$11: org.apache.commons.collections.DoubleOrderedMap this$0>;

        staticinvoke <org.apache.commons.collections.DoubleOrderedMap: void access$300(org.apache.commons.collections.DoubleOrderedMap,org.apache.commons.collections.DoubleOrderedMap$Node)>($r9, $r7);

        return 1;

     label2:
        return 0;
    }

    public int size()
    {
        int $i0;
        org.apache.commons.collections.DoubleOrderedMap$11 r0;
        org.apache.commons.collections.DoubleOrderedMap $r1;

        r0 := @this: org.apache.commons.collections.DoubleOrderedMap$11;

        $r1 = r0.<org.apache.commons.collections.DoubleOrderedMap$11: org.apache.commons.collections.DoubleOrderedMap this$0>;

        $i0 = virtualinvoke $r1.<org.apache.commons.collections.DoubleOrderedMap: int size()>();

        return $i0;
    }

    public void clear()
    {
        org.apache.commons.collections.DoubleOrderedMap$11 r0;
        org.apache.commons.collections.DoubleOrderedMap $r1;

        r0 := @this: org.apache.commons.collections.DoubleOrderedMap$11;

        $r1 = r0.<org.apache.commons.collections.DoubleOrderedMap$11: org.apache.commons.collections.DoubleOrderedMap this$0>;

        virtualinvoke $r1.<org.apache.commons.collections.DoubleOrderedMap: void clear()>();

        return;
    }

    static org.apache.commons.collections.DoubleOrderedMap access$2100(org.apache.commons.collections.DoubleOrderedMap$11)
    {
        org.apache.commons.collections.DoubleOrderedMap$11 r0;
        org.apache.commons.collections.DoubleOrderedMap $r1;

        r0 := @parameter0: org.apache.commons.collections.DoubleOrderedMap$11;

        $r1 = r0.<org.apache.commons.collections.DoubleOrderedMap$11: org.apache.commons.collections.DoubleOrderedMap this$0>;

        return $r1;
    }
}
