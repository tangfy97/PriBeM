class com.hp.hpl.jena.tdb.solver.OpExecutorTDB$OpExecutorPlainTDB extends com.hp.hpl.jena.sparql.engine.main.OpExecutor
{
    org.apache.jena.atlas.iterator.Filter filter;

    public void <init>(com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.tdb.solver.OpExecutorTDB$OpExecutorPlainTDB r0;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r1;
        org.apache.jena.atlas.iterator.Filter $r3;
        com.hp.hpl.jena.sparql.util.Context $r2;

        r0 := @this: com.hp.hpl.jena.tdb.solver.OpExecutorTDB$OpExecutorPlainTDB;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: void <init>(com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r1);

        r0.<com.hp.hpl.jena.tdb.solver.OpExecutorTDB$OpExecutorPlainTDB: org.apache.jena.atlas.iterator.Filter filter> = null;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.engine.ExecutionContext: com.hp.hpl.jena.sparql.util.Context getContext()>();

        $r3 = staticinvoke <com.hp.hpl.jena.tdb.solver.QC2: org.apache.jena.atlas.iterator.Filter getFilter(com.hp.hpl.jena.sparql.util.Context)>($r2);

        r0.<com.hp.hpl.jena.tdb.solver.OpExecutorTDB$OpExecutorPlainTDB: org.apache.jena.atlas.iterator.Filter filter> = $r3;

        return;
    }

    public com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpBGP, com.hp.hpl.jena.sparql.engine.QueryIterator)
    {
        com.hp.hpl.jena.tdb.store.DatasetGraphTDB $r13;
        com.hp.hpl.jena.graph.Node $r10, $r12;
        com.hp.hpl.jena.sparql.engine.ExecutionContext $r1, $r7, $r11, $r14;
        com.hp.hpl.jena.graph.Graph $r2;
        com.hp.hpl.jena.tdb.store.GraphTDB r9;
        boolean $z0;
        com.hp.hpl.jena.tdb.solver.OpExecutorTDB$OpExecutorPlainTDB r0;
        com.hp.hpl.jena.sparql.core.BasicPattern $r6;
        org.apache.jena.atlas.iterator.Filter $r15;
        com.hp.hpl.jena.sparql.util.Context $r8;
        com.hp.hpl.jena.sparql.algebra.op.OpBGP r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator r4, $r5, $r16;

        r0 := @this: com.hp.hpl.jena.tdb.solver.OpExecutorTDB$OpExecutorPlainTDB;

        r3 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpBGP;

        r4 := @parameter1: com.hp.hpl.jena.sparql.engine.QueryIterator;

        $r1 = r0.<com.hp.hpl.jena.tdb.solver.OpExecutorTDB$OpExecutorPlainTDB: com.hp.hpl.jena.sparql.engine.ExecutionContext execCxt>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.engine.ExecutionContext: com.hp.hpl.jena.graph.Graph getActiveGraph()>();

        $z0 = $r2 instanceof com.hp.hpl.jena.tdb.store.GraphTDB;

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r3.<com.hp.hpl.jena.sparql.algebra.op.OpBGP: com.hp.hpl.jena.sparql.core.BasicPattern getPattern()>();

        $r7 = r0.<com.hp.hpl.jena.tdb.solver.OpExecutorTDB$OpExecutorPlainTDB: com.hp.hpl.jena.sparql.engine.ExecutionContext execCxt>;

        $r8 = virtualinvoke $r7.<com.hp.hpl.jena.sparql.engine.ExecutionContext: com.hp.hpl.jena.sparql.util.Context getContext()>();

        staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: void explain(java.lang.String,com.hp.hpl.jena.sparql.core.BasicPattern,com.hp.hpl.jena.sparql.util.Context)>("Execute", $r6, $r8);

        r9 = (com.hp.hpl.jena.tdb.store.GraphTDB) $r2;

        $r10 = virtualinvoke r9.<com.hp.hpl.jena.tdb.store.GraphTDB: com.hp.hpl.jena.graph.Node getGraphName()>();

        $r11 = r0.<com.hp.hpl.jena.tdb.solver.OpExecutorTDB$OpExecutorPlainTDB: com.hp.hpl.jena.sparql.engine.ExecutionContext execCxt>;

        $r12 = staticinvoke <com.hp.hpl.jena.tdb.solver.OpExecutorTDB: com.hp.hpl.jena.graph.Node decideGraphNode(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.engine.ExecutionContext)>($r10, $r11);

        $r13 = virtualinvoke r9.<com.hp.hpl.jena.tdb.store.GraphTDB: com.hp.hpl.jena.tdb.store.DatasetGraphTDB getDSG()>();

        $r15 = r0.<com.hp.hpl.jena.tdb.solver.OpExecutorTDB$OpExecutorPlainTDB: org.apache.jena.atlas.iterator.Filter filter>;

        $r14 = r0.<com.hp.hpl.jena.tdb.solver.OpExecutorTDB$OpExecutorPlainTDB: com.hp.hpl.jena.sparql.engine.ExecutionContext execCxt>;

        $r16 = staticinvoke <com.hp.hpl.jena.tdb.solver.SolverLib: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.tdb.store.DatasetGraphTDB,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.core.BasicPattern,com.hp.hpl.jena.sparql.engine.QueryIterator,org.apache.jena.atlas.iterator.Filter,com.hp.hpl.jena.sparql.engine.ExecutionContext)>($r13, $r12, $r6, r4, $r15, $r14);

        return $r16;

     label1:
        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r0, "Non-GraphTDB passed to OpExecutorPlainTDB");

        $r5 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpBGP,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r3, r4);

        return $r5;
    }

    public com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpQuadPattern, com.hp.hpl.jena.sparql.engine.QueryIterator)
    {
        com.hp.hpl.jena.sparql.core.QuadPattern $r21;
        com.hp.hpl.jena.tdb.store.DatasetGraphTDB $r15, r28;
        com.hp.hpl.jena.graph.Node $r1, $r4;
        com.hp.hpl.jena.sparql.engine.ExecutionContext $r3, $r5, $r7, $r12, $r16, $r19, $r22, $r25;
        com.hp.hpl.jena.graph.Graph $r8;
        com.hp.hpl.jena.tdb.store.GraphTDB $r14;
        boolean $z0, $z1;
        com.hp.hpl.jena.tdb.solver.OpExecutorTDB$OpExecutorPlainTDB r2;
        com.hp.hpl.jena.sparql.core.BasicPattern $r11, $r24;
        org.apache.jena.atlas.iterator.Filter $r17, $r26;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r6, $r20;
        com.hp.hpl.jena.sparql.util.Context $r13, $r23;
        com.hp.hpl.jena.sparql.algebra.op.OpQuadPattern r0;
        com.hp.hpl.jena.sparql.engine.QueryIterator r9, $r10, $r18, $r27;

        r2 := @this: com.hp.hpl.jena.tdb.solver.OpExecutorTDB$OpExecutorPlainTDB;

        r0 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpQuadPattern;

        r9 := @parameter1: com.hp.hpl.jena.sparql.engine.QueryIterator;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpQuadPattern: com.hp.hpl.jena.graph.Node getGraphNode()>();

        $r3 = r2.<com.hp.hpl.jena.tdb.solver.OpExecutorTDB$OpExecutorPlainTDB: com.hp.hpl.jena.sparql.engine.ExecutionContext execCxt>;

        $r4 = staticinvoke <com.hp.hpl.jena.tdb.solver.OpExecutorTDB: com.hp.hpl.jena.graph.Node decideGraphNode(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.engine.ExecutionContext)>($r1, $r3);

        $r5 = r2.<com.hp.hpl.jena.tdb.solver.OpExecutorTDB$OpExecutorPlainTDB: com.hp.hpl.jena.sparql.engine.ExecutionContext execCxt>;

        $r6 = virtualinvoke $r5.<com.hp.hpl.jena.sparql.engine.ExecutionContext: com.hp.hpl.jena.sparql.core.DatasetGraph getDataset()>();

        $z0 = $r6 instanceof com.hp.hpl.jena.tdb.store.DatasetGraphTDB;

        if $z0 == 0 goto label1;

        $r19 = r2.<com.hp.hpl.jena.tdb.solver.OpExecutorTDB$OpExecutorPlainTDB: com.hp.hpl.jena.sparql.engine.ExecutionContext execCxt>;

        $r20 = virtualinvoke $r19.<com.hp.hpl.jena.sparql.engine.ExecutionContext: com.hp.hpl.jena.sparql.core.DatasetGraph getDataset()>();

        r28 = (com.hp.hpl.jena.tdb.store.DatasetGraphTDB) $r20;

        $r21 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpQuadPattern: com.hp.hpl.jena.sparql.core.QuadPattern getPattern()>();

        $r22 = r2.<com.hp.hpl.jena.tdb.solver.OpExecutorTDB$OpExecutorPlainTDB: com.hp.hpl.jena.sparql.engine.ExecutionContext execCxt>;

        $r23 = virtualinvoke $r22.<com.hp.hpl.jena.sparql.engine.ExecutionContext: com.hp.hpl.jena.sparql.util.Context getContext()>();

        staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: void explain(java.lang.String,com.hp.hpl.jena.sparql.core.QuadPattern,com.hp.hpl.jena.sparql.util.Context)>("Execute", $r21, $r23);

        $r24 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpQuadPattern: com.hp.hpl.jena.sparql.core.BasicPattern getBasicPattern()>();

        $r26 = r2.<com.hp.hpl.jena.tdb.solver.OpExecutorTDB$OpExecutorPlainTDB: org.apache.jena.atlas.iterator.Filter filter>;

        $r25 = r2.<com.hp.hpl.jena.tdb.solver.OpExecutorTDB$OpExecutorPlainTDB: com.hp.hpl.jena.sparql.engine.ExecutionContext execCxt>;

        $r27 = staticinvoke <com.hp.hpl.jena.tdb.solver.SolverLib: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.tdb.store.DatasetGraphTDB,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.core.BasicPattern,com.hp.hpl.jena.sparql.engine.QueryIterator,org.apache.jena.atlas.iterator.Filter,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r28, $r4, $r24, r9, $r26, $r25);

        return $r27;

     label1:
        $r7 = r2.<com.hp.hpl.jena.tdb.solver.OpExecutorTDB$OpExecutorPlainTDB: com.hp.hpl.jena.sparql.engine.ExecutionContext execCxt>;

        $r8 = virtualinvoke $r7.<com.hp.hpl.jena.sparql.engine.ExecutionContext: com.hp.hpl.jena.graph.Graph getActiveGraph()>();

        $z1 = $r8 instanceof com.hp.hpl.jena.tdb.store.GraphTDB;

        if $z1 == 0 goto label2;

        $r11 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpQuadPattern: com.hp.hpl.jena.sparql.core.BasicPattern getBasicPattern()>();

        $r12 = r2.<com.hp.hpl.jena.tdb.solver.OpExecutorTDB$OpExecutorPlainTDB: com.hp.hpl.jena.sparql.engine.ExecutionContext execCxt>;

        $r13 = virtualinvoke $r12.<com.hp.hpl.jena.sparql.engine.ExecutionContext: com.hp.hpl.jena.sparql.util.Context getContext()>();

        staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: void explain(java.lang.String,com.hp.hpl.jena.sparql.core.BasicPattern,com.hp.hpl.jena.sparql.util.Context)>("Execute", $r11, $r13);

        $r14 = (com.hp.hpl.jena.tdb.store.GraphTDB) $r8;

        $r15 = virtualinvoke $r14.<com.hp.hpl.jena.tdb.store.GraphTDB: com.hp.hpl.jena.tdb.store.DatasetGraphTDB getDSG()>();

        $r17 = r2.<com.hp.hpl.jena.tdb.solver.OpExecutorTDB$OpExecutorPlainTDB: org.apache.jena.atlas.iterator.Filter filter>;

        $r16 = r2.<com.hp.hpl.jena.tdb.solver.OpExecutorTDB$OpExecutorPlainTDB: com.hp.hpl.jena.sparql.engine.ExecutionContext execCxt>;

        $r18 = staticinvoke <com.hp.hpl.jena.tdb.solver.SolverLib: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.tdb.store.DatasetGraphTDB,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.core.BasicPattern,com.hp.hpl.jena.sparql.engine.QueryIterator,org.apache.jena.atlas.iterator.Filter,com.hp.hpl.jena.sparql.engine.ExecutionContext)>($r15, $r4, $r11, r9, $r17, $r16);

        return $r18;

     label2:
        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r2, "Non-DatasetGraphTDB passed to OpExecutorPlainTDB");

        $r10 = specialinvoke r2.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpQuadPattern,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r0, r9);

        return $r10;
    }
}
