class org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable extends java.lang.Object implements java.lang.Runnable
{
    java.awt.geom.AffineTransform at;
    boolean doubleBuf;
    boolean clearPaintTrans;
    java.awt.Shape aoi;
    int width;
    int height;
    boolean active;
    private final org.apache.batik.swing.svg.AbstractJSVGComponent this$0;

    public void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent, java.awt.geom.AffineTransform, boolean, boolean, java.awt.Shape, int, int)
    {
        java.awt.Shape r3;
        java.awt.geom.AffineTransform r2;
        org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable r0;
        int i0, i1;
        org.apache.batik.swing.svg.AbstractJSVGComponent r1;
        boolean z0, z1;

        r0 := @this: org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable;

        r1 := @parameter0: org.apache.batik.swing.svg.AbstractJSVGComponent;

        r2 := @parameter1: java.awt.geom.AffineTransform;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r3 := @parameter4: java.awt.Shape;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable: org.apache.batik.swing.svg.AbstractJSVGComponent this$0> = r1;

        virtualinvoke r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable: void updateInfo(java.awt.geom.AffineTransform,boolean,boolean,java.awt.Shape,int,int)>(r2, z0, z1, r3, i0, i1);

        r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable: boolean active> = 1;

        return;
    }

    public void updateInfo(java.awt.geom.AffineTransform, boolean, boolean, java.awt.Shape, int, int)
    {
        java.awt.Shape r2;
        org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable r0;
        int i0, i1;
        java.awt.geom.AffineTransform r1;
        boolean z0, z1;

        r0 := @this: org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable;

        r1 := @parameter0: java.awt.geom.AffineTransform;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r2 := @parameter3: java.awt.Shape;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable: java.awt.geom.AffineTransform at> = r1;

        r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable: boolean doubleBuf> = z0;

        r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable: boolean clearPaintTrans> = z1;

        r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable: java.awt.Shape aoi> = r2;

        r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable: int width> = i0;

        r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable: int height> = i1;

        r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable: boolean active> = 1;

        return;
    }

    public void deactivate()
    {
        org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable r0;

        r0 := @this: org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable;

        r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable: boolean active> = 0;

        return;
    }

    public void run()
    {
        java.awt.Shape $r2;
        java.awt.geom.AffineTransform $r3;
        org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable r0;
        int $i0, $i1;
        org.apache.batik.swing.svg.AbstractJSVGComponent $r1;
        org.apache.batik.bridge.UpdateManager $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable;

        $z0 = r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable: boolean active>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable: org.apache.batik.swing.svg.AbstractJSVGComponent this$0>;

        $r4 = $r1.<org.apache.batik.swing.svg.AbstractJSVGComponent: org.apache.batik.bridge.UpdateManager updateManager>;

        $r3 = r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable: java.awt.geom.AffineTransform at>;

        $z2 = r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable: boolean doubleBuf>;

        $z1 = r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable: boolean clearPaintTrans>;

        $r2 = r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable: java.awt.Shape aoi>;

        $i1 = r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable: int width>;

        $i0 = r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$1$UpdateRenderingRunnable: int height>;

        virtualinvoke $r4.<org.apache.batik.bridge.UpdateManager: void updateRendering(java.awt.geom.AffineTransform,boolean,boolean,java.awt.Shape,int,int)>($r3, $z2, $z1, $r2, $i1, $i0);

        return;
    }
}
