public final class org.waveprotocol.wave.model.wave.data.impl.WaveletDataImpl$Factory extends java.lang.Object implements org.waveprotocol.wave.model.wave.data.ObservableWaveletData$Factory
{
    private final org.waveprotocol.wave.model.wave.data.DocumentFactory contentFactory;

    public static org.waveprotocol.wave.model.wave.data.impl.WaveletDataImpl$Factory create(org.waveprotocol.wave.model.wave.data.DocumentFactory)
    {
        org.waveprotocol.wave.model.wave.data.impl.WaveletDataImpl$Factory $r0;
        org.waveprotocol.wave.model.wave.data.DocumentFactory r1;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.DocumentFactory;

        $r0 = new org.waveprotocol.wave.model.wave.data.impl.WaveletDataImpl$Factory;

        specialinvoke $r0.<org.waveprotocol.wave.model.wave.data.impl.WaveletDataImpl$Factory: void <init>(org.waveprotocol.wave.model.wave.data.DocumentFactory)>(r1);

        return $r0;
    }

    private void <init>(org.waveprotocol.wave.model.wave.data.DocumentFactory)
    {
        org.waveprotocol.wave.model.wave.data.impl.WaveletDataImpl$Factory r0;
        org.waveprotocol.wave.model.wave.data.DocumentFactory r1;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.WaveletDataImpl$Factory;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.DocumentFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "null DocumentFactory");

        r0.<org.waveprotocol.wave.model.wave.data.impl.WaveletDataImpl$Factory: org.waveprotocol.wave.model.wave.data.DocumentFactory contentFactory> = r1;

        return;
    }

    public org.waveprotocol.wave.model.wave.data.impl.WaveletDataImpl create(org.waveprotocol.wave.model.wave.data.ReadableWaveletData)
    {
        org.waveprotocol.wave.model.wave.data.impl.WaveletDataImpl$Factory r2;
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData r1;
        org.waveprotocol.wave.model.wave.data.DocumentFactory $r3;
        org.waveprotocol.wave.model.wave.data.impl.WaveletDataImpl $r0;

        r2 := @this: org.waveprotocol.wave.model.wave.data.impl.WaveletDataImpl$Factory;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.ReadableWaveletData;

        $r0 = new org.waveprotocol.wave.model.wave.data.impl.WaveletDataImpl;

        $r3 = r2.<org.waveprotocol.wave.model.wave.data.impl.WaveletDataImpl$Factory: org.waveprotocol.wave.model.wave.data.DocumentFactory contentFactory>;

        specialinvoke $r0.<org.waveprotocol.wave.model.wave.data.impl.WaveletDataImpl: void <init>(org.waveprotocol.wave.model.wave.data.ReadableWaveletData,org.waveprotocol.wave.model.wave.data.DocumentFactory,org.waveprotocol.wave.model.wave.data.impl.WaveletDataImpl$1)>(r1, $r3, null);

        virtualinvoke $r0.<org.waveprotocol.wave.model.wave.data.impl.WaveletDataImpl: void copyParticipants(org.waveprotocol.wave.model.wave.data.ReadableWaveletData)>(r1);

        virtualinvoke $r0.<org.waveprotocol.wave.model.wave.data.impl.WaveletDataImpl: void copyDocuments(org.waveprotocol.wave.model.wave.data.ReadableWaveletData)>(r1);

        return $r0;
    }

    public volatile org.waveprotocol.wave.model.wave.data.ReadableWaveletData create(org.waveprotocol.wave.model.wave.data.ReadableWaveletData)
    {
        org.waveprotocol.wave.model.wave.data.impl.WaveletDataImpl $r2;
        org.waveprotocol.wave.model.wave.data.impl.WaveletDataImpl$Factory r0;
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData r1;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.WaveletDataImpl$Factory;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.ReadableWaveletData;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.WaveletDataImpl$Factory: org.waveprotocol.wave.model.wave.data.impl.WaveletDataImpl create(org.waveprotocol.wave.model.wave.data.ReadableWaveletData)>(r1);

        return $r2;
    }
}
