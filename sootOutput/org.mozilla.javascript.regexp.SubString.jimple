class org.mozilla.javascript.regexp.SubString extends java.lang.Object
{
    static final org.mozilla.javascript.regexp.SubString emptySubString;
    char[] charArray;
    int index;
    int length;

    public void <init>()
    {
        org.mozilla.javascript.regexp.SubString r0;

        r0 := @this: org.mozilla.javascript.regexp.SubString;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(java.lang.String)
    {
        int $i0;
        char[] $r2;
        org.mozilla.javascript.regexp.SubString r0;
        java.lang.String r1;

        r0 := @this: org.mozilla.javascript.regexp.SubString;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mozilla.javascript.regexp.SubString: int index> = 0;

        $r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        r0.<org.mozilla.javascript.regexp.SubString: char[] charArray> = $r2;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        r0.<org.mozilla.javascript.regexp.SubString: int length> = $i0;

        return;
    }

    public void <init>(char[], int, int)
    {
        char $c3;
        int i0, i1, $i2, i4;
        char[] $r1, r2, $r3;
        org.mozilla.javascript.regexp.SubString r0;

        r0 := @this: org.mozilla.javascript.regexp.SubString;

        r2 := @parameter0: char[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mozilla.javascript.regexp.SubString: int index> = 0;

        r0.<org.mozilla.javascript.regexp.SubString: int length> = i0;

        $r1 = newarray (char)[i0];

        r0.<org.mozilla.javascript.regexp.SubString: char[] charArray> = $r1;

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $r3 = r0.<org.mozilla.javascript.regexp.SubString: char[] charArray>;

        $i2 = i1 + i4;

        $c3 = r2[$i2];

        $r3[i4] = $c3;

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    public java.lang.String toString()
    {
        int $i0, $i1;
        char[] $r1, $r2;
        org.mozilla.javascript.regexp.SubString r0;
        java.lang.String $r3;

        r0 := @this: org.mozilla.javascript.regexp.SubString;

        $r1 = r0.<org.mozilla.javascript.regexp.SubString: char[] charArray>;

        if $r1 != null goto label1;

        $r3 = "";

        goto label2;

     label1:
        $r3 = new java.lang.String;

        $r2 = r0.<org.mozilla.javascript.regexp.SubString: char[] charArray>;

        $i1 = r0.<org.mozilla.javascript.regexp.SubString: int index>;

        $i0 = r0.<org.mozilla.javascript.regexp.SubString: int length>;

        specialinvoke $r3.<java.lang.String: void <init>(char[],int,int)>($r2, $i1, $i0);

     label2:
        return $r3;
    }

    static void <clinit>()
    {
        org.mozilla.javascript.regexp.SubString $r0;

        $r0 = new org.mozilla.javascript.regexp.SubString;

        specialinvoke $r0.<org.mozilla.javascript.regexp.SubString: void <init>()>();

        <org.mozilla.javascript.regexp.SubString: org.mozilla.javascript.regexp.SubString emptySubString> = $r0;

        return;
    }
}
