public class com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI extends com.jidesoft.plaf.vsnet.VsnetJideTabbedPaneUI
{

    public void <init>()
    {
        com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI r0;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI;

        specialinvoke r0.<com.jidesoft.plaf.vsnet.VsnetJideTabbedPaneUI: void <init>()>();

        return;
    }

    public static javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI $r0;

        r1 := @parameter0: javax.swing.JComponent;

        $r0 = new com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI;

        specialinvoke $r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: void <init>()>();

        return $r0;
    }

    protected void paintTabBorder(java.awt.Graphics, int, int, int, int, int, int, boolean)
    {
        java.awt.Color $r2, $r5, $r8, $r10, $r11, $r12, $r15, $r20, $r21, $r22, $r25, $r27, $r28, $r29, $r32, $r37, $r38;
        com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI r0;
        int $i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $i203, $i204, $i205, $i206, $i207, $i208, $i209, $i210, $i211, $i212, $i213;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.awt.Graphics r1;
        java.awt.ComponentOrientation $r4;
        com.jidesoft.swing.JideTabbedPane $r3, $r6, $r7, $r9, $r13, $r14, $r16, $r17, $r18, $r19, $r23, $r24, $r26, $r30, $r31, $r33, $r34, $r35, $r36;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI;

        r1 := @parameter0: java.awt.Graphics;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        z0 := @parameter7: boolean;

        $i0 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: int getTabShape()>();

        if $i0 != 6 goto label34;

        $r2 = virtualinvoke r1.<java.awt.Graphics: java.awt.Color getColor()>();

        $r3 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r4 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: java.awt.ComponentOrientation getComponentOrientation()>();

        $z1 = virtualinvoke $r4.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        tableswitch(i1)
        {
            case 1: goto label23;
            case 2: goto label01;
            case 3: goto label13;
            case 4: goto label07;
            default: goto label23;
        };

     label01:
        if z0 == 0 goto label02;

        $r27 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _lightHighlight>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r27);

        $i140 = i3 + 1;

        $i139 = i4 + 1;

        $i138 = i5 - 1;

        $i137 = i6 - 3;

        virtualinvoke r1.<java.awt.Graphics: void drawRect(int,int,int,int)>($i140, $i139, $i138, $i137);

        $r28 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _shadow>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r28);

        $i143 = i3 + 1;

        $i141 = i3 + i5;

        $i142 = $i141 - 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i143, i4, $i142, i4);

        $i150 = i3 + 1;

        $i144 = i4 + i6;

        $i149 = $i144 - 1;

        $i145 = i3 + i5;

        $i148 = $i145 - 1;

        $i146 = i4 + i6;

        $i147 = $i146 - 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i150, $i149, $i148, $i147);

        $i152 = i4 + 1;

        $i151 = i4 + 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, $i152, i3, $i151);

        $i153 = i4 + i6;

        $i156 = $i153 - 2;

        $i154 = i4 + i6;

        $i155 = $i154 - 2;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, $i156, i3, $i155);

        goto label06;

     label02:
        $r22 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _shadow>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r22);

        $r23 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i117 = virtualinvoke $r23.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 <= $i117 goto label04;

        $r26 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i124 = virtualinvoke $r26.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i125 = $i124 - 1;

        if i2 != $i125 goto label03;

        $i132 = i4 + i6;

        $i136 = $i132 - 1;

        $i135 = i3 + i5;

        $i133 = i4 + i6;

        $i134 = $i133 - 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, $i136, $i135, $i134);

        goto label06;

     label03:
        $i126 = i4 + i6;

        $i131 = $i126 - 1;

        $i127 = i5 / 2;

        $i130 = i3 + $i127;

        $i128 = i4 + i6;

        $i129 = $i128 - 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, $i131, $i130, $i129);

        goto label06;

     label04:
        $r24 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i118 = virtualinvoke $r24.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 >= $i118 goto label06;

        if i2 == 0 goto label05;

        $i122 = i5 / 2;

        $i123 = i3 + $i122;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, i4, $i123, i4);

        goto label06;

     label05:
        $z5 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: boolean isTabLeadingComponentVisible()>();

        if $z5 == 0 goto label06;

        $i121 = i3 + i5;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, i4, $i121, i4);

     label06:
        $z8 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: boolean isTabTopVisible(int)>(i1);

        if $z8 == 0 goto label33;

        $r25 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _shadow>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r25);

        $i119 = i4 + i6;

        $i120 = $i119 - 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, i4, i3, $i120);

        goto label33;

     label07:
        if z0 == 0 goto label08;

        $r10 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _lightHighlight>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r10);

        $i33 = i4 + 1;

        $i32 = i5 - 1;

        $i31 = i6 - 3;

        virtualinvoke r1.<java.awt.Graphics: void drawRect(int,int,int,int)>(i3, $i33, $i32, $i31);

        $r11 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _shadow>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r11);

        $i34 = i3 + i5;

        $i35 = $i34 - 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, i4, $i35, i4);

        $i36 = i4 + i6;

        $i41 = $i36 - 1;

        $i37 = i3 + i5;

        $i40 = $i37 - 1;

        $i38 = i4 + i6;

        $i39 = $i38 - 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, $i41, $i40, $i39);

        $i45 = i3 + i5;

        $i44 = i4 + 1;

        $i43 = i3 + i5;

        $i42 = i4 + 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i45, $i44, $i43, $i42);

        $i51 = i3 + i5;

        $i46 = i4 + i6;

        $i50 = $i46 - 2;

        $i49 = i3 + i5;

        $i47 = i4 + i6;

        $i48 = $i47 - 2;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i51, $i50, $i49, $i48);

        goto label12;

     label08:
        $r5 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _shadow>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

        $r6 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i7 = virtualinvoke $r6.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 <= $i7 goto label10;

        $r9 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i17 = virtualinvoke $r9.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i18 = $i17 - 1;

        if i2 != $i18 goto label09;

        $i26 = i4 + i6;

        $i30 = $i26 - 1;

        $i29 = i3 + i5;

        $i27 = i4 + i6;

        $i28 = $i27 - 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, $i30, $i29, $i28);

        goto label12;

     label09:
        $i19 = i5 / 2;

        $i25 = i3 + $i19;

        $i20 = i4 + i6;

        $i24 = $i20 - 1;

        $i23 = i3 + i5;

        $i21 = i4 + i6;

        $i22 = $i21 - 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i25, $i24, $i23, $i22);

        goto label12;

     label10:
        $r7 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i8 = virtualinvoke $r7.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 >= $i8 goto label12;

        if i2 == 0 goto label11;

        $i14 = i5 / 2;

        $i16 = i3 + $i14;

        $i15 = i3 + i5;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i16, i4, $i15, i4);

        goto label12;

     label11:
        $z2 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: boolean isTabLeadingComponentVisible()>();

        if $z2 == 0 goto label12;

        $i13 = i3 + i5;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, i4, $i13, i4);

     label12:
        $z9 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: boolean isTabTopVisible(int)>(i1);

        if $z9 == 0 goto label33;

        $r8 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _shadow>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r8);

        $i12 = i3 + i5;

        $i11 = i3 + i5;

        $i9 = i4 + i6;

        $i10 = $i9 - 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i12, i4, $i11, $i10);

        goto label33;

     label13:
        if z0 == 0 goto label14;

        $r20 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _lightHighlight>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r20);

        $i98 = i3 + 1;

        $i97 = i5 - 3;

        $i96 = i6 - 1;

        virtualinvoke r1.<java.awt.Graphics: void drawRect(int,int,int,int)>($i98, i4, $i97, $i96);

        $r21 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _shadow>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r21);

        $i99 = i4 + i6;

        $i100 = $i99 - 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, i4, i3, $i100);

        $i101 = i3 + i5;

        $i106 = $i101 - 1;

        $i102 = i3 + i5;

        $i105 = $i102 - 1;

        $i103 = i4 + i6;

        $i104 = $i103 - 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i106, i4, $i105, $i104);

        $i110 = i3 + 1;

        $i109 = i4 + i6;

        $i108 = i3 + 1;

        $i107 = i4 + i6;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i110, $i109, $i108, $i107);

        $i111 = i3 + i5;

        $i116 = $i111 - 2;

        $i115 = i4 + i6;

        $i112 = i3 + i5;

        $i114 = $i112 - 2;

        $i113 = i4 + i6;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i116, $i115, $i114, $i113);

        goto label22;

     label14:
        $r12 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _shadow>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r12);

        if $z1 == 0 goto label18;

        $r17 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i76 = virtualinvoke $r17.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 <= $i76 goto label16;

        $r19 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i82 = virtualinvoke $r19.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i83 = $i82 - 1;

        if i2 != $i83 goto label15;

        $i91 = i3 + i5;

        $i95 = $i91 - 1;

        $i92 = i3 + i5;

        $i94 = $i92 - 1;

        $i93 = i4 + i6;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i95, i4, $i94, $i93);

        goto label22;

     label15:
        $i84 = i3 + i5;

        $i90 = $i84 - 1;

        $i85 = i6 / 2;

        $i89 = i4 + $i85;

        $i86 = i3 + i5;

        $i88 = $i86 - 1;

        $i87 = i4 + i6;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i90, $i89, $i88, $i87);

        goto label22;

     label16:
        $r18 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i77 = virtualinvoke $r18.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 >= $i77 goto label22;

        if i2 == 0 goto label17;

        $i79 = i6 / 2;

        $i81 = i4 + $i79;

        $i80 = i4 + i6;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, $i81, i3, $i80);

        goto label22;

     label17:
        $z4 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: boolean isTabLeadingComponentVisible()>();

        if $z4 == 0 goto label22;

        $i78 = i4 + i6;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, i4, i3, $i78);

        goto label22;

     label18:
        $r13 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i52 = virtualinvoke $r13.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 <= $i52 goto label20;

        $r16 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i70 = virtualinvoke $r16.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i71 = $i70 - 1;

        if i2 != $i71 goto label19;

        $i75 = i4 + i6;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, i4, i3, $i75);

        goto label22;

     label19:
        $i72 = i6 / 2;

        $i74 = i4 + $i72;

        $i73 = i4 + i6;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, $i74, i3, $i73);

        goto label22;

     label20:
        $r14 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i53 = virtualinvoke $r14.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 >= $i53 goto label22;

        if i2 == 0 goto label21;

        $i63 = i3 + i5;

        $i69 = $i63 - 1;

        $i64 = i6 / 2;

        $i68 = i4 + $i64;

        $i65 = i3 + i5;

        $i67 = $i65 - 1;

        $i66 = i4 + i6;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i69, $i68, $i67, $i66);

        goto label22;

     label21:
        $z3 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: boolean isTabLeadingComponentVisible()>();

        if $z3 == 0 goto label22;

        $i58 = i3 + i5;

        $i62 = $i58 - 1;

        $i59 = i3 + i5;

        $i61 = $i59 - 1;

        $i60 = i4 + i6;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i62, i4, $i61, $i60);

     label22:
        $z10 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: boolean isTabTopVisible(int)>(i1);

        if $z10 == 0 goto label33;

        $r15 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _shadow>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r15);

        $i57 = i4 + i6;

        $i54 = i3 + i5;

        $i56 = $i54 - 1;

        $i55 = i4 + i6;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, $i57, $i56, $i55);

        goto label33;

     label23:
        if z0 == 0 goto label24;

        $r37 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _lightHighlight>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r37);

        $i197 = i3 + 1;

        $i196 = i4 + 1;

        $i195 = i5 - 3;

        virtualinvoke r1.<java.awt.Graphics: void drawRect(int,int,int,int)>($i197, $i196, $i195, i6);

        $r38 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _shadow>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r38);

        $i200 = i4 + 1;

        $i198 = i4 + i6;

        $i199 = $i198 - 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, $i200, i3, $i199);

        $i201 = i3 + i5;

        $i207 = $i201 - 1;

        $i206 = i4 + 1;

        $i202 = i3 + i5;

        $i205 = $i202 - 1;

        $i203 = i4 + i6;

        $i204 = $i203 - 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i207, $i206, $i205, $i204);

        $i209 = i3 + 1;

        $i208 = i3 + 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i209, i4, $i208, i4);

        $i210 = i3 + i5;

        $i213 = $i210 - 2;

        $i211 = i3 + i5;

        $i212 = $i211 - 2;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i213, i4, $i212, i4);

        goto label32;

     label24:
        $r29 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _shadow>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r29);

        if $z1 == 0 goto label28;

        $r34 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i177 = virtualinvoke $r34.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 <= $i177 goto label26;

        $r36 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i182 = virtualinvoke $r36.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i183 = $i182 - 1;

        if i2 != $i183 goto label25;

        $i190 = i3 + i5;

        $i194 = $i190 - 1;

        $i191 = i3 + i5;

        $i193 = $i191 - 1;

        $i192 = i4 + i6;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i194, i4, $i193, $i192);

        goto label32;

     label25:
        $i184 = i3 + i5;

        $i189 = $i184 - 1;

        $i185 = i3 + i5;

        $i188 = $i185 - 1;

        $i186 = i6 / 2;

        $i187 = i4 + $i186;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i189, i4, $i188, $i187);

        goto label32;

     label26:
        $r35 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i178 = virtualinvoke $r35.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 >= $i178 goto label32;

        if i2 == 0 goto label27;

        $i180 = i6 / 2;

        $i181 = i4 + $i180;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, i4, i3, $i181);

        goto label32;

     label27:
        $z7 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: boolean isTabLeadingComponentVisible()>();

        if $z7 == 0 goto label32;

        $i179 = i4 + i6;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, i4, i3, $i179);

        goto label32;

     label28:
        $r30 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i157 = virtualinvoke $r30.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 <= $i157 goto label30;

        $r33 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i172 = virtualinvoke $r33.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $i173 = $i172 - 1;

        if i2 != $i173 goto label29;

        $i176 = i4 + i6;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, i4, i3, $i176);

        goto label32;

     label29:
        $i174 = i6 / 2;

        $i175 = i4 + $i174;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, i4, i3, $i175);

        goto label32;

     label30:
        $r31 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i158 = virtualinvoke $r31.<com.jidesoft.swing.JideTabbedPane: int getSelectedIndex()>();

        if i2 >= $i158 goto label32;

        if i2 == 0 goto label31;

        $i166 = i3 + i5;

        $i171 = $i166 - 1;

        $i167 = i3 + i5;

        $i170 = $i167 - 1;

        $i168 = i6 / 2;

        $i169 = i4 + $i168;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i171, i4, $i170, $i169);

        goto label32;

     label31:
        $z6 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: boolean isTabLeadingComponentVisible()>();

        if $z6 == 0 goto label32;

        $i161 = i3 + i5;

        $i165 = $i161 - 1;

        $i162 = i3 + i5;

        $i164 = $i162 - 1;

        $i163 = i4 + i6;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i165, i4, $i164, $i163);

     label32:
        $z11 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: boolean isTabTopVisible(int)>(i1);

        if $z11 == 0 goto label33;

        $r32 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _shadow>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r32);

        $i159 = i3 + i5;

        $i160 = $i159 - 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, i4, $i160, i4);

     label33:
        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r2);

        goto label35;

     label34:
        specialinvoke r0.<com.jidesoft.plaf.vsnet.VsnetJideTabbedPaneUI: void paintTabBorder(java.awt.Graphics,int,int,int,int,int,int,boolean)>(r1, i1, i2, i3, i4, i5, i6, z0);

     label35:
        return;
    }

    protected void paintTabArea(java.awt.Graphics, int, int, java.awt.Component)
    {
        com.jidesoft.swing.JideTabbedPane $r3;
        java.awt.Color $r7;
        int[] $r11, $r12;
        com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI r0;
        boolean $z0, $z1;
        java.awt.Component r2;
        java.awt.Graphics r1;
        java.awt.Rectangle $r6, $r9, $r14, $r16, $r17;
        java.awt.Rectangle[] $r8, $r10, $r13, $r15;
        int $i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i12, i13, $i14, i15, $i16, $i17, i18, $i20;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI;

        r1 := @parameter0: java.awt.Graphics;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r2 := @parameter3: java.awt.Component;

        $i0 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: int getTabShape()>();

        if $i0 != 6 goto label11;

        $r3 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i3 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: int getTabCount()>();

        $r16 = new java.awt.Rectangle;

        specialinvoke $r16.<java.awt.Rectangle: void <init>()>();

        $r17 = new java.awt.Rectangle;

        specialinvoke $r17.<java.awt.Rectangle: void <init>()>();

        $r6 = virtualinvoke r1.<java.awt.Graphics: java.awt.Rectangle getClipBounds()>();

        $r7 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _tabBackground>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r7);

        $i7 = $r6.<java.awt.Rectangle: int x>;

        $i6 = $r6.<java.awt.Rectangle: int y>;

        $i5 = $r6.<java.awt.Rectangle: int width>;

        $i4 = $r6.<java.awt.Rectangle: int height>;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>($i7, $i6, $i5, $i4);

        $i8 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: int _runCount>;

        i15 = $i8 - 1;

     label01:
        if i15 < 0 goto label09;

        $r11 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: int[] _tabRuns>;

        i10 = $r11[i15];

        $r12 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: int[] _tabRuns>;

        $i11 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: int _runCount>;

        $i12 = $i11 - 1;

        if i15 != $i12 goto label02;

        $i16 = 0;

        goto label03;

     label02:
        $i16 = i15 + 1;

     label03:
        $i14 = $r12[$i16];

        if $i14 == 0 goto label04;

        $i17 = $i14 - 1;

        goto label05;

     label04:
        $i17 = $i3 - 1;

     label05:
        i13 = $i17;

        i18 = i10;

     label06:
        if i18 > i13 goto label08;

        $r13 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r14 = $r13[i18];

        $z1 = virtualinvoke $r14.<java.awt.Rectangle: boolean intersects(java.awt.Rectangle)>($r6);

        if $z1 == 0 goto label07;

        $r15 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: void paintTab(java.awt.Graphics,int,java.awt.Rectangle[],int,java.awt.Rectangle,java.awt.Rectangle)>(r1, i1, $r15, i18, $r16, $r17);

     label07:
        i18 = i18 + 1;

        goto label06;

     label08:
        $i20 = (int) -1;

        i15 = i15 + $i20;

        goto label01;

     label09:
        if i2 < 0 goto label10;

        $i9 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: int getRunForTab(int,int)>($i3, i2);

        if $i9 != 0 goto label10;

        $r8 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        $r9 = $r8[i2];

        $z0 = virtualinvoke $r9.<java.awt.Rectangle: boolean intersects(java.awt.Rectangle)>($r6);

        if $z0 == 0 goto label10;

        $r10 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Rectangle[] _rects>;

        virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: void paintTab(java.awt.Graphics,int,java.awt.Rectangle[],int,java.awt.Rectangle,java.awt.Rectangle)>(r1, i1, $r10, i2, $r16, $r17);

     label10:
        goto label12;

     label11:
        specialinvoke r0.<com.jidesoft.plaf.vsnet.VsnetJideTabbedPaneUI: void paintTabArea(java.awt.Graphics,int,int,java.awt.Component)>(r1, i1, i2, r2);

     label12:
        return;
    }

    protected void paintContentBorderTopEdge(java.awt.Graphics, int, int, int, int, int, int)
    {
        com.jidesoft.swing.JideTabbedPane $r2;
        java.awt.Color $r3;
        com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI r0;
        int $i0, i1, i2, i3, i4, i5, i6, $i7, $i8;
        java.awt.Graphics r1;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI;

        r1 := @parameter0: java.awt.Graphics;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        $i0 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: int getTabShape()>();

        if $i0 != 6 goto label1;

        $r2 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: boolean isTabShown()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _shadow>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r3);

        $i7 = i3 + i5;

        $i8 = $i7 - 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, i4, $i8, i4);

        goto label2;

     label1:
        specialinvoke r0.<com.jidesoft.plaf.vsnet.VsnetJideTabbedPaneUI: void paintContentBorderTopEdge(java.awt.Graphics,int,int,int,int,int,int)>(r1, i1, i2, i3, i4, i5, i6);

     label2:
        return;
    }

    protected void paintContentBorderBottomEdge(java.awt.Graphics, int, int, int, int, int, int)
    {
        com.jidesoft.swing.JideTabbedPane $r2;
        java.awt.Color $r3;
        com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI r0;
        int $i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean $z0;
        java.awt.Graphics r1;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI;

        r1 := @parameter0: java.awt.Graphics;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        $i0 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: int getTabShape()>();

        if $i0 != 6 goto label1;

        $r2 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: boolean isTabShown()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _shadow>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r3);

        $i7 = i4 + i6;

        $i12 = $i7 - 1;

        $i8 = i3 + i5;

        $i11 = $i8 - 1;

        $i9 = i4 + i6;

        $i10 = $i9 - 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, $i12, $i11, $i10);

        goto label2;

     label1:
        specialinvoke r0.<com.jidesoft.plaf.vsnet.VsnetJideTabbedPaneUI: void paintContentBorderBottomEdge(java.awt.Graphics,int,int,int,int,int,int)>(r1, i1, i2, i3, i4, i5, i6);

     label2:
        return;
    }

    protected void paintContentBorderLeftEdge(java.awt.Graphics, int, int, int, int, int, int)
    {
        com.jidesoft.swing.JideTabbedPane $r2;
        java.awt.Color $r3;
        com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI r0;
        int $i0, i1, i2, i3, i4, i5, i6, $i7, $i8;
        java.awt.Graphics r1;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI;

        r1 := @parameter0: java.awt.Graphics;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        $i0 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: int getTabShape()>();

        if $i0 != 6 goto label1;

        $r2 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: boolean isTabShown()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _shadow>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r3);

        $i7 = i4 + i6;

        $i8 = $i7 - 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>(i3, i4, i3, $i8);

        goto label2;

     label1:
        specialinvoke r0.<com.jidesoft.plaf.vsnet.VsnetJideTabbedPaneUI: void paintContentBorderLeftEdge(java.awt.Graphics,int,int,int,int,int,int)>(r1, i1, i2, i3, i4, i5, i6);

     label2:
        return;
    }

    protected void paintContentBorderRightEdge(java.awt.Graphics, int, int, int, int, int, int)
    {
        com.jidesoft.swing.JideTabbedPane $r2;
        java.awt.Color $r3;
        com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI r0;
        int $i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean $z0;
        java.awt.Graphics r1;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI;

        r1 := @parameter0: java.awt.Graphics;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        $i0 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: int getTabShape()>();

        if $i0 != 6 goto label1;

        $r2 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $z0 = virtualinvoke $r2.<com.jidesoft.swing.JideTabbedPane: boolean isTabShown()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _shadow>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r3);

        $i7 = i3 + i5;

        $i12 = $i7 - 1;

        $i8 = i3 + i5;

        $i11 = $i8 - 1;

        $i9 = i4 + i6;

        $i10 = $i9 - 1;

        virtualinvoke r1.<java.awt.Graphics: void drawLine(int,int,int,int)>($i12, i4, $i11, $i10);

        goto label2;

     label1:
        specialinvoke r0.<com.jidesoft.plaf.vsnet.VsnetJideTabbedPaneUI: void paintContentBorderRightEdge(java.awt.Graphics,int,int,int,int,int,int)>(r1, i1, i2, i3, i4, i5, i6);

     label2:
        return;
    }

    protected void paintTabBackground(java.awt.Graphics, int, int, int, int, int, int, boolean)
    {
        java.awt.Color $r2, $r6, $r8, $r10, $r12, r17, r18;
        byte $b41, $b42;
        com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI r0;
        com.jidesoft.swing.JideTabbedPane $r3;
        boolean z0, $z1, $z2, $z3;
        java.awt.Graphics r1;
        java.awt.Rectangle $r4, $r5, $r7, $r9, $r11, $r13, $r14, $r15;
        java.awt.Graphics2D $r16;
        int $i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI;

        r1 := @parameter0: java.awt.Graphics;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        z0 := @parameter7: boolean;

        $i0 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: int getTabShape()>();

        if $i0 != 6 goto label18;

        $r3 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r2 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _tabBackground>;

        virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: void setBackgroundAt(int,java.awt.Color)>(i2, $r2);

        if z0 == 0 goto label17;

        $z1 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: boolean showFocusIndicator()>();

        if $z1 == 0 goto label01;

        r17 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _activeBackground>;

        r18 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("DockableFrame.activeTitleBackground2");

        goto label02;

     label01:
        r17 = <java.awt.Color: java.awt.Color WHITE>;

        r18 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _background>;

     label02:
        $r16 = (java.awt.Graphics2D) r1;

        $z2 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: boolean isShowCloseButtonOnTab()>();

        if $z2 == 0 goto label03;

        $b41 = 16;

        goto label04;

     label03:
        $b41 = 0;

     label04:
        $i7 = i5 - $b41;

        $i40 = $i7 - 3;

        $z3 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: boolean isShowCloseButtonOnTab()>();

        if $z3 == 0 goto label05;

        $b42 = 16;

        goto label06;

     label05:
        $b42 = 0;

     label06:
        $i8 = i6 - $b42;

        $i39 = $i8 - 3;

        tableswitch(i1)
        {
            case 1: goto label10;
            case 2: goto label07;
            case 3: goto label09;
            case 4: goto label08;
            default: goto label10;
        };

     label07:
        $r14 = new java.awt.Rectangle;

        $i35 = i4 + 1;

        $i34 = $i39 >> 1;

        specialinvoke $r14.<java.awt.Rectangle: void <init>(int,int,int,int)>(i3, $i35, i5, $i34);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>($r16, $r14, r17, r18, 1);

        goto label11;

     label08:
        $r4 = new java.awt.Rectangle;

        $i11 = i4 + 1;

        $i10 = i5 - 1;

        $i9 = $i39 >> 1;

        specialinvoke $r4.<java.awt.Rectangle: void <init>(int,int,int,int)>(i3, $i11, $i10, $i9);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>($r16, $r4, r17, r18, 1);

        goto label11;

     label09:
        $r13 = new java.awt.Rectangle;

        $i33 = i3 + 1;

        $i32 = $i40 >> 1;

        $i31 = i6 - 1;

        specialinvoke $r13.<java.awt.Rectangle: void <init>(int,int,int,int)>($i33, i4, $i32, $i31);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>($r16, $r13, r17, r18, 0);

        goto label11;

     label10:
        $r15 = new java.awt.Rectangle;

        $i38 = i3 + 1;

        $i37 = i4 + 1;

        $i36 = $i40 >> 1;

        specialinvoke $r15.<java.awt.Rectangle: void <init>(int,int,int,int)>($i38, $i37, $i36, i6);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>($r16, $r15, r17, r18, 0);

     label11:
        tableswitch(i1)
        {
            case 1: goto label15;
            case 2: goto label12;
            case 3: goto label14;
            case 4: goto label13;
            default: goto label15;
        };

     label12:
        $r9 = new java.awt.Rectangle;

        $i23 = i4 + 1;

        $i22 = $i39 >> 1;

        $i25 = $i23 + $i22;

        $i24 = $i39 >> 1;

        specialinvoke $r9.<java.awt.Rectangle: void <init>(int,int,int,int)>(i3, $i25, i5, $i24);

        $r10 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _tabBackground>;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>($r16, $r9, r18, $r10, 1);

        goto label16;

     label13:
        $r5 = new java.awt.Rectangle;

        $i13 = i4 + 1;

        $i12 = $i39 >> 1;

        $i16 = $i13 + $i12;

        $i15 = i5 - 1;

        $i14 = $i39 >> 1;

        specialinvoke $r5.<java.awt.Rectangle: void <init>(int,int,int,int)>(i3, $i16, $i15, $i14);

        $r6 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _tabBackground>;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>($r16, $r5, r18, $r6, 1);

        goto label16;

     label14:
        $r7 = new java.awt.Rectangle;

        $i18 = i3 + 1;

        $i17 = $i40 >> 1;

        $i21 = $i18 + $i17;

        $i20 = $i40 >> 1;

        $i19 = i6 - 1;

        specialinvoke $r7.<java.awt.Rectangle: void <init>(int,int,int,int)>($i21, i4, $i20, $i19);

        $r8 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _tabBackground>;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>($r16, $r7, r18, $r8, 0);

        goto label16;

     label15:
        $r11 = new java.awt.Rectangle;

        $i27 = i3 + 1;

        $i26 = $i40 >> 1;

        $i30 = $i27 + $i26;

        $i29 = i4 + 1;

        $i28 = $i40 >> 1;

        specialinvoke $r11.<java.awt.Rectangle: void <init>(int,int,int,int)>($i30, $i29, $i28, i6);

        $r12 = r0.<com.jidesoft.plaf.eclipse.EclipseJideTabbedPaneUI: java.awt.Color _tabBackground>;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>($r16, $r11, r18, $r12, 0);

     label16:
        goto label19;

     label17:
        specialinvoke r0.<com.jidesoft.plaf.vsnet.VsnetJideTabbedPaneUI: void paintTabBackground(java.awt.Graphics,int,int,int,int,int,int,boolean)>(r1, i1, i2, i3, i4, i5, i6, z0);

        goto label19;

     label18:
        specialinvoke r0.<com.jidesoft.plaf.vsnet.VsnetJideTabbedPaneUI: void paintTabBackground(java.awt.Graphics,int,int,int,int,int,int,boolean)>(r1, i1, i2, i3, i4, i5, i6, z0);

     label19:
        return;
    }
}
