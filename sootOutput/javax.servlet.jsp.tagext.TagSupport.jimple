public class javax.servlet.jsp.tagext.TagSupport extends java.lang.Object implements javax.servlet.jsp.tagext.IterationTag, java.io.Serializable
{
    private javax.servlet.jsp.tagext.Tag parent;
    private java.util.Hashtable values;
    protected java.lang.String id;
    protected javax.servlet.jsp.PageContext pageContext;
    static java.lang.Class class$javax$servlet$jsp$tagext$Tag;

    public static final javax.servlet.jsp.tagext.Tag findAncestorWithClass(javax.servlet.jsp.tagext.Tag, java.lang.Class)
    {
        javax.servlet.jsp.tagext.Tag r3, $r5;
        java.lang.Class r0, $r1, $r2, $r4;
        boolean $z0, $z1, $z2, $z3, z4;

        r3 := @parameter0: javax.servlet.jsp.tagext.Tag;

        r0 := @parameter1: java.lang.Class;

        z4 = 0;

        if r3 == null goto label3;

        if r0 == null goto label3;

        $r1 = <javax.servlet.jsp.tagext.TagSupport: java.lang.Class class$javax$servlet$jsp$tagext$Tag>;

        if $r1 != null goto label1;

        $r4 = staticinvoke <javax.servlet.jsp.tagext.TagSupport: java.lang.Class class$(java.lang.String)>("javax.servlet.jsp.tagext.Tag");

        <javax.servlet.jsp.tagext.TagSupport: java.lang.Class class$javax$servlet$jsp$tagext$Tag> = $r4;

        goto label2;

     label1:
        $r4 = <javax.servlet.jsp.tagext.TagSupport: java.lang.Class class$javax$servlet$jsp$tagext$Tag>;

     label2:
        $z0 = virtualinvoke $r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 != 0 goto label4;

        $z3 = virtualinvoke r0.<java.lang.Class: boolean isInterface()>();

        z4 = $z3;

        if $z3 != 0 goto label4;

     label3:
        return null;

     label4:
        $r5 = interfaceinvoke r3.<javax.servlet.jsp.tagext.Tag: javax.servlet.jsp.tagext.Tag getParent()>();

        if $r5 != null goto label5;

        return null;

     label5:
        if z4 == 0 goto label6;

        $z2 = virtualinvoke r0.<java.lang.Class: boolean isInstance(java.lang.Object)>($r5);

        if $z2 != 0 goto label7;

     label6:
        $r2 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2);

        if $z1 == 0 goto label8;

     label7:
        return $r5;

     label8:
        r3 = $r5;

        goto label4;
    }

    public void <init>()
    {
        javax.servlet.jsp.tagext.TagSupport r0;

        r0 := @this: javax.servlet.jsp.tagext.TagSupport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int doStartTag() throws javax.servlet.jsp.JspException
    {
        javax.servlet.jsp.tagext.TagSupport r0;

        r0 := @this: javax.servlet.jsp.tagext.TagSupport;

        return 0;
    }

    public int doEndTag() throws javax.servlet.jsp.JspException
    {
        javax.servlet.jsp.tagext.TagSupport r0;

        r0 := @this: javax.servlet.jsp.tagext.TagSupport;

        return 6;
    }

    public int doAfterBody() throws javax.servlet.jsp.JspException
    {
        javax.servlet.jsp.tagext.TagSupport r0;

        r0 := @this: javax.servlet.jsp.tagext.TagSupport;

        return 0;
    }

    public void release()
    {
        javax.servlet.jsp.tagext.TagSupport r0;
        java.util.Hashtable $r1, $r2;

        r0 := @this: javax.servlet.jsp.tagext.TagSupport;

        r0.<javax.servlet.jsp.tagext.TagSupport: javax.servlet.jsp.tagext.Tag parent> = null;

        r0.<javax.servlet.jsp.tagext.TagSupport: java.lang.String id> = null;

        $r1 = r0.<javax.servlet.jsp.tagext.TagSupport: java.util.Hashtable values>;

        if $r1 == null goto label1;

        $r2 = r0.<javax.servlet.jsp.tagext.TagSupport: java.util.Hashtable values>;

        virtualinvoke $r2.<java.util.Hashtable: void clear()>();

     label1:
        r0.<javax.servlet.jsp.tagext.TagSupport: java.util.Hashtable values> = null;

        return;
    }

    public void setParent(javax.servlet.jsp.tagext.Tag)
    {
        javax.servlet.jsp.tagext.TagSupport r0;
        javax.servlet.jsp.tagext.Tag r1;

        r0 := @this: javax.servlet.jsp.tagext.TagSupport;

        r1 := @parameter0: javax.servlet.jsp.tagext.Tag;

        r0.<javax.servlet.jsp.tagext.TagSupport: javax.servlet.jsp.tagext.Tag parent> = r1;

        return;
    }

    public javax.servlet.jsp.tagext.Tag getParent()
    {
        javax.servlet.jsp.tagext.TagSupport r0;
        javax.servlet.jsp.tagext.Tag $r1;

        r0 := @this: javax.servlet.jsp.tagext.TagSupport;

        $r1 = r0.<javax.servlet.jsp.tagext.TagSupport: javax.servlet.jsp.tagext.Tag parent>;

        return $r1;
    }

    public void setId(java.lang.String)
    {
        javax.servlet.jsp.tagext.TagSupport r0;
        java.lang.String r1;

        r0 := @this: javax.servlet.jsp.tagext.TagSupport;

        r1 := @parameter0: java.lang.String;

        r0.<javax.servlet.jsp.tagext.TagSupport: java.lang.String id> = r1;

        return;
    }

    public java.lang.String getId()
    {
        javax.servlet.jsp.tagext.TagSupport r0;
        java.lang.String $r1;

        r0 := @this: javax.servlet.jsp.tagext.TagSupport;

        $r1 = r0.<javax.servlet.jsp.tagext.TagSupport: java.lang.String id>;

        return $r1;
    }

    public void setPageContext(javax.servlet.jsp.PageContext)
    {
        javax.servlet.jsp.tagext.TagSupport r0;
        javax.servlet.jsp.PageContext r1;

        r0 := @this: javax.servlet.jsp.tagext.TagSupport;

        r1 := @parameter0: javax.servlet.jsp.PageContext;

        r0.<javax.servlet.jsp.tagext.TagSupport: javax.servlet.jsp.PageContext pageContext> = r1;

        return;
    }

    public void setValue(java.lang.String, java.lang.Object)
    {
        javax.servlet.jsp.tagext.TagSupport r0;
        java.lang.Object r3;
        java.lang.String r2;
        java.util.Hashtable $r1, $r4, $r5;

        r0 := @this: javax.servlet.jsp.tagext.TagSupport;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r1 = r0.<javax.servlet.jsp.tagext.TagSupport: java.util.Hashtable values>;

        if $r1 != null goto label1;

        $r5 = new java.util.Hashtable;

        specialinvoke $r5.<java.util.Hashtable: void <init>()>();

        r0.<javax.servlet.jsp.tagext.TagSupport: java.util.Hashtable values> = $r5;

     label1:
        $r4 = r0.<javax.servlet.jsp.tagext.TagSupport: java.util.Hashtable values>;

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        return;
    }

    public java.lang.Object getValue(java.lang.String)
    {
        javax.servlet.jsp.tagext.TagSupport r0;
        java.lang.Object $r4;
        java.lang.String r2;
        java.util.Hashtable $r1, $r3;

        r0 := @this: javax.servlet.jsp.tagext.TagSupport;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<javax.servlet.jsp.tagext.TagSupport: java.util.Hashtable values>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<javax.servlet.jsp.tagext.TagSupport: java.util.Hashtable values>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        return $r4;
    }

    public void removeValue(java.lang.String)
    {
        javax.servlet.jsp.tagext.TagSupport r0;
        java.lang.String r2;
        java.util.Hashtable $r1, $r3;

        r0 := @this: javax.servlet.jsp.tagext.TagSupport;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<javax.servlet.jsp.tagext.TagSupport: java.util.Hashtable values>;

        if $r1 == null goto label1;

        $r3 = r0.<javax.servlet.jsp.tagext.TagSupport: java.util.Hashtable values>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r2);

     label1:
        return;
    }

    public java.util.Enumeration getValues()
    {
        javax.servlet.jsp.tagext.TagSupport r0;
        java.util.Enumeration $r3;
        java.util.Hashtable $r1, $r2;

        r0 := @this: javax.servlet.jsp.tagext.TagSupport;

        $r1 = r0.<javax.servlet.jsp.tagext.TagSupport: java.util.Hashtable values>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<javax.servlet.jsp.tagext.TagSupport: java.util.Hashtable values>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.util.Enumeration keys()>();

        return $r3;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
