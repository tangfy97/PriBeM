public class org.apache.lucene.analysis.pt.RSLPStemmerBase$RuleWithSuffixExceptions extends org.apache.lucene.analysis.pt.RSLPStemmerBase$Rule
{
    protected final char[][] exceptions;

    public void <init>(java.lang.String, int, java.lang.String, java.lang.String[])
    {
        java.lang.String[] r3;
        char[][] $r4, $r6;
        int i0, $i1, $i2, $i3, i4, i5;
        java.lang.String r1, r2, $r5, $r8, $r12, $r17;
        boolean $z0;
        org.apache.lucene.analysis.pt.RSLPStemmerBase$RuleWithSuffixExceptions r0;
        java.lang.RuntimeException $r9;
        char[] $r7;
        java.lang.StringBuilder $r10, $r11, $r13, $r14, $r15, $r16;

        r0 := @this: org.apache.lucene.analysis.pt.RSLPStemmerBase$RuleWithSuffixExceptions;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String[];

        specialinvoke r0.<org.apache.lucene.analysis.pt.RSLPStemmerBase$Rule: void <init>(java.lang.String,int,java.lang.String)>(r1, i0, r2);

        i4 = 0;

     label1:
        $i1 = lengthof r3;

        if i4 >= $i1 goto label3;

        $r8 = r3[i4];

        $z0 = virtualinvoke $r8.<java.lang.String: boolean endsWith(java.lang.String)>(r1);

        if $z0 != 0 goto label2;

        $r9 = new java.lang.RuntimeException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("warning: useless exception \'");

        $r12 = r3[i4];

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' does not end with \'");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r17);

        throw $r9;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $i2 = lengthof r3;

        $r4 = newarray (char[])[$i2];

        r0.<org.apache.lucene.analysis.pt.RSLPStemmerBase$RuleWithSuffixExceptions: char[][] exceptions> = $r4;

        i5 = 0;

     label4:
        $i3 = lengthof r3;

        if i5 >= $i3 goto label5;

        $r6 = r0.<org.apache.lucene.analysis.pt.RSLPStemmerBase$RuleWithSuffixExceptions: char[][] exceptions>;

        $r5 = r3[i5];

        $r7 = virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

        $r6[i5] = $r7;

        i5 = i5 + 1;

        goto label4;

     label5:
        return;
    }

    public boolean matches(char[], int)
    {
        org.apache.lucene.analysis.pt.RSLPStemmerBase$RuleWithSuffixExceptions r0;
        char[][] $r2, $r3;
        int i0, $i1, i2;
        char[] r1, $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.analysis.pt.RSLPStemmerBase$RuleWithSuffixExceptions;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<org.apache.lucene.analysis.pt.RSLPStemmerBase$Rule: boolean matches(char[],int)>(r1, i0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        i2 = 0;

     label2:
        $r2 = r0.<org.apache.lucene.analysis.pt.RSLPStemmerBase$RuleWithSuffixExceptions: char[][] exceptions>;

        $i1 = lengthof $r2;

        if i2 >= $i1 goto label4;

        $r3 = r0.<org.apache.lucene.analysis.pt.RSLPStemmerBase$RuleWithSuffixExceptions: char[][] exceptions>;

        $r4 = $r3[i2];

        $z1 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,char[])>(r1, i0, $r4);

        if $z1 == 0 goto label3;

        return 0;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return 1;
    }
}
