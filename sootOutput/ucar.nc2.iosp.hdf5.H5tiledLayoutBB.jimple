class ucar.nc2.iosp.hdf5.H5tiledLayoutBB extends java.lang.Object implements ucar.nc2.iosp.LayoutBB
{
    private ucar.nc2.iosp.LayoutBBTiled delegate;
    private ucar.unidata.io.RandomAccessFile raf;
    private ucar.nc2.iosp.hdf5.H5header$Filter[] filters;
    private java.nio.ByteOrder byteOrder;
    private ucar.ma2.Section want;
    private int[] chunkSize;
    private int elemSize;
    private int nChunkDims;
    private boolean debug;
    static final boolean $assertionsDisabled;

    void <init>(ucar.nc2.Variable, ucar.ma2.Section, ucar.unidata.io.RandomAccessFile, ucar.nc2.iosp.hdf5.H5header$Filter[], java.nio.ByteOrder) throws ucar.ma2.InvalidRangeException, java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile r6;
        int[] $r2, $r11, $r12, $r13, $r14, $r15, $r16, $r23, $r29, $r30;
        ucar.nc2.iosp.LayoutBBTiled $r21;
        ucar.nc2.iosp.hdf5.H5header$Vinfo r5;
        boolean $z0, $z1, $z2, $z3;
        ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator $r19;
        ucar.ma2.DataType $r9, $r10, $r37;
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB r0;
        java.nio.ByteOrder r8;
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunkIterator $r20;
        ucar.nc2.iosp.hdf5.H5header$Filter[] r7;
        java.lang.StringBuilder $r24, $r26, $r27;
        ucar.ma2.Section $r3, $r17, $r22, $r31, $r32, r36;
        java.lang.AssertionError $r34, $r35;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        ucar.nc2.Variable r1;
        java.lang.String $r28;
        java.io.PrintStream $r25;
        ucar.nc2.iosp.hdf5.H5header$DataBTree $r18, $r33;
        java.lang.Object $r4;

        r0 := @this: ucar.nc2.iosp.hdf5.H5tiledLayoutBB;

        r1 := @parameter0: ucar.nc2.Variable;

        r36 := @parameter1: ucar.ma2.Section;

        r6 := @parameter2: ucar.unidata.io.RandomAccessFile;

        r7 := @parameter3: ucar.nc2.iosp.hdf5.H5header$Filter[];

        r8 := @parameter4: java.nio.ByteOrder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: boolean debug> = 0;

        $r2 = virtualinvoke r1.<ucar.nc2.Variable: int[] getShape()>();

        $r3 = staticinvoke <ucar.ma2.Section: ucar.ma2.Section fill(ucar.ma2.Section,int[])>(r36, $r2);

        $r4 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.Object getSPobject()>();

        r5 = (ucar.nc2.iosp.hdf5.H5header$Vinfo) $r4;

        $z0 = <ucar.nc2.iosp.hdf5.H5tiledLayoutBB: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z3 = r5.<ucar.nc2.iosp.hdf5.H5header$Vinfo: boolean isChunked>;

        if $z3 != 0 goto label1;

        $r35 = new java.lang.AssertionError;

        specialinvoke $r35.<java.lang.AssertionError: void <init>()>();

        throw $r35;

     label1:
        $z1 = <ucar.nc2.iosp.hdf5.H5tiledLayoutBB: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r33 = r5.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$DataBTree btree>;

        if $r33 != null goto label2;

        $r34 = new java.lang.AssertionError;

        specialinvoke $r34.<java.lang.AssertionError: void <init>()>();

        throw $r34;

     label2:
        r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: ucar.unidata.io.RandomAccessFile raf> = r6;

        r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: ucar.nc2.iosp.hdf5.H5header$Filter[] filters> = r7;

        r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: java.nio.ByteOrder byteOrder> = r8;

        $r9 = virtualinvoke r1.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r10 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r9 != $r10 goto label3;

        $i7 = virtualinvoke $r3.<ucar.ma2.Section: int getRank()>();

        $r30 = r5.<ucar.nc2.iosp.hdf5.H5header$Vinfo: int[] storageSize>;

        $i8 = lengthof $r30;

        if $i7 >= $i8 goto label3;

        $r31 = new ucar.ma2.Section;

        specialinvoke $r31.<ucar.ma2.Section: void <init>(ucar.ma2.Section)>($r3);

        $r32 = virtualinvoke $r31.<ucar.ma2.Section: ucar.ma2.Section appendRange(int)>(1);

        r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: ucar.ma2.Section want> = $r32;

        goto label4;

     label3:
        r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: ucar.ma2.Section want> = $r3;

     label4:
        $r37 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r9 != $r37 goto label5;

        $r29 = r5.<ucar.nc2.iosp.hdf5.H5header$Vinfo: int[] storageSize>;

        $i9 = lengthof $r29;

        goto label6;

     label5:
        $r11 = r5.<ucar.nc2.iosp.hdf5.H5header$Vinfo: int[] storageSize>;

        $i0 = lengthof $r11;

        $i9 = $i0 - 1;

     label6:
        r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: int nChunkDims> = $i9;

        $i1 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: int nChunkDims>;

        $r12 = newarray (int)[$i1];

        r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: int[] chunkSize> = $r12;

        $r14 = r5.<ucar.nc2.iosp.hdf5.H5header$Vinfo: int[] storageSize>;

        $r13 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: int[] chunkSize>;

        $i2 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: int nChunkDims>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r14, 0, $r13, 0, $i2);

        $r16 = r5.<ucar.nc2.iosp.hdf5.H5header$Vinfo: int[] storageSize>;

        $r15 = r5.<ucar.nc2.iosp.hdf5.H5header$Vinfo: int[] storageSize>;

        $i3 = lengthof $r15;

        $i4 = $i3 - 1;

        $i5 = $r16[$i4];

        r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: int elemSize> = $i5;

        $r18 = r5.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$DataBTree btree>;

        $r17 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: ucar.ma2.Section want>;

        $r19 = virtualinvoke $r18.<ucar.nc2.iosp.hdf5.H5header$DataBTree: ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator getDataChunkIterator(ucar.ma2.Section)>($r17);

        $r20 = new ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunkIterator;

        specialinvoke $r20.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunkIterator: void <init>(ucar.nc2.iosp.hdf5.H5tiledLayoutBB,ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator)>(r0, $r19);

        $r21 = new ucar.nc2.iosp.LayoutBBTiled;

        $r23 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: int[] chunkSize>;

        $i6 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: int elemSize>;

        $r22 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: ucar.ma2.Section want>;

        specialinvoke $r21.<ucar.nc2.iosp.LayoutBBTiled: void <init>(ucar.nc2.iosp.LayoutBBTiled$DataChunkIterator,int[],int,ucar.ma2.Section)>($r20, $r23, $i6, $r22);

        r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: ucar.nc2.iosp.LayoutBBTiled delegate> = $r21;

        $z2 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: boolean debug>;

        if $z2 == 0 goto label7;

        $r25 = <java.lang.System: java.io.PrintStream out>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" H5tiledLayout: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r28);

     label7:
        return;
    }

    public long getTotalNelems()
    {
        long $l0;
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB r0;
        ucar.nc2.iosp.LayoutBBTiled $r1;

        r0 := @this: ucar.nc2.iosp.hdf5.H5tiledLayoutBB;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: ucar.nc2.iosp.LayoutBBTiled delegate>;

        $l0 = virtualinvoke $r1.<ucar.nc2.iosp.LayoutBBTiled: long getTotalNelems()>();

        return $l0;
    }

    public int getElemSize()
    {
        int $i0;
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB r0;
        ucar.nc2.iosp.LayoutBBTiled $r1;

        r0 := @this: ucar.nc2.iosp.hdf5.H5tiledLayoutBB;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: ucar.nc2.iosp.LayoutBBTiled delegate>;

        $i0 = virtualinvoke $r1.<ucar.nc2.iosp.LayoutBBTiled: int getElemSize()>();

        return $i0;
    }

    public boolean hasNext()
    {
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB r0;
        ucar.nc2.iosp.LayoutBBTiled $r1;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.hdf5.H5tiledLayoutBB;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: ucar.nc2.iosp.LayoutBBTiled delegate>;

        $z0 = virtualinvoke $r1.<ucar.nc2.iosp.LayoutBBTiled: boolean hasNext()>();

        return $z0;
    }

    public ucar.nc2.iosp.LayoutBB$Chunk next() throws java.io.IOException
    {
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB r0;
        ucar.nc2.iosp.LayoutBBTiled $r1;
        ucar.nc2.iosp.LayoutBB$Chunk $r2;

        r0 := @this: ucar.nc2.iosp.hdf5.H5tiledLayoutBB;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: ucar.nc2.iosp.LayoutBBTiled delegate>;

        $r2 = virtualinvoke $r1.<ucar.nc2.iosp.LayoutBBTiled: ucar.nc2.iosp.LayoutBB$Chunk next()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        ucar.ma2.Section $r3;
        long $l1;
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB r2;
        int[] $r5, $r9;
        int $i0, $i2, $i3, i4;
        java.lang.StringBuilder $r0, $r1, $r4, $r6, $r7;
        java.lang.String $r8;

        r2 := @this: ucar.nc2.iosp.hdf5.H5tiledLayoutBB;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("want=");

        $r3 = r2.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: ucar.ma2.Section want>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("chunkSize=[");

        i4 = 0;

     label1:
        $r5 = r2.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: int[] chunkSize>;

        $i0 = lengthof $r5;

        if i4 >= $i0 goto label3;

        if i4 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label2:
        $r9 = r2.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: int[] chunkSize>;

        $i3 = $r9[i4];

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        i4 = i4 + 1;

        goto label1;

     label3:
        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] totalNelems=");

        $l1 = virtualinvoke r2.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: long getTotalNelems()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r7 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" elemSize=");

        $i2 = r2.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: int elemSize>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public volatile ucar.nc2.iosp.Layout$Chunk next() throws java.io.IOException
    {
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB r0;
        ucar.nc2.iosp.LayoutBB$Chunk $r1;

        r0 := @this: ucar.nc2.iosp.hdf5.H5tiledLayoutBB;

        $r1 = virtualinvoke r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: ucar.nc2.iosp.LayoutBB$Chunk next()>();

        return $r1;
    }

    static int access$000(ucar.nc2.iosp.hdf5.H5tiledLayoutBB)
    {
        int $i0;
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB r0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5tiledLayoutBB;

        $i0 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: int nChunkDims>;

        return $i0;
    }

    static ucar.unidata.io.RandomAccessFile access$100(ucar.nc2.iosp.hdf5.H5tiledLayoutBB)
    {
        ucar.unidata.io.RandomAccessFile $r1;
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB r0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5tiledLayoutBB;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: ucar.unidata.io.RandomAccessFile raf>;

        return $r1;
    }

    static ucar.nc2.iosp.hdf5.H5header$Filter[] access$200(ucar.nc2.iosp.hdf5.H5tiledLayoutBB)
    {
        ucar.nc2.iosp.hdf5.H5header$Filter[] $r1;
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB r0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5tiledLayoutBB;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: ucar.nc2.iosp.hdf5.H5header$Filter[] filters>;

        return $r1;
    }

    static boolean access$300(ucar.nc2.iosp.hdf5.H5tiledLayoutBB)
    {
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB r0;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5tiledLayoutBB;

        $z0 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: boolean debug>;

        return $z0;
    }

    static java.nio.ByteOrder access$400(ucar.nc2.iosp.hdf5.H5tiledLayoutBB)
    {
        java.nio.ByteOrder $r1;
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB r0;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5tiledLayoutBB;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB: java.nio.ByteOrder byteOrder>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lucar/nc2/iosp/hdf5/H5tiledLayoutBB;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <ucar.nc2.iosp.hdf5.H5tiledLayoutBB: boolean $assertionsDisabled> = $z1;

        return;
    }
}
