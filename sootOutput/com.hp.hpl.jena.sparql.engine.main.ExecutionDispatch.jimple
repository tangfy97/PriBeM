class com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch extends java.lang.Object implements com.hp.hpl.jena.sparql.algebra.OpVisitor
{
    private java.util.Deque stack;
    private com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor;

    void <init>(com.hp.hpl.jena.sparql.engine.main.OpExecutor)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor r2;
        java.util.ArrayDeque $r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.engine.main.OpExecutor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayDeque;

        specialinvoke $r1.<java.util.ArrayDeque: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: java.util.Deque stack> = $r1;

        r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor> = r2;

        return;
    }

    com.hp.hpl.jena.sparql.engine.QueryIterator exec(com.hp.hpl.jena.sparql.algebra.Op, com.hp.hpl.jena.sparql.engine.QueryIterator)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        java.util.Deque $r2, $r4;
        int $i0, $i1;
        com.hp.hpl.jena.sparql.engine.QueryIterator r1, $r5;
        com.hp.hpl.jena.sparql.algebra.Op r3;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r3 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        r1 := @parameter1: com.hp.hpl.jena.sparql.engine.QueryIterator;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>(r1);

        $r2 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: java.util.Deque stack>;

        $i0 = interfaceinvoke $r2.<java.util.Deque: int size()>();

        interfaceinvoke r3.<com.hp.hpl.jena.sparql.algebra.Op: void visit(com.hp.hpl.jena.sparql.algebra.OpVisitor)>(r0);

        $r4 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: java.util.Deque stack>;

        $i1 = interfaceinvoke $r4.<java.util.Deque: int size()>();

        if $i0 == $i1 goto label1;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r0, "Possible stack misalignment");

     label1:
        $r5 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        return $r5;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpBGP)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpBGP r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpBGP;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpBGP,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpQuadPattern)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;
        com.hp.hpl.jena.sparql.algebra.op.OpQuadPattern r2;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpQuadPattern;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpQuadPattern,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpQuadBlock)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.algebra.op.OpQuadBlock r2;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpQuadBlock;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpQuadBlock,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpTriple)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpTriple r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpTriple;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpTriple,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpQuad)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpQuad r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpQuad;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpQuad,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpPath)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpPath r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpPath;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpPath,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpProcedure)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.algebra.op.OpProcedure r2;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpProcedure;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpProcedure,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpPropFunc)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpPropFunc r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpPropFunc;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpPropFunc,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpJoin)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpJoin r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpJoin;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpJoin,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpSequence)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpSequence r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpSequence;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpSequence,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpDisjunction)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpDisjunction r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpDisjunction;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpDisjunction,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpLeftJoin)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpLeftJoin r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpLeftJoin;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpLeftJoin,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpDiff)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;
        com.hp.hpl.jena.sparql.algebra.op.OpDiff r2;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpDiff;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpDiff,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpMinus)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.algebra.op.OpMinus r2;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpMinus;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpMinus,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpUnion)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpUnion r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpUnion;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpUnion,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpConditional)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpConditional r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpConditional;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpConditional,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpFilter)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpFilter r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpFilter;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpFilter,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpGraph)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpGraph r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpGraph;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpGraph,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpService)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpService r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpService;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpService,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpDatasetNames)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpDatasetNames r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpDatasetNames;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpDatasetNames,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpTable)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpTable r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpTable;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpTable,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpExt)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpExt r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpExt;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpExt,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpNull)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpNull r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpNull;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpNull,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpLabel)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;
        com.hp.hpl.jena.sparql.algebra.op.OpLabel r2;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpLabel;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpLabel,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpList)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpList r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpList;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpList,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpOrder)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpOrder r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpOrder;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpOrder,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpProject)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpProject r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpProject;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpProject,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpDistinct)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpDistinct r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpDistinct;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpDistinct,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpReduced)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpReduced r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpReduced;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpReduced,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpAssign)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;
        com.hp.hpl.jena.sparql.algebra.op.OpAssign r2;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpAssign;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpAssign,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpExtend)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpExtend r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpExtend;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpExtend,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpSlice)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpSlice r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpSlice;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpSlice,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpGroup)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpGroup r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpGroup;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpGroup,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpTopN)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        com.hp.hpl.jena.sparql.algebra.op.OpTopN r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutor $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpTopN;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.QueryIterator pop()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: com.hp.hpl.jena.sparql.engine.main.OpExecutor opExecutor>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.op.OpTopN,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r2, $r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: void push(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        return;
    }

    private void push(com.hp.hpl.jena.sparql.engine.QueryIterator)
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        java.util.Deque $r2;
        com.hp.hpl.jena.sparql.engine.QueryIterator r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryIterator;

        $r2 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: java.util.Deque stack>;

        interfaceinvoke $r2.<java.util.Deque: void push(java.lang.Object)>(r1);

        return;
    }

    private com.hp.hpl.jena.sparql.engine.QueryIterator pop()
    {
        com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch r0;
        int $i0;
        java.lang.Object $r3;
        java.util.Deque $r1, $r2;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: java.util.Deque stack>;

        $i0 = interfaceinvoke $r1.<java.util.Deque: int size()>();

        if $i0 != 0 goto label1;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r0, "Warning: pop: empty stack");

     label1:
        $r2 = r0.<com.hp.hpl.jena.sparql.engine.main.ExecutionDispatch: java.util.Deque stack>;

        $r3 = interfaceinvoke $r2.<java.util.Deque: java.lang.Object pop()>();

        $r4 = (com.hp.hpl.jena.sparql.engine.QueryIterator) $r3;

        return $r4;
    }
}
