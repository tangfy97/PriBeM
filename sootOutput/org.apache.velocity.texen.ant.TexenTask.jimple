public class org.apache.velocity.texen.ant.TexenTask extends org.apache.tools.ant.Task
{
    private static final java.lang.String ERR_MSG_FRAGMENT;
    protected java.lang.String controlTemplate;
    protected java.lang.String templatePath;
    protected java.lang.String outputDirectory;
    protected java.lang.String outputFile;
    protected java.lang.String outputEncoding;
    protected java.lang.String inputEncoding;
    protected org.apache.commons.collections.ExtendedProperties contextProperties;
    protected boolean useClasspath;
    protected java.lang.String logFile;
    protected java.lang.String useResourceLoaderCache;
    protected java.lang.String resourceLoaderModificationCheckInterval;

    public void <init>()
    {
        org.apache.velocity.texen.ant.TexenTask r0;

        r0 := @this: org.apache.velocity.texen.ant.TexenTask;

        specialinvoke r0.<org.apache.tools.ant.Task: void <init>()>();

        r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String useResourceLoaderCache> = "false";

        r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String resourceLoaderModificationCheckInterval> = "2";

        return;
    }

    public void setControlTemplate(java.lang.String)
    {
        org.apache.velocity.texen.ant.TexenTask r0;
        java.lang.String r1;

        r0 := @this: org.apache.velocity.texen.ant.TexenTask;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String controlTemplate> = r1;

        return;
    }

    public java.lang.String getControlTemplate()
    {
        org.apache.velocity.texen.ant.TexenTask r0;
        java.lang.String $r1;

        r0 := @this: org.apache.velocity.texen.ant.TexenTask;

        $r1 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String controlTemplate>;

        return $r1;
    }

    public void setTemplatePath(java.lang.String) throws java.lang.Exception
    {
        java.io.PrintStream $r5;
        org.apache.velocity.texen.ant.TexenTask r3;
        java.io.File $r8;
        java.lang.StringBuffer $r0;
        java.util.StringTokenizer $r1;
        org.apache.tools.ant.Project $r6;
        java.lang.String r2, $r4, $r7, $r9;
        boolean $z0, $z1;

        r3 := @this: org.apache.velocity.texen.ant.TexenTask;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = new java.util.StringTokenizer;

        specialinvoke $r1.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r2, ",");

     label1:
        $z0 = virtualinvoke $r1.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label3;

        $r6 = r3.<org.apache.velocity.texen.ant.TexenTask: org.apache.tools.ant.Project project>;

        $r7 = virtualinvoke $r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r8 = virtualinvoke $r6.<org.apache.tools.ant.Project: java.io.File resolveFile(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.io.File: java.lang.String getCanonicalPath()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $z1 = virtualinvoke $r1.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

     label2:
        goto label1;

     label3:
        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        r3.<org.apache.velocity.texen.ant.TexenTask: java.lang.String templatePath> = $r4;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(r2);

        return;
    }

    public java.lang.String getTemplatePath()
    {
        org.apache.velocity.texen.ant.TexenTask r0;
        java.lang.String $r1;

        r0 := @this: org.apache.velocity.texen.ant.TexenTask;

        $r1 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String templatePath>;

        return $r1;
    }

    public void setOutputDirectory(java.io.File)
    {
        java.lang.Throwable $r6;
        org.apache.velocity.texen.ant.TexenTask r0;
        java.io.IOException $r3;
        org.apache.tools.ant.BuildException $r5;
        java.lang.String $r2;
        java.io.File r1;

        r0 := @this: org.apache.velocity.texen.ant.TexenTask;

        r1 := @parameter0: java.io.File;

     label1:
        $r2 = virtualinvoke r1.<java.io.File: java.lang.String getCanonicalPath()>();

        r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String outputDirectory> = $r2;

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r5 = new org.apache.tools.ant.BuildException;

        specialinvoke $r5.<org.apache.tools.ant.BuildException: void <init>(java.lang.Throwable)>($r3);

        $r6 = (java.lang.Throwable) $r5;

        throw $r6;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String getOutputDirectory()
    {
        org.apache.velocity.texen.ant.TexenTask r0;
        java.lang.String $r1;

        r0 := @this: org.apache.velocity.texen.ant.TexenTask;

        $r1 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String outputDirectory>;

        return $r1;
    }

    public void setOutputFile(java.lang.String)
    {
        org.apache.velocity.texen.ant.TexenTask r0;
        java.lang.String r1;

        r0 := @this: org.apache.velocity.texen.ant.TexenTask;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String outputFile> = r1;

        return;
    }

    public void setOutputEncoding(java.lang.String)
    {
        org.apache.velocity.texen.ant.TexenTask r0;
        java.lang.String r1;

        r0 := @this: org.apache.velocity.texen.ant.TexenTask;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String outputEncoding> = r1;

        return;
    }

    public void setInputEncoding(java.lang.String)
    {
        org.apache.velocity.texen.ant.TexenTask r0;
        java.lang.String r1;

        r0 := @this: org.apache.velocity.texen.ant.TexenTask;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String inputEncoding> = r1;

        return;
    }

    public java.lang.String getOutputFile()
    {
        org.apache.velocity.texen.ant.TexenTask r0;
        java.lang.String $r1;

        r0 := @this: org.apache.velocity.texen.ant.TexenTask;

        $r1 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String outputFile>;

        return $r1;
    }

    public void setLogFile(java.lang.String)
    {
        org.apache.velocity.texen.ant.TexenTask r0;
        java.lang.String r1;

        r0 := @this: org.apache.velocity.texen.ant.TexenTask;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String logFile> = r1;

        return;
    }

    public java.lang.String getLogFile()
    {
        org.apache.velocity.texen.ant.TexenTask r0;
        java.lang.String $r1;

        r0 := @this: org.apache.velocity.texen.ant.TexenTask;

        $r1 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String logFile>;

        return $r1;
    }

    public void setContextProperties(java.lang.String)
    {
        boolean $z0;
        java.lang.ClassLoader $r21;
        java.lang.Throwable $r39;
        java.lang.String[] $r1;
        java.lang.StringBuffer $r9, $r10, $r26, $r28, $r29, $r35, $r37;
        int $i0, i1;
        org.apache.tools.ant.Project $r6;
        java.lang.String r0, $r5, $r11, $r15, $r16, $r22, $r27, $r30, r32;
        org.apache.velocity.texen.ant.TexenTask r2;
        java.util.Iterator $r13;
        java.io.IOException $r18, $r19;
        org.apache.tools.ant.BuildException $r38;
        java.io.FileInputStream $r36;
        org.apache.commons.collections.ExtendedProperties $r17, r31, $r33, $r34;
        java.io.File $r7;
        java.lang.Object $r14;
        java.lang.Class $r20;
        java.io.InputStream $r23;

        r2 := @this: org.apache.velocity.texen.ant.TexenTask;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.velocity.util.StringUtils: java.lang.String[] split(java.lang.String,java.lang.String)>(r0, ",");

        $r33 = new org.apache.commons.collections.ExtendedProperties;

        specialinvoke $r33.<org.apache.commons.collections.ExtendedProperties: void <init>()>();

        r2.<org.apache.velocity.texen.ant.TexenTask: org.apache.commons.collections.ExtendedProperties contextProperties> = $r33;

        i1 = 0;

     label01:
        $i0 = lengthof $r1;

        if i1 >= $i0 goto label12;

        $r34 = new org.apache.commons.collections.ExtendedProperties;

        specialinvoke $r34.<org.apache.commons.collections.ExtendedProperties: void <init>()>();

        r31 = $r34;

     label02:
        $r6 = r2.<org.apache.velocity.texen.ant.TexenTask: org.apache.tools.ant.Project project>;

        $r5 = $r1[i1];

        $r7 = virtualinvoke $r6.<org.apache.tools.ant.Project: java.io.File resolveFile(java.lang.String)>($r5);

        $r35 = new java.lang.StringBuffer;

        specialinvoke $r35.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Using contextProperties file: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<org.apache.velocity.texen.ant.TexenTask: void log(java.lang.String)>($r11);

        $r36 = new java.io.FileInputStream;

        specialinvoke $r36.<java.io.FileInputStream: void <init>(java.io.File)>($r7);

        virtualinvoke $r34.<org.apache.commons.collections.ExtendedProperties: void load(java.io.InputStream)>($r36);

     label03:
        goto label09;

     label04:
        $r19 := @caughtexception;

        $r20 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r21 = virtualinvoke $r20.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label05:
        $r22 = $r1[i1];

        $r23 = virtualinvoke $r21.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>($r22);

        if $r23 != null goto label06;

        $r38 = new org.apache.tools.ant.BuildException;

        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Context properties file ");

        $r27 = $r1[i1];

        $r28 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" could not be found in the file system or on the classpath!");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r38.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>($r30);

        $r39 = (java.lang.Throwable) $r38;

        throw $r39;

     label06:
        virtualinvoke $r34.<org.apache.commons.collections.ExtendedProperties: void load(java.io.InputStream)>($r23);

     label07:
        goto label09;

     label08:
        $r18 := @caughtexception;

        r31 = null;

     label09:
        if r31 == null goto label11;

        $r13 = virtualinvoke r31.<org.apache.commons.collections.ExtendedProperties: java.util.Iterator getKeys()>();

     label10:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r32 = (java.lang.String) $r14;

        $r15 = virtualinvoke r31.<org.apache.commons.collections.ExtendedProperties: java.lang.String getString(java.lang.String)>(r32);

        $r16 = staticinvoke <org.apache.velocity.util.StringUtils: java.lang.String nullTrim(java.lang.String)>($r15);

        $r17 = r2.<org.apache.velocity.texen.ant.TexenTask: org.apache.commons.collections.ExtendedProperties contextProperties>;

        virtualinvoke $r17.<org.apache.commons.collections.ExtendedProperties: void setProperty(java.lang.String,java.lang.Object)>(r32, $r16);

        goto label10;

     label11:
        i1 = i1 + 1;

        goto label01;

     label12:
        return;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.io.IOException from label05 to label07 with label08;
    }

    public org.apache.commons.collections.ExtendedProperties getContextProperties()
    {
        org.apache.velocity.texen.ant.TexenTask r0;
        org.apache.commons.collections.ExtendedProperties $r1;

        r0 := @this: org.apache.velocity.texen.ant.TexenTask;

        $r1 = r0.<org.apache.velocity.texen.ant.TexenTask: org.apache.commons.collections.ExtendedProperties contextProperties>;

        return $r1;
    }

    public void setUseClasspath(boolean)
    {
        org.apache.velocity.texen.ant.TexenTask r0;
        boolean z0;

        r0 := @this: org.apache.velocity.texen.ant.TexenTask;

        z0 := @parameter0: boolean;

        r0.<org.apache.velocity.texen.ant.TexenTask: boolean useClasspath> = z0;

        return;
    }

    public void setUseResourceLoaderCache(java.lang.String)
    {
        org.apache.velocity.texen.ant.TexenTask r0;
        java.lang.String r1;

        r0 := @this: org.apache.velocity.texen.ant.TexenTask;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String useResourceLoaderCache> = r1;

        return;
    }

    public void setResourceLoaderModificationCheckInterval(java.lang.String)
    {
        org.apache.velocity.texen.ant.TexenTask r0;
        java.lang.String r1;

        r0 := @this: org.apache.velocity.texen.ant.TexenTask;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String resourceLoaderModificationCheckInterval> = r1;

        return;
    }

    public org.apache.velocity.context.Context initControlContext() throws java.lang.Exception
    {
        org.apache.velocity.texen.ant.TexenTask r1;
        org.apache.velocity.VelocityContext $r0;

        r1 := @this: org.apache.velocity.texen.ant.TexenTask;

        $r0 = new org.apache.velocity.VelocityContext;

        specialinvoke $r0.<org.apache.velocity.VelocityContext: void <init>()>();

        return $r0;
    }

    public void execute() throws org.apache.tools.ant.BuildException
    {
        java.lang.Integer $r92;
        org.apache.velocity.context.Context $r29;
        java.lang.Exception $r54;
        java.lang.Throwable $r72, $r73, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105;
        java.lang.StringBuffer $r17, $r19, $r21, $r24, $r25, $r45, $r47, $r63, $r65, $r66, $r68, $r69, $r70, $r88, $r90, $r91, $r93;
        java.lang.String $r1, $r2, $r3, $r4, $r6, $r7, $r9, $r10, $r11, $r12, $r14, $r16, $r18, $r20, $r22, $r26, $r27, $r31, $r32, $r37, $r38, $r40, $r41, $r42, $r43, $r46, $r48, $r49, $r64, $r67, $r71, $r76, $r79, r81, r82;
        org.apache.velocity.exception.ParseErrorException $r58;
        java.lang.NumberFormatException $r74;
        org.apache.tools.ant.BuildException $r83, $r84, $r85, $r86, $r94, $r95, $r96, $r97;
        org.apache.commons.collections.ExtendedProperties $r30, $r33, $r36, $r75;
        java.io.File $r78, $r89;
        org.apache.velocity.exception.ResourceNotFoundException $r56;
        org.apache.velocity.texen.Generator $r8;
        org.apache.velocity.app.VelocityEngine $r87;
        org.apache.velocity.exception.MethodInvocationException $r60;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.io.Writer $r28;
        int $i0, $i1;
        org.apache.tools.ant.Project $r77;
        java.lang.Boolean $r80;
        org.apache.velocity.texen.ant.TexenTask r0;
        java.util.Iterator $r34;
        java.lang.Object $r35;

        r0 := @this: org.apache.velocity.texen.ant.TexenTask;

        $r1 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String templatePath>;

        if $r1 != null goto label01;

        $z3 = r0.<org.apache.velocity.texen.ant.TexenTask: boolean useClasspath>;

        if $z3 != 0 goto label01;

        $r83 = new org.apache.tools.ant.BuildException;

        specialinvoke $r83.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>("The template path needs to be defined if you are not using the classpath for locating templates!");

        $r98 = (java.lang.Throwable) $r83;

        throw $r98;

     label01:
        $r2 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String controlTemplate>;

        if $r2 != null goto label02;

        $r84 = new org.apache.tools.ant.BuildException;

        specialinvoke $r84.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>("The control template needs to be defined!");

        $r99 = (java.lang.Throwable) $r84;

        throw $r99;

     label02:
        $r3 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String outputDirectory>;

        if $r3 != null goto label03;

        $r85 = new org.apache.tools.ant.BuildException;

        specialinvoke $r85.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>("The output directory needs to be defined!");

        $r100 = (java.lang.Throwable) $r85;

        throw $r100;

     label03:
        $r4 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String outputFile>;

        if $r4 != null goto label04;

        $r86 = new org.apache.tools.ant.BuildException;

        specialinvoke $r86.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>("The output file needs to be defined!");

        $r101 = (java.lang.Throwable) $r86;

        throw $r101;

     label04:
        $r87 = new org.apache.velocity.app.VelocityEngine;

        specialinvoke $r87.<org.apache.velocity.app.VelocityEngine: void <init>()>();

     label05:
        $r6 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String templatePath>;

        if $r6 == null goto label06;

        $r88 = new java.lang.StringBuffer;

        specialinvoke $r88.<java.lang.StringBuffer: void <init>()>();

        $r45 = virtualinvoke $r88.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Using templatePath: ");

        $r46 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String templatePath>;

        $r47 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.velocity.texen.ant.TexenTask: void log(java.lang.String,int)>($r48, 3);

        $r49 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String templatePath>;

        virtualinvoke $r87.<org.apache.velocity.app.VelocityEngine: void setProperty(java.lang.String,java.lang.Object)>("file.resource.loader.path", $r49);

     label06:
        $z0 = r0.<org.apache.velocity.texen.ant.TexenTask: boolean useClasspath>;

        if $z0 == 0 goto label07;

        virtualinvoke r0.<org.apache.velocity.texen.ant.TexenTask: void log(java.lang.String)>("Using classpath");

        virtualinvoke $r87.<org.apache.velocity.app.VelocityEngine: void addProperty(java.lang.String,java.lang.Object)>("resource.loader", "classpath");

        virtualinvoke $r87.<org.apache.velocity.app.VelocityEngine: void setProperty(java.lang.String,java.lang.Object)>("classpath.resource.loader.class", "org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader");

        $r42 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String useResourceLoaderCache>;

        virtualinvoke $r87.<org.apache.velocity.app.VelocityEngine: void setProperty(java.lang.String,java.lang.Object)>("classpath.resource.loader.cache", $r42);

        $r43 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String resourceLoaderModificationCheckInterval>;

        virtualinvoke $r87.<org.apache.velocity.app.VelocityEngine: void setProperty(java.lang.String,java.lang.Object)>("classpath.resource.loader.modificationCheckInterval", $r43);

     label07:
        $r7 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String logFile>;

        if $r7 == null goto label08;

        $r41 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String logFile>;

        virtualinvoke $r87.<org.apache.velocity.app.VelocityEngine: void setProperty(java.lang.String,java.lang.Object)>("runtime.log", $r41);

     label08:
        virtualinvoke $r87.<org.apache.velocity.app.VelocityEngine: void init()>();

        $r8 = staticinvoke <org.apache.velocity.texen.Generator: org.apache.velocity.texen.Generator getInstance()>();

        virtualinvoke $r8.<org.apache.velocity.texen.Generator: void setVelocityEngine(org.apache.velocity.app.VelocityEngine)>($r87);

        $r9 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String outputDirectory>;

        virtualinvoke $r8.<org.apache.velocity.texen.Generator: void setOutputPath(java.lang.String)>($r9);

        $r10 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String inputEncoding>;

        virtualinvoke $r8.<org.apache.velocity.texen.Generator: void setInputEncoding(java.lang.String)>($r10);

        $r11 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String outputEncoding>;

        virtualinvoke $r8.<org.apache.velocity.texen.Generator: void setOutputEncoding(java.lang.String)>($r11);

        $r12 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String templatePath>;

        if $r12 == null goto label09;

        $r40 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String templatePath>;

        virtualinvoke $r8.<org.apache.velocity.texen.Generator: void setTemplatePath(java.lang.String)>($r40);

     label09:
        $r89 = new java.io.File;

        $r14 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String outputDirectory>;

        specialinvoke $r89.<java.io.File: void <init>(java.lang.String)>($r14);

        $z1 = virtualinvoke $r89.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label10;

        virtualinvoke $r89.<java.io.File: boolean mkdirs()>();

     label10:
        $r90 = new java.lang.StringBuffer;

        specialinvoke $r90.<java.lang.StringBuffer: void <init>()>();

        $r16 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String outputDirectory>;

        $r17 = virtualinvoke $r90.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = <java.io.File: java.lang.String separator>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String outputFile>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        $r91 = new java.lang.StringBuffer;

        specialinvoke $r91.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r91.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Generating to file ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.velocity.texen.ant.TexenTask: void log(java.lang.String,int)>($r26, 2);

        $r27 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String outputEncoding>;

        $r28 = virtualinvoke $r8.<org.apache.velocity.texen.Generator: java.io.Writer getWriter(java.lang.String,java.lang.String)>($r22, $r27);

        $r29 = virtualinvoke r0.<org.apache.velocity.texen.ant.TexenTask: org.apache.velocity.context.Context initControlContext()>();

        virtualinvoke r0.<org.apache.velocity.texen.ant.TexenTask: void populateInitialContext(org.apache.velocity.context.Context)>($r29);

        $r30 = r0.<org.apache.velocity.texen.ant.TexenTask: org.apache.commons.collections.ExtendedProperties contextProperties>;

        if $r30 == null goto label18;

        $r33 = r0.<org.apache.velocity.texen.ant.TexenTask: org.apache.commons.collections.ExtendedProperties contextProperties>;

        $r34 = virtualinvoke $r33.<org.apache.commons.collections.ExtendedProperties: java.util.Iterator getKeys()>();

     label11:
        $z2 = interfaceinvoke $r34.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label18;

        $r35 = interfaceinvoke $r34.<java.util.Iterator: java.lang.Object next()>();

        r81 = (java.lang.String) $r35;

        $r36 = r0.<org.apache.velocity.texen.ant.TexenTask: org.apache.commons.collections.ExtendedProperties contextProperties>;

        $r37 = virtualinvoke $r36.<org.apache.commons.collections.ExtendedProperties: java.lang.String getString(java.lang.String)>(r81);

        $r38 = staticinvoke <org.apache.velocity.util.StringUtils: java.lang.String nullTrim(java.lang.String)>($r37);

        r82 = $r38;

     label12:
        $r92 = new java.lang.Integer;

        specialinvoke $r92.<java.lang.Integer: void <init>(java.lang.String)>($r38);

        interfaceinvoke $r29.<org.apache.velocity.context.Context: java.lang.Object put(java.lang.String,java.lang.Object)>(r81, $r92);

     label13:
        goto label17;

     label14:
        $r74 := @caughtexception;

        $r75 = r0.<org.apache.velocity.texen.ant.TexenTask: org.apache.commons.collections.ExtendedProperties contextProperties>;

        $r76 = virtualinvoke $r75.<org.apache.commons.collections.ExtendedProperties: java.lang.String testBoolean(java.lang.String)>($r38);

        if $r76 == null goto label15;

        $r80 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r76);

        interfaceinvoke $r29.<org.apache.velocity.context.Context: java.lang.Object put(java.lang.String,java.lang.Object)>(r81, $r80);

        goto label17;

     label15:
        $z4 = virtualinvoke r81.<java.lang.String: boolean endsWith(java.lang.String)>("file.contents");

        if $z4 == 0 goto label16;

        $r77 = r0.<org.apache.velocity.texen.ant.TexenTask: org.apache.tools.ant.Project project>;

        $r78 = virtualinvoke $r77.<org.apache.tools.ant.Project: java.io.File resolveFile(java.lang.String)>($r38);

        $r79 = virtualinvoke $r78.<java.io.File: java.lang.String getCanonicalPath()>();

        r82 = staticinvoke <org.apache.velocity.util.StringUtils: java.lang.String fileContentsToString(java.lang.String)>($r79);

        $i0 = virtualinvoke r81.<java.lang.String: int indexOf(java.lang.String)>("file.contents");

        $i1 = $i0 - 1;

        r81 = virtualinvoke r81.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label16:
        interfaceinvoke $r29.<org.apache.velocity.context.Context: java.lang.Object put(java.lang.String,java.lang.Object)>(r81, r82);

     label17:
        goto label11;

     label18:
        $r31 = r0.<org.apache.velocity.texen.ant.TexenTask: java.lang.String controlTemplate>;

        $r32 = virtualinvoke $r8.<org.apache.velocity.texen.Generator: java.lang.String parse(java.lang.String,org.apache.velocity.context.Context)>($r31, $r29);

        virtualinvoke $r28.<java.io.Writer: void write(java.lang.String)>($r32);

        virtualinvoke $r28.<java.io.Writer: void flush()>();

        virtualinvoke $r28.<java.io.Writer: void close()>();

        virtualinvoke $r8.<org.apache.velocity.texen.Generator: void shutdown()>();

        virtualinvoke r0.<org.apache.velocity.texen.ant.TexenTask: void cleanup()>();

     label19:
        goto label25;

     label20:
        $r73 := @caughtexception;

        throw $r73;

     label21:
        $r60 := @caughtexception;

        $r94 = new org.apache.tools.ant.BuildException;

        $r93 = new java.lang.StringBuffer;

        specialinvoke $r93.<java.lang.StringBuffer: void <init>()>();

        $r63 = virtualinvoke $r93.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Exception thrown by \'");

        $r64 = virtualinvoke $r60.<org.apache.velocity.exception.MethodInvocationException: java.lang.String getReferenceName()>();

        $r65 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r64);

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r67 = virtualinvoke $r60.<org.apache.velocity.exception.MethodInvocationException: java.lang.String getMethodName()>();

        $r68 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r67);

        $r69 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r70 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(". For more information consult the velocity log, or invoke ant with the -debug flag.");

        $r71 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.String toString()>();

        $r72 = virtualinvoke $r60.<org.apache.velocity.exception.MethodInvocationException: java.lang.Throwable getWrappedThrowable()>();

        specialinvoke $r94.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,java.lang.Throwable)>($r71, $r72);

        $r102 = (java.lang.Throwable) $r94;

        throw $r102;

     label22:
        $r58 := @caughtexception;

        $r95 = new org.apache.tools.ant.BuildException;

        specialinvoke $r95.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,java.lang.Throwable)>("Velocity syntax error. For more information consult the velocity log, or invoke ant with the -debug flag.", $r58);

        $r103 = (java.lang.Throwable) $r95;

        throw $r103;

     label23:
        $r56 := @caughtexception;

        $r96 = new org.apache.tools.ant.BuildException;

        specialinvoke $r96.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,java.lang.Throwable)>("Resource not found. For more information consult the velocity log, or invoke ant with the -debug flag.", $r56);

        $r104 = (java.lang.Throwable) $r96;

        throw $r104;

     label24:
        $r54 := @caughtexception;

        $r97 = new org.apache.tools.ant.BuildException;

        specialinvoke $r97.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,java.lang.Throwable)>("Generation failed. For more information consult the velocity log, or invoke ant with the -debug flag.", $r54);

        $r105 = (java.lang.Throwable) $r97;

        throw $r105;

     label25:
        return;

        catch java.lang.NumberFormatException from label12 to label13 with label14;
        catch org.apache.tools.ant.BuildException from label05 to label19 with label20;
        catch org.apache.velocity.exception.MethodInvocationException from label05 to label19 with label21;
        catch org.apache.velocity.exception.ParseErrorException from label05 to label19 with label22;
        catch org.apache.velocity.exception.ResourceNotFoundException from label05 to label19 with label23;
        catch java.lang.Exception from label05 to label19 with label24;
    }

    protected void populateInitialContext(org.apache.velocity.context.Context) throws java.lang.Exception
    {
        org.apache.velocity.context.Context r0;
        org.apache.velocity.texen.ant.TexenTask r3;
        java.util.Date $r1;
        java.lang.String $r2;

        r3 := @this: org.apache.velocity.texen.ant.TexenTask;

        r0 := @parameter0: org.apache.velocity.context.Context;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>()>();

        $r2 = virtualinvoke $r1.<java.util.Date: java.lang.String toString()>();

        interfaceinvoke r0.<org.apache.velocity.context.Context: java.lang.Object put(java.lang.String,java.lang.Object)>("now", $r2);

        return;
    }

    protected void cleanup() throws java.lang.Exception
    {
        org.apache.velocity.texen.ant.TexenTask r0;

        r0 := @this: org.apache.velocity.texen.ant.TexenTask;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.velocity.texen.ant.TexenTask: java.lang.String ERR_MSG_FRAGMENT> = ". For more information consult the velocity log, or invoke ant with the -debug flag.";

        return;
    }
}
