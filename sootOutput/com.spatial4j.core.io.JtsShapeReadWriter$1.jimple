class com.spatial4j.core.io.JtsShapeReadWriter$1 extends java.lang.Object implements com.vividsolutions.jts.geom.CoordinateSequenceFilter
{
    boolean changed;
    final com.spatial4j.core.io.JtsShapeReadWriter this$0;

    void <init>(com.spatial4j.core.io.JtsShapeReadWriter)
    {
        com.spatial4j.core.io.JtsShapeReadWriter r1;
        com.spatial4j.core.io.JtsShapeReadWriter$1 r0;

        r0 := @this: com.spatial4j.core.io.JtsShapeReadWriter$1;

        r1 := @parameter0: com.spatial4j.core.io.JtsShapeReadWriter;

        r0.<com.spatial4j.core.io.JtsShapeReadWriter$1: com.spatial4j.core.io.JtsShapeReadWriter this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.spatial4j.core.io.JtsShapeReadWriter$1: boolean changed> = 0;

        return;
    }

    public void filter(com.vividsolutions.jts.geom.CoordinateSequence, int)
    {
        com.spatial4j.core.io.JtsShapeReadWriter $r2, $r5, $r8, $r11;
        byte $b1, $b2;
        int i0;
        com.spatial4j.core.context.jts.JtsSpatialContext $r4, $r7, $r10;
        double $d0, $d1, $d2, $d3;
        boolean $z0, $z1;
        com.spatial4j.core.context.SpatialContext $r3, $r6, $r9;
        com.vividsolutions.jts.geom.CoordinateSequence r0;
        com.spatial4j.core.io.JtsShapeReadWriter$1 r1;

        r1 := @this: com.spatial4j.core.io.JtsShapeReadWriter$1;

        r0 := @parameter0: com.vividsolutions.jts.geom.CoordinateSequence;

        i0 := @parameter1: int;

        $d0 = interfaceinvoke r0.<com.vividsolutions.jts.geom.CoordinateSequence: double getX(int)>(i0);

        $d1 = interfaceinvoke r0.<com.vividsolutions.jts.geom.CoordinateSequence: double getY(int)>(i0);

        $r2 = r1.<com.spatial4j.core.io.JtsShapeReadWriter$1: com.spatial4j.core.io.JtsShapeReadWriter this$0>;

        $r3 = $r2.<com.spatial4j.core.io.JtsShapeReadWriter: com.spatial4j.core.context.SpatialContext ctx>;

        $r4 = (com.spatial4j.core.context.jts.JtsSpatialContext) $r3;

        $z0 = virtualinvoke $r4.<com.spatial4j.core.context.jts.JtsSpatialContext: boolean isGeo()>();

        if $z0 == 0 goto label3;

        $r11 = r1.<com.spatial4j.core.io.JtsShapeReadWriter$1: com.spatial4j.core.io.JtsShapeReadWriter this$0>;

        $z1 = staticinvoke <com.spatial4j.core.io.JtsShapeReadWriter: boolean access$000(com.spatial4j.core.io.JtsShapeReadWriter)>($r11);

        if $z1 == 0 goto label3;

        $d2 = staticinvoke <com.spatial4j.core.distance.DistanceUtils: double normLonDEG(double)>($d0);

        $b1 = $d0 cmpl $d2;

        if $b1 == 0 goto label1;

        r1.<com.spatial4j.core.io.JtsShapeReadWriter$1: boolean changed> = 1;

        interfaceinvoke r0.<com.vividsolutions.jts.geom.CoordinateSequence: void setOrdinate(int,int,double)>(i0, 0, $d2);

     label1:
        $d3 = staticinvoke <com.spatial4j.core.distance.DistanceUtils: double normLatDEG(double)>($d1);

        $b2 = $d1 cmpl $d3;

        if $b2 == 0 goto label2;

        r1.<com.spatial4j.core.io.JtsShapeReadWriter$1: boolean changed> = 1;

        interfaceinvoke r0.<com.vividsolutions.jts.geom.CoordinateSequence: void setOrdinate(int,int,double)>(i0, 1, $d3);

     label2:
        goto label4;

     label3:
        $r5 = r1.<com.spatial4j.core.io.JtsShapeReadWriter$1: com.spatial4j.core.io.JtsShapeReadWriter this$0>;

        $r6 = $r5.<com.spatial4j.core.io.JtsShapeReadWriter: com.spatial4j.core.context.SpatialContext ctx>;

        $r7 = (com.spatial4j.core.context.jts.JtsSpatialContext) $r6;

        virtualinvoke $r7.<com.spatial4j.core.context.jts.JtsSpatialContext: void verifyX(double)>($d0);

        $r8 = r1.<com.spatial4j.core.io.JtsShapeReadWriter$1: com.spatial4j.core.io.JtsShapeReadWriter this$0>;

        $r9 = $r8.<com.spatial4j.core.io.JtsShapeReadWriter: com.spatial4j.core.context.SpatialContext ctx>;

        $r10 = (com.spatial4j.core.context.jts.JtsSpatialContext) $r9;

        virtualinvoke $r10.<com.spatial4j.core.context.jts.JtsSpatialContext: void verifyY(double)>($d1);

     label4:
        return;
    }

    public boolean isDone()
    {
        com.spatial4j.core.io.JtsShapeReadWriter$1 r0;

        r0 := @this: com.spatial4j.core.io.JtsShapeReadWriter$1;

        return 0;
    }

    public boolean isGeometryChanged()
    {
        com.spatial4j.core.io.JtsShapeReadWriter$1 r0;
        boolean $z0;

        r0 := @this: com.spatial4j.core.io.JtsShapeReadWriter$1;

        $z0 = r0.<com.spatial4j.core.io.JtsShapeReadWriter$1: boolean changed>;

        return $z0;
    }
}
