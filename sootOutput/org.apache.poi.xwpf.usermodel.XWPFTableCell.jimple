public class org.apache.poi.xwpf.usermodel.XWPFTableCell extends java.lang.Object implements org.apache.poi.xwpf.usermodel.IBody, org.apache.poi.xwpf.usermodel.ICell
{
    private final org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc ctTc;
    protected java.util.List paragraphs;
    protected java.util.List tables;
    protected java.util.List bodyElements;
    protected org.apache.poi.xwpf.usermodel.IBody part;
    private org.apache.poi.xwpf.usermodel.XWPFTableRow tableRow;
    private static java.util.EnumMap alignMap;
    private static java.util.HashMap stVertAlignTypeMap;

    public void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc, org.apache.poi.xwpf.usermodel.XWPFTableRow, org.apache.poi.xwpf.usermodel.IBody)
    {
        org.apache.poi.xwpf.usermodel.IBody r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc r1, $r8;
        org.apache.poi.xwpf.usermodel.XWPFParagraph $r24;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.poi.xwpf.usermodel.XWPFTable $r20;
        org.apache.poi.xwpf.usermodel.XWPFTableCell r0;
        java.util.List $r4, $r16, $r19, $r22, $r23, $r26, $r27;
        org.apache.poi.xwpf.usermodel.ISDTContent $r14;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP $r25;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl $r21;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtRun $r12;
        org.apache.xmlbeans.XmlCursor $r9;
        java.util.ArrayList $r5, $r6, $r7;
        org.apache.poi.xwpf.usermodel.XWPFTableRow r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtBlock $r18;
        int $i0;
        org.apache.xmlbeans.XmlObject $r10;
        java.lang.String $r15;
        org.apache.poi.xwpf.usermodel.XWPFSDT $r11, $r17;
        java.io.PrintStream $r13;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        r1 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc;

        r3 := @parameter1: org.apache.poi.xwpf.usermodel.XWPFTableRow;

        r2 := @parameter2: org.apache.poi.xwpf.usermodel.IBody;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List paragraphs> = null;

        r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List tables> = null;

        r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List bodyElements> = null;

        r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.apache.poi.xwpf.usermodel.XWPFTableRow tableRow> = null;

        r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc ctTc> = r1;

        r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.apache.poi.xwpf.usermodel.IBody part> = r2;

        r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.apache.poi.xwpf.usermodel.XWPFTableRow tableRow> = r3;

        $r4 = interfaceinvoke r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc: java.util.List getPList()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 >= 1 goto label1;

        interfaceinvoke r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP addNewP()>();

     label1:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List bodyElements> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List paragraphs> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List tables> = $r7;

        $r8 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc ctTc>;

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke $r9.<org.apache.xmlbeans.XmlCursor: void selectPath(java.lang.String)>("./*");

     label2:
        $z4 = interfaceinvoke $r9.<org.apache.xmlbeans.XmlCursor: boolean toNextSelection()>();

        if $z4 == 0 goto label7;

        $r10 = interfaceinvoke $r9.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        $z0 = $r10 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP;

        if $z0 == 0 goto label3;

        $r24 = new org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r25 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP) $r10;

        specialinvoke $r24.<org.apache.poi.xwpf.usermodel.XWPFParagraph: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP,org.apache.poi.xwpf.usermodel.IBody)>($r25, r0);

        $r26 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List paragraphs>;

        interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>($r24);

        $r27 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List bodyElements>;

        interfaceinvoke $r27.<java.util.List: boolean add(java.lang.Object)>($r24);

     label3:
        $z1 = $r10 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl;

        if $z1 == 0 goto label4;

        $r20 = new org.apache.poi.xwpf.usermodel.XWPFTable;

        $r21 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl) $r10;

        specialinvoke $r20.<org.apache.poi.xwpf.usermodel.XWPFTable: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl,org.apache.poi.xwpf.usermodel.IBody)>($r21, r0);

        $r22 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List tables>;

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>($r20);

        $r23 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List bodyElements>;

        interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>($r20);

     label4:
        $z2 = $r10 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtBlock;

        if $z2 == 0 goto label5;

        $r17 = new org.apache.poi.xwpf.usermodel.XWPFSDT;

        $r18 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtBlock) $r10;

        specialinvoke $r17.<org.apache.poi.xwpf.usermodel.XWPFSDT: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtBlock,org.apache.poi.xwpf.usermodel.IBody)>($r18, r0);

        $r19 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List bodyElements>;

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r17);

     label5:
        $z3 = $r10 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtRun;

        if $z3 == 0 goto label6;

        $r11 = new org.apache.poi.xwpf.usermodel.XWPFSDT;

        $r12 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtRun) $r10;

        specialinvoke $r11.<org.apache.poi.xwpf.usermodel.XWPFSDT: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtRun,org.apache.poi.xwpf.usermodel.IBody)>($r12, r0);

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r14 = virtualinvoke $r11.<org.apache.poi.xwpf.usermodel.XWPFSDT: org.apache.poi.xwpf.usermodel.ISDTContent getContent()>();

        $r15 = interfaceinvoke $r14.<org.apache.poi.xwpf.usermodel.ISDTContent: java.lang.String getText()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r15);

        $r16 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List bodyElements>;

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r11);

     label6:
        goto label2;

     label7:
        interfaceinvoke $r9.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return;
    }

    public org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc getCTTc()
    {
        org.apache.poi.xwpf.usermodel.XWPFTableCell r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc $r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc ctTc>;

        return $r1;
    }

    public java.util.List getBodyElements()
    {
        java.util.List $r1, $r2;
        org.apache.poi.xwpf.usermodel.XWPFTableCell r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List bodyElements>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public void setParagraph(org.apache.poi.xwpf.usermodel.XWPFParagraph)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc $r1, $r3, $r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP $r4;
        int $i0;
        org.apache.poi.xwpf.usermodel.XWPFTableCell r0;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        r2 := @parameter0: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc ctTc>;

        $i0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc: int sizeOfPArray()>();

        if $i0 != 0 goto label1;

        $r5 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc ctTc>;

        interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP addNewP()>();

     label1:
        $r3 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc ctTc>;

        $r4 = virtualinvoke r2.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP getCTP()>();

        interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc: void setPArray(int,org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP)>(0, $r4);

        return;
    }

    public java.util.List getParagraphs()
    {
        java.util.List $r1;
        org.apache.poi.xwpf.usermodel.XWPFTableCell r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List paragraphs>;

        return $r1;
    }

    public org.apache.poi.xwpf.usermodel.XWPFParagraph addParagraph()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP $r3;
        org.apache.poi.xwpf.usermodel.XWPFTableCell r1;
        org.apache.poi.xwpf.usermodel.XWPFParagraph $r0;

        r1 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        $r0 = new org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r2 = r1.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc ctTc>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP addNewP()>();

        specialinvoke $r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP,org.apache.poi.xwpf.usermodel.IBody)>($r3, r1);

        virtualinvoke r1.<org.apache.poi.xwpf.usermodel.XWPFTableCell: void addParagraph(org.apache.poi.xwpf.usermodel.XWPFParagraph)>($r0);

        return $r0;
    }

    public void addParagraph(org.apache.poi.xwpf.usermodel.XWPFParagraph)
    {
        java.util.List $r2;
        org.apache.poi.xwpf.usermodel.XWPFTableCell r0;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        r1 := @parameter0: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List paragraphs>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeParagraph(int)
    {
        java.util.List $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc $r2;
        int i0;
        org.apache.poi.xwpf.usermodel.XWPFTableCell r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List paragraphs>;

        interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>(i0);

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc ctTc>;

        interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc: void removeP(int)>(i0);

        return;
    }

    public org.apache.poi.xwpf.usermodel.XWPFParagraph getParagraph(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP)
    {
        java.util.Iterator $r2;
        org.apache.poi.xwpf.usermodel.XWPFTableCell r0;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r4;
        java.util.List $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP r5, $r6;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        r5 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List paragraphs>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.xwpf.usermodel.XWPFParagraph) $r3;

        $r6 = virtualinvoke r4.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP getCTP()>();

        $z1 = virtualinvoke r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    public void setText(java.lang.String)
    {
        org.apache.poi.xwpf.usermodel.XWPFRun $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc $r1, $r2, $r6;
        org.apache.poi.xwpf.usermodel.XWPFTableCell r0;
        org.apache.poi.xwpf.usermodel.XWPFParagraph $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP $r7;
        int $i0;
        java.lang.String r5;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc ctTc>;

        $i0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc: int sizeOfPArray()>();

        if $i0 != 0 goto label1;

        $r6 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc ctTc>;

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP addNewP()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc ctTc>;

        $r7 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP getPArray(int)>(0);

     label2:
        $r3 = new org.apache.poi.xwpf.usermodel.XWPFParagraph;

        specialinvoke $r3.<org.apache.poi.xwpf.usermodel.XWPFParagraph: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP,org.apache.poi.xwpf.usermodel.IBody)>($r7, r0);

        $r4 = virtualinvoke $r3.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.apache.poi.xwpf.usermodel.XWPFRun createRun()>();

        virtualinvoke $r4.<org.apache.poi.xwpf.usermodel.XWPFRun: void setText(java.lang.String)>(r5);

        return;
    }

    public org.apache.poi.xwpf.usermodel.XWPFTableRow getTableRow()
    {
        org.apache.poi.xwpf.usermodel.XWPFTableRow $r1;
        org.apache.poi.xwpf.usermodel.XWPFTableCell r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.apache.poi.xwpf.usermodel.XWPFTableRow tableRow>;

        return $r1;
    }

    public void setColor(java.lang.String)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc $r1, $r2, $r5;
        org.apache.poi.xwpf.usermodel.XWPFTableCell r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STShd$Enum $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTcPr $r6;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTShd $r7;
        java.lang.String r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc ctTc>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc: boolean isSetTcPr()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc ctTc>;

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTcPr getTcPr()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc ctTc>;

        $r6 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTcPr addNewTcPr()>();

     label2:
        $z1 = interfaceinvoke $r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTcPr: boolean isSetShd()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTcPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTShd getShd()>();

        goto label4;

     label3:
        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTcPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTShd addNewShd()>();

     label4:
        interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTShd: void setColor(java.lang.Object)>("auto");

        $r3 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STShd: org.openxmlformats.schemas.wordprocessingml.x2006.main.STShd$Enum CLEAR>;

        interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTShd: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STShd$Enum)>($r3);

        interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTShd: void setFill(java.lang.Object)>(r4);

        return;
    }

    public java.lang.String getColor()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STHexColor $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc $r1;
        org.apache.poi.xwpf.usermodel.XWPFTableCell r0;
        java.lang.String r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTcPr $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTShd $r3;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        r5 = null;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc ctTc>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTcPr getTcPr()>();

        if $r2 == null goto label1;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTcPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTShd getShd()>();

        if $r3 == null goto label1;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTShd: org.openxmlformats.schemas.wordprocessingml.x2006.main.STHexColor xgetFill()>();

        r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.STHexColor: java.lang.String getStringValue()>();

     label1:
        return r5;
    }

    public void setVerticalAlignment(org.apache.poi.xwpf.usermodel.XWPFTableCell$XWPFVertAlign)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTVerticalJc $r3;
        java.util.EnumMap $r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STVerticalJc$Enum $r7;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc $r1, $r2, $r8;
        org.apache.poi.xwpf.usermodel.XWPFTableCell r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTcPr $r9;
        org.apache.poi.xwpf.usermodel.XWPFTableCell$XWPFVertAlign r4;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        r4 := @parameter0: org.apache.poi.xwpf.usermodel.XWPFTableCell$XWPFVertAlign;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc ctTc>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc: boolean isSetTcPr()>();

        if $z0 == 0 goto label1;

        $r8 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc ctTc>;

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTcPr getTcPr()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc ctTc>;

        $r9 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTcPr addNewTcPr()>();

     label2:
        $r3 = interfaceinvoke $r9.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTcPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTVerticalJc addNewVAlign()>();

        $r5 = <org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.EnumMap alignMap>;

        $r6 = virtualinvoke $r5.<java.util.EnumMap: java.lang.Object get(java.lang.Object)>(r4);

        $r7 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.STVerticalJc$Enum) $r6;

        interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTVerticalJc: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STVerticalJc$Enum)>($r7);

        return;
    }

    public org.apache.poi.xwpf.usermodel.XWPFTableCell$XWPFVertAlign getVerticalAlignment()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTVerticalJc $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STVerticalJc$Enum $r6;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc $r1, $r3;
        java.util.HashMap $r5;
        org.apache.poi.xwpf.usermodel.XWPFTableCell r0;
        java.lang.Integer $r7;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTcPr $r2;
        org.apache.poi.xwpf.usermodel.XWPFTableCell$XWPFVertAlign r9;
        int $i0;
        java.lang.Object $r8;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        r9 = null;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc ctTc>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTcPr getTcPr()>();

        $r3 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc ctTc>;

        if $r3 == null goto label1;

        $r4 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTcPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTVerticalJc getVAlign()>();

        $r5 = <org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.HashMap stVertAlignTypeMap>;

        $r6 = interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTVerticalJc: org.openxmlformats.schemas.wordprocessingml.x2006.main.STVerticalJc$Enum getVal()>();

        $i0 = virtualinvoke $r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.STVerticalJc$Enum: int intValue()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r8 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        r9 = (org.apache.poi.xwpf.usermodel.XWPFTableCell$XWPFVertAlign) $r8;

     label1:
        return r9;
    }

    public org.apache.poi.xwpf.usermodel.XWPFParagraph insertNewParagraph(org.apache.xmlbeans.XmlCursor)
    {
        org.apache.xmlbeans.XmlCursor r1, $r9, $r11;
        org.apache.poi.xwpf.usermodel.XWPFParagraph $r7, $r16;
        int $i0, i1, i2;
        java.lang.String $r4;
        org.apache.xmlbeans.XmlObject $r5, $r12, r18;
        org.apache.xmlbeans.SchemaType $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.poi.xwpf.usermodel.XWPFTableCell r0;
        java.util.List $r8, $r10, $r15, $r17;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP r6, $r13, $r14;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        r1 := @parameter0: org.apache.xmlbeans.XmlCursor;

        $z0 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: boolean isCursorInTableCell(org.apache.xmlbeans.XmlCursor)>(r1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.apache.xmlbeans.SchemaType type>;

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $r4 = virtualinvoke $r3.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: void beginElement(java.lang.String,java.lang.String)>("p", $r4);

        interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        $r5 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        r6 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP) $r5;

        $r7 = new org.apache.poi.xwpf.usermodel.XWPFParagraph;

        specialinvoke $r7.<org.apache.poi.xwpf.usermodel.XWPFParagraph: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP,org.apache.poi.xwpf.usermodel.IBody)>(r6, r0);

        r18 = null;

     label2:
        $z1 = r18 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP;

        if $z1 != 0 goto label3;

        $z5 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean toPrevSibling()>();

        if $z5 == 0 goto label3;

        r18 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        goto label2;

     label3:
        $z2 = r18 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP;

        if $z2 == 0 goto label4;

        $r13 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP) r18;

        if $r13 != r6 goto label5;

     label4:
        $r8 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List paragraphs>;

        interfaceinvoke $r8.<java.util.List: void add(int,java.lang.Object)>(0, $r7);

        goto label6;

     label5:
        $r15 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List paragraphs>;

        $r14 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP) r18;

        $r16 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.apache.poi.xwpf.usermodel.XWPFParagraph getParagraph(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP)>($r14);

        $i0 = interfaceinvoke $r15.<java.util.List: int indexOf(java.lang.Object)>($r16);

        i1 = $i0 + 1;

        $r17 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List paragraphs>;

        interfaceinvoke $r17.<java.util.List: void add(int,java.lang.Object)>(i1, $r7);

     label6:
        i2 = 0;

        $r9 = interfaceinvoke r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean toCursor(org.apache.xmlbeans.XmlCursor)>($r9);

     label7:
        $z6 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean toPrevSibling()>();

        if $z6 == 0 goto label9;

        $r12 = interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        $z3 = $r12 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP;

        if $z3 != 0 goto label8;

        $z4 = $r12 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl;

        if $z4 == 0 goto label7;

     label8:
        i2 = i2 + 1;

        goto label7;

     label9:
        $r10 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List bodyElements>;

        interfaceinvoke $r10.<java.util.List: void add(int,java.lang.Object)>(i2, $r7);

        $r11 = interfaceinvoke r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: boolean toCursor(org.apache.xmlbeans.XmlCursor)>($r11);

        interfaceinvoke r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toEndToken()>();

        return $r7;
    }

    public org.apache.poi.xwpf.usermodel.XWPFTable insertNewTbl(org.apache.xmlbeans.XmlCursor)
    {
        org.apache.xmlbeans.XmlCursor $r11, $r13, r16;
        int $i0, i1, i2;
        java.lang.String $r3;
        org.apache.xmlbeans.XmlObject $r4, $r14, r17;
        org.apache.xmlbeans.SchemaType $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.poi.xwpf.usermodel.XWPFTable $r6, $r9;
        org.apache.poi.xwpf.usermodel.XWPFTableCell r0;
        java.util.List $r8, $r10, $r12, $r15;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl r5, $r7;
        javax.xml.namespace.QName $r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        r16 := @parameter0: org.apache.xmlbeans.XmlCursor;

        $z0 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: boolean isCursorInTableCell(org.apache.xmlbeans.XmlCursor)>(r16);

        if $z0 == 0 goto label8;

        $r1 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: org.apache.xmlbeans.SchemaType type>;

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $r3 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        interfaceinvoke r16.<org.apache.xmlbeans.XmlCursor: void beginElement(java.lang.String,java.lang.String)>("tbl", $r3);

        interfaceinvoke r16.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        $r4 = interfaceinvoke r16.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        r5 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl) $r4;

        $r6 = new org.apache.poi.xwpf.usermodel.XWPFTable;

        specialinvoke $r6.<org.apache.poi.xwpf.usermodel.XWPFTable: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl,org.apache.poi.xwpf.usermodel.IBody)>(r5, r0);

        interfaceinvoke r16.<org.apache.xmlbeans.XmlCursor: boolean removeXmlContents()>();

        r17 = null;

     label1:
        $z1 = r17 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl;

        if $z1 != 0 goto label2;

        $z5 = interfaceinvoke r16.<org.apache.xmlbeans.XmlCursor: boolean toPrevSibling()>();

        if $z5 == 0 goto label2;

        r17 = interfaceinvoke r16.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        goto label1;

     label2:
        $z2 = r17 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl;

        if $z2 != 0 goto label3;

        $r15 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List tables>;

        interfaceinvoke $r15.<java.util.List: void add(int,java.lang.Object)>(0, $r6);

        goto label4;

     label3:
        $r8 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List tables>;

        $r7 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl) r17;

        $r9 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.apache.poi.xwpf.usermodel.XWPFTable getTable(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl)>($r7);

        $i0 = interfaceinvoke $r8.<java.util.List: int indexOf(java.lang.Object)>($r9);

        i1 = $i0 + 1;

        $r10 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List tables>;

        interfaceinvoke $r10.<java.util.List: void add(int,java.lang.Object)>(i1, $r6);

     label4:
        i2 = 0;

        $r11 = interfaceinvoke r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: org.apache.xmlbeans.XmlCursor newCursor()>();

     label5:
        $z6 = interfaceinvoke $r11.<org.apache.xmlbeans.XmlCursor: boolean toPrevSibling()>();

        if $z6 == 0 goto label7;

        $r14 = interfaceinvoke $r11.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        $z3 = $r14 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP;

        if $z3 != 0 goto label6;

        $z4 = $r14 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl;

        if $z4 == 0 goto label5;

     label6:
        i2 = i2 + 1;

        goto label5;

     label7:
        $r12 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List bodyElements>;

        interfaceinvoke $r12.<java.util.List: void add(int,java.lang.Object)>(i2, $r6);

        $r13 = interfaceinvoke r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke $r13.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toEndToken()>();

        return $r6;

     label8:
        return null;
    }

    private boolean isCursorInTableCell(org.apache.xmlbeans.XmlCursor)
    {
        org.apache.xmlbeans.XmlCursor r0, $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc $r4;
        org.apache.xmlbeans.XmlObject $r2;
        org.apache.poi.xwpf.usermodel.XWPFTableCell r3;

        r3 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        r0 := @parameter0: org.apache.xmlbeans.XmlCursor;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        $r4 = r3.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc ctTc>;

        if $r2 != $r4 goto label1;

        return 1;

     label1:
        return 0;
    }

    public org.apache.poi.xwpf.usermodel.XWPFParagraph getParagraphArray(int)
    {
        java.util.List $r1, $r2;
        int i0, $i1;
        java.lang.Object $r3;
        org.apache.poi.xwpf.usermodel.XWPFTableCell r0;
        org.apache.poi.xwpf.usermodel.XWPFParagraph $r4;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List paragraphs>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i0 >= $i1 goto label1;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List paragraphs>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (org.apache.poi.xwpf.usermodel.XWPFParagraph) $r3;

        return $r4;

     label1:
        return null;
    }

    public org.apache.poi.POIXMLDocumentPart getPart()
    {
        org.apache.poi.xwpf.usermodel.XWPFTableRow $r1;
        org.apache.poi.POIXMLDocumentPart $r3;
        org.apache.poi.xwpf.usermodel.XWPFTableCell r0;
        org.apache.poi.xwpf.usermodel.XWPFTable $r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.apache.poi.xwpf.usermodel.XWPFTableRow tableRow>;

        $r2 = virtualinvoke $r1.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.apache.poi.xwpf.usermodel.XWPFTable getTable()>();

        $r3 = virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFTable: org.apache.poi.POIXMLDocumentPart getPart()>();

        return $r3;
    }

    public org.apache.poi.xwpf.usermodel.BodyType getPartType()
    {
        org.apache.poi.xwpf.usermodel.XWPFTableCell r1;
        org.apache.poi.xwpf.usermodel.BodyType $r0;

        r1 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        $r0 = <org.apache.poi.xwpf.usermodel.BodyType: org.apache.poi.xwpf.usermodel.BodyType TABLECELL>;

        return $r0;
    }

    public org.apache.poi.xwpf.usermodel.XWPFTable getTable(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl)
    {
        org.apache.poi.xwpf.usermodel.XWPFTableCell r0;
        java.util.List $r1, $r2, $r7;
        int $i0, i1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl $r5, r6;
        java.lang.Object $r3, $r8;
        org.apache.poi.xwpf.usermodel.XWPFTable $r4, $r9;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        r6 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List tables>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r2 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List getTables()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (org.apache.poi.xwpf.usermodel.XWPFTable) $r3;

        $r5 = virtualinvoke $r4.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl getCTTbl()>();

        if $r5 != r6 goto label2;

        $r7 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List getTables()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i1);

        $r9 = (org.apache.poi.xwpf.usermodel.XWPFTable) $r8;

        return $r9;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public org.apache.poi.xwpf.usermodel.XWPFTable getTableArray(int)
    {
        java.util.List $r1, $r2;
        int i0, $i1;
        java.lang.Object $r3;
        org.apache.poi.xwpf.usermodel.XWPFTableCell r0;
        org.apache.poi.xwpf.usermodel.XWPFTable $r4;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List tables>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i0 >= $i1 goto label1;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List tables>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (org.apache.poi.xwpf.usermodel.XWPFTable) $r3;

        return $r4;

     label1:
        return null;
    }

    public java.util.List getTables()
    {
        java.util.List $r1, $r2;
        org.apache.poi.xwpf.usermodel.XWPFTableCell r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List tables>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public void insertTable(int, org.apache.poi.xwpf.usermodel.XWPFTable)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc $r3, $r6;
        org.apache.poi.xwpf.usermodel.XWPFTableCell r0;
        java.util.List $r2, $r4, $r5;
        int i0, $i1, i2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl $r7, $r8;
        org.apache.poi.xwpf.usermodel.XWPFTable r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.poi.xwpf.usermodel.XWPFTable;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List bodyElements>;

        interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>(i0, r1);

        i2 = 0;

     label1:
        $r3 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc ctTc>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc: java.util.List getTblList()>();

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i2 >= $i1 goto label3;

        $r6 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc ctTc>;

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl getTblArray(int)>(i2);

        $r8 = virtualinvoke r1.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl getCTTbl()>();

        if $r7 != $r8 goto label2;

        goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r5 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List tables>;

        interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>(i2, r1);

        return;
    }

    public java.lang.String getText()
    {
        java.util.Iterator $r3;
        org.apache.poi.xwpf.usermodel.XWPFTableCell r1;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r6;
        java.util.List $r2;
        java.lang.StringBuffer $r0;
        java.lang.Object $r5;
        java.lang.String $r4, $r7;
        boolean $z0;

        r1 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List paragraphs>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.poi.xwpf.usermodel.XWPFParagraph) $r5;

        $r7 = virtualinvoke r6.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.lang.String getText()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        goto label1;

     label2:
        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String getTextRecursively()
    {
        org.apache.poi.xwpf.usermodel.XWPFTableCell r1;
        org.apache.poi.xwpf.usermodel.IBodyElement $r7;
        java.util.List $r2, $r4, $r5;
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r6;
        java.lang.String $r3;
        boolean $z0;

        r1 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i3 = 0;

     label1:
        $r2 = r1.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List bodyElements>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i3 >= $i0 goto label4;

        $r4 = r1.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List bodyElements>;

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        if i3 != $i2 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $r5 = r1.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List bodyElements>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i3);

        $r7 = (org.apache.poi.xwpf.usermodel.IBodyElement) $r6;

        specialinvoke r1.<org.apache.poi.xwpf.usermodel.XWPFTableCell: void appendBodyElementText(java.lang.StringBuffer,org.apache.poi.xwpf.usermodel.IBodyElement,boolean)>($r0, $r7, $z0);

        i3 = i3 + 1;

        goto label1;

     label4:
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    private void appendBodyElementText(java.lang.StringBuffer, org.apache.poi.xwpf.usermodel.IBodyElement, boolean)
    {
        org.apache.poi.xwpf.usermodel.IBodyElement r0, $r17;
        org.apache.poi.xwpf.usermodel.XWPFParagraph $r18;
        org.apache.poi.xwpf.usermodel.XWPFTableRow r9;
        java.lang.StringBuffer r1;
        int $i0, $i1, $i2, i3;
        java.lang.String $r4, $r19;
        org.apache.poi.xwpf.usermodel.XWPFSDT $r2;
        boolean $z0, $z1, $z2, z3, $z4, $z5, $z6;
        org.apache.poi.xwpf.usermodel.XWPFTable r5;
        java.util.Iterator $r7, $r11;
        org.apache.poi.xwpf.usermodel.XWPFTableCell r13, r15;
        java.util.List $r6, $r10, $r14;
        org.apache.poi.xwpf.usermodel.ISDTContent $r3;
        java.lang.Object $r8, $r12, $r16;

        r15 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        r1 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: org.apache.poi.xwpf.usermodel.IBodyElement;

        z3 := @parameter2: boolean;

        $z0 = r0 instanceof org.apache.poi.xwpf.usermodel.XWPFParagraph;

        if $z0 == 0 goto label01;

        $r18 = (org.apache.poi.xwpf.usermodel.XWPFParagraph) r0;

        $r19 = virtualinvoke $r18.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.lang.String getText()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        if z3 != 0 goto label12;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(9);

        goto label12;

     label01:
        $z1 = r0 instanceof org.apache.poi.xwpf.usermodel.XWPFTable;

        if $z1 == 0 goto label11;

        r5 = (org.apache.poi.xwpf.usermodel.XWPFTable) r0;

        $r6 = virtualinvoke r5.<org.apache.poi.xwpf.usermodel.XWPFTable: java.util.List getRows()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z4 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label09;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.poi.xwpf.usermodel.XWPFTableRow) $r8;

        $r10 = virtualinvoke r9.<org.apache.poi.xwpf.usermodel.XWPFTableRow: java.util.List getTableCells()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z5 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label08;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.apache.poi.xwpf.usermodel.XWPFTableCell) $r12;

        $r14 = virtualinvoke r13.<org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.List getBodyElements()>();

        i3 = 0;

     label04:
        $i0 = interfaceinvoke $r14.<java.util.List: int size()>();

        if i3 >= $i0 goto label07;

        $i1 = interfaceinvoke $r14.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        if i3 != $i2 goto label05;

        $z6 = 1;

        goto label06;

     label05:
        $z6 = 0;

     label06:
        $r16 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(i3);

        $r17 = (org.apache.poi.xwpf.usermodel.IBodyElement) $r16;

        specialinvoke r15.<org.apache.poi.xwpf.usermodel.XWPFTableCell: void appendBodyElementText(java.lang.StringBuffer,org.apache.poi.xwpf.usermodel.IBodyElement,boolean)>(r1, $r17, $z6);

        i3 = i3 + 1;

        goto label04;

     label07:
        goto label03;

     label08:
        goto label02;

     label09:
        if z3 != 0 goto label10;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

     label10:
        goto label12;

     label11:
        $z2 = r0 instanceof org.apache.poi.xwpf.usermodel.XWPFSDT;

        if $z2 == 0 goto label12;

        $r2 = (org.apache.poi.xwpf.usermodel.XWPFSDT) r0;

        $r3 = virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFSDT: org.apache.poi.xwpf.usermodel.ISDTContent getContent()>();

        $r4 = interfaceinvoke $r3.<org.apache.poi.xwpf.usermodel.ISDTContent: java.lang.String getText()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        if z3 != 0 goto label12;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(9);

     label12:
        return;
    }

    public org.apache.poi.xwpf.usermodel.XWPFTableCell getTableCell(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc r0;
        org.apache.xmlbeans.XmlCursor $r1;
        org.apache.poi.xwpf.usermodel.XWPFTableCell r6, $r9;
        org.apache.poi.xwpf.usermodel.XWPFTableRow $r8;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl r5;
        org.apache.xmlbeans.XmlObject $r2, $r4;
        boolean $z0, $z1;
        org.apache.poi.xwpf.usermodel.XWPFTable $r7;

        r6 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        r0 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc;

        $r1 = interfaceinvoke r0.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        $z0 = $r2 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow;

        if $z0 != 0 goto label1;

        return null;

     label1:
        r3 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow) $r2;

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        $r4 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        $z1 = $r4 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl;

        if $z1 != 0 goto label2;

        return null;

     label2:
        r5 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl) $r4;

        $r7 = virtualinvoke r6.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.apache.poi.xwpf.usermodel.XWPFTable getTable(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl)>(r5);

        if $r7 != null goto label3;

        return null;

     label3:
        $r8 = virtualinvoke $r7.<org.apache.poi.xwpf.usermodel.XWPFTable: org.apache.poi.xwpf.usermodel.XWPFTableRow getRow(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow)>(r3);

        if $r8 != null goto label4;

        return null;

     label4:
        $r9 = virtualinvoke $r8.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.apache.poi.xwpf.usermodel.XWPFTableCell getTableCell(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc)>(r0);

        return $r9;
    }

    public org.apache.poi.xwpf.usermodel.XWPFDocument getXWPFDocument()
    {
        org.apache.poi.xwpf.usermodel.XWPFTableCell r0;
        org.apache.poi.xwpf.usermodel.IBody $r1;
        org.apache.poi.xwpf.usermodel.XWPFDocument $r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTableCell;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTableCell: org.apache.poi.xwpf.usermodel.IBody part>;

        $r2 = interfaceinvoke $r1.<org.apache.poi.xwpf.usermodel.IBody: org.apache.poi.xwpf.usermodel.XWPFDocument getXWPFDocument()>();

        return $r2;
    }

    static void <clinit>()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STVerticalJc$Enum $r3, $r6, $r9, $r12;
        java.util.HashMap $r13, $r14, $r17, $r20, $r23;
        java.lang.Integer $r15, $r18, $r21, $r24;
        org.apache.poi.xwpf.usermodel.XWPFTableCell$XWPFVertAlign $r2, $r5, $r8, $r11, $r16, $r19, $r22, $r25;
        java.util.EnumMap $r0, $r1, $r4, $r7, $r10;

        $r0 = new java.util.EnumMap;

        specialinvoke $r0.<java.util.EnumMap: void <init>(java.lang.Class)>(class "Lorg/apache/poi/xwpf/usermodel/XWPFTableCell$XWPFVertAlign;");

        <org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.EnumMap alignMap> = $r0;

        $r1 = <org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.EnumMap alignMap>;

        $r2 = <org.apache.poi.xwpf.usermodel.XWPFTableCell$XWPFVertAlign: org.apache.poi.xwpf.usermodel.XWPFTableCell$XWPFVertAlign TOP>;

        $r3 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STVerticalJc$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STVerticalJc$Enum forInt(int)>(1);

        virtualinvoke $r1.<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>($r2, $r3);

        $r4 = <org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.EnumMap alignMap>;

        $r5 = <org.apache.poi.xwpf.usermodel.XWPFTableCell$XWPFVertAlign: org.apache.poi.xwpf.usermodel.XWPFTableCell$XWPFVertAlign CENTER>;

        $r6 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STVerticalJc$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STVerticalJc$Enum forInt(int)>(2);

        virtualinvoke $r4.<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>($r5, $r6);

        $r7 = <org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.EnumMap alignMap>;

        $r8 = <org.apache.poi.xwpf.usermodel.XWPFTableCell$XWPFVertAlign: org.apache.poi.xwpf.usermodel.XWPFTableCell$XWPFVertAlign BOTH>;

        $r9 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STVerticalJc$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STVerticalJc$Enum forInt(int)>(3);

        virtualinvoke $r7.<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>($r8, $r9);

        $r10 = <org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.EnumMap alignMap>;

        $r11 = <org.apache.poi.xwpf.usermodel.XWPFTableCell$XWPFVertAlign: org.apache.poi.xwpf.usermodel.XWPFTableCell$XWPFVertAlign BOTTOM>;

        $r12 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STVerticalJc$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STVerticalJc$Enum forInt(int)>(4);

        virtualinvoke $r10.<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>($r11, $r12);

        $r13 = new java.util.HashMap;

        specialinvoke $r13.<java.util.HashMap: void <init>()>();

        <org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.HashMap stVertAlignTypeMap> = $r13;

        $r14 = <org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.HashMap stVertAlignTypeMap>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r16 = <org.apache.poi.xwpf.usermodel.XWPFTableCell$XWPFVertAlign: org.apache.poi.xwpf.usermodel.XWPFTableCell$XWPFVertAlign TOP>;

        virtualinvoke $r14.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r16);

        $r17 = <org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.HashMap stVertAlignTypeMap>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r19 = <org.apache.poi.xwpf.usermodel.XWPFTableCell$XWPFVertAlign: org.apache.poi.xwpf.usermodel.XWPFTableCell$XWPFVertAlign CENTER>;

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r19);

        $r20 = <org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.HashMap stVertAlignTypeMap>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r22 = <org.apache.poi.xwpf.usermodel.XWPFTableCell$XWPFVertAlign: org.apache.poi.xwpf.usermodel.XWPFTableCell$XWPFVertAlign BOTH>;

        virtualinvoke $r20.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r22);

        $r23 = <org.apache.poi.xwpf.usermodel.XWPFTableCell: java.util.HashMap stVertAlignTypeMap>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r25 = <org.apache.poi.xwpf.usermodel.XWPFTableCell$XWPFVertAlign: org.apache.poi.xwpf.usermodel.XWPFTableCell$XWPFVertAlign BOTTOM>;

        virtualinvoke $r23.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r25);

        return;
    }
}
